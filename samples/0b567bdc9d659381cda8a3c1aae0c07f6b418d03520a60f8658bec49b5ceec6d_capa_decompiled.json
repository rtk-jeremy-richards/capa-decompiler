{
    "00401000": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401000(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    char *arg_ch;\n    uint arg_10h;\n    char *in_stack_fffff968;\n    uchar *puVar4;\n    char *pcStack1668;\n    char *pcStack1664;\n    char *pcStack1660;\n    char *pcStack1656;\n    char *pcStack1652;\n    char *pcStack1648;\n    char *pcStack1644;\n    char *pcStack1640;\n    uint uStack1636;\n    char *pcStack1632;\n    uint uStack1628;\n    char *pcStack1624;\n    uint uStack1620;\n    char *pcStack1616;\n    uint uStack1612;\n    char *pcStack1608;\n    uchar auStack1404 [248];\n    uchar uStack1156;\n    uchar auStack1155 [7];\n    uchar uStack1148;\n    char acStack1140 [20];\n    char acStack1120 [16];\n    uchar auStack1104 [212];\n    uchar uStack892;\n    uchar auStack891 [15];\n    char acStack876 [20];\n    uchar auStack856 [16];\n    uchar auStack840 [212];\n    uchar uStack628;\n    char acStack620 [8];\n    uchar auStack612 [20];\n    uchar auStack592 [16];\n    uchar auStack576 [220];\n    uchar auStack356 [8];\n    uchar auStack348 [308];\n    uint uStack40;\n    \n    // [00] -r-x section size 98304 named .text\n    *0x4196ac = 1;\n    iVar3 = 0;\n    pcStack1608 = NULL;\n    uStack1612 = 0x401023;\n    fcn.0040d980();\n    if (unaff_retaddr < 2) {\n        bVar1 = false;\n        iVar2 = 0x33;\n        do {\n            if (iVar2 == 0x31) {\n                uStack1612 = 0xf;\n                pcStack1616 = 0x401062;\n                fcn.0040da50();\n                pcStack1616 = 0x41c50c;\n                uStack1620 = 0x40106c;\n                fcn.0040da70();\n                uStack1620 = 7;\n                pcStack1624 = 0x401073;\n                fcn.0040da50();\n                pcStack1624 = 0x41c52c;\n                uStack1628 = 0x40107d;\n                fcn.0040da70();\n                uStack1628 = 0xf;\n                pcStack1632 = 0x401084;\n                fcn.0040da50();\n                pcStack1632 = 0x41c538;\n                uStack1636 = 0x40108e;\n                fcn.0040da70();\n                uStack1636 = 7;\n                pcStack1640 = 0x401095;\n                fcn.0040da50();\n                pcStack1640 = 0x41c544;\n                pcStack1644 = 0x40109f;\n                fcn.0040da70();\n                pcStack1644 = 0x41c560;\n                pcStack1648 = 0x4010a9;\n                fcn.0040da70();\n                pcStack1648 = \"Compression Examples:\\n\";\n                pcStack1652 = 0x4010b3;\n                fcn.0040da70();\n                pcStack1652 = 0x41c5c4;\n                pcStack1656 = 0x4010bd;\n                fcn.0040da70();\n                pcStack1656 = \"To compress all the files in the c:\\\\windows directory.\\n\";\n                pcStack1660 = 0x4010c7;\n                fcn.0040da70();\n                pcStack1660 = \"      ICOMP c:\\\\windows\\\\*.* win.z\\n\\n\";\n                pcStack1664 = 0x4010d1;\n                fcn.0040da70();\n                pcStack1664 = 0x41c62c;\n                pcStack1668 = 0x4010db;\n                fcn.0040da70();\n                pcStack1668 = \"To compress all files in c:\\\\windows directory, including sub directories.\\n\";\n                fcn.0040da70();\n                fcn.0040da70(\"      ICOMP c:\\\\windows\\\\*.* win.z -i\\n\\n\");\n                fcn.0040da70(0x41c6ac);\n                fcn.0040da70(\"To compress files in c:\\\\myapp\\\\bin (including sub directories) to the BIN\\n\");\n                fcn.0040da70(\"sub directory of an existing compressed library, myapp.z.\\n\");\n                in_stack_fffff968 = \"      ICOMP c:\\\\myapp\\\\bin\\\\*.* myapp.z BIN -i\\n\";\n                fcn.0040da70();\n                fcn.0040da70(0x41c770);\n                fcn.0040da50(0xf);\n                fcn.0040da70(0x41c778);\n                fcn.0040da50(7);\n                fcn.0040da70(\"to see Decompression Examples. Press \");\n                fcn.0040da50(0xf);\n                fcn.0040da70(0x41c7a4);\n                fcn.0040da50(7);\n                pcStack1608 = 0x41c7a8;\ncode_r0x004015c8:\n                uStack1612 = 0x4015cd;\n                fcn.0040da70();\n                uStack1612 = 0x4015d2;\n                iVar2 = fcn.0041497d();\n            }\n            else {\n                if (iVar2 == 0x32) {\n                    uStack1612 = 0xf;\n                    pcStack1616 = 0x40116c;\n                    fcn.0040da50();\n                    pcStack1616 = 0x41c7c0;\n                    uStack1620 = 0x401176;\n                    fcn.0040da70();\n                    uStack1620 = 7;\n                    pcStack1624 = 0x40117d;\n                    fcn.0040da50();\n                    pcStack1624 = 0x41c7e0;\n                    uStack1628 = 0x401187;\n                    fcn.0040da70();\n                    uStack1628 = 0xf;\n                    pcStack1632 = 0x40118e;\n                    fcn.0040da50();\n                    pcStack1632 = 0x41c7ec;\n                    uStack1636 = 0x401198;\n                    fcn.0040da70();\n                    uStack1636 = 7;\n                    pcStack1640 = 0x40119f;\n                    fcn.0040da50();\n                    pcStack1640 = 0x41c7f8;\n                    pcStack1644 = 0x4011a9;\n                    fcn.0040da70();\n                    pcStack1644 = 0x41c814;\n                    pcStack1648 = 0x4011b3;\n                    fcn.0040da70();\n                    pcStack1648 = \"Decompression Examples:\\n\";\n                    pcStack1652 = 0x4011bd;\n                    fcn.0040da70();\n                    pcStack1652 = \"Example 1:\\n\";\n                    pcStack1656 = 0x4011c7;\n                    fcn.0040da70();\n                    pcStack1656 = \"To decompress all the files (sub directories not included) from myapp.z to\\n\";\n                    pcStack1660 = 0x4011d1;\n                    fcn.0040da70();\n                    pcStack1660 = 0x41c8d4;\n                    pcStack1664 = 0x4011db;\n                    fcn.0040da70();\n                    pcStack1664 = \"      ICOMP myapp.z *.* -d\\n\\n\";\n                    pcStack1668 = 0x4011e5;\n                    fcn.0040da70();\n                    pcStack1668 = \"Example 2:\\n\";\n                    fcn.0040da70();\n                    fcn.0040da70(\"To decompress all files (including sub directories) from myapp.z to\\n\");\n                    fcn.0040da70(\"the current directory.\\n\");\n                    fcn.0040da70(\"      ICOMP myapp.z *.* -d -i\\n\\n\");\n                    fcn.0040da70(\"Example 3:\\n\");\n                    in_stack_fffff968 =\n                         \"To decompress all files (including sub directories) from myapp.z to c:\\\\myapp.\\n\";\n                    fcn.0040da70();\n                    fcn.0040da70(\"      ICOMP myapp.z c:\\\\myapp\\\\*.* -d -i\\n\\n\");\n                    fcn.0040da70(\"Example 4:\\n\");\n                    fcn.0040da70(\"To decompress all files (including sub directories) in the BIN directory\\n\");\n                    fcn.0040da70(\"of myapp.z to c:\\\\myapp\\\\bin.\\n\");\n                    fcn.0040da70(\"      ICOMP myapp.z c:\\\\myapp\\\\bin\\\\*.* BIN -d -i\\n\");\n                    fcn.0040da70(\"Press \");\n                    fcn.0040da50(0xf);\n                    fcn.0040da70(0x41cad0);\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"to see Compression Examples. Press \");\n                    fcn.0040da50(0xf);\n                    fcn.0040da70(0x41caf8);\n                    fcn.0040da50(7);\n                    pcStack1608 = \"to see Main Options.\\n\";\n                    goto code_r0x004015c8;\n                }\n                if (iVar2 == 0x33) {\n                    uStack1612 = 0xf;\n                    pcStack1616 = 0x4012a8;\n                    fcn.0040da50();\n                    pcStack1616 = 0x41c060;\n                    uStack1620 = 0x4012b2;\n                    fcn.0040da70();\n                    uStack1620 = 7;\n                    pcStack1624 = 0x4012b9;\n                    fcn.0040da50();\n                    pcStack1624 = 0x41c080;\n                    uStack1628 = 0x4012c3;\n                    fcn.0040da70();\n                    uStack1628 = 0xf;\n                    pcStack1632 = 0x4012ca;\n                    fcn.0040da50();\n                    pcStack1632 = 0x41c08c;\n                    uStack1636 = 0x4012d4;\n                    fcn.0040da70();\n                    uStack1636 = 7;\n                    pcStack1640 = 0x4012db;\n                    fcn.0040da50();\n                    pcStack1640 = 0x41c098;\n                    pcStack1644 = 0x4012e5;\n                    fcn.0040da70();\n                    pcStack1644 = 0x41c0b4;\n                    pcStack1648 = 0x4012ef;\n                    fcn.0040da70();\n                    pcStack1648 = \"Usage: \";\n                    pcStack1652 = 0x4012f9;\n                    fcn.0040da70();\n                    pcStack1652 = 0xf;\n                    pcStack1656 = 0x401300;\n                    fcn.0040da50();\n                    pcStack1656 = \"Compress \";\n                    pcStack1660 = 0x40130a;\n                    fcn.0040da70();\n                    pcStack1660 = 0x3;\n                    pcStack1664 = 0x401311;\n                    fcn.0040da50();\n                    pcStack1664 = \"path\\\\input path\\\\output [pathinlib]\";\n                    pcStack1668 = 0x40131b;\n                    fcn.0040da70();\n                    pcStack1668 = 0x7;\n                    fcn.0040da50();\n                    fcn.0040da70(0x41c138);\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"Options\\n\");\n                    fcn.0040da50(7);\n                    in_stack_fffff968 = \"where\\n\";\n                    fcn.0040da70();\n                    fcn.0040da50(3);\n                    fcn.0040da70(\"  input/output\");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\" - can include wildcard characters\\n\");\n                    fcn.0040da50(3);\n                    fcn.0040da70(\"  path        \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\" - absolute and current paths are supported, not relative path.\\n\");\n                    fcn.0040da50(3);\n                    fcn.0040da70(\"  pathinlib   \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\" - file path in the compresssed library.\\n\");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"  Options: \\n\");\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"    -c  \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"(Default) Compress source files. \\n\");\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"    -d  \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"Decompress files in the compressed library.\\n\");\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"    -dt \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"Decompression Test mode. \\n\");\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"    -h  \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"Hide the percent complete bar. \\n\");\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"    -i  \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"Include subdirectories. \\n\");\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"    -l  \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"List files compressed in \\'output\\'. \\n\");\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"    -o  \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"Overwrite all files without asking. \\n\");\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"    -ox \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"Overwrite based on newer date/time only.\\n\");\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"    -r  \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"Remove files from the compresssed library.\\n\");\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"    -sh \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"(Default) Highest compression. \\n\");\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"    -sl \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"Highest speed, lowest compression. \\n\");\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"    -sm \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"Medium compression.  \\n\");\n                    fcn.0040da50(2);\n                    fcn.0040da70(\"    -sn \");\n                    fcn.0040da50(7);\n                    fcn.0040da70(\"No compression.  Data will not be compressed in this mode.\\n\");\n                    fcn.0040da70(0x41c4b8);\n                    fcn.0040da50(0xf);\n                    fcn.0040da70(0x41c4c0);\n                    fcn.0040da50(7);\n                    fcn.0040da70(0x41c4c4);\n                    fcn.0040da50(0xf);\n                    fcn.0040da70(0x41c4e8);\n                    fcn.0040da50(7);\n                    pcStack1608 = \"to see Decompression Examples.\\n\";\n                    goto code_r0x004015c8;\n                }\n                bVar1 = true;\n            }\n        } while (!bVar1);\n        uStack1612 = 0x4015df;\n        fcn.0040da10();\n        uStack1612 = 0xffffffff;\n        pcStack1616 = 0x4015e6;\n        fcn.00414880();\n    }\n    uStack1612 = 0xf;\n    pcStack1616 = 0x4015f0;\n    fcn.0040da50();\n    pcStack1616 = \"InstallShield File Compressor\\n\";\n    uStack1620 = 0x4015fa;\n    fcn.0040da70();\n    uStack1620 = 7;\n    pcStack1624 = 0x401601;\n    fcn.0040da50();\n    pcStack1624 = \"Version \";\n    uStack1628 = 0x40160b;\n    fcn.0040da70();\n    uStack1628 = 0xf;\n    pcStack1632 = 0x401612;\n    fcn.0040da50();\n    pcStack1632 = \"3.00.062\";\n    uStack1636 = 0x40161c;\n    fcn.0040da70();\n    uStack1636 = 7;\n    pcStack1640 = 0x401623;\n    fcn.0040da50();\n    pcStack1640 = \" for Microsoft Windows 95\\n\";\n    pcStack1644 = 0x40162d;\n    fcn.0040da70();\n    pcStack1644 = \"Copyright(c) 1990-1995 Stirling Technologies, Inc. All Rights Reserved.\\n\";\n    pcStack1648 = 0x401637;\n    fcn.0040da70();\n    pcStack1648 = \"Type ICOMP for more information.\\n\\n\";\n    pcStack1652 = 0x401641;\n    fcn.0040da70();\n    pcStack1652 = NULL;\n    pcStack1656 = 0x401648;\n    fcn.0040db80();\n    pcStack1664 = &stack0xfffff99c;\n    pcStack1668 = &stack0xfffff998;\n    pcStack1656 = uStack40;\n    puVar4 = &stack0xfffffcb8;\n    fcn.004050f0(&stack0xfffffbb0, puVar4, &stack0xfffffdc0);\n    if (*0x41c044 != 0) {\n        in_stack_fffff968 = 0x419690;\n        iVar2 = fcn.004067d0(0x419690, 0x41c048);\n        if (iVar2 == 0) {\n            iVar3 = -0x36;\n        }\n    }\n    if (iVar3 == 0) {\n        if ((puVar4 & 0x400000) == 0) {\n            if (((puVar4 & 0x20000) == 0) && ((puVar4 & 0x80000) == 0)) {\n                if ((puVar4 & 0x10000) == 0) {\n                    if ((puVar4 & 0x40000) == 0) goto code_r0x00401878;\n                    auStack612[0] = 0;\n                    fcn.0040ed40(&stack0xfffffb8c, &stack0xfffffd9c);\n                    if (acStack620[0] != '\\0') {\n                        iVar3 = sub.KERNEL32.dll_lstrcmpA(&stack0xfffffd94, 0x41cbdc);\n                        if (iVar3 == 0) {\n                            uStack628 = 0;\n                            sub.KERNEL32.dll_lstrcpyA(&stack0xfffffb7c, &stack0xfffffb7d);\n                        }\n                        else {\n                            fcn.0040ee00(&stack0xfffffb7c, &stack0xfffffb7c);\n                        }\n                    }\n                    in_stack_fffff968 = &stack0xfffffba0;\n                    iVar3 = fcn.00402480(in_stack_fffff968, &stack0xfffffca8, &stack0xfffffdb0, pcStack1656, 0);\n                }\n                else if ((puVar4 & 0x40000) == 0) {\n                    if ((acStack876[0] == '\\0') && (acStack1140[0] != '\\0')) {\n                        sub.KERNEL32.dll_lstrcpyA(&stack0xfffffc94, &stack0xfffffb8c);\n                        uStack1148 = 0;\n                    }\n                    in_stack_fffff968 = &stack0xfffffb8c;\n                    iVar3 = fcn.00401dd0();\n                }\n                else {\ncode_r0x00401878:\n                    iVar3 = -0x19;\n                }\n            }\n            else {\n                if ((puVar4 & 0x50000) != 0) goto code_r0x00401878;\n                fcn.0040ed40(&stack0xfffffc94, &stack0xfffffea4);\n                iVar3 = sub.KERNEL32.dll_lstrcmpA(&stack0xfffffe9c, 0x41cbd8);\n                if (iVar3 == 0) {\n                    sub.KERNEL32.dll_lstrcpyA(&stack0xfffffc84, &stack0xfffffc85);\n                }\n                in_stack_fffff968 = &stack0xfffffba0;\n                iVar3 = fcn.00402120(in_stack_fffff968, &stack0xfffffca8, &stack0xfffffdb0, pcStack1656, 0);\n                fcn.00405be0();\n            }\n        }\n        else {\n            iVar3 = fcn.00405440(&stack0xfffffb8c);\n        }\n    }\n    // switch table (23 cases) at 0x401c78\n    switch(iVar3) {\n    case 0:\n    case 1:\n    case 5:\n    case 6:\n        goto code_r0x0040199e;\n    case 2:\n        fcn.004147f7(&stack0xfffffa84, \"Empty compressed library has been removed.\", in_stack_fffff968);\n        arg_10h = 2;\n        arg_ch = 0x41cc0c;\n        break;\n    case 4:\n        fcn.004147f7(&stack0xfffffa84, \"Compressed library has not been changed.\", in_stack_fffff968);\n        arg_10h = 4;\n        arg_ch = \"\\nCOMPRESS: Warning C%d: %s\\n\";\n        break;\n    case -0x35:\n        fcn.004147f7(&stack0xfffffa84, \"Password is not found in the library.\", in_stack_fffff968);\n        arg_10h = 0x99;\n        arg_ch = 0x41d120;\n        break;\n    case -0x34:\n        fcn.004147f7(&stack0xfffffa84, \"Wrong password: %s. Password specified does not match the one in the library.\", \n                     0x419690);\n        arg_10h = 0x9a;\n        arg_ch = 0x41d18c;\n        break;\n    default:\n        fcn.004147f7(&stack0xfffffa84, \"Unable to complete operation!  Please check source/destination files and disks.\"\n                     , in_stack_fffff968);\n        arg_10h = 0x65;\n        arg_ch = \"\\nCOMPRESS: Error C%d: %s\\n\";\n        break;\n    case -0x31:\n        fcn.004147f7(&stack0xfffffa84, \"File must be split with -C option: %s\", in_stack_fffff968);\n        fcn.004147f7(&stack0xfffff97c, 0x41d078, 0x95);\n        fcn.00414941(&stack0xfffff97c);\n    case -0x36:\n        fcn.004147f7(&stack0xfffffa84, \"Invalid password: %s. Password must be in range of 0 to 2,147,483,647.\", \n                     0x419690);\n        arg_10h = 0x98;\n        arg_ch = 0x41d0dc;\n        break;\n    case -0x26:\n        fcn.004147f7(&stack0xfffffa84, \"Not enough disk space on target drive.\", in_stack_fffff968);\n        arg_10h = 0x8a;\n        arg_ch = 0x41d034;\n        break;\n    case -0x1e:\n        fcn.004147f7(&stack0xfffffa84, \"Invalid operation on a split file.\", in_stack_fffff968);\n        arg_10h = 0x82;\n        arg_ch = 0x41cff0;\n        break;\n    case -0x19:\n        fcn.004147f7(&stack0xfffffa84, \"Invalid option specified. Please type \\'compress\\' for more information.\", \n                     in_stack_fffff968);\n        arg_10h = 0x7d;\n        arg_ch = 0x41cfb0;\n        break;\n    case -0x15:\n        fcn.004147f7(&stack0xfffffa84, \"Compressed file is from a previous version of COMPRESS.EXE: %s\", 0x4196c0);\n        arg_10h = 0x79;\n        arg_ch = 0x41cf4c;\n        break;\n    case -0x14:\n        fcn.004147f7(&stack0xfffffa84, \"Output is not a compressed file: %s\", 0x4196c0);\n        arg_10h = 0x78;\n        arg_ch = 0x41cef0;\n        break;\n    case -0xb:\n        fcn.004147f7(&stack0xfffffa84, \"Unable to create path: %s\", 0x4196c0);\n        arg_10h = 0x6f;\n        arg_ch = 0x41ceb0;\n        break;\n    case -10:\n        fcn.004147f7(&stack0xfffffa84, \"Invalid target location specified: %s.\", 0x4196c0);\n        arg_10h = 0x6e;\n        arg_ch = 0x41ce78;\n        break;\n    case -9:\n        fcn.004147f7(&stack0xfffffa84, \"Source and destination files conflit, they cannot be the same.\", \n                     in_stack_fffff968);\n        arg_10h = 0x6d;\n        arg_ch = 0x41ce34;\n        break;\n    case -7:\n        fcn.004147f7(&stack0xfffffa84, \"Unable to read input file header: %s\", 0x4196c0);\n        arg_10h = 0x6b;\n        arg_ch = 0x41cdd8;\n        break;\n    case -6:\n        fcn.004147f7(&stack0xfffffa84, \"Internal error, unable to allocate memory.\", in_stack_fffff968);\n        arg_10h = 0x6a;\n        arg_ch = 0x41cd94;\n        break;\n    case -5:\n        fcn.004147f7(&stack0xfffffa84, \"Input is not a compressed file: %s\", 0x4196c0);\n        arg_10h = 0x69;\n        arg_ch = 0x41cd4c;\n        break;\n    case -4:\n        fcn.004147f7(&stack0xfffffa84, \"Unable to write to output file: %s\", 0x4196c0);\n        arg_10h = 0x68;\n        arg_ch = 0x41cd0c;\n        break;\n    case -3:\n        fcn.004147f7(&stack0xfffffa84, \"Unable to open output file: %s\", 0x4196c0);\n        arg_10h = 0x67;\n        arg_ch = 0x41cccc;\n        break;\n    case -2:\n        fcn.004147f7(&stack0xfffffa84, \"Unable to open input file: %s\", 0x4196c0);\n        arg_10h = 0x66;\n        arg_ch = 0x41cc90;\n    }\n    fcn.004147f7(&stack0xfffff97c, arg_ch, arg_10h);\n    fcn.00414941(&stack0xfffff97c);\ncode_r0x0040199e:\n    fcn.0040da10();\n    fcn.00414880(iVar3);\n    return;\n}\n",
        "token_count": 6645
    },
    "00401dd0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00401dd0(char *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    char *unaff_retaddr;\n    char *pcVar4;\n    uint uVar5;\n    char *pcStack88;\n    int32_t iStack84;\n    uint uStack80;\n    uint *puStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    char *pcStack52;\n    char *pcStack44;\n    uint uStack40;\n    uint uStack32;\n    uint uStack28;\n    \n    iVar3 = 0;\n    uStack28 = 2;\n    uStack32 = 0x401de0;\n    iVar1 = fcn.0040dbf0();\n    if (iVar1 == 0) {\n        return -6;\n    }\n    if (*param_1 == '\\0') {\n        return -3;\n    }\n    if (*unaff_retaddr == '\\0') {\n        uStack32 = 0x41d214;\n        uStack40 = 0x401e1f;\n        sub.KERNEL32.dll_lstrcpyA();\n    }\n    *0x41c038 = 0;\n    uStack40 = param_2;\n    *0x41c030 = 0;\n    pcStack44 = param_1;\n    pcStack52 = param_1;\n    iStack60 = 0x401e43;\n    iVar1 = fcn.00405790();\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    iStack60 = *0x41c004 + 0x559;\n    iStack64 = *0x41c004 + 0x24a;\n    iStack68 = *0x41c004 + 0x34f;\n    iStack72 = 0x401e71;\n    fcn.0040ac80();\n    iStack72 = *0x41c004 + 0x24a;\n    puStack76 = 0x401e81;\n    iVar1 = fcn.0040f5f0();\n    if (iVar1 != 0) {\n        puStack76 = NULL;\n        uStack80 = 0x401e8c;\n        fcn.00405b60();\n        return -0xf;\n    }\n    puStack76 = *0x41c004 + 0x10;\n    uStack80 = 0x401ea9;\n    iStack60 = fcn.0040f5f0();\n    if ((*0x419684 & 2) != 0) {\n        (*0x41c004)[0xc] = 0;\n        uStack80 = (*0x41c004)[1];\n        iStack84 = 0x401ed0;\n        uVar2 = fcn.0040e7c0();\n        (*0x41c004)[9] = uVar2;\n    }\n    iStack84 = iStack64;\n    pcStack88 = param_1;\n    iVar1 = fcn.00405c10();\n    if (iVar1 != 0) {\n        sub.KERNEL32.dll_lstrcpyA(0x4196c0, unaff_retaddr);\n        fcn.00405b60(0);\n        return iVar1;\n    }\n    *0x4196c0 = 0;\n    uVar2 = 3;\n    iVar1 = fcn.00406cf0(**0x41c004, param_1, 3, 1, (*0x41c050 == 0) - 1U & 2);\n    if ((iVar1 != 0) && (iVar1 != 3)) {\n        if (iVar1 == -0x29) {\n            iVar1 = -0x14;\n        }\n        sub.KERNEL32.dll_lstrcpyA(0x4196c0, param_1);\n        fcn.00405b60(0);\n        return iVar1;\n    }\n    uVar5 = 4;\n    fcn.00407410(**0x41c004, 4, &stack0xffffffa8);\n    (*0x41c004)[8] = uVar2;\n    fcn.00407700(**0x41c004, 0x1f, (*0x41c004)[0xd]);\n    if ((iVar1 == 3) && (iVar3 = fcn.00403d40(unaff_retaddr, param_1, uVar5),  iVar3 != 0)) {\n        if (iVar3 != 4) {\n            if (iVar3 != 2) {\n                fcn.00406a70(**0x41c004);\n                if ((*(*0x41c004 + 0x559) != '\\0') &&\n                   (iVar1 = sub.KERNEL32.dll_lstrcmpiA(*0x41c004 + 0x559, param_1),  iVar1 != 0)) {\n                    fcn.0040c4f0(*0x41c004 + 0x559);\n                }\n                fcn.00405b60(0);\n                return iVar3;\n            }\n            goto code_r0x0040200b;\n        }\n    }\n    else {\ncode_r0x0040200b:\n        if (iVar3 != 4) goto code_r0x0040206c;\n    }\n    iVar1 = fcn.004111c0((*0x41c004)[6]);\n    if (iVar1 == 0) {\n        fcn.00406a70(**0x41c004);\n        if ((*(*0x41c004 + 0x559) != '\\0') &&\n           (iVar1 = sub.KERNEL32.dll_lstrcmpiA(*0x41c004 + 0x559, param_1),  iVar1 != 0)) {\n            fcn.0040c4f0(*0x41c004 + 0x559);\n        }\n        fcn.00405b60(0);\n        return 0;\n    }\ncode_r0x0040206c:\n    pcVar4 = param_1;\n    iVar1 = fcn.004027d0(param_1);\n    if (iVar1 == 0) {\n        if (*0x41c044 != 0) {\n            pcVar4 = *0x41c048;\n            fcn.00407700(**0x41c004, 0x2c, *0x41c048);\n        }\n        iVar1 = fcn.004068f0(pcVar4, **0x41c004);\n    }\n    fcn.00406a70(**0x41c004);\n    if (iVar1 == 0) {\n        if ((*(*0x41c004 + 0x559) != '\\0') &&\n           (iVar3 = sub.KERNEL32.dll_lstrcmpiA(*0x41c004 + 0x559, param_1),  iVar3 != 0)) {\n            fcn.0040c4f0(param_1);\n            fcn.0040d070(*0x41c004 + 0x559, param_1);\n        }\n    }\n    else if (*(*0x41c004 + 0x559) == '\\0') {\n        fcn.0040c4f0(param_1);\n    }\n    else {\n        fcn.0040c4f0(*0x41c004 + 0x559);\n    }\n    fcn.00405b60(0);\n    return iVar1;\n}\n",
        "token_count": 1668
    },
    "00402120": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00402120(char *param_1, uint param_2)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    char *unaff_retaddr;\n    uint uStack680;\n    uchar *puStack676;\n    uint uStack672;\n    uint uStack668;\n    uchar *puStack664;\n    uint uStack660;\n    uint uStack652;\n    int32_t iStack648;\n    uint uStack644;\n    uchar *puStack640;\n    char *pcStack636;\n    int32_t iStack632;\n    int32_t iStack628;\n    int32_t iStack624;\n    uchar *puStack620;\n    uchar *puStack616;\n    uint uStack612;\n    uchar *puStack608;\n    uint *puStack604;\n    uchar *puStack600;\n    uchar *puStack596;\n    int32_t iStack592;\n    uint *puStack588;\n    char *pcStack584;\n    char *pcStack580;\n    uint uStack576;\n    char *pcStack572;\n    char *pcStack568;\n    char *pcStack564;\n    uint uStack560;\n    uint uStack556;\n    uint uStack144;\n    uint8_t uStack125;\n    \n    uStack556 = 1;\n    uStack560 = 0x402131;\n    iVar2 = fcn.0040dbf0();\n    if (iVar2 == 0) {\n        iVar2 = -6;\n    }\n    else {\n        *0x4196c0 = 0;\n        if (*unaff_retaddr == '\\0') {\n            iVar2 = -2;\n        }\n        else {\n            if (*param_1 == '\\0') {\n                uStack560 = 0x41d218;\n                pcStack564 = param_1;\n                pcStack568 = 0x402173;\n                sub.KERNEL32.dll_lstrcpyA();\n            }\n            *0x41c038 = 1;\n            *0x41c030 = 0;\n            *0x41c00c = 0;\n            pcStack568 = 0x40218e;\n            iVar2 = fcn.0040d930();\n            if (iVar2 == 0) {\n                pcStack568 = param_2;\n                pcStack572 = param_1;\n                pcStack580 = param_1;\n                puStack588 = 0x4021d7;\n                iVar2 = fcn.00405790();\n                if (iVar2 == 0) {\n                    puStack588 = *0x41c004 + 0x10;\n                    iStack592 = 0x4021ed;\n                    iVar2 = fcn.0040f5f0();\n                    if (iVar2 == 0) {\n                        puStack596 = &stack0xfffffdd0;\n                        iStack592 = *0x41c004 + 0x145;\n                        puStack600 = 0x402217;\n                        sub.KERNEL32.dll_lstrcpyA();\n                        puStack600 = &stack0xfffffdc8;\n                        puStack604 = 0x402221;\n                        fcn.0040ab70();\n                        puStack608 = &stack0xfffffdc4;\n                        puStack604 = *0x41c004 + 0x10;\n                        uStack612 = 0x402234;\n                        sub.KERNEL32.dll_lstrcatA();\n                        puStack616 = &stack0xfffffdbc;\n                        uStack612 = 2;\n                        puStack620 = 0x402240;\n                        iVar2 = fcn.0040be40();\n                        if (iVar2 == -1) {\n                            puStack620 = &stack0xfffffdb4;\n                            iStack624 = 0x4196c0;\n                            iStack628 = 0x402256;\n                            sub.KERNEL32.dll_lstrcpyA();\n                            iStack628 = 0;\n                            iStack632 = 0x40225d;\n                            fcn.00405b60();\n                            iVar2 = -2;\n                        }\n                        else {\n                            iStack624 = 0x40226d;\n                            puStack620 = iVar2;\n                            puStack604 = fcn.0040c500();\n                            iStack628 = 0x402277;\n                            iStack624 = iVar2;\n                            fcn.0040c320();\n                            iStack628 = *0x41c004 + 0x24a;\n                            iStack632 = 0x402287;\n                            uVar3 = fcn.0040f5f0();\n                            iStack632 = *0x41c004 + 0x34f;\n                            pcStack636 = 0x402299;\n                            iVar2 = sub.KERNEL32.dll_lstrlenA();\n                            pcVar1 = *0x41c004 + iVar2 + 0x34e;\n                            if (*pcVar1 == '\\\\') {\n                                *pcVar1 = '\\0';\n                            }\n                            puStack640 = &stack0xfffffda4;\n                            pcStack636 = param_1;\n                            uStack644 = 0x4022b9;\n                            iVar2 = fcn.0040f020();\n                            uStack644 = 0;\n                            if (iVar2 == 0) {\n                                iStack648 = 0;\n                                uStack652 = 2;\n                                uStack660 = **0x41c004;\n                                puStack664 = 0x4022e0;\n                                iVar2 = fcn.00406cf0();\n                                if (iVar2 == 3) {\n                                    puStack664 = &stack0xfffffd84;\n                                    uStack668 = 0x1a;\n                                    uStack672 = **0x41c004;\n                                    puStack676 = 0x40231f;\n                                    iVar2 = fcn.00407410();\n                                    if ((iVar2 != 0) && (*0x41c040 == 0)) {\n                                        if (*0x41c044 == 0) {\n                                            puStack676 = **0x41c004;\n                                            uStack680 = 0x40236b;\n                                            fcn.00406a70();\n                                            uStack680 = 1;\n                                            fcn.00405b60();\n                                            return -0x36;\n                                        }\n                                        if (iStack648 != *0x41c048) {\n                                            puStack676 = **0x41c004;\n                                            uStack680 = 0x40234d;\n                                            fcn.00406a70();\n                                            uStack680 = 1;\n                                            fcn.00405b60();\n                                            return -0x34;\n                                        }\n                                    }\n                                    puStack676 = &stack0xfffffd74;\n                                    uStack680 = 0x19;\n                                    fcn.00407410(**0x41c004);\n                                    uVar5 = **0x41c004;\n                                    fcn.00407410(uVar5, 4, &stack0xfffffd68);\n                                    (*0x41c004)[7] = puStack676;\n                                    uVar4 = *0x41c01c;\n                                    if (*0x41c020 == 0) {\n                                        uVar4 = 2;\n                                        if ((uStack125 & 1) != 0) {\n                                            uVar4 = 0x1000002;\n                                        }\n                                        iVar2 = fcn.00404a20(uVar4, &stack0xfffffd58, 0x41d21c, uVar3);\n                                        uVar4 = uVar5;\n                                        if (iVar2 < 0) {\n                                            return iVar2;\n                                        }\n                                    }\n                                    (*0x41c004)[0xd] = uVar4;\n                                    if ((*0x419684 & 2) != 0) {\n                                        (*0x41c004)[0xc] = 0;\n                                        uVar5 = fcn.0040e7c0((*0x41c004)[1]);\n                                        (*0x41c004)[9] = uVar5;\n                                    }\n                                    iVar2 = fcn.00402d20(unaff_retaddr, param_1, uVar3);\n                                    fcn.00406a70(**0x41c004);\n                                    if (((*0x4196ac == 0) && (*0x41c030 == 0)) &&\n                                       (iVar6 = fcn.0040e810(uStack144),  iVar6 == 0)) {\n                                        uVar3 = 1;\n                                    }\n                                    else {\n                                        uVar3 = 0;\n                                    }\n                                    fcn.00405b60(uVar3);\n                                }\n                                else {\n                                    if (iVar2 == -0x29) {\n                                        iVar2 = -5;\n                                    }\n                                    uStack668 = 0x4196c0;\n                                    uStack672 = 0x4022fc;\n                                    sub.KERNEL32.dll_lstrcpyA();\n                                    uStack672 = 0;\n                                    puStack676 = 0x402303;\n                                    fcn.00405b60();\n                                }\n                            }\n                            else {\n                                iStack648 = 0x4022c4;\n                                fcn.00405b60();\n                                iVar2 = -9;\n                            }\n                        }\n                    }\n                    else {\n                        iStack592 = 0;\n                        puStack596 = 0x4021f8;\n                        fcn.00405b60();\n                        iVar2 = -8;\n                    }\n                }\n            }\n            else {\n                pcStack568 = param_1;\n                pcStack572 = 0x404980;\n                uStack576 = 0x404970;\n                pcStack584 = param_1;\n                iStack592 = 0x4021b3;\n                iVar2 = fcn.004065b0();\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 2117
    },
    "00402480": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00402480(char *param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    char *unaff_retaddr;\n    uchar *puVar4;\n    char *pcStack100;\n    uint uStack96;\n    char *pcStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    int32_t iStack76;\n    char *pcStack72;\n    char *pcStack68;\n    uint uStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    char *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    uStack24 = 1;\n    uStack28 = 0x40248d;\n    iVar1 = fcn.0040dbf0();\n    if (iVar1 == 0) {\n        return -6;\n    }\n    *0x4196c0 = 0;\n    if (*unaff_retaddr == '\\0') {\n        *0x4196c0 = 0;\n        return -2;\n    }\n    if (*param_1 == '\\0') {\n        *0x4196c0 = 0;\n        return -3;\n    }\n    uStack28 = param_4;\n    uStack32 = param_3;\n    uStack36 = param_2;\n    *0x41c030 = 0;\n    pcStack40 = param_1;\n    *0x41c038 = 0;\n    iStack48 = 0x4024f8;\n    iVar1 = fcn.00405790();\n    if (iVar1 == 0) {\n        iStack48 = *0x41c004 + 0x559;\n        iStack52 = *0x41c004 + 0x24a;\n        iStack56 = *0x41c004 + 0x34f;\n        iStack60 = 0x402526;\n        fcn.0040ac80();\n        iStack60 = *0x41c004 + 0x24a;\n        uStack64 = 0x402536;\n        iVar1 = fcn.0040f5f0();\n        if (iVar1 != 0) {\n            uStack64 = 0;\n            pcStack68 = 0x402541;\n            fcn.00405b60();\n            return -0xf;\n        }\n        uStack64 = 2;\n        pcStack68 = param_1;\n        pcStack72 = 0x402557;\n        iVar1 = fcn.0040be40();\n        if (iVar1 == -1) {\n            pcStack72 = param_1;\n            iStack76 = 0x4196c0;\n            uStack80 = 0x402569;\n            sub.KERNEL32.dll_lstrcpyA();\n            uStack80 = 0;\n            uStack84 = 0x402570;\n            fcn.00405b60();\n            return -2;\n        }\n        iStack76 = 0x402584;\n        pcStack72 = iVar1;\n        iStack60 = fcn.0040c500();\n        uStack80 = 0x40258e;\n        iStack76 = iVar1;\n        fcn.0040c320();\n        uStack80 = 0;\n        uStack84 = 0;\n        uStack88 = 3;\n        pcStack92 = param_1;\n        uStack96 = **0x41c004;\n        pcStack100 = 0x4025a2;\n        iVar1 = fcn.00406cf0();\n        if (iVar1 != 3) {\n            if (iVar1 == -0x29) {\n                iVar1 = -0x14;\n            }\n            pcStack100 = param_1;\n            sub.KERNEL32.dll_lstrcpyA(0x4196c0);\n            fcn.00405b60(0);\n            return iVar1;\n        }\n        pcStack100 = &stack0xffffffb0;\n        fcn.00407410(**0x41c004, 4);\n        (*0x41c004)[8] = pcStack92;\n        uVar2 = fcn.0040f5f0(*0x41c004 + 0x10);\n        iVar1 = fcn.00403a30(unaff_retaddr, param_1, uVar2);\n        puVar4 = &stack0xffffff9c;\n        fcn.00407410(**0x41c004, 7, puVar4);\n        if (iVar1 == 0) {\n            iVar3 = fcn.004068f0(**0x41c004);\n            if (iVar3 != 0) {\n                fcn.00406a70(**0x41c004);\n                fcn.00405b60(0);\n                if (*(*0x41c004 + 0x559) != '\\0') {\n                    fcn.0040c4f0(*0x41c004 + 0x559);\n                    return iVar3;\n                }\n                fcn.0040c4f0(param_1);\n                return iVar3;\n            }\n            fcn.0040c550((*0x41c004)[8], puVar4);\n        }\n        fcn.00406a70(**0x41c004);\n        if (iVar1 == 2) {\n            fcn.0040c4f0(param_1);\n            if (*(*0x41c004 + 0x559) != '\\0') {\n                fcn.0040c4f0(*0x41c004 + 0x559);\n            }\n        }\n        else if (iVar1 == 0) {\n            fcn.0040c4f0(param_1);\n            fcn.0040d070(*0x41c004 + 0x559, param_1);\n        }\n        fcn.00405b60(0);\n    }\n    return iVar1;\n}\n",
        "token_count": 1349
    },
    "004027d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004027d0(void)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t uStack2072;\n    uint uStack2068;\n    uchar *puStack2064;\n    char *pcStack2060;\n    uint uStack2056;\n    uint uStack2052;\n    uint uStack2048;\n    uchar *puStack2044;\n    uint uStack2040;\n    uint uStack2036;\n    uchar *puStack2032;\n    uchar *puStack2028;\n    uchar *puStack2024;\n    uchar *puStack2020;\n    uint uStack2016;\n    uchar *puStack2012;\n    uchar *puStack2008;\n    uint *puStack2004;\n    uchar *puStack2000;\n    uint uStack1996;\n    uint uStack1992;\n    uchar *puStack1988;\n    uchar *puStack1984;\n    uchar *puStack1980;\n    char *pcStack1976;\n    char *pcStack1972;\n    uchar *puStack1968;\n    char *pcStack1964;\n    uchar *puStack1960;\n    uint uStack1956;\n    uint uStack1952;\n    char *pcStack1948;\n    char *pcStack1944;\n    uint uStack1940;\n    uchar *puStack1936;\n    int32_t iStack1932;\n    uchar *puStack1928;\n    uint uStack1924;\n    uchar *puStack1920;\n    uchar *puStack1916;\n    uchar *puStack1912;\n    uchar *puStack1908;\n    uchar *puStack1904;\n    char *pcStack1900;\n    char *pcStack1896;\n    char *pcStack1892;\n    char *pcStack1888;\n    uint uStack1884;\n    uint uStack1880;\n    uint uStack1876;\n    uint uStack1872;\n    uchar auStack1760 [16];\n    uchar auStack1744 [24];\n    uchar auStack1720 [84];\n    uchar auStack1636 [12];\n    uchar auStack1624 [12];\n    uchar auStack1612 [8];\n    uchar auStack1604 [8];\n    char acStack1596 [8];\n    uchar auStack1588 [408];\n    uchar auStack1180 [8];\n    char acStack1172 [28];\n    uchar auStack1144 [60];\n    uchar auStack1084 [4];\n    char acStack1080 [16];\n    uchar auStack1064 [424];\n    uchar auStack640 [4];\n    uchar auStack636 [8];\n    uchar auStack628 [616];\n    char *pcStack12;\n    \n    uStack1872 = 0x8e94;\n    uStack1876 = 0x10;\n    uStack1880 = 0;\n    uStack1884 = 0x4027e8;\n    uVar1 = fcn.0040dc10();\n    (*0x41c004)[0x1de] = uVar1;\n    if ((*0x41c004)[0x1de] == 0) {\n        uStack1884 = (*0x41c004)[6];\n        pcStack1888 = 0x40280c;\n        fcn.00410e80();\n        return -6;\n    }\n    uStack1884 = (*0x41c004)[6];\n    pcStack1888 = 0x40282a;\n    pcVar2 = fcn.00410aa0();\n    if (pcVar2 == NULL) {\n        pcStack1888 = (*0x41c004)[6];\n        if (pcStack1888 != NULL) {\n            pcStack1892 = 0x402842;\n            fcn.00410e80();\n        }\n        return -0x13;\n    }\n    do {\n        if (*0x41c04c != 0) {\n            pcStack1888 = &stack0xfffffbd8;\n            pcStack1896 = 0x402871;\n            pcStack1892 = pcVar2;\n            fcn.0040ed40();\n            puStack1904 = 0x402878;\n            pcStack1900 = pcVar2;\n            pcStack1896 = pcVar2;\n            fcn.0040ee00();\n            if (acStack1080[0] != '\\0') {\n                puStack1904 = &stack0xfffffbc8;\n                puStack1908 = 0x40288e;\n                fcn.0040ab70();\n                puStack1908 = &stack0xfffffbc4;\n                puStack1912 = *0x41c004 + 0x145;\n                puStack1916 = 0x4028a6;\n                sub.KERNEL32.dll_lstrcpyA();\n            }\n        }\n        if (*(*0x41c004 + 0x115) == '\\0') {\n            pcStack1888 = *0x41c004 + 0x145;\n            if (*pcStack1888 == '\\0') {\n                pcStack1892 = &stack0xfffff9cc;\n                pcStack1888 = pcVar2;\n                goto code_r0x0040293b;\n            }\n            pcStack1892 = &stack0xfffff9cc;\n            pcStack1896 = 0x402922;\n            sub.KERNEL32.dll_lstrcpyA();\n            pcStack1900 = &stack0xfffff9c4;\n            puStack1904 = 0x402930;\n            pcStack1896 = pcVar2;\n            sub.KERNEL32.dll_lstrcatA();\n        }\n        else {\n            pcStack1892 = &stack0xfffffbd8;\n            pcStack1896 = 0x4028c1;\n            pcStack1888 = pcVar2;\n            sub.KERNEL32.dll_lstrcpyA();\n            pcStack1896 = *0x41c004 + 0x145;\n            if (*pcStack1896 == '\\0') {\n                pcStack1900 = &stack0xfffff9c4;\ncode_r0x0040293b:\n                pcStack1896 = 0x402940;\n                sub.KERNEL32.dll_lstrcpyA();\n            }\n            else {\n                pcStack1900 = &stack0xfffff9c4;\n                puStack1904 = 0x4028dd;\n                sub.KERNEL32.dll_lstrcpyA();\n                puStack1904 = &stack0xfffffbc8;\n                puStack1908 = &stack0xfffff9bc;\n                puStack1912 = 0x4028f2;\n                sub.KERNEL32.dll_lstrcatA();\n            }\n        }\n        pcStack1900 = &stack0xfffff9c4;\n        pcStack1896 = pcStack12;\n        puStack1904 = 0x40294e;\n        iVar3 = fcn.0040f020();\n        if (iVar3 == 0) {\n            puStack1904 = &stack0xfffff9bc;\n            puStack1908 = 0x4196c0;\n            puStack1912 = 0x40296a;\n            sub.KERNEL32.dll_lstrcpyA();\n            puStack1912 = &stack0xfffff8a0;\n            puStack1916 = &stack0xfffff8a4;\n            puStack1920 = &stack0xfffff9b4;\n            uStack1884 = 0;\n            pcStack1888 = NULL;\n            uStack1924 = 0x402989;\n            fcn.0040d0a0();\n            puStack1928 = &stack0xfffff9a8;\n            uStack1924 = 2;\n            iStack1932 = 0x402998;\n            uVar1 = fcn.0040be40();\n            (*0x41c004)[7] = uVar1;\n            iStack1932 = (*0x41c004)[7];\n            if (iStack1932 == -1) {\n                iStack1932 = (*0x41c004)[6];\n                puStack1936 = 0x402c46;\n                fcn.00410e80();\n                puStack1936 = &stack0xfffff99c;\n                uStack1940 = 0x4196c0;\n                pcStack1944 = 0x402c58;\n                sub.KERNEL32.dll_lstrcpyA();\n                return -2;\n            }\n            puStack1936 = **0x41c004;\n            uStack1940 = 0x4029bc;\n            fcn.004078e0();\n            (*0x41c004)[0x1d9] = 0;\n            uStack1940 = (*0x41c004)[7];\n            pcStack1944 = 0x4029dd;\n            uVar1 = fcn.0040c500();\n            (*0x41c004)[10] = uVar1;\n            if ((*0x41c004)[10] < 0) {\n                pcStack1944 = (*0x41c004)[6];\n                pcStack1948 = 0x402c76;\n                fcn.00410e80();\n                pcStack1948 = (*0x41c004)[7];\n                uStack1952 = 0x402c85;\n                fcn.0040c320();\n                return -0x12;\n            }\n            (*0x41c004)[0xb] = 0;\n            pcStack1948 = \"Compressing : \";\n            (*0x41c004)[0xe] = 0;\n            *0x4196b0 = 0;\n            uStack1952 = 0x402a11;\n            pcStack1944 = pcVar2;\n            fcn.0040e990();\n            uStack1952 = 0;\n            uStack1956 = (*0x41c004)[2];\n            puStack1960 = 0x402a21;\n            fcn.0040e8b0();\n            puStack1960 = &stack0xfffff87c;\n            puStack1968 = 0x402a2c;\n            pcStack1964 = pcVar2;\n            fcn.0040ee00();\n            puStack1968 = &stack0xfffffb88;\n            pcStack1976 = 0x402a3a;\n            pcStack1972 = pcVar2;\n            fcn.0040ed40();\n            if ((*0x419684 & 1) != 0) {\n                puStack1980 = &stack0xfffffd8c;\n                puStack1984 = 0x402a51;\n                pcStack1976 = pcVar2;\n                sub.KERNEL32.dll_lstrcpyA();\n                puStack1984 = &stack0xfffffd84;\n                puStack1988 = 0x402a5e;\n                fcn.0040b1a0();\n                puStack1988 = &stack0xfffffd80;\n                uStack1992 = (*0x41c004)[1];\n                uStack1996 = 0x402a75;\n                fcn.0040e7a0();\n            }\n            if (acStack1172[0] != '\\0') {\n                puStack2000 = &stack0xfffffb6c;\n                uStack1996 = 0x41d234;\n                puStack2004 = 0x402a90;\n                fcn.0040f550();\n                puStack2004 = &stack0xfffffb64;\n                puStack2008 = 0x402a9d;\n                fcn.0040f980();\n            }\n            uStack1996 = 0;\n            puStack2000 = (*0x41c004)[7];\n            puStack2004 = *0x41c004 + 0x115;\n            puStack2012 = &stack0xfffff858;\n            puStack2008 = &stack0xfffffb6c;\n            uStack2016 = **0x41c004;\n            puStack2020 = 0x402ac7;\n            iVar3 = fcn.00406ad0();\n            if (iVar3 != 0) {\n                puStack2020 = (*0x41c004)[6];\n                puStack2024 = 0x402ca3;\n                fcn.00410e80();\n                puStack2024 = (*0x41c004)[7];\n                puStack2028 = 0x402cb2;\n                fcn.0040c320();\n                return iVar3;\n            }\n            puStack2020 = &stack0xfffff83c;\n            puStack2024 = &stack0xfffff830;\n            puStack2028 = &stack0xfffff948;\n            puStack1988 = NULL;\n            puStack2000 = NULL;\n            puStack2032 = 0x402af0;\n            fcn.0040cb70();\n            puStack2032 = puStack2012 + puStack2000 * 0x10000;\n            uStack2040 = **0x41c004;\n            uStack2036 = 0x22;\n            puStack2044 = 0x402b10;\n            puStack2012 = puStack2032;\n            fcn.00407700();\n            puStack2044 = &stack0xfffff930;\n            uStack2048 = 0x402b1d;\n            uStack2048 = fcn.0040d090();\n            uStack2052 = 0x23;\n            uStack2056 = **0x41c004;\n            pcStack2060 = 0x402b2e;\n            fcn.00407700();\n            pcStack2060 = *0x41c004 + 0x559;\n            if (*pcStack2060 == '\\0') {\n                pcStack2060 = pcStack12;\n            }\n            puStack2064 = &stack0xfffff920;\n            uStack2068 = 0x402b4d;\n            fcn.00404260();\n            pcStack2060 = NULL;\n            puStack2064 = **0x41c004;\n            uStack2068 = 0x402b5e;\n            fcn.00406ab0();\n            if ((*0x41c004)[0x1d9] != 0) {\n                uStack2068 = (*0x41c004)[7];\n                uStack2072 = 0x402ccd;\n                fcn.0040c320();\n                uStack2072 = (*0x41c004)[6];\n                fcn.00410e80();\n                return (*0x41c004)[0x1d9];\n            }\n            uStack2068 = uStack2040;\n            uStack2072 = 0x20;\n            fcn.00407700(**0x41c004);\n            fcn.00407700(**0x41c004, 0x21, uStack2056);\n            if ((*0x41c024 != 0) && (iVar3 = fcn.00404880((*0x41c004)[0xf], 0),  iVar3 != 0)) {\n                return iVar3;\n            }\n            fcn.0040e8b0((*0x41c004)[2], 100);\n            fcn.0040c320((*0x41c004)[7]);\n            if ((*0x41c004)[0x1d9] != 0) {\n                fcn.00410e80((*0x41c004)[6]);\n                return -4;\n            }\n        }\n        uStack1884 = (*0x41c004)[6];\n        pcVar2 = fcn.00410b20();\n        if (pcVar2 == NULL) {\n            if ((*0x419684 & 1) != 0) {\n                uStack2072 = uStack2072 & 0xffffff00;\n                fcn.0040e7a0((*0x41c004)[1], &stack0xfffff7e8);\n            }\n            fcn.00410e80((*0x41c004)[6]);\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 3518
    },
    "00402d20": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00402d20(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t unaff_EBP;\n    uchar *puVar7;\n    int32_t unaff_ESI;\n    uint uVar8;\n    uchar *puVar9;\n    uchar *in_stack_00000034;\n    uchar *puVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    char *pcVar15;\n    char *pcVar16;\n    int32_t *piVar17;\n    uchar *puStack2984;\n    int32_t *piStack2980;\n    uchar *puStack2976;\n    int32_t iStack2972;\n    int32_t iVar18;\n    uint uVar19;\n    uchar *puStack2932;\n    uchar *puStack2928;\n    uchar *puStack2924;\n    uint32_t uStack2920;\n    uchar *puStack2916;\n    uchar *puStack2912;\n    uchar *puStack2908;\n    uchar *puStack2904;\n    uint uStack2900;\n    uchar *puStack2896;\n    uchar *puStack2892;\n    uchar *puStack2888;\n    uchar auStack2808 [144];\n    uchar auStack2664 [28];\n    char acStack2636 [52];\n    uchar auStack2584 [24];\n    uchar auStack2560 [112];\n    char cStack2448;\n    uchar auStack2400 [28];\n    uchar auStack2372 [52];\n    char acStack2320 [116];\n    uchar auStack2204 [20];\n    uchar auStack2184 [4];\n    uchar auStack2180 [4];\n    uchar auStack2176 [8];\n    uchar auStack2168 [4];\n    uchar auStack2164 [4];\n    uchar auStack2160 [4];\n    uchar auStack2156 [4];\n    uchar auStack2152 [8];\n    uchar auStack2144 [8];\n    uchar auStack2136 [12];\n    uchar auStack2124 [4];\n    uchar auStack2120 [8];\n    uchar auStack2112 [8];\n    uchar auStack2104 [4];\n    uchar auStack2100 [12];\n    uchar auStack2088 [40];\n    uchar auStack2048 [8];\n    uchar auStack2040 [8];\n    uchar auStack2032 [8];\n    uchar auStack2024 [8];\n    uchar auStack2016 [368];\n    uchar auStack1648 [8];\n    uchar auStack1640 [32];\n    uchar auStack1608 [4];\n    uchar auStack1604 [4];\n    uchar auStack1600 [12];\n    uchar auStack1588 [432];\n    uchar auStack1156 [20];\n    uchar auStack1136 [20];\n    uchar auStack1116 [32];\n    uchar auStack1084 [4];\n    uchar auStack1080 [16];\n    uchar auStack1064 [432];\n    uchar auStack632 [20];\n    uchar auStack612 [8];\n    uchar auStack604 [4];\n    uchar auStack600 [8];\n    uchar auStack592 [16];\n    uchar auStack576 [12];\n    uchar auStack564 [508];\n    int32_t iStack56;\n    uint uStack52;\n    int32_t iStack28;\n    \n    puVar9 = NULL;\n    uVar1 = (*0x41c004)[0xf];\n    puStack2896 = NULL;\n    uStack2920 = (uVar1 & 0x1000000) != 0;\n    if ((uVar1 & 0x20) != 0) {\n        puVar9 = 0x20;\n    }\n    if (((uVar1 & 0x80000) != 0) || (*0x41d788 != 0)) {\n        puStack2896 = 0x1;\n    }\n    iStack2972 = 0x319c;\n    puStack2976 = 0x10;\n    piStack2980 = NULL;\n    puStack2984 = 0x402d9e;\n    iVar2 = fcn.0040dc10();\n    (*0x41c004)[0x1de] = iVar2;\n    if ((*0x41c004)[0x1de] == 0) {\n        return -6;\n    }\n    puStack2984 = &stack0xfffff6bc;\n    puVar3 = *0x41c004 + 0x24a;\n    puVar14 = **0x41c004;\n    iVar2 = fcn.00406b20(puVar14, 1, (uVar1 & 0x10) != 0, puVar3, *0x41c004 + 0x115, &stack0xfffff5b4);\n    if (iVar2 == 5) {\n        if ((*0x4196ac == 0) && (*0x41c010 == 0)) {\n            piStack2980 = 0x1;\n            iVar2 = 0;\n        }\n        else if ((iStack28 == 0) && (unaff_ESI == 0)) {\n            iVar2 = 1;\n        }\n        else {\n            iVar2 = fcn.00406b20(**0x41c004, 2, unaff_ESI, *0x41c004 + 0x24a, *0x41c004 + 0x115, &stack0xfffff598, \n                                 &stack0xfffff6a0);\n            if (iVar2 == 5) {\n                puVar14 = 0x1;\n                iVar2 = 0;\n                *0x41c010 = 0;\n            }\n        }\n    }\n    do {\n        if (iVar2 != 0) {\n            if ((iVar2 == 6) && (*0x41c020 != 0)) {\n                fcn.00407410(**0x41c004, 0x16, &stack0xfffff470);\n                *0x4197c0 = iStack2972;\n            }\n            if ((iVar2 == 1) && ((*0x419684 & 1) != 0)) {\n                sub.KERNEL32.dll_lstrcpyA(&stack0xfffff998, L\" \\\\\\\\\\\\ \\\\\\\\\\\\ \");\n                fcn.0040e7a0((*0x41c004)[1], &stack0xfffff990);\n            }\n            return iVar2;\n        }\n        (*0x41c004)[0xb] = 0;\n        uVar8 = 1;\n        (*0x41c004)[0xe] = 0;\n        *0x4196b0 = 0;\n        piStack2980 = NULL;\n        auStack1116[0] = 0;\n        if (*0x41967c == 1) {\n            *0x41967c = 0;\n        }\n        fcn.00407410(**0x41c004, 9, *0x41c004 + 10);\n        puStack2888 = &stack0xfffff468;\n        puVar4 = *0x41c004 + 0x34f;\n        sub.KERNEL32.dll_lstrcpyA();\n        if (cStack2448 != '\\0') {\n            sub.KERNEL32.dll_lstrcatA(&stack0xfffff460, 0x41d238);\n            puStack2888 = &stack0xfffff458;\n            sub.KERNEL32.dll_lstrcatA();\n        }\n        puStack2892 = &stack0xfffff508;\n        puStack2896 = &stack0xfffff820;\n        uStack2900 = 0x402f44;\n        sub.KERNEL32.dll_lstrcpyA();\n        puStack2904 = &stack0xfffff818;\n        uStack2900 = 0x41d23c;\n        puStack2908 = 0x402f56;\n        sub.KERNEL32.dll_lstrcatA();\n        puStack2908 = &stack0xfffff600;\n        puStack2912 = &stack0xfffff810;\n        puStack2916 = 0x402f6b;\n        sub.KERNEL32.dll_lstrcatA();\n        puStack2916 = &stack0xfffff808;\n        uStack2920 = 0x4196c0;\n        puStack2924 = 0x402f7d;\n        sub.KERNEL32.dll_lstrcpyA();\n        puStack2924 = &stack0xfffff800;\n        puStack2928 = in_stack_00000034;\n        iVar2 = fcn.0040f020();\n        if (iVar2 != 0) {\n            return -9;\n        }\n        if (acStack2320[0] == '\\0') {\n            puStack2932 = &stack0xfffff5e8;\n            sub.KERNEL32.dll_lstrcpyA();\n        }\n        else {\n            puStack2932 = &stack0xfffff6f0;\n            sub.KERNEL32.dll_lstrcpyA();\n            sub.KERNEL32.dll_lstrcatA();\n            sub.KERNEL32.dll_lstrcatA();\n        }\n        iVar2 = **0x41c004;\n        fcn.00407410();\n        (*0x41c004)[0x1da] = puStack2916;\n        uVar19 = 5;\n        puStack2984 = **0x41c004;\n        iVar18 = 0x403030;\n        fcn.00407410();\n        puVar7 = 0x1;\n        puStack2896 = puStack2916 & 0xffff;\n        puStack2892 = puStack2916 >> 0x10;\n        if (*0x41c014 == 0) {\n            puStack2984 = &stack0xfffff7d8;\n            iVar18 = 2;\n            iStack2972 = 0x40306a;\n            iVar5 = fcn.0040be40();\n            if (iVar5 != -1) {\n                puVar7 = NULL;\n                puStack2976 = 0x403081;\n                iStack2972 = iVar5;\n                fcn.0040c320();\n                puStack2976 = &stack0xfffff474;\n                puStack2984 = &stack0xfffff7cc;\n                piStack2980 = puStack2928;\n                iVar5 = fcn.00405f00();\n                if (iVar5 != 0) {\n                    return iVar5;\n                }\n            }\n        }\n        if (*0x41c014 == 0) {\n            if ((unaff_EBP != 0) && ((unaff_ESI != 0 || (iVar2 != 0)))) {\n                puStack2984 = &stack0xfffff7c0;\n                puStack2976 = fcn.0040aa70(puVar3, &stack0xfffffbd8, 0);\n                if (puStack2976 != NULL) {\n                    puVar14 = 0x4030ed;\n                    sub.KERNEL32.dll_lstrcpyA(&stack0xfffff9c0, &stack0xfffff7b4);\n                    puVar3 = &stack0xfffffbc4;\n                    goto code_r0x00403129;\n                }\n            }\n        }\n        else if (*0x4196a8 != NULL) {\n            iVar18 = 1;\n            sub.KERNEL32.dll_lstrcpyA(&stack0xfffff9cc, &stack0xfffff7c0);\n            puVar3 = *0x41c03c;\ncode_r0x00403129:\n            sub.KERNEL32.dll_lstrcpyA(&stack0xfffff7b8);\n            puStack2984 = &stack0xfffffbc8;\n            sub.KERNEL32.dll_lstrcpyA();\n        }\n        if (*0x41c028 != 0) {\n            puStack2984 = &stack0xfffff7c0;\n            puVar3 = (*0x41c004)[10];\n            iVar5 = fcn.00406600();\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n        }\n        if ((((*0x41c014 == 0) && (unaff_EBP != 0)) && (iVar18 == 0)) && ((*0x41c054 != NULL && (*0x41c058 != NULL)))) {\n            puVar3 = 0x41967c;\n            puVar14 = 0x4031eb;\n            iVar18 = (**0x41c058)((*0x41c004)[5], &stack0xfffff7c0, 0x41967c, (*0x41c004)[10], (*0x41c004)[4]);\n            if (iVar18 != 0) {\n                return -0x25;\n            }\n            if ((*(*0x41c004 + 0x3f) & 4) == 0) {\n                puStack2984 = &stack0xfffff498;\n                piStack2980 = (*0x41c004)[4];\n                puVar3 = (*0x41c004)[5];\n                iVar18 = (**0x41c054)(puVar3, &stack0xfffff7c8, 0x41967c);\n                if (iVar18 != 0) {\n                    return -0x25;\n                }\n                if ((puStack2928 != NULL) && ((*0x41967c == 3 || (*0x41967c == 0)))) {\n                    unaff_EBP = 0;\n                }\n            }\n            else {\n                puStack2984 = &stack0xfffff7c8;\n                piStack2980 = 0x20;\n                fcn.0040bd50();\n            }\n        }\n        piVar17 = *0x41c004 + 10;\n        puVar10 = **0x41c004;\n        pcVar15 = 0x403275;\n        fcn.00407410(puVar3, 6);\n        if (piStack2980 == NULL) {\n            iVar18 = unaff_ESI;\n            if (unaff_ESI != 0) {\n                puVar10 = &stack0xfffff7b4;\n                iVar2 = fcn.0040aa80(puVar10, &stack0xfffff7b4, puVar7, 0, 0);\n                if (iVar2 == 0) {\n                    fcn.0040c4f0(&stack0xfffff7a0);\n                    return -0x25;\n                }\n                uVar8 = 2;\n                puVar14 = puVar7;\n                iVar18 = unaff_ESI;\n            }\n            fcn.0040e8a0(uVar8, &stack0xfffff7a0, &stack0xfffff7a0, puVar9, 0, puVar10);\n            if (puVar14 != NULL) {\n                *0x41c010 = 1;\n            }\n            if (*0x41c020 != 0) {\n                *0x41c018 = *0x41c018 + (*0x41c004)[10];\n            }\n        }\n        else {\n            if (puStack2916 != '\\0') {\n                pcVar15 = &stack0xfffff49c;\n                iVar18 = fcn.0040efd0();\n                if (iVar18 == 0) {\n                    pcVar6 = &stack0xfffff498;\n                    while (pcVar16 = pcVar6,  uStack2920 != '\\0') {\n                        pcVar6 = fcn.0040b1c0();\n                        uStack2920._0_1_ = *pcVar6;\n                        pcVar15 = pcVar16;\n                    }\n                    pcVar15 = fcn.0040b1d0(&stack0xfffff498, pcVar16, pcVar15);\n                    if (*pcVar15 == '\\\\') {\n                        *pcVar15 = '\\0';\n                    }\n                    pcVar15 = &stack0xfffff490;\n                    iVar18 = fcn.0040ea40();\n                    if (iVar18 == 0) {\n                        return -0x1b;\n                    }\n                }\n            }\n            if (*0x41c010 != 0) {\n                *0x41c010 = 0;\n            }\n            if ((*0x419684 & 1) != 0) {\n                fcn.0040b1a0(&stack0xfffff9bc);\n                fcn.0040e7a0((*0x41c004)[1], &stack0xfffff9b8);\n            }\n            puVar10 = &stack0xfffff9bc;\n            puVar14 = 0x41d244;\n            fcn.0040e990();\n            puVar11 = &stack0xfffff7a8;\n            puVar13 = &stack0xfffffdcc;\n            sub.KERNEL32.dll_lstrcpyA();\n            puVar12 = &stack0xfffff7a0;\n            unaff_EBP = fcn.0040adb0();\n            if ((unaff_EBP != 0) && (*0x41c014 == 0)) {\n                fcn.0040c4f0(&stack0xfffffdc0);\n            }\n            if (puVar3 == NULL) {\n                if (*0x41c050 != 0) {\ncode_r0x00403525:\n                    fcn.0040e8b0((*0x41c004)[2], 0);\n                    goto code_r0x00403534;\n                }\n                fcn.0040e8b0((*0x41c004)[2], 0);\n                iVar18 = fcn.0040be40(&stack0xfffff790, 1);\n                (*0x41c004)[8] = iVar18;\n                piStack2980 = *0x41c004 + 8;\n                if (*piStack2980 == -1) {\n                    puVar3 = 0x4033bd;\n                    iVar18 = fcn.0040be40(&stack0xfffff788, 2);\n                    *piVar17 = iVar18;\n                    puVar4 = (*0x41c004)[8];\n                    if (puVar4 == 0xffffffff) {\n                        (*0x41c004)[0x1d9] = -3;\n                        puVar4 = puVar3;\n                    }\n                    else {\n                        fcn.0040c320();\n                        iVar18 = fcn.004065c0(&stack0xfffff77c);\n                        if (iVar18 != 0) {\n                            iVar18 = fcn.0040be40(&stack0xfffff778, 1);\n                            (*0x41c004)[8] = iVar18;\n                        }\n                        if (puStack2932 != NULL) goto code_r0x0040344b;\n                        (*0x41c004)[8] = 0;\n                        (*0x41c004)[0x1d9] = -0x2e;\n                    }\n                    if (puStack2932 == NULL) {\n                        puStack2976 = &stack0xfffff7cc;\n                        piStack2980 = 0x4196c0;\n                        puStack2984 = 0x4038d9;\n                        sub.KERNEL32.dll_lstrcpyA();\n                        return (*0x41c004)[0x1d9];\n                    }\n                }\ncode_r0x0040344b:\n                puStack2976 = 0x41d258;\n                piStack2980 = &stack0xfffff4b4;\n                (*0x41c004)[0x1d9] = 0;\n                puStack2984 = 0x403465;\n                fcn.0040f550();\n                puStack2984 = 0x1;\n                piVar17 = (*0x41c004)[8];\n                puVar3 = &stack0xfffff4ac;\n                pcVar15 = &stack0xfffff5b4;\n                iVar18 = fcn.00406ad0(**0x41c004, pcVar15, puVar3, *0x41c004 + 0x115);\n                if (iVar18 != 0) {\n                    fcn.0040c320((*0x41c004)[8]);\n                    return iVar2;\n                }\n                if (puStack2932 == NULL) {\n                    fcn.004042e0();\n                }\n                puVar14 = 0x1;\n                puVar11 = **0x41c004;\n                fcn.00406ab0();\n                puVar13 = (*0x41c004)[8];\n                fcn.0040c320();\n                if (*0x41c020 != 0) {\n                    *0x41c018 = *0x41c018 + (*0x41c004)[10];\n                }\n                if ((*0x41c004)[0x1d9] != 0) {\n                    fcn.0040c4f0(&stack0xfffff7a0);\n                    return (*0x41c004)[0x1d9];\n                }\n                if ((*0x41c024 != 0) && (iVar2 = fcn.00404880((*0x41c004)[0xf], 0),  iVar2 != 0)) {\n                    return iVar2;\n                }\n                puVar12 = 0x64;\n                fcn.0040e8b0((*0x41c004)[2]);\n            }\n            else {\n                if (*0x41c050 != 0) goto code_r0x00403525;\ncode_r0x00403534:\n                fcn.004043c0(uStack52, &stack0xfffff798, puVar3);\n                puVar3 = NULL;\n                if ((*0x41c004)[0x1d9] != 0) {\n                    if ((*0x41c004)[0x1d9] < 0) {\n                        fcn.0040c320((*0x41c004)[8]);\n                        fcn.0040c4f0(&stack0xfffff794);\n                    }\n                    else if (((*0x41c004)[0x1d9] == 6) && (*0x4196a8 = puVar10,  puVar10 != NULL)) {\n                        sub.KERNEL32.dll_lstrcpyA(*0x41c03c, &stack0xfffff798);\n                    }\n                    *0x41c014 = 1;\n                    return (*0x41c004)[0x1d9];\n                }\n                *0x4196a8 = NULL;\n                *0x41c014 = 0;\n            }\n            puVar10 = &stack0xfffff798;\n            iVar18 = unaff_ESI;\n            fcn.0040cc10(puVar10, unaff_ESI, uVar19);\n            if (puStack2984 == NULL) {\n                if ((pcVar15 == NULL) && (puVar11 == NULL)) {\ncode_r0x004036df:\n                    puVar10 = &stack0xfffff778;\n                    puVar4 = &stack0xfffffb90;\n                }\n                else {\n                    if (puVar11 == NULL) {\n                        uVar8 = 2;\n                    }\n                    else {\n                        puVar7 = puVar7 | 2;\n                    }\n                    iVar2 = fcn.0040aa80(&stack0xfffff78c, &stack0xfffffba4, puVar7, puVar13, 0);\n                    if (iVar2 == 0) {\n                        fcn.0040c4f0(&stack0xfffff778);\n                        return -0x25;\n                    }\n                    if (unaff_ESI == 0) goto code_r0x004036df;\n                    puVar4 = &stack0xfffff778;\n                    puVar10 = &stack0xfffffb90;\n                }\n                fcn.0040e8a0(uVar8, puVar10, puVar4, puVar9, 0);\n                if ((((puVar7 & 1) != 0) && (puVar9 != NULL)) && (iVar2 = fcn.0040ae30(&stack0xfffff764),  iVar2 == 0))\n                {\n                    return -0x33;\n                }\n            }\n            else {\n                iVar2 = fcn.0040d070(&stack0xfffff78c, &stack0xfffffdb0);\n                if (iVar2 < 0) {\n                    fcn.0040c4f0(&stack0xfffffda8);\n                    puVar4 = &stack0xfffffda4;\n                    iVar2 = fcn.0040d070(&stack0xfffff780);\n                    if (iVar2 < 0) {\n                        fcn.0040c4f0(&stack0xfffff778);\n                        return -0x25;\n                    }\n                }\n                if ((puVar12 == NULL) && (unaff_ESI == 0)) {\ncode_r0x00403630:\n                    puVar11 = &stack0xfffffb90;\n                    uVar19 = 0;\n                    puVar4 = &stack0xfffffd9c;\n                    puVar10 = puVar9;\n                }\n                else {\n                    if (unaff_ESI == 0) {\n                        uVar8 = 2;\n                    }\n                    else {\n                        puVar7 = puVar7 | 2;\n                    }\n                    uVar19 = 0;\n                    puVar11 = puVar7;\n                    iVar2 = fcn.0040aa80(&stack0xfffffd9c, &stack0xfffffb90, puVar7, puVar10, 0);\n                    if (iVar2 == 0) {\n                        fcn.0040c4f0(&stack0xfffffd88);\n                        return -0x25;\n                    }\n                    if (puVar4 == NULL) goto code_r0x00403630;\n                    puVar4 = &stack0xfffffb7c;\n                }\n                fcn.0040e8a0(uVar8, puVar4, puVar11, puVar10, uVar19);\n                if ((((puVar7 & 1) != 0) && (puVar9 != NULL)) && (iVar2 = fcn.0040ae30(&stack0xfffffd88),  iVar2 == 0))\n                {\n                    return -0x33;\n                }\n            }\n            if (puVar13 != NULL) {\n                fcn.0040e8a0();\n            }\n        }\n        if ((iStack56 == 0) && (piVar17 == NULL)) {\n            iVar2 = 1;\n            unaff_ESI = iVar18;\n        }\n        else {\n            iVar2 = fcn.00406b20();\n            unaff_ESI = iVar18;\n            if ((iVar2 == 5) && (iVar2 = 1,  *0x4196ac == 0)) {\n                iVar2 = 0;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 5909
    },
    "00403a30": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00403a30(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uchar *puStack1652;\n    uchar *puStack1648;\n    char *pcStack1644;\n    uchar *puStack1640;\n    uint *puStack1636;\n    uchar *puStack1632;\n    uchar *puStack1628;\n    uint *puStack1624;\n    uint uStack1620;\n    uint uStack1616;\n    uint32_t uStack1612;\n    uint *puStack1608;\n    uint *puStack1604;\n    uchar *puStack1600;\n    uchar *puStack1596;\n    uint uStack1576;\n    uint uStack1572;\n    uchar *puStack1568;\n    uchar *puStack1564;\n    uchar *puStack1560;\n    uchar *puStack1556;\n    uchar auStack1368 [16];\n    uint auStack1352 [10];\n    uchar auStack1312 [36];\n    uchar auStack1276 [140];\n    uchar auStack1136 [24];\n    uchar auStack1112 [8];\n    uchar auStack1104 [8];\n    uchar auStack1096 [8];\n    uchar auStack1088 [68];\n    uchar auStack1020 [8];\n    uchar auStack1012 [448];\n    uint uStack564;\n    uchar auStack560 [8];\n    uchar auStack552 [536];\n    int32_t iStack16;\n    \n    uVar3 = (*(*0x41c004 + 0x3f) & 1) != 0;\n    puStack1596 = &stack0xfffff9d8;\n    puStack1600 = &stack0xfffffae0;\n    puStack1604 = *0x41c004 + 0x115;\n    puStack1608 = *0x41c004 + 0x10;\n    uStack1616 = 1;\n    uStack1620 = **0x41c004;\n    puStack1624 = 0x403a7c;\n    uStack1612 = uVar3;\n    iVar1 = fcn.00406b20();\n    while( true ) {\n        if (iVar1 != 0) {\n            if ((*0x419684 & 1) != 0) {\n                puStack1628 = &stack0xfffffdd8;\n                puStack1632 = 0x403c2f;\n                sub.KERNEL32.dll_lstrcpyA();\n                puStack1632 = &stack0xfffffdd0;\n                puStack1636 = 0x403c3c;\n                fcn.0040b1a0();\n                puStack1636 = &stack0xfffffdcc;\n                puStack1640 = (*0x41c004)[1];\n                pcStack1644 = 0x403c53;\n                fcn.0040e7a0();\n            }\n            puStack1628 = 0x41d278;\n            puStack1632 = 0x403c5e;\n            fcn.0040e990();\n            puStack1632 = NULL;\n            puStack1636 = (*0x41c004)[2];\n            puStack1640 = 0x403c6e;\n            fcn.0040e8b0();\n            if (*(*0x41c004 + 0x559) != '\\0') {\n                puStack1640 = 0x1;\n                puStack1648 = 0x403c85;\n                pcStack1644 = *0x41c004 + 0x559;\n                uVar2 = fcn.0040be40();\n                (*0x41c004)[8] = uVar2;\n                if ((*0x41c004)[8] == -1) {\n                    return -0x28;\n                }\n            }\n            puStack1648 = (*0x41c004)[8];\n            puStack1652 = **0x41c004;\n            iVar1 = fcn.004069c0();\n            if ((iVar1 == 4) || (iVar1 == 0)) {\n                fcn.00407410(**0x41c004, 8, &stack0xfffff998);\n                fcn.0040c9b0((*0x41c004)[8], &stack0xfffff98c);\n            }\n            fcn.0040e8b0((*0x41c004)[2], 100);\n            if (((iVar1 == 4) || (iVar1 == 0)) && ((*0x419684 & 1) != 0)) {\n                auStack1136[0] = 0;\n                fcn.0040e7a0((*0x41c004)[1], &stack0xfffffb90);\n            }\n            return iVar1;\n        }\n        (*0x41c004)[0xb] = 0;\n        puStack1624 = *0x41c004 + 10;\n        *0x4196b0 = 0;\n        puStack1628 = 0x6;\n        puStack1632 = **0x41c004;\n        puStack1636 = 0x403ab3;\n        fcn.00407410();\n        (*0x41c004)[0x1d9] = 0;\n        puStack1636 = *0x41c004 + 0x115;\n        if (*puStack1636 == '\\0') {\n            if (uStack1616 == '\\0') {\n                puStack1636 = &stack0xfffffab8;\n                puStack1564 = &stack0xfffffbc0;\n                pcStack1644 = 0x403b84;\n                sub.KERNEL32.dll_lstrcpyA();\n            }\n            else {\n                puStack1636 = &stack0xfffff9b0;\n                puStack1640 = &stack0xfffffbc0;\n                pcStack1644 = 0x403b46;\n                sub.KERNEL32.dll_lstrcpyA();\n                puStack1648 = &stack0xfffffbb8;\n                pcStack1644 = 0x41d268;\n                puStack1652 = 0x403b58;\n                sub.KERNEL32.dll_lstrcatA();\n                puStack1652 = &stack0xfffffaa8;\n                puStack1564 = &stack0xfffffbb0;\n                sub.KERNEL32.dll_lstrcatA();\n            }\n        }\n        else {\n            puStack1640 = &stack0xfffffbc0;\n            pcStack1644 = 0x403adb;\n            sub.KERNEL32.dll_lstrcpyA();\n            puStack1556 = &stack0xfffffbb8;\n            pcStack1644 = 0x41d260;\n            puStack1652 = 0x403aed;\n            sub.KERNEL32.dll_lstrcatA();\n            if (puStack1632 != '\\0') {\n                puStack1652 = &stack0xfffff9a0;\n                sub.KERNEL32.dll_lstrcatA(&stack0xfffffbb0);\n                puStack1556 = &stack0xfffffba8;\n                sub.KERNEL32.dll_lstrcatA();\n            }\n            puStack1560 = &stack0xfffffb04;\n            puStack1564 = &stack0xfffffc0c;\n            puStack1568 = 0x403b2c;\n            sub.KERNEL32.dll_lstrcatA();\n        }\n        puStack1568 = &stack0xfffffc04;\n        uStack1572 = 0x41d26c;\n        uStack1576 = 0x403b96;\n        fcn.0040e990();\n        uStack1576 = 0;\n        fcn.0040e8b0();\n        iVar1 = fcn.00406950();\n        if (iVar1 != 0) break;\n        uStack1620 = (*0x41c004)[2];\n        puStack1596 = 0x403bcb;\n        fcn.0040e8b0();\n        if ((iStack16 != 0) || (iVar1 = 1,  uVar3 != 0)) {\n            puStack1596 = &stack0xfffff9d8;\n            puStack1600 = &stack0xfffffae0;\n            puStack1604 = *0x41c004 + 0x115;\n            puStack1608 = *0x41c004 + 0x10;\n            uStack1616 = 2;\n            uStack1620 = **0x41c004;\n            puStack1624 = 0x403c09;\n            uStack1612 = uVar3;\n            iVar1 = fcn.00406b20();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 1919
    },
    "00403d40": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00403d40(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uchar *puStack1656;\n    char *pcStack1652;\n    uchar *puStack1648;\n    uchar *puStack1644;\n    uchar *puStack1640;\n    uchar *puStack1636;\n    int32_t *piStack1632;\n    int32_t *piStack1628;\n    uchar *puStack1624;\n    uchar *puStack1620;\n    uchar auStack1576 [192];\n    char acStack1384 [16];\n    uchar auStack1368 [48];\n    int32_t aiStack1320 [52];\n    char acStack1112 [16];\n    char acStack1096 [40];\n    uchar auStack1056 [4];\n    uchar auStack1052 [204];\n    uchar auStack848 [16];\n    uchar auStack832 [36];\n    int32_t aiStack796 [2];\n    uchar auStack788 [196];\n    uchar auStack592 [8];\n    uchar auStack584 [8];\n    uchar auStack576 [8];\n    uchar auStack568 [4];\n    uchar auStack564 [4];\n    uchar auStack560 [8];\n    uchar auStack552 [4];\n    uchar auStack548 [4];\n    uchar auStack544 [4];\n    uchar auStack540 [4];\n    uchar auStack536 [4];\n    int32_t aiStack532 [125];\n    int32_t iStack32;\n    uint uStack20;\n    \n    puVar4 = (*(*0x41c004 + 0x3f) & 1) != 0;\n    puStack1624 = &stack0xfffffcec;\n    iVar3 = (*0x41c004)[6];\n    puStack1620 = &stack0xfffffbe4;\n    piStack1628 = *0x41c004 + 0x115;\n    piStack1632 = *0x41c004 + 0x10;\n    puStack1640 = 0x1;\n    puStack1644 = **0x41c004;\n    puStack1648 = 0x403d9e;\n    puStack1636 = puVar4;\n    iVar1 = fcn.00406b20();\n    do {\n        if (iVar1 != 0) break;\n        puStack1648 = &stack0xfffff9a8;\n        pcStack1652 = 0x6;\n        puStack1656 = **0x41c004;\n        fcn.00407410();\n        puStack1640 = NULL;\n        iVar2 = fcn.00410aa0(iVar3);\n        while (iVar2 != 0) {\n            sub.KERNEL32.dll_lstrcpyA();\n            if (*0x41c04c != 0) {\n                fcn.0040ed40(&stack0xfffff9a0, &stack0xfffffaa8);\n                fcn.0040ee00();\n                if (acStack1384[0] != '\\0') {\n                    fcn.0040ab70(&stack0xfffffa98);\n                    sub.KERNEL32.dll_lstrcpyA();\n                }\n            }\n            fcn.0040ed40();\n            fcn.0040f980();\n            fcn.0040ee00();\n            puStack1620 = &stack0xfffff9d8;\n            puStack1624 = 0x403e71;\n            iVar2 = sub.KERNEL32.dll_lstrcmpiA();\n            if (iVar2 == 0) {\n                puStack1624 = &stack0xfffffbe0;\n                piStack1628 = &stack0xfffffad8;\n                piStack1632 = 0x403e8a;\n                iVar2 = sub.KERNEL32.dll_lstrcmpiA();\n                if (iVar2 == 0) {\n                    puStack1636 = &stack0xfffffde8;\n                    piStack1632 = *0x41c004 + 0x145;\n                    puStack1640 = 0x403eb9;\n                    sub.KERNEL32.dll_lstrcpyA();\n                    puStack1640 = &stack0xfffffde0;\n                    puStack1644 = 0x403ec6;\n                    fcn.0040ebe0();\n                    puStack1644 = &stack0xfffff9bc;\n                    puStack1648 = &stack0xfffffddc;\n                    pcStack1652 = 0x403ed8;\n                    sub.KERNEL32.dll_lstrcatA();\n                    pcStack1652 = &stack0xfffff9a0;\n                    iVar1 = fcn.004062a0();\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                    if (puStack1640 == NULL) {\n                        fcn.00411010(iVar3);\n                    }\n                    if ((*0x41c028 != 0) && (iVar1 = fcn.00406600(),  iVar1 < 0)) {\n                        return iVar1;\n                    }\n                    break;\n                }\n            }\n            puStack1636 = 0x403e94;\n            iVar2 = fcn.00410b20();\n        }\n        if (puStack1644 != NULL) {\n            (*0x41c004)[0xb] = 0;\n            *0x4196b0 = 0;\n            (*0x41c004)[10] = puStack1640;\n            (*0x41c004)[0x1d9] = 0;\n            if (*(*0x41c004 + 0x115) == '\\0') {\n                if (acStack1096[0] == '\\0') {\n                    sub.KERNEL32.dll_lstrcpyA(&stack0xfffffdc8, &stack0xfffffcc0);\n                }\n                else {\n                    sub.KERNEL32.dll_lstrcpyA(&stack0xfffffdc8, &stack0xfffffbb8);\n                    sub.KERNEL32.dll_lstrcatA(&stack0xfffffdc0, 0x41d290);\n                    sub.KERNEL32.dll_lstrcatA(&stack0xfffffdb8, &stack0xfffffcb0);\n                }\n            }\n            else {\n                sub.KERNEL32.dll_lstrcpyA(&stack0xfffffdc8, *0x41c004 + 0x115);\n                sub.KERNEL32.dll_lstrcatA(&stack0xfffffdc0, 0x41d288);\n                if (acStack1112[0] != '\\0') {\n                    sub.KERNEL32.dll_lstrcatA(&stack0xfffffdb8, &stack0xfffffba8);\n                    sub.KERNEL32.dll_lstrcatA(&stack0xfffffdb0, 0x41d28c);\n                }\n                piStack1628 = &stack0xfffffce4;\n                piStack1632 = &stack0xfffffdec;\n                puStack1636 = 0x403fd7;\n                sub.KERNEL32.dll_lstrcatA();\n            }\n            puStack1636 = &stack0xfffffde4;\n            puStack1640 = 0x41d294;\n            puStack1644 = 0x404047;\n            fcn.0040e990();\n            puStack1644 = NULL;\n            puStack1648 = (*0x41c004)[2];\n            pcStack1652 = 0x404056;\n            fcn.0040e8b0();\n            pcStack1652 = **0x41c004;\n            puStack1656 = 0x404064;\n            iVar1 = fcn.00406950();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            puStack1656 = 0x64;\n            fcn.0040e8b0((*0x41c004)[2]);\n        }\n        if ((iStack32 == 0) && (puVar4 == NULL)) {\n            puStack1636 = 0x1;\n        }\n        else {\n            iVar1 = fcn.00406b20(**0x41c004, 2, puVar4, *0x41c004 + 0x10, *0x41c004 + 0x115, &stack0xfffffcc0, \n                                 &stack0xfffffbb8);\n        }\n    } while (puStack1620 == NULL);\n    if ((*0x419684 & 1) != 0) {\n        pcStack1652 = &stack0xfffffdd8;\n        puStack1648 = uStack20;\n        puStack1656 = 0x4040f3;\n        sub.KERNEL32.dll_lstrcpyA();\n        puStack1656 = &stack0xfffffdd0;\n        fcn.0040b1a0();\n        fcn.0040e7a0((*0x41c004)[1], &stack0xfffffdcc);\n    }\n    puStack1648 = uStack20;\n    pcStack1652 = \"Compacting : \";\n    puStack1656 = 0x40414b;\n    fcn.0040e990();\n    puStack1656 = NULL;\n    uVar5 = 0x40415b;\n    fcn.0040e8b0((*0x41c004)[2]);\n    if (*(*0x41c004 + 0x559) != '\\0') {\n        uVar5 = 1;\n        if (*0x41c050 == 0) {\n            iVar3 = fcn.0040be40(*0x41c004 + 0x559, 1);\n        }\n        else {\n            iVar3 = fcn.0040c070();\n        }\n        (*0x41c004)[8] = iVar3;\n        if ((*0x41c004)[8] == -1) {\n            return -0x28;\n        }\n    }\n    iVar3 = fcn.004069c0(**0x41c004, (*0x41c004)[8]);\n    fcn.0040e8b0((*0x41c004)[2], 100);\n    if (iVar3 == 0) {\n        fcn.00407410(**0x41c004, 7, &stack0xfffff98c);\n        fcn.0040c550((*0x41c004)[8], uVar5);\n    }\n    else {\n        if (iVar3 == 2) {\n            puStack1656 = 0xff;\n            iVar1 = (*0x41c004)[8];\n            goto code_r0x00404227;\n        }\n        if (iVar3 != 4) {\n            return iVar3;\n        }\n    }\n    fcn.00407410(**0x41c004, 8, &stack0xfffff994);\n    iVar1 = (*0x41c004)[8];\ncode_r0x00404227:\n    fcn.0040c9b0(iVar1, &stack0xfffff988);\n    return iVar3;\n}\n",
        "token_count": 2390
    },
    "00404330": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00404330(code *param_1, code *param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack8;\n    int32_t iStack4;\n    \n    uVar1 = *(*0x41c004 + 0x28);\n    while (uVar1 != 0) {\n        uStack8 = 0x1000;\n        if (uVar1 < 0x1000) {\n            uStack8 = uVar1;\n        }\n        iStack4 = (*param_1)(param_3, &uStack8, 0);\n        if (iStack4 == 0) break;\n        if (iStack4 != 0) {\n            (*param_2)(param_3, &iStack4, 0);\n            uVar1 = uVar1 - uStack8;\n        }\n    }\n    if ((*0x41c038 != 0) && (uVar1 != 0)) {\n        *(*0x41c004 + 0x764) = 0xffffffd4;\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 250
    },
    "004043c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004043c0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar *puStack1140;\n    uchar *puStack1136;\n    int32_t iStack1132;\n    uint uStack1128;\n    int32_t iStack1124;\n    uchar *puStack1120;\n    int32_t iStack1116;\n    uchar *puStack1112;\n    uchar *puStack1108;\n    uchar *puStack1104;\n    int32_t iStack1100;\n    int32_t iStack1096;\n    uint uStack1092;\n    int32_t iStack1088;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint uStack1072;\n    uchar *puStack1068;\n    uint uStack1052;\n    uchar auStack588 [28];\n    uchar auStack560 [520];\n    int32_t iStack40;\n    uchar *puStack32;\n    int32_t iStack12;\n    \n    puStack1068 = &stack0xfffffbe4;\n    uStack1052 = 0;\n    uStack1072 = (*0x41c004)[7];\n    puStack1076 = 0x4043e3;\n    fcn.0040c970();\n    puStack1076 = &stack0xfffffbd8;\n    uStack1080 = 0xf;\n    uStack1084 = **0x41c004;\n    iStack1088 = 0x4043f8;\n    fcn.00407410();\n    iStack1088 = iStack12;\n    uStack1092 = 0x404405;\n    iVar1 = fcn.0040d350();\n    if (iVar1 == 0) {\n        uStack1092 = 1;\n        iStack1096 = iStack12;\n        iStack1100 = 0x404411;\n        iStack1100 = fcn.0040be40();\n        if (iStack1100 == -1) {\n            iStack1100 = iStack12;\n            puStack1104 = 0x40441c;\n            fcn.004065c0();\n        }\n        else {\n            puStack1104 = 0x404424;\n            fcn.0040c320();\n        }\n    }\n    puStack1104 = &stack0xfffffdd0;\n    puStack1108 = puStack32;\n    puStack1112 = 0x404439;\n    fcn.0040fee0();\n    puStack1112 = &stack0xfffffbbc;\n    iStack1116 = iStack12;\n    puStack1120 = 0x404444;\n    fcn.0040fee0();\n    if (iStack40 == 0) {\n        if (*0x41c050 != 0) {\n            (*0x41c004)[0x1dd] = 1;\n        }\n        puStack1120 = &stack0xfffffba8;\n        iStack1124 = 6;\n        uStack1128 = **0x41c004;\n        iStack1132 = 0x4044c9;\n        fcn.00407410();\n    }\n    else {\n        (*0x41c004)[0x1dd] = 4;\n        if (puStack1104 < puStack1108) {\n            puStack1108 = 0xff;\n        }\n        puStack1120 = &stack0xfffffba8;\n        if (puStack1108 == 0xff) {\n            iStack1124 = 0x11;\n        }\n        else {\n            iStack1124 = 0x10;\n        }\n        uStack1128 = **0x41c004;\n        iStack1132 = 0x404492;\n        fcn.00407410();\n        iStack1124 = iStack1124 - puStack1120;\n    }\n    puStack1140 = &stack0xfffffba8;\n    iStack1132 = iStack1124;\n    puStack1136 = puStack1120;\n    iVar1 = 0x4044e5;\n    uVar2 = fcn.00405ef0(&stack0xfffffdb4);\n    (*0x41c004)[0x1d9] = uVar2;\n    if ((*0x41c004)[0x1d9] == -4) {\n        iVar1 = 0;\n        fcn.004102a0(&stack0xfffffb98, 0);\n    }\n    else if (*0x41c030 != 0) {\n        (*0x41c004)[0x1d9] = -0x25;\n    }\n    puStack1140 = puStack1140 + iVar1;\n    fcn.0040c9b0((*0x41c004)[7], &stack0xfffffb8c);\n    return;\n}\n",
        "token_count": 1066
    },
    "00404880": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00404880(int32_t param_1)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    bVar2 = false;\n    bVar1 = false;\n    if (param_1 == 0) {\n        bVar1 = true;\n    }\n    else if (param_1 == 0x10000) {\n        bVar2 = true;\n    }\n    if (*0x41c02c == 0) {\n        if (!bVar1) {\n            fcn.0040c320(*(*0x41c004 + 0x1c));\n            if (bVar2) {\n                fcn.00410e80(*(*0x41c004 + 0x18));\n            }\n        }\n        return 0xffffffdc;\n    }\n    iVar3 = (**0x41c024)(*0x41c02c, 0x4196c0, *(*0x41c004 + 0x28), *(*0x41c004 + 0x38), *(*0x41c004 + 0x2c), 0);\n    if (iVar3 == 0) {\n        if (!bVar1) {\n            fcn.0040c320(*(*0x41c004 + 0x1c));\n            if (bVar2) {\n                fcn.00410e80(*(*0x41c004 + 0x18));\n            }\n        }\n        return 0xffffffdb;\n    }\n    if (*0x41c030 != 0) {\n        if (!bVar1) {\n            fcn.0040c320(*(*0x41c004 + 0x1c));\n            if (bVar2) {\n                fcn.00410e80(*(*0x41c004 + 0x18));\n            }\n        }\n        return 0xffffffdb;\n    }\n    return 0;\n}\n",
        "token_count": 419
    },
    "00404a20": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00404a20(uint32_t param_1, uint32_t *param_2, uchar *param_3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *puStack648;\n    uint32_t *puStack644;\n    int32_t iStack640;\n    int32_t iStack636;\n    uint32_t uStack632;\n    int32_t iStack628;\n    int32_t *piStack624;\n    uchar *puStack620;\n    uchar *puStack616;\n    uchar auStack556 [28];\n    uchar auStack528 [236];\n    uchar auStack292 [28];\n    uchar auStack264 [200];\n    uint uStack64;\n    uint uStack56;\n    uint uStack40;\n    uint uStack28;\n    \n    bVar1 = false;\n    *param_2 = 0;\n    *param_3 = 0;\n    uStack632 = (param_1 & 0x1000000) != 0;\n    puStack616 = &stack0xfffffef8;\n    puStack620 = &stack0xfffffdf0;\n    piStack624 = *0x41c004 + 0x115;\n    iStack628 = *0x41c004 + 0x24a;\n    iStack636 = 1;\n    iStack640 = **0x41c004;\n    puStack644 = 0x404aa1;\n    iVar2 = fcn.00406b20();\n    if (iVar2 != 0) {\n        if ((*(*0x41c004 + 0x3e) & 0x20) == 0) {\n            return iVar2;\n        }\n        if (iVar2 < 0) {\n            return iVar2;\n        }\n    }\n    if (((param_1 & 0x400) != 0) && ((param_1 & 0x800) != 0)) {\n        param_1 = param_1 ^ 0x800;\n    }\n    param_1 = param_1 & 0xffff;\n    if (0x100 < param_1) {\n        if (param_1 != 0x200) {\n            if (param_1 == 0x400) {\n                puStack644 = param_2;\n                puStack648 = 0xb;\n                iVar2 = **0x41c004;\n                iVar4 = fcn.00407410();\n                if (iVar4 == 0) {\n                    return -1;\n                }\n                iVar4 = fcn.0040d200(*param_2, uStack28);\n                if (iVar4 == 0) {\n                    return -1;\n                }\n                if ((puStack620 != NULL) || (*param_2 == 0)) {\n                    iStack640 = 0;\n                    fcn.00407410(**0x41c004, 0xc, &stack0xfffffd80);\n                    if ((*param_2 == 0) && (iVar2 == 0)) {\n                        return 8;\n                    }\n                    iVar2 = fcn.0040d200(iVar2, &stack0xfffffda0);\n                    if (iVar2 == 0) {\n                        return -1;\n                    }\n                    sub.KERNEL32.dll_lstrcatA(uStack56, 0x41d2b4);\n                    sub.KERNEL32.dll_lstrcatA(uStack64, &stack0xfffffd90);\n                }\n            }\n            else {\n                if (param_1 != 0x800) goto code_r0x00404b20;\n                puStack644 = param_2;\n                puStack648 = 0xc;\n                iVar2 = **0x41c004;\n                iVar4 = fcn.00407410();\n                if (iVar4 == 0) {\n                    return -1;\n                }\n                iVar4 = fcn.0040d200(*param_2, uStack28);\n                if (iVar4 == 0) {\n                    return -1;\n                }\n                if (*param_2 == 0) {\n                    iStack640 = 0;\n                    fcn.00407410(**0x41c004, 0xb, &stack0xfffffd80);\n                    if (iVar2 == 0) {\n                        return 8;\n                    }\n                }\n            }\n            goto code_r0x004050b9;\n        }\ncode_r0x00404d5f:\n        puStack644 = param_2;\n        puStack648 = 0x5;\n        iVar2 = fcn.00407410(**0x41c004);\n        if (iVar2 == 0) {\n            return -1;\n        }\n        iVar2 = fcn.0040d0d0(*param_2, &stack0xfffffda8, &stack0xfffffda0);\n        if (iVar2 == 0) {\n            return -1;\n        }\n        if (iStack628 == 0) {\n            *param_2 = *param_2 >> 0x10;\n            sub.KERNEL32.dll_lstrcpyA(uStack40, &stack0xfffffd94);\n        }\n        else {\n            *param_2 = *param_2;\n            sub.KERNEL32.dll_lstrcpyA(uStack40, &stack0xfffffd9c);\n        }\n        goto code_r0x004050b9;\n    }\n    if (param_1 == 0x100) goto code_r0x00404d5f;\n    // switch table (9 cases) at 0x4050c8\n    switch(param_1) {\n    case 1:\n        do {\n            while( true ) {\n                while( true ) {\n                    if (bVar1) {\n                        if (iVar2 != 1) {\n                            return iVar2;\n                        }\n                        goto code_r0x004050b9;\n                    }\n                    puStack644 = &stack0xfffffd90;\n                    puStack648 = 0x9;\n                    iVar2 = fcn.00407410(**0x41c004);\n                    if (iVar2 == 0) {\n                        return -1;\n                    }\n                    *param_2 = *param_2 + iStack636;\n                    iStack640 = **0x41c004;\n                    iVar2 = fcn.00406b20();\n                    if (iVar2 != 1) break;\n                    bVar1 = true;\n                }\n                if (iVar2 < 1) break;\n                if (((*0x41c004)[0xf] & 0x200000U) == 0) {\n                    bVar1 = true;\n                }\n            }\n        } while (-1 < iVar2);\n        break;\n    case 2:\n        do {\n            while( true ) {\n                while( true ) {\n                    if (bVar1) goto joined_r0x00404cec;\n                    puStack644 = &stack0xfffffd90;\n                    puStack648 = 0x6;\n                    iVar2 = fcn.00407410(**0x41c004);\n                    if (iVar2 == 0) {\n                        return -1;\n                    }\n                    *param_2 = *param_2 + iStack636;\n                    iStack640 = **0x41c004;\n                    iVar2 = fcn.00406b20();\n                    if (iVar2 != 1) break;\n                    bVar1 = true;\n                }\n                if (iVar2 < 1) break;\n                if (((*0x41c004)[0xf] & 0x200000U) == 0) {\n                    bVar1 = true;\n                }\n            }\n        } while (-1 < iVar2);\n        break;\n    case 3:\n        puStack644 = param_2;\n        puStack648 = 0xa;\n        iVar2 = fcn.00407410(**0x41c004);\n        if (iVar2 == 0) {\n            return -1;\n        }\n        iVar2 = fcn.0040d180(*param_2, uStack28);\n        if (iVar2 == 0) {\n            return -1;\n        }\n        goto code_r0x004050b9;\n    default:\ncode_r0x00404b20:\n        iVar2 = -0x19;\n        break;\n    case 8:\n        do {\n            while( true ) {\n                while( true ) {\n                    if (bVar1) goto joined_r0x00404cec;\n                    puStack644 = &stack0xfffffedc;\n                    puStack648 = &stack0xfffffdd4;\n                    iStack640 = **0x41c004;\n                    iVar2 = fcn.00406b20();\n                    if (iVar2 != 1) break;\n                    bVar1 = true;\n                }\n                if (iVar2 < 1) break;\n                if (((*0x41c004)[0xf] & 0x200000U) == 0) {\n                    bVar1 = true;\n                }\n            }\n        } while (-1 < iVar2);\n        break;\n    case 9:\n        if (iVar2 != 6) {\n            do {\n                if (iVar2 == 5) {\n                    puStack644 = &stack0xfffffd94;\n                    puStack648 = 0x12;\n                    iVar2 = **0x41c004;\n                    iVar4 = fcn.00407410();\n                    if (iVar4 == 0) {\n                        return -1;\n                    }\n                    puVar7 = &stack0xfffffd8c;\n                    iVar6 = 8;\n                    iVar4 = **0x41c004;\n                    iVar3 = fcn.00407410();\n                    if (iVar3 == 0) {\n                        return -1;\n                    }\n                    puVar5 = &stack0xfffffd78;\n                    iVar3 = fcn.00407410(**0x41c004, 0x11);\n                    if (iVar3 == 0) {\n                        return -1;\n                    }\n                    if (puVar7 == NULL) {\n                        if (iVar6 == iVar2) {\n                            *param_2 = iVar6 - 0xff;\n                            goto code_r0x004050b9;\n                        }\n                    }\n                    else {\n                        if (iVar6 == 0) {\n                            *param_2 = *param_2 + (iVar2 - puVar7);\n                            goto code_r0x004050b9;\n                        }\n                        if (puVar7 == 0xff) {\n                            if (iVar6 == iVar2) {\n                                *param_2 = iVar6 - 0xff;\n                                goto code_r0x004050b9;\n                            }\n                        }\n                        else {\n                            iVar2 = fcn.00407410(**0x41c004, 0xf, &stack0xfffffd7c);\n                            if (iVar2 == 0) {\n                                return -1;\n                            }\n                            if (puVar7 == puVar5) {\n                                *param_2 = *param_2 + (iVar4 - puVar5);\n                                goto code_r0x004050b9;\n                            }\n                        }\n                    }\n                }\n                else {\n                    puStack644 = &stack0xfffffd90;\n                    puStack648 = 0x6;\n                    iVar2 = fcn.00407410(**0x41c004);\n                    if (iVar2 == 0) {\n                        return -1;\n                    }\n                }\n                if (piStack624 != NULL) {\n                    piStack624 = NULL;\n                }\n                *param_2 = *param_2 + iStack636;\n                iStack640 = **0x41c004;\n                iVar2 = fcn.00406b20();\n                if ((iVar2 == 1) || (iVar2 == 6)) {\ncode_r0x00404cdc:\n                    bVar1 = true;\n                }\n                else if (iVar2 < 1) {\n                    if (iVar2 < 0) {\n                        return iVar2;\n                    }\n                }\n                else if ((*(*0x41c004 + 0x3e) & 0x20) == 0) goto code_r0x00404cdc;\n            } while (!bVar1);\njoined_r0x00404cec:\n            if (iVar2 != 1) {\n                return iVar2;\n            }\n        }\ncode_r0x004050b9:\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 2695
    },
    "004050f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004050f0(char **param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *unaff_EBX;\n    uint *unaff_ESI;\n    int32_t unaff_retaddr;\n    uint *puVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uint *puStack12;\n    uint32_t *puStack8;\n    uint *puStack4;\n    \n    sub.KERNEL32.dll_lstrcpyA(param_1, 0x41d2b8);\n    uVar8 = 0x41d2bc;\n    iVar7 = unaff_retaddr;\n    sub.KERNEL32.dll_lstrcpyA(unaff_retaddr, 0x41d2bc);\n    uVar6 = 0x41d2c0;\n    puVar5 = puStack4;\n    sub.KERNEL32.dll_lstrcpyA(puStack4, 0x41d2c0);\n    iVar11 = 1;\n    *puStack4 = 0;\n    iVar10 = 1;\n    iVar9 = 0;\n    *0x4196a0 = 0;\n    if (1 < unaff_retaddr) {\n        unaff_retaddr = unaff_retaddr + -1;\n        do {\n            param_1 = param_1 + 1;\n            pcVar2 = *param_1;\n            if ((*pcVar2 == '-') || (*pcVar2 == '/')) {\n    // switch table (19 cases) at 0x4053c0\n                switch(pcVar2[1]) {\n                case 0x43:\n                case 99:\n                    *puStack8 = *puStack8 | 0x10000;\n                    break;\n                case 0x44:\n                case 100:\n                    cVar1 = pcVar2[2];\n                    if (cVar1 == '\\0') {\n                        iVar9 = 1;\n                        *puStack8 = *puStack8 | 0x20000;\n                    }\n                    else {\n                        if ((cVar1 == 't') || (cVar1 == 'T')) {\n                            iVar9 = 1;\n                        }\n                        *puStack8 = *puStack8 | 0x80000;\n                    }\n                    break;\n                default:\n                    fcn.00414941(\"\\n Unknown option -%c , will ignore and continue.\", pcVar2[1]);\n                    break;\n                case 0x48:\n                case 0x68:\n                    *0x4196a0 = 1;\n                    break;\n                case 0x49:\n                case 0x69:\n                    *puStack8 = *puStack8 | 0x1000000;\n                    break;\n                case 0x4c:\n                case 0x6c:\n                    cVar1 = pcVar2[2];\n                    if (cVar1 == '\\0') {\n                        iVar9 = 1;\n                        *puStack8 = 0x400000;\n                    }\n                    else if ((cVar1 == 'f') || (cVar1 == 'F')) {\n                        *0x41c04c = 1;\n                        iVar3 = 3;\n                        iVar4 = 0;\n                        cVar1 = (*param_1)[3];\n                        while ((cVar1 != ' ' && ((*param_1)[iVar3] != '\\0'))) {\n                            *(iVar4 + 0x4196c0) = (*param_1)[iVar3];\n                            iVar4 = iVar4 + 1;\n                            iVar3 = iVar3 + 1;\n                            cVar1 = (*param_1)[iVar3];\n                        }\n                    }\n                    break;\n                case 0x4f:\n                case 0x6f:\n                    cVar1 = pcVar2[2];\n                    if (cVar1 == '\\0') {\n                        *puStack8 = *puStack8 | 0x1000;\n                    }\n                    else if ((cVar1 == 'x') || (cVar1 == 'X')) {\n                        *puStack8 = *puStack8 | 0x4000;\n                    }\n                    break;\n                case 0x50:\n                case 0x70:\n                    *0x41c044 = 1;\n                    iVar3 = 2;\n                    iVar4 = 0;\n                    cVar1 = (*param_1)[2];\n                    while ((cVar1 != ' ' && ((*param_1)[iVar3] != '\\0'))) {\n                        *(iVar4 + 0x419690) = (*param_1)[iVar3];\n                        iVar4 = iVar4 + 1;\n                        iVar3 = iVar3 + 1;\n                        cVar1 = (*param_1)[iVar3];\n                    }\n                    break;\n                case 0x52:\n                case 0x72:\n                    iVar9 = 1;\n                    *puStack8 = *puStack8 | 0x40000;\n                    break;\n                case 0x53:\n                case 0x73:\n                    cVar1 = pcVar2[2];\n                    if ((cVar1 == 'l') || (cVar1 == 'L')) {\n                        *0x41c008 = 0x400;\n                    }\n                    else if ((cVar1 == 'm') || (cVar1 == 'M')) {\n                        *0x41c008 = 0x800;\n                    }\n                    else if ((cVar1 == 'n') || (cVar1 == 'N')) {\n                        *0x41c008 = 0;\n                    }\n                    else {\n                        *0x41c008 = 0x1000;\n                    }\n                }\n            }\n            else if (iVar11 == 0) {\n                if (iVar10 == 0) {\n                    puVar5 = puStack12;\n                    sub.KERNEL32.dll_lstrcpyA();\n                }\n                else {\n                    puVar12 = unaff_EBX;\n                    sub.KERNEL32.dll_lstrcpyA();\n                    uVar8 = 0;\n                    puVar5 = unaff_EBX;\n                    unaff_EBX = puVar12;\n                }\n            }\n            else {\n                puVar12 = unaff_ESI;\n                sub.KERNEL32.dll_lstrcpyA();\n                iVar9 = 0;\n                uVar8 = 1;\n                puVar5 = unaff_ESI;\n                unaff_ESI = puVar12;\n            }\n            unaff_retaddr = unaff_retaddr + -1;\n        } while (unaff_retaddr != 0);\n    }\n    if (iVar9 == 0) {\n        *puStack8 = *puStack8 | 0x10000;\n    }\n    if (((*(puStack8 + 2) & 4) == 0) && (*unaff_ESI != '\\0')) {\n        fcn.00406710(unaff_ESI, puVar5, uVar6, iVar7, uVar8);\n    }\n    if (*unaff_EBX != '\\0') {\n        fcn.00406710(unaff_EBX, puVar5, uVar6, iVar7, uVar8);\n    }\n    return;\n}\n",
        "token_count": 1582
    },
    "00405440": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.00405440(char *param_1)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcStack696;\n    char *pcStack692;\n    char *pcStack688;\n    char *pcStack684;\n    uchar *puStack680;\n    char *pcStack676;\n    char *pcStack672;\n    char *pcStack668;\n    uchar *puStack664;\n    char *pcStack660;\n    int32_t iStack656;\n    char *pcStack652;\n    uint *puStack648;\n    char *pcStack644;\n    uchar *puStack640;\n    uchar *puStack636;\n    uint uStack632;\n    uint *puStack628;\n    int32_t iStack624;\n    char *pcStack620;\n    int32_t iStack616;\n    char *pcStack612;\n    uint *puStack608;\n    char *pcStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uchar auStack332 [332];\n    \n    *0x4196c0 = 0;\n    if (*param_1 == '\\0') {\n        iVar1 = -2;\n    }\n    else {\n        uStack592 = 0;\n        uStack596 = 0;\n        uStack600 = 0x400000;\n        pcStack604 = 0x405475;\n        iVar1 = fcn.004059d0();\n        pcStack604 = param_1;\n        if (iVar1 == 0) {\n            puStack608 = 0x405490;\n            fcn.0040ebe0();\n            puStack608 = *0x41c004 + 0x10;\n            pcStack612 = param_1;\n            iStack616 = 0x40549f;\n            fcn.0040ee00();\n            if (*(*0x41c004 + 0x10) == '\\0') {\n                iVar1 = -1;\n            }\n            else {\n                iStack616 = *0x41c004 + 0x145;\n                pcStack620 = param_1;\n                iStack624 = 0x4054c6;\n                fcn.0040ed40();\n                iStack624 = *0x41c004 + 0x145;\n                puStack628 = 0x4054d6;\n                fcn.0040ab70();\n                puStack628 = *0x41c004 + 0x10;\n                uStack632 = 0x4054e4;\n                iVar1 = fcn.0040f5f0();\n                if (iVar1 == 0) {\n                    uStack632 = 0;\n                    puStack636 = NULL;\n                    puStack640 = 0x2;\n                    pcStack644 = param_1;\n                    puStack648 = **0x41c004;\n                    pcStack652 = 0x405506;\n                    iVar1 = fcn.00406cf0();\n                    if (iVar1 == 3) {\n                        iVar2 = 0;\n                        iVar4 = 0;\n                        iVar3 = 0;\n                        pcStack652 = \"Name\";\n                        iStack656 = 0x41d300;\n                        pcStack660 = \"Attr\";\n                        puStack664 = 0x41d314;\n                        pcStack668 = \"Time\";\n                        pcStack672 = \"Date\";\n                        pcStack676 = \" %s     %s  %s %s %s %s\\n\";\n                        puStack680 = 0x405556;\n                        fcn.00414941();\n                        pcStack652 = 0x41d34c;\n                        iStack656 = 0x41d354;\n                        pcStack660 = 0x41d360;\n                        puStack664 = 0x41d368;\n                        pcStack668 = 0x41d374;\n                        pcStack672 = \"========\";\n                        pcStack676 = \" %s %s %s %s %s %s\\n\";\n                        puStack680 = 0x405581;\n                        fcn.00414941();\n                        iStack656 = *0x41c004 + 0x24a;\n                        pcStack652 = 0x41d39c;\n                        pcStack660 = 0x405599;\n                        sub.KERNEL32.dll_lstrcpyA();\n                        pcStack660 = &stack0xfffffdac;\n                        puStack664 = &stack0xfffffeb4;\n                        pcStack668 = *0x41c004 + 0x115;\n                        pcStack672 = *0x41c004 + 0x24a;\n                        pcStack676 = 0x1;\n                        puStack680 = 0x1;\n                        pcStack684 = **0x41c004;\n                        pcStack688 = 0x4055cd;\n                        iVar1 = fcn.00406b20();\n                        if (iVar1 == 5) {\n                            iVar1 = 0;\n                        }\n                        while (iVar1 == 0) {\n                            pcStack688 = &stack0xfffffd68;\n                            pcStack692 = 0x9;\n                            pcStack696 = **0x41c004;\n                            fcn.00407410();\n                            fcn.00407410(**0x41c004, 6, &stack0xfffffd58);\n                            fcn.00407410(**0x41c004, 5, &stack0xfffffd58);\n                            fcn.00407410(**0x41c004, 10, &stack0xfffffd48);\n                            if (pcStack672 == '\\0') {\n                                puStack636 = &stack0xfffffd60;\n                                sub.KERNEL32.dll_lstrcpyA();\n                            }\n                            else {\n                                sub.KERNEL32.dll_lstrcatA(&stack0xfffffd60, 0x41d3a0);\n                                puStack636 = &stack0xfffffd58;\n                                sub.KERNEL32.dll_lstrcatA();\n                            }\n                            iVar2 = iVar2 + 1;\n                            puStack640 = &stack0xfffffdac;\n                            pcStack644 = &stack0xfffffdb4;\n                            puStack648 = puStack608;\n                            pcStack652 = 0x405684;\n                            fcn.0040d0d0();\n                            pcStack652 = &stack0xfffffd98;\n                            iStack656 = iStack624;\n                            pcStack660 = 0x405693;\n                            fcn.0040d180();\n                            pcStack660 = &stack0xfffffdac;\n                            pcStack668 = &stack0xfffffd90;\n                            puStack664 = puStack640;\n                            pcStack676 = &stack0xfffffd98;\n                            puStack680 = &stack0xfffffda0;\n                            pcStack672 = puStack636;\n                            pcStack684 = \" %s %s %8lu %s %8lu %s\\n\";\n                            pcStack688 = 0x4056bb;\n                            fcn.00414941();\n                            iVar3 = iVar3 + puStack636;\n                            iVar4 = iVar4 + puStack640;\n                            pcStack660 = &stack0xfffffdac;\n                            puStack664 = &stack0xfffffeb4;\n                            pcStack668 = *0x41c004 + 0x115;\n                            pcStack672 = *0x41c004 + 0x24a;\n                            pcStack676 = 0x1;\n                            puStack680 = 0x2;\n                            pcStack684 = **0x41c004;\n                            pcStack688 = 0x4056fa;\n                            iVar1 = fcn.00406b20();\n                        }\n                        pcStack688 = 0x41d3bc;\n                        pcStack692 = 0x41d3c8;\n                        pcStack696 = 0x41d3d4;\n                        fcn.00414941(0x41d3e0);\n                        pcStack688 = \"FileCount\";\n                        pcStack692 = \"CompSize\";\n                        pcStack696 = \"OrigSize\";\n                        fcn.00414941(0x41d424);\n                        pcStack688 = \"---------\";\n                        pcStack692 = 0x41d450;\n                        pcStack696 = \"--------\";\n                        fcn.00414941(\"                %s      %s %s\\n\");\n                        pcStack688 = iVar2;\n                        pcStack696 = iVar3;\n                        pcStack692 = iVar4;\n                        fcn.00414941(\"               %9lu     %9lu     %5d\\n\");\n                        pcStack688 = **0x41c004;\n                        pcStack692 = 0x405778;\n                        fcn.00406a70();\n                        pcStack692 = NULL;\n                        pcStack696 = 0x40577f;\n                        fcn.00405b60();\n                    }\n                    else {\n                        if (iVar1 == -0x29) {\n                            iVar1 = -5;\n                        }\n                        pcStack652 = param_1;\n                        iStack656 = 0x4196c0;\n                        pcStack660 = 0x405522;\n                        sub.KERNEL32.dll_lstrcpyA();\n                    }\n                }\n                else {\n                    iVar1 = -0xe;\n                }\n            }\n        }\n        else {\n            puStack608 = 0x4196c0;\n            pcStack612 = 0x405486;\n            sub.KERNEL32.dll_lstrcpyA();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 2041
    },
    "00405790": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00405790(void)\n\n{\n    int32_t iVar1;\n    uint32_t in_stack_00000010;\n    uint in_stack_00000014;\n    uchar *puStack1436;\n    uint uStack1432;\n    uint uStack1428;\n    uchar *puStack1424;\n    int32_t iStack1420;\n    int32_t iStack1416;\n    uchar *puStack1412;\n    uint32_t uStack1408;\n    char *pcStack1404;\n    uint uStack1400;\n    uchar *puStack1396;\n    int32_t iStack1392;\n    uchar *puStack1388;\n    uchar *puStack1384;\n    int32_t iStack1380;\n    int32_t iStack1376;\n    uchar *puStack1372;\n    int32_t iStack1368;\n    char *pcStack1364;\n    uint uStack1360;\n    int32_t iStack1356;\n    int32_t iStack1352;\n    uchar *puStack1348;\n    uchar *puStack1344;\n    int32_t iStack1340;\n    uint uStack1336;\n    uint32_t uStack1332;\n    uint uStack1328;\n    uint uStack1324;\n    uchar auStack1132 [16];\n    uchar auStack1116 [4];\n    uchar auStack1112 [8];\n    uchar auStack1104 [536];\n    uchar auStack568 [20];\n    uchar auStack548 [8];\n    uchar auStack540 [456];\n    int32_t iStack84;\n    int32_t iStack48;\n    int32_t iStack12;\n    \n    uStack1324 = 0;\n    uStack1328 = in_stack_00000014;\n    uStack1332 = in_stack_00000010;\n    uStack1336 = 0x4057af;\n    iVar1 = fcn.004059d0();\n    if (iVar1 == 0) {\n        uStack1336 = in_stack_00000014;\n        iStack1340 = 0x4057bd;\n        fcn.0040e860();\n        auStack540[0] = 0;\n        if (iStack12 != 0) {\n            puStack1344 = &stack0xfffffde4;\n            iStack1340 = iStack12;\n            puStack1348 = 0x4057de;\n            sub.KERNEL32.dll_lstrcpyA();\n        }\n        puStack1348 = &stack0xfffffddc;\n        iStack1352 = 0x4057eb;\n        fcn.0040ebe0();\n        iStack1352 = *0x41c004 + 0x40;\n        iStack1356 = iStack12;\n        uStack1360 = 0x4057fa;\n        fcn.0040ee00();\n        if (*(*0x41c004 + 0x40) == '\\0') {\n            if ((in_stack_00000010 & 0x10000) == 0) {\n                uStack1360 = 0;\n                pcStack1364 = 0x4058c1;\n                fcn.00405b60();\n                return -2;\n            }\n            uStack1360 = 0x41d4b0;\n            iStack1368 = 0x40581e;\n            pcStack1364 = *0x41c004 + 0x40;\n            sub.KERNEL32.dll_lstrcpyA();\n        }\n        puStack1372 = &stack0xfffffdc8;\n        iStack1368 = *0x41c004 + 0x145;\n        iStack1376 = 0x405836;\n        fcn.0040ed40();\n        iStack1376 = *0x41c004 + 0x145;\n        iStack1380 = 0x405846;\n        fcn.0040ab70();\n        auStack1104[0] = 0;\n        if (iStack48 != 0) {\n            iStack1380 = iStack48;\n            puStack1384 = &stack0xfffffbb0;\n            puStack1388 = 0x405867;\n            sub.KERNEL32.dll_lstrcpyA();\n        }\n        puStack1388 = &stack0xfffffba8;\n        iStack1392 = 0x405874;\n        fcn.0040ebe0();\n        puStack1396 = &stack0xfffffba4;\n        iStack1392 = *0x41c004 + 0x24a;\n        uStack1400 = 0x40588c;\n        fcn.0040ee00();\n        if (*(*0x41c004 + 0x24a) == '\\0') {\n            if ((in_stack_00000010 & 0xa0000) == 0) {\n                uStack1400 = 0;\n                pcStack1404 = 0x4058aa;\n                fcn.00405b60();\n                return -3;\n            }\n            uStack1400 = 0x41d4b4;\n            uStack1408 = 0x4058dc;\n            pcStack1404 = *0x41c004 + 0x24a;\n            sub.KERNEL32.dll_lstrcpyA();\n        }\n        puStack1412 = &stack0xfffffb94;\n        uStack1408 = *0x41c004 + 0x34f;\n        iStack1416 = 0x4058f4;\n        fcn.0040ed40();\n        iStack1416 = *0x41c004 + 0x34f;\n        iStack1420 = 0x405904;\n        fcn.0040ab70();\n        uStack1408 = uStack1408 & 0xffffff00;\n        if (iStack84 != 0) {\n            iStack1420 = iStack84;\n            puStack1424 = &stack0xfffffa80;\n            uStack1428 = 0x40591f;\n            sub.KERNEL32.dll_lstrcpyA();\n        }\n        if (iStack1416 != '\\0') {\n            uStack1428 = &stack0xfffffa78;\n            uStack1432 = 0x405934;\n            fcn.0040ab70();\n            puStack1436 = &stack0xfffffa74;\n            uStack1432 = 0x41d4b8;\n            fcn.0040f550();\n            if (uStack1428 != '\\0') {\n                if (uStack1428._1_1_ == ':') {\n                    fcn.00405b60(0);\n                    return -0xb;\n                }\n                if (uStack1428 == '\\\\') {\n                    if (uStack1428._1_1_ == '\\0') {\n                        uStack1428 = uStack1428 & 0xffffff00;\n                    }\n                    else {\n                        sub.KERNEL32.dll_lstrcpyA(&stack0xfffffa6c, &stack0xfffffa6d);\n                    }\n                }\n                if (puStack1436 != '\\0') {\n                    fcn.0040ed40(&stack0xfffffa64, *0x41c004 + 0x454);\n                }\n                fcn.0040f980(*0x41c004 + 0x454);\n            }\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 1622
    },
    "004059d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405ae2)\n\nuint fcn.004059d0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t unaff_EDI;\n    int32_t *piVar3;\n    \n    if ((*0x41c000 == -1) && (*0x41c000 = fcn.00411910(0xe00, 0x1103),  *0x41c000 == -1)) {\n        return 0xfffffffa;\n    }\n    *0x41c004 = fcn.00411f80(*0x41c000);\n    if (*0x41c004 == NULL) {\n        fcn.00411e00(*0x41c000);\n        *0x41c000 = 0xffffffff;\n        return 0xfffffffa;\n    }\n    piVar3 = *0x41c004;\n    for (iVar2 = 0x1df; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    iVar2 = fcn.00406c00(*0x41c000, *0x41c004, unaff_EDI, unaff_EBX);\n    **0x41c004 = iVar2;\n    if (**0x41c004 == 0) {\n        fcn.00411e00(*0x41c000);\n        *0x41c000 = 0xffffffff;\n        return 0xffffffff;\n    }\n    iVar2 = fcn.0040e800(0x77d, 4);\n    (*0x41c004)[1] = iVar2;\n    uVar1 = fcn.0040e800(0x77d, 0xb);\n    iVar2 = fcn.0040e7e0(uVar1);\n    (*0x41c004)[2] = iVar2;\n    uVar1 = fcn.0040e800(0x77d, 0xb);\n    iVar2 = fcn.0040e7f0(uVar1);\n    (*0x41c004)[3] = iVar2;\n    iVar2 = fcn.0040e840(0x77d);\n    if (iVar2 != 0) {\n        (*0x41c004)[4] = 0x77d;\n        (*0x41c004)[5] = iVar2;\n        (*0x41c004)[0xf] = unaff_EDI;\n        return 0;\n    }\n    fcn.00407150(**0x41c004, 0);\n    fcn.00411e00(*0x41c000);\n    *0x41c000 = 0xffffffff;\n    return 0xffffffff;\n}\n",
        "token_count": 625
    },
    "00405b60": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00405b60(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*0x41c004 == NULL) {\n        return 0;\n    }\n    if (*0x41c000 == -1) {\n        return 0;\n    }\n    uVar1 = fcn.00407150(**0x41c004, param_1);\n    fcn.00411b40(*0x41c000, *0x41c004);\n    *0x41c004 = NULL;\n    if (param_1 == 0) {\n        fcn.00411e00(*0x41c000);\n        *0x41c000 = -1;\n    }\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "00405c10": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00405c10(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iStack608;\n    uchar *puStack604;\n    uint uStack600;\n    uchar *puStack596;\n    uint uStack592;\n    uchar *puStack588;\n    uchar *puStack584;\n    int32_t iStack580;\n    uchar *puStack576;\n    int32_t iStack572;\n    uchar *puStack568;\n    uint uStack564;\n    int32_t iStack560;\n    int32_t iStack556;\n    uchar *puStack552;\n    uint uStack548;\n    uchar *puStack544;\n    uint uStack540;\n    uint uStack528;\n    uchar auStack524 [480];\n    int32_t iStack44;\n    uint uStack20;\n    \n    uStack528 = 0;\n    if (*0x41c04c != 0) {\n        uStack540 = 0x405c2e;\n        uVar1 = fcn.00406820();\n        return uVar1;\n    }\n    bVar3 = (*(*0x41c004 + 0x3f) & 1) != 0;\n    puStack544 = &stack0xfffffdf0;\n    uStack540 = 1;\n    puStack552 = &stack0xfffffdf4;\n    uStack548 = 0x20a;\n    if (bVar3) {\n        iStack556 = *0x41c004 + 0x40;\n        iStack560 = *0x41c004 + 0x145;\n        uStack564 = 0x405c79;\n        iVar2 = fcn.0040de10();\n    }\n    else {\n        iStack556 = *0x41c004 + 0x40;\n        iStack560 = *0x41c004 + 0x145;\n        uStack564 = 0x405c8f;\n        iVar2 = fcn.0040de50();\n    }\n    if (iVar2 < 0) {\n        return 0xfffffffe;\n    }\n    puStack568 = &stack0xfffffddc;\n    uStack564 = uStack20;\n    iStack572 = 0x405cb5;\n    iVar2 = fcn.0040f020();\n    if (iVar2 == 0) {\n        puStack576 = &stack0xfffffdd4;\n        iStack572 = *0x41c004 + 0x145;\n        iStack580 = 0x405cd2;\n        iVar2 = fcn.0040f550();\n        if (iVar2 == 0) {\n            iStack580 = *0x41c004 + 0x145;\n            puStack584 = 0x4196c0;\n            puStack588 = 0x405ceb;\n            sub.KERNEL32.dll_lstrcpyA();\n            return 0xfffffff5;\n        }\n        iStack580 = 0;\n        *(*0x41c004 + 0x34) = puStack568;\n        puStack584 = 0x405d0f;\n        uVar1 = fcn.00410de0();\n        puStack584 = &stack0xfffffdc8;\n        *(*0x41c004 + 0x18) = uVar1;\n        puStack588 = *(*0x41c004 + 0x18);\n        uStack592 = 0x405d2c;\n        iVar2 = fcn.00410b80();\n        if (iVar2 == 0) {\n            uStack592 = *(*0x41c004 + 0x18);\n            puStack596 = 0x405d3e;\n            fcn.00410e80();\n            return 0xffffffed;\n        }\n    }\n    if (bVar3) {\n        while( true ) {\n            puStack596 = &stack0xfffffdbc;\n            uStack592 = 0;\n            puStack604 = &stack0xfffffdc0;\n            uStack600 = 0x20a;\n            iStack608 = *0x41c004 + 0x40;\n            iVar2 = fcn.0040de10();\n            if (iVar2 < 0) break;\n            puStack588 = &stack0xfffffda8;\n            iVar2 = fcn.0040f020();\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040f550(&stack0xfffffda0, *0x41c004 + 0x145);\n                if (iVar2 == 0) {\n                    sub.KERNEL32.dll_lstrcpyA(0x4196c0, *0x41c004 + 0x145);\n                    return 0xfffffff5;\n                }\n                *(*0x41c004 + 0x34) = puStack588 + *(*0x41c004 + 0x34);\n                puStack588 = *(*0x41c004 + 0x18);\n                iVar2 = fcn.00410b80();\n                if (iVar2 == 0) {\n                    fcn.00410e80(*(*0x41c004 + 0x18));\n                    return 0xffffffed;\n                }\n            }\n        }\n    }\n    else if (iStack44 != 0) {\n        while( true ) {\n            puStack596 = &stack0xfffffdbc;\n            uStack592 = 0;\n            puStack604 = &stack0xfffffdc0;\n            uStack600 = 0x20a;\n            iStack608 = *0x41c004 + 0x40;\n            iVar2 = fcn.0040de50();\n            if (iVar2 < 0) break;\n            puStack588 = &stack0xfffffda8;\n            iVar2 = fcn.0040f020();\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040f550(&stack0xfffffda0, *0x41c004 + 0x145);\n                if (iVar2 == 0) {\n                    sub.KERNEL32.dll_lstrcpyA(0x4196c0, *0x41c004 + 0x145);\n                    return 0xfffffff5;\n                }\n                *(*0x41c004 + 0x34) = puStack588 + *(*0x41c004 + 0x34);\n                puStack588 = *(*0x41c004 + 0x18);\n                iVar2 = fcn.00410b80();\n                if (iVar2 == 0) {\n                    fcn.00410e80(*(*0x41c004 + 0x18));\n                    return 0xffffffed;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1471
    },
    "00405f00": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00405f00(uchar *param_1, uint param_2, uint *param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint32_t uStack96;\n    uchar *puStack92;\n    uchar *in_stack_ffffffa8;\n    uchar *puStack80;\n    uchar *puStack76;\n    uint32_t uStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint32_t uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint32_t uVar5;\n    int32_t iStack20;\n    \n    if (*0x41c004 == NULL) {\n        return -1;\n    }\n    uVar5 = (*0x41c004)[0xf];\n    bVar3 = (uVar5 & 0x5000) != 0;\n    bVar4 = (uVar5 & 0x2000) != 0;\n    if ((uVar5 & 0x2000000) == 0) {\n        if ((bVar3) || (bVar4)) {\n            *param_3 = 1;\n            return 0;\n        }\n        bVar4 = true;\n    }\n    else if ((!bVar3) && (!bVar4)) {\n        *param_3 = 1;\n        return 0;\n    }\n    uStack52 = 2;\n    *param_3 = 0;\n    puStack56 = param_1;\n    uStack60 = 0x405fb3;\n    uStack60 = fcn.0040be40();\n    if (uStack60 == 0xffffffff) {\n        *param_3 = 1;\n        return 0;\n    }\n    iStack64 = 0x405fd8;\n    fcn.0040c500();\n    iStack64 = iStack20;\n    puStack68 = 0x405fe6;\n    fcn.0040c320();\n    uVar5 = 0;\n    if (bVar4) {\n        puStack68 = &stack0xffffffd0;\n        uStack72 = 0xb;\n        puStack76 = **0x41c004;\n        puStack80 = 0x406015;\n        iVar1 = fcn.00407410();\n        if (iVar1 == 0) {\n            return -1;\n        }\n        puStack80 = &stack0xffffffc8;\n        puStack92 = 0x406038;\n        in_stack_ffffffa8 = param_1;\n        iVar1 = fcn.0040d0a0(param_1, &stack0xffffffd0);\n        if (iVar1 == 0) {\n            if (uStack60 < uStack72) {\n                *param_3 = 1;\n                return 0;\n            }\n            if (uStack72 < uStack60) {\n                return 0;\n            }\n            puStack92 = &stack0xffffffc0;\n            uStack96 = 0xc;\n            iVar1 = fcn.00407410(**0x41c004);\n            if (iVar1 == 0) {\n                return -1;\n            }\n            if (puStack80 < puStack76) {\n                *param_3 = 1;\n                return 0;\n            }\n            if (puStack76 < puStack80) {\n                return 0;\n            }\n            if (iStack64 != 0) {\n                *param_3 = 1;\n                return 0;\n            }\n            if (!bVar3) {\n                return 0;\n            }\n            goto code_r0x00406109;\n        }\n        if (uStack72 != 0) {\n            *param_3 = 1;\n            return 0;\n        }\n        bVar3 = true;\n    }\n    if (!bVar3) {\n        return 0;\n    }\ncode_r0x00406109:\n    uVar2 = uVar5 & 0xffff;\n    puStack76 = uVar5 >> 0x10;\n    fcn.0040cb70(param_1, &stack0xffffffb8, &stack0xffffffb0);\n    if (uVar2 < uStack96) {\n        *param_3 = 1;\n        return 0;\n    }\n    if (uStack96 < uVar2) {\n        return 0;\n    }\n    if (puStack92 < in_stack_ffffffa8) {\n        *param_3 = 1;\n        return 0;\n    }\n    if (in_stack_ffffffa8 < puStack92) {\n        return 0;\n    }\n    if (puStack68 != (*0x41c004)[10]) {\n        *param_3 = 1;\n        return 0;\n    }\n    if (puStack76 == NULL) {\n        return 0;\n    }\n    if (puStack80 == NULL) {\n        if (*0x41c00c != 0) {\n            *param_3 = 1;\n            return 0;\n        }\n        if (*0x41c028 == 0) {\n            iVar1 = fcn.00406610(param_1, param_3);\n            return iVar1;\n        }\n        iVar1 = fcn.00406600(param_1, (*0x41c004)[10], 8, 0);\n        if (iVar1 == 7) {\n            *0x41c00c = 1;\n            *param_3 = 1;\n            return 0;\n        }\n        if (iVar1 == 1) {\n            *param_3 = 1;\n            return 0;\n        }\n        if (iVar1 < 0) {\n            return iVar1;\n        }\n    }\n    else {\n        *param_3 = 1;\n    }\n    return 0;\n}\n",
        "token_count": 1282
    },
    "004062a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.004062a0(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EDI;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    uint32_t uVar6;\n    uint32_t uStack68;\n    uchar *puStack64;\n    uchar *puStack60;\n    uint32_t uStack56;\n    uchar *puStack52;\n    uchar *puStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    uint uStack4;\n    \n    if (*0x41c004 == NULL) {\n        return 0xffffffff;\n    }\n    uVar6 = (*0x41c004)[0xf];\n    bVar3 = (uVar6 & 0x5000) != 0;\n    bVar4 = (uVar6 & 0x2000) != 0;\n    bVar5 = (uVar6 & 0x8000) != 0;\n    if ((uVar6 & 0x2000000) == 0) {\n        if (*0x4196ac == 0) {\n            if ((!bVar3) && (!bVar4)) {\n                *param_2 = 1;\n                return 0;\n            }\n        }\n        else {\n            if ((!bVar3) && (!bVar4)) {\n                *param_2 = 1;\n                return 0;\n            }\n            if (bVar5) {\n                bVar4 = true;\n            }\n        }\n    }\n    else if ((!bVar3) && (!bVar4)) {\n        *param_2 = 1;\n        return 0;\n    }\n    uStack12 = 0;\n    uStack8 = 0;\n    *param_2 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack4 = 0;\n    if (bVar4) {\n        puStack36 = &stack0xffffffec;\n        uStack40 = 0xb;\n        uStack44 = **0x41c004;\n        puStack48 = 0x406380;\n        iVar1 = fcn.00407410();\n        param_1 = uStack8;\n        if (iVar1 == 0) {\n            return 0xffffffff;\n        }\n        puStack48 = &stack0xffffffe8;\n        puStack52 = &stack0xffffffec;\n        uStack56 = uStack8;\n        puStack60 = 0x4063c3;\n        iVar1 = fcn.0040d0a0();\n        if (iVar1 == 0) {\n            if (unaff_EDI < uStack44) {\n                return 0;\n            }\n            if (uStack44 < unaff_EDI) {\n                *param_2 = 1;\n                return 0;\n            }\n            puStack60 = &stack0xffffffd8;\n            puStack64 = 0xc;\n            uStack68 = **0x41c004;\n            iVar1 = fcn.00407410();\n            if (iVar1 == 0) {\n                return 0xffffffff;\n            }\n            if (puStack52 < puStack48 || puStack52 == puStack48) {\n                if (puStack52 != puStack48) {\n                    *param_2 = 1;\n                }\n                else if (bVar5) {\n                    *param_2 = 1;\n                    return 0;\n                }\n            }\n            return 0;\n        }\n        if (uStack44 != 0) {\n            return 0;\n        }\n        bVar3 = true;\n    }\n    if (bVar3) {\n        puStack60 = &stack0xffffffd4;\n        puStack64 = 0x5;\n        uStack68 = **0x41c004;\n        iVar1 = fcn.00407410();\n        if (iVar1 == 0) {\n            return 0xffffffff;\n        }\n        puStack52 = uStack56 >> 0x10;\n        uVar6 = param_1;\n        uStack56 = uStack56 & 0xffff;\n        fcn.0040cb70(param_1, &stack0xffffffd4, &stack0xffffffd0);\n        if (uStack56 < uStack68) {\n            return 0;\n        }\n        if (uStack68 < uStack56) {\n            *param_2 = 1;\n            return 0;\n        }\n        if (puStack60 < puStack64) {\n            return 0;\n        }\n        if (puStack64 < puStack60) {\n            *param_2 = 1;\n            return 0;\n        }\n        if (!bVar5) {\n            return 0;\n        }\n        iVar1 = fcn.0040be40(param_1, 2);\n        if (iVar1 == -1) {\n            *param_2 = 1;\n            return 0;\n        }\n        uVar2 = fcn.0040c500(iVar1);\n        fcn.0040c320(iVar1);\n        iVar1 = fcn.00407410(**0x41c004, 9, &stack0xffffffbc);\n        if (iVar1 == 0) {\n            return 0xffffffff;\n        }\n        if (uVar2 != uVar6) {\n            *param_2 = 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1226
    },
    "00406710": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00406710(char *param_1)\n\n{\n    int32_t iVar1;\n    char *pcStack556;\n    uchar *puStack552;\n    uint uStack548;\n    uchar *puStack544;\n    uchar *puStack540;\n    uint32_t uStack536;\n    char *pcStack532;\n    \n    if (param_1 == NULL) {\n        return 0;\n    }\n    if (*param_1 == '\\0') {\n        return 0;\n    }\n    pcStack532 = param_1;\n    uStack536 = 0x406746;\n    iVar1 = fcn.0040f920();\n    if (iVar1 == 0) {\n        if ((param_1[1] == ':') && (param_1[2] != '\\\\')) {\n            return 1;\n        }\n        if (*param_1 == '\\\\') {\n            puStack540 = &stack0xfffffdf0;\n            uStack536 = 0;\n            puStack544 = 0x406774;\n            fcn.0040f230();\n            uStack536 = uStack536 & 0xff00ffff;\n        }\n        else {\n            puStack540 = &stack0xfffffdf0;\n            uStack536 = 0x20a;\n            puStack544 = 0x40678a;\n            fcn.0040e9f0();\n            puStack544 = &stack0xfffffde8;\n            uStack548 = 0x406794;\n            iVar1 = fcn.0040eb90();\n            if (iVar1 == 0) {\n                uStack548 = 0x41d514;\n                pcStack556 = 0x4067a7;\n                puStack552 = &stack0xfffffde4;\n                sub.KERNEL32.dll_lstrcatA();\n            }\n        }\n        pcStack556 = param_1;\n        sub.KERNEL32.dll_lstrcatA(&stack0xfffffddc);\n        sub.KERNEL32.dll_lstrcpyA(param_1, &stack0xfffffdd4);\n    }\n    return 1;\n}\n",
        "token_count": 451
    },
    "00406820": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00406820(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar *puStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    \n    if (*0x4196c0 == '\\0') {\n        return 0xfffffffe;\n    }\n    uStack276 = 2;\n    uStack280 = 0x4196c0;\n    uStack284 = 0x40684b;\n    iVar1 = fcn.0040be40();\n    if (iVar1 == -1) {\n        return 0xfffffffe;\n    }\n    uStack284 = 0;\n    uStack288 = 0x406867;\n    uVar2 = fcn.00410de0();\n    uStack288 = 0x103;\n    *(*0x41c004 + 0x18) = uVar2;\n    puStack292 = &stack0xfffffeec;\n    iVar1 = fcn.0040d230();\n    while( true ) {\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.0040fa00();\n        if ((puStack292 != '\\0') && (iVar1 = fcn.00410b80(*(*0x41c004 + 0x18), &stack0xfffffedc),  iVar1 == 0)) break;\n        iVar1 = fcn.0040d230();\n    }\n    fcn.00410e80(*(*0x41c004 + 0x18));\n    return 0xffffffed;\n}\n",
        "token_count": 353
    },
    "004068f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.004068f0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_1 == 0) {\n        return 0;\n    }\n    iVar1 = fcn.00408b60(*(param_1 + 0xc), 0, param_1);\n    if (iVar1 == 0) {\n        return 0xffffffe8;\n    }\n    if ((*(param_1 + 0x16) & 0x80) == 0) {\n        uVar2 = *(param_1 + 0x328);\n    }\n    else {\n        uVar2 = *(param_1 + 0x32c);\n    }\n    iVar1 = fcn.00407c80(*(param_1 + 4), uVar2, 0);\n    return -(iVar1 == 0) & 0xfffffff9;\n}\n",
        "token_count": 203
    },
    "004069c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.004069c0(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (param_1 == 0) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.004085d0(*(param_1 + 8), param_2, param_1);\n    if (param_2 != -1) {\n        iVar2 = fcn.0040c320(*(param_1 + 0x328));\n        if (iVar2 == -1) {\n            return 0xffffffff;\n        }\n        *(param_1 + 0x328) = param_2;\n        fcn.00409510(*(param_1 + 0xc), 0x25b, param_2);\n        fcn.00408520(*(param_1 + 8), 0x12d, *(param_1 + 0x328));\n    }\n    if (uVar1 != 0) {\n        return uVar1;\n    }\n    uVar1 = fcn.00409260(*(param_1 + 0xc), param_1);\n    return (uVar1 == 0) - 1 & uVar1;\n}\n",
        "token_count": 276
    },
    "00406cf0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00406cf0(uint32_t param_1, char *param_2)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    int32_t iStack172;\n    uint32_t uStack168;\n    uint uStack164;\n    int32_t *piStack160;\n    uint uStack156;\n    int32_t iStack152;\n    int32_t iStack148;\n    uchar *puStack144;\n    int32_t iStack140;\n    int32_t *piStack136;\n    uint uStack132;\n    uchar *puStack128;\n    int32_t iStack124;\n    uint uStack120;\n    uchar *puStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint32_t uStack92;\n    char *pcStack88;\n    uint uStack84;\n    uint uStack80;\n    char *pcStack76;\n    int32_t iStack72;\n    char *pcStack68;\n    uint uStack64;\n    char *pcStack60;\n    uint uStack56;\n    char *pcStack52;\n    int32_t iStack48;\n    char *pcStack44;\n    uchar *puStack40;\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    if ((param_1 == 0) || (*param_2 == '\\0')) {\n        return -1;\n    }\n    puVar1 = param_1 + 0x18;\n    pcStack44 = param_2;\n    iStack48 = 0x406d1a;\n    puStack40 = puVar1;\n    fcn.0040ee00();\n    iStack48 = param_1 + 0x11d;\n    pcStack52 = param_2;\n    uStack56 = 0x406d27;\n    fcn.0040ed40();\n    pcStack60 = param_2;\n    if ((param_1 & 2) == 0) {\n        uStack64 = 0x406d40;\n        uVar2 = fcn.0040be40();\n    }\n    else {\n        uStack64 = 0x406d39;\n        uVar2 = fcn.0040c070();\n    }\n    *(param_1 + 0x328) = uVar2;\n    pcStack68 = *(param_1 + 0x328);\n    if (pcStack68 == 0xffffffff) {\n        if ((iStack8 == 0) || (iStack4 == 1)) {\n            return -1;\n        }\n        uStack64 = 1;\n        pcStack68 = param_2;\n        iStack72 = 0x406d71;\n        iStack72 = fcn.0040be40();\n        *(param_1 + 0x328) = iStack72;\n        if (iStack72 == -1) {\n            return -1;\n        }\n        pcStack76 = 0x406d91;\n        fcn.0040c320();\n        pcStack76 = param_2;\n        uStack80 = *(param_1 + 4);\n        uStack84 = 0x406d9b;\n        iVar3 = fcn.004081d0();\n        if (iVar3 == 0) {\n            return -7;\n        }\n        uStack84 = 1;\n        pcStack88 = param_2;\n        uStack92 = 0x406db6;\n        uStack92 = fcn.0040be40();\n        *(param_1 + 0x328) = uStack92;\n        if (uStack92 == -1) {\n            return -1;\n        }\n        uStack96 = 0x25b;\n        uStack100 = *(param_1 + 0xc);\n        puStack104 = 0x406ddf;\n        fcn.00409510();\n        puStack104 = *(param_1 + 0x328);\n        iStack112 = *(param_1 + 8);\n        iStack108 = 0x12d;\n        puStack116 = 0x406df4;\n        fcn.00408520();\n        puStack116 = &stack0xffffffa4;\n        uStack120 = *(param_1 + 0x328);\n        uStack92 = 0xff;\n        iStack124 = 0x406e0f;\n        fcn.0040c9b0();\n        if (*0x41d51c != 0) {\n            iStack124 = (*0x41d518)[4];\n            puStack128 = 0x406e25;\n            iVar3 = fcn.00408ab0();\n            puStack128 = (*0x41d518)[3];\n            uStack132 = 0x7ffe;\n            piStack136 = 0x406e3b;\n            fcn.00411b40();\n            piStack136 = *0x41d518;\n            iStack140 = 0x7ffe;\n            puStack144 = 0x406e4c;\n            fcn.00411b40();\n            *0x41d518 = NULL;\n            *0x41d51c = 0;\n            if (iVar3 == 0) {\n                *0x41d518 = NULL;\n                *0x41d51c = 0;\n                return -0x18;\n            }\n        }\n        return 0;\n    }\n    uStack64 = *(param_1 + 0x14);\n    iStack72 = *(param_1 + 4);\n    pcStack76 = 0x406e94;\n    iVar3 = fcn.00407b30();\n    if (iVar3 != 0) {\n        pcStack76 = *(param_1 + 0x328);\n        uStack80 = 0x406ea6;\n        fcn.0040c320();\n        return iVar3;\n    }\n    pcStack76 = param_1;\n    uStack84 = *(param_1 + 0x328);\n    uStack80 = 0;\n    pcStack88 = *(param_1 + 4);\n    uStack92 = 0x406ec5;\n    iVar3 = fcn.00407d90();\n    if (iVar3 == 0) {\n        uStack92 = *(param_1 + 0x328);\n        uStack96 = 0x406ed5;\n        fcn.0040c320();\n        *(param_1 + 0x328) = 0xffffffff;\n        *(param_1 + 0x11d) = 0;\n        *puVar1 = 0;\n        return -7;\n    }\n    uStack92 = param_1;\n    uStack96 = *(param_1 + 0x328);\n    uStack100 = *(param_1 + 8);\n    puStack104 = 0x406f09;\n    iVar3 = fcn.00408470();\n    if (iVar3 == 0) {\n        puStack104 = *(param_1 + 0x328);\n        iStack108 = 0x406f19;\n        fcn.0040c320();\n        *(param_1 + 0x328) = 0xffffffff;\n        *(param_1 + 0x11d) = 0;\n        *puVar1 = 0;\n        return -0x1a;\n    }\n    if (*0x41d51c == 0) goto code_r0x0040708a;\n    if (*0x41d518 == NULL) {\n        return -0x22;\n    }\n    puStack104 = &stack0xffffffb8;\n    iStack112 = *(param_1 + 4);\n    iStack72 = 0;\n    iStack108 = 0x6c;\n    pcStack76 = NULL;\n    puStack116 = 0x406f7b;\n    iVar3 = fcn.00407ee0();\n    if (iVar3 == 0) {\n        return -7;\n    }\n    puStack116 = &stack0xffffffa8;\n    iStack124 = *(param_1 + 4);\n    uStack120 = 0x73;\n    puStack128 = 0x406f9e;\n    iVar3 = fcn.00407ee0();\n    if (iVar3 == 0) {\n        return -7;\n    }\n    puStack128 = &stack0xffffff94;\n    piStack136 = *(param_1 + 4);\n    uStack132 = 0x71;\n    iStack140 = 0x406fc1;\n    iVar3 = fcn.00407ee0();\n    if (iVar3 == 0) {\n        return -7;\n    }\n    if (((**0x41d518 == iStack108) && ((*0x41d518)[1] == iStack112)) && (*(*0x41d518 + 2) == uStack120)) {\n        iStack140 = (*0x41d518)[3];\n        iStack148 = 0x407004;\n        puStack144 = puVar1;\n        iVar3 = sub.KERNEL32.dll_lstrcmpiA();\n        if (iVar3 != 0) goto code_r0x00407031;\n        iStack148 = *(param_1 + 0xc);\n        iStack152 = 0x407011;\n        iVar3 = fcn.00408ab0();\n        if (iVar3 == 0) {\n            return -0x22;\n        }\n        *(param_1 + 0xc) = (*0x41d518)[4];\n    }\n    else {\ncode_r0x00407031:\n        iStack148 = (*0x41d518)[4];\n        iStack152 = 0x40703f;\n        iVar3 = fcn.00408ab0();\n        if (iVar3 == 0) {\n            return -0x22;\n        }\n        *0x41d51c = 0;\n    }\n    iStack152 = (*0x41d518)[3];\n    uStack156 = 0x7ffe;\n    piStack160 = 0x40706f;\n    fcn.00411b40();\n    piStack160 = *0x41d518;\n    uStack164 = 0x7ffe;\n    uStack168 = 0x407080;\n    fcn.00411b40();\n    *0x41d518 = NULL;\ncode_r0x0040708a:\n    uStack168 = param_1;\n    iStack172 = *0x41d51c;\n    uStack180 = *(param_1 + 0x328);\n    uStack176 = 1;\n    uStack184 = *(param_1 + 0xc);\n    puStack188 = 0x4070a3;\n    iVar3 = fcn.00408fc0();\n    if (iVar3 != 0) {\n        puStack188 = *(param_1 + 0x328);\n        fcn.0040c320();\n        *(param_1 + 0x328) = 0xffffffff;\n        *(param_1 + 0x11d) = 0;\n        *puVar1 = 0;\n        *0x41d51c = 0;\n        return iVar3;\n    }\n    *0x41d51c = 0;\n    if ((*(param_1 + 0x16) & 0x10) == 0) {\n        puStack188 = &stack0xffffff58;\n        fcn.00407ee0(*(param_1 + 4), 0x72);\n    }\n    else {\n        uStack168 = 0;\n    }\n    fcn.00409510(*(param_1 + 0xc), 0x25d, uStack180);\n    puStack188 = 0xff;\n    fcn.0040c9b0(*(param_1 + 0x328), &stack0xffffff44);\n    return 3;\n}\n",
        "token_count": 2656
    },
    "00407150": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00407150(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar uVar5;\n    int32_t *piStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    if (param_1 == NULL) {\n        return 0xffffffff;\n    }\n    iVar1 = *param_1;\n    if (iVar1 == -1) {\n        return 0xfffffffa;\n    }\n    if (param_2 == 0) {\n        iStack24 = 0x407321;\n        iStack20 = iVar1;\n        fcn.004073a0();\n        iStack24 = param_1[3];\n        iStack28 = 0x40732a;\n        iVar2 = fcn.00408ab0();\n        if (iVar2 == 0) {\n            return 0xffffffe8;\n        }\n    }\n    else {\n        if (*0x41d518 != 0) {\n            return 0xffffffde;\n        }\n        iStack20 = 0x15;\n        iStack24 = 0x7ffe;\n        iStack28 = 0x4071af;\n        *0x41d518 = fcn.00411f80();\n        if (*0x41d518 == 0) {\n            return 0xfffffffa;\n        }\n        piStack36 = param_1[1];\n        iStack32 = 0x6c;\n        iStack28 = *0x41d518;\n        iVar2 = fcn.00407ee0();\n        if (iVar2 == 0) {\n            fcn.00411b40(0x7ffe, *0x41d518);\n            *0x41d518 = 0;\n            return 0xfffffff9;\n        }\n        iVar2 = param_1[1];\n        iVar3 = fcn.00407ee0(iVar2, 0x73, *0x41d518 + 4);\n        uVar5 = iVar2;\n        if (iVar3 == 0) {\n            fcn.00411b40(0x7ffe, *0x41d518);\n            *0x41d518 = 0;\n            return 0xfffffff9;\n        }\n        iVar2 = fcn.00407ee0(param_1[1], 0x71, &stack0xffffffdc);\n        if (iVar2 == 0) {\n            fcn.00411b40(0x7ffe, *0x41d518);\n            *0x41d518 = 0;\n            return 0xfffffff9;\n        }\n        *(*0x41d518 + 8) = uVar5;\n        *(*0x41d518 + 0x10) = param_1[3];\n        iVar2 = sub.KERNEL32.dll_lstrlenA(param_1 + 6);\n        uVar4 = fcn.00411f80(0x7ffe, iVar2 + 1);\n        *(*0x41d518 + 0xc) = uVar4;\n        sub.KERNEL32.dll_lstrcpyA(*(*0x41d518 + 0xc), param_1 + 6);\n        *0x41d51c = 1;\n    }\n    iStack28 = param_1[1];\n    iStack32 = 0x4072d2;\n    iVar2 = fcn.00407af0();\n    if (iVar2 == 0) {\n        if (*0x41d518 != 0) {\n            iStack32 = *(*0x41d518 + 0xc);\n            piStack36 = 0x7ffe;\n            fcn.00411b40();\n            fcn.00411b40(0x7ffe, *0x41d518);\n            *0x41d518 = 0;\n        }\n        return 0xfffffff9;\n    }\n    iStack32 = param_1[2];\n    piStack36 = 0x407345;\n    iVar2 = fcn.00408430();\n    if (iVar2 == 0) {\n        if (*0x41d518 != 0) {\n            piStack36 = *(*0x41d518 + 0xc);\n            fcn.00411b40(0x7ffe);\n            fcn.00411b40(0x7ffe, *0x41d518);\n            *0x41d518 = 0;\n        }\n        return 0xffffffe6;\n    }\n    piStack36 = param_1;\n    fcn.00411b40(iVar1);\n    return 0;\n}\n",
        "token_count": 1049
    },
    "004073a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.004073a0(int32_t param_1)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    \n    if (param_1 == -1) {\n        return 0;\n    }\n    if (*0x41d51c != 0) {\n        if (*0x41d518 == 0) {\n            return 0;\n        }\n        iVar1 = fcn.00408ab0(*(*0x41d518 + 0x10));\n        if (iVar1 == 0) {\n            return 0;\n        }\n        fcn.00411b40(0x7ffe, *(*0x41d518 + 0xc));\n        fcn.00411b40(0x7ffe, *0x41d518);\n        in_EAX = 0;\n        *0x41d51c = 0;\n        *0x41d518 = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 210
    },
    "00407b30": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00407b30(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uchar *puStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uchar auStack4 [4];\n    \n    if (param_1 == 0) {\n        return -1;\n    }\n    puStack24 = &stack0xfffffffc;\n    uStack28 = param_2;\n    uStack32 = 0x407b50;\n    fcn.0040c970();\n    uStack32 = param_2;\n    uStack36 = 0x407b56;\n    cVar1 = fcn.0040c8c0();\n    uStack36 = param_2;\n    iVar5 = -0x29;\n    uStack40 = 0x407b63;\n    uVar2 = fcn.0040c8c0();\n    puStack24 = puStack24 & 0xffffff | uVar2 << 0x18;\n    uStack40 = param_2;\n    puStack44 = 0x407b6d;\n    cVar3 = fcn.0040c8c0();\n    if (((cVar1 == *0x41d524) && (uStack28._3_1_ == *0x41d525)) && (cVar3 == *0x41d526)) {\n        return -0x15;\n    }\n    if (((cVar1 == *0x41d528) && (uStack28._3_1_ == *0x41d529)) && (cVar3 == *0x41d52a)) {\n        iVar5 = 0;\n    }\n    if (iVar5 != 0) {\n        puStack44 = &stack0xffffffe8;\n        uStack48 = param_2;\n        uStack52 = 0x407bc4;\n        fcn.0040c9b0();\n        return iVar5;\n    }\n    puStack44 = param_2;\n    uStack48 = 0x407bd5;\n    fcn.0040c8c0();\n    uStack48 = param_2;\n    uStack52 = 0x407bdb;\n    iVar5 = fcn.0040c8c0();\n    if (iVar5 != 0x3a) {\n        return -1;\n    }\n    uStack52 = param_2;\n    uStack56 = 0x407bf4;\n    iVar5 = fcn.0040c8c0();\n    if (iVar5 != 1) {\n        return 0;\n    }\n    uStack56 = param_2;\n    iVar5 = fcn.0040c8c0();\n    if (iVar5 != 2) {\n        return 0;\n    }\n    fcn.0040c8c0(param_2);\n    fcn.0040c8c0(param_2);\n    fcn.0040c8c0(param_2);\n    uVar4 = fcn.0040cd30(param_2);\n    fcn.0040c9b0(param_2, &stack0xffffffc8);\n    if (((uVar4 & 1) != 0) && ((uStack48 & 0x7a0000) == 0)) {\n        return -0x1e;\n    }\n    return 0;\n}\n",
        "token_count": 825
    },
    "00407d90": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00407d90(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    uchar uVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    uchar auStack12 [4];\n    uchar auStack8 [4];\n    uint uStack4;\n    \n    if (param_1 == 0) {\n        return 0;\n    }\n    pcVar1 = *(param_1 + 4);\n    if (pcVar1 == NULL) {\n        return 0;\n    }\n    if (param_3 != 0) {\n        uStack4 = 0;\n        puStack32 = &stack0xfffffff8;\n        uStack36 = param_2;\n        uStack40 = 0x407dd4;\n        fcn.0040c970();\n        uStack40 = &stack0xfffffff4;\n        uStack44 = param_2;\n        uStack48 = 0x407ddf;\n        fcn.0040c9b0();\n    }\n    uStack48 = param_2;\n    uVar2 = fcn.0040c8c0();\n    puStack32 = puStack32 & 0xffffff | uVar2 << 0x18;\n    uVar3 = fcn.0040c8c0(param_2);\n    uStack36._0_3_ = CONCAT12(uVar3, uStack36);\n    uStack36 = uStack36 & 0xff000000 | uStack36;\n    cVar4 = fcn.0040c8c0(param_2);\n    if (((uStack40._3_1_ != *0x41d528) || (uStack40._2_1_ != *0x41d529)) || (cVar4 != *0x41d52a)) {\n        return 0;\n    }\n    fcn.0040c8c0(param_2);\n    iVar5 = fcn.0040c8c0(param_2);\n    if (iVar5 != 0x3a) {\n        fcn.0040c320(param_2);\n        return 0;\n    }\n    uVar6 = 0;\n    do {\n        uVar7 = uVar6 + 1;\n        cVar4 = fcn.0040c8c0();\n        pcVar1[uVar6] = cVar4;\n        uVar6 = uVar7;\n    } while (uVar7 < 0x3a);\n    if (*pcVar1 != '\\x01') {\n        return 0;\n    }\n    if (pcVar1[1] != '\\x02') {\n        return 0;\n    }\n    if ((*(param_1 + 10) & 0x80) != 0) {\n        pcVar1[5] = pcVar1[5] | 1;\n        pcVar1[0x1b] = *(pcVar1 + 0xd) % 0xfd;\n        if ((*(param_1 + 8) & 2) != 0) {\n            pcVar1[5] = pcVar1[5] | 2;\n        }\n    }\n    if (unaff_EBP != 0) {\n        fcn.0040c9b0(param_2, &stack0xffffffd0);\n    }\n    return 1;\n}\n",
        "token_count": 820
    },
    "00408470": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004084ab)\n\nuint fcn.00408470(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uint *puStack16;\n    uint uStack8;\n    uint uStack4;\n    \n    puStack16 = &uStack8;\n    uStack4 = 0;\n    uStack8 = 0;\n    if (param_1 != 0) {\n        *(param_1 + 0x1c) = param_2;\n        fcn.00407410(param_3);\n        fcn.00407ee0(1, 0x65);\n        *(param_1 + 0x18) = &puStack16;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 172
    },
    "00408550": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00408550(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((param_1 == 0) || (*(param_1 + 4) == 0)) {\n        return 0xffffffff;\n    }\n    piVar1 = fcn.00410ad0(*(param_1 + 4));\n    if ((piVar1 != NULL) && (*piVar1 + piVar1[1] == param_1)) {\n        piVar1[1] = param_2 + piVar1[1];\n        return 0;\n    }\n    iVar2 = fcn.00410b80(*(param_1 + 4), &stack0xfffffff4);\n    return -(iVar2 == 0) & 0xffffffed;\n}\n",
        "token_count": 188
    },
    "004085d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.004085d0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint unaff_EBP;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint uVar7;\n    uint *puVar8;\n    int32_t iStack48;\n    uint32_t uStack44;\n    uint32_t uVar9;\n    uint auStack20 [3];\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xff;\n    if ((param_1 == 0) || (*(param_1 + 4) == 0)) {\n        return 0xffffffff;\n    }\n    uStack44 = 0x1103;\n    iStack48 = 0x6000;\n    uVar1 = fcn.00411910();\n    if (uVar1 == 0xffffffff) {\n        return 0xfffffffa;\n    }\n    uVar4 = uVar1;\n    iVar2 = fcn.00411f80();\n    if (iVar2 == 0) {\n        fcn.00411b40(unaff_EBP, 0);\n        fcn.00411e00(0x6000);\n        return 0xfffffffa;\n    }\n    puVar8 = auStack20;\n    fcn.0040c9b0(uStack8, puVar8);\n    uVar7 = *(param_1 + 4);\n    puVar3 = fcn.00410aa0(uVar7);\n    uVar5 = uVar4;\n    uVar9 = uVar4;\n    if (puVar3 == NULL) {\n        iVar2 = fcn.00408960(param_1, 0xff, 0xff, *(param_1 + 0x18) + -0xff, auStack20[0], 0x6000);\n        if (iVar2 == 0) {\n            fcn.00411b40(0x400a, 0x6000);\n            fcn.00411e00(puVar8);\n            return 4;\n        }\n        fcn.00411b40(0x400a, 0x6000);\n        fcn.00411e00(puVar8);\n        return 0xffffffd8;\n    }\n    do {\n        if (puVar3 == NULL) {\ncode_r0x00408740:\n            fcn.00411b40(0x400a, iStack48, uVar7);\n            fcn.00411e00(puVar8);\n            *(param_1 + 0x18) = uVar4 + uVar5;\n            *(param_1 + 0xc) = uVar4 + uVar5;\n            return 0;\n        }\n        uVar5 = *puVar3;\n        uVar4 = uVar5 + puVar3[1];\n        if (*(param_1 + 0x18) < uVar4 || *(param_1 + 0x18) == uVar4) {\n            uVar5 = *puVar3;\n            if (*(param_1 + 0x18) <= puVar3[1] + uVar5 && puVar3[1] + uVar5 != *(param_1 + 0x18)) {\n                fcn.00411b40(0x400a, iStack48);\n                fcn.00411e00(puVar8);\n                return 0xffffffef;\n            }\n            if (uVar5 == 0xff) {\n                *(param_1 + 0x10) = 0xff;\n                *(param_1 + 0xc) = 0xff;\n                *(param_1 + 0x18) = 0xff;\n                fcn.00411b40(0x400a, iStack48);\n                fcn.00411e00(puVar8);\n                return 2;\n            }\n            uVar4 = 0;\n            iVar2 = fcn.00408960(param_1, 0xff, 0xff, uVar5 - 0xff, auStack20[0], iStack48);\n            if (iVar2 != 0) {\n                fcn.00411b40(0x400a, iStack48);\n                fcn.00411e00(puVar8);\n                return 0xffffffd8;\n            }\n            goto code_r0x00408740;\n        }\n        puVar6 = &uStack44;\n        uStack44 = uVar4;\n        fcn.0040c9b0(*(param_1 + 0x1c), puVar6);\n        uVar7 = *(param_1 + 4);\n        puVar3 = fcn.00410b20();\n        if (puVar3 == NULL) {\n            if (*(param_1 + 0x18) < 0) {\n                fcn.00411b40(uStack8, puVar8);\n                fcn.00411e00(puVar6);\n                return 0xfffffff9;\n            }\n            uVar4 = *(param_1 + 0x18) - uVar1;\n            if (uVar4 == 0) goto code_r0x00408740;\n        }\n        else {\n            uVar4 = *puVar3 - uVar1;\n            *puVar3 = *puVar3 - 0x400a;\n            puVar3[1] = puVar3[1] + 0x400a;\n        }\n        if (iStack48 != 0) {\n            iStack48 = 0;\n            if (uVar5 < 0x100) {\n                if (uVar5 < 0xff) {\n                    fcn.00411b40(uStack8, puVar8);\n                    fcn.00411e00(puVar6);\n                    return 0xffffffd8;\n                }\n            }\n            else {\n                iVar2 = fcn.00408960(param_1, 0xff, 0xff, uVar5 - 0xff, uVar9, puVar8);\n                if (iVar2 != 0) {\n                    fcn.00411b40(uStack8, puVar8);\n                    fcn.00411e00(puVar6);\n                    return 0xffffffd8;\n                }\n            }\n        }\n        iVar2 = fcn.00408960(param_1, uVar5, uVar1, uVar4, uVar9, puVar8);\n        if (iVar2 != 0) {\n            fcn.00411b40(uStack8, puVar8);\n            fcn.00411e00(puVar6);\n            return 0xffffffd8;\n        }\n    } while( true );\n}\n",
        "token_count": 1490
    },
    "00408960": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00408960(int32_t param_1, uint32_t param_2, uint param_3, uint32_t param_4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    uint32_t uVar6;\n    uint uVar7;\n    uint uStack4;\n    \n    uStack4 = 0x4000;\n    if (param_1 == 0) {\n        return 0xffffffff;\n    }\n    uVar1 = *(param_1 + 0x1c);\n    uVar7 = uVar1;\n    fcn.0040c9b0(uVar1);\n    uVar5 = param_4;\n    uVar2 = param_3;\n    if (unaff_ESI < param_2) {\n        do {\n            uVar6 = uVar5;\n            iVar3 = fcn.0040c5c0(uVar1, uVar5, &stack0xfffffff4);\n            if (iVar3 != 0x4000) {\n                return 0xffffffd8;\n            }\n            uVar7 = uVar2;\n            iVar3 = fcn.0040c6f0();\n            if (iVar3 != 0x4000) {\n                return 0xffffffd8;\n            }\n            unaff_EDI = unaff_EDI - uVar6;\n        } while (uVar6 < unaff_EDI);\n    }\n    uVar6 = param_2;\n    uVar4 = fcn.0040c5c0(uVar1, uVar5, &param_2, uVar7);\n    if (uVar4 == uVar6) {\n        uVar5 = fcn.0040c6f0(uVar2, uVar5, &uStack4);\n        return (uVar5 == uVar6) - 1 & 0xffffffd8;\n    }\n    return 0xffffffd8;\n}\n",
        "token_count": 461
    },
    "00408c70": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00408c70(int32_t param_1, int32_t param_2, uint param_3, char *param_4)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    ushort extraout_var;\n    uchar *puStack552;\n    int32_t iStack548;\n    uchar auStack524 [520];\n    uint uStack4;\n    \n    if ((param_1 == 0) || (*param_4 == '\\0')) {\ncode_r0x00408dfa:\n        iVar4 = -1;\n    }\n    else {\n        iStack548 = *(param_1 + 8);\n        if (iStack548 == 0) {\n            return -0x13;\n        }\n        if (param_2 == 1) {\n            puStack552 = 0x408cbb;\n            puVar3 = fcn.0040a830();\n        }\n        else {\n            if (param_2 != 2) goto code_r0x00408dfa;\n            puStack552 = 0x408cd1;\n            puVar3 = fcn.0040a850();\n        }\n        while (puVar3 != NULL) {\n            if (((*(param_1 + 0x1a) & 0x80) != 0) || (*(param_1 + 0x14) < *puVar3 || *(param_1 + 0x14) == *puVar3)) {\n                iStack548 = *(puVar3 + 0x1e);\n                puStack552 = &stack0xfffffdf4;\n                sub.KERNEL32.dll_lstrcpyA();\n                iVar4 = fcn.0040f420();\n                if ((iVar4 != 0) &&\n                   (iVar4 = fcn.0040a480(param_1, param_1, param_3, CONCAT22(extraout_var, *(puVar3 + 1)), uStack4), \n                   iVar4 != -0x32)) {\n                    if (iVar4 != 0) {\n                        return iVar4;\n                    }\n                    sub.KERNEL32.dll_lstrcpyA(param_2, &stack0xfffffde4);\n                    *(param_1 + 0x1c) = puVar3;\n                    puStack552 = *(puVar3 + 0xb);\n                    if ((*(param_1 + 0x1a) & 0x10) != 0) {\n                        return 0;\n                    }\n                    uVar1 = puVar3[0x1c];\n                    if (*(param_1 + 0x14) < uVar1) {\n                        *0x41d520 = uVar1;\n                        return 6;\n                    }\n                    uVar2 = *(puVar3 + 0x19);\n                    if ((uVar2 & 0x100) == 0) {\n                        if (((uVar2 != 0) && (uVar2 != 0x40)) && ((uVar2 & 0x10) == 0)) {\n                            return 0;\n                        }\n                        fcn.0040c9b0(*(param_1 + 0xc), &stack0xfffffdd8);\n                        return 0;\n                    }\n                    puStack552 = *(puVar3 + 0xb);\n                    if ((*(param_1 + 0x3c) == puStack552) || (*(param_1 + 0x14) == uVar1)) {\n                        fcn.0040c9b0(*(param_1 + 0xc), &stack0xfffffdd8);\n                    }\n                    *0x41d520 = *(param_1 + 0x14);\n                    return 5;\n                }\n            }\n            iStack548 = *(param_1 + 8);\n            puStack552 = 0x408d3a;\n            puVar3 = fcn.0040a850();\n        }\n        iVar4 = (-(param_2 == 1) & 0xffffffd5) + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 887
    },
    "00408e10": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00408e10(char *param_1, uint param_2, char *param_3, char *param_4, uint param_5, int32_t param_6)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    char *pcVar2;\n    uint unaff_retaddr;\n    uint auStack272 [2];\n    uchar auStack264 [264];\n    \n    auStack272[0] = 0;\n    if (param_1 == NULL) {\n        return -1;\n    }\n    if (param_6 == 0) {\n        if (*param_4 == '\\0') {\n            sub.KERNEL32.dll_lstrcpyA(auStack264, param_3);\n            pcVar2 = param_3;\n        }\n        else {\n            sub.KERNEL32.dll_lstrcpyA(auStack264, param_4);\n            pcVar2 = param_1;\n            if (*param_1 != '\\0') {\n                sub.KERNEL32.dll_lstrcatA(auStack272, 0x41d538);\n                sub.KERNEL32.dll_lstrcatA(&stack0xfffffee8, param_1);\n            }\n        }\n        iVar1 = fcn.0040a360(param_1, auStack272, &stack0xfffffeec, 1);\n        if ((iVar1 == 0) && (iVar1 = fcn.0040a290(param_1, auStack272),  iVar1 != 0)) {\n            return iVar1;\n        }\n        iVar1 = fcn.0040a130(param_1, unaff_retaddr, pcVar2, param_3, unaff_ESI);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    else if ((param_1[0x1a] & 0x80U) != 0) {\n        pcVar2 = *(param_1 + 0x1c);\n        if (pcVar2 == NULL) {\n            return -0xc;\n        }\n        fcn.0040c970(*(param_1 + 0x10), auStack272);\n        if (unaff_EDI == 0) {\n            return -0x11;\n        }\n        *(pcVar2 + 0xb) = unaff_EDI;\n        *pcVar2 = param_1[0x14];\n    }\n    return 0;\n}\n",
        "token_count": 533
    },
    "00408f50": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00408f50(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uStack4;\n    \n    uStack4 = 0;\n    if (param_1 == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = *(param_1 + 0x1c);\n    if (iVar1 == 0) {\n        return 0xfffffff4;\n    }\n    if (param_2 == 0) {\n        fcn.0040c970(*(param_1 + 0xc));\n        if (*0x10 == 0x4) {\n            return 0xffffffef;\n        }\n        *(iVar1 + 7) = &uStack4 - *(iVar1 + 0xb);\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "00408fc0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00408fc0(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uStack96;\n    uchar *puStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uchar auStack4 [4];\n    \n    if (param_1 == 0) {\n        return -1;\n    }\n    puStack40 = &stack0xfffffffc;\n    uStack44 = param_2;\n    puStack48 = 0x408ff5;\n    fcn.0040c970();\n    puStack48 = &stack0xffffffe4;\n    *(param_1 + 0xc) = param_2;\n    uStack52 = 1;\n    uStack56 = param_3;\n    puStack60 = 0x409009;\n    fcn.00407410();\n    if (puStack40 != NULL) {\n        puStack60 = &stack0xffffffe4;\n        uStack64 = 0x65;\n        puStack68 = puStack40;\n        puStack72 = 0x409030;\n        fcn.00407ee0();\n        puStack72 = &stack0xffffffd8;\n        *(param_1 + 0x24) = puStack40;\n        uStack76 = param_2;\n        puStack80 = 0x409042;\n        fcn.0040c9b0();\n        puStack80 = &stack0xffffffc8;\n        uStack84 = 0x67;\n        puStack88 = puStack60;\n        puStack92 = 0x409053;\n        fcn.00407ee0();\n        puStack92 = &stack0xffffffbc;\n        *(param_1 + 0x2c) = puStack68;\n        uStack96 = 0x6a;\n        fcn.00407ee0(puStack72);\n        *(param_1 + 0x38) = puStack80;\n        fcn.00407ee0(uStack84, 0x6f);\n        puVar1 = puStack60;\n        *(param_1 + 0x3c) = puStack92;\n        if (puStack60 == NULL) {\n            iVar2 = fcn.0040a000(param_1, 0);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            fcn.0040c970(param_2, &stack0xffffffa8);\n            *(param_1 + 0x30) = uStack96;\n        }\n        else {\n            fcn.00407ee0(uStack96, 0x68, param_1 + 0x30);\n        }\n        *(param_1 + 0x28) = *(param_1 + 0x30) - *(param_1 + 0x24);\n        if (puVar1 == NULL) {\n            iVar2 = fcn.00409e40(param_1, 0);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            fcn.0040c970(param_2, &stack0xffffffa0);\n            *(param_1 + 0x34) = &stack0xffffffb0 - *(param_1 + 0x30);\n        }\n        else {\n            fcn.00407ee0(&stack0xffffffb0, 0x69, param_1 + 0x34);\n        }\n        if (puStack80 != NULL) {\n            fcn.0040c9b0(param_2, &stack0xffffffa0);\n        }\n        return 0;\n    }\n    return -1;\n}\n",
        "token_count": 876
    },
    "00409130": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00409130(int32_t param_1, uint param_2)\n\n{\n    int16_t **ppiVar1;\n    int32_t iVar2;\n    uint unaff_EDI;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puStack40;\n    uint uStack36;\n    int32_t iStack32;\n    uchar *puStack28;\n    uchar auStack12 [12];\n    \n    if (param_1 == 0) {\n        return 0;\n    }\n    ppiVar1 = *(param_1 + 0x20);\n    if ((ppiVar1 != NULL) && (iVar2 = *(param_1 + 0x1c),  iVar2 != 0)) {\n        if (*ppiVar1 != NULL) {\n            *(iVar2 + 0x19) = *(iVar2 + 0x19) | 0x20;\n            *(param_1 + 0x38) = *(param_1 + 0x38) + -1;\n            puStack28 = &stack0xfffffff4;\n            iStack32 = 1;\n            *(param_1 + 0x34) = *(param_1 + 0x34) - (*(iVar2 + 0x1d) + 0x2b);\n            uStack36 = param_2;\n            *(param_1 + 0x24) = *(param_1 + 0x24) - *(iVar2 + 7);\n            puStack40 = 0x409192;\n            fcn.00407410();\n            puStack40 = &stack0xffffffec;\n            fcn.00407ee0(unaff_EDI, 0x6b);\n            iVar5 = iStack32 - (*(iVar2 + 0x1d) + *(iVar2 + 7) + 0x2b);\n            uVar4 = uStack36;\n            iStack32 = iVar5;\n            fcn.00408080(uStack36, 0x89, iVar5);\n            iVar3 = 0x6c;\n            fcn.00407ee0(unaff_EDI, 0x6c, &stack0xffffffd8);\n            fcn.00408080(uVar4, 0x8a, iVar5 - *(iVar2 + 3));\n            **ppiVar1 = **ppiVar1 + -1;\n            if (**ppiVar1 == 0) {\n                ppiVar1[1] = 0x1;\n                *(param_1 + 0x2c) = *(param_1 + 0x2c) + -1;\n                *(param_1 + 0x28) = *(param_1 + 0x28) - (*ppiVar1)[1];\n                *(param_1 + 0x30) = *(param_1 + 0x30) - (*ppiVar1)[1];\n                fcn.00408080(unaff_EDI, 0x89, iVar3 - (*ppiVar1)[1]);\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 686
    },
    "00409510": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00409510(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    \n    if (param_1 == 0) {\n        return 0;\n    }\n    puVar1 = *(param_1 + 0x1c);\n    puVar2 = NULL;\n    if (puVar1 != NULL) {\n        puVar2 = puVar1;\n    }\n    // switch table (17 cases) at 0x409714\n    switch(param_2) {\n    case 0x23c:\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        *puVar2 = param_3;\n        return 1;\n    case 0x23d:\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        *(puVar2 + 1) = param_3;\n        return 1;\n    case 0x23e:\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        *(puVar2 + 3) = param_3;\n        return 1;\n    case 0x23f:\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        *(puVar2 + 7) = param_3;\n        return 1;\n    case 0x240:\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        *(puVar2 + 0xb) = param_3;\n        return 1;\n    case 0x241:\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        *(puVar2 + 0xf) = param_3;\n        return 1;\n    case 0x242:\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        *(puVar2 + 0x13) = param_3;\n        return 1;\n    default:\n        return 0;\n    case 0x244:\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        *(puVar2 + 0x19) = *(puVar2 + 0x19) | param_3;\n        return 1;\n    case 0x246:\n        *(puVar2 + 0x22) = param_3;\n        puVar2[0x19] = puVar2[0x19] | 0x40;\n        return 1;\n    case 0x247:\n        *(puVar2 + 0x26) = param_3;\n        puVar2[0x19] = puVar2[0x19] | 0x40;\n        return 1;\n    case 0x248:\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        puVar2[0x1c] = param_3;\n        return 1;\n    case 0x259:\n        if (puVar1 == NULL) {\n            return 0;\n        }\n        if (param_3 != 0) {\n            puVar1[0x19] = puVar1[0x19] | 0x20;\n            return 1;\n        }\n        break;\n    case 0x25a:\n        if (*(param_1 + 0x20) == 0) {\n            return 0;\n        }\n        *(*(param_1 + 0x20) + 4) = param_3;\n        return 1;\n    case 0x25b:\n        *(param_1 + 0xc) = param_3;\n        return 1;\n    case 0x25c:\n        *(param_1 + 0x10) = param_3;\n        return 1;\n    case 0x25d:\n        *(param_1 + 0x14) = param_3;\n        if ((puVar1 != NULL) && ((*(param_1 + 0x1a) & 0x80) != 0)) {\n            *puVar1 = param_3;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 905
    },
    "00409b40": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00409b40(int32_t param_1)\n\n{\n    uint uVar1;\n    uint16_t **ppuVar2;\n    int32_t iVar3;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    uint unaff_EBX;\n    int16_t iVar4;\n    uint unaff_EBP;\n    uint32_t unaff_EDI;\n    uint uStack12;\n    int32_t iStack8;\n    \n    uVar1 = 0;\n    uStack12 = 0;\n    if (param_1 != 0) {\n        if (*(param_1 + 4) == 0) {\n            return 0;\n        }\n        if ((*(param_1 + 0x1a) & 0x80) == 0) {\n            uVar1 = *(param_1 + 0xc);\n        }\n        else {\n            uVar1 = *(param_1 + 0x10);\n            iStack8 = fcn.00410a60(*(param_1 + 4));\n        }\n        fcn.0040c970(uVar1, &uStack12);\n        *(param_1 + 0x24) = unaff_EBX;\n        ppuVar2 = fcn.00410aa0(*(param_1 + 4));\n        while (ppuVar2 != NULL) {\n            if (ppuVar2[1] == NULL) {\n                fcn.0040cd00(*ppuVar2 & 0xffff0000 | **ppuVar2, uVar1);\n                fcn.0040cd00(CONCAT22(extraout_var, (*ppuVar2)[1]), uVar1);\n                iVar4 = 0;\n                iVar3 = CONCAT22(extraout_var_00, (*ppuVar2)[2]);\n                fcn.0040cd00();\n                if (-1 < (*ppuVar2)[2]) {\n                    do {\n                        iVar3 = iVar4;\n                        iVar4 = iVar4 + 1;\n                        iVar3 = *(*(*ppuVar2 + 3) + iVar3);\n                        unaff_EBP = uVar1;\n                        fcn.0040c820(iVar3);\n                    } while (iVar4 <= (*ppuVar2)[2]);\n                }\n                fcn.0040cc80(*(*ppuVar2 + 5), uVar1, iVar3);\n                unaff_EDI = unaff_EDI & 0xffff | (unaff_EDI >> 0x10) + 1 << 0x10;\n            }\n            ppuVar2 = fcn.00410b20(*(param_1 + 4));\n        }\n        *(param_1 + 0x2c) = unaff_EBP >> 0x10;\n        *(param_1 + 0x28) = unaff_EDI;\n        if (iStack8 != 0) {\n            fcn.0040c9b0(uVar1, &stack0xffffffe8);\n        }\n        if ((*(param_1 + 0x1a) & 0x80) != 0) {\n            fcn.00410a80(*(param_1 + 4), unaff_EBX);\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 717
    },
    "00409c70": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00409c70(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h, uint arg_34h, uint arg_38h)\n\n{\n    uint uVar1;\n    uchar *puVar2;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    ushort extraout_var_01;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int16_t iVar4;\n    int32_t unaff_ESI;\n    int32_t iVar5;\n    int32_t unaff_retaddr;\n    int32_t var_bp_8h;\n    uint var_ch;\n    uint var_1ah;\n    uint32_t uStack16;\n    int32_t iStack12;\n    uchar auStack8 [4];\n    uint uStack4;\n    \n    uVar1 = 0;\n    uStack16 = uStack16;\n    iStack12 = 0;\n    if (var_bp_8h != 0) {\n        if (*(var_bp_8h + 8) == 0) {\n            return 0;\n        }\n        if ((*(var_bp_8h + 0x1a) & 0x80) == 0) {\n            iVar5 = *(var_bp_8h + 0xc);\n        }\n        else {\n            iVar5 = *(var_bp_8h + 0x10);\n            uStack4 = fcn.0040a870(*(var_bp_8h + 8));\n        }\n        fcn.0040c970(iVar5, auStack8);\n        *(var_bp_8h + 0x30) = uStack16;\n        puVar2 = fcn.0040a830(*(var_bp_8h + 8));\n        while (puVar2 != NULL) {\n            if ((puVar2[0x19] & 0x20) == 0) {\n                fcn.0040c820(*puVar2, iVar5);\n                fcn.0040cd00(CONCAT22(extraout_var_01, *(puVar2 + 1)), iVar5);\n                fcn.0040cc80(*(puVar2 + 3), iVar5);\n                fcn.0040cc80(*(puVar2 + 7), iVar5);\n                fcn.0040cc80(*(puVar2 + 0xb), iVar5);\n                fcn.0040cc80(*(puVar2 + 0xf), iVar5);\n                fcn.0040cc80(*(puVar2 + 0x13), iVar5);\n                fcn.0040cd00(CONCAT22(extraout_var, puVar2[0x1d] + 0x2b), iVar5);\n                fcn.0040cd00(CONCAT22(extraout_var_00, *(puVar2 + 0x19)) & 0xffffffbf, iVar5);\n                fcn.0040c820(0, iVar5);\n                fcn.0040c820(puVar2[0x1c], iVar5);\n                iVar4 = 0;\n                uStack16 = puVar2[0x1d];\n                fcn.0040c820();\n                do {\n                    iVar3 = iVar4;\n                    iVar4 = iVar4 + 1;\n                    uStack16 = *(iVar3 + *(puVar2 + 0x1e));\n                    iStack12 = iVar5;\n                    fcn.0040c820();\n                } while (iVar4 <= puVar2[0x1d]);\n                unaff_EBX = iVar5;\n                if ((puVar2[0x19] & 0x40) == 0) {\n                    iVar4 = 0;\n                    fcn.0040cc80();\n                    uVar1 = 0;\n                }\n                else {\n                    iVar4 = *(puVar2 + 0x22) >> 0x10;\n                    fcn.0040cc80();\n                    uVar1 = *(puVar2 + 0x26);\n                }\n                fcn.0040cc80(uVar1, iVar5);\n                fcn.0040cc80(0, iVar5);\n                unaff_ESI = iVar4 + 1 << 0x10;\n                unaff_EBX = unaff_EBX + puVar2[0x1d] + 0x2b;\n            }\n            puVar2 = fcn.0040a850(*(var_bp_8h + 8));\n        }\n        *(var_bp_8h + 0x38) = unaff_ESI >> 0x10;\n        *(var_bp_8h + 0x34) = unaff_EBX;\n        if (unaff_retaddr != 0) {\n            fcn.0040c9b0(iVar5, &uStack16);\n        }\n        if ((*(var_bp_8h + 0x1a) & 0x80) != 0) {\n            fcn.0040a880(*(var_bp_8h + 8), iStack12);\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 1175
    },
    "00409e40": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00409e40(uint *param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    uchar uVar5;\n    uchar auStack56 [25];\n    uint8_t uStack31;\n    uint uStack26;\n    int32_t iStack22;\n    uint32_t uStack18;\n    int32_t iStack14;\n    int32_t iStack8;\n    \n    if (param_1 == NULL) {\n        return 0xffffffff;\n    }\n    if (param_1[2] == 0) {\n        uVar2 = fcn.0040a700(0x2e, *(param_1 + 0xe));\n        param_1[2] = uVar2;\n        if (param_1[2] == 0) {\n            return 0xffffffed;\n        }\n    }\n    uVar2 = param_1[3];\n    uVar5 = uVar2;\n    if (param_2 != 0) {\n        fcn.0040c970(uVar5, auStack56);\n    }\n    iVar4 = *(param_1 + 0xe);\n    while( true ) {\n        if (iVar4 < 1) {\n            fcn.0040c970(uVar2, 0xc4);\n            if (iStack8 != 0) {\n                fcn.0040c9b0(uVar2, &stack0xffffffb8);\n            }\n            return 0;\n        }\n        fcn.0040c8c0(uVar5);\n        fcn.0040cd30(uVar2);\n        fcn.0040ccc0(uVar2);\n        fcn.0040ccc0(uVar2);\n        fcn.0040ccc0(uVar2);\n        fcn.0040ccc0(uVar2);\n        fcn.0040ccc0(uVar2);\n        fcn.0040cd30(uVar2);\n        fcn.0040cd30(uVar2);\n        fcn.0040c8c0(uVar2);\n        fcn.0040c8c0(uVar2);\n        fcn.0040c8c0(uVar2);\n        iVar3 = fcn.00411f80();\n        if (iVar3 == 0) break;\n        iVar3 = 0;\n        do {\n            iVar3 = iVar3 + 1;\n            uVar1 = fcn.0040c8c0();\n            *(iStack14 + -1 + iVar3) = uVar1;\n        } while (iVar3 <= uStack18 >> 0x18);\n        iStack14 = fcn.0040ccc0();\n        iStack14 = fcn.0040ccc0(uVar2);\n        fcn.0040ccc0(uVar5);\n        if ((iStack22 != 0) || (uStack18 != 0)) {\n            uStack31 = uStack31 | 0x40;\n        }\n        iVar3 = fcn.0040a8c0(param_1[2], 200);\n        if (iVar3 == 0) {\n            fcn.00411b40(*param_1, uStack26);\n            return 0xfffffffa;\n        }\n        iVar4 = iVar4 + -1;\n    }\n    return 0xfffffffa;\n}\n",
        "token_count": 740
    },
    "0040a000": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040a000(uint *param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uchar uVar3;\n    ushort uVar4;\n    ushort *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t unaff_retaddr;\n    int32_t iVar8;\n    int16_t iVar9;\n    uchar auStack12 [4];\n    ushort *puStack8;\n    uint uStack4;\n    \n    if (param_1 == NULL) {\n        return 0xffffffff;\n    }\n    if (param_1[1] != 0) {\n        uVar2 = param_1[3];\n        if (param_2 != 0) {\n            fcn.0040c970(uVar2, auStack12);\n        }\n        uVar1 = *(param_1 + 0xb);\n        while( true ) {\n            iVar8 = uVar1 << 0x10;\n            if (uVar1 < 1) {\n                if (unaff_retaddr != 0) {\n                    fcn.0040c9b0(uVar2, &stack0xffffffec);\n                }\n                return 0;\n            }\n            puVar5 = fcn.00411f80(*param_1, 0xf);\n            if (puVar5 == NULL) break;\n            uVar4 = fcn.0040cd30(uVar2);\n            *puVar5 = uVar4;\n            uVar4 = fcn.0040cd30(uVar2);\n            puVar5[1] = uVar4;\n            uVar4 = fcn.0040cd30(uVar2);\n            puVar5[2] = uVar4;\n            uVar7 = *param_1;\n            iVar6 = fcn.00411f80();\n            iVar9 = iVar8 >> 0x10;\n            *(puVar5 + 3) = iVar6;\n            if (iVar6 == 0) {\n                return 0xfffffffa;\n            }\n            iVar6 = 0;\n            if (-1 < puVar5[2]) {\n                do {\n                    iVar6 = iVar6 + 1;\n                    uVar7 = uVar2;\n                    uVar3 = fcn.0040c8c0(uVar2);\n                    iVar9 = iVar8 >> 0x10;\n                    *(*(puVar5 + 3) + -1 + iVar6) = uVar3;\n                } while (iVar6 <= puVar5[2]);\n            }\n            uVar7 = fcn.0040ccc0(uVar2, uVar7);\n            *(puVar5 + 5) = uVar7;\n            uStack4 = 0;\n            puStack8 = puVar5;\n            fcn.00410b80(param_1[1], &puStack8);\n            uVar1 = iVar9 - 1;\n        }\n        return 0xfffffffa;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 658
    },
    "0040a130": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040a130(uint *param_1, char *param_2, char *param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *puVar3;\n    char *pcStack352;\n    uchar *puStack348;\n    char *pcStack344;\n    char *pcStack340;\n    uchar *puStack336;\n    char *pcStack332;\n    uchar uStack322;\n    uchar uStack321;\n    uchar uStack320;\n    uchar uStack319;\n    uchar uStack318;\n    uchar uStack317;\n    int32_t iStack314;\n    uint8_t uStack307;\n    uchar auStack276 [4];\n    uchar auStack272 [8];\n    uchar auStack264 [260];\n    char *pcStack4;\n    \n    uStack320 = unaff_EBX;\n    uStack319 = unaff_EBX >> 8;\n    uStack318 = unaff_EBX >> 0x10;\n    uStack317 = unaff_EBX >> 0x18;\n    uStack322 = unaff_ESI >> 0x10;\n    if (param_1 == NULL) {\n        return 0xffffffff;\n    }\n    if (param_1[2] == 0) {\n        return 0xffffffed;\n    }\n    if (*param_3 == '\\0') {\n        puStack336 = &stack0xfffffef8;\n        pcStack332 = param_2;\n        pcStack340 = 0x40a1af;\n        sub.KERNEL32.dll_lstrcpyA();\n        pcStack4 = param_2;\n    }\n    else {\n        pcStack332 = param_3;\n        puStack336 = &stack0xfffffef8;\n        pcStack340 = 0x40a17f;\n        sub.KERNEL32.dll_lstrcpyA();\n        pcStack340 = &stack0xfffffef0;\n        pcStack344 = 0x40a189;\n        fcn.0040ab70();\n        puStack348 = &stack0xfffffeec;\n        pcStack344 = pcStack4;\n        pcStack352 = 0x40a19b;\n        sub.KERNEL32.dll_lstrcatA();\n    }\n    puVar3 = &stack0xfffffec0;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    uStack319 = SUB41(param_3, 0);\n    uStack318 = param_3 >> 8;\n    pcStack340 = param_2;\n    pcStack344 = 0x40a1d8;\n    uVar1 = fcn.0040c500();\n    pcStack344 = &stack0xfffffeb8;\n    puStack348 = param_1[3];\n    uStack320 = uVar1 >> 8;\n    uStack319 = uVar1 >> 0x10;\n    uStack318 = uVar1 >> 0x18;\n    pcStack352 = 0x40a1ea;\n    fcn.0040c970();\n    uStack321 = SUB41(puStack336, 0);\n    uStack320 = puStack336 >> 8;\n    uStack319 = puStack336 >> 0x10;\n    uStack318 = puStack336 >> 0x18;\n    pcStack352 = pcStack4;\n    uStack307 = sub.KERNEL32.dll_lstrlenA();\n    iStack314 = fcn.00411f80(*param_1, uStack307 + 1);\n    if (iStack314 == 0) {\n        return 0xfffffffa;\n    }\n    sub.KERNEL32.dll_lstrcpyA(iStack314, pcStack4);\n    iVar2 = fcn.0040a8c0(param_1[2], &stack0xfffffea0);\n    if (iVar2 == 0) {\n        fcn.00411b40(*param_1, CONCAT13(uStack319, CONCAT12(uStack320, CONCAT11(uStack321, uStack322))));\n        return 0xfffffffa;\n    }\n    iVar2 = fcn.0040a8a0(param_1[2]);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    param_1[7] = iVar2;\n    return 0;\n}\n",
        "token_count": 979
    },
    "0040a290": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040a290(uint *param_1)\n\n{\n    int16_t iVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    uint unaff_retaddr;\n    ushort *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if (param_1 == NULL) {\n        return 0xffffffff;\n    }\n    if (param_1[1] == 0) {\n        return 0xffffffed;\n    }\n    uStack24 = 0xf;\n    uStack28 = *param_1;\n    uStack32 = 0x40a2c6;\n    puVar2 = fcn.00411f80();\n    if (puVar2 == NULL) {\n        return 0xfffffffa;\n    }\n    *puVar2 = 1;\n    puStack36 = 0x40a2e7;\n    iVar1 = sub.KERNEL32.dll_lstrlenA();\n    puVar2[2] = iVar1;\n    puStack36 = iVar1 + 1;\n    iVar3 = fcn.00411f80(*param_1);\n    *(puVar2 + 3) = iVar3;\n    if (iVar3 == 0) {\n        return 0xfffffffa;\n    }\n    sub.KERNEL32.dll_lstrcpyA(iVar3, unaff_retaddr);\n    *(puVar2 + 5) = 0;\n    puVar2[1] = puVar2[2] + 0xb;\n    uStack32 = 0;\n    puStack36 = puVar2;\n    fcn.00410b80(param_1[1], &stack0xffffffdc);\n    iVar3 = fcn.00410b00(param_1[1]);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    param_1[8] = iVar3;\n    return 0;\n}\n",
        "token_count": 420
    },
    "0040a360": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040a360(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int16_t **ppiVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return 0;\n    }\n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    iVar3 = 0;\n    ppiVar1 = fcn.00410aa0(*(param_1 + 4));\n    do {\n        if (ppiVar1 == NULL) {\ncode_r0x0040a3c8:\n            *param_2 = iVar3;\n            if (ppiVar1 == NULL) {\n                return 0;\n            }\n            if (param_3 != 0) {\n                **ppiVar1 = **ppiVar1 + 1;\n            }\n            *(param_1 + 0x20) = ppiVar1;\n            return 1;\n        }\n        iVar2 = sub.KERNEL32.dll_lstrcmpiA();\n        if (iVar2 == 0) {\n            if (ppiVar1[1] != NULL) {\n                ppiVar1[1] = NULL;\n            }\n            goto code_r0x0040a3c8;\n        }\n        if (ppiVar1[1] == NULL) {\n            iVar3 = iVar3 + 1;\n        }\n        ppiVar1 = fcn.00410b20();\n    } while( true );\n}\n",
        "token_count": 336
    },
    "0040a480": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040a480(int16_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int16_t iVar3;\n    char *unaff_retaddr;\n    char *pcVar4;\n    uchar *puStack292;\n    int32_t iStack288;\n    uchar auStack264 [260];\n    int32_t iStack4;\n    \n    iVar3 = 0;\n    iStack288 = param_2;\n    puStack292 = auStack264;\n    sub.KERNEL32.dll_lstrcpyA();\n    piVar1 = fcn.00410aa0(*(iStack4 + 4));\n    do {\n        if (piVar1 == NULL) {\ncode_r0x0040a587:\n            if (piVar1 == NULL) {\n                *unaff_retaddr = '\\0';\n                return 0xfffffff5;\n            }\n            *(iStack4 + 0x20) = piVar1;\n            return 0;\n        }\n        if (iVar3 == param_1) {\n            pcVar4 = unaff_retaddr;\n            sub.KERNEL32.dll_lstrcpyA(unaff_retaddr, *(*piVar1 + 6));\n            if ((iStack288 == 0) && (pcVar4 != NULL)) goto code_r0x0040a587;\n            fcn.0040f550(&stack0xfffffee4, 0x41d53c);\n            iVar2 = fcn.0040f550(unaff_retaddr, &puStack292);\n            if (iVar2 != 0) {\n                if (*unaff_retaddr == '\\\\') {\n                    if (unaff_retaddr[1] == '\\0') {\n                        *unaff_retaddr = '\\0';\n                    }\n                    else {\n                        sub.KERNEL32.dll_lstrcpyA(unaff_retaddr, unaff_retaddr + 1);\n                    }\n                }\n                if ((pcVar4 != NULL) || (*unaff_retaddr == '\\0')) goto code_r0x0040a587;\n            }\n            return 0xffffffce;\n        }\n        if (iVar3 != param_1 && param_1 <= iVar3) {\n            *unaff_retaddr = '\\0';\n            return 0xfffffff5;\n        }\n        iVar3 = iVar3 + 1;\n        piVar1 = fcn.00410b20();\n    } while( true );\n}\n",
        "token_count": 524
    },
    "0040a5b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040a5b0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_1 == 0) {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 4) == 0) {\n        return 0xffffffff;\n    }\n    iVar2 = 0;\n    iVar1 = fcn.00410aa0(*(param_1 + 4));\njoined_r0x0040a5ee:\n    do {\n        if (iVar1 == 0) {\ncode_r0x0040a657:\n            return -(iVar2 == 0) & 4;\n        }\n        if (*(iVar1 + 4) != 0) {\n            iVar2 = iVar2 + 1;\n            iVar1 = fcn.00410b20(*(param_1 + 4));\n            if (iVar1 == 0) {\n                fcn.00411010(*(param_1 + 4));\n                goto code_r0x0040a657;\n            }\n            fcn.00410b50();\n            fcn.00411010(*(param_1 + 4));\n            iVar1 = fcn.00410b00(*(param_1 + 4));\n            goto joined_r0x0040a5ee;\n        }\n        fcn.00410b80(param_1, &stack0xfffffff6);\n        iVar1 = fcn.00410b20(*(param_1 + 4));\n    } while( true );\n}\n",
        "token_count": 334
    },
    "0040a700": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.0040a700(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    if (*0x41d52c == 0) {\n        fcn.0040aa40();\n        if (*0x41d52c == 0) {\n            return NULL;\n        }\n    }\n    piVar2 = fcn.00411f80(*0x41d530);\n    if (piVar2 == NULL) {\n        return NULL;\n    }\n    piVar1 = piVar2 + 4;\n    if (unaff_retaddr == 0) {\n        iVar3 = fcn.0040dc10(*0x41d530, 0x40, 0x7d4);\n        *piVar1 = iVar3;\n        *piVar2 = 500;\n    }\n    else {\n        iVar3 = fcn.0040dc10(*0x41d530, 0x40, unaff_retaddr * 4);\n        *piVar1 = iVar3;\n        *piVar2 = unaff_retaddr;\n    }\n    if (*piVar1 == 0) {\n        return NULL;\n    }\n    piVar2[1] = 0x14;\n    piVar2[2] = 0;\n    piVar2[3] = -1;\n    *0x41d534 = *0x41d534 + 1;\n    return piVar2;\n}\n",
        "token_count": 337
    },
    "0040a830": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040a830(int32_t param_1)\n\n{\n    if (*(param_1 + 8) < 1) {\n        return 0;\n    }\n    *(param_1 + 0xc) = 0;\n    return **(param_1 + 0x10);\n}\n",
        "token_count": 67
    },
    "0040a8a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040a8a0(int32_t param_1)\n\n{\n    if (*(param_1 + 8) == 0) {\n        return 0;\n    }\n    return *(*(param_1 + 0x10) + *(param_1 + 0xc) * 4);\n}\n",
        "token_count": 69
    },
    "0040ac80": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040ac80(uint param_1, char *param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint uStack808;\n    uint uStack804;\n    uchar *puStack800;\n    uchar *puStack796;\n    uint uStack792;\n    char *pcStack788;\n    uchar auStack544 [24];\n    uchar auStack520 [232];\n    char cStack288;\n    uchar auStack264 [232];\n    uint uStack32;\n    uint uStack20;\n    uint uStack16;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcpyA;\n    if ((param_2 != NULL) && (*param_2 != '\\0')) {\n        pcStack788 = param_2;\n        uStack792 = 0x419010;\n        puStack796 = 0x40acb0;\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n        puStack796 = &stack0xfffffdf8;\n        puStack800 = &stack0xfffffef8;\n        uStack804 = 0x419010;\n        uStack808 = 0x40acca;\n        fcn.0040f280();\n        uStack808 = uStack16;\n        fcn.0040ab70();\n        (*pcVar1)(&stack0xfffffce8, uStack16);\n        pcVar5 = _sym.imp.KERNEL32.dll_lstrcatA;\n        if (cStack288 != '*') {\n            (*pcVar1)(0x419010, &stack0xfffffce0);\n            pcVar5 = _sym.imp.KERNEL32.dll_lstrcatA;\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(0x419010, param_2);\n            iVar2 = fcn.0040d350(0x419010);\n            if (iVar2 == 0) {\n                (*pcVar1)(uStack20, 0x419010);\n                return 1;\n            }\n        }\n        iVar4 = 0;\n        (*pcVar5)(&stack0xfffffce0, &stack0xfffffde0);\n        iVar2 = 0;\n        iVar6 = 1;\n        do {\n            iVar3 = iVar6;\n            fcn.0040ae50(0x419010, \"%s.%1d%1d%1d\", &stack0xfffffcd8, iVar4, iVar2, iVar6);\n            iVar3 = fcn.0040d350(iVar3, 0x419010);\n            if (iVar3 == 0) {\n                (*pcVar1)(uStack32, 0x419010);\n                return 1;\n            }\n            iVar7 = iVar6 + 1;\n            iVar3 = iVar2;\n            if (9 < iVar7) {\n                iVar3 = iVar2 + 1;\n                iVar7 = iVar6 + -9;\n                if (9 < iVar3) {\n                    iVar4 = iVar4 + 1;\n                    iVar3 = iVar2 + -9;\n                }\n            }\n            iVar2 = iVar3;\n            iVar6 = iVar7;\n        } while (iVar4 < 10);\n    }\n    return 0;\n}\n",
        "token_count": 726
    },
    "0040b060": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040b060(char *param_1)\n\n{\n    if (*param_1 != '\\0') {\n        (*_sym.imp.USER32.dll_CharUpperA)(param_1);\n    }\n    return;\n}\n",
        "token_count": 49
    },
    "0040b0e0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.0040b0e0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040b1c0(param_1);\n    return param_1 - iVar1 == -2;\n}\n",
        "token_count": 57
    },
    "0040b310": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040b310(char *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = *param_1;\n    while (cVar1 != '\\0') {\n        iVar2 = iVar2 + 1;\n        param_1 = param_1 + 1;\n        cVar1 = *param_1;\n    }\n    return iVar2;\n}\n",
        "token_count": 100
    },
    "0040b480": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.0040b480(char *param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    \n    pcVar4 = NULL;\n    cVar1 = *param_1;\n    do {\n        if (cVar1 == '\\0') {\n            return 0xffffffff;\n        }\n        cVar1 = *param_2;\n        pcVar3 = param_1;\n        pcVar2 = param_2;\n        if (*param_1 == cVar1) {\n            while ((cVar1 != '\\0' && (*pcVar3 == *pcVar2))) {\n                pcVar2 = fcn.0040b1c0(pcVar2);\n                pcVar3 = fcn.0040b1c0();\n                cVar1 = *pcVar2;\n            }\n            if (*pcVar2 == '\\0') {\n                return pcVar4;\n            }\n        }\n        iVar5 = pcVar4 - param_1;\n        param_1 = fcn.0040b1c0();\n        pcVar4 = param_1 + iVar5;\n        cVar1 = *param_1;\n    } while( true );\n}\n",
        "token_count": 281
    },
    "0040b850": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040b850(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint unaff_retaddr;\n    \n    if (param_2 < 0x12) {\n        if (param_2 == 0x11) {\n            uVar4 = 0;\n            uVar1 = 0x40000000;\n            uVar5 = 3;\n            goto code_r0x0040b8f8;\n        }\n        if (param_2 == 1) {\n            fcn.0040b9d0(param_1);\n            uVar4 = 1;\n            uVar1 = 0xc0000000;\n            uVar5 = 4;\n            goto code_r0x0040b8f8;\n        }\n        if (param_2 == 2) {\ncode_r0x0040b8b0:\n            uVar4 = 1;\n            uVar1 = 0x80000000;\n            uVar5 = 3;\n            goto code_r0x0040b8f8;\n        }\n    }\n    else if (param_2 < 0x1022) {\n        if (param_2 == 0x1021) {\n            uVar4 = 1;\n            uVar1 = 0x40000000;\ncode_r0x0040b8f3:\n            uVar5 = 2;\n            goto code_r0x0040b8f8;\n        }\n        if (param_2 == 0x40) goto code_r0x0040b8b0;\n        if (param_2 == 0x42) {\n            uVar4 = 3;\n            uVar1 = 0xc0000000;\n            uVar5 = 3;\n            goto code_r0x0040b8f8;\n        }\n    }\n    else if (param_2 == 0x1042) {\n        uVar4 = 3;\n        uVar1 = 0xc0000000;\n        goto code_r0x0040b8f3;\n    }\n    uVar4 = 1;\n    uVar1 = 0xc0000000;\n    uVar5 = 3;\ncode_r0x0040b8f8:\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(unaff_retaddr, uVar1, uVar4, 0, uVar5, 0x80, 0);\n    iVar3 = -1;\n    if (iVar2 != -1) {\n        iVar3 = iVar2;\n    }\n    return iVar3;\n}\n",
        "token_count": 598
    },
    "0040b930": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040b930(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 54
    },
    "0040b9d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040b9d0(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 57
    },
    "0040bb70": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040bb70(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileA)(param_1, param_2);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 64
    },
    "0040bcb0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040bcb0(uint param_1)\n\n{\n    uint32_t uVar1;\n    uchar *puStack536;\n    uchar *puStack532;\n    uint uStack528;\n    uchar auStack524 [524];\n    \n    puStack532 = &stack0xfffffdf4;\n    uStack528 = param_1;\n    puStack536 = 0x40bcc6;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n    puStack536 = &stack0xfffffdec;\n    fcn.0040f980();\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&stack0xfffffde8);\n    return (uVar1 == 0xffffffff) - 1 & uVar1;\n}\n",
        "token_count": 168
    },
    "0040be10": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040be10(uint param_1, int32_t param_2, uint param_3)\n\n{\n    if (param_2 == 1) {\n        *0x419670 = param_1;\n        *0x41d57c = param_3;\n        return 1;\n    }\n    *0x419670 = param_1;\n    *0x41d580 = param_3;\n    return 1;\n}\n",
        "token_count": 98
    },
    "0040be40": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040be40(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0040b850(param_1, param_2);\n    if (iVar1 != -1) {\n        if ((param_2 == 1) || (uVar2 = 0,  param_2 == 3)) {\n            uVar2 = 1;\n        }\n        if (*0x41d578 == 0) {\n            fcn.0040d850();\n        }\n        if (*0x41d574 == 0) {\n            *0x41d574 = fcn.00411910((*0x419674 * 7) / 6, 0x103);\n        }\n        if (*0x41d574 < 1) {\n            return -1;\n        }\n        if (*0x41d574 == -1) {\n            return -1;\n        }\n        if (*0x419620 != 0) {\n            if (*0x419644 == 0) {\n                if (*0x41d57c == NULL) {\n                    *0x419644 = fcn.00411f80(*0x41d574, *0x419674 + 10);\n                }\n                else {\n                    *0x419644 = (**0x41d57c)(*0x41d574, *0x419670, *0x419674 + 10);\n                }\n                if (*0x419644 == 0) {\n                    return -1;\n                }\n                *0x419624 = 0;\n                *0x419628 = 0;\n                *0x41962c = 0;\n                *0x419630 = 0;\n                *0x419634 = iVar1;\n                *0x419638 = uVar2;\n                *0x41963c = 0;\n                *0x419640 = 1;\n                return iVar1;\n            }\n            if (*0x419668 != 0) {\n                return -1;\n            }\n            if (*0x41d57c == NULL) {\n                *0x419668 = fcn.00411f80(*0x41d574, *0x419674 + 10);\n            }\n            else {\n                *0x419668 = (**0x41d57c)(*0x41d574, *0x419670, *0x419674 + 10);\n            }\n            if (*0x419668 == 0) {\n                return -1;\n            }\n            *0x419648 = 0;\n            *0x41964c = 0;\n            *0x419650 = 0;\n            *0x419654 = 0;\n            *0x419658 = iVar1;\n            *0x41965c = uVar2;\n            *0x419660 = 0;\n            *0x419664 = 1;\n            return iVar1;\n        }\n        if (*0x41d57c == NULL) {\n            *0x419620 = fcn.00411f80(*0x41d574, *0x419674 + 10);\n        }\n        else {\n            *0x419620 = (**0x41d57c)(*0x41d574, *0x419670, *0x419674 + 10);\n        }\n        if (*0x419620 == 0) {\n            return -1;\n        }\n        *0x419608 = 0;\n        *0x41960c = 0;\n        *0x419604 = 0;\n        *0x419600 = 0;\n        *0x419618 = 0;\n        *0x41961c = 1;\n        *0x419610 = iVar1;\n        *0x419614 = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 845
    },
    "0040c070": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040c070(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack4;\n    \n    if (param_2 == 1) {\n        uStack4 = 2;\n        uVar3 = 3;\n        uVar2 = 0xc0000000;\n    }\n    else if (param_2 == 3) {\n        uStack4 = 3;\n        uVar3 = 3;\n        uVar2 = 0xc0000000;\n    }\n    else {\n        uVar3 = uStack4;\n        uVar2 = uStack4;\n        if (param_2 == 2) {\n            uStack4 = 3;\n            uVar3 = 1;\n            uVar2 = 0x80000000;\n        }\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileA)(param_1, uVar2, uVar3, 0, uStack4, 0x80, 0);\n    if (iVar1 == -1) {\n        return -1;\n    }\n    if ((param_2 == 1) || (uVar3 = 0,  param_2 == 3)) {\n        uVar3 = 1;\n    }\n    if (*0x41d578 == 0) {\n        fcn.0040d850();\n    }\n    if (*0x41d574 == 0) {\n        *0x41d574 = fcn.00411910((*0x419674 * 7) / 6, 0x103);\n    }\n    if (*0x41d574 < 1) {\n        return -1;\n    }\n    if (*0x41d574 == -1) {\n        return -1;\n    }\n    if (*0x419620 != 0) {\n        if (*0x419644 == 0) {\n            if (*0x41d57c == NULL) {\n                *0x419644 = fcn.00411f80(*0x41d574, *0x419674 + 10);\n            }\n            else {\n                *0x419644 = (**0x41d57c)(*0x41d574, *0x419670, *0x419674 + 10);\n            }\n            if (*0x419644 != 0) {\n                *0x419624 = 0;\n                *0x419628 = 0;\n                *0x41962c = 0;\n                *0x419630 = 0;\n                *0x419634 = iVar1;\n                *0x419638 = uVar3;\n                *0x41963c = 0;\n                *0x419640 = 1;\n                return iVar1;\n            }\n            return -1;\n        }\n        if (*0x419668 != 0) {\n            return -1;\n        }\n        if (*0x41d57c == NULL) {\n            *0x419668 = fcn.00411f80(*0x41d574, *0x419674 + 10);\n        }\n        else {\n            *0x419668 = (**0x41d57c)(*0x41d574, *0x419670, *0x419674 + 10);\n        }\n        if (*0x419668 != 0) {\n            *0x419648 = 0;\n            *0x41964c = 0;\n            *0x419650 = 0;\n            *0x419654 = 0;\n            *0x419658 = iVar1;\n            *0x41965c = uVar3;\n            *0x419660 = 0;\n            *0x419664 = 1;\n            return iVar1;\n        }\n        return -1;\n    }\n    if (*0x41d57c == NULL) {\n        *0x419620 = fcn.00411f80(*0x41d574, *0x419674 + 10);\n    }\n    else {\n        *0x419620 = (**0x41d57c)(*0x41d574, *0x419670, *0x419674 + 10);\n    }\n    if (*0x419620 != 0) {\n        *0x419600 = 0;\n        *0x419604 = 0;\n        *0x419608 = 0;\n        *0x41960c = 0;\n        *0x419610 = iVar1;\n        *0x419614 = uVar3;\n        *0x419618 = 0;\n        *0x41961c = 1;\n        return iVar1;\n    }\n    return -1;\n}\n",
        "token_count": 1033
    },
    "0040c320": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040c320(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ca80(param_1);\n    if (iVar1 == -1) {\n        fcn.0040b930(param_1);\n    }\n    else {\n        iVar1 = fcn.0040b930(param_1);\n    }\n    if (param_1 == *0x419610) {\n        if (*0x419620 != 0) {\n            if (*0x41d580 == NULL) {\n                fcn.00411b40(*0x41d574, *0x419620);\n            }\n            else {\n                (**0x41d580)(*0x41d574, *0x419670);\n            }\n        }\n        *0x419620 = 0;\n        *0x419608 = 0;\n        *0x41960c = 0;\n        *0x419604 = 0;\n        *0x419600 = 0;\n        *0x419614 = 0;\n        *0x419610 = 0;\n        *0x419618 = 0;\n        *0x41961c = 1;\n    }\n    else if (param_1 == *0x419634) {\n        if (*0x419644 != 0) {\n            if (*0x41d580 == NULL) {\n                fcn.00411b40(*0x41d574, *0x419644);\n            }\n            else {\n                (**0x41d580)(*0x41d574, *0x419670);\n            }\n        }\n        *0x419644 = 0;\n        *0x41962c = 0;\n        *0x419630 = 0;\n        *0x419628 = 0;\n        *0x419624 = 0;\n        *0x419638 = 0;\n        *0x419634 = 0;\n        *0x41963c = 0;\n        *0x419640 = 1;\n    }\n    else {\n        if (param_1 != *0x419658) {\n            return -1;\n        }\n        if (*0x419668 != 0) {\n            if (*0x41d580 == NULL) {\n                fcn.00411b40(*0x41d574, *0x419668);\n            }\n            else {\n                (**0x41d580)(*0x41d574, *0x419670);\n            }\n        }\n        *0x419668 = 0;\n        *0x419650 = 0;\n        *0x419654 = 0;\n        *0x41964c = 0;\n        *0x419648 = 0;\n        *0x41965c = 0;\n        *0x419658 = 0;\n        *0x419660 = 0;\n        *0x419664 = 1;\n    }\n    if (((*0x419620 == 0) && (*0x419644 == 0)) && (*0x419668 == 0)) {\n        fcn.00411e00(*0x41d574);\n        *0x41d574 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 710
    },
    "0040c550": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040c550(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint unaff_ESI;\n    \n    iVar1 = param_1;\n    if (param_1 == *0x419610) {\n        iVar2 = 0x419600;\n    }\n    else if (param_1 == *0x419634) {\n        iVar2 = 0x419624;\n    }\n    else {\n        if (param_1 != *0x419658) {\n            return 0;\n        }\n        iVar2 = 0x419648;\n    }\n    if (param_2 <= *(iVar2 + 0xc)) {\n        if ((*(iVar2 + 0x14) != 0) && (iVar2 = fcn.0040ca80(param_1),  iVar2 == -1)) {\n            return 0xffffffff;\n        }\n        fcn.0040c9b0(iVar1, &param_1);\n    }\n    uVar3 = fcn.0040b990(iVar1, unaff_ESI);\n    return uVar3;\n}\n",
        "token_count": 262
    },
    "0040c5c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040c5c0(int32_t param_1, int32_t param_2, int32_t *param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStack12;\n    uint uStack8;\n    int32_t iStack4;\n    \n    iVar5 = 0;\n    if (param_1 == *0x419610) {\n        piVar3 = 0x419600;\n    }\n    else if (param_1 == *0x419634) {\n        piVar3 = 0x419624;\n    }\n    else {\n        if (param_1 != *0x419658) {\n            return 0;\n        }\n        piVar3 = 0x419648;\n    }\n    iStack4 = piVar3[8];\n    iStack12 = piVar3[7];\n    iVar4 = 0;\n    iVar1 = *piVar3;\n    iVar2 = piVar3[1];\n    if (0 < *param_3) {\n        do {\n            if (iVar2 <= iVar1) {\n                *piVar3 = iVar1;\n                piVar3[1] = iVar2;\n                if (piVar3[5] != 0) {\n                    piVar3[7] = iStack12;\n                    iVar1 = fcn.0040ca80();\n                    if (iVar1 == -1) {\n                        if (iVar5 < 1) {\n                            iVar5 = -1;\n                        }\n                        return iVar5;\n                    }\n                }\n                uStack8 = *0x419674;\n                if (piVar3[1] != 0) {\n                    piVar3[2] = piVar3[3] + 1;\n                }\n                iVar1 = fcn.0040d890(piVar3, &uStack8);\n                if (iVar1 == -1) {\n                    if (0 < iVar5) {\n                        return iVar5;\n                    }\n                    return -1;\n                }\n                iVar1 = *piVar3;\n                iVar2 = piVar3[1];\n            }\n            iVar1 = iVar1 + 1;\n            iVar5 = iVar5 + 1;\n            *(param_2 + iVar4) = *(iStack4 + -1 + iVar1);\n            iVar4 = iVar4 + 1;\n            iStack12 = 0;\n        } while (*param_3 != iVar4 && iVar4 <= *param_3);\n    }\n    *piVar3 = iVar1;\n    piVar3[1] = iVar2;\n    piVar3[7] = iStack12;\n    return iVar5;\n}\n",
        "token_count": 600
    },
    "0040c6f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040c6f0(int32_t param_1, int32_t param_2, int32_t *param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    if (*0x419610 == param_1) {\n        piVar7 = 0x419600;\n    }\n    else if (*0x419634 == param_1) {\n        piVar7 = 0x419624;\n    }\n    else {\n        if (*0x419658 != param_1) {\n            return 0;\n        }\n        piVar7 = 0x419648;\n    }\n    if (piVar7[5] == 0) {\n        return -1;\n    }\n    iVar3 = *piVar7;\n    iVar4 = piVar7[1];\n    iStack8 = piVar7[7];\n    iStack12 = piVar7[6];\n    iVar1 = piVar7[8];\n    iVar6 = 0;\n    iVar5 = piVar7[2];\n    iVar2 = piVar7[3];\n    if (0 < *param_3) {\n        do {\n            if (*0x419674 <= iVar3) {\n                *piVar7 = iVar3;\n                piVar7[1] = iVar4;\n                piVar7[7] = iStack8;\n                piVar7[6] = iStack12;\n                piVar7[3] = iVar2;\n                piVar7[2] = iVar5;\n                iVar2 = fcn.0040ca80();\n                iVar3 = *piVar7;\n                iVar4 = piVar7[1];\n                iVar5 = piVar7[2];\n                if (iVar2 == -1) {\n                    return -1;\n                }\n            }\n            iStack8 = 0;\n            iStack12 = 1;\n            *(iVar3 + iVar1) = *(param_2 + iVar6);\n            if (iVar4 <= iVar3) {\n                iVar4 = iVar3 + 1;\n            }\n            iVar6 = iVar6 + 1;\n            iVar2 = iVar4 + -1 + iVar5;\n            iVar3 = iVar3 + 1;\n        } while (*param_3 != iVar6 && iVar6 <= *param_3);\n    }\n    *piVar7 = iVar3;\n    piVar7[1] = iVar4;\n    piVar7[7] = iStack8;\n    piVar7[6] = iStack12;\n    piVar7[3] = iVar2;\n    piVar7[2] = iVar5;\n    return *param_3;\n}\n",
        "token_count": 627
    },
    "0040c820": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040c820(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_retaddr;\n    \n    if (param_2 == *0x419610) {\n        piVar2 = 0x419600;\n    }\n    else if (param_2 == *0x419634) {\n        piVar2 = 0x419624;\n    }\n    else {\n        if (param_2 != *0x419658) {\n            return 0;\n        }\n        piVar2 = 0x419648;\n    }\n    if (piVar2[5] == 0) {\n        return 0xffffffff;\n    }\n    if (*0x419674 <= *piVar2) {\n        iVar1 = fcn.0040ca80(param_2);\n        if (iVar1 == -1) {\n            return 0xffffffff;\n        }\n    }\n    piVar2[7] = 0;\n    piVar2[6] = 1;\n    *(piVar2[8] + *piVar2) = unaff_retaddr;\n    iVar1 = *piVar2;\n    if (piVar2[1] == iVar1 || piVar2[1] < iVar1) {\n        piVar2[1] = iVar1 + 1;\n    }\n    piVar2[3] = piVar2[2] + piVar2[1] + -1;\n    *piVar2 = *piVar2 + 1;\n    return unaff_retaddr;\n}\n",
        "token_count": 347
    },
    "0040c8c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040c8c0(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if (param_1 == *0x419610) {\n        piVar3 = 0x419600;\n    }\n    else if (param_1 == *0x419634) {\n        piVar3 = 0x419624;\n    }\n    else {\n        if (param_1 != *0x419658) {\n            return 0;\n        }\n        piVar3 = 0x419648;\n    }\n    if (piVar3[1] <= *piVar3) {\n        if (piVar3[5] != 0) {\n            iVar2 = fcn.0040ca80(param_1);\n            if (iVar2 == -1) {\n                return -1;\n            }\n        }\n        if (piVar3[1] != 0) {\n            piVar3[2] = piVar3[3] + 1;\n        }\n        iVar2 = fcn.0040d890(piVar3, &stack0xfffffff8);\n        if (iVar2 == -1) {\n            return -1;\n        }\n    }\n    piVar3[7] = 0;\n    cVar1 = *(piVar3[8] + *piVar3);\n    *piVar3 = *piVar3 + 1;\n    return cVar1;\n}\n",
        "token_count": 325
    },
    "0040c9b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040c9b0(int32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if (*0x419610 == param_1) {\n        piVar3 = 0x419600;\n    }\n    else if (*0x419634 == param_1) {\n        piVar3 = 0x419624;\n    }\n    else {\n        if (*0x419658 != param_1) {\n            return 0xffffffff;\n        }\n        piVar3 = 0x419648;\n    }\n    uVar1 = *param_2;\n    if ((piVar3[2] <= uVar1) && (uVar1 <= piVar3[3])) {\n        *piVar3 = uVar1 - piVar3[2];\n        return 0;\n    }\n    if ((piVar3[5] != 0) && (iVar2 = fcn.0040ca80(param_1),  iVar2 == -1)) {\n        return 0xffffffff;\n    }\n    piVar3[2] = *param_2;\n    piVar3[3] = *param_2;\n    *piVar3 = 0;\n    piVar3[1] = 0;\n    piVar3[7] = 1;\n    fcn.0040bab0(param_1, param_2);\n    return 0;\n}\n",
        "token_count": 326
    },
    "0040ca80": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040ca80(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    uint *puVar3;\n    uint *puStack16;\n    uint uStack4;\n    \n    if (param_1 == *0x419610) {\n        puVar3 = 0x419600;\n    }\n    else if (param_1 == *0x419634) {\n        puVar3 = 0x419624;\n    }\n    else {\n        if (param_1 != *0x419658) {\n            return 0;\n        }\n        puVar3 = 0x419648;\n    }\n    if (puVar3[5] == 0) {\n        return 0;\n    }\n    iVar2 = puVar3[1];\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if (puVar3[6] != 0) {\n        uStack4 = puVar3[2];\n        puStack16 = &uStack4;\n        fcn.0040bab0(puVar3[4]);\n        if (puVar3[2] != unaff_ESI) {\n            return -1;\n        }\n        iVar2 = fcn.0040bad0(puVar3[4], puVar3[8], &puStack16);\n        if (puVar3[1] != iVar2) {\n            return -1;\n        }\n    }\n    iVar1 = puVar3[2];\n    puVar3[2] = iVar1 + iVar2;\n    puVar3[3] = iVar1 + iVar2;\n    *puVar3 = 0;\n    puVar3[1] = 0;\n    puVar3[7] = 1;\n    puVar3[6] = 0;\n    return iVar2;\n}\n",
        "token_count": 414
    },
    "0040d0a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040d0a0(char *param_1, uint *param_2, uint *param_3)\n\n{\n    uint uVar1;\n    \n    if (*param_1 == '\\0') {\n        return 0;\n    }\n    *param_2 = 0;\n    *param_3 = 0;\n    uVar1 = fcn.0040bb90(param_1, param_2, param_3);\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "0040d180": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040d180(uint32_t param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfA)\n              (0x419130, \"%1c%1c%1c%1c\", (-((param_1 & 0x20) == 0) & 0x1eU) + 0x41, \n               (-((param_1 & 2) == 0) & 0x17U) + 0x48, (-((param_1 & 1) == 0) & 0xdU) + 0x52, \n               (-((param_1 & 4) == 0) & 0xcU) + 0x53);\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(param_2, 0x419130);\n    return 1;\n}\n",
        "token_count": 192
    },
    "0040d230": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040d230(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *unaff_retaddr;\n    int32_t iStack24;\n    uchar *puStack20;\n    uchar auStack4 [4];\n    \n    iVar2 = param_1;\n    puStack20 = auStack4;\n    iStack24 = param_1;\n    fcn.0040c970();\n    if (0 < param_1) {\n        param_1 = param_1 + -1;\n    }\n    iVar3 = fcn.0040c5c0(iVar2, unaff_retaddr, &param_1);\n    if ((iVar3 != -1) && (*unaff_retaddr != '\\x1a')) {\n        iVar4 = 0;\n        unaff_retaddr[iVar3] = '\\0';\n        if (0 < iVar3) {\n            do {\n                cVar1 = unaff_retaddr[iVar4];\n                if (cVar1 == '\\r') {\n                    iVar3 = 1;\n                    unaff_retaddr[iVar4] = '\\0';\n                    if ((unaff_retaddr + iVar4)[1] == '\\n') {\n                        iVar3 = 2;\n                    }\n                    iStack24 = iStack24 + iVar3 + iVar4;\n                    fcn.0040c9b0(iVar2, &iStack24);\n                    return 0;\n                }\n                if (cVar1 == '\\x1a') {\n                    unaff_retaddr[iVar4] = '\\0';\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar3);\n        }\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 388
    },
    "0040d350": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.0040d350(char *param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    if (param_1 == NULL) {\n        bVar4 = false;\n    }\n    else {\n        bVar4 = false;\n        if (*param_1 != '\\0') {\n            uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0x8001);\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(param_1, &stack0xfffffebc);\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n            (*pcVar1)(uVar2);\n            bVar4 = iVar3 != -1;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 196
    },
    "0040d430": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.0040d430(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint uStack572;\n    uchar *puStack568;\n    uchar *puStack564;\n    uint uStack560;\n    uchar *puStack556;\n    uint uStack552;\n    uint uStack548;\n    uchar auStack280 [8];\n    uchar auStack272 [272];\n    \n    uStack548 = param_1;\n    uStack552 = 0x40d447;\n    iVar1 = fcn.0040d350();\n    if (iVar1 == 0) {\n        bVar4 = false;\n    }\n    else {\n        uStack552 = 0x8000;\n        puStack556 = 0x40d45a;\n        (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n        puStack556 = &stack0xfffffef0;\n        uStack560 = param_1;\n        puStack564 = 0x40d468;\n        fcn.0040ed40();\n        puStack564 = &stack0xfffffde0;\n        puStack568 = &stack0xfffffee8;\n        uStack572 = 0x40d47a;\n        fcn.0040d7a0();\n        uStack572 = param_1;\n        uVar2 = fcn.0040d090();\n        uVar3 = uVar2 & 1;\n        if (uVar3 != 0) {\n            uVar2 = uVar2 ^ 1;\n            fcn.0040bd50(param_1, uVar2);\n        }\n        iVar1 = fcn.0040d070(param_1, &stack0xfffffdcc);\n        if (iVar1 != -1) {\n            fcn.0040d070(&stack0xfffffdc4, param_1);\n        }\n        if (uVar3 != 0) {\n            fcn.0040bd50(param_1, uVar2 | 1);\n        }\n        (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n        bVar4 = iVar1 != -1;\n    }\n    return bVar4;\n}\n",
        "token_count": 484
    },
    "null": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040db80": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040db80(void)\n\n{\n    uchar auStack4 [4];\n    \n    if (*0x41d608 != 0) {\n        return *0x41d604;\n    }\n    *0x41d608 = 1;\n    *0x41d60c = 2;\n    *0x41d610 = 3;\n    fcn.0040ddb0(0x41d604, auStack4, 40000);\n    fcn.0040be10(0x20, 1, fcn.0040dc10);\n    fcn.0040be10(0x20, 2, fcn.0040dce0);\n    return *0x41d604;\n}\n",
        "token_count": 161
    },
    "0040dbf0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040dbf0(void)\n\n{\n    if (*0x41d604 == 0) {\n        return 0;\n    }\n    *0x41d60c = 2;\n    return 1;\n}\n",
        "token_count": 51
    },
    "0040dc10": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040dc10(uint param_1, int32_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if (*0x41d60c == 1) {\n        if (param_2 == 0x10) {\n            return *0x41d604;\n        }\n        if (param_2 == 0x40) {\n            if (0x483f < param_3) {\n                return 0;\n            }\n            return *0x41d604 + 0x5400;\n        }\n        if (param_2 != 0x20) {\n            return 0;\n        }\n        if ((*0x41d610 & 1) == 0) {\n            if ((*0x41d610 & 2) == 0) {\n                fcn.0040e870(0, 0x2b9a, 0);\n                return 0;\n            }\n            *0x41d610 = *0x41d610 ^ 2;\n            iVar1 = 1;\n        }\n        else {\n            *0x41d610 = *0x41d610 ^ 1;\n            iVar1 = 0;\n        }\n        return iVar1 * 0x1000 + 0x3400 + *0x41d604;\n    }\n    if (*0x41d60c != 2) {\n        return 0;\n    }\n    if (param_2 == 0x10) {\n        return *0x41d604;\n    }\n    iVar1 = fcn.00411f80(param_1, param_3 + 1);\n    return iVar1;\n}\n",
        "token_count": 366
    },
    "0040dce0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040dce0(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (*0x41d60c == 1) {\n        if (param_2 == 0x20) {\n            if (*0x41d604 - param_3 == -0x3400) {\n                *0x41d610 = *0x41d610 | 1;\n                return;\n            }\n            *0x41d610 = *0x41d610 | 2;\n            return;\n        }\n    }\n    else {\n        if (*0x41d60c != 2) {\n            return;\n        }\n        if (param_2 != 0x10) {\n            fcn.00411b40(param_1, param_3);\n        }\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "0040ddb0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.0040ddb0(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t *unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, param_3);\n    *unaff_retaddr = iVar1;\n    if (iVar1 == 0) {\n        return false;\n    }\n    *unaff_ESI = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*unaff_retaddr);\n    *unaff_ESI = iVar1;\n    return iVar1 != 0;\n}\n",
        "token_count": 151
    },
    "0040dfa0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "enumerate files on windows"
        ],
        "decompiled_code": "\nint32_t fcn.0040dfa0(uint param_1, int32_t param_2, uint *param_3, uint param_4, uint param_5, int32_t param_6)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint uVar3;\n    uint unaff_retaddr;\n    \n    uVar3 = 0x66;\n    if (param_6 != 0) {\n        *0x419140 = 100;\n        if ((*0x41d768 == -1) && (*0x41d768 = fcn.00411910(0x400, *0x41d76c),  *0x41d768 == -1)) {\n            *0x419140 = 0xfffffff5;\n            return -0xb;\n        }\n        iVar2 = fcn.0040e4e0(unaff_EBX, unaff_retaddr, 0x41d77c);\n        if (iVar2 != 0) {\n            *0x419140 = 0xffffffff;\n            return iVar2;\n        }\n        uVar3 = 0x65;\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n    if ((*0x419140 != -1) && (*0x419140 != -0xb)) {\n        do {\n    // switch table (8 cases) at 0x40e344\n            switch(uVar3) {\n            case 100:\n                if (((*0x41d624 & 0x10) == 0) || (*0x41d650 == '.')) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(*0x41d620, 0x41d624);\n                    if (iVar2 == 0) {\n                        uVar3 = 0x7a;\n                    }\n                }\n                else {\n                    uVar3 = 0x79;\n                }\n                break;\n            case 0x65:\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(*0x41d778, *0x41d618);\n                (*pcVar1)(*0x41d778, *0x41d774);\n                *0x41d620 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(*0x41d778, 0x41d624);\n                if (*0x41d620 == -1) {\n                    if (param_6 == 0) {\n                        *0x419140 = 0xffffffff;\n                        return -1;\n                    }\n                    uVar3 = 0x6f;\n                }\n                else {\n                    if ((*0x41d650 != '.') && (iVar2 = fcn.0040e6b0(param_5),  iVar2 != 2)) {\n                        *param_3 = *0x41d644;\n                        if (param_2 != 0) {\n                            fcn.0040e700(param_1, param_2);\n                            return iVar2;\n                        }\n                        fcn.0040e6e0(param_1);\n                        return iVar2;\n                    }\n                    uVar3 = 0x66;\n                }\n                break;\n            case 0x66:\n                if (*0x41d620 == -1) {\n                    *0x419140 = 0xffffffff;\n                    return -1;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(*0x41d620, 0x41d624);\n                if (iVar2 == 0) {\n                    if (param_6 == 0) {\n                        *0x419140 = 0xffffffff;\n                        return -1;\n                    }\n                    uVar3 = 0x6f;\n                }\n                else {\n                    if ((*0x41d650 != '.') && (iVar2 = fcn.0040e6b0(param_5),  iVar2 != 2)) {\n                        *param_3 = *0x41d644;\n                        if (param_2 != 0) {\n                            fcn.0040e700(param_1, param_2);\n                            return iVar2;\n                        }\n                        fcn.0040e6e0(param_1);\n                        return iVar2;\n                    }\n                    uVar3 = 0x66;\n                }\n                break;\n            default:\n                return -0xb;\n            case 0x6f:\n                uVar3 = 100;\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(*0x41d778, *0x41d618);\n                (*pcVar1)(*0x41d778, 0x41d780);\n                if (*0x41d620 != -1) {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(*0x41d620);\n                }\n                *0x41d620 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(*0x41d778, 0x41d624);\n                if (*0x41d620 == -1) {\n                    uVar3 = 0x7a;\n                }\n                break;\n            case 0x70:\n                if (*0x41d620 == -1) {\n                    *0x419140 = 0xffffffff;\n                    return -1;\n                }\n                uVar3 = 100;\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(*0x41d620, 0x41d624);\n                if (iVar2 == 0) {\n                    uVar3 = 0x7a;\n                }\n                break;\n            case 0x79:\n                uVar3 = 0x65;\n                fcn.0040e3b0();\n                (*pcVar1)(*0x41d618, 0x41d650);\n                (*pcVar1)(*0x41d618, 0x41d77c);\n                *0x41d620 = -1;\n                break;\n            case 0x7a:\n                iVar2 = fcn.0040e460();\n                if (iVar2 != 0) {\n                    *0x419140 = 0xffffffff;\n                    return -1;\n                }\n                uVar3 = 0x70;\n            }\n        } while( true );\n    }\n    return *0x419140;\n}\n",
        "token_count": 1361
    },
    "0040e4e0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040e4e0(int32_t param_1, int32_t param_2, uchar *param_3)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    code *pcVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_FindClose;\n    iVar6 = 0;\n    if (0 < *0x41d764) {\n        piVar7 = 0x419148;\n        do {\n            if (*(*piVar7 + 8) != -1) {\n                (*pcVar3)(*(*piVar7 + 8));\n            }\n            iVar6 = iVar6 + 1;\n            *(*piVar7 + 8) = 0xffffffff;\n            fcn.00411b40(*0x41d768, **piVar7);\n            fcn.00411b40(*0x41d768, *piVar7);\n            piVar7 = piVar7 + 1;\n        } while (iVar6 < *0x41d764);\n    }\n    if (*0x41d620 != -1) {\n        (*pcVar3)(*0x41d620);\n    }\n    *0x41d764 = 0;\n    *0x41d774 = 0;\n    *0x41d620 = 0xffffffff;\n    if (param_1 == 0) {\n        *0x41d620 = 0xffffffff;\n        *0x41d764 = 0;\n        *0x41d770 = 0;\n        *0x41d774 = 0;\n        return 0xffffffeb;\n    }\n    if (param_2 == 0) {\n        *0x41d620 = 0xffffffff;\n        *0x41d764 = 0;\n        *0x41d770 = 0;\n        *0x41d774 = 0;\n        return 0xffffffea;\n    }\n    *0x41d770 = 0x4191e8;\n    iVar6 = fcn.0040e780(param_1, 0x4191e8);\n    if (0 < iVar6) {\n        *param_3 = 0x5c;\n        puVar1 = *0x41d770 + iVar6;\n        cVar2 = *(*0x41d770 + -1 + iVar6);\n        if ((cVar2 != '/') && (cVar2 != '\\\\')) {\n            uVar4 = fcn.0040e750(*0x41d770, iVar6);\n            *puVar1 = uVar4;\n            iVar6 = iVar6 + 1;\n            *param_3 = *(*0x41d770 + -1 + iVar6);\n        }\n        *0x41d774 = iVar6 + 0x4191e9;\n        iVar6 = iVar6 + 1;\n        *(*0x41d770 + -1 + iVar6) = 0;\n        iVar5 = fcn.0040e780(param_2, *0x41d774);\n        if (0 < iVar5) {\n            if (*0x41d618 != 0) {\n                fcn.00411b40(*0x41d768, *0x41d618);\n            }\n            *0x41d618 = fcn.00411f80(*0x41d768, iVar6);\n            if (*0x41d618 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(*0x41d618, *0x41d770);\n                *0x41d778 = iVar6 + iVar5 + 0x4191e9;\n                return 0;\n            }\n            *0x41d770 = 0;\n            *0x41d774 = 0;\n            return 0xffffffd7;\n        }\n        *0x41d774 = 0;\n        return 0xffffffea;\n    }\n    *0x41d770 = 0;\n    return 0xffffffeb;\n}\n",
        "token_count": 898
    },
    "0040e6b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040e6b0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*0x41d624 & 0x10) >> 4;\n    if ((param_1 == 0x10) && (uVar1 == 0)) {\n        return 2;\n    }\n    if ((param_1 == 1) && (uVar1 == 1)) {\n        uVar1 = 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 117
    },
    "0040e8b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040e8b0(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint auStack24 [4];\n    uint uStack8;\n    ushort uStack4;\n    uchar uStack2;\n    \n    if (*0x4196a0 != 0) {\n        return 1;\n    }\n    if (100 < param_2) {\n        param_2 = 100;\n    }\n    if (param_2 < 0) {\n        param_2 = 0;\n    }\n    auStack24[0] = 0xb0b0b0b0;\n    auStack24[1] = 0xb0b0b0b0;\n    auStack24[2] = 0xb0b0b0b0;\n    auStack24[3] = 0xb0b0b0b0;\n    uStack8 = 0xb0b0b0b0;\n    uStack4 = 0xb0b0;\n    uStack2 = 0;\n    if (param_2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (param_2 * 0x16) / 100;\n    }\n    if (*0x41d790 == uVar1) {\n        return 1;\n    }\n    if (0 < uVar1) {\n        puVar3 = auStack24;\n        for (uVar2 = uVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar3 = 0xdbdbdbdb;\n            puVar3 = puVar3 + 1;\n        }\n        for (uVar2 = uVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar3 = 0xdb;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    fcn.00414941(\"\\r %% %s\", auStack24);\n    if (param_2 == 100) {\n        fcn.00414941(0x41d79c);\n    }\n    *0x41d790 = uVar1;\n    return 1;\n}\n",
        "token_count": 515
    },
    "0040e9f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.0040e9f0(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    uint uStack280;\n    uchar auStack264 [264];\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcpyA;\n    uStack280 = param_1;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(auStack264);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryA)(unaff_retaddr, &stack0xfffffef0);\n    (*pcVar1)(param_1, &uStack280);\n    return iVar2 != 0;\n}\n",
        "token_count": 148
    },
    "0040ea40": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.0040ea40(char *param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    uchar *puStack564;\n    uchar *puStack560;\n    uchar *puStack556;\n    uchar *puStack552;\n    char *pcStack548;\n    char *pcStack544;\n    char *pcStack540;\n    uchar auStack296 [8];\n    uchar auStack288 [288];\n    \n    if (param_1 == NULL) {\n        return 0;\n    }\n    if (*param_1 == '\\0') {\n        return 1;\n    }\n    pcStack540 = param_1;\n    pcStack544 = 0x40ea80;\n    iVar1 = fcn.0040eb90();\n    if (iVar1 != 0) {\n        return 1;\n    }\n    pcStack544 = param_1;\n    pcStack548 = 0x40ea99;\n    fcn.00410960();\n    puStack552 = &stack0xfffffde8;\n    pcStack548 = param_1;\n    puStack556 = 0x40eaa5;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n    puStack556 = &stack0xfffffde0;\n    puStack560 = 0x40eaaf;\n    fcn.0040f980();\n    puStack564 = &stack0xfffffddc;\n    puStack560 = &stack0xfffffdd8;\n    iVar1 = fcn.00410500();\n    if (iVar1 != 0) {\n        puStack560 = &stack0xfffffddc;\n        puStack564 = 0x40eacf;\n        pcVar2 = fcn.0040f9e0();\n        if (*pcVar2 == ':') {\n            return 0;\n        }\n        puStack564 = &stack0xfffffee0;\n        fcn.0040fb50(&stack0xfffffdd8);\n        iVar1 = fcn.0040ea40(&stack0xfffffed8);\n        if (iVar1 == 1) {\n            iVar1 = fcn.00410570(&stack0xfffffdcc);\n            return iVar1 == 0;\n        }\n        return 0;\n    }\n    return (puStack552 & 0x10) >> 4;\n}\n",
        "token_count": 505
    },
    "0040eb90": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040eb90(char *param_1)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    \n    if (*param_1 == '\\0') {\n        return 0;\n    }\n    pcVar1 = fcn.0040b1c0(param_1);\n    if (*pcVar1 == ':') {\n        pcVar1 = fcn.0040b1c0(pcVar1);\n        pcVar2 = fcn.0040b1c0(pcVar1);\n        if ((*pcVar1 == '\\0') || ((*pcVar1 == '\\\\' && (*pcVar2 == '\\0')))) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "0040ebe0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040ebe0(uint param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char unaff_SI;\n    uchar *puStack304;\n    uchar *puStack300;\n    uint uStack296;\n    char *pcStack292;\n    uchar *puStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uchar auStack264 [264];\n    \n    puStack280 = &stack0xfffffef8;\n    uStack284 = param_1;\n    puStack288 = 0x40ebfb;\n    fcn.0040ed40();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcpyA;\n    if (unaff_SI == '\\0') {\n        pcStack292 = &stack0xfffffef0;\n        puStack288 = 0x41d7b4;\n        uStack296 = 0x40ec14;\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n        puStack300 = &stack0xfffffee8;\n        uStack296 = param_1;\n        puStack304 = 0x40ec20;\n        (*_sym.imp.KERNEL32.dll_lstrcatA)();\n        puStack304 = &stack0xfffffee0;\n        (*pcVar1)(param_1);\n        uVar2 = 1;\n    }\n    else {\n        puStack288 = &stack0xfffffef0;\n        pcStack292 = 0x40ec39;\n        pcVar3 = fcn.0040b1c0();\n        uStack296 = 0x40ec41;\n        pcStack292 = pcVar3;\n        pcVar4 = fcn.0040b1c0();\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n        if ((*pcVar3 == ':') && (*pcVar4 == '\\0')) {\n            puStack300 = &stack0xfffffee8;\n            uStack296 = 0x41d7b8;\n            puStack304 = 0x40ec5d;\n            (*_sym.imp.KERNEL32.dll_lstrcatA)();\n            puStack304 = param_1;\n            uVar2 = fcn.0040b1c0();\n            uVar2 = fcn.0040b1c0(uVar2);\n            (*pcVar1)(&stack0xfffffed8, uVar2);\n            (*_sym.imp.KERNEL32.dll_lstrcpyA)(param_1, &stack0xfffffed0);\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 586
    },
    "0040eca0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.0040eca0(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ecc0(param_1);\n    return iVar1 == 0;\n}\n",
        "token_count": 47
    },
    "0040ecc0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040ecc0(char *param_1)\n\n{\n    char cVar1;\n    bool bVar2;\n    char *pcVar3;\n    char *pcVar4;\n    \n    cVar1 = *param_1;\n    if ((cVar1 == '\\\\') && (param_1[1] == '\\0')) {\n        return 1;\n    }\n    if (((cVar1 < 'a') || ('z' < cVar1)) && ((cVar1 < 'A' || ('Z' < cVar1)))) {\n        bVar2 = false;\n    }\n    else {\n        bVar2 = true;\n    }\n    if (!bVar2) {\n        return 0;\n    }\n    pcVar3 = fcn.0040b1c0(param_1);\n    if (*pcVar3 != ':') {\n        return 0;\n    }\n    pcVar3 = fcn.0040b1c0(pcVar3);\n    pcVar4 = fcn.0040b1c0(pcVar3);\n    if ((*pcVar3 == '\\\\') && (*pcVar4 == '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "0040ed40": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ed40(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    bool bVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *unaff_retaddr;\n    char *pcVar7;\n    \n    iVar5 = 0;\n    pcVar6 = NULL;\n    bVar2 = false;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(param_2, param_1);\n    bVar3 = false;\n    cVar1 = *unaff_retaddr;\n    pcVar4 = unaff_retaddr;\n    while (pcVar7 = pcVar4,  cVar1 != '\\0') {\n        if (*pcVar7 == '\\\\') {\n            if ((!bVar2) || (bVar3)) {\n                iVar5 = iVar5 + 1;\n            }\n            bVar3 = true;\n            pcVar6 = pcVar7;\n        }\n        else if (*pcVar7 == ':') {\n            iVar5 = iVar5 + 1;\n            bVar2 = true;\n            pcVar6 = pcVar7;\n        }\n        pcVar4 = fcn.0040b1c0();\n        cVar1 = *pcVar4;\n        param_2 = pcVar7;\n    }\n    if (pcVar6 != NULL) {\n        if (iVar5 == 1) {\n            pcVar6 = fcn.0040b1c0(pcVar6, param_2);\n        }\n        *pcVar6 = '\\0';\n        return;\n    }\n    *unaff_retaddr = '\\0';\n    return;\n}\n",
        "token_count": 367
    },
    "0040edc0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040edc0(uint param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    if (param_2 == 0) {\n        fcn.0040ebe0(param_1);\n    }\n    pcVar1 = fcn.0040f9e0(param_1);\n    if (*pcVar1 != '\\\\') {\n        iVar2 = fcn.0040eca0(param_1);\n        if (iVar2 != 0) {\n            puVar3 = fcn.0040b1c0(pcVar1);\n            *puVar3 = 0x5c;\n            puVar3[1] = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "0040ee00": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ee00(char *param_1, uint param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    pcVar3 = NULL;\n    cVar1 = *param_1;\n    pcVar2 = param_1;\n    while (cVar1 != '\\0') {\n        if ((*pcVar2 == '\\\\') || (*pcVar2 == ':')) {\n            pcVar3 = pcVar2;\n        }\n        pcVar2 = fcn.0040b1c0();\n        cVar1 = *pcVar2;\n    }\n    if (pcVar3 != NULL) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(param_2, pcVar3 + 1);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(param_2, param_1);\n    return;\n}\n",
        "token_count": 199
    },
    "0040f020": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.0040f020(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint32_t uVar3;\n    code *pcVar4;\n    bool bVar5;\n    uchar *puStack856;\n    uchar *puStack852;\n    uint uStack848;\n    uchar *puStack844;\n    uchar *puStack840;\n    uint uStack836;\n    uchar *puStack832;\n    uchar *puStack828;\n    uchar auStack824 [4];\n    uchar *puStack820;\n    uint uStack816;\n    uchar *puStack812;\n    uchar auStack792 [200];\n    uchar auStack592 [8];\n    uchar auStack584 [8];\n    uint uStack576;\n    uchar auStack568 [24];\n    uchar auStack544 [8];\n    uchar auStack536 [216];\n    uchar auStack320 [8];\n    uchar auStack312 [16];\n    uint8_t uStack296;\n    uchar auStack288 [288];\n    \n    puStack812 = &stack0xfffffce8;\n    uStack816 = param_1;\n    puStack820 = 0x40f03c;\n    fcn.0040ee00();\n    puStack820 = &stack0xfffffde8;\n    puStack828 = 0x40f051;\n    fcn.0040ee00();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcmpiA;\n    puStack828 = &stack0xfffffde0;\n    puStack832 = &stack0xfffffcd8;\n    uStack836 = 0x40f066;\n    puStack856 = &stack0xfffffcc0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n    if (iVar2 == 0) {\n        puStack840 = &stack0xfffffee0;\n        uStack836 = 0;\n        puStack844 = 0x40f080;\n        fcn.0040f230();\n        uVar3 = unaff_EBX & 0xffffff00 | uStack296;\n        puStack844 = &stack0xfffffcc8;\n        uStack848 = param_1;\n        puStack852 = 0x40f092;\n        fcn.0040ed40();\n        puStack852 = uVar3;\n        fcn.004105e0();\n        puStack852 = &stack0xfffffdc8;\n        fcn.0040ed40();\n        fcn.004105e0(&stack0xfffffdc0, uVar3);\n        iVar2 = fcn.00410630(&stack0xfffffcb8);\n        pcVar4 = _sym.imp.KERNEL32.dll_lstrcpyA;\n        if (iVar2 != 0) {\n            fcn.0040f230(&stack0xfffffec8, puStack840);\n            pcVar4 = _sym.imp.KERNEL32.dll_lstrcpyA;\n            (*_sym.imp.KERNEL32.dll_lstrcpyA)(&stack0xfffffcb0, &stack0xfffffec0);\n        }\n        iVar2 = fcn.00410630(&stack0xfffffdc0);\n        if (iVar2 != 0) {\n            fcn.0040f230(&stack0xfffffec8, uStack576);\n            (*pcVar4)(&stack0xfffffdb8, &stack0xfffffec0);\n        }\n        fcn.0040edc0(&stack0xfffffcb8, 0);\n        fcn.0040edc0(&stack0xfffffdb8, 0);\n        iVar2 = (*pcVar1)(&stack0xfffffca8, &stack0xfffffdb0);\n        bVar5 = iVar2 == 0;\n    }\n    else {\n        bVar5 = false;\n    }\n    return bVar5;\n}\n",
        "token_count": 831
    },
    "0040f280": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.0040f280(char *param_1, uint param_2, char *param_3)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char *pcVar3;\n    bool bVar4;\n    uchar *unaff_retaddr;\n    char *pcVar5;\n    char *pcVar6;\n    char acStack264 [264];\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrcpyA;\n    if (*param_1 == '\\0') {\n        bVar4 = false;\n    }\n    else {\n        if (param_3 == NULL) {\n            pcVar5 = acStack264;\n            (*_sym.imp.KERNEL32.dll_lstrcpyA)(pcVar5, param_1);\n            param_3 = &stack0xfffffef0;\n        }\n        else {\n            pcVar5 = param_3;\n            (*_sym.imp.KERNEL32.dll_lstrcpyA)(param_3);\n        }\n        pcVar3 = NULL;\n        *unaff_retaddr = 0;\n        cVar1 = *param_3;\n        while (pcVar6 = param_3,  cVar1 != '\\0') {\n            if (*pcVar6 == '\\\\') {\n                pcVar3 = NULL;\n            }\n            else if (*pcVar6 == '.') {\n                pcVar3 = pcVar6;\n            }\n            param_3 = fcn.0040b1c0();\n            cVar1 = *param_3;\n            pcVar5 = pcVar6;\n        }\n        if (pcVar3 != NULL) {\n            *pcVar3 = '\\0';\n            pcVar3 = pcVar3 + 1;\n            (*pcVar2)(unaff_retaddr, pcVar3, pcVar5);\n        }\n        bVar4 = pcVar3 != NULL;\n    }\n    return bVar4;\n}\n",
        "token_count": 403
    },
    "0040f420": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040f420(char *param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    \n    if (param_1 != NULL) {\n        do {\n            if (param_2 == NULL) {\n                return 0;\n            }\n            if ((*param_1 == '\\0') && (*param_2 == '\\0')) {\n                return 1;\n            }\n            cVar1 = *param_2;\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            if (cVar1 == '*') {\n                param_2 = fcn.0040b550(param_2, 0x2e);\n                param_1 = fcn.004108f0(param_1);\n                if (param_2 == NULL) {\n                    if (param_1 == NULL) {\n                        return 1;\n                    }\n                }\n                else if (param_1 == NULL) {\n                    pcVar4 = fcn.0040b1c0(param_2);\n                    cVar1 = *pcVar4;\n                    while( true ) {\n                        if (cVar1 == '\\0') {\n                            return 1;\n                        }\n                        if ((*pcVar4 != '?') && (*pcVar4 != '*')) break;\n                        pcVar4 = fcn.0040b1c0();\n                        cVar1 = *pcVar4;\n                    }\n                    return 0;\n                }\n            }\n            else if (cVar1 == '?') {\n                param_2 = param_2 + 1;\n                iVar2 = fcn.0040f420(param_1, param_2);\n                if (iVar2 != 0) {\n                    return 1;\n                }\n                if ((*param_1 != '\\0') && (*param_1 != '.')) {\n                    param_1 = fcn.0040b1c0(param_1);\n                }\n            }\n            else {\n                iVar2 = fcn.0040af90(param_2);\n                iVar3 = fcn.0040af90(param_1);\n                if (iVar2 == iVar3) {\n                    if (*param_1 != '\\0') {\n                        param_1 = fcn.0040b1c0(param_1);\n                    }\n                    param_2 = fcn.0040b1c0(param_2);\n                }\n                else {\n                    if ((*param_1 != '\\0') || (*param_2 != '.')) {\n                        return 0;\n                    }\n                    param_2 = param_2 + 1;\n                }\n            }\n        } while (param_1 != NULL);\n    }\n    return 0;\n}\n",
        "token_count": 587
    },
    "0040f6a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040f6a0(char *param_1)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    while( true ) {\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        if ((*param_1 == '?') || (*param_1 == '*')) break;\n        param_1 = fcn.0040b1c0();\n        cVar1 = *param_1;\n    }\n    return 1;\n}\n",
        "token_count": 111
    }
}