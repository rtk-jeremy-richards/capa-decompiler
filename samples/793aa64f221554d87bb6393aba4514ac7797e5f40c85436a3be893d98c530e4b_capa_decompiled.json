{
    "00401180": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.00401180(void)\n\n{\n    ushort uVar1;\n    uchar auStack72 [40];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    fcn.00401110(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "00401b24": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00401b24(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(in_EAX + -4);\n    if ((uVar1 & 0x80000002) != 0x80000002) {\n        *0x41c5b0 = 4;\n    }\n    uVar3 = uVar1 & 0x7ffffffc;\n    puVar2 = in_EAX - uVar3;\n    if (((uVar1 ^ *puVar2) & 0xfffffffe) != 0) {\n        *0x41c5b0 = 5;\n    }\n    if ((*puVar2 & 1) != 0) {\n        uVar1 = puVar2[-1];\n        if (uVar1 != *(puVar2 + (8 - uVar1))) {\n            *0x41c5b0 = 6;\n        }\n        fcn.00401a14();\n        uVar3 = uVar3 + uVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 258
    },
    "004020ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.004020ec(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    *0x41c5b0 = 0;\n    if (*0x41c5ac == '\\0') {\n        puStack24 = 0x40210a;\n        cVar2 = fcn.00401870();\n        if (cVar2 == '\\0') {\n            *0x41c5b0 = 8;\n            return 8;\n        }\n    }\n    uStack28 = 0x40227e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x41c035 != '\\0') {\n        uStack36 = 0x41c5b4;\n        puStack24 = &stack0xfffffffc;\n        fcn.004011cc();\n    }\n    puVar5 = in_EAX + -4;\n    uVar4 = *puVar5;\n    if ((uVar4 & 2) == 0) {\n        *0x41c5b0 = 9;\n        goto code_r0x00402255;\n    }\n    *0x41c59c = *0x41c59c + -1;\n    *0x41c5a0 = *0x41c5a0 - ((uVar4 & 0x7ffffffc) - 4);\n    if ((uVar4 & 1) != 0) {\n        uVar1 = *(in_EAX + -8);\n        if ((uVar1 < 0xc) || ((uVar1 & 0x80000003) != 0)) {\n            *0x41c5b0 = 10;\n            goto code_r0x00402255;\n        }\n        puVar5 = puVar5 - uVar1;\n        if (uVar1 != puVar5[2]) {\n            *0x41c5b0 = 10;\n            goto code_r0x00402255;\n        }\n        uVar4 = uVar4 + uVar1;\n        fcn.00401a14();\n    }\n    uVar4 = uVar4 & 0x7ffffffc;\n    puVar5 = puVar5 + uVar4;\n    if (puVar5 == *0x41c608) {\n        *0x41c608 = *0x41c608 - uVar4;\n        *0x41c604 = *0x41c604 + uVar4;\n        if (0x3c00 < *0x41c604) {\n            fcn.00401d04();\n        }\n        fcn.0040303c();\n        return 0;\n    }\n    if ((*puVar5 & 2) == 0) {\n        if (((puVar5[1] == 0) || (*puVar5 == 0)) || (puVar5[2] < 0xc)) {\n            *0x41c5b0 = 0xb;\n            goto code_r0x00402255;\n        }\n        fcn.00401a14();\n    }\n    else {\n        if ((*puVar5 & 0x7ffffffc) < 4) {\n            *0x41c5b0 = 0xb;\n            goto code_r0x00402255;\n        }\n        *puVar5 = *puVar5 | 1;\n    }\n    fcn.00401c7c();\ncode_r0x00402255:\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x402285;\n    if (*0x41c035 != '\\0') {\n        uStack32 = 0x41c5b4;\n        uVar3 = fcn.004011d4();\n    }\n    return uVar3;\n}\n",
        "token_count": 923
    },
    "004045cc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004045cc(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        in_EAX = CONCAT44(param_2, in_EAX) / param_3;\n        param_2 = 0;\n    }\n    else {\n        bVar6 = param_2 < 0;\n        if (bVar6) {\n            bVar4 = in_EAX != 0;\n            in_EAX = -in_EAX;\n            param_2 = -bVar4 - param_2;\n        }\n        if (param_4 < 0) {\n            bVar4 = param_3 != 0;\n            param_3 = -param_3;\n            param_4 = -bVar4 - param_4;\n            bVar6 = !bVar6;\n        }\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        if (bVar6) {\n            bVar6 = in_EAX != 0;\n            in_EAX = -in_EAX;\n            param_2 = -bVar6 - param_2;\n        }\n    }\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 560
    },
    "004011e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.004011e4(void)\n\n{\n    int32_t **ppiVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    if (*0x41c5d0 == NULL) {\n        puVar2 = fcn.004011a4(0, 0x644);\n        if (puVar2 == NULL) {\n            return NULL;\n        }\n        *puVar2 = *0x41c5cc;\n        iVar4 = 0;\n        *0x41c5cc = puVar2;\n        do {\n            ppiVar1 = puVar2 + iVar4 * 4 + 1;\n            *ppiVar1 = *0x41c5d0;\n            iVar4 = iVar4 + 1;\n            *0x41c5d0 = ppiVar1;\n        } while (iVar4 != 100);\n    }\n    piVar3 = *0x41c5d0;\n    *0x41c5d0 = **0x41c5d0;\n    return piVar3;\n}\n",
        "token_count": 246
    },
    "004012f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004012f4(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *in_EAX;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iStack20;\n    \n    piVar6 = in_EAX;\n    while( true ) {\n        uVar1 = *param_2;\n        uVar4 = piVar6[2];\n        if ((uVar4 <= uVar1) && (uVar1 + param_2[1] <= uVar4 + piVar6[3])) break;\n        piVar6 = *piVar6;\n        if (in_EAX == piVar6) {\n            uVar5 = 0;\ncode_r0x00401380:\n            return CONCAT44(iStack20, uVar5);\n        }\n    }\n    if (uVar1 == uVar4) {\n        piVar6[2] = piVar6[2] + param_2[1];\n        uVar4 = param_2[1];\n        piVar6[3] = piVar6[3] - uVar4;\n        if (piVar6[3] == 0) {\n            uVar4 = fcn.0040126c();\n        }\n    }\n    else if (uVar1 + param_2[1] == uVar4 + piVar6[3]) {\n        piVar6[3] = piVar6[3] - param_2[1];\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = param_2[1];\n        iStack20 = (piVar6[2] + piVar6[3]) - (uVar2 + uVar3);\n        piVar6[3] = uVar1 - uVar4;\n        uVar4 = fcn.0040123c(uVar2 + uVar3);\n        if (uVar4 == '\\0') {\n            uVar5 = 0;\n            goto code_r0x00401380;\n        }\n    }\n    uVar5 = CONCAT31(uVar4 >> 8, 1);\n    goto code_r0x00401380;\n}\n",
        "token_count": 509
    },
    "004013ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004013ec(int32_t *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    param_1[1] = 0x100000;\n    iVar2 = fcn.004011b4();\n    *param_1 = iVar2;\n    if (iVar2 == 0) {\n        param_1[1] = param_2 + 0xffffU & 0xffff0000;\n        iVar2 = fcn.004011b4();\n        *param_1 = iVar2;\n    }\n    if (*param_1 != 0) {\n        cVar1 = fcn.0040123c();\n        if (cVar1 == '\\0') {\n            fcn.004011bc(*param_1, 0, 0x8000);\n            *param_1 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "00401464": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401464(uint32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    \n    uStack28 = 0xffffffff;\n    uStack24 = 0;\n    puVar1 = *0x41c5d4;\n    while (puVar4 = puVar1,  puVar4 != 0x41c5d4) {\n        puVar1 = *puVar4;\n        uVar2 = puVar4[2];\n        if ((in_EAX <= uVar2) && (uVar2 + puVar4[3] <= param_2 + in_EAX)) {\n            if (uVar2 < uStack28) {\n                uStack28 = uVar2;\n            }\n            if (uStack24 < uVar2 + puVar4[3]) {\n                uStack24 = uVar2 + puVar4[3];\n            }\n            iVar3 = fcn.004011bc(uVar2, 0, 0x8000);\n            if (iVar3 == 0) {\n                *0x41c5b0 = 1;\n            }\n            fcn.0040126c();\n        }\n    }\n    *param_1 = 0;\n    if (uStack24 != 0) {\n        *param_1 = uStack28;\n        param_1[1] = uStack24 - uStack28;\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00401630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401630(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iStack24;\n    \n    puVar1 = *0x41c5e4;\n    do {\n        for (; puVar1 != 0x41c5e4; puVar1 = *puVar1) {\n            if ((in_EAX + 0x3fffU & 0xffffc000) <= puVar1[3]) {\n                fcn.0040151c();\n                if (*param_2 == 0) {\n                    return;\n                }\n                puVar1[2] = puVar1[2] + param_2[1];\n                puVar1[3] = puVar1[3] - param_2[1];\n                if (puVar1[3] != 0) {\n                    return;\n                }\n                fcn.0040126c();\n                return;\n            }\n        }\n        fcn.00401388();\n        if (*param_2 == 0) {\n            return;\n        }\n        fcn.00401284();\n        puVar1 = *0x41c5e4;\n    } while (iStack24 != 0);\n    fcn.00401464();\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 299
    },
    "004016c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004016c0(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iStack32;\n    int32_t iStack24;\n    \n    uVar2 = param_2 + 0x3fffU & 0xffffc000;\n    puVar1 = *0x41c5e4;\ncode_r0x004016e6:\n    do {\n        for (; (puVar1 != 0x41c5e4 && (in_EAX != puVar1[2])); puVar1 = *puVar1) {\n        }\n        if (in_EAX == puVar1[2]) {\n            if (uVar2 <= puVar1[3]) goto code_r0x00401793;\n            fcn.004013ec();\n            if (iStack32 != 0) {\n                fcn.00401284();\n                puVar1 = *0x41c5e4;\n                if (iStack24 == 0) {\n                    fcn.00401464();\n                    *param_1 = 0;\n                    return;\n                }\n                goto code_r0x004016e6;\n            }\n        }\n        fcn.004013ec();\n        if (iStack32 == 0) {\ncode_r0x00401793:\n            if ((in_EAX != puVar1[2]) || (puVar1[3] < uVar2)) {\n                *param_1 = 0;\n                return;\n            }\n            fcn.0040151c();\n            if (*param_1 == 0) {\n                return;\n            }\n            puVar1[2] = puVar1[2] + param_1[1];\n            puVar1[3] = puVar1[3] - param_1[1];\n            if (puVar1[3] != 0) {\n                return;\n            }\n            fcn.0040126c();\n            return;\n        }\n        fcn.00401284();\n        puVar1 = *0x41c5e4;\n        if (iStack24 == 0) {\n            fcn.00401464();\n            *param_1 = 0;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 510
    },
    "004017e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004017e4(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iStack28;\n    int32_t iStack20;\n    \n    if ((in_EAX + 0x3fffU & 0xffffc000) < (param_2 + in_EAX & 0xffffc000U)) {\n        fcn.004015b0();\n        fcn.00401284();\n        if (iStack28 != 0) {\n            fcn.00401464();\n            iStack28 = iStack20;\n        }\n        if (iStack28 != 0) {\n            fcn.004012f4();\n        }\n    }\n    else {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00401870": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401870(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x401926;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    fcn.004011c4(0x41c5b4);\n    if (*0x41c035 != '\\0') {\n        fcn.004011cc(0x41c5b4);\n    }\n    fcn.00401234();\n    fcn.00401234();\n    fcn.00401234();\n    uVar2 = 0;\n    *0x41c60c = fcn.004011a4(0, 0xff8);\n    if (*0x41c60c != 0) {\n        iVar1 = 3;\n        do {\n            *(*0x41c60c + -0xc + iVar1 * 4) = 0;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n        *0x41c5f8 = 0x41c5f4;\n        *0x41c5f4 = 0x41c5f4;\n        *0x41c600 = 0x41c5f4;\n        *0x41c5ac = 1;\n    }\n    *in_FS_OFFSET = uVar2;\n    if (*0x41c035 != '\\0') {\n        fcn.004011d4(0x41c5b4, 0x40192d);\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "00401934": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401934(void)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint *puVar3;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = &stack0xfffffffc;\n    if (*0x41c5ac == '\\0') {\n        return;\n    }\n    uStack16 = 0x401a0a;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puVar1 = &stack0xfffffffc;\n    if (*0x41c035 != '\\0') {\n        fcn.004011cc(0x41c5b4);\n        puVar1 = puStack12;\n    }\n    puStack12 = puVar1;\n    *0x41c5ac = 0;\n    puVar3 = *0x41c60c;\n    fcn.004011ac();\n    *0x41c60c = NULL;\n    for (puVar2 = *0x41c5d4; puVar2 != 0x41c5d4; puVar2 = *puVar2) {\n        puVar3 = puVar2[2];\n        fcn.004011bc();\n    }\n    fcn.00401234();\n    fcn.00401234();\n    fcn.00401234();\n    while (puVar2 = *0x41c5cc,  puVar2 != NULL) {\n        *0x41c5cc = *puVar2;\n        fcn.004011ac();\n        puVar3 = puVar2;\n    }\n    *0x41c5cc = puVar2;\n    *in_FS_OFFSET = puVar3;\n    uStack20 = 0x401a11;\n    if (*0x41c035 != '\\0') {\n        fcn.004011d4(0x41c5b4);\n    }\n    fcn.004011dc(0x41c5b4);\n    return;\n}\n",
        "token_count": 455
    },
    "00401d04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401d04(void)\n\n{\n    if (0 < *0x41c604) {\n        if (*0x41c604 < 0xc) {\n            *0x41c5b0 = 7;\n        }\n        else {\n            **0x41c608 = *0x41c604 | 2;\n            fcn.00401ad8();\n            *0x41c608 = NULL;\n            *0x41c604 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00401ddc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00401ddc(void)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    uint uStack8;\n    \n    fcn.00401630();\n    if (iStack12 != 0) {\n        uVar1 = fcn.00401d50();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00401e03;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00401e03:\n    return CONCAT44(uStack8, uVar1);\n}\n",
        "token_count": 138
    },
    "00401e08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00401e08(void)\n\n{\n    uint uVar1;\n    int32_t iStack16;\n    uint uStack12;\n    \n    fcn.004016c0();\n    if (iStack16 != 0) {\n        uVar1 = fcn.00401d50();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00401e34;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00401e34:\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 139
    },
    "00401f5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t * fcn.00401f5c(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x41c5ac == '\\0') {\n        puStack28 = 0x401f75;\n        cVar2 = fcn.00401870();\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    if (0x7ffffff8 < in_EAX) {\n        return NULL;\n    }\n    uStack32 = 0x4020d8;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (*0x41c035 != '\\0') {\n        uStack40 = 0x41c5b4;\n        puStack28 = &stack0xfffffffc;\n        fcn.004011cc();\n    }\n    puVar4 = *0x41c608;\n    uVar5 = in_EAX + 7U & 0xfffffffc;\n    if (uVar5 < 0xc) {\n        uVar5 = 0xc;\n    }\n    if (uVar5 < 0x1001) {\n        uVar3 = uVar5;\n        if (uVar5 < 0) {\n            uVar3 = uVar5 + 3;\n        }\n        puVar1 = *(*0x41c60c + -0xc + (uVar3 >> 2) * 4);\n        if (puVar1 != NULL) {\n            *(puVar1 + uVar5) = *(puVar1 + uVar5) & 0xfffffffe;\n            puVar4 = puVar1[1];\n            if (puVar1 == puVar4) {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0x41c60c + -0xc + (uVar3 >> 2) * 4) = 0;\n            }\n            else {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0x41c60c + -0xc + (uVar3 >> 2) * 4) = puVar4;\n                uVar3 = *puVar1;\n                *(uVar3 + 4) = puVar4;\n                *puVar4 = uVar3;\n            }\n            *puVar1 = puVar1[2] | 2;\n            *0x41c59c = *0x41c59c + 1;\n            *0x41c5a0 = *0x41c5a0 + (uVar5 - 4);\n            fcn.0040303c();\n            return puVar1 + 1;\n        }\n    }\n    if (*0x41c604 < uVar5) {\n        fcn.00401e68();\n        puVar4 = NULL;\n        *in_FS_OFFSET = uStack40;\n        uStack32 = 0x4020df;\n        if (*0x41c035 != '\\0') {\n            uStack36 = 0x41c5b4;\n            puVar4 = fcn.004011d4();\n        }\n        return puVar4;\n    }\n    *0x41c604 = *0x41c604 - uVar5;\n    if (*0x41c604 < 0xc) {\n        uVar5 = uVar5 + *0x41c604;\n        *0x41c604 = 0;\n    }\n    *0x41c608 = *0x41c608 + uVar5;\n    *puVar4 = uVar5 | 2;\n    *0x41c59c = *0x41c59c + 1;\n    *0x41c5a0 = *0x41c5a0 + (uVar5 - 4);\n    fcn.0040303c();\n    return puVar4 + 1;\n}\n",
        "token_count": 986
    },
    "0040246c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040246c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x41c5ac == '\\0') {\n        puStack24 = 0x402485;\n        cVar1 = fcn.00401870();\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n    }\n    uStack28 = 0x40251d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x41c035 != '\\0') {\n        uStack36 = 0x41c5b4;\n        puStack24 = &stack0xfffffffc;\n        fcn.004011cc();\n    }\n    cVar1 = fcn.00402290();\n    if ((cVar1 == '\\0') && (iVar2 = fcn.00401f5c(),  iVar2 != 0)) {\n        fcn.00402628();\n        fcn.004020ec();\n    }\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x402524;\n    if (*0x41c035 != '\\0') {\n        uStack32 = 0x41c5b4;\n        uVar3 = fcn.004011d4();\n    }\n    return uVar3;\n}\n",
        "token_count": 362
    },
    "00402614": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00402614(void)\n\n{\n    if (*0x41c008 != NULL) {\n        (**0x41c008)();\n    }\n    fcn.004025c0();\n    return;\n}\n",
        "token_count": 46
    },
    "00402668": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402668(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    \n    while( true ) {\n        while ((*in_EAX != 0 && (*in_EAX < 0x21))) {\n            in_EAX = fcn.004010d8();\n        }\n        puVar4 = in_EAX;\n        if ((*in_EAX != 0x22) || (in_EAX[1] != 0x22)) break;\n        in_EAX = in_EAX + 2;\n    }\n    while (0x20 < *puVar4) {\n        if (*puVar4 == 0x22) {\n            puVar2 = fcn.004010d8(puVar4);\n            puVar3 = puVar4;\n            for (; (*puVar2 != 0 && (*puVar2 != 0x22)); puVar2 = fcn.004010d8(puVar3, puVar2)) {\n            }\n            puVar4 = puVar2;\n            if (*puVar2 != 0) {\n                puVar4 = fcn.004010d8(puVar3, puVar2);\n            }\n        }\n        else {\n            puVar4 = fcn.004010d8();\n        }\n    }\n    fcn.00403b1c();\n    iVar1 = *param_2;\n    iVar5 = 0;\n    while (0x20 < *in_EAX) {\n        if (*in_EAX == 0x22) {\n            puVar4 = in_EAX;\n            in_EAX = fcn.004010d8(in_EAX);\n            while ((*in_EAX != 0 && (*in_EAX != 0x22))) {\n                puVar3 = fcn.004010d8(puVar4, in_EAX);\n                for (; in_EAX < puVar3; in_EAX = in_EAX + 1) {\n                    *(iVar1 + iVar5) = *in_EAX;\n                    iVar5 = iVar5 + 1;\n                }\n            }\n            if (*in_EAX != 0) {\n                in_EAX = fcn.004010d8(puVar4, in_EAX);\n            }\n        }\n        else {\n            puVar4 = fcn.004010d8();\n            for (; in_EAX < puVar4; in_EAX = in_EAX + 1) {\n                *(iVar1 + iVar5) = *in_EAX;\n                iVar5 = iVar5 + 1;\n            }\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 614
    },
    "00402754": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402754(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar auStack276 [264];\n    \n    fcn.004034e4();\n    if (in_EAX == 0) {\n        fcn.00401108(0, auStack276, 0x105);\n        fcn.004035d4();\n    }\n    else {\n        fcn.004010f8();\n        while( true ) {\n            fcn.00402668();\n            if ((in_EAX == 0) || (*param_2 == 0)) break;\n            in_EAX = in_EAX + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d80(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x41b01c != '\\0') {\n        auStack12[0] = param_2;\n        (**0x41c010)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00402dbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00402dbc(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x41b01c) {\n        uVar1 = 0;\n        (**0x41c010)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 89
    },
    "00402df0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402df0(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x41b01c) {\n        uStack16 = 0x402e01;\n        uStack8 = param_2;\n        fcn.00402dd0();\n        (**0x41c010)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00402e34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402e34(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = param_2;\n    uStack4 = in_EAX;\n    if (1 < *0x41b01c) {\n        (**0x41c010)(0xeedfae3, 0, 2, &uStack8);\n    }\n    return CONCAT44(uStack8, uStack4);\n}\n",
        "token_count": 114
    },
    "00403368": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00403368(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x41c034 != '\\0') {\n        if ((*0x41c208 == -0x284e) && (*0x41c210 != 0)) {\n            uStack8 = 0x403391;\n            (**0x41c220)();\n        }\n        puStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        uStack16 = 0x1e;\n        uStack20 = 0x41b060;\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x4033a6;\n        uStack28 = fcn.004010b0();\n        fcn.004010d0();\n        uVar1 = fcn.004010b0(0xfffffff5, 0x4033f0, 2, &stack0xffffffe4, 0);\n        fcn.004010d0(uVar1);\n        return;\n    }\n    if (*0x41b024 == '\\0') {\n        uStack8 = 0;\n        puStack12 = 0x41b058;\n        uStack16 = 0x41b060;\n        uStack20 = 0;\n        uStack24 = 0x4033e5;\n        fcn.004010e8();\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "004033f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004033f4(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0x41c650 == 0) && (*0x41c030 != NULL)) {\n        do {\n            pcVar1 = *0x41c030;\n            *0x41c030 = NULL;\n            (*pcVar1)();\n        } while (*0x41c030 != NULL);\n    }\n    if (*0x41b004 != 0) {\n        fcn.004032dc();\n        fcn.00403368();\n        *0x41b004 = 0;\n    }\n    do {\n        if ((*0x41c650 == 2) && (*0x41b000 == 0)) {\n            *0x41c634 = 0;\n        }\n        fcn.004031dc();\n        if (((*0x41c650 < 2) || (*0x41b000 != 0)) && (*0x41c638 != 0)) {\n            fcn.004048ec();\n            iVar2 = *(*0x41c638 + 0x10);\n            if ((iVar2 != *(*0x41c638 + 4)) && (iVar2 != 0)) {\n                fcn.004010f0(iVar2);\n            }\n        }\n        fcn.004031b4();\n        if (*0x41c650 == 1) {\n            (**0x41c64c)();\n        }\n        if (*0x41c650 != 0) {\n            fcn.00403338();\n        }\n        if (*0x41c628 == NULL) {\n            if (*0x41c018 != NULL) {\n                (**0x41c018)();\n            }\n            fcn.004010e0(*0x41b000);\n        }\n        puVar3 = *0x41c628;\n        puVar4 = 0x41c628;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 501
    },
    "00403b1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403b1c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.00402570();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.004035a8();\n        if (*in_EAX != 0) {\n            fcn.00402628();\n        }\n    }\n    fcn.004034e4();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 195
    },
    "00403f44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f44(uint arg_8h)\n\n{\n    fcn.00403da8();\n    fcn.00403cd0();\n    return;\n}\n",
        "token_count": 40
    },
    "00403f90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403f90(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00403da8(param_1);\n    if ((((0 < iVar1) && (0 < param_2)) && (param_2 <= iVar1)) && (0 < param_1)) {\n        param_2 = param_2 + -1;\n        param_1 = (iVar1 - param_2) - param_1;\n        if (param_1 < 0) {\n            param_1 = 0;\n        }\n        if ((param_2 == 0) && (param_1 == 0)) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.00403bb4();\n            if (0 < param_2) {\n                fcn.00402628(uVar2);\n            }\n            if (0 < param_1) {\n                fcn.00402628(uVar2);\n            }\n        }\n        fcn.00403bcc(uVar2);\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00404020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404020(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00403da8();\n    if (0 < iVar1) {\n        iVar1 = fcn.00403da8();\n        if (param_1 < 1) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = param_1 + -1;\n            if (iVar1 < param_1 + -1) {\n                iVar2 = iVar1;\n            }\n        }\n        fcn.00403bb4();\n        if (0 < iVar2) {\n            fcn.00402628();\n        }\n        fcn.00402628();\n        if (iVar2 < iVar1) {\n            fcn.00402628();\n        }\n        fcn.00403bcc();\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00404268": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00404268(void)\n\n{\n    if (*0x41b010 != NULL) {\n        (**0x41b010)();\n        return;\n    }\n    fcn.00402614();\n    return;\n}\n",
        "token_count": 48
    },
    "00404280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004025ec)\n\nvoid __fastcall fcn.00404280(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.004034e4();\n            }\n            else {\n                fcn.00403508();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00403bdc();\n            }\n            else {\n                fcn.00403bf4();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00404268();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00404280();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00404234();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.0040495c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x41c008 != NULL) {\n                    (**0x41c008)();\n                }\n                fcn.004025c0();\n                return;\n            }\n            do {\n                fcn.00404810();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "0040436c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040436c(void)\n\n{\n    if (*0x41b014 != NULL) {\n        (**0x41b014)();\n        return;\n    }\n    fcn.00402614();\n    return;\n}\n",
        "token_count": 49
    },
    "00404678": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404678(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = *in_EAX;\n    iVar5 = *arg_8h;\n    if (iVar5 < 1) {\n        if (iVar5 < 0) {\n            fcn.00402614();\n        }\n        fcn.00404670();\n    }\n    else {\n        var_10h = 0;\n        if (piVar3 != NULL) {\n            var_10h = piVar3[-1];\n            piVar3 = piVar3 + -2;\n        }\n        iVar4 = in_EDX + *(in_EDX + 1);\n        iVar1 = *(iVar4 + 2);\n        piVar2 = *(iVar4 + 6);\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if ((iVar5 * iVar1) / iVar5 != iVar1) {\n            fcn.00402614();\n        }\n        if ((piVar3 == NULL) || (*piVar3 == 1)) {\n            if ((iVar5 < var_10h) && (iVar4 != 0)) {\n                fcn.00404668();\n            }\n            fcn.00402570();\n        }\n        else {\n            *piVar3 = *piVar3 + -1;\n            piVar3 = fcn.00402530();\n            var_14h = var_10h;\n            if (iVar5 < var_10h) {\n                var_14h = iVar5;\n            }\n            if (iVar4 == 0) {\n                fcn.00402628();\n            }\n            else {\n                fcn.004028e0();\n                fcn.00404658(var_14h);\n            }\n        }\n        *piVar3 = 1;\n        piVar3[1] = iVar5;\n        fcn.004028e0();\n        if ((1 < in_ECX) && (-1 < iVar5 + -1)) {\n            do {\n                fcn.00404678(arg_8h + 1);\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *in_EAX = piVar3 + 2;\n    }\n    return;\n}\n",
        "token_count": 628
    },
    "00404880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00404880(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x41b02c;\n    if (*0x41b02c != NULL) {\n        do {\n            uStack32 = 0x4048bb;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "004049d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004049d0(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 654
    },
    "00404ba8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00404ba8(void)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_bh;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x404c0e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = 7;\n    fcn.00401100();\n    fcn.00403748();\n    fcn.00402988();\n    *in_FS_OFFSET = in_EAX;\n    fcn.004034e4(0x404c15, uVar1);\n    return;\n}\n",
        "token_count": 180
    },
    "00405194": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00405194(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4051a6;\n    fcn.00403980();\n    uStack28 = 0x40524f;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar3 = -1;\n    puStack24 = &stack0xfffffffc;\n    iVar1 = fcn.00404648();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00403ad4();\n            if (iVar2 != 0) {\n                iVar3 = 0;\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    if (iVar3 != 0) {\n        iVar1 = fcn.00404648();\n        fcn.00404804(iVar1 + 1);\n        fcn.00404648();\n        fcn.00403538();\n        fcn.00405114();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x405256;\n    uStack28 = 0x40524e;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 329
    },
    "00406004": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406004(uint arg_8h)\n\n{\n    char *pcVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char in_CL;\n    char *in_EDX;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint8_t var_ah;\n    uint var_9h;\n    uint var_4h;\n    \n    iVar2 = fcn.00405f80();\n    if (iVar2 == 0) {\n        pcVar3 = fcn.00405fa8();\n        var_ah = pcVar3;\n    }\n    else {\n        pcVar4 = fcn.00403790();\n        var_ah = 0;\n        iVar5 = iVar2 + -1;\n        pcVar3 = pcVar4;\n        pcVar7 = pcVar4;\n        pcVar1 = in_EDX;\n        var_18h = in_EAX;\n        if (iVar5 <= pcVar4) {\n            for (; 0 < iVar5; iVar5 = iVar5 + -1) {\n                if ((*pcVar1 != in_CL) && (pcVar3 = pcVar7 & 0xffffff00,  *pcVar1 != *var_18h)) goto code_r0x00406138;\n                pcVar7 = pcVar7 & 0xffffff00;\n                pcVar1 = pcVar1 + 1;\n                var_18h = var_18h + 1;\n            }\n            var_10h = pcVar4 - (iVar2 + -1);\ncode_r0x00406091:\n            for (; in_EDX[iVar2 + -1] == arg_8h; iVar2 = iVar2 + 1) {\n            }\n            iVar5 = fcn.00405f80();\n            if (iVar5 == 0) {\n                iVar5 = fcn.00403790();\n                pcVar3 = (iVar5 - iVar2) + 1;\n                if (pcVar3 <= var_10h) {\n                    iVar6 = fcn.00403790();\n                    pcVar3 = iVar6 + -1;\n                    pcVar7 = in_EAX + pcVar3;\n                    goto joined_r0x00406116;\n                }\n            }\n            else {\n                while( true ) {\n                    pcVar7 = in_EDX + iVar2 + -1;\n                    iVar6 = iVar5 - iVar2;\n                    pcVar3 = in_EDX;\n                    pcVar1 = var_18h;\n                    if (var_10h < iVar6) break;\n                    while( true ) {\n                        if (iVar6 < 1) {\n                            var_10h = var_10h - (iVar5 - iVar2);\n                            iVar2 = iVar5;\n                            var_18h = pcVar1;\n                            goto code_r0x00406091;\n                        }\n                        if ((*pcVar7 != in_CL) && (*pcVar7 != *pcVar1)) break;\n                        iVar6 = iVar6 + -1;\n                        pcVar7 = pcVar7 + 1;\n                        pcVar1 = pcVar1 + 1;\n                    }\n                    var_18h = var_18h + 1;\n                    var_10h = var_10h + -1;\n                }\n            }\n        }\n    }\ncode_r0x00406138:\n    return pcVar3 & 0xffffff00 | var_ah;\njoined_r0x00406116:\n    if (iVar5 < iVar2) goto code_r0x00406134;\n    pcVar3 = in_EDX & 0xffffff00;\n    if ((in_EDX[iVar5 + -1] != in_CL) && (in_EDX[iVar5 + -1] != *pcVar7)) goto code_r0x00406138;\n    iVar5 = iVar5 + -1;\n    pcVar7 = pcVar7 + -1;\n    goto joined_r0x00406116;\ncode_r0x00406134:\n    var_ah = 1;\n    goto code_r0x00406138;\n}\n",
        "token_count": 922
    },
    "00406678": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00406678(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0x4066c4;\n    uStack16 = 0x4066d4;\n    iStack20 = 0x406689;\n    iStack20 = fcn.00404e88();\n    pcVar2 = fcn.00404e98();\n    iStack20 = 0;\n    if (pcVar2 != NULL) {\n        uVar3 = fcn.00404e68(&stack0xffffffec);\n        iVar4 = (*pcVar2)(uVar3);\n        if ((iVar4 == 0) || (iStack20 == 0)) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        iStack20 = -uVar1;\n    }\n    return CONCAT44(iStack20, iStack20 != 0);\n}\n",
        "token_count": 242
    },
    "00406724": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406724(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x406737;\n    fcn.00404150();\n    uStack24 = 0x4067ab;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00403bdc();\n    uVar2 = 0x406759;\n    iVar1 = fcn.004040bc();\n    if (iVar1 != 0) {\n        uVar2 = 0x406765;\n        iVar1 = fcn.00403da8();\n        if (-1 < iVar1) {\n            do {\n                if (*(in_EAX + -2 + iVar1 * 2) == 0x2e) {\n                    fcn.00403da8();\n                    fcn.00403f44(param_2);\n                    uVar2 = param_2;\n                    break;\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack24 = 0x4067b2;\n    uStack28 = 0x4067aa;\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 348
    },
    "00406ce8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00406ce8(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY72;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 7;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x406e52;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_20h;\n    if (*0x41b0c0 == 0) {\n        var_14h = unaff_ESI;\n        var_10h = unaff_EBX;\n        fcn.00406f30();\n        fcn.0040377c();\n        fcn.00406bd8();\n        fcn.0040377c();\n        fcn.004065f0();\n        fcn.0040377c();\n        fcn.00406634();\n        fcn.0040377c();\n        fcn.0040627c();\n        fcn.0040627c(var_28h);\n        fcn.0040627c(var_2ch);\n        fcn.0040627c(var_30h);\n        iStackY72 = var_ch;\n        fcn.00403850(var_14h, var_10h, var_ch, var_8h, var_34h);\n        fcn.0040627c();\n        fcn.00403850();\n        iVar1 = fcn.00403790();\n        uVar3 = iVar1 - 1;\n        if (0 < uVar3) {\n            do {\n                uVar2 = uVar3 & 0x80000007;\n                if (uVar2 < 0) {\n                    uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n                }\n                if (uVar2 == 0) {\n                    fcn.00403a78();\n                }\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n        }\n        fcn.00403538();\n    }\n    else {\n        var_18h = &stack0xfffffffc;\n        fcn.00403538();\n    }\n    *in_FS_OFFSET = iStackY72;\n    fcn.00403508(0x406e59);\n    fcn.00403bf4();\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 834
    },
    "00407108": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00407108(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x40711f;\n    fcn.00404150();\n    uStack28 = 0x40716d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.0040377c();\n    fcn.00402988();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x407174;\n    uStack28 = 0x407164;\n    fcn.004034e4();\n    uStack28 = 0x40716c;\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 206
    },
    "004074e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004074e8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY44;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack28 = 0x407504;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.00403980();\n    puStack28 = 0x40750c;\n    fcn.00403980();\n    puStack28 = 0x407514;\n    fcn.00403980();\n    uStack32 = 0x4075ae;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004034e4();\n    if (((var_4h != 0) && (var_8h != 0)) && (in_ECX != 0)) {\n        iVar1 = fcn.00403ad4();\n        if (iVar1 != 0) {\n            fcn.00403790();\n            fcn.00403790(&fcn.004074e8::var_8h);\n            fcn.004039f0();\n            uStackY44 = 0x40757c;\n            iVar1 = fcn.00403ad4();\n            if (0 < iVar1) {\n                uStackY44 = arg_8h;\n                fcn.004039f0();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY44;\n    uStack36 = 0x4075b5;\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 424
    },
    "004075c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004075c0(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack552;\n    uint uStack548;\n    uchar *puStack544;\n    uint var_214h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack544 = 0x4075da;\n    fcn.00404150();\n    puStack544 = 0x4075e2;\n    fcn.00404150();\n    uStack548 = 0x4076a3;\n    uStack552 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd8;\n    var_10h = 0xfe;\n    var_214h._0_2_ = 0;\n    if (arg_ch == '\\x01') {\n        puStack544 = &stack0xfffffffc;\n        fcn.00403d98(0, 0x20119, &fcn.004075c0::var_14h);\n        (***0x41b1a4)();\n    }\n    else {\n        puStack544 = &stack0xfffffffc;\n        fcn.00403d98(0, 0x20019, &fcn.004075c0::var_14h);\n        (***0x41b1a4)();\n    }\n    uVar1 = fcn.00403d98(0, &fcn.004075c0::var_ch, &fcn.004075c0::var_214h, &fcn.004075c0::var_10h);\n    (***0x41b398)(var_14h, uVar1);\n    fcn.00403d6c();\n    (***0x41b1fc)();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00403bf4(0x4076aa);\n    return;\n}\n",
        "token_count": 454
    },
    "004077c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004077c8(uint param_1, uint param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4077db;\n    fcn.00404150();\n    uStack24 = 0x407846;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00403bdc();\n    uVar3 = 0x4077f8;\n    iVar2 = fcn.00403da8();\n    if (0 < iVar2) {\n        do {\n            iVar1 = *(in_EAX + -2 + iVar2 * 2);\n            if ((iVar1 == 0x2f) || (iVar1 == 0x5c)) {\n                fcn.00403da8();\n                fcn.00403f44(param_2);\n                uVar3 = param_2;\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack24 = 0x40784d;\n    uStack28 = 0x407845;\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 340
    },
    "00407854": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407854(uint param_1, uint param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x407867;\n    fcn.00404150();\n    uStack24 = 0x4078cc;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00403bdc();\n    uVar3 = 0x407884;\n    iVar2 = fcn.00403da8();\n    if (0 < iVar2) {\n        do {\n            iVar1 = *(in_EAX + -2 + iVar2 * 2);\n            if ((iVar1 == 0x2f) || (iVar1 == 0x5c)) {\n                fcn.00403f44(param_2);\n                uVar3 = param_2;\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack24 = 0x4078d3;\n    uStack28 = 0x4078cb;\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 330
    },
    "004079ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004079ac(int32_t param_1, int32_t param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack20;\n    \n    if (param_1 == 1) {\n        iVar1 = fcn.00403ad4();\n        iStack20 = param_1;\n    }\n    else {\n        iVar2 = fcn.00403790();\n        iVar1 = fcn.00403790();\n        iStack20 = (iVar1 - iVar2) + 1;\n        iVar1 = param_1;\n        if (param_1 <= iStack20) {\n            do {\n                if (*(param_2 + -1 + iVar1) == *in_EAX) {\n                    for (iVar3 = 1; (iVar3 < iVar2 && (*(param_2 + -1 + iVar3 + iVar1) == in_EAX[iVar3]));\n                        iVar3 = iVar3 + 1) {\n                    }\n                    if (iVar2 == iVar3) goto code_r0x00407a12;\n                }\n                iVar1 = iVar1 + 1;\n            } while (iVar1 <= iStack20);\n        }\n        iVar1 = 0;\n    }\ncode_r0x00407a12:\n    return CONCAT44(iStack20, iVar1);\n}\n",
        "token_count": 304
    },
    "00407b08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00407b08(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x407bea;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.00403538();\n    iVar1 = fcn.00407b00();\n    if (*(iVar1 + 0xc0) == 0) {\n        fcn.0040357c();\n    }\n    else {\n        fcn.0040357c();\n    }\n    fcn.00407af0();\n    iVar1 = fcn.00407af8();\n    iVar1 = *(iVar1 + 0x264);\n    fcn.0040709c();\n    fcn.0040709c(0x407c24, 0);\n    fcn.00403e78();\n    fcn.0040377c();\n    if (iVar1 != 1) {\n        fcn.00403798();\n    }\n    *in_FS_OFFSET = 0;\n    fcn.00403bf4(0x407bf1);\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 320
    },
    "00407c34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407c34(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint *puStack28;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_7h;\n    uint var_3h;\n    \n    var_7h = *0x41b0c4;\n    var_3h._0_2_ = *0x41b0c8;\n    puStack28 = &fcn.00407c34::var_ch;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0;\n    uStack52 = 0;\n    uStack60 = 0x20;\n    uStack64 = 2;\n    puStack68 = &fcn.00407c34::var_7h;\n    puStack72 = 0x407c73;\n    iVar1 = (***0x41b274)();\n    var_3h._2_1_ = '\\x01' - (iVar1 == 0);\n    if (in_EAX == 0x4eb1c2) {\n        puStack72 = &fcn.00407c34::var_ch;\n        uStack76 = 0;\n        uStack80 = 0;\n        iVar1 = (***0x41b274)(&fcn.00407c34::var_7h, 2, 0x12, 0, 0, 0, 0, 0);\n        var_3h._2_1_ = '\\x01' - (iVar1 == 0);\n    }\n    uStack76 = 0x407d02;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (var_3h._2_1_ != '\\0') {\n        puStack72 = &fcn.00407c34::var_3h + 3;\n        iVar1 = (***0x41b160)(0, var_ch, &fcn.00407c34::var_10h);\n        if (iVar1 == 0) {\n            var_3h._2_1_ = '\\0';\n        }\n        else {\n            var_3h._2_1_ = '\\x01' - (var_10h == 0);\n        }\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x407d09;\n    uStack76 = var_ch;\n    uStack80 = 0x407d01;\n    fcn.00404e10();\n    return;\n}\n",
        "token_count": 690
    },
    "00407d14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00407d14(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint *puStack40;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ah;\n    ushort var_6h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_ah = *0x41b0d0;\n    var_6h = *0x41b0d4;\n    puStack40 = &fcn.00407d14::var_18h;\n    uStack44 = 0;\n    uStack48 = 0;\n    uStack52 = 0;\n    uStack56 = 0;\n    uStack60 = 0;\n    uStack64 = 0;\n    uStack68 = 0;\n    uStack72 = *0x41b0cc;\n    uStack76 = 1;\n    puStack80 = &fcn.00407d14::var_ah;\n    puStack84 = 0x407d5a;\n    (***0x41b274)();\n    if (var_18h != 0) {\n        uStack88 = 0x407dd2;\n        uStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_10h = 0;\n        var_14h = 0;\n        puStack84 = &stack0xfffffffc;\n        (***0x41b108)(0, var_18h, 0, &fcn.00407d14::var_10h, 0, &fcn.00407d14::var_14h, &fcn.00407d14::var_1ch);\n        uVar2 = 0;\n        iVar1 = (***0x41b160)(0, var_18h, &fcn.00407d14::var_20h);\n        if (iVar1 == 0) {\n            var_4h = 0;\n        }\n        else {\n            var_4h = var_20h;\n        }\n        *in_FS_OFFSET = uVar2;\n        uVar2 = fcn.00404e10(var_18h, 0x407dd9);\n        return uVar2;\n    }\n    return var_4h;\n}\n",
        "token_count": 613
    },
    "00407e90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00407e90(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack124 = &stack0xfffffffc;\n    var_4h = 0;\n    var_ch = 0;\n    uStack128 = 0x407fa6;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack132;\n    uVar1 = fcn.00404ec0(0x407fd4, 0x407fb4);\n    pcVar2 = fcn.00404e98(uVar1);\n    uVar1 = fcn.00404ec0(0x407ff8, 0x407fe4);\n    pcVar3 = fcn.00404e98(uVar1);\n    uVar1 = fcn.00404ec0(0x408020, 0x408008);\n    pcVar4 = fcn.00404e98(uVar1);\n    fcn.00402754();\n    fcn.00403d88();\n    fcn.00404f5c();\n    var_64h = 0x44;\n    var_5ch = 0;\n    uVar1 = (*pcVar2)();\n    iVar5 = (*pcVar3)(uVar1, &var_8h);\n    if (iVar5 != 0) {\n        (*pcVar4)(&var_10h, var_8h, 0xffffffff);\n        uVar6 = fcn.00403d98(0, 0, 0, 0x400, var_10h, 0, &var_64h, &var_20h);\n        uVar6 = fcn.00403d98(uVar6);\n        (***0x41b32c)(var_8h, uVar6);\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.004034e4(0x407fad);\n    fcn.00403bdc();\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 553
    },
    "0040802c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040802c(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    for (iVar5 = in_ECX * 2 + 1; -1 < iVar5; iVar5 = iVar5 + -1) {\n    }\n    puVar1 = &stack0xffffffe4;\n    puStack32 = 0x408056;\n    fcn.00403980();\n    uStack36 = 0x408126;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_8h = NULL;\n    puStack32 = &stack0xfffffffc;\n    if (in_ECX != -1 && -1 < in_ECX + 1) {\n        puStack44 = 0x408078;\n        puStack32 = &stack0xfffffffc;\n        var_8h = fcn.00402530();\n    }\n    if (-1 < in_ECX) {\n        iVar5 = in_ECX + 1;\n        puVar4 = var_8h;\n        do {\n            *puVar4 = *puVar1;\n            puVar4 = puVar4 + 1;\n            puVar1 = puVar1 + 2;\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    puStack44 = 0x4080a0;\n    iVar2 = fcn.00402530();\n    uStack48 = 0x4080e2;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    uVar3 = fcn.00403990(var_8h);\n    iVar5 = iVar2;\n    (***0x41b23c)(iVar2, uVar3);\n    fcn.004035d4();\n    *in_FS_OFFSET = iVar5;\n    if (var_8h != NULL) {\n        fcn.00402550();\n    }\n    if (iVar2 != 0) {\n        fcn.00402550();\n    }\n    *in_FS_OFFSET = iStack52;\n    puStack44 = 0x40812d;\n    uStack48 = 0x408125;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 614
    },
    "00409668": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00409668(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x40967f;\n    fcn.00403980();\n    uStack40 = 0x409963;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    *0x41b0d8 = 0;\n    puStack36 = &stack0xfffffffc;\n    fcn.004062fc();\n    fcn.00403c18();\n    uVar2 = fcn.00403d98(0);\n    fcn.00404e30(uVar2);\n    fcn.004094e0();\n    fcn.00403e14();\n    cVar1 = fcn.0040776c();\n    if (cVar1 == '\\0') {\n        fcn.004062fc();\n        fcn.00403c18();\n        uVar2 = fcn.00403d98(0);\n        fcn.00404e30(uVar2);\n        fcn.004094e0();\n    }\n    uVar2 = fcn.00403d98();\n    (***0x41b3ac)(0x4099b4, uVar2);\n    uVar2 = fcn.00403d98();\n    (***0x41b320)(uVar2);\n    fcn.00403e14(0, 8);\n    uVar2 = fcn.00403d98();\n    *0x41ca58 = fcn.00404ed0(uVar2);\n    if (*0x41ca58 != 0) {\n        uVar2 = fcn.00403990();\n        *0x41ca20 = fcn.00404e98(*0x41ca58, uVar2);\n        uVar2 = fcn.00403990();\n        *0x41ca24 = fcn.00404e98(*0x41ca58, uVar2);\n        uVar2 = fcn.00403990();\n        *0x41ca28 = fcn.00404e98(*0x41ca58, uVar2);\n        uVar2 = fcn.00403990();\n        *0x41ca2c = fcn.00404e98(*0x41ca58, uVar2);\n        uVar2 = fcn.00403990();\n        *0x41ca30 = fcn.00404e98(*0x41ca58, uVar2);\n        uVar2 = fcn.00403990();\n        *0x41ca34 = fcn.00404e98(*0x41ca58, uVar2);\n        uVar2 = fcn.00403990();\n        *0x41ca38 = fcn.00404e98(*0x41ca58, uVar2);\n        uVar2 = fcn.00403990();\n        *0x41ca3c = fcn.00404e98(*0x41ca58, uVar2);\n        uVar2 = fcn.00403990();\n        *0x41ca40 = fcn.00404e98(*0x41ca58, uVar2);\n        uVar2 = fcn.00403990();\n        *0x41ca44 = fcn.00404e98(*0x41ca58, uVar2);\n        uVar2 = fcn.00403990();\n        *0x41ca48 = fcn.00404e98(*0x41ca58, uVar2);\n        uVar2 = fcn.00403990();\n        *0x41ca4c = fcn.00404e98(*0x41ca58, uVar2);\n        uVar2 = fcn.00403990();\n        in_stack_ffffff44 = *0x41ca58;\n        *0x41ca50 = fcn.00404e98(*0x41ca58, uVar2);\n        if (((((*0x41ca20 != 0) && (*0x41ca24 != 0)) && (*0x41ca28 != 0)) &&\n            (((*0x41ca2c != 0 && (*0x41ca30 != 0)) && ((*0x41ca34 != 0 && ((*0x41ca38 != 0 && (*0x41ca3c != 0)))))))) &&\n           ((*0x41ca40 != 0 && ((((*0x41ca44 != 0 && (*0x41ca48 != 0)) && (*0x41ca4c != 0)) && (*0x41ca50 != 0)))))) {\n            *0x41b0d8 = 1;\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff44;\n    fcn.00403bf4(0x40996a);\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 1153
    },
    "00409ef0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409ef0(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    int32_t var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_264h;\n    uint uStackY76;\n    uint uStackY72;\n    int32_t var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uchar *var_20h;\n    uchar auStack32 [3];\n    uint var_19h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0x56;\n    do {\n        var_10h = var_10h + -1;\n    } while (var_10h != 0);\n    var_8h = 0;\n    var_20h = 0x409f15;\n    _auStack32 = unaff_EDI;\n    var_14h = unaff_EBX;\n    var_4h = in_EDX;\n    fcn.00404150();\n    var_20h = 0x409f1d;\n    fcn.00403980();\n    var_20h = 0x409f25;\n    fcn.00403980();\n    var_24h = 0x40a36b;\n    var_28h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00409ef0::var_28h;\n    var_2ch = NULL;\n    var_30h = 0x409f48;\n    var_20h = &stack0xfffffffc;\n    fcn.00404804();\n    _auStack32 = CONCAT13(1, auStack32);\n    var_2ch = &fcn.00409ef0::var_290h;\n    var_30h = 0x409f69;\n    fcn.00403e14();\n    var_30h = 0x409f74;\n    var_30h = fcn.00403d98();\n    var_34h = 0x409f7e;\n    *NULL = (***0x41b2d8)();\n    do {\n        var_34h = var_4h;\n        var_38h = 0x409f9a;\n        fcn.00403d6c();\n        var_38h = var_29ch;\n        var_3ch = 0x40a390;\n        var_40h = **0x41b438;\n        uStackY72 = 0x409fbc;\n        fcn.00403e78();\n        uStackY72 = 0x409fc7;\n        uStackY72 = fcn.00403d98();\n        uStackY76 = 0x409fd1;\n        iVar1 = (***0x41b358)();\n        if (iVar1 != -1) {\n            var_24h = var_4h;\n            var_28h = 0x409ff3;\n            fcn.00403d6c();\n            var_28h = var_2a4h;\n            var_2ch = 0x40a390;\n            var_30h = **0x41b438;\n            var_34h = 0x40a015;\n            fcn.00403e78();\n            var_34h = 0x40a023;\n            fcn.00409c28();\n            if (var_19h == '\\0') break;\n            var_34h = 0x40a035;\n            iVar1 = fcn.00404648();\n            if (-1 < iVar1 + -1) {\n                do {\n                    var_34h = 0x40a051;\n                    fcn.0040377c();\n                    var_34h = &fcn.00409ef0::var_2a8h;\n                    var_38h = 0x40a06e;\n                    fcn.00403760();\n                    var_34h = 0x40a07a;\n                    fcn.00403798();\n                    var_34h = 0x40a085;\n                    var_34h = fcn.00403990();\n                    var_38h = 0x40a08f;\n                    iVar2 = (***0x41b314)();\n                    if (iVar2 != 0) goto code_r0x0040a290;\n                    var_34h = 0x40a0a1;\n                    var_ch = (***0x41b2b8)();\n                    if (var_ch == 0) goto code_r0x0040a290;\n                    var_34h = NULL;\n                    var_38h = 0x1;\n                    var_40h = 0x40a0bf;\n                    var_3ch = var_ch;\n                    iVar2 = (***0x41b404)();\n                    if (iVar2 != 0) goto code_r0x0040a290;\n                    var_34h = 0x40a0d7;\n                    fcn.00404f5c();\n                    var_34h = 0x40a0e4;\n                    fcn.00404f5c();\n                    var_34h = 0x40a0f6;\n                    fcn.004069a8();\n                    var_34h = 0x40a103;\n                    var_30h = fcn.004039e8();\n                    var_34h = 0x40a10e;\n                    var_2ch = fcn.00403790();\n                    var_34h = 0x40a119;\n                    fcn.004034e4();\n                    var_34h = NULL;\n                    var_38h = &fcn.00409ef0::var_40h;\n                    var_3ch = &fcn.00409ef0::var_34h;\n                    var_40h = 0x40a12c;\n                    iVar2 = (***0x41b3b4)();\n                    if ((iVar2 == 0) && (-1 < var_38h + -1)) {\n                        var_24h = 0;\n                        puVar3 = var_38h;\n                        do {\n                            var_34h = 0x40a157;\n                            fcn.004036cc();\n                            var_34h = 0x40a165;\n                            fcn.00403798();\n                            var_24h = var_24h + 1;\n                            puVar3 = puVar3 + -1;\n                        } while (puVar3 != NULL);\n                    }\n                    var_34h = 0x40a173;\n                    fcn.004034e4();\n                    var_34h = 0x40a180;\n                    fcn.00404f5c();\n                    var_34h = 0x40a18d;\n                    fcn.00404f5c();\n                    var_34h = 0x40a19f;\n                    fcn.004069a8();\n                    var_34h = 0x40a1ac;\n                    var_30h = fcn.004039e8();\n                    var_34h = 0x40a1b7;\n                    var_2ch = fcn.00403790();\n                    var_34h = 0x40a1c2;\n                    fcn.004034e4();\n                    var_34h = NULL;\n                    var_38h = &fcn.00409ef0::var_40h;\n                    var_3ch = &fcn.00409ef0::var_34h;\n                    var_40h = 0x40a1d5;\n                    iVar2 = (***0x41b3b4)();\n                    if ((iVar2 == 0) && (-1 < var_38h + -1)) {\n                        var_24h = 0;\n                        puVar3 = var_38h;\n                        do {\n                            var_34h = 0x40a200;\n                            fcn.004036cc();\n                            var_34h = 0x40a20e;\n                            fcn.00403798();\n                            var_24h = var_24h + 1;\n                            puVar3 = puVar3 + -1;\n                        } while (puVar3 != NULL);\n                    }\n                    var_34h = 0x40a21c;\n                    fcn.004034e4();\n                    var_34h = var_10h;\n                    var_38h = var_14h;\n                    var_3ch = 0x40a23a;\n                    fcn.00403760();\n                    var_3ch = var_2b8h;\n                    var_40h = 0x40a255;\n                    fcn.0040525c(var_2b8h, var_38h, var_34h);\n                    var_40h = var_ch;\n                    uStackY72 = 0x40a262;\n                    (***0x41b488)();\n                    var_40h = 0x40a26c;\n                    (***0x41b2ec)();\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n        }\n        var_34h = &fcn.00409ef0::var_290h;\n        var_38h = stack0xffffffe4;\n        var_3ch = 0x40a288;\n        iVar1 = (***0x41b198)();\n    } while (iVar1 != 0);\ncode_r0x0040a290:\n    if ((*0x10 != 0x10) && (var_ch != 0)) {\n        var_38h = 0x40a2c3;\n        var_3ch = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00409ef0::var_3ch;\n        var_40h = var_ch;\n        uStackY72 = 0x40a2b8;\n        var_34h = &stack0xfffffffc;\n        (***0x41b488)();\n        *in_FS_OFFSET = var_3ch;\n    }\n    if (**0x41b2ec != NULL) {\n        var_38h = 0x40a2f8;\n        var_3ch = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00409ef0::var_3ch;\n        var_40h = 0x40a2ee;\n        var_34h = &stack0xfffffffc;\n        (***0x41b2ec)();\n        *in_FS_OFFSET = var_3ch;\n    }\n    *in_FS_OFFSET = var_30h;\n    var_28h = 0x40a372;\n    var_2ch = 0x40a31f;\n    fcn.00403508();\n    var_2ch = 0x40a32f;\n    fcn.00403bf4();\n    var_2ch = 0x40a337;\n    fcn.004034e4();\n    var_2ch = 0x40a345;\n    fcn.00404810();\n    var_2ch = 0x40a352;\n    fcn.00403508();\n    var_2ch = 0x40a35a;\n    fcn.004034e4();\n    var_2ch = 0x40a362;\n    fcn.00403bdc();\n    var_2ch = 0x40a36a;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 2785
    },
    "0040a394": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid fcn.0040a394(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_48h;\n    uint *var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    int32_t var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = &stack0xfffffffc;\n    iVar2 = 9;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_10h = 0x40a5aa;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040a394::var_14h;\n    puVar1 = &stack0xfffffffc;\n    if (**0x41b33c != '\\0') {\n        var_18h = 0x40a5c0;\n        var_1ch = &fcn.0040a394::var_4h;\n        var_20h = 0x40a3d7;\n        fcn.004062fc();\n        var_20h = var_8h;\n        var_24h = 0x40a3eb;\n        fcn.0040377c();\n        var_20h = 0x40a3f9;\n        fcn.00409ef0(var_1ch, var_18h);\n        var_20h = 0x40a5d4;\n        var_24h = &fcn.0040a394::var_10h;\n        var_28h = 0x40a411;\n        fcn.004062fc();\n        var_28h = var_14h;\n        var_2ch = 0x40a425;\n        fcn.0040377c();\n        var_28h = 0x40a433;\n        fcn.00409ef0(var_24h, var_20h);\n        var_28h = 0x40a5c0;\n        var_2ch = &fcn.0040a394::var_1ch;\n        var_30h = 0x40a44b;\n        fcn.004062fc();\n        var_30h = var_20h;\n        var_34h = 0x40a45f;\n        fcn.0040377c();\n        var_30h = 0x40a46d;\n        fcn.00409ef0(var_2ch, var_28h);\n        var_30h = 0x40a5c0;\n        var_34h = &fcn.0040a394::var_28h;\n        var_38h = 0x40a485;\n        fcn.004062fc();\n        var_38h = var_2ch;\n        var_3ch = 0x40a499;\n        fcn.0040377c();\n        var_38h = 0x40a4a7;\n        fcn.00409ef0(var_34h, var_30h);\n        var_38h = 0x40a5c0;\n        var_3ch = &fcn.0040a394::var_34h;\n        var_40h = 0x40a4bf;\n        fcn.004062fc();\n        var_40h = var_38h;\n        fcn.0040377c();\n        var_40h = 0x40a4e1;\n        fcn.00409ef0(var_3ch, var_38h);\n        var_40h = 0x40a5c0;\n        var_44h = &fcn.0040a394::var_40h;\n        fcn.004062fc();\n        fcn.0040377c(var_44h);\n        fcn.00409ef0(var_44h, var_40h);\n        puVar1 = var_ch;\n    }\n    var_ch = puVar1;\n    *in_FS_OFFSET = var_44h;\n    var_3ch = 0x40a5b4;\n    var_40h = 0x40a530;\n    fcn.004034e4();\n    var_40h = 0x40a538;\n    fcn.00403bdc();\n    var_40h = 0x40a545;\n    fcn.00403508();\n    var_40h = 0x40a54d;\n    fcn.00403bdc();\n    var_40h = 0x40a55a;\n    fcn.00403508();\n    var_40h = 0x40a562;\n    fcn.00403bdc();\n    var_40h = 0x40a56f;\n    fcn.00403508();\n    var_40h = 0x40a577;\n    fcn.00403bdc();\n    var_40h = 0x40a584;\n    fcn.00403508();\n    var_40h = 0x40a58c;\n    fcn.00403bdc();\n    var_40h = 0x40a599;\n    fcn.00403508();\n    var_40h = 0x40a5a1;\n    fcn.00403bdc();\n    var_40h = 0x40a5a9;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 1503
    },
    "0040ac08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040ac08(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = &stack0xfffffffc;\n    iVar1 = 0x20;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_10h = 0x40b121;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040ac08::var_14h;\n    if (**0x41b33c != '\\0') {\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n        fcn.004062fc();\n        fcn.0040a9e4();\n    }\n    *in_FS_OFFSET = var_14h;\n    var_ch = 0x40b128;\n    var_10h = 0x40b120;\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 1234
    },
    "0040b66c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b66c(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = 0x40b68b;\n    fcn.00403980();\n    puStack60 = 0x40b693;\n    fcn.00403980();\n    uStack64 = 0x40b7c3;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack60 = &stack0xfffffffc;\n    fcn.004034e4();\n    fcn.00404f54();\n    fcn.00404f54();\n    fcn.00404f54();\n    if (-1 < var_14h + -1) {\n        do {\n            fcn.00404f54();\n            fcn.00404f54();\n            fcn.00402530();\n            cVar1 = fcn.0040b634();\n            if (cVar1 == '\\x01') {\n                fcn.0040370c(in_ECX, arg_ch, *arg_8h);\n                uStack68 = in_ECX;\n                fcn.00403850();\n            }\n            else {\n                fcn.0040370c(*arg_8h);\n                uStack68 = 0x40b7dc;\n                fcn.00403850();\n            }\n            var_14h = var_14h + -1;\n        } while (var_14h != 0);\n    }\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x40b7ca;\n    uStack64 = 0x40b7b2;\n    fcn.00403508();\n    uStack64 = 0x40b7ba;\n    fcn.004034e4();\n    uStack64 = 0x40b7c2;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 527
    },
    "0040bb90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040bb90(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x40bba2;\n    fcn.00403980();\n    uStack20 = 0x40bbe0;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.004034e4();\n    cVar1 = fcn.0040baf0();\n    if (cVar1 == '\\x01') {\n        fcn.0040ba38();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40bbe7;\n    uStack20 = 0x40bbdf;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 212
    },
    "0040ce7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ce7c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    uint *puStack52;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack40 = 0x40cfa5;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.0040cd68();\n    iVar1 = fcn.00403790();\n    if (iVar1 < 5) {\n        fcn.004034e4();\n    }\n    else {\n        iVar1 = fcn.00403790();\n        if (0 < iVar1) {\n            iVar3 = 1;\n            do {\n                iVar2 = fcn.004039e8();\n                *(iVar2 + -1 + iVar3) = *(*arg_8h + -1 + iVar3) ^ 0x5c;\n                iVar3 = iVar3 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00403a30();\n        fcn.00403a30();\n        puStack52 = 0x40cf2b;\n        fcn.004039f0(arg_8h);\n        if (*arg_8h != 0) {\n            iVar1 = fcn.00403790();\n            iVar3 = fcn.00403790();\n            uVar4 = iVar1 + iVar3 == 0;\n            puStack52 = &fcn.0040ce7c::var_ch;\n            fcn.004039f0();\n            fcn.004037dc(var_ch);\n            fcn.004038dc();\n            if (uVar4) {\n                fcn.00403a30();\n            }\n            else {\n                fcn.004034e4();\n            }\n        }\n    }\n    *in_FS_OFFSET = puStack52;\n    iStack44 = 0x40cfac;\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 523
    },
    "0040cfb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0040cfb8(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint var_858h;\n    uint var_854h;\n    uint var_850h;\n    uint var_84ch;\n    uint var_848h;\n    uint var_844h;\n    uint var_840h;\n    uint var_83ch;\n    uint var_838h;\n    uint var_834h;\n    uint var_830h;\n    uint var_82ch;\n    uint var_828h;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint uStackY100;\n    uint arg_ch;\n    uint arg_10h;\n    uint *puVar2;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar1 = 0x10b;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    uStack28 = 0x40d289;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_ch = unaff_EBX;\n    fcn.00403c3c();\n    fcn.00403d98();\n    iVar1 = (***0x41b474)();\n    if (iVar1 == 0) {\n        while (iVar1 = (***0x41b248)(),  iVar1 == 0) {\n            uVar3 = 0;\n            puVar2 = &fcn.0040cfb8::var_ch;\n            fcn.00403d6c();\n            fcn.00403e14();\n            fcn.004075c0(puVar2, uVar3);\n            iVar1 = fcn.00403da8();\n            if (1 < iVar1) {\n                fcn.00403d6c();\n                fcn.00403e14();\n                fcn.004076b4();\n                uVar3 = 0;\n                puVar2 = &fcn.0040cfb8::var_10h;\n                fcn.00403d6c();\n                fcn.00403e14();\n                fcn.004075c0(puVar2, uVar3);\n                uVar3 = 0;\n                puVar2 = &fcn.0040cfb8::var_14h;\n                fcn.00403d6c();\n                fcn.00403e14();\n                fcn.004075c0(puVar2, uVar3);\n                puVar2 = &fcn.0040cfb8::var_838h;\n                fcn.0040377c();\n                fcn.0040377c();\n                fcn.0040377c();\n                fcn.0040ce7c(puVar2);\n                fcn.00403d88();\n                fcn.0040377c();\n                fcn.0040377c();\n                arg_ch = 0x40d35c;\n                arg_10h = var_ch;\n                fcn.0040709c();\n                uStackY100 = 0x40d1e1;\n                uVar3 = var_858h;\n                fcn.00403e78();\n                uStackY100 = 0x40d1f2;\n                fcn.0040377c();\n                uStackY100 = 0x40d207;\n                fcn.0040525c(uVar3, arg_ch, arg_10h);\n            }\n        }\n    }\n    (***0x41b1fc)();\n    *in_FS_OFFSET = var_8h;\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.00403bf4();\n    fcn.00403bf4();\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 950
    },
    "0040f7a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0040f7a8(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_238h;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint *puStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0x54;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puStack36 = 0x40f7d0;\n    fcn.00404150();\n    puStack36 = 0x40f7d8;\n    fcn.00404150();\n    puStack36 = 0x40f7e0;\n    fcn.00404150();\n    uStack40 = 0x40fae2;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.0040f7a8::var_264h;\n    uStack52 = 0x40f808;\n    puStack36 = &stack0xfffffffc;\n    fcn.00403e14();\n    uStack52 = 0x40f813;\n    uStack52 = fcn.00403d98();\n    uStack56 = 0x40f81d;\n    uStack56 = (***0x41b2d8)();\n    do {\n        uStack60 = 0x40fb0c;\n        uStack64 = 0x40f83e;\n        fcn.00403d6c();\n        uStack68 = 0x40fb14;\n        puStack72 = 0x40f859;\n        fcn.00403e78();\n        puStack72 = 0x40f864;\n        cVar1 = fcn.0040776c();\n        if (cVar1 != '\\0') {\n            uStack76 = 0x40fa18;\n            uStack80 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffb0;\n            puStack72 = &stack0xfffffffc;\n            if (arg_8h == 0) {\n                uStack88 = 0x40fb0c;\n                uStack92 = 0x40f8a2;\n                puStack72 = &stack0xfffffffc;\n                fcn.00403d6c();\n                uStack96 = 0x40fb14;\n                uStack100 = 0x40f8bd;\n                fcn.00403e78();\n                uStack100 = 0x40f8ce;\n                fcn.0040eda8();\n                uStack100 = 0x40f8df;\n                fcn.0040377c();\n                uStack104 = 0;\n                uStack108 = 0x40fb0c;\n                uStack116 = 0x40fb2c;\n                uStack120 = 0x40f90c;\n                puStack112 = in_EDX;\n                fcn.00403d6c();\n                uStack120 = var_28ch;\n                uStack124 = 0x40fb34;\n                uStack128 = 0x40f927;\n                fcn.00403e78();\n                uStack128 = 0x40f938;\n                fcn.0040377c();\n                uStack124 = 0x40f944;\n                fcn.0040e6d4();\n            }\n            if (arg_8h == 1) {\n                uStack128 = 0x40fb0c;\n                uStack132 = 0x40f96c;\n                uStack124 = in_EAX;\n                fcn.00403d6c();\n                uStack136 = 0x40fb14;\n                uStack140 = 0x40f987;\n                fcn.00403e78();\n                uStack140 = 0x40f998;\n                fcn.0040f300();\n                uStack140 = 0x40f9a9;\n                fcn.0040377c();\n                uStack144 = 0;\n                uStack148 = 0x40fb0c;\n                uStack156 = 0x40fb2c;\n                uStack160 = 0x40f9d6;\n                fcn.00403d6c();\n                uStack164 = 0x40fb34;\n                uStack168 = 0x40f9f1;\n                fcn.00403e78();\n                uStack168 = 0x40fa02;\n                fcn.0040377c();\n                uStack164 = 0x40fa0e;\n                fcn.0040e6d4();\n            }\n            *in_FS_OFFSET = uStack120;\n        }\n        puStack112 = &fcn.0040f7a8::var_264h;\n        uStack120 = 0x40fa36;\n        uStack116 = uStack56;\n        iVar2 = (***0x41b198)();\n    } while (iVar2 != 0);\n    uStack60 = 0x40fa4b;\n    (***0x41b3ec)();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x40faec;\n    uStack52 = 0x40fa68;\n    fcn.00403bf4();\n    uStack52 = 0x40fa73;\n    fcn.004034e4();\n    uStack52 = 0x40fa83;\n    fcn.00403bf4();\n    uStack52 = 0x40fa8e;\n    fcn.004034e4();\n    uStack52 = 0x40fa9e;\n    fcn.00403bf4();\n    uStack52 = 0x40faa9;\n    fcn.004034e4();\n    uStack52 = 0x40fab9;\n    fcn.00403bf4();\n    uStack52 = 0x40fac4;\n    fcn.004034e4();\n    uStack52 = 0x40fad4;\n    fcn.00403bf4();\n    uStack52 = 0x40fae1;\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 1731
    },
    "0040fb40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fb40(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack764;\n    uint uStack720;\n    uint uStack716;\n    uchar *puStack712;\n    uint uStack708;\n    uint uStack704;\n    uint uStack700;\n    uint uStack696;\n    uint uStack692;\n    uint uStack688;\n    uint *puStack684;\n    uint uStack680;\n    uint uStack676;\n    uchar *puStack672;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_238h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack672 = 0x40fb9b;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.00404150();\n    puStack672 = 0x40fba3;\n    fcn.00404150();\n    puStack672 = 0x40fbab;\n    fcn.00404150();\n    uStack676 = 0x40fdbb;\n    uStack680 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd58;\n    puStack684 = &fcn.0040fb40::var_264h;\n    uStack688 = 0x40fbd3;\n    puStack672 = &stack0xfffffffc;\n    fcn.00403e14();\n    uStack688 = 0x40fbde;\n    uStack688 = fcn.00403d98();\n    uStack692 = 0x40fbe8;\n    var_14h = (***0x41b2d8)();\n    do {\n        uStack692 = var_4h;\n        uStack696 = 0x40fde4;\n        uStack700 = 0x40fc09;\n        fcn.00403d6c();\n        uStack700 = 0;\n        uStack704 = 0x40fde4;\n        uStack708 = **0x41b204;\n        puStack712 = 0x40fc2b;\n        fcn.00403e78();\n        puStack712 = 0x40fc36;\n        cVar1 = fcn.0040776c();\n        if (cVar1 != '\\0') {\n            uStack716 = 0x40fd27;\n            uStack720 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd30;\n            puStack712 = &stack0xfffffffc;\n            if (arg_8h == 0) {\n                puStack712 = &stack0xfffffffc;\n                fcn.00403d6c(0x40fde4, var_4h);\n                fcn.00403e78(**0x41b204, 0x40fde4, 0);\n                fcn.0040e954();\n                fcn.0040377c();\n                fcn.00403d6c(0x40fdec, var_8h, 0x40fde4, var_ch, 0);\n                uStack764 = 0;\n                fcn.00403e78(0x40fdf4);\n                fcn.0040377c();\n                fcn.0040e6d4();\n            }\n            *in_FS_OFFSET = uStack764;\n        }\n        uStack764 = 0x40fd45;\n        iVar2 = (***0x41b198)(var_14h, &fcn.0040fb40::var_264h);\n    } while (iVar2 != 0);\n    uStack692 = var_14h;\n    uStack696 = 0x40fd5a;\n    (***0x41b3ec)();\n    *in_FS_OFFSET = uStack692;\n    puStack684 = 0x40fdc2;\n    uStack688 = 0x40fd77;\n    fcn.00403bf4();\n    uStack688 = 0x40fd82;\n    fcn.004034e4();\n    uStack688 = 0x40fd92;\n    fcn.00403bf4();\n    uStack688 = 0x40fd9d;\n    fcn.004034e4();\n    uStack688 = 0x40fdad;\n    fcn.00403bf4();\n    uStack688 = 0x40fdba;\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 1075
    },
    "00410304": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00410304(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uchar *var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uchar *var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x2d;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_18h = 0x410321;\n    var_14h = unaff_EDI;\n    var_ch = unaff_EBX;\n    fcn.00403980();\n    var_1ch = 0x410d3f;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00410304::var_20h;\n    var_24h = 0x41033e;\n    var_18h = &stack0xfffffffc;\n    fcn.004062fc();\n    var_24h = var_ch;\n    var_28h = 0x41034d;\n    fcn.00403d88();\n    var_24h = 0x41035e;\n    fcn.0041006c();\n    var_24h = 0x41036d;\n    fcn.004062fc();\n    var_24h = var_14h;\n    var_28h = 0x41037c;\n    fcn.00403d88();\n    var_24h = 0x41038d;\n    fcn.0041006c();\n    var_24h = 0x41039c;\n    fcn.004062fc();\n    var_24h = var_1ch;\n    var_28h = 0x4103ab;\n    fcn.00403d88();\n    var_24h = 0x4103bc;\n    fcn.0041006c();\n    var_24h = 0x4103cb;\n    fcn.004062fc();\n    var_28h = 0x4103da;\n    fcn.00403d88();\n    var_24h = 0x4103eb;\n    fcn.0041006c();\n    var_24h = 0x4103fa;\n    fcn.004062fc();\n    var_24h = var_2ch;\n    var_28h = 0x410409;\n    fcn.00403d88();\n    var_24h = 0x41041a;\n    fcn.0041006c();\n    var_24h = 0x410429;\n    fcn.004062fc();\n    var_24h = var_34h;\n    var_28h = 0x410438;\n    fcn.00403d88();\n    var_24h = 0x410449;\n    fcn.0041006c();\n    var_24h = 0x410458;\n    fcn.004062fc();\n    var_24h = var_3ch;\n    var_28h = 0x410467;\n    fcn.00403d88();\n    var_24h = 0x410478;\n    fcn.0041006c();\n    if (**0x41b33c != '\\0') {\n        var_24h = 0;\n        var_28h = 0x410497;\n        fcn.004062fc();\n        var_28h = var_44h;\n        var_2ch = 0x4104a6;\n        fcn.00403d88();\n        var_28h = 0x4104b7;\n        fcn.0040f7a8(var_24h);\n        var_28h = 0;\n        var_2ch = 0x4104c8;\n        fcn.004062fc();\n        var_2ch = var_4ch;\n        var_30h = 0x4104d7;\n        fcn.00403d88();\n        var_2ch = 0x4104e8;\n        fcn.0040f7a8(var_28h);\n        var_2ch = 1;\n        var_30h = 0x4104f9;\n        fcn.004062fc();\n        var_30h = var_54h;\n        var_34h = 0x410508;\n        fcn.00403d88();\n        var_30h = 0x410519;\n        fcn.0040f7a8(var_2ch);\n        var_30h = 0;\n        var_34h = 0x41052a;\n        fcn.004062fc();\n        var_34h = var_5ch;\n        var_38h = 0x410539;\n        fcn.00403d88();\n        var_34h = 0x41054a;\n        fcn.0040f7a8(var_30h);\n        var_34h = 0;\n        var_38h = 0x41055b;\n        fcn.004062fc();\n        var_38h = var_64h;\n        var_3ch = 0x41056a;\n        fcn.00403d88();\n        var_38h = 0x41057b;\n        fcn.0040f7a8(var_34h);\n        var_38h = 0;\n        var_3ch = 0x41058c;\n        fcn.004062fc();\n        var_3ch = var_6ch;\n        var_40h = 0x41059b;\n        fcn.00403d88();\n        var_3ch = 0x4105ac;\n        fcn.0040f7a8(var_38h);\n        var_3ch = 0;\n        var_40h = 0x4105bd;\n        fcn.004062fc();\n        var_40h = var_74h;\n        var_44h = 0x4105cc;\n        fcn.00403d88();\n        var_40h = 0x4105dd;\n        fcn.0040f7a8(var_3ch);\n        var_40h = 0;\n        var_44h = 0x4105ee;\n        fcn.004062fc();\n        var_44h = var_7ch;\n        var_48h = 0x4105fd;\n        fcn.00403d88();\n        var_44h = 0x41060e;\n        fcn.0040f7a8(var_40h);\n        var_44h = 0;\n        var_48h = 0x410622;\n        fcn.004062fc();\n        var_48h = var_84h;\n        var_4ch = 0x410637;\n        fcn.00403d88();\n        var_48h = 0x41064b;\n        fcn.0040f7a8(var_44h);\n        var_48h = 0;\n        var_4ch = 0x41065f;\n        fcn.004062fc();\n        var_4ch = var_8ch;\n        var_50h = 0x410674;\n        fcn.00403d88();\n        var_4ch = 0x410688;\n        fcn.0040f7a8(var_48h);\n        var_4ch = 0;\n        var_50h = 0x41069c;\n        fcn.004062fc();\n        var_50h = var_94h;\n        var_54h = 0x4106b1;\n        fcn.00403d88();\n        var_50h = 0x4106c5;\n        fcn.0040f7a8(var_4ch);\n        var_50h = 1;\n        var_54h = 0x4106d9;\n        fcn.004062fc();\n        var_54h = var_9ch;\n        var_58h = 0x4106ee;\n        fcn.00403d88();\n        var_54h = 0x410702;\n        fcn.0040f7a8(var_50h);\n        var_54h = 0;\n        var_58h = 0x410716;\n        fcn.004062fc();\n        var_58h = var_a4h;\n        var_5ch = 0x41072b;\n        fcn.00403d88();\n        var_58h = 0x41073f;\n        fcn.0040f7a8(var_54h);\n        var_58h = NULL;\n        var_5ch = 0x410753;\n        fcn.004062fc();\n        var_5ch = var_ach;\n        var_60h = 0x410768;\n        fcn.00403d88();\n        var_5ch = 0x41077c;\n        fcn.0040f7a8(var_58h);\n        var_5ch = 0;\n        var_60h = 0x410790;\n        fcn.004062fc();\n        var_64h = 0x4107a5;\n        fcn.00403d88();\n        var_60h = 0x4107b9;\n        fcn.0040f7a8(var_5ch);\n        var_60h = 0;\n        var_64h = 0x4107cd;\n        fcn.004062fc();\n        var_68h = 0x4107e2;\n        fcn.00403d88();\n        var_64h = 0x4107f6;\n        fcn.0040f7a8(var_60h);\n        var_64h = 0;\n        var_68h = 0x41080a;\n        fcn.004062fc();\n        var_6ch = 0x41081f;\n        fcn.00403d88();\n        var_68h = 0x410833;\n        fcn.0040f7a8(var_64h);\n        var_68h = 0;\n        var_6ch = 0x410847;\n        fcn.004062fc();\n        var_70h = 0x41085c;\n        fcn.00403d88();\n        var_6ch = 0x410870;\n        fcn.0040f7a8(var_68h);\n        var_6ch = 0;\n        var_70h = 0x410884;\n        fcn.004062fc();\n        var_74h = 0x410899;\n        fcn.00403d88();\n        var_70h = 0x4108ad;\n        fcn.0040f7a8(var_6ch);\n        var_70h = 0;\n        var_74h = 0x4108c1;\n        fcn.004062fc();\n        var_78h = 0x4108d6;\n        fcn.00403d88();\n        var_74h = 0x4108ea;\n        fcn.0040f7a8(var_70h);\n        var_74h = 0;\n        var_78h = 0x4108fe;\n        fcn.004062fc();\n        var_7ch = 0x410913;\n        fcn.00403d88();\n        var_78h = 0x410927;\n        fcn.0040f7a8(var_74h);\n        var_78h = 0;\n        var_7ch = 0x41093b;\n        fcn.004062fc();\n        var_80h = 0x410950;\n        fcn.00403d88();\n        var_7ch = 0x410964;\n        fcn.0040f7a8(var_78h);\n        var_7ch = 0;\n        var_80h = 0x410978;\n        fcn.004062fc();\n        var_84h = 0x41098d;\n        fcn.00403d88();\n        var_80h = 0x4109a1;\n        fcn.0040f7a8(var_7ch);\n        var_80h = 0;\n        var_84h = 0x4109b5;\n        fcn.004062fc();\n        var_88h = 0x4109ca;\n        fcn.00403d88();\n        var_84h = 0x4109de;\n        fcn.0040f7a8(var_80h);\n        var_84h = 0;\n        var_88h = 0x4109f2;\n        fcn.004062fc();\n        var_8ch = 0x410a07;\n        fcn.00403d88();\n        var_88h = 0x410a1b;\n        fcn.0040f7a8(var_84h);\n        var_88h = 0;\n        var_8ch = 0x410a2f;\n        fcn.004062fc();\n        var_90h = 0x410a44;\n        fcn.00403d88();\n        var_8ch = 0x410a58;\n        fcn.0040f7a8(var_88h);\n        var_8ch = 0;\n        var_90h = 0x410a6c;\n        fcn.004062fc();\n        var_94h = 0x410a81;\n        fcn.00403d88();\n        var_90h = 0x410a95;\n        fcn.0040f7a8(var_8ch);\n        var_90h = 0;\n        var_94h = 0x410aa9;\n        fcn.004062fc();\n        var_98h = 0x410abe;\n        fcn.00403d88();\n        var_94h = 0x410ad2;\n        fcn.0040f7a8(var_90h);\n        var_94h = 0;\n        var_98h = 0x410ae6;\n        fcn.004062fc();\n        var_9ch = 0x410afb;\n        fcn.00403d88();\n        var_98h = 0x410b0f;\n        fcn.0040f7a8(var_94h);\n        var_98h = 0;\n        var_9ch = 0x410b23;\n        fcn.004062fc();\n        var_a0h = 0x410b38;\n        fcn.00403d88();\n        var_9ch = 0x410b4c;\n        fcn.0040f7a8(var_98h);\n        var_9ch = 0;\n        var_a0h = 0x410b60;\n        fcn.004062fc();\n        var_a4h = 0x410b75;\n        fcn.00403d88();\n        var_a0h = 0x410b89;\n        fcn.0040f7a8(var_9ch);\n        var_a0h = 0;\n        var_a4h = 0x410b9d;\n        fcn.004062fc();\n        var_a8h = 0x410bb2;\n        fcn.00403d88();\n        var_a4h = 0x410bc6;\n        fcn.0040f7a8(var_a0h);\n        var_a8h = 0x410c1b;\n        var_ach = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00410304::var_ach;\n        var_a4h = &stack0xfffffffc;\n        fcn.004062fc();\n        fcn.00403d88(var_144h);\n        fcn.0040fb40(0);\n        *in_FS_OFFSET = 0;\n        var_a8h = 0;\n        var_ach = 0x410c39;\n        fcn.004062fc();\n        fcn.00403d88();\n        var_ach = 0x410c62;\n        fcn.0040fb40(var_a8h);\n        var_ach = 0;\n        fcn.004062fc();\n        fcn.00403d88(var_154h);\n        fcn.0040fb40(var_ach);\n        fcn.004062fc();\n        fcn.00403d88(var_15ch);\n        fcn.0040fb40(0);\n        var_b4h = 0;\n        fcn.004062fc();\n        fcn.00403d88(var_164h);\n        fcn.0040fb40(0);\n    }\n    *in_FS_OFFSET = var_b4h;\n    var_ach = 0x410d46;\n    fcn.00403bf4();\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 4978
    },
    "0041160c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0041160c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_238h;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint *puStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0x54;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puStack36 = 0x411634;\n    fcn.00404150();\n    puStack36 = 0x41163c;\n    fcn.00404150();\n    puStack36 = 0x411644;\n    fcn.00404150();\n    uStack40 = 0x41195e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.0041160c::var_264h;\n    uStack52 = 0x41166c;\n    puStack36 = &stack0xfffffffc;\n    fcn.00403e14();\n    uStack52 = 0x411677;\n    uStack52 = fcn.00403d98();\n    uStack56 = 0x41167d;\n    uVar2 = fcn.00404e50();\n    do {\n        uStack60 = 0x411988;\n        uStack64 = 0x41169e;\n        fcn.00403d6c();\n        uStack68 = 0x411988;\n        uStack72 = **0x41b180;\n        puStack76 = 0x4116c0;\n        fcn.00403e78();\n        puStack76 = 0x4116cb;\n        cVar1 = fcn.0040776c();\n        if (cVar1 != '\\0') {\n            uStack80 = 0x41189c;\n            uStack84 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffac;\n            puStack76 = &stack0xfffffffc;\n            if (arg_8h == 0) {\n                uStack92 = 0x411988;\n                uStack96 = 0x411709;\n                puStack76 = &stack0xfffffffc;\n                fcn.00403d6c();\n                uStack100 = 0x411988;\n                uStack104 = **0x41b180;\n                uStack108 = 0x41172b;\n                fcn.00403e78();\n                uStack108 = 0x41173c;\n                fcn.00411034();\n                uStack108 = 0x41174d;\n                fcn.0040377c();\n                uStack112 = 0;\n                uStack116 = 0x411988;\n                uStack124 = 0x411990;\n                uStack128 = 0x41177a;\n                fcn.00403d6c();\n                uStack128 = var_28ch;\n                uStack132 = 0x411998;\n                uStack136 = 0x411795;\n                fcn.00403e78();\n                uStack136 = 0x4117a6;\n                fcn.0040377c();\n                uStack132 = 0x4117b2;\n                fcn.0040e6d4();\n                uStack136 = 0x411988;\n                uStack140 = 0x4117da;\n                fcn.00403d6c();\n                uStack144 = 0x411988;\n                uStack148 = **0x41b180;\n                uStack152 = 0x4117fc;\n                fcn.00403e78();\n                uStack152 = 0x41180d;\n                fcn.004112d0();\n                uStack152 = 0x41181e;\n                fcn.0040377c();\n                uStack156 = 0;\n                uStack160 = 0x411988;\n                uStack168 = 0x411990;\n                uStack172 = 0x41184b;\n                fcn.00403d6c();\n                uStack176 = 0x411990;\n                uStack180 = 0x4119a8;\n                uStack184 = 0x4119a8;\n                uStack188 = 0x411998;\n                uStack192 = 0x411875;\n                fcn.00403e78();\n                uStack192 = 0x411886;\n                fcn.0040377c();\n                uStack188 = 0x411892;\n                fcn.0040e6d4();\n            }\n            *in_FS_OFFSET = uStack128;\n        }\n        puStack120 = &fcn.0041160c::var_264h;\n        uStack128 = 0x4118b6;\n        uStack52 = uVar2;\n        iVar3 = fcn.00404e58();\n    } while (iVar3 != 0);\n    uStack132 = 0x4118c7;\n    uStack128 = uVar2;\n    fcn.00404e48();\n    *in_FS_OFFSET = uStack128;\n    puStack120 = 0x411968;\n    uStack52 = 0x4118e4;\n    fcn.00403bf4();\n    uStack124 = 0x4118ef;\n    fcn.004034e4();\n    uStack124 = 0x4118ff;\n    fcn.00403bf4();\n    uStack124 = 0x41190a;\n    fcn.004034e4();\n    uStack124 = 0x41191a;\n    fcn.00403bf4();\n    uStack124 = 0x411925;\n    fcn.004034e4();\n    uStack124 = 0x411935;\n    fcn.00403bf4();\n    uStack124 = 0x411940;\n    fcn.004034e4();\n    uStack124 = 0x411950;\n    fcn.00403bf4();\n    uStack124 = 0x41195d;\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 1745
    },
    "00411c54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00411c54(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uchar *var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uchar *var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x26;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_18h = 0x411c71;\n    var_14h = unaff_EDI;\n    var_ch = unaff_EBX;\n    fcn.00403980();\n    var_1ch = 0x4124f2;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00411c54::var_20h;\n    var_18h = &stack0xfffffffc;\n    if (**0x41b33c != '\\0') {\n        var_24h = 0;\n        var_28h = 0x411c9e;\n        var_18h = &stack0xfffffffc;\n        fcn.004062fc();\n        var_28h = var_ch;\n        var_2ch = 0x411cad;\n        fcn.00403d88();\n        var_28h = 0x411cbe;\n        fcn.0041160c(var_24h);\n        var_28h = 0;\n        var_2ch = 0x411ccf;\n        fcn.004062fc();\n        var_2ch = var_14h;\n        var_30h = 0x411cde;\n        fcn.00403d88();\n        var_2ch = 0x411cef;\n        fcn.0041160c(var_28h);\n        var_2ch = 1;\n        var_30h = 0x411d00;\n        fcn.004062fc();\n        var_30h = var_1ch;\n        var_34h = 0x411d0f;\n        fcn.00403d88();\n        var_30h = 0x411d20;\n        fcn.0041160c(var_2ch);\n        var_30h = 0;\n        var_34h = 0x411d31;\n        fcn.004062fc();\n        var_34h = var_24h;\n        var_38h = 0x411d40;\n        fcn.00403d88();\n        var_34h = 0x411d51;\n        fcn.0041160c(var_30h);\n        var_34h = 0;\n        var_38h = 0x411d62;\n        fcn.004062fc();\n        var_38h = var_2ch;\n        var_3ch = 0x411d71;\n        fcn.00403d88();\n        var_38h = 0x411d82;\n        fcn.0041160c(var_34h);\n        var_38h = 0;\n        var_3ch = 0x411d93;\n        fcn.004062fc();\n        var_3ch = var_34h;\n        var_40h = 0x411da2;\n        fcn.00403d88();\n        var_3ch = 0x411db3;\n        fcn.0041160c(var_38h);\n        var_3ch = 0;\n        var_40h = 0x411dc4;\n        fcn.004062fc();\n        var_40h = var_3ch;\n        var_44h = 0x411dd3;\n        fcn.00403d88();\n        var_40h = 0x411de4;\n        fcn.0041160c(var_3ch);\n        var_40h = 0;\n        var_44h = 0x411df5;\n        fcn.004062fc();\n        var_48h = 0x411e04;\n        fcn.00403d88();\n        var_44h = 0x411e15;\n        fcn.0041160c(var_40h);\n        var_44h = 0;\n        var_48h = 0x411e26;\n        fcn.004062fc();\n        var_48h = var_4ch;\n        var_4ch = 0x411e35;\n        fcn.00403d88();\n        var_48h = 0x411e46;\n        fcn.0041160c(var_44h);\n        var_48h = 0;\n        var_4ch = 0x411e57;\n        fcn.004062fc();\n        var_4ch = var_54h;\n        var_50h = 0x411e66;\n        fcn.00403d88();\n        var_4ch = 0x411e77;\n        fcn.0041160c(var_48h);\n        var_4ch = 0;\n        var_50h = 0x411e88;\n        fcn.004062fc();\n        var_50h = var_5ch;\n        var_54h = 0x411e97;\n        fcn.00403d88();\n        var_50h = 0x411ea8;\n        fcn.0041160c(var_4ch);\n        var_50h = 0;\n        var_54h = 0x411eb9;\n        fcn.004062fc();\n        var_54h = var_64h;\n        var_58h = 0x411ec8;\n        fcn.00403d88();\n        var_54h = 0x411ed9;\n        fcn.0041160c(var_50h);\n        var_54h = 0;\n        var_58h = 0x411eea;\n        fcn.004062fc();\n        var_58h = var_6ch;\n        var_5ch = 0x411ef9;\n        fcn.00403d88();\n        var_58h = 0x411f0a;\n        fcn.0041160c(var_54h);\n        var_58h = 0;\n        var_5ch = 0x411f1b;\n        fcn.004062fc();\n        var_5ch = var_74h;\n        var_60h = 0x411f2a;\n        fcn.00403d88();\n        var_5ch = 0x411f3b;\n        fcn.0041160c(var_58h);\n        var_5ch = 0;\n        var_60h = 0x411f4c;\n        fcn.004062fc();\n        var_60h = var_7ch;\n        var_64h = 0x411f5b;\n        fcn.00403d88();\n        var_60h = 0x411f6c;\n        fcn.0041160c(var_5ch);\n        var_60h = 0;\n        var_64h = 0x411f80;\n        fcn.004062fc();\n        var_64h = var_84h;\n        var_68h = 0x411f95;\n        fcn.00403d88();\n        var_64h = 0x411fa9;\n        fcn.0041160c(var_60h);\n        var_64h = 0;\n        var_68h = 0x411fbd;\n        fcn.004062fc();\n        var_68h = var_8ch;\n        var_6ch = 0x411fd2;\n        fcn.00403d88();\n        var_68h = 0x411fe6;\n        fcn.0041160c(var_64h);\n        var_68h = 0;\n        var_6ch = 0x411ffa;\n        fcn.004062fc();\n        var_6ch = var_94h;\n        var_70h = 0x41200f;\n        fcn.00403d88();\n        var_6ch = 0x412023;\n        fcn.0041160c(var_68h);\n        var_6ch = 0;\n        var_70h = 0x412037;\n        fcn.004062fc();\n        var_70h = var_9ch;\n        var_74h = 0x41204c;\n        fcn.00403d88();\n        var_70h = 0x412060;\n        fcn.0041160c(var_6ch);\n        var_70h = 0;\n        var_74h = 0x412074;\n        fcn.004062fc();\n        var_74h = var_a4h;\n        var_78h = 0x412089;\n        fcn.00403d88();\n        var_74h = 0x41209d;\n        fcn.0041160c(var_70h);\n        var_74h = NULL;\n        var_78h = 0x4120b1;\n        fcn.004062fc();\n        var_78h = var_ach;\n        var_7ch = 0x4120c6;\n        fcn.00403d88();\n        var_78h = 0x4120da;\n        fcn.0041160c(var_74h);\n        var_78h = 0;\n        var_7ch = 0x4120ee;\n        fcn.004062fc();\n        var_80h = 0x412103;\n        fcn.00403d88();\n        var_7ch = 0x412117;\n        fcn.0041160c(var_78h);\n        var_7ch = 0;\n        var_80h = 0x41212b;\n        fcn.004062fc();\n        var_84h = 0x412140;\n        fcn.00403d88();\n        var_80h = 0x412154;\n        fcn.0041160c(var_7ch);\n        var_80h = 0;\n        var_84h = 0x412168;\n        fcn.004062fc();\n        var_88h = 0x41217d;\n        fcn.00403d88();\n        var_84h = 0x412191;\n        fcn.0041160c(var_80h);\n        var_84h = 0;\n        var_88h = 0x4121a5;\n        fcn.004062fc();\n        var_8ch = 0x4121ba;\n        fcn.00403d88();\n        var_88h = 0x4121ce;\n        fcn.0041160c(var_84h);\n        var_88h = 0;\n        var_8ch = 0x4121e2;\n        fcn.004062fc();\n        var_90h = 0x4121f7;\n        fcn.00403d88();\n        var_8ch = 0x41220b;\n        fcn.0041160c(var_88h);\n        var_8ch = 0;\n        var_90h = 0x41221f;\n        fcn.004062fc();\n        var_94h = 0x412234;\n        fcn.00403d88();\n        var_90h = 0x412248;\n        fcn.0041160c(var_8ch);\n        var_90h = 0;\n        var_94h = 0x41225c;\n        fcn.004062fc();\n        var_98h = 0x412271;\n        fcn.00403d88();\n        var_94h = 0x412285;\n        fcn.0041160c(var_90h);\n        var_94h = 0;\n        var_98h = 0x412299;\n        fcn.004062fc();\n        var_9ch = 0x4122ae;\n        fcn.00403d88();\n        var_98h = 0x4122c2;\n        fcn.0041160c(var_94h);\n        var_98h = 0;\n        var_9ch = 0x4122d6;\n        fcn.004062fc();\n        var_a0h = 0x4122eb;\n        fcn.00403d88();\n        var_9ch = 0x4122ff;\n        fcn.0041160c(var_98h);\n        var_9ch = 0;\n        var_a0h = 0x412313;\n        fcn.004062fc();\n        var_a4h = 0x412328;\n        fcn.00403d88();\n        var_a0h = 0x41233c;\n        fcn.0041160c(var_9ch);\n        var_a0h = 0;\n        var_a4h = 0x412350;\n        fcn.004062fc();\n        var_a8h = 0x412365;\n        fcn.00403d88();\n        var_a4h = 0x412379;\n        fcn.0041160c(var_a0h);\n        var_a8h = 0x4123ce;\n        var_ach = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00411c54::var_ach;\n        var_a4h = &stack0xfffffffc;\n        fcn.004062fc();\n        fcn.00403d88(var_10ch);\n        fcn.004119ac();\n        *in_FS_OFFSET = 0;\n        var_a8h = 0;\n        var_ach = 0x4123ec;\n        fcn.004062fc();\n        fcn.00403d88();\n        var_ach = 0x412415;\n        fcn.004119ac();\n        var_ach = 0;\n        fcn.004062fc();\n        fcn.00403d88(var_11ch);\n        fcn.004119ac();\n        fcn.004062fc(0);\n        fcn.00403d88(var_124h);\n        fcn.004119ac();\n        var_b4h = 0;\n        fcn.004062fc();\n        fcn.00403d88(var_12ch);\n        fcn.004119ac();\n    }\n    *in_FS_OFFSET = var_b4h;\n    var_ach = 0x4124f9;\n    fcn.00403bf4();\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 4327
    },
    "00412d6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412d6c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack760;\n    uint uVar3;\n    uint uStack720;\n    uint uStack716;\n    uchar *puStack712;\n    uint uStack708;\n    uint uStack704;\n    uint uStack700;\n    uint uStack696;\n    uint uStack692;\n    uint uStack688;\n    uint *puStack684;\n    uint uStack680;\n    uint uStack676;\n    uchar *puStack672;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_238h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack672 = 0x412dc7;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.00404150();\n    puStack672 = 0x412dcf;\n    fcn.00404150();\n    puStack672 = 0x412dd7;\n    fcn.00404150();\n    uStack676 = 0x412fd4;\n    uStack680 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd58;\n    puStack684 = &fcn.00412d6c::var_264h;\n    uStack688 = 0x412dff;\n    puStack672 = &stack0xfffffffc;\n    fcn.00403e14();\n    uStack688 = 0x412e0a;\n    uStack688 = fcn.00403d98();\n    uStack692 = 0x412e10;\n    var_14h = fcn.00404e50();\n    do {\n        uStack692 = var_4h;\n        uStack696 = 0x412ffc;\n        uStack700 = 0x412e31;\n        fcn.00403d6c();\n        uStack700 = 0;\n        uStack704 = 0x412ffc;\n        uStack708 = **0x41b180;\n        puStack712 = 0x412e53;\n        fcn.00403e78();\n        puStack712 = 0x412e5e;\n        cVar1 = fcn.0040776c();\n        if (cVar1 != '\\0') {\n            uStack716 = 0x412f48;\n            uStack720 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd30;\n            puStack712 = &stack0xfffffffc;\n            if (arg_8h == 0) {\n                puStack712 = &stack0xfffffffc;\n                fcn.00403d6c(0x412ffc, var_4h);\n                fcn.00403e78(0x413004, 0);\n                fcn.00412974();\n                fcn.0040377c();\n                fcn.00403d6c(0x41301c, var_8h, 0x412ffc, var_ch, 0);\n                uStack760 = 0;\n                fcn.00403e78(0x413024);\n                fcn.0040377c();\n                fcn.0040e6d4();\n            }\n            *in_FS_OFFSET = uStack760;\n        }\n        uStack688 = var_14h;\n        uStack760 = 0x412f62;\n        iVar2 = fcn.00404e58();\n        uVar3 = var_14h;\n    } while (iVar2 != 0);\n    fcn.00404e48();\n    *in_FS_OFFSET = uVar3;\n    uVar3 = 0x412fdb;\n    uStack688 = 0x412f90;\n    fcn.00403bf4();\n    fcn.004034e4(uVar3);\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 978
    },
    "004132f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_a4h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.004132f8(void)\n\n{\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0x25;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_14h = 0x413314;\n    var_10h = unaff_EBX;\n    fcn.00403980();\n    var_18h = 0x413b6d;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004132f8::var_1ch;\n    var_14h = &stack0xfffffffc;\n    if (**0x41b33c != '\\0') {\n        var_14h = &stack0xfffffffc;\n        fcn.004062fc();\n        fcn.00403d88(var_8h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_10h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_18h);\n        fcn.00412d6c(1);\n        fcn.004062fc();\n        fcn.00403d88(0);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(1);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(0);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(0);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(0x413498);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_48h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_50h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_58h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_60h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_68h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_70h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_78h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_80h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_88h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_90h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_98h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_a0h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_a8h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_b0h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_b8h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_c0h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_c8h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_d0h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_d8h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_e0h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_e8h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_f0h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_f8h);\n        fcn.00412d6c(0);\n        fcn.004062fc();\n        fcn.00403d88(var_100h);\n        fcn.00412d6c(0);\n        fcn.004062fc(0);\n        fcn.00403d88(var_108h);\n        fcn.00413030();\n        fcn.004062fc(0);\n        fcn.00403d88(var_110h);\n        fcn.00413030();\n        fcn.004062fc(0);\n        fcn.00403d88(var_118h);\n        fcn.00413030();\n        fcn.004062fc(0);\n        fcn.00403d88(var_120h);\n        fcn.00413030();\n        var_b0h = 0;\n        fcn.004062fc();\n        fcn.00403d88(var_128h);\n        fcn.00413030();\n    }\n    *in_FS_OFFSET = var_b0h;\n    fcn.00403bf4(0x413b74);\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 2567
    },
    "00413f58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00413f58(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar uVar7;\n    uint var_314h;\n    uint var_310h;\n    uint var_30ch;\n    uint var_308h;\n    uint var_304h;\n    uint var_300h;\n    uint var_2fch;\n    uint var_2f8h;\n    uint var_2f4h;\n    uint var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint32_t var_284h;\n    int32_t var_268h;\n    uint32_t var_264h;\n    uint var_258h;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    uint *puStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = 0x62;\n    do {\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    var_ch = 0;\n    var_1ch = 0x413f7f;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    fcn.00404150();\n    var_1ch = 0x413f87;\n    fcn.00404150();\n    var_1ch = 0x413f8f;\n    fcn.00404150();\n    var_1ch = 0x413f97;\n    fcn.00404150();\n    var_20h = 0x41475d;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00413f58::var_24h;\n    var_10h = 0;\n    var_28h = 0x413fb8;\n    var_1ch = &stack0xfffffffc;\n    fcn.004062fc();\n    var_28h = 0x413fc6;\n    fcn.00403c3c();\n    var_28h = 0x413fd4;\n    fcn.0040377c();\n    var_28h = 0x413fe7;\n    fcn.00407a18();\n    var_28h = 0x413ff5;\n    fcn.0040377c();\n    var_28h = 0x414008;\n    fcn.00407a18();\n    var_28h = 0x414010;\n    iVar5 = fcn.00404648();\n    if (iVar5 != 0) {\n        var_28h = 0x414020;\n        iVar5 = fcn.00404648();\n        var_28h = iVar5 + 1;\n        var_2ch = 0x414035;\n        fcn.00404804();\n        var_28h = 0x414040;\n        iVar5 = fcn.00404648();\n        var_28h = var_14h + -4 + iVar5 * 4;\n        var_2ch = 0x414056;\n        fcn.004078d8();\n        var_28h = 0x414062;\n        fcn.00403c18();\n        while( true ) {\n            var_28h = 0x414621;\n            iVar5 = fcn.00404648();\n            if (iVar5 < 1) break;\n            uVar2 = **0x41b218 - 0x4b000;\n            uVar6 = (*0x41b218)[1] - (**0x41b218 < 0x4b000);\n            if (uVar6 == (*0x41b3fc)[1]) {\n                if (uVar2 < **0x41b3fc || uVar2 == **0x41b3fc) break;\n            }\n            else if (uVar6 <= (*0x41b3fc)[1]) break;\n            var_28h = 0x41409b;\n            fcn.00404648();\n            var_28h = 0x4140aa;\n            fcn.004078d8();\n            var_28h = 0x4140b2;\n            fcn.00404648();\n            var_28h = 0x4140be;\n            fcn.00403bdc();\n            var_28h = 0x4140c6;\n            iVar5 = fcn.00404648();\n            var_28h = iVar5 + -1;\n            var_2ch = 0x4140db;\n            fcn.00404804();\n            var_28h = &fcn.00413f58::var_284h;\n            var_2ch = 0x4140f8;\n            fcn.00403e14();\n            var_2ch = 0x414109;\n            fcn.004078d8();\n            var_2ch = 0x414114;\n            var_2ch = fcn.00403d98();\n            var_30h = 0x41411a;\n            uVar3 = fcn.00404e50();\n            do {\n                var_30h = var_18h;\n                uStack56 = 0x41479c;\n                uStack60 = 0x41413a;\n                fcn.00403d6c();\n                uStack64 = 0x414150;\n                fcn.00403e78();\n                uStack64 = 0x41415e;\n                fcn.004078d8();\n                uStack64 = 0x414169;\n                fcn.004077c8();\n                if (((var_284h & 0x10) != 0x10) && (var_268h == 0)) {\n                    uStack68 = var_264h >> 10;\n                    uStack64 = 0;\n                    if (arg_14h < 0) {\n                        if (-1 < arg_14h >> 0x1f) goto code_r0x004141b4;\n                    }\n                    else if (uStack68 <= arg_14h) {\ncode_r0x004141b4:\n                        uStack64 = 0x4141bc;\n                        iVar5 = fcn.00404648();\n                        if (-1 < iVar5 + -1) {\n                            do {\n                                uStack64 = 0x4141d8;\n                                fcn.0040377c();\n                                uStack64 = 0x4141eb;\n                                cVar1 = fcn.00406144();\n                                if (cVar1 != '\\0') {\n                                    uStack64 = 0x414201;\n                                    fcn.004078d8();\n                                    uStack64 = 0x41420f;\n                                    fcn.00403c3c();\n                                    uStack64 = 0x41421a;\n                                    fcn.004078d8();\n                                    uStack64 = 0x414222;\n                                    fcn.00403da8();\n                                    uStack64 = 0x414231;\n                                    fcn.00403f90();\n                                    uStack64 = var_ch;\n                                    uStack68 = 0x41479c;\n                                    uStack72 = var_2ch;\n                                    puStack76 = 0x41424c;\n                                    fcn.00403e78();\n                                    puStack76 = 0x41425d;\n                                    fcn.004078d8();\n                                    puStack76 = 0x41426e;\n                                    fcn.0040377c();\n                                    iStack80 = 0x414283;\n                                    fcn.004078d8();\n                                    puStack76 = 0x41428f;\n                                    fcn.0040e79c();\n                                    var_10h = var_10h + 1;\n                                    if (arg_8h == '\\x01') {\n                                        **0x41b3f8 = **0x41b3f8 + 1;\n                                    }\n                                    break;\n                                }\n                                iVar5 = iVar5 + -1;\n                            } while (iVar5 != 0);\n                        }\n                    }\n                }\n                if (arg_ch == '\\x01') {\n                    puStack76 = 0x4142c1;\n                    fcn.0040377c();\n                    puStack76 = 0x4142d2;\n                    fcn.0040633c();\n                    puStack76 = 0x4142e2;\n                    iVar5 = fcn.00403ad4();\n                    if (iVar5 != 0) {\n                        puStack76 = 0x4142f5;\n                        fcn.00413d08();\n                        puStack76 = 0x4142fd;\n                        iVar5 = fcn.00406910();\n                        if (iVar5 <= arg_14h) {\n                            puStack76 = 0x41430e;\n                            iVar5 = fcn.00404648();\n                            if (-1 < iVar5 + -1) {\n                                do {\n                                    puStack76 = 0x41432a;\n                                    fcn.004077c8();\n                                    puStack76 = 0x41433b;\n                                    fcn.0040377c();\n                                    puStack76 = 0x41434e;\n                                    cVar1 = fcn.00406144();\n                                    if (cVar1 != '\\0') {\n                                        puStack76 = 0x414364;\n                                        fcn.004078d8();\n                                        puStack76 = 0x414372;\n                                        fcn.00403c3c();\n                                        puStack76 = 0x414380;\n                                        fcn.004078d8();\n                                        puStack76 = 0x41438e;\n                                        fcn.00403c3c();\n                                        puStack76 = 0x41439c;\n                                        fcn.004078d8();\n                                        puStack76 = 0x4143aa;\n                                        fcn.00403c3c();\n                                        puStack76 = var_1ch;\n                                        iStack80 = 0x4147b4;\n                                        uStack84 = 0x4143c0;\n                                        fcn.004077c8();\n                                        uStack84 = var_2dch;\n                                        uStack88 = 0x4143d3;\n                                        fcn.00403e78();\n                                        uStack88 = 0x4143db;\n                                        fcn.00403da8();\n                                        uStack88 = 0x4143ea;\n                                        fcn.00403f90();\n                                        uStack88 = var_ch;\n                                        uStack92 = 0x41479c;\n                                        uStack96 = var_2ch;\n                                        uStack100 = 0x414405;\n                                        fcn.00403e78();\n                                        uStack100 = 0x414416;\n                                        fcn.004078d8();\n                                        uStack100 = 0x414427;\n                                        fcn.0040377c();\n                                        uStack104 = 0x41443c;\n                                        fcn.004078d8();\n                                        uStack100 = 0x414448;\n                                        fcn.0040e79c();\n                                        var_10h = var_10h + 1;\n                                        if (arg_8h == '\\x01') {\n                                            **0x41b3f8 = **0x41b3f8 + 1;\n                                        }\n                                        break;\n                                    }\n                                    iVar5 = iVar5 + -1;\n                                } while (iVar5 != 0);\n                            }\n                        }\n                    }\n                }\n                uVar7 = arg_10h == '\\x01';\n                if (uVar7) {\n                    puStack76 = 0x414482;\n                    fcn.00403d6c();\n                    puStack76 = 0x414492;\n                    fcn.00403ec0();\n                    if (!uVar7) {\n                        puStack76 = 0x4144ae;\n                        fcn.00403d6c();\n                        puStack76 = 0x4144be;\n                        fcn.00403ec0();\n                        if (((!uVar7) && ((var_284h & 0x10) == 0x10)) && ((var_284h & 0x400) != 0x400)) {\n                            puStack76 = 0x4144f6;\n                            fcn.004078d8();\n                            puStack76 = 0x414501;\n                            puStack76 = fcn.00403d98();\n                            iStack80 = 0x414507;\n                            iVar5 = fcn.00404e78();\n                            if (iVar5 != -1) {\n                                uStack56 = uStack56 & 0xffffff;\n                                iStack80 = 0x41451c;\n                                iVar5 = fcn.00404648();\n                                if (-1 < iVar5 + -1) {\n                                    do {\n                                        iStack80 = 0x414538;\n                                        fcn.004078d8();\n                                        iStack80 = 0x414549;\n                                        fcn.0040377c();\n                                        iStack80 = 0x41455a;\n                                        fcn.0040633c();\n                                        uStack84 = 0x414572;\n                                        fcn.00403d88();\n                                        uStack84 = 0x414583;\n                                        fcn.004078d8();\n                                        uStack84 = 0x414594;\n                                        fcn.0040377c();\n                                        uStack84 = 0x4145a5;\n                                        fcn.0040633c();\n                                        iStack80 = 0x4145b1;\n                                        iVar4 = fcn.00403ad4();\n                                        if (iVar4 != 0) {\n                                            uStack56 = CONCAT13(1, uStack56);\n                                        }\n                                        iVar5 = iVar5 + -1;\n                                    } while (iVar5 != 0);\n                                }\n                                if (uStack56._3_1_ == '\\0') {\n                                    iStack80 = 0x4145cf;\n                                    iStack80 = fcn.00404648();\n                                    iStack80 = iStack80 + 1;\n                                    uStack84 = 0x4145e4;\n                                    fcn.00404804();\n                                    iStack80 = 0x4145ef;\n                                    fcn.00404648();\n                                    iStack80 = 0x4145fe;\n                                    fcn.00403c18();\n                                }\n                            }\n                        }\n                    }\n                }\n                puStack76 = &fcn.00413f58::var_284h;\n                uStack84 = 0x41460b;\n                var_2ch = uVar3;\n                iVar5 = fcn.00404e58();\n            } while (iVar5 != 0);\n            uStack88 = 0x414619;\n            var_24h = uVar3;\n            fcn.00404e48();\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x414767;\n    var_20h = 0x414646;\n    fcn.00403bf4();\n    var_20h = 0x414656;\n    fcn.00403508();\n    var_20h = 0x414661;\n    fcn.00403bdc();\n    var_20h = 0x414671;\n    fcn.00403508();\n    var_20h = 0x414681;\n    fcn.00403bf4();\n    var_20h = 0x41468c;\n    fcn.004034e4();\n    var_20h = 0x41469c;\n    fcn.00403bf4();\n    var_20h = 0x4146ac;\n    fcn.00403508();\n    var_20h = 0x4146bc;\n    fcn.00403bf4();\n    var_20h = 0x4146c7;\n    fcn.004034e4();\n    var_20h = 0x4146d2;\n    fcn.00403bdc();\n    var_20h = 0x4146dd;\n    fcn.004034e4();\n    var_20h = 0x4146ed;\n    fcn.00403bf4();\n    var_20h = 0x4146fd;\n    fcn.00403508();\n    var_20h = 0x414708;\n    fcn.00403bdc();\n    var_20h = 0x414716;\n    fcn.00404810();\n    var_20h = 0x41471e;\n    fcn.00403bdc();\n    var_20h = 0x41472c;\n    fcn.00404810();\n    var_20h = 0x414739;\n    fcn.00403bf4();\n    var_20h = 0x414747;\n    fcn.00404810();\n    var_20h = 0x414754;\n    fcn.00403bf4();\n    var_20h = 0x41475c;\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 4184
    },
    "00414de8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00414de8(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint uStackY224;\n    uint uStackY220;\n    uint *puStackY216;\n    uint uStackY212;\n    uint uStackY208;\n    uint uStackY204;\n    uint uStackY200;\n    uint uStackY196;\n    uint uStackY192;\n    uint uStackY188;\n    uint uStackY184;\n    uint uStackY180;\n    uint uStackY176;\n    uint uStackY172;\n    uint uStackY168;\n    uint uStackY164;\n    uint uStackY160;\n    uint uStackY156;\n    uint uStackY152;\n    uint uStackY148;\n    uint uStackY144;\n    uint uStackY140;\n    uint uStackY136;\n    uint uStackY132;\n    uint uStackY128;\n    uint uStackY124;\n    uint uStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0x5e;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    puStack28 = 0x414e05;\n    var_4h = in_EAX;\n    fcn.00404150();\n    piVar1 = *0x41b2c4;\n    uStack32 = 0x4153e2;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004062fc();\n    fcn.00403e14();\n    fcn.00403d98();\n    uVar3 = (***0x41b2d8)();\n    do {\n        fcn.00403d6c();\n        fcn.00403e78();\n        cVar2 = fcn.0040776c();\n        if (cVar2 != '\\0') {\n            fcn.00403d6c();\n            fcn.00403e78();\n            fcn.0040377c();\n            fcn.00403d6c();\n            fcn.00403e78();\n            fcn.0040e79c();\n            *piVar1 = *piVar1 + 1;\n        }\n        uStackY112 = 0x414f57;\n        fcn.00403d6c();\n        uStackY116 = 0x415420;\n        uStackY120 = 0x415454;\n        uStackY124 = 0x414f77;\n        fcn.00403e78();\n        uStackY124 = 0x414f82;\n        cVar2 = fcn.0040776c();\n        if (cVar2 != '\\0') {\n            uStackY124 = var_4h;\n            uStackY128 = 0x415420;\n            uStackY132 = 0x414fa5;\n            fcn.00403d6c();\n            uStackY136 = 0x415470;\n            uStackY140 = 0x414fc0;\n            fcn.00403e78();\n            uStackY140 = 0x414fd1;\n            fcn.0040377c();\n            uStackY144 = var_8h;\n            uStackY148 = 0x415420;\n            uStackY152 = 0x414ff3;\n            fcn.00403d6c();\n            uStackY156 = 0x415420;\n            uStackY160 = 0x415454;\n            uStackY164 = 0x415013;\n            fcn.00403e78();\n            uStackY160 = 0x41501f;\n            fcn.0040e79c();\n            *piVar1 = *piVar1 + 1;\n        }\n        uStackY160 = var_8h;\n        uStackY164 = 0x415420;\n        uStackY168 = 0x41503c;\n        fcn.00403d6c();\n        uStackY172 = 0x415420;\n        uStackY176 = 0x41548c;\n        uStackY180 = 0x41505c;\n        fcn.00403e78();\n        uStackY180 = 0x415067;\n        cVar2 = fcn.0040776c();\n        if (cVar2 != '\\0') {\n            uStackY180 = var_4h;\n            uStackY184 = 0x415420;\n            uStackY188 = 0x41508a;\n            fcn.00403d6c();\n            uStackY192 = 0x4154ac;\n            uStackY196 = 0x4150a5;\n            fcn.00403e78();\n            uStackY196 = 0x4150b6;\n            fcn.0040377c();\n            uStackY200 = var_8h;\n            uStackY204 = 0x415420;\n            uStackY208 = 0x4150d8;\n            fcn.00403d6c();\n            uStackY212 = 0x415420;\n            puStackY216 = 0x41548c;\n            uStackY220 = 0x4150f8;\n            fcn.00403e78();\n            puStackY216 = 0x415104;\n            fcn.0040e79c();\n            *piVar1 = *piVar1 + 1;\n        }\n        uStackY224 = 0x415111;\n        uStackY220 = uVar3;\n        puStackY216 = &fcn.00414de8::var_260h;\n        iVar4 = (***0x41b198)();\n    } while (iVar4 != 0);\n    (***0x41b3ec)();\n    fcn.004075c0(&fcn.00414de8::var_ch, 0);\n    iVar4 = fcn.00403da8();\n    if (2 < iVar4) {\n        cVar2 = fcn.0040776c();\n        if (cVar2 != '\\0') {\n            fcn.004077c8();\n            fcn.00403e78();\n            fcn.0040377c();\n            fcn.0040e79c();\n            fcn.004077c8();\n            fcn.00403e78();\n            fcn.0040377c();\n            fcn.00403e14();\n            fcn.0040e79c();\n            fcn.004077c8();\n            fcn.00403e78();\n            fcn.0040377c();\n            fcn.00403e14();\n            fcn.0040e79c();\n            *piVar1 = *piVar1 + 1;\n        }\n    }\n    arg_8h = &fcn.00414de8::var_10h;\n    uStackY112 = 0x415295;\n    fcn.004075c0(arg_8h, 0);\n    uStackY112 = 0x41529d;\n    iVar4 = fcn.00403da8();\n    if (2 < iVar4) {\n        uStackY112 = 0x4152aa;\n        cVar2 = fcn.0040776c();\n        if (cVar2 != '\\0') {\n            uStackY112 = 0x4152c1;\n            fcn.00403e14();\n            uStackY112 = 0x4152d2;\n            fcn.0040377c();\n            uStackY116 = 0x4152ec;\n            fcn.00403e14();\n            uStackY112 = 0x4152f8;\n            fcn.0040e79c();\n            *piVar1 = *piVar1 + 1;\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 2301
    },
    "004160ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004160ec(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x416269;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    fcn.004034e4();\n    iVar1 = fcn.00404648();\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if ((*(*(arg_8h + -4) + 0x20 + iVar2 * 0x22c) == 0) &&\n               (-1 < in_EAX && in_EAX == *(*(arg_8h + -4) + 0x18 + iVar2 * 0x22c))) {\n                if (*(*(arg_8h + -4) + 8 + iVar2 * 0x22c) == *(arg_8h + -8)) {\n                    fcn.00403b80(*in_ECX);\n                    fcn.00403760(0);\n                    uStack60 = 0x41628c;\n                    fcn.00403850();\n                }\n                else {\n                    fcn.00403b80(*in_ECX);\n                    fcn.00403760(0);\n                    uStack60 = 0x41628c;\n                    fcn.00403850();\n                }\n                fcn.004160ec(arg_8h);\n                fcn.00403798();\n                *(*(arg_8h + -4) + 0x20 + iVar2 * 0x22c) = 2;\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x416270;\n    uStack56 = 0x416268;\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 543
    },
    "00416290": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00416290(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint *puVar9;\n    uint *in_FS_OFFSET;\n    uint uStack636;\n    uint uStack632;\n    uchar *puStack628;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    int32_t var_18h;\n    uint var_14h;\n    char var_dh;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack628 = &stack0xfffffffc;\n    var_4h = 0;\n    var_14h = 0;\n    uStack632 = 0x4165c6;\n    uStack636 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack636;\n    fcn.004069a8();\n    uVar1 = fcn.00403990();\n    uVar1 = fcn.00404ec0(0x416600, uVar1);\n    pcVar2 = fcn.00404e98(uVar1);\n    fcn.004069a8();\n    uVar1 = fcn.00403990();\n    uVar1 = fcn.00404ec0(0x416600, uVar1);\n    pcVar3 = fcn.00404e98(uVar1);\n    fcn.004069a8();\n    uVar1 = fcn.00403990();\n    fcn.004069a8(uVar1);\n    uVar1 = fcn.00403990();\n    uVar1 = fcn.00404ec0(uVar1);\n    pcVar4 = fcn.00404e98(uVar1);\n    fcn.004034e4();\n    uVar1 = 2;\n    iVar5 = (*pcVar2)(2, 0);\n    if (iVar5 != -1) {\n        var_244h = 0x22c;\n        iVar6 = (*pcVar3)(iVar5, &var_244h);\n        while (iVar6 != 0) {\n            iVar6 = fcn.00404648();\n            fcn.00404804(iVar6 + 1);\n            iVar6 = fcn.00404648();\n            puVar8 = &var_244h;\n            puVar9 = var_4h + -0x22c + iVar6 * 0x22c;\n            for (iVar7 = 0x8b; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *puVar9 = *puVar8;\n                puVar8 = puVar8 + 1;\n                puVar9 = puVar9 + 1;\n            }\n            iVar6 = fcn.00404648();\n            *(var_4h + -0x20c + iVar6 * 0x22c) = 0;\n            iVar6 = (*pcVar4)(iVar5, &var_244h);\n        }\n        (***0x41b1b4)(iVar5);\n    }\n    iVar5 = fcn.00404648();\n    if (-1 < iVar5 + -1) {\n        iVar6 = 0;\n        var_18h = iVar5;\n        do {\n            var_dh = '\\x01';\n            iVar5 = fcn.00404648();\n            if (-1 < iVar5 + -1) {\n                iVar7 = 0;\n                do {\n                    if (*(var_4h + 0x18 + iVar6 * 0x22c) == *(var_4h + 8 + iVar7 * 0x22c)) {\n                        var_dh = '\\0';\n                    }\n                    iVar7 = iVar7 + 1;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            if (*(var_4h + 0x18 + iVar6 * 0x22c) == *(var_4h + 8 + iVar6 * 0x22c)) {\n                var_dh = '\\x01';\n            }\n            if (var_dh == '\\x01') {\n                *(var_4h + 0x20 + iVar6 * 0x22c) = 1;\n            }\n            iVar6 = iVar6 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    var_8h = fcn.00404e70();\n    iVar5 = fcn.00404648();\n    if (-1 < iVar5 + -1) {\n        iVar6 = 0;\n        var_18h = iVar5;\n        do {\n            if (*(var_4h + 0x20 + iVar6 * 0x22c) == 1) {\n                if (*(var_4h + 8 + iVar6 * 0x22c) == var_8h) {\n                    fcn.00403760(var_14h);\n                    uVar1 = 0x416680;\n                    fcn.00403850();\n                }\n                else {\n                    fcn.00403760(var_14h);\n                    uVar1 = 0x416680;\n                    fcn.00403850();\n                }\n                fcn.004160ec(&stack0xfffffffc);\n                fcn.00403798();\n            }\n            fcn.00403538();\n            iVar6 = iVar6 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00403508(0x4165cd);\n    fcn.004034e4();\n    fcn.00404810();\n    return;\n}\n",
        "token_count": 1341
    },
    "00416edc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416edc(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puVar4;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x416f9f;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack40;\n    uVar3 = 0;\n    var_4h = 0;\n    var_8h = 0;\n    puVar4 = &var_4h;\n    (**0x41cb14)(puVar4, &var_8h);\n    if (var_8h != 0) {\n        fcn.00404804(var_8h);\n        (**0x41cb18)(var_4h, var_8h, 0);\n        for (; uVar3 < var_4h; uVar3 = uVar3 + 1) {\n            iVar2 = (**0x41cb04)(*(uVar3 * 0x4c + 0x30));\n            if (iVar2 == 0) break;\n        }\n        if (uVar3 < var_4h) {\n            puVar1 = uVar3 * 0x4c;\n            *param_2 = *puVar1;\n            param_2[1] = puVar1[1];\n            param_2[2] = puVar1[2];\n            param_2[3] = puVar1[3];\n        }\n    }\n    *in_FS_OFFSET = puVar4;\n    iStack40 = 0x416fa6;\n    fcn.00404810();\n    return;\n}\n",
        "token_count": 434
    },
    "00416fb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416fb0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack204;\n    uint uStack200;\n    uchar *puStack196;\n    uint var_b0h;\n    uint var_ach;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint var_9ch;\n    uint var_98h;\n    uint *var_94h;\n    uint var_90h;\n    uint var_80h;\n    uint var_78h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack196 = &stack0xfffffffc;\n    var_18h = NULL;\n    uStack200 = 0x4171d7;\n    uStack204 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff34;\n    if ((((((*0x41cb04 != 0) && (*0x41cb08 != NULL)) && (*0x41cb0c != NULL)) &&\n         ((*0x41cb10 != NULL && (*0x41cb14 != 0)))) &&\n        ((*0x41cb18 != 0 && ((*0x41cb1c != NULL && (*0x41cb20 != NULL)))))) &&\n       ((*0x41cb24 != NULL && (*0x41cb28 != NULL)))) {\n        var_38h = 1;\n        var_34h = 0;\n        var_30h = 0;\n        var_2ch = 0;\n        var_8h = in_EDX;\n        var_4h = in_EAX;\n        iVar1 = (**0x41cb08)(&fcn.00416fb0::var_10h, &fcn.00416fb0::var_38h, 0);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00404f28(0);\n            uVar3 = fcn.00404f00(0);\n            uVar4 = fcn.00404ef8(uVar2, var_4h, var_8h);\n            fcn.00404f18(uVar3, uVar4);\n            fcn.00404ef0(uVar3, 0, 0, var_4h, var_8h, uVar2, var_ch, arg_14h, 0xcc0020);\n            uVar5 = fcn.0040495c();\n            (**0x41cb24)(0, 0xffffffff, uVar5);\n            (**0x41cb10)(uVar4, 0, &fcn.00416fb0::var_14h);\n            fcn.00416edc();\n            var_b0h = 1;\n            var_ach = *0x41b0ec;\n            uStack172 = *0x41b0f0;\n            uStack168 = *0x41b0f4;\n            uStack164 = *0x41b0f8;\n            var_9ch = 1;\n            var_98h = 4;\n            var_94h = &fcn.00416fb0::arg_10h;\n            (**0x41cb20)(var_14h, var_18h, &fcn.00416fb0::var_90h, &fcn.00416fb0::var_b0h);\n            (**(*var_18h + 0x30))(var_18h, &fcn.00416fb0::var_80h, 1);\n            (**0x41cb28)(var_18h, &fcn.00416fb0::var_1ch);\n            fcn.00404eb0(var_1ch);\n            fcn.004035d4();\n            (**0x41cb1c)(var_14h);\n            fcn.00404eb8(var_1ch);\n            fcn.00404f10(uVar4);\n            fcn.00404f08(uVar3);\n            fcn.00404f38(0, uVar2);\n            (**0x41cb0c)(var_10h);\n        }\n    }\n    *in_FS_OFFSET = uStack204;\n    puStack196 = 0x4171de;\n    uStack200 = 0x4171d6;\n    fcn.0040495c();\n    return;\n}\n",
        "token_count": 1070
    },
    "00417820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417820(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *puVar5;\n    int32_t iStack1512;\n    uint uStack1508;\n    uchar *puStack1504;\n    uint var_5d0h;\n    uint var_5cch;\n    uint var_5c8h;\n    uint var_5c4h;\n    uint var_5c0h;\n    uint var_5bch;\n    uint var_1bch;\n    uint32_t var_1b8h;\n    uint var_1ach;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    var_1ch = 0;\n    puStack1504 = 0x417868;\n    var_8h = in_EDX;\n    fcn.00403980();\n    puStack1504 = 0x417870;\n    fcn.00403980();\n    puStack1504 = 0x417878;\n    fcn.00403980();\n    puStack1504 = 0x417880;\n    fcn.00403980();\n    puStack1504 = 0x417888;\n    fcn.00403980();\n    uStack1508 = 0x417c31;\n    iStack1512 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffa18;\n    puStack1504 = &stack0xfffffffc;\n    fcn.0040357c();\n    uVar1 = fcn.004039e8();\n    puVar2 = fcn.00404e90(uVar1);\n    if (puVar2 == NULL) {\n        uVar1 = fcn.004039e8();\n        puVar2 = fcn.00404ec8(uVar1);\n    }\n    iVar3 = fcn.004039e8();\n    *0x41cb38 = fcn.00404e98(puVar2, iVar3 + 0xc);\n    iVar3 = fcn.004039e8();\n    *0x41cb3c = fcn.00404e98(puVar2, iVar3 + 0x17);\n    iVar3 = fcn.004039e8();\n    *0x41cb40 = fcn.00404e98(puVar2, iVar3 + 0x25);\n    iVar3 = fcn.004039e8();\n    *0x41cb44 = fcn.00404e98(puVar2, iVar3 + 0x2c);\n    iVar3 = fcn.004039e8();\n    *0x41cb48 = fcn.00404e98(puVar2, iVar3 + 0x31);\n    iVar3 = fcn.004039e8();\n    *0x41cb4c = fcn.00404e98(puVar2, iVar3 + 0x36);\n    iVar3 = fcn.004039e8();\n    *0x41cb50 = fcn.00404e98(puVar2, iVar3 + 0x3c);\n    iVar3 = fcn.004039e8();\n    puVar5 = puVar2;\n    *0x41cb54 = fcn.00404e98(puVar2, iVar3 + 0x44);\n    if ((((((puVar2 != NULL) && (*0x41cb38 != NULL)) && (*0x41cb3c != NULL)) &&\n         ((*0x41cb40 != NULL && (*0x41cb44 != NULL)))) &&\n        ((*0x41cb48 != NULL && ((*0x41cb4c != NULL && (*0x41cb50 != NULL)))))) && (*0x41cb54 != NULL)) {\n        fcn.004034e4();\n        uVar1 = fcn.00404f40(&fcn.00417820::var_1ach);\n        iVar3 = (**0x41cb38)(uVar1);\n        if (iVar3 == 0) {\n            iVar3 = (**0x41cb40)(2, 1, 0);\n            if (iVar3 != -1) {\n                var_1bch._0_2_ = 2;\n                uVar1 = fcn.00403990();\n                iVar4 = (**0x41cb3c)(uVar1);\n                if (iVar4 != 0) {\n                    var_1b8h = ***(iVar4 + 0xc);\n                    var_1bch._2_2_ = (**0x41cb4c)(var_1b8h & 0xffff0000 | arg_ch & 0xffff);\n                    iVar4 = (**0x41cb50)(iVar3, &fcn.00417820::var_1bch, 0x10);\n                    if (iVar4 == 0) {\n                        fcn.00403850(0x417d50, 0x417cd4, 0x417d14, 0x417cfc, 0x417ce0, 0x417cd4, arg_14h, 0x417cc4, \n                                     0x417cb0, var_8h, 0x417ca4, var_ch);\n                        fcn.00403d88();\n                        fcn.00403790(0);\n                        fcn.0041745c();\n                        fcn.00403d88(0x417d68, 0);\n                        fcn.00403e78(0);\n                        fcn.0040377c();\n                        uVar1 = fcn.00403790(0);\n                        uVar1 = fcn.004039e8(uVar1);\n                        (**0x41cb44)(iVar3, uVar1);\n                        fcn.004034e4();\n                        do {\n                            fcn.004034e4();\n                            fcn.004028e0();\n                            iVar4 = (**0x41cb48)(iVar3, &fcn.00417820::var_5bch, 0x400, 0);\n                            fcn.004035d4();\n                            fcn.00403798();\n                        } while (0 < iVar4);\n                        (**0x41cb54)(iVar3);\n                        puVar5 = &fcn.00417820::var_14h;\n                        iVar3 = fcn.00403ad4();\n                        fcn.00403790(iVar3 + 4);\n                        fcn.004039f0();\n                        fcn.00403538();\n                    }\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = puVar5;\n    fcn.00403bf4(0x417c38);\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 1613
    },
    "00417d84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417d84(uint arg_8h)\n\n{\n    code *pcVar1;\n    ushort extraout_var;\n    int32_t iVar2;\n    uint32_t arg_ch;\n    int32_t iVar3;\n    uint32_t in_EDX;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    uchar auStackY69412 [65636];\n    uint var_ebch;\n    uint *puStackY3772;\n    uint uStackY3768;\n    uint *puStackY3760;\n    uint uStackY3756;\n    uint16_t uStackY3752;\n    uint *puStackY3748;\n    uint uStackY3744;\n    uint *puStackY3740;\n    uint uStackY3736;\n    uint *puStackY3732;\n    uint uStackY3728;\n    uint *puStackY3724;\n    uint uStackY3720;\n    uint var_e80h;\n    uint var_a80h;\n    uint var_280h;\n    uint var_200h;\n    uint var_180h;\n    uint uStackY280;\n    int32_t iStackY276;\n    int32_t iStackY272;\n    uchar *puStackY268;\n    uint uStackY264;\n    uint *puStackY260;\n    uint32_t uStackY256;\n    uint uStackY252;\n    uint *puStackY248;\n    uint uStackY244;\n    uint uStackY240;\n    uint uStackY236;\n    uint32_t uStackY232;\n    uint32_t uStackY228;\n    int32_t iStackY224;\n    uint *puStackY220;\n    uint uStackY216;\n    uint uStackY212;\n    uint uStackY208;\n    uint uStackY204;\n    uint uStackY200;\n    uint uStackY196;\n    int32_t iStackY192;\n    uint uStackY188;\n    uint *puStackY184;\n    uint *arg_8h_00;\n    uint var_80h;\n    uint uStack128;\n    uint *puStack124;\n    uint32_t uStack120;\n    int32_t iStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint32_t uStack104;\n    int32_t var_60h;\n    uint32_t var_5ch;\n    int32_t var_58h;\n    uint32_t var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uchar auStack76 [3];\n    uint32_t var_45h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    code *var_2ch;\n    code *var_28h;\n    code *var_24h;\n    code *var_20h;\n    code *var_1ch;\n    code *var_18h;\n    code *var_14h;\n    code *var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = 0x21e7;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_ch = 0;\n    var_1ch = 0x417dab;\n    var_8h = in_EDX;\n    fcn.00403980();\n    var_1ch = 0x417db3;\n    fcn.00403980();\n    var_1ch = 0x417dbb;\n    fcn.00403980();\n    var_20h = 0x418292;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00417d84::var_24h;\n    var_1ch = &stack0xfffffffc;\n    if (var_ch == 0) {\n        var_28h = 0x417de2;\n        var_1ch = &stack0xfffffffc;\n        fcn.0040357c();\n    }\n    var_28h = 0x417dea;\n    fcn.004034e4();\n    var_28h = 0x417df5;\n    fcn.0040357c();\n    _auStack76 = _auStack76 & 0xffffff;\n    var_28h = 0x417e06;\n    fcn.0040357c();\n    var_28h = 0x417e0e;\n    var_28h = fcn.004039e8();\n    var_2ch = 0x417e14;\n    uStack120 = fcn.00404e90();\n    if (uStack120 == 0) {\n        var_2ch = 0x417e22;\n        var_2ch = fcn.004039e8();\n        var_30h = 0x417e28;\n        uStack120 = fcn.00404ec8();\n    }\n    var_30h = 0x417e32;\n    var_30h = fcn.004039e8();\n    var_30h = var_30h + 0xc;\n    var_38h = 0x417e3c;\n    var_34h = uStack120;\n    var_10h = fcn.00404e98();\n    var_38h = 0x417e47;\n    var_38h = fcn.004039e8();\n    var_38h = var_38h + 0x1a;\n    var_40h = 0x417e51;\n    var_3ch = uStack120;\n    var_14h = fcn.00404e98();\n    var_40h = 0x417e5c;\n    var_40h = fcn.004039e8();\n    var_40h = var_40h + 0x2b;\n    _auStack76 = 0x417e66;\n    unique0x10000606 = uStack120;\n    var_18h = fcn.00404e98();\n    _auStack76 = 0x417e71;\n    iVar3 = fcn.004039e8();\n    _auStack76 = iVar3 + 0x3c;\n    var_50h = 0x417e7b;\n    var_4ch = uStack120;\n    var_1ch = fcn.00404e98();\n    var_50h = 0x417e86;\n    var_50h = fcn.004039e8();\n    var_50h = var_50h + 0x53;\n    var_58h = 0x417e90;\n    var_54h = uStack120;\n    var_20h = fcn.00404e98();\n    var_58h = 0x417e9b;\n    var_58h = fcn.004039e8();\n    var_58h = var_58h + 100;\n    var_60h = 0x417ea5;\n    var_5ch = uStack120;\n    var_24h = fcn.00404e98();\n    var_60h = 0x417eb0;\n    var_60h = fcn.004039e8();\n    var_60h = var_60h + 0x75;\n    iStack108 = 0x417eba;\n    uStack104 = uStack120;\n    pcVar1 = fcn.00404e98();\n    iStack108 = 0x417ec4;\n    iStack108 = fcn.004039e8();\n    iStack108 = iStack108 + 0x89;\n    iStack116 = 0x417ed0;\n    uStack112 = uStack120;\n    var_28h = fcn.00404e98();\n    iStack116 = 0x417edb;\n    iStack116 = fcn.004039e8();\n    iStack116 = iStack116 + 0x9b;\n    puStack124 = 0x417ee7;\n    var_2ch = fcn.00404e98();\n    puStack124 = 0x417ef7;\n    fcn.00404f5c();\n    puStack124 = 0x417f07;\n    fcn.00404f5c();\n    puStack124 = 0x417f17;\n    fcn.00404f5c();\n    puStack124 = 0x417f27;\n    fcn.00404f5c();\n    puStack124 = 0x417f37;\n    fcn.00404f5c();\n    puStack124 = 0x417f47;\n    fcn.00404f5c();\n    puStack124 = 0x417f53;\n    fcn.00404f5c();\n    var_ebch = 0x3c;\n    puStackY3772 = &fcn.00417d84::var_80h;\n    uStackY3768 = 0x20;\n    puStackY3760 = &fcn.00417d84::var_180h;\n    uStackY3756 = 0x100;\n    puStackY3748 = &fcn.00417d84::var_200h;\n    uStackY3744 = 0x80;\n    puStackY3740 = &fcn.00417d84::var_280h;\n    uStackY3736 = 0x80;\n    puStackY3732 = &fcn.00417d84::var_a80h;\n    uStackY3728 = 0x800;\n    puStackY3724 = &fcn.00417d84::var_e80h;\n    uStackY3720 = 0x400;\n    uStack128 = 0x90000000;\n    var_80h = 0x417fc4;\n    puStack124 = &fcn.00417d84::var_ebch;\n    var_80h = fcn.00403790();\n    fcn.00403990();\n    (*var_28h)();\n    fcn.004036dc();\n    fcn.00403790();\n    fcn.004039f0();\n    iVar3 = fcn.00403ad4();\n    if (iVar3 != 0) {\n        _auStack76 = CONCAT13(1, auStack76);\n        fcn.004036dc();\n        fcn.004037dc();\n        fcn.00417668();\n        puStackY3760 = fcn.00403990();\n    }\n    iVar3 = (*var_10h)();\n    if (iVar3 != 0) {\n        var_50h = 3000000;\n        (*var_2ch)();\n        puStackY184 = &fcn.00417d84::var_50h;\n        uStackY188 = 5;\n        uStackY196 = 0x41808b;\n        iStackY192 = iVar3;\n        (*var_2ch)();\n        uStackY196 = 0;\n        uStackY200 = 0;\n        uStackY204 = 3;\n        uStackY208 = 0;\n        uStackY212 = 0;\n        uStackY216 = CONCAT22(extraout_var, uStackY3752);\n        puStackY220 = puStackY3760;\n        uStackY228 = 0x4180a2;\n        iStackY224 = iVar3;\n        var_3ch = (*var_14h)();\n        if (var_3ch != 0) {\n            var_4ch = 0x84003300;\n            uStackY228 = 0x4180c4;\n            fcn.004036dc();\n            uStackY228 = 0x4180d4;\n            iVar2 = fcn.00403ad4();\n            if (iVar2 != 0) {\n                var_4ch = var_4ch | 0x800000;\n            }\n            uStackY228 = 0;\n            uStackY232 = var_4ch;\n            uStackY236 = 0;\n            uStackY240 = 0;\n            uStackY244 = 0;\n            puStackY248 = puStackY3732;\n            uStackY252 = 0x4180f7;\n            uStackY252 = fcn.00403990();\n            uStackY256 = var_3ch;\n            puStackY260 = 0x4180ff;\n            var_40h = (*var_18h)();\n            if (var_40h != 0) {\n                if (var_45h != '\\0') {\n                    puStackY260 = 0xa0000000;\n                    uStackY264 = 0x41811f;\n                    uStackY264 = fcn.00403790();\n                    puStackY268 = 0x418128;\n                    puStackY268 = fcn.00403990();\n                    iStackY272 = var_40h;\n                    iStackY276 = 0x418130;\n                    (*var_1ch)();\n                }\n                puStackY260 = 0x418138;\n                puStackY260 = fcn.00403790();\n                uStackY264 = 0x418141;\n                uStackY264 = fcn.00403990();\n                puStackY268 = NULL;\n                iStackY272 = 0x4183cc;\n                iStackY276 = var_40h;\n                uStackY280 = 0x418150;\n                iVar2 = (*var_20h)();\n                do {\n                    if (iVar2 == 0) break;\n                    puStackY260 = 0x418164;\n                    fcn.00404f5c();\n                    puStackY260 = &fcn.00417d84::var_38h;\n                    uStackY264 = 0x10064;\n                    puStackY268 = &stack0xfffef0dc;\n                    iStackY272 = var_40h;\n                    iStackY276 = 0x41817b;\n                    *NULL = (*var_24h)();\n                    puStackY260 = 0x41818f;\n                    fcn.004035d4();\n                    puStackY260 = 0x41819a;\n                    fcn.00403798();\n                    iVar2 = var_38h;\n                } while (stack0xffffffb8 != 0);\n            }\n            puStackY260 = var_40h;\n            uStackY264 = 0x4181b1;\n            (*pcVar1)();\n        }\n        uStackY228 = var_3ch;\n        uStackY232 = 0x4181b7;\n        (*pcVar1)();\n    }\n    (*pcVar1)();\n    uVar4 = var_58h == 0;\n    if (uVar4) {\n        arg_ch = var_8h & 0xffff0000 | uStackY3752;\n        arg_8h_00 = &fcn.00417d84::var_58h;\n        puStackY184 = 0x4181df;\n        iVar2 = var_60h;\n        fcn.004036dc();\n        uStackY188 = 0x4181f4;\n        fcn.004036dc();\n        puStackY184 = 0x418203;\n        fcn.00417820(arg_8h_00, arg_ch, var_8h, iVar2);\n    }\n    fcn.004038dc();\n    if (uVar4) {\n        fcn.0040627c();\n        fcn.004038dc();\n    }\n    fcn.00403538();\n    fcn.004034e4();\n    *in_FS_OFFSET = iVar3;\n    fcn.00403508();\n    fcn.00403508();\n    fcn.00403508();\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 3566
    },
    "004186c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_52h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_144h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004186c4(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    bool bVar6;\n    uint8_t uVar7;\n    uchar uVar8;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint *var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint32_t var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint32_t var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint *var_1dch;\n    uint var_1d8h;\n    int32_t var_1d4h;\n    uint var_1d0h;\n    uint *var_1cch;\n    uint *var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint32_t var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    int32_t var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint *var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    int32_t var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint *var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint *var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    int32_t var_130h;\n    uint var_12ch;\n    uint *var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uchar auStack244 [3];\n    uint var_edh;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint var_6ch;\n    uint *var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    uchar auStack88 [2];\n    int32_t var_52h;\n    uint *var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    int32_t *var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar3 = 0x50;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x4186e1;\n    var_14h = unaff_EDI;\n    var_4h = in_EAX;\n    fcn.00403980();\n    var_1ch = 0x41985e;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004186c4::var_20h;\n    var_24h = 0x4186f7;\n    var_18h = &stack0xfffffffc;\n    fcn.004034e4();\n    _auStack88 = auStack88;\n    var_24h = 0x41870c;\n    fcn.0040357c();\n    var_24h = 0x418711;\n    fcn.00405668();\n    var_24h = 0x41871c;\n    fcn.00407de0();\n    var_24h = &fcn.004186c4::var_130h;\n    var_28h = 0x41872e;\n    fcn.00406ce8();\n    var_24h = 0x41873a;\n    fcn.00403798();\n    var_24h = 0x418745;\n    var_24h = fcn.00403990();\n    var_28h = 0;\n    var_2ch = NULL;\n    var_30h = 0x418753;\n    (***0x41b39c)();\n    var_30h = 0x41875f;\n    iVar3 = (***0x41b12c)();\n    if (iVar3 != 0xb7) {\n        var_30h = 0x418777;\n        fcn.0040357c();\n        var_30h = 0x418789;\n        fcn.00416dd4();\n        var_30h = 0x418797;\n        fcn.004069a8();\n        var_30h = 0x4187a5;\n        fcn.0040357c();\n        var_30h = 0x4187b0;\n        fcn.00406ce8();\n        var_30h = 0x4187c1;\n        fcn.00406834();\n        var_30h = 0x4187d4;\n        fcn.004037dc();\n        var_30h = 0x4187e4;\n        fcn.00416dd4();\n        var_30h = &fcn.004186c4::var_10h;\n        var_34h = 0x4187f5;\n        fcn.00417d84(var_30h);\n        var_34h = 0x418805;\n        fcn.00416dd4();\n        var_34h = 0x41880d;\n        iVar3 = fcn.00403790();\n        bVar6 = iVar3 == 10000;\n        if (9999 < iVar3) {\n            var_34h = 0x418825;\n            fcn.004038dc();\n            if (!bVar6) {\n                var_34h = &fcn.004186c4::var_144h;\n                var_38h = 0x418844;\n                fcn.004074e8(var_34h);\n                var_38h = 0x418852;\n                fcn.004069a8();\n                var_38h = &fcn.004186c4::var_148h;\n                var_3ch = 0x41886b;\n                fcn.004074e8(var_38h);\n                var_3ch = 0x418879;\n                fcn.00406b08();\n                var_3ch = 0x418889;\n                fcn.00407a18();\n                var_3ch = &fcn.004186c4::var_150h;\n                var_40h = 0x4188a2;\n                fcn.004074e8(var_3ch);\n                var_40h = 0x4188b3;\n                fcn.004069a8();\n                var_40h = 0x4188be;\n                fcn.00408180();\n                var_40h = 0x4188c6;\n                fcn.00409668();\n                var_40h = 0x4188cd;\n                fcn.0040e630();\n                var_40h = 0x4188d5;\n                iVar3 = fcn.00404648();\n                if (-1 < iVar3 + -1) {\n                    iVar4 = 0;\n                    do {\n                        var_30h = 0x4188ee;\n                        iVar1 = fcn.00403790();\n                        if (4 < iVar1) {\n                            if (iVar4 == 0) {\n                                if (*(*var_2ch + 1) == '+') {\n                                    var_30h = 0x418910;\n                                    fcn.0040e1dc();\n                                    var_30h = 0x41891b;\n                                    fcn.00405424();\n                                    var_30h = 0x41892b;\n                                    fcn.0040e6d4();\n                                }\n                                if (*(*var_2ch + 2) == '+') {\n                                    var_30h = 0x41893c;\n                                    fcn.00413bb4();\n                                    var_30h = 0x418947;\n                                    fcn.00405574();\n                                    var_30h = 0x41895a;\n                                    fcn.0040e6d4();\n                                }\n                                if (*(*var_2ch + 9) == '+') {\n                                    var_30h = 0x41896b;\n                                    fcn.00413be8();\n                                }\n                                if (*(*var_2ch + 3) == '+') {\n                                    var_30h = 0x418985;\n                                    fcn.00414de8();\n                                    var_30h = NULL;\n                                    var_34h = 0x7d0;\n                                    var_38h = 0x1;\n                                    var_3ch = NULL;\n                                    var_40h = 0;\n                                    var_44h = 0x4189a6;\n                                    iVar1 = fcn.00413f58(0, 0, 1, 2000, 0);\n                                    **0x41b2c4 = **0x41b2c4 + iVar1;\n                                    var_44h = 0;\n                                    var_48h = 2000;\n                                    var_4ch = 0x1;\n                                    stack0xffffffac = 0;\n                                    _auStack88 = 0;\n                                    var_58h = 0x4189cf;\n                                    iVar1 = fcn.00413f58(0, 0, 1, 2000, 0);\n                                    **0x41b2c4 = **0x41b2c4 + iVar1;\n                                    var_58h = 0;\n                                    var_5ch = 5000;\n                                    var_60h = 1;\n                                    var_64h = 0;\n                                    var_68h = NULL;\n                                    iVar1 = fcn.00413f58(0, 0, 1, 5000, 0);\n                                    **0x41b2c4 = **0x41b2c4 + iVar1;\n                                    iVar1 = fcn.00413f58(0, 0, 1, 5000, 0);\n                                    if (0 < iVar1) {\n                                        **0x41b2c4 = **0x41b2c4 + 1;\n                                    }\n                                    iVar1 = fcn.00413f58(0, 0, 1, 5000, 0);\n                                    if (0 < iVar1) {\n                                        **0x41b2c4 = **0x41b2c4 + 1;\n                                    }\n                                    uStack172 = 0x418a79;\n                                    iVar1 = fcn.00413f58(0, 0, 1, 5000, 0);\n                                    if (0 < iVar1) {\n                                        **0x41b2c4 = **0x41b2c4 + 1;\n                                    }\n                                    if (0 < **0x41b2c4) {\n                                        uStack172 = 0x418a98;\n                                        fcn.00405114();\n                                    }\n                                }\n                                if (*(*var_2ch + 4) == '+') {\n                                    var_30h = 0x418aae;\n                                    fcn.00414808();\n                                }\n                                if (*(*var_2ch + 5) == '+') {\n                                    var_30h = NULL;\n                                    var_34h = 0x3e8;\n                                    var_38h = 0x1;\n                                    var_3ch = NULL;\n                                    var_40h = 0;\n                                    var_44h = 0x418adb;\n                                    fcn.00413f58(0, 0, 1, 1000, 0);\n                                }\n                                if (*(*var_2ch + 6) == '+') {\n                                    var_30h = 0x418af1;\n                                    fcn.00414a90();\n                                }\n                                if (*(*var_2ch + 7) == '+') {\n                                    var_30h = NULL;\n                                    var_34h = 0x32;\n                                    var_38h = 0x419d84;\n                                    var_3ch = &fcn.004186c4::var_40h;\n                                    var_40h = 1;\n                                    var_44h = 0x418b11;\n                                    var_44h = fcn.00404f30();\n                                    var_48h = 0;\n                                    var_4ch = 0x418b19;\n                                    fcn.00404f30();\n                                    var_48h = 0x418b21;\n                                    fcn.00416fb0(var_44h, var_40h, var_3ch, var_38h);\n                                    var_48h = 0x418b2e;\n                                    fcn.0040e6d4();\n                                }\n                                if (*(*var_2ch + 8) == '+') {\n                                    _auStack88 = CONCAT12(1, auStack88);\n                                    _auStack88 = _auStack88 & 0xff000000 | _auStack88;\n                                }\n                            }\n                            if (*var_2ch[iVar4] == 'F') {\n                                var_30h = 0x418b60;\n                                fcn.00407a18();\n                                var_30h = 0x418b6e;\n                                fcn.0040357c();\n                                var_30h = 0x418b7b;\n                                iVar1 = fcn.00403ad4();\n                                uVar7 = iVar1 == 1;\n                                if (uVar7) {\n                                    var_30h = &fcn.004186c4::var_68h;\n                                    var_34h = 0x418b98;\n                                    fcn.004074e8(var_30h);\n                                    var_34h = &fcn.004186c4::var_edh;\n                                    var_38h = 0x81;\n                                    var_3ch = 0x418bad;\n                                    iVar1 = (***0x41b240)();\n                                    if (iVar1 == 0) goto code_r0x0041965c;\n                                    for (puVar5 = &fcn.004186c4::var_edh; *puVar5 != '\\0'; puVar5 = puVar5 + 1) {\n                                        var_34h = 0x418bca;\n                                        var_30h = puVar5;\n                                        (***0x41b114)();\n                                        var_30h = 0x418bd5;\n                                        fcn.0040709c();\n                                        var_30h = 0x418be6;\n                                        fcn.0040377c();\n                                        var_30h = 0x418bf4;\n                                        iVar1 = fcn.00403ad4();\n                                        if (iVar1 != 0) {\n                                            var_30h = &fcn.004186c4::var_164h;\n                                            var_34h = 0x418c10;\n                                            fcn.00403cf4();\n                                            var_34h = var_168h;\n                                            var_38h = 0x419dc0;\n                                            var_3ch = var_68h;\n                                            var_40h = 0x419ddc;\n                                            var_44h = 0x418c34;\n                                            fcn.00403850();\n                                            var_44h = 0x418c45;\n                                            fcn.00403d88();\n                                            var_44h = var_16ch;\n                                            var_48h = 0x418c5a;\n                                            fcn.00403d88();\n                                            var_40h = 0x418c67;\n                                            fcn.0040717c(var_3ch);\n                                            var_40h = 0x418c75;\n                                            fcn.0040377c();\n                                            var_40h = 0x418c7d;\n                                            fcn.004034e4();\n                                            var_40h = var_30h[1];\n                                            var_44h = 0x419de8;\n                                            var_48h = var_64h;\n                                            var_4ch = 0x418c98;\n                                            fcn.00403850();\n                                            var_4ch = &fcn.004186c4::var_178h;\n                                            stack0xffffffac = 0x418cad;\n                                            fcn.00403d88();\n                                            uVar7 = 1;\n                                            stack0xffffffac = 0x418cbf;\n                                            fcn.0040717c(var_4ch);\n                                            stack0xffffffac = 0x418ccf;\n                                            fcn.00403db4();\n                                            stack0xffffffac = 0x418cdd;\n                                            fcn.0040377c();\n                                            stack0xffffffac = 0x418ceb;\n                                            fcn.00403d88();\n                                            stack0xffffffac = 0x418cfc;\n                                            fcn.004078d8();\n                                            stack0xffffffac = 0x418d0a;\n                                            fcn.0040377c();\n                                            stack0xffffffac = 0x418d1b;\n                                            fcn.00403d88();\n                                            stack0xffffffac = var_188h;\n                                            _auStack88 = 0x418d33;\n                                            fcn.00403d88();\n                                            _auStack88 = 0x418d3e;\n                                            _auStack88 = fcn.00407108();\n                                            var_58h = 0x418d4f;\n                                            uVar2 = fcn.004038dc();\n                                            var_58h = uVar2 & 0xffffff00 | uVar7;\n                                            var_5ch = 0x418d63;\n                                            uVar2 = fcn.004038dc();\n                                            var_5ch = uVar2 & 0xffffff00 | uVar7;\n                                            var_60h = 1;\n                                            var_64h = 0x418d7c;\n                                            fcn.004037dc();\n                                            var_64h = 0x418d8d;\n                                            fcn.00403d88();\n                                            var_64h = var_190h;\n                                            var_68h = 0x418da5;\n                                            fcn.00403d88();\n                                            var_68h = var_198h;\n                                            fcn.004037dc();\n                                            fcn.00403d88();\n                                            var_64h = 0x418ddd;\n                                            fcn.00413f58(var_2ch, var_5ch, var_58h, _auStack88, stack0xffffffac);\n                                        }\n                                    }\n                                }\n                                else {\n                                    var_30h = 0x418dff;\n                                    fcn.00403d88();\n                                    var_30h = var_1a4h;\n                                    var_34h = 0x418e17;\n                                    fcn.00403d88();\n                                    var_34h = 0x418e22;\n                                    var_34h = fcn.00407108();\n                                    var_38h = 0x418e33;\n                                    uVar2 = fcn.004038dc();\n                                    var_38h = uVar2 & 0xffffff00 | uVar7;\n                                    var_3ch = 0x418e47;\n                                    uVar2 = fcn.004038dc();\n                                    var_3ch = uVar2 & 0xffffff00 | uVar7;\n                                    var_40h = 1;\n                                    var_44h = 0x419e10;\n                                    var_48h = *(var_30h + 4);\n                                    var_4ch = 0x419de8;\n                                    stack0xffffffac = 0x418e6d;\n                                    fcn.00403850();\n                                    stack0xffffffac = 0x418e7e;\n                                    fcn.00403d88();\n                                    stack0xffffffac = var_1ach;\n                                    _auStack88 = 0x418e96;\n                                    fcn.00403d88();\n                                    _auStack88 = var_1b4h;\n                                    var_58h = 0x418eb3;\n                                    fcn.004037dc();\n                                    var_58h = 0x418ec4;\n                                    fcn.00403d88();\n                                    stack0xffffffac = 0x418ed1;\n                                    fcn.00413f58(var_2ch, var_48h, var_44h, var_40h, var_3ch);\n                                }\n                            }\n                            if (*var_2ch[iVar4] == 'L') {\n                                var_30h = var_48h;\n                                var_34h = var_2ch[iVar4];\n                                var_38h = 0x419988;\n                                var_3ch = 0x418ef7;\n                                fcn.00403850();\n                            }\n                            uVar8 = *var_2ch[iVar4] == 'I';\n                            if (uVar8) {\n                                var_30h = 0x418f19;\n                                fcn.00407a18();\n                                var_30h = 0x418f29;\n                                fcn.004038dc();\n                                if (uVar8) {\n                                    _auStack88 = CONCAT13(1, _auStack88);\n                                    var_30h = &fcn.004186c4::var_1ch;\n                                    var_34h = 0x418f44;\n                                    fcn.00417d84(var_30h);\n                                    var_34h = &fcn.004186c4::var_4ch;\n                                    var_38h = 0x418f5a;\n                                    fcn.004074e8(var_34h);\n                                    var_38h = &fcn.004186c4::var_52h + 2;\n                                    var_3ch = 0x418f70;\n                                    fcn.004074e8(var_38h);\n                                    var_3ch = var_4ch;\n                                    var_40h = 0x419e90;\n                                    var_44h = stack0xffffffac;\n                                    var_48h = 0x418f8b;\n                                    fcn.00403850();\n                                    var_48h = 0x418f9b;\n                                    fcn.0040e6d4();\n                                }\n                                else {\n                                    var_30h = 0x418fad;\n                                    fcn.0040e6d4();\n                                }\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                }\n                var_30h = var_4h;\n                var_34h = 0x419988;\n                var_38h = 0x418fc8;\n                fcn.0041698c();\n                var_38h = var_1c8h;\n                var_3ch = 0x418fde;\n                fcn.00403850();\n                var_3ch = 0x418fee;\n                fcn.0040e6d4();\n                var_3ch = 0x418ff9;\n                fcn.00406ce8();\n                var_3ch = 0x41900a;\n                fcn.00406834();\n                var_3ch = var_1cch;\n                var_40h = 0x419ec0;\n                var_44h = 0x419020;\n                fcn.00407b08();\n                var_44h = 0x419031;\n                fcn.00406834();\n                var_44h = var_1d4h;\n                var_48h = 0x419ec0;\n                var_4ch = 0x419047;\n                fcn.00406bd8();\n                var_4ch = 0x419058;\n                fcn.0040377c();\n                var_4ch = 0x419069;\n                fcn.00406834();\n                var_4ch = var_1dch;\n                stack0xffffffac = 0x419ec0;\n                _auStack88 = 0x41907f;\n                fcn.004066e4();\n                _auStack88 = 0x419090;\n                fcn.0040377c();\n                _auStack88 = 0x4190a1;\n                fcn.00406834();\n                _auStack88 = var_1e8h;\n                var_58h = 0x419ec0;\n                var_5ch = 0x4190b7;\n                fcn.00406634();\n                var_5ch = 0x4190c8;\n                fcn.0040377c();\n                var_5ch = 0x4190d9;\n                fcn.00406834();\n                var_5ch = var_1f4h;\n                var_60h = 0x419ec0;\n                var_64h = 0x4190ef;\n                fcn.004065f0();\n                var_64h = 0x419100;\n                fcn.0040377c();\n                var_64h = 0x419111;\n                fcn.00406834();\n                var_64h = var_200h;\n                var_68h = 0x419ec0;\n                fcn.0040709c();\n                fcn.0040377c();\n                fcn.00406834();\n                fcn.0040709c();\n                fcn.0040377c();\n                fcn.00406834();\n                fcn.0040709c();\n                fcn.0040377c();\n                fcn.00406834();\n                fcn.0040709c();\n                fcn.0040377c();\n                fcn.00406834();\n                fcn.00406834();\n                fcn.00407de0();\n                fcn.00406834();\n                fcn.00403850();\n                uStack172 = 0x419ee8;\n                uStack176 = **0x41b350;\n                uStack180 = 0x419edc;\n                uStack184 = 0x419988;\n                uStack188 = 0x419ef8;\n                uStack192 = **0x41b350;\n                uStack196 = 0x419edc;\n                uStack200 = 0x4192a6;\n                fcn.004063c8();\n                uStack200 = var_248h;\n                uStack204 = 0x419f08;\n                uStack208 = **0x41b350;\n                uStack212 = 0x419edc;\n                uStack216 = 0x419988;\n                uStack220 = 0x419f18;\n                uStack224 = **0x41b350;\n                uStack228 = 0x419edc;\n                uStack232 = 0x4192de;\n                fcn.00406560();\n                uStack232 = var_24ch;\n                uStack236 = 0x419f28;\n                unique0x00007a00 = **0x41b350;\n                _auStack244 = 0x419edc;\n                uStack248 = 0x419988;\n                uStack252 = 0x419f38;\n                uStack256 = **0x41b350;\n                uStack260 = 0x419edc;\n                uStack264 = 0x419316;\n                fcn.0040e8d0();\n                uStack264 = var_250h;\n                uStack268 = 0x419f48;\n                uStack272 = **0x41b350;\n                var_110h = 0x419edc;\n                var_114h = 0x419988;\n                var_118h = 0x41933f;\n                fcn.00403850();\n                if (var_52h._1_1_ == '\\x01') {\n                    var_118h = var_14h;\n                    var_11ch = 0x419f58;\n                    var_120h = **0x41b350;\n                    var_124h = 0x419edc;\n                    var_128h = var_4ch;\n                    var_12ch = 0x419e90;\n                    var_130h = stack0xffffffac;\n                    var_134h = 0x419f64;\n                    var_138h = **0x41b350;\n                    var_13ch = 0x419edc;\n                    var_140h = 0x419988;\n                    var_144h = 0x419387;\n                    fcn.00403850();\n                }\n                var_144h = 0x419397;\n                fcn.00416dd4();\n                var_144h = &fcn.004186c4::var_254h;\n                var_148h = 0x4193ab;\n                fcn.00417d84(var_144h);\n                var_148h = var_20ch;\n                var_14ch = 0x4193b8;\n                (***0x41b3a0)();\n                var_30h = 0x4193c2;\n                fcn.00405114();\n                var_30h = 0x4193ca;\n                iVar3 = fcn.00403790();\n                uVar8 = iVar3 == 3;\n                if (3 < iVar3) {\n                    var_30h = 0x4193e3;\n                    fcn.00407a18();\n                    var_30h = 0x4193eb;\n                    iVar3 = fcn.00404648();\n                    uVar8 = iVar3 == 1;\n                    if (-1 < iVar3 + -1) {\n                        do {\n                            var_30h = NULL;\n                            var_34h = 0x41940e;\n                            fcn.00404804();\n                            var_30h = 0x419424;\n                            fcn.00407a18();\n                            var_30h = 0x41942c;\n                            iVar4 = fcn.00404648();\n                            bVar6 = iVar4 == 4;\n                            if (bVar6) {\n                                var_30h = 0x419444;\n                                fcn.004038dc();\n                                if (bVar6) {\n                                    var_30h = 0x41945d;\n                                    fcn.00407a18();\n                                    _auStack88 = _auStack88 & 0xffff00ff;\n                                    var_30h = 0x419469;\n                                    iVar4 = fcn.00404648();\n                                    if (-1 < iVar4 + -1) {\n                                        var_44h = 0;\n                                        do {\n                                            var_30h = 0x41948c;\n                                            fcn.0040633c();\n                                            var_30h = 0x41949f;\n                                            iVar1 = fcn.00403ad4();\n                                            auStack88 = CONCAT11(iVar1 != 0, auStack88[0]);\n                                            _auStack88 = _auStack88 & 0xffff0000 | auStack88;\n                                            auStack88[1] = auStack88 >> 8;\n                                            if (auStack88[1] == '\\x01') break;\n                                            var_44h = var_44h + 1;\n                                            iVar4 = iVar4 + -1;\n                                        } while (iVar4 != 0);\n                                    }\n                                    if (auStack88[1] == '\\x01') {\n                                        var_30h = 0x4194c7;\n                                        fcn.004038dc();\n                                        var_30h = 0x4194d5;\n                                        fcn.0041841c();\n                                    }\n                                }\n                            }\n                            iVar3 = iVar3 + -1;\n                            uVar8 = iVar3 == 0;\n                        } while (!uVar8);\n                    }\n                }\n                var_30h = 0x4194e2;\n                fcn.004099c0();\n                var_30h = 0x4194ed;\n                fcn.00407de0();\n                var_30h = 0x4194fd;\n                fcn.004038dc();\n                if (uVar8) {\n                    var_30h = 0x41950c;\n                    fcn.004038dc();\n                    if (uVar8) {\n                        var_30h = 0x419513;\n                        fcn.00407e90();\n                        goto code_r0x0041965c;\n                    }\n                }\n                var_30h = 0x419525;\n                fcn.004038dc();\n                if ((uVar8) && (var_52h == '\\x01')) {\n                    var_30h = 0x419547;\n                    fcn.004028e0();\n                    var_12ch = 0x3c;\n                    var_128h = 0x1c0;\n                    var_124h = 0;\n                    var_120h = 0;\n                    var_30h = 0x41957b;\n                    fcn.004062fc();\n                    var_30h = 0x419586;\n                    var_11ch = fcn.00403d98();\n                    var_30h = 0x41959c;\n                    fcn.004062fc();\n                    var_34h = 0x4195af;\n                    fcn.00402754();\n                    var_34h = 0x4195c0;\n                    fcn.00403d88();\n                    var_34h = 0x4195d1;\n                    fcn.004077c8();\n                    var_34h = var_26ch;\n                    var_38h = 0x41a02c;\n                    var_3ch = 0x4195ec;\n                    fcn.00403e78();\n                    var_3ch = 0x4195f7;\n                    var_118h = fcn.00403d98();\n                    var_3ch = 0x41960a;\n                    fcn.00402754();\n                    var_3ch = 0x41961b;\n                    fcn.00403d88();\n                    var_3ch = 0x41962c;\n                    fcn.00407854();\n                    var_3ch = 0x419637;\n                    var_114h = fcn.00403d98();\n                    var_110h = 0;\n                    var_3ch = &fcn.004186c4::var_12ch;\n                    var_40h = 0x419655;\n                    (***0x41b150)();\n                    var_2ch = NULL;\n                    var_30h = 0x41965c;\n                    fcn.00404e40();\n                }\n            }\n        }\n    }\ncode_r0x0041965c:\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x419868;\n    var_28h = 0x419674;\n    fcn.004034e4();\n    var_28h = 0x419684;\n    fcn.00403bf4();\n    var_28h = 0x41968f;\n    fcn.004034e4();\n    var_28h = 0x41969f;\n    fcn.00403bf4();\n    var_28h = 0x4196af;\n    fcn.00403508();\n    var_28h = 0x4196ba;\n    fcn.00403bdc();\n    var_28h = 0x4196ca;\n    fcn.00403508();\n    var_28h = 0x4196d5;\n    fcn.00403bdc();\n    var_28h = 0x4196e5;\n    fcn.00403508();\n    var_28h = 0x4196f0;\n    fcn.00403bdc();\n    var_28h = 0x419700;\n    fcn.00403508();\n    var_28h = 0x41970b;\n    fcn.00403bdc();\n    var_28h = 0x41971b;\n    fcn.00403508();\n    var_28h = 0x419726;\n    fcn.00403bdc();\n    var_28h = 0x419736;\n    fcn.00403508();\n    var_28h = 0x419741;\n    fcn.00403bdc();\n    var_28h = 0x419751;\n    fcn.00403508();\n    var_28h = 0x41975c;\n    fcn.00403bdc();\n    var_28h = 0x41976c;\n    fcn.00403508();\n    var_28h = 0x419777;\n    fcn.00403bdc();\n    var_28h = 0x419787;\n    fcn.00403508();\n    var_28h = 0x419797;\n    fcn.00403bf4();\n    var_28h = 0x4197a2;\n    fcn.004034e4();\n    var_28h = 0x4197b2;\n    fcn.00403bf4();\n    var_28h = 0x4197bd;\n    fcn.004034e4();\n    var_28h = 0x4197cd;\n    fcn.00403bf4();\n    var_28h = 0x4197d8;\n    fcn.004034e4();\n    var_28h = 0x4197e8;\n    fcn.00403bf4();\n    var_28h = 0x4197f3;\n    fcn.004034e4();\n    var_28h = 0x419803;\n    fcn.00403bf4();\n    var_28h = 0x419813;\n    fcn.00403508();\n    var_28h = 0x41981b;\n    fcn.004034e4();\n    var_28h = 0x41982e;\n    fcn.00404280();\n    var_28h = 0x41983b;\n    fcn.00403508();\n    var_28h = 0x419843;\n    fcn.004034e4();\n    var_28h = 0x419850;\n    fcn.00403508();\n    var_28h = 0x41985d;\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 9411
    },
    "00402dd0": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402dd0(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0040303c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.0040303c(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 54
    },
    "00401aa8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401aa8(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *in_EAX;\n    \n    puVar1 = (param_2 - 4) + in_EAX;\n    if (0xf < param_2) {\n        *puVar1 = 0x80000007;\n        fcn.00401c7c();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n        *puVar1 = param_2 | 0x80000002;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00401ad8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00401ad8(void)\n\n{\n    int32_t in_EAX;\n    \n    *0x41c59c = *0x41c59c + 1;\n    *0x41c5a0 = *0x41c5a0 + ((*(in_EAX + -4) & 0x7ffffffc) - 4);\n    fcn.004020ec();\n    return;\n}\n",
        "token_count": 93
    },
    "00401bcc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t fcn.00401bcc(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uStack28;\n    int32_t iStack27;\n    int32_t iStack23;\n    \n    uStack28 = 0;\n    uVar1 = fcn.00401a78();\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        if (in_EAX - *(uVar1 + 8) < 0xc) {\n            uVar2 = fcn.004017e4();\n        }\n        else {\n            uVar2 = fcn.004017e4();\n        }\n        if (iStack27 != 0) {\n            fcn.00401aa8();\n            if (iStack27 + iStack23 < *(uVar1 + 8) + *(uVar1 + 0xc)) {\n                fcn.00401afc();\n            }\n            uVar2 = fcn.004012f4();\n            uStack28 = 1;\n        }\n    }\n    return uVar2 & 0xffffff00 | uStack28;\n}\n",
        "token_count": 258
    },
    "00401d50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00401d50(void)\n\n{\n    uint32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    \n    uStack28 = *in_EAX;\n    uStack24 = in_EAX[1];\n    fcn.00401d04();\n    fcn.00401284();\n    if (uStack20 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (uStack20 < uStack28) {\n            iVar2 = fcn.00401b24();\n            uStack28 = uStack28 - iVar2;\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack28 + uStack24 < uStack20 + iStack16) {\n            iVar2 = fcn.00401b94();\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack20 + iStack16 == uStack28 + uStack24) {\n            fcn.00401aa8();\n            uStack24 = uStack24 - 4;\n        }\n        *0x41c608 = uStack28;\n        *0x41c604 = uStack24;\n        uVar1 = CONCAT31(uStack24 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 318
    },
    "00401e68": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t * fcn.00401e68(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    while ((puVar1 = *0x41c600,  puVar3 = *0x41c5f8,  (*0x41c5f8)[2] < in_EAX &&\n           (uVar4 = (*0x41c600)[2],  puVar3 = *0x41c600,  uVar4 < in_EAX))) {\n        (*0x41c600)[2] = in_EAX;\n        puVar3 = puVar1;\n        do {\n            puVar3 = puVar3[1];\n        } while (puVar3[2] < in_EAX);\n        (*0x41c600)[2] = uVar4;\n        puVar1 = puVar3;\n        if ((puVar3 != *0x41c600) ||\n           ((in_EAX < 0x1001 && (puVar3 = fcn.00401e3c(),  puVar1 = *0x41c600,  puVar3 != NULL)))) break;\n        cVar2 = fcn.00401ddc();\n        puVar3 = *0x41c608;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        if (in_EAX <= *0x41c604) {\n            *0x41c604 = *0x41c604 - in_EAX;\n            if (*0x41c604 < 0xc) {\n                in_EAX = in_EAX + *0x41c604;\n                *0x41c604 = 0;\n            }\n            *0x41c608 = *0x41c608 + in_EAX;\n            *puVar3 = in_EAX | 2;\n            *0x41c59c = *0x41c59c + 1;\n            *0x41c5a0 = *0x41c5a0 + (in_EAX - 4);\n            return puVar3 + 1;\n        }\n    }\n    *0x41c600 = puVar1;\n    fcn.00401a14();\n    uVar4 = puVar3[2];\n    if (uVar4 - in_EAX < 0xc) {\n        if (puVar3 == *0x41c600) {\n            *0x41c600 = puVar3[1];\n        }\n        *(puVar3 + uVar4) = *(puVar3 + uVar4) & 0xfffffffe;\n    }\n    else {\n        fcn.00401c7c();\n        uVar4 = in_EAX;\n    }\n    *puVar3 = uVar4 | 2;\n    *0x41c59c = *0x41c59c + 1;\n    *0x41c5a0 = *0x41c5a0 + (uVar4 - 4);\n    return puVar3 + 1;\n}\n",
        "token_count": 689
    },
    "00402290": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402290(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    uint uVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    uVar7 = param_2 + 7U & 0xfffffffc;\n    if (uVar7 < 0xc) {\n        uVar7 = 0xc;\n    }\n    puVar6 = in_EAX + -4;\n    uVar9 = *puVar6 & 0x7ffffffc;\n    puVar3 = puVar6 + uVar9;\n    if (uVar9 == uVar7) {\n        uVar4 = CONCAT31(puVar3 >> 8, 1);\n    }\n    else {\n        uVar8 = uVar7;\n        if (uVar7 < uVar9) {\n            uStack24 = uVar9 - uVar7;\n            if (puVar3 == *0x41c608) {\n                *0x41c608 = *0x41c608 + -uStack24;\n                *0x41c604 = *0x41c604 + uStack24;\n                if (*0x41c604 < 0xc) {\n                    *0x41c608 = *0x41c608 + uStack24;\n                    *0x41c604 = *0x41c604 - uStack24;\n                    uVar8 = uVar9;\n                }\n            }\n            else {\n                if ((*puVar3 & 2) == 0) {\n                    uStack24 = uStack24 + *(puVar3 + 8);\n                    fcn.00401a14();\n                }\n                uVar8 = uVar9;\n                if (0xb < uStack24) {\n                    *(puVar6 + uVar7) = uStack24 | 2;\n                    fcn.00401ad8();\n                    uVar8 = uVar7;\n                }\n            }\ncode_r0x0040244a:\n            *0x41c5a0 = *0x41c5a0 + (uVar8 - uVar9);\n            uVar7 = *puVar6;\n            *puVar6 = uVar8 | uVar7 & 0x80000003;\n            uVar4 = CONCAT31((uVar7 & 0x80000003) >> 8, 1);\n        }\n        else {\n            do {\n                iStack20 = uVar7 - uVar9;\n                if (puVar6 + uVar9 == *0x41c608) {\n                    if (iStack20 <= *0x41c604) {\n                        *0x41c604 = *0x41c604 - iStack20;\n                        *0x41c608 = *0x41c608 + iStack20;\n                        if (*0x41c604 < 0xc) {\n                            *0x41c608 = *0x41c608 + *0x41c604;\n                            uVar7 = uVar7 + *0x41c604;\n                            *0x41c604 = 0;\n                        }\n                        *0x41c5a0 = *0x41c5a0 + (uVar7 - uVar9);\n                        uVar9 = *puVar6;\n                        *puVar6 = uVar7 | uVar9 & 0x80000003;\n                        uVar4 = CONCAT31((uVar9 & 0x80000003) >> 8, 1);\n                        goto code_r0x00402463;\n                    }\n                    fcn.00401d04();\n                }\n                puVar5 = puVar6 + uVar9;\n                if ((*puVar5 & 2) == 0) {\n                    uVar1 = puVar5[2];\n                    if (iStack20 <= uVar1) {\n                        fcn.00401a14();\n                        if (uVar1 - iStack20 < 0xc) {\n                            uVar8 = uVar7 + (uVar1 - iStack20);\n                            puVar5 = puVar6 + uVar8;\n                            *puVar5 = *puVar5 & 0xfffffffe;\n                        }\n                        else {\n                            fcn.00401c7c();\n                        }\n                        goto code_r0x0040244a;\n                    }\n                    puVar5 = puVar5 + uVar1;\n                    iStack20 = iStack20 - uVar1;\n                }\n            } while (((*puVar5 & 0x80000000) != 0) && (cVar2 = fcn.00401e08(),  cVar2 != '\\0'));\n            uVar4 = 0;\n        }\n    }\ncode_r0x00402463:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 1112
    },
    "00402870": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00402870(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x004028a0:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x004028a0;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 324
    },
    "00402c08": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c3d)\n// WARNING: Removing unreachable block (ram,0x00402c43)\n// WARNING: Removing unreachable block (ram,0x00402c4a)\n// WARNING: Removing unreachable block (ram,0x00402c50)\n// WARNING: Removing unreachable block (ram,0x00402c56)\n\nvoid __fastcall fcn.00402c08(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    *param_2 = in_EAX;\n    uVar2 = *(in_EAX + -0x28);\n    uVar1 = uVar2 >> 2;\n    piVar3 = param_2 + 1;\n    while (uVar1 = uVar1 - 1,  uVar1 != 0) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (; *(in_EAX + -0x24) != NULL; in_EAX = **(in_EAX + -0x24)) {\n    }\n    return;\n}\n",
        "token_count": 330
    },
    "004038dc": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004038dc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00403ec0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403ec0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "004028e0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004028e0(uchar param_1, uint32_t param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = param_2 >> 2;\n    if (-1 < iVar1) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *in_EAX = CONCAT22(CONCAT11(param_1, param_1), CONCAT11(param_1, param_1));\n            in_EAX = in_EAX + 1;\n        }\n        for (param_2 = param_2 & 3; param_2 != 0; param_2 = param_2 - 1) {\n            *in_EAX = param_1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00402900": {
        "rules": [
            "generate random numbers using the Delphi LCG/d1e3669b265a4cefae2dee380548f202"
        ],
        "decompiled_code": "\nuint fcn.00402900(void)\n\n{\n    uint32_t in_EAX;\n    \n    *0x41b008 = *0x41b008 * 0x8088405 + 1;\n    return in_EAX * *0x41b008 >> 0x20;\n}\n",
        "token_count": 64
    },
    "0040291c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040291c(char *param_1, int32_t param_2)\n\n{\n    uint64_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char acStack37 [21];\n    int32_t iStack16;\n    \n    iStack16 = param_2;\n    uVar2 = (in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f);\n    iVar4 = 0;\n    do {\n        iVar3 = iVar4;\n        uVar1 = uVar2;\n        uVar2 = uVar2 / 10;\n        acStack37[iVar3 + 1] = uVar1 % 10 + '0';\n        iVar4 = iVar3 + 1;\n    } while (uVar2 != 0);\n    if (in_EAX < 0) {\n        acStack37[iVar3 + 2] = '-';\n        iVar4 = iVar3 + 2;\n    }\n    *param_1 = iVar4;\n    pcVar5 = param_1 + 1;\n    if (0xff < iStack16) {\n        iStack16 = 0xff;\n    }\n    iVar3 = iStack16 - iVar4;\n    if (iVar3 != 0 && iVar4 <= iStack16) {\n        *param_1 = *param_1 + iVar3;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *pcVar5 = ' ';\n            pcVar5 = pcVar5 + 1;\n        }\n    }\n    do {\n        *pcVar5 = acStack37[iVar4];\n        pcVar5 = pcVar5 + 1;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return;\n}\n",
        "token_count": 422
    },
    "004032dc": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.004032dc(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x41b000;\n    do {\n        *((uVar2 & 0xff) + 0x41b060) = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x41b004;\n    do {\n        *((uVar3 & 0xff) + 0x41b060) = *((uVar2 & 0xf) + 0x41b080);\n        uVar2 = uVar2 >> 4;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 220
    },
    "004067c0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004067ca: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004067cf)\n\nvoid __fastcall fcn.004067c0(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    if (param_1 == '\\0') {\n        if (in_EAX < 0) {\n            in_EAX = -in_EAX;\n        }\n        param_1 = 10;\n    }\n    do {\n        uVar2 = in_EAX / param_1;\n        puVar6 = puVar6 + -1;\n        cVar4 = in_EAX % param_1;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n        in_EAX = uVar2;\n    } while (uVar2 != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar1 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar1)[iVar5] = 0x30;\n        }\n        puVar6[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "00402988": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402988(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x004029fe:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 == 0x2d) {\n            bVar1 = true;\ncode_r0x00402a0e:\n            uVar3 = *puVar6;\n            puVar6 = puVar5 + 2;\n        }\n        else if (uVar3 == 0x2b) goto code_r0x00402a0e;\n        if (((uVar3 == 0x24) || (uVar3 == 0x78)) || (uVar3 == 0x58)) {\ncode_r0x00402a13:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 != 0) {\n                do {\n                    if (0x60 < uVar3) {\n                        uVar3 = uVar3 - 0x20;\n                    }\n                    uVar4 = uVar3 - 0x30;\n                    if (9 < uVar4) {\n                        if (5 < uVar3 + 0xbf) goto code_r0x00402a07;\n                        uVar4 = uVar3 - 0x37;\n                    }\n                    if (0xfffffff < uVar2) goto code_r0x00402a07;\n                    uVar2 = uVar2 * 0x10 + uVar4;\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (uVar3 != 0);\ncode_r0x00402a50:\n                iVar7 = 0;\n                goto code_r0x00402a53;\n            }\n            goto code_r0x004029fe;\n        }\n        if (uVar3 != 0x30) {\n            if (uVar3 != 0) goto code_r0x004029da;\n            goto code_r0x00402a07;\n        }\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if ((uVar3 == 0x78) || (uVar3 == 0x58)) goto code_r0x00402a13;\n        while (uVar3 != 0) {\ncode_r0x004029da:\n            if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x00402a07;\n            uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        if (bVar1) {\n            if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x00402a50;\n        }\n        else if (-1 < uVar2) goto code_r0x00402a50;\n    }\ncode_r0x00402a07:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x00402a53:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 862
    },
    "0040fe00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0040fe00(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 6;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_18h = 0x40fe20;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00404150();\n    var_1ch = 0x410007;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040fe00::var_20h;\n    var_18h = &stack0xfffffffc;\n    fcn.004034e4();\n    fcn.00407228();\n    fcn.00407a18();\n    iVar3 = 0;\n    iVar2 = fcn.00404648();\n    if ((9 < iVar2) && (iVar2 = fcn.00404648(),  -1 < iVar2 + -1)) {\n        do {\n            if (iVar3 == 8) {\n                fcn.0040357c();\n                iVar1 = fcn.00403ad4();\n                if (iVar1 != 0) {\n                    fcn.00403ad4();\n                    var_28h = 0x40fec4;\n                    fcn.004039f0();\n                }\n                fcn.0040357c();\n                fcn.0040357c();\n                iVar1 = fcn.00403ad4();\n                if (iVar1 == 0) {\n                    fcn.0040357c();\n                }\n                else {\n                    fcn.00403ad4();\n                    fcn.00403790();\n                    fcn.004039f0();\n                }\n                fcn.0040357c();\n                fcn.0040357c();\n                fcn.0040357c();\n                fcn.0040357c();\n                var_4h = 0x40fe9f;\n                var_8h = 0x41005c;\n                var_ch = var_28h;\n                var_10h = 0x41005c;\n                var_18h = 0x41005c;\n                var_1ch = var_30h;\n                var_20h = 0x410068;\n                fcn.00403850();\n                fcn.00405194();\n            }\n            iVar3 = iVar3 + 1;\n            if (8 < iVar3) {\n                iVar3 = 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00403538();\n    fcn.00404810();\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x41000e;\n    var_1ch = 0x40fff0;\n    fcn.00403508();\n    var_1ch = 0x40fffe;\n    fcn.00404810();\n    var_1ch = 0x410006;\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 875
    },
    "00402a94": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00402a94(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = fcn.00402a8c(0);\n    if (iVar1 == 7) {\n        uVar2 = fcn.00402a8c(1);\n        if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 138
    },
    "00402ac4": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402ac4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = *0x41b018;\n    puStack20 = &fcn.00402ac4::var_4h;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0x402b5c;\n    uStack36 = 0x80000002;\n    puStack40 = 0x402aeb;\n    iVar1 = fcn.00401130();\n    if (iVar1 == 0) {\n        uStack44 = 0x402b35;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = var_4h;\n        puStack40 = &stack0xfffffffc;\n        fcn.00401138(var_4h, 0x402b78, 0, 0, &fcn.00402ac4::var_8h, &fcn.00402ac4::var_ch);\n        *in_FS_OFFSET = uVar2;\n        fcn.00401128(var_4h, 0x402b3c);\n        return;\n    }\n    *0x41b018 = *0x41b018 & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 402
    },
    "00403054": {
        "rules": [
            "calculate modulo 256 via x86 assembly",
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403054(int32_t *arg_8h)\n\n{\n    fcn.004025c0();\n    return;\n}\n",
        "token_count": 33
    },
    "00404f40": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.00404f40(uint param_1, uint32_t param_2)\n\n{\n    uint16_t in_AX;\n    \n    return in_AX & 0xff | (param_2 & 0xff) << 8;\n}\n",
        "token_count": 57
    },
    "004069a8": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.004069a8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x4069c7;\n    fcn.00403980();\n    uStack48 = 0x406aab;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.004034e4();\n    iVar3 = 0;\n    iVar1 = fcn.00403790();\n    if (0 < iVar1) {\n        do {\n            fcn.004036cc();\n            iVar2 = fcn.00403ad4();\n            if (iVar2 + -1 < 0) break;\n            iVar2 = iVar3 + 6;\n            if (7 < iVar2) {\n                iVar2 = iVar3 + -2;\n                fcn.004036cc();\n                fcn.00403798();\n            }\n            iVar1 = iVar1 + -1;\n            iVar3 = iVar2;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x406ab2;\n    uStack48 = 0x406aa2;\n    fcn.00403508();\n    uStack48 = 0x406aaa;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 380
    },
    "004031b4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004031b4(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0x41c62c != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0x41c62c == ppiVar1) {\n            *in_FS_OFFSET = **0x41c62c;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0x41c62c) {\n                *ppiVar1 = **0x41c62c;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00406910": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00406910(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 3;\n    uStack36 = 0;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0x40693a;\n    uStack48 = fcn.00403d98();\n    puStack52 = 0x406944;\n    iVar1 = (***0x41b3c8)();\n    if (iVar1 != -1) {\n        uStack56 = 0x40698a;\n        iStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        iVar2 = iVar1;\n        puStack52 = &stack0xfffffffc;\n        (***0x41b264)(iVar1, &fcn.00406910::var_4h);\n        *in_FS_OFFSET = iVar2;\n        iStack60 = 0x406991;\n        (***0x41b1b4)(iVar1);\n        return;\n    }\n    puStack52 = NULL;\n    uStack56 = 0x400;\n    iStack60 = 0x4069a3;\n    fcn.004045cc();\n    return;\n}\n",
        "token_count": 392
    },
    "00407228": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407228(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack96;\n    uint uStack92;\n    uchar *puStack88;\n    int32_t iStack84;\n    uint *puStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x407242;\n    var_8h = param_2;\n    fcn.00404150();\n    uStack40 = 0x407353;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack48 = 0x407258;\n    puStack36 = &stack0xfffffffc;\n    fcn.004034e4();\n    uStack48 = 0x407260;\n    fcn.004034e4();\n    uStack48 = 0;\n    iStack52 = 0x40726a;\n    iVar1 = fcn.00403d98();\n    uStack56 = 0x407276;\n    iStack52 = iVar1;\n    uStack56 = (***0x41b358)();\n    uStack60 = 3;\n    uStack64 = 0;\n    uStack68 = 1;\n    uStack72 = 0x80000000;\n    puStack80 = 0x40728c;\n    iStack76 = iVar1;\n    var_14h = (***0x41b3c8)();\n    if (var_14h == -1) {\n        puStack80 = NULL;\n        puStack88 = 0x4072a1;\n        iStack84 = iVar1;\n        puStack88 = (***0x41b358)();\n        uStack92 = 3;\n        iStack96 = 0;\n        var_14h = (***0x41b3c8)(iVar1, 0x80000000, 3);\n        if (var_14h == -1) {\n            *in_FS_OFFSET = iStack76;\n            uStack68 = 0x40735a;\n            uStack72 = 0x40734a;\n            fcn.004034e4();\n            uStack72 = 0x407352;\n            fcn.00403bdc();\n            return;\n        }\n    }\n    puStack80 = &fcn.00407228::var_ch;\n    iStack84 = var_14h;\n    puStack88 = 0x4072d1;\n    var_ch = (***0x41b264)();\n    puStack88 = 0x4072df;\n    fcn.00403b1c();\n    uStack92 = 0x407323;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    iVar1 = var_14h;\n    puStack88 = &stack0xfffffffc;\n    (***0x41b470)(var_14h, 0, var_ch, &fcn.00407228::var_10h, 0);\n    *in_FS_OFFSET = iVar1;\n    (***0x41b1b4)(var_14h, 0x40732a);\n    return;\n}\n",
        "token_count": 816
    },
    "0040776c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040776c(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x40777c;\n    fcn.00404150();\n    uStack20 = 0x4077b8;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    uVar1 = fcn.00403d98();\n    (***0x41b358)();\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x4077bf;\n    uStack24 = 0x4077b7;\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 189
    },
    "0040d988": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040d988(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_230h;\n    uint uStackY96;\n    uint uStackY92;\n    uint arg_8h;\n    int32_t iStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uchar *puStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    iVar4 = 0x53;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    puStack36 = 0x40dd42;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x40d9b4;\n    fcn.004034e4();\n    puStack44 = 0x40d9c1;\n    fcn.004062fc();\n    puStack48 = 0x40db2b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = &fcn.0040d988::var_25ch;\n    uStack60 = 0x40d9e9;\n    puStack44 = &stack0xfffffffc;\n    fcn.00403e14();\n    uStack60 = 0x40d9f4;\n    uStack60 = fcn.00403d98();\n    puStack64 = 0x40d9fe;\n    puVar1 = (***0x41b2d8)();\n    while( true ) {\n        puStack64 = &fcn.0040d988::var_25ch;\n        iStack72 = 0x40db19;\n        puStack68 = puVar1;\n        iVar2 = (***0x41b198)();\n        if (iVar2 == 0) break;\n        uStack52 = 0x40da1f;\n        puStack48 = iVar4;\n        fcn.00403d6c();\n        uStack52 = var_268h;\n        puStack56 = 0x40dda0;\n        uStack60 = 0x40da3a;\n        fcn.00403e78();\n        uStack60 = 0x40da45;\n        uStack60 = fcn.00403d98();\n        puStack64 = 0x40da4f;\n        iVar2 = (***0x41b358)();\n        if (iVar2 != -1) {\n            puStack68 = 0x40dafb;\n            iStack72 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffb8;\n            puStack64 = &stack0xfffffffc;\n            fcn.00403d6c();\n            uVar3 = 0x40dda0;\n            uStackY92 = 0x40daa1;\n            fcn.00403e78();\n            uStackY92 = 0x40dab2;\n            fcn.00407228();\n            uStackY92 = var_270h;\n            uStackY96 = 0x40dacf;\n            fcn.00403760();\n            uStackY92 = 0x40dae0;\n            fcn.0040d5d4(uVar3);\n            uStackY92 = 0x40daee;\n            fcn.00403798();\n            *in_FS_OFFSET = uVar3;\n        }\n    }\n    *in_FS_OFFSET = puStack44;\n    puStack36 = 0x40db42;\n    fcn.004062fc();\n    iStack40 = 0x40dcac;\n    puStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.0040d988::var_25ch;\n    uStack52 = 0x40db6a;\n    puStack36 = &stack0xfffffffc;\n    fcn.00403e14();\n    uStack52 = 0x40db75;\n    uStack52 = fcn.00403d98();\n    puStack56 = 0x40db7f;\n    uVar3 = (***0x41b2d8)();\n    while( true ) {\n        puStack56 = &fcn.0040d988::var_25ch;\n        puStack64 = 0x40dc9a;\n        uStack60 = uVar3;\n        iVar2 = (***0x41b198)();\n        if (iVar2 == 0) break;\n        puStack44 = 0x40dba0;\n        iStack40 = iVar4;\n        fcn.00403d6c();\n        puStack44 = var_288h;\n        puStack48 = 0x40dda0;\n        uStack52 = 0x40dbbb;\n        fcn.00403e78();\n        uStack52 = 0x40dbc6;\n        uStack52 = fcn.00403d98();\n        puStack56 = 0x40dbd0;\n        iVar2 = (***0x41b358)();\n        if (iVar2 != -1) {\n            uStack60 = 0x40dc7c;\n            puStack64 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc0;\n            puStack68 = &fcn.0040d988::var_28ch;\n            iStack72 = iVar4;\n            puStack56 = &stack0xfffffffc;\n            fcn.00403d6c();\n            arg_8h = 0x40dda0;\n            fcn.00403e78();\n            fcn.00407228();\n            fcn.00403760();\n            fcn.0040d5d4(arg_8h);\n            fcn.00403798();\n            *in_FS_OFFSET = arg_8h;\n        }\n    }\n    *in_FS_OFFSET = puStack36;\n    *in_FS_OFFSET = unaff_ESI;\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.00403bf4();\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 1606
    },
    "00413c48": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00413c48(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x413c58;\n    fcn.00404150();\n    uStack20 = 0x413c90;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    uVar1 = fcn.00403d98();\n    fcn.00404e78();\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x413c97;\n    uStack24 = 0x413c8f;\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 188
    },
    "0040370c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040370c(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x00403735:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x00403732:\n                piVar2 = piVar2 + 1;\n                goto code_r0x00403735;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x00403732;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.004034e4(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00403604(arg_8h),  -1 < iVar1)) {\n        fcn.004035d4();\n    }\n    else {\n        fcn.00403b1c();\n        fcn.00403604(arg_8h);\n        fcn.00403b1c();\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "0040377c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040377c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.004034e4(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00403604(arg_8h),  -1 < iVar1)) {\n        fcn.004035d4();\n    }\n    else {\n        fcn.00403b1c();\n        fcn.00403604(arg_8h);\n        fcn.00403b1c();\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00403c18": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004025ec)\n\nvoid __fastcall fcn.00403c18(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 != 0) && (*(param_2 + -4) >> 1 != 0)) {\n        iVar1 = fcn.00401150();\n        if (iVar1 != 0) {\n            return;\n        }\n        if (*0x41c008 != NULL) {\n            (**0x41c008)();\n        }\n        fcn.004025c0();\n        return;\n    }\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        *in_EAX = 0;\n        fcn.00401158(iVar1);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00403d24": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004025ec)\n\nvoid __fastcall fcn.00403d24(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x00403d4d:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x00403d4a:\n                piVar4 = piVar4 + 2;\n                goto code_r0x00403d4d;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x00403d4a;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            fcn.00401158(iVar2);\n        }\n        return;\n    }\n    iVar2 = fcn.00401148(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        fcn.00401158(iVar1);\n        return;\n    }\n    if (*0x41c008 != NULL) {\n        (**0x41c008)();\n    }\n    fcn.004025c0();\n    return;\n}\n",
        "token_count": 439
    },
    "00403da8": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00403da8(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00403e78": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403e78(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *UNRECOVERED_JUMPTABLE;\n    \n    iVar2 = param_2;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    uVar1 = fcn.00403bb4();\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.00402628(uVar1);\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    fcn.00403bcc();\n    // WARNING: Could not recover jumptable at 0x00403ebd. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 213
    },
    "004040bc": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004040bc(uint param_1, int16_t *param_2)\n\n{\n    int16_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    bool bVar7;\n    \n    if (in_EAX != NULL) {\n        if (param_2 == NULL) {\n            return 0;\n        }\n        iVar3 = (*(in_EAX + -2) >> 1) - 1;\n        if (-1 < iVar3) {\n            iVar1 = (*(param_2 + -2) >> 1) - iVar3;\n            bVar7 = iVar1 == 0;\n            piVar5 = param_2;\n            if (!bVar7 && iVar3 <= *(param_2 + -2) >> 1) {\ncode_r0x004040e3:\n                do {\n                    if (iVar1 != 0) {\n                        iVar1 = iVar1 + -1;\n                        piVar4 = piVar5 + 1;\n                        bVar7 = *in_EAX == *piVar5;\n                        piVar5 = piVar4;\n                        if (!bVar7) goto code_r0x004040e3;\n                    }\n                    iVar2 = iVar3;\n                    piVar4 = in_EAX + 1;\n                    piVar6 = piVar5;\n                    if (!bVar7) goto code_r0x004040f9;\n                    do {\n                        if (iVar2 == 0) break;\n                        bVar7 = *piVar4 == *piVar6;\n                        iVar2 = iVar2 + -1;\n                        piVar4 = piVar4 + 1;\n                        piVar6 = piVar6 + 1;\n                    } while (bVar7);\n                } while (!bVar7);\n                in_EAX = piVar5 - param_2 >> 1;\n                goto code_r0x0040410b;\n            }\n        }\ncode_r0x004040f9:\n        in_EAX = NULL;\n    }\ncode_r0x0040410b:\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 489
    },
    "00404150": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004025ec)\n\nvoid fcn.00404150(void)\n\n{\n    int32_t **in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *in_EAX;\n    if (piVar2 != NULL) {\n        iVar1 = fcn.00401148(piVar2, piVar2[-1] >> 1);\n        if (iVar1 == 0) {\n            if (*0x41c008 != NULL) {\n                (**0x41c008)();\n            }\n            fcn.004025c0();\n            return;\n        }\n        *piVar2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "004041a0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004025ec)\n\nvoid __fastcall fcn.004041a0(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.004041a0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00404170();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x41c008 != NULL) {\n                (**0x41c008)();\n            }\n            fcn.004025c0();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 512
    },
    "00404384": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004025ec)\n\nvoid __fastcall fcn.00404384(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.00402628();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.00403538();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.00403c18();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.0040436c();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.004044a0(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00404384();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.00404974();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x41c008 != NULL) {\n                    (**0x41c008)(unaff_EDI, unaff_ESI);\n                }\n                fcn.004025c0();\n                return;\n            }\n            fcn.0040484c();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.00402628();\n    }\n    return;\n}\n",
        "token_count": 555
    },
    "004044a0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004025ec)\n\nvoid __thiscall fcn.004044a0(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.00403538();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.00403c18();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.0040436c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.004044a0();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00404384();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00404974();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x41c008 != NULL) {\n                (**0x41c008)();\n            }\n            fcn.004025c0();\n            return;\n        }\n        do {\n            fcn.0040484c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "00413d08": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00413d08(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc8;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 5;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_14h = 0x413d26;\n    var_10h = unaff_EBX;\n    fcn.00404150();\n    var_18h = 0x413eed;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00413d08::var_1ch;\n    var_20h = 0x413d3b;\n    var_14h = &stack0xfffffffc;\n    fcn.00403bdc();\n    var_20h = 0x413d46;\n    fcn.00407228();\n    var_20h = 0x413d53;\n    iVar2 = fcn.00403ad4();\n    if (iVar2 != 0) {\n        var_20h = 0x413d68;\n        fcn.00403ad4();\n        var_20h = 0x413d77;\n        fcn.00403a30();\n        var_20h = 0x413d84;\n        iVar2 = fcn.00403ad4();\n        if (iVar2 != 3 && -1 < iVar2 + -3) {\n            var_20h = 0x413d9f;\n            fcn.00403a30();\n            var_20h = 0x413da7;\n            iVar2 = fcn.00403790();\n            if (9 < iVar2) {\n                var_20h = &fcn.00413d08::var_ch;\n                fcn.004036cc();\n                fcn.004074e8(var_20h);\n                fcn.00403d88();\n                cVar1 = fcn.00413c48();\n                if (cVar1 != '\\0') {\n                    fcn.00403d88();\n                    cVar1 = fcn.00413ca0();\n                    if (cVar1 == '\\0') {\n                        fcn.00403d88();\n                        goto code_r0x00413ea3;\n                    }\n                }\n                fcn.004074e8(&fcn.00413d08::var_10h);\n                in_stack_ffffffc8 = 0x413f20;\n                fcn.00403850(0x413f20, var_10h, 0x413f2c, &fcn.00413d08::var_20h);\n                fcn.004074e8(in_stack_ffffffc8);\n                fcn.0040357c();\n                fcn.004037dc();\n                fcn.00403d88();\n                cVar1 = fcn.00413c48();\n                if (cVar1 != '\\0') {\n                    fcn.00403d88();\n                    cVar1 = fcn.00413ca0();\n                    if (cVar1 == '\\0') {\n                        fcn.00403d88();\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00413ea3:\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    fcn.00403bf4(0x413ef4);\n    fcn.00403508();\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 943
    },
    "0040d3b4": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.0040d3b4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack64 = 0x40d3df;\n    fcn.00403980();\n    uStack68 = 0x40d5c2;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.004034e4();\n    iVar1 = fcn.00403790();\n    if ((iVar1 != 0) && (iVar1 = fcn.00403790(),  iVar1 != 0)) {\n        var_10h = fcn.00403790();\n        if (var_10h < 0) {\n            var_10h = var_10h + 3;\n        }\n        var_10h = var_10h >> 2;\n        iVar1 = 1;\n        if (0 < var_10h) {\n            do {\n                fcn.00402864();\n                fcn.00402834();\n                fcn.00403d60();\n                iVar2 = fcn.00407108();\n                iVar2 = iVar2 << 0xc;\n                fcn.00402864(iVar2);\n                fcn.00402834();\n                fcn.00403d60();\n                iVar3 = fcn.00407108();\n                iVar2 = iVar2 + iVar3 * 0x100;\n                fcn.00402864(iVar2);\n                fcn.00402834();\n                fcn.00403d60();\n                iVar3 = fcn.00407108();\n                fcn.00402864(iVar2 + iVar3 * 0x10);\n                fcn.00402834();\n                fcn.00403d60();\n                fcn.00407108();\n                iVar2 = fcn.00403790();\n                if (iVar2 < iVar1) {\n                    iVar1 = 1;\n                }\n                fcn.004036cc();\n                fcn.00403798();\n                iVar1 = iVar1 + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x40d5c9;\n    uStack68 = 0x40d5a4;\n    fcn.004034e4();\n    uStack68 = 0x40d5b1;\n    fcn.00403bf4();\n    uStack68 = 0x40d5b9;\n    fcn.00403bdc();\n    uStack68 = 0x40d5c1;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 723
    },
    "00406204": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nvoid fcn.00406204(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x406215;\n    fcn.00403980();\n    uStack24 = 0x40626e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00403790();\n    if (0 < iVar1) {\n        do {\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x406275;\n    uStack24 = 0x40626d;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 208
    },
    "00401284": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401284(int32_t *param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *in_EAX;\n    uint *puVar3;\n    \n    puVar3 = *in_EAX;\n    *param_1 = *param_2;\n    param_1[1] = param_2[1];\n    do {\n        puVar1 = *puVar3;\n        if (*param_1 == puVar3[2] + puVar3[3]) {\n            fcn.0040126c();\n            *param_1 = puVar3[2];\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        else if (*param_1 + param_1[1] == puVar3[2]) {\n            fcn.0040126c();\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        puVar3 = puVar1;\n    } while (in_EAX != puVar1);\n    cVar2 = fcn.0040123c();\n    if (cVar2 == '\\0') {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "00401388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401388(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (in_EAX < 0x100000) {\n        uVar3 = 0x100000;\n    }\n    else {\n        uVar3 = in_EAX + 0xffffU & 0xffff0000;\n    }\n    param_2[1] = uVar3;\n    iVar2 = fcn.004011b4(0, uVar3, 0x2000, 1);\n    *param_2 = iVar2;\n    if (iVar2 != 0) {\n        cVar1 = fcn.0040123c();\n        if (cVar1 == '\\0') {\n            fcn.004011bc(*param_2, 0, 0x8000);\n            *param_2 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0040151c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040151c(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    \n    uVar5 = in_EAX & 0xfffff000;\n    uVar3 = in_EAX + param_2 + 0xfff & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar3 - uVar5;\n    puVar6 = *0x41c5d4;\n    do {\n        if (puVar6 == 0x41c5d4) {\n            return;\n        }\n        uVar1 = puVar6[2];\n        uVar4 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar4 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar3 < puVar6[3] + uVar1) {\n            uVar7 = uVar3;\n        }\n        if (uVar4 < uVar7) {\n            puVar8 = uVar7 - uVar4;\n            iVar2 = fcn.004011b4(uVar4, puVar8, 0x1000, 4);\n            if (iVar2 == 0) {\n                *puVar8 = 0;\n                return;\n            }\n        }\n        puVar6 = *puVar6;\n    } while( true );\n}\n",
        "token_count": 385
    },
    "004015b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015b0(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    \n    uVar5 = in_EAX + 0xfffU & 0xfffff000;\n    uVar4 = in_EAX + param_2 & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar4 - uVar5;\n    for (puVar6 = *0x41c5d4; puVar6 != 0x41c5d4; puVar6 = *puVar6) {\n        uVar1 = puVar6[2];\n        uVar3 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar3 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar4 < puVar6[3] + uVar1) {\n            uVar7 = uVar4;\n        }\n        if (uVar3 < uVar7) {\n            iVar2 = fcn.004011bc(uVar3, uVar7 - uVar3, 0x4000);\n            if (iVar2 == 0) {\n                *0x41c5b0 = 2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "00401a14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401a14(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX == *0x41c600) {\n        *0x41c600 = in_EAX[1];\n    }\n    piVar1 = in_EAX[1];\n    iVar2 = in_EAX[2];\n    if (iVar2 < 0x1001) {\n        if (in_EAX != piVar1) {\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + 3;\n            }\n            *(*0x41c60c + -0xc + (iVar2 >> 2) * 4) = piVar1;\n            iVar2 = *in_EAX;\n            *piVar1 = iVar2;\n            *(iVar2 + 4) = piVar1;\n            return;\n        }\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + 3;\n        }\n        *(*0x41c60c + -0xc + (iVar2 >> 2) * 4) = 0;\n    }\n    else {\n        iVar2 = *in_EAX;\n        *piVar1 = iVar2;\n        *(iVar2 + 4) = piVar1;\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00401a78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00401a78(void)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = *0x41c610;\n    while( true ) {\n        if (puVar1 == 0x41c610) {\n            *0x41c5b0 = 3;\n            return NULL;\n        }\n        if ((puVar1[2] <= in_EAX) && (in_EAX < puVar1[2] + puVar1[3])) break;\n        puVar1 = *puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 135
    },
    "00401afc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401afc(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *in_EAX;\n    \n    if (0xb < param_2) {\n        *in_EAX = param_2 | 2;\n        fcn.00401ad8();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n    }\n    *(in_EAX + param_2) = *(in_EAX + param_2) & 0xfffffffe;\n    return;\n}\n",
        "token_count": 130
    },
    "00401b94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00401b94(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    uVar1 = *in_EAX;\n    if ((uVar1 & 0x80000000) != 0) {\n        uVar3 = uVar1 & 0x7ffffffc;\n        in_EAX = in_EAX + uVar3;\n        uVar1 = *in_EAX;\n    }\n    if ((uVar1 & 2) == 0) {\n        fcn.00401a14();\n        uVar3 = uVar3 + in_EAX[2];\n        puVar2 = in_EAX + in_EAX[2];\n        *puVar2 = *puVar2 & 0xfffffffe;\n    }\n    return uVar3;\n}\n",
        "token_count": 206
    },
    "00401c7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401c7c(uint param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    char cVar4;\n    int32_t **in_EAX;\n    \n    in_EAX[2] = param_2;\n    *(in_EAX + param_2 + -4) = param_2;\n    if (param_2 < 0x1001) {\n        if (param_2 < 0) {\n            param_2 = param_2 + 3;\n        }\n        ppiVar1 = *(*0x41c60c + -0xc + (param_2 >> 2) * 4);\n        if (ppiVar1 == NULL) {\n            *(*0x41c60c + -0xc + (param_2 >> 2) * 4) = in_EAX;\n            in_EAX[1] = in_EAX;\n            *in_EAX = in_EAX;\n        }\n        else {\n            piVar2 = *ppiVar1;\n            in_EAX[1] = ppiVar1;\n            *in_EAX = piVar2;\n            *ppiVar1 = in_EAX;\n            piVar2[1] = in_EAX;\n        }\n    }\n    else {\n        if ((0x3bff < param_2) && (cVar4 = fcn.00401bcc(),  cVar4 != '\\0')) {\n            return;\n        }\n        ppiVar1 = *0x41c600;\n        piVar2 = **0x41c600;\n        ppiVar3 = in_EAX;\n        in_EAX[1] = *0x41c600;\n        *0x41c600 = ppiVar3;\n        *in_EAX = piVar2;\n        *ppiVar1 = in_EAX;\n        piVar2[1] = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 437
    },
    "00401e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401e3c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (in_EAX < 0) {\n        in_EAX = in_EAX + 3;\n    }\n    iVar1 = in_EAX >> 2;\n    if (iVar1 < 0x401) {\n        do {\n            iVar2 = *(*0x41c60c + -0xc + iVar1 * 4);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n    }\n    return iVar2;\n}\n",
        "token_count": 165
    },
    "00402628": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402628(uint32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    iVar1 = param_1 >> 2;\n    if (in_EAX < param_2) {\n        puVar2 = (param_1 - 4) + in_EAX;\n        param_2 = (param_1 - 4) + param_2;\n        if (-1 < iVar1) {\n            for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *param_2 = *puVar2;\n                puVar2 = puVar2 + -1;\n                param_2 = param_2 + -1;\n            }\n            puVar3 = puVar2 + 3;\n            puVar4 = param_2 + 3;\n            for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + -1;\n                puVar4 = puVar4 + -1;\n            }\n        }\n    }\n    else if ((param_2 != in_EAX) && (-1 < iVar1)) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 437
    },
    "004027b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004027b4(void)\n\n{\n    int32_t iVar1;\n    uchar auStack8 [8];\n    \n    iVar1 = fcn.00401170();\n    if (iVar1 != 0) {\n        *0x41b008 = auStack8;\n        return;\n    }\n    *0x41b008 = fcn.00401178();\n    return;\n}\n",
        "token_count": 85
    },
    "00402834": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402834(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    \n    uVar3 = *param_2;\n    uVar2 = *in_EAX + uVar3;\n    if (((!CARRY1(*in_EAX, uVar3)) && (uVar2 <= param_1)) ||\n       (uVar3 = param_1 - *in_EAX,  uVar2 = param_1,  *in_EAX <= param_1 && uVar3 != 0)) {\n        uVar1 = *in_EAX;\n        *in_EAX = uVar2;\n        puVar5 = param_2 + 1;\n        puVar6 = in_EAX + uVar1 + 1;\n        for (uVar4 = uVar3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00402bc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402bc4(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x28);\n}\n",
        "token_count": 34
    },
    "00402bcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402bcc(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.00402cec();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.00402d44();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00403508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403508(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.00402550();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 181
    },
    "004035a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.004035a8(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.00402530();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 117
    },
    "004036dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004036dc(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.004035a8();\n    if (param_2 != NULL) {\n        fcn.00402628();\n    }\n    fcn.004034e4();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 183
    },
    "00403748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403748(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.004035a8();\n    if (param_2 != NULL) {\n        fcn.00402628();\n    }\n    fcn.004034e4();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 176
    },
    "00403760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403760(uint32_t param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t arg_8h;\n    int16_t *piVar3;\n    bool bVar4;\n    \n    bVar4 = true;\n    uVar2 = param_1;\n    piVar3 = param_2;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        bVar4 = *piVar3 == 0;\n        piVar3 = piVar3 + 1;\n    } while (!bVar4);\n    if (bVar4) {\n        uVar2 = ~uVar2;\n    }\n    arg_8h = uVar2 + param_1;\n    if (arg_8h < 1) {\n        fcn.004034e4(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00403604(arg_8h),  -1 < iVar1)) {\n        fcn.004035d4();\n    }\n    else {\n        fcn.00403b1c();\n        fcn.00403604(arg_8h);\n        fcn.00403b1c();\n    }\n    return;\n}\n",
        "token_count": 305
    },
    "00403798": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403798(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    if (*in_EAX != 0) {\n        if (param_2 == *in_EAX) {\n            fcn.00403b1c();\n        }\n        else {\n            fcn.00403b1c();\n        }\n        fcn.00402628();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.004035a8(param_2);\n            fcn.00402628();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402550();\n        }\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "004037dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004037dc(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    \n    iVar3 = param_1;\n    if ((param_2 != 0) && (iVar3 = param_2,  param_1 != 0)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                iVar3 = fcn.004035a8();\n                fcn.00402628();\n                fcn.00402628();\n                if (iVar3 != 0) {\n                    *(iVar3 + -8) = *(iVar3 + -8) + -1;\n                }\n                fcn.00403538();\n                return;\n            }\n            fcn.00403538();\n        }\n        if (param_1 == 0) {\n            return;\n        }\n        iVar3 = param_1;\n        if (*in_EAX != 0) {\n            if (param_1 == *in_EAX) {\n                fcn.00403b1c();\n            }\n            else {\n                fcn.00403b1c();\n            }\n            fcn.00402628();\n            return;\n        }\n    }\n    if (iVar3 != 0) {\n        iVar2 = *(iVar3 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            iVar3 = fcn.004035a8(iVar3);\n            fcn.00402628();\n        }\n        else {\n            LOCK();\n            *(iVar3 + -8) = *(iVar3 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = iVar3;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402550();\n        }\n    }\n    return;\n}\n",
        "token_count": 493
    },
    "00403850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403850(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iStack24;\n    \n    piVar3 = NULL;\n    piVar1 = *(&stack0x00000000 + param_2 * 4);\n    iVar2 = param_2;\n    if ((piVar1 != NULL) && (*in_EAX == piVar1)) {\n        iVar2 = param_2 + -1;\n        piVar3 = piVar1;\n    }\n    do {\n        if ((*(&stack0x00000000 + iVar2 * 4) != NULL) && (piVar3 == *(&stack0x00000000 + iVar2 * 4))) {\n            piVar3 = NULL;\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (piVar3 == NULL) {\n        iStack24 = fcn.004035a8();\n    }\n    else {\n        fcn.00403b1c();\n        iStack24 = *in_EAX;\n        param_2 = param_2 + -1;\n        piVar3 = in_EAX;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.00402628();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar3 == NULL) {\n        if (iStack24 != 0) {\n            *(iStack24 + -8) = *(iStack24 + -8) + -1;\n        }\n        fcn.00403538();\n    }\n    // WARNING: Could not recover jumptable at 0x004038d7. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 464
    },
    "004039f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004039f0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.004034e4();\n    }\n    else {\n        fcn.004035d4();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00403a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403a30(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004039e0();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.00402628();\n            fcn.00403b1c();\n        }\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00403a78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403a78(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00403b1c();\n        fcn.00402628();\n        fcn.00402628();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00403bf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403bf4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            fcn.00401158(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 124
    },
    "00403d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403d88(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4);\n    }\n    if (arg_8h < 1) {\n        fcn.00403bdc(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00403624(arg_8h),  0 < iVar1)) {\n        fcn.00403cd0();\n    }\n    else {\n        fcn.0040410c();\n        fcn.00403624(arg_8h);\n        fcn.0040410c();\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00403cf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403cf4(uint param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    char *pcVar2;\n    \n    arg_8h = 0;\n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *pcVar2 != '\\0'; pcVar2 = pcVar2 + 4) {\n            if (pcVar2[1] == '\\0') {\ncode_r0x00403d15:\n                pcVar2 = pcVar2 + 1;\n                break;\n            }\n            if (pcVar2[2] == '\\0') {\ncode_r0x00403d14:\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00403d15;\n            }\n            if (pcVar2[3] == '\\0') {\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00403d14;\n            }\n        }\n        arg_8h = pcVar2 - param_2;\n    }\n    if (arg_8h < 1) {\n        fcn.00403bdc(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00403624(arg_8h),  0 < iVar1)) {\n        fcn.00403cd0();\n    }\n    else {\n        fcn.0040410c();\n        fcn.00403624(arg_8h);\n        fcn.0040410c();\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "00403d6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004025ec)\n\nuint * __fastcall fcn.00403d6c(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *in_EAX;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    \n    bVar6 = true;\n    uVar4 = param_1;\n    piVar5 = param_2;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        bVar6 = *piVar5 == 0;\n        piVar5 = piVar5 + 2;\n    } while (!bVar6);\n    if (bVar6) {\n        uVar4 = ~uVar4;\n    }\n    if (uVar4 + param_1 != 0) {\n        iVar2 = fcn.00401148(param_2, uVar4 + param_1);\n        if (iVar2 != 0) {\n            iVar1 = *param_2;\n            *param_2 = iVar2;\n            puVar3 = fcn.00401158(iVar1);\n            return puVar3;\n        }\n        if (*0x41c008 != NULL) {\n            (**0x41c008)();\n        }\n        puVar3 = fcn.004025c0();\n        return puVar3;\n    }\n    puVar3 = *in_EAX;\n    if (puVar3 != NULL) {\n        *in_EAX = 0;\n        in_EAX = puVar3;\n        fcn.00401158();\n    }\n    return in_EAX;\n}\n",
        "token_count": 387
    },
    "00403db4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403db4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403da8();\n    if (iVar1 != 0) {\n        iVar1 = fcn.00403da8();\n        fcn.00403bb4();\n        if (0 < iVar1) {\n            fcn.00402628();\n        }\n        fcn.00402628();\n        fcn.00403bcc();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00403e14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403e14(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00403da8();\n    iVar2 = fcn.00403da8();\n    if ((iVar1 != 0) || (iVar2 != 0)) {\n        fcn.00403bb4();\n        fcn.00402628();\n        fcn.00402628();\n        fcn.00403bcc();\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0040410c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040410c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (0 < param_2) {\n        fcn.00403bb4();\n        iVar1 = fcn.00403da8();\n        if (0 < iVar1) {\n            fcn.00402628();\n        }\n    }\n    fcn.00403bcc();\n    return;\n}\n",
        "token_count": 96
    },
    "00404170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404170(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.004041a0();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 123
    },
    "00404234": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404234(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00404280();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 122
    },
    "00404804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404804(void)\n\n{\n    fcn.00404678(&stack0x00000004);\n    return;\n}\n",
        "token_count": 30
    },
    "00405088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405088(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x40509c;\n    fcn.00403980();\n    uStack28 = 0x405107;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00403538();\n    iVar2 = fcn.00403790();\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            cVar1 = *(*param_2 + -1 + iVar4);\n            if ((cVar1 + 0x9fU < 0x1a) || (cVar1 + 0x20U < 0x20)) {\n                iVar3 = fcn.004039e8();\n                *(iVar3 + -1 + iVar4) = *(*param_2 + -1 + iVar4) + -0x20;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x40510e;\n    uStack28 = 0x405106;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 363
    },
    "00405114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405114(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x40512a;\n    fcn.00403980();\n    uStack20 = 0x40517b;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405088(*0x41c66c);\n    uVar1 = 0x405190;\n    fcn.00403850(0x405190, var_8h);\n    *in_FS_OFFSET = uVar1;\n    fcn.00403508(0x405182);\n    return;\n}\n",
        "token_count": 204
    },
    "0040525c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040525c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x405276;\n    fcn.00403980();\n    puStack36 = 0x40527e;\n    fcn.00403980();\n    puStack36 = 0x405286;\n    fcn.00403980();\n    puStack36 = 0x40528e;\n    fcn.00403980();\n    puStack36 = 0x405296;\n    fcn.00403980();\n    puStack36 = 0x40529e;\n    fcn.00403980();\n    uStack40 = 0x405413;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    var_10h = fcn.00404648();\n    if (-1 < var_10h + -1) {\n        bVar2 = true;\n        do {\n            fcn.004038dc();\n            if (bVar2) {\n                fcn.004038dc();\n                if (bVar2) {\n                    fcn.004038dc();\n                    if (bVar2) {\n                        fcn.004038dc();\n                        if (bVar2) {\n                            fcn.004038dc();\n                            if (bVar2) {\n                                fcn.004038dc();\n                                if (bVar2) goto code_r0x004053eb;\n                            }\n                        }\n                    }\n                }\n            }\n            var_10h = var_10h + -1;\n            bVar2 = var_10h == 0;\n        } while (!bVar2);\n    }\n    iVar1 = fcn.00404648();\n    fcn.00404804(iVar1 + 1);\n    fcn.00404648();\n    fcn.00403538();\n    fcn.00404648();\n    fcn.00403538();\n    fcn.00404648();\n    fcn.00403538();\n    fcn.00404648();\n    fcn.00403538();\n    fcn.00404648();\n    fcn.00403538();\n    fcn.00404648();\n    fcn.00403538();\n    *0x41b0b8 = *0x41b0b8 + 1;\n    fcn.00405114();\ncode_r0x004053eb:\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x40541a;\n    uStack40 = 0x405405;\n    fcn.00403508();\n    uStack40 = 0x405412;\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 669
    },
    "00405f18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405f18(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack16 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack16;\n    *0x41c770 = *0x41c770 + 1;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 86
    },
    "00405f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405f80(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    bool bVar4;\n    \n    if (in_EAX != 0) {\n        param_1 = param_1 + -1;\n        iVar1 = *(in_EAX + -4) - param_1;\n        if (iVar1 != 0 && param_1 <= *(in_EAX + -4)) {\n            bVar4 = in_EAX + param_1 == NULL;\n            pcVar2 = in_EAX + param_1;\n            do {\n                pcVar3 = pcVar2;\n                if (iVar1 == 0) break;\n                iVar1 = iVar1 + -1;\n                pcVar3 = pcVar2 + 1;\n                bVar4 = param_2 == *pcVar2;\n                pcVar2 = pcVar3;\n            } while (!bVar4);\n            if (bVar4) {\n                return pcVar3 - in_EAX;\n            }\n        }\n        in_EAX = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 267
    },
    "00406144": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406144(char param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x406164;\n    fcn.00403980();\n    puStack32 = 0x40616c;\n    fcn.00403980();\n    uStack36 = 0x4061f4;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = fcn.00403790();\n    uVar3 = 0x40618c;\n    iVar2 = fcn.00403790();\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        if (param_1 == '\\0') {\n            fcn.0040633c();\n            fcn.0040357c();\n            fcn.0040633c();\n            fcn.0040357c();\n        }\n        uVar3 = 0x2a;\n        fcn.00406004(0x2a);\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack36 = 0x4061fb;\n    uStack40 = 0x4061f3;\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 349
    },
    "0040633c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040633c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x406350;\n    fcn.00403980();\n    uStack28 = 0x4063bb;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00403538();\n    iVar2 = fcn.00403790();\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            cVar1 = *(*param_2 + -1 + iVar4);\n            if ((cVar1 + 0x9fU < 0x1a) || (cVar1 + 0x20U < 0x20)) {\n                iVar3 = fcn.004039e8();\n                *(iVar3 + -1 + iVar4) = *(*param_2 + -1 + iVar4) + -0x20;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4063c2;\n    uStack28 = 0x4063ba;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 366
    },
    "004065f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004065f0(void)\n\n{\n    int32_t iVar1;\n    uint uStack520;\n    uchar auStack516 [512];\n    \n    uStack520 = 0xff;\n    iVar1 = (***0x41b380)(auStack516, &uStack520);\n    if (iVar1 == 0) {\n        fcn.00403bdc();\n    }\n    else {\n        fcn.00403d6c();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00406634": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406634(void)\n\n{\n    int32_t iVar1;\n    uint uStack520;\n    uchar auStack516 [512];\n    \n    uStack520 = 0x100;\n    iVar1 = (***0x41b454)(auStack516, &uStack520);\n    if (iVar1 == 0) {\n        fcn.00403bdc();\n    }\n    else {\n        fcn.00403d6c();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0040680c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040680c(uint param_1)\n\n{\n    fcn.004067c0(param_1);\n    fcn.004035d4();\n    return;\n}\n",
        "token_count": 42
    },
    "00406834": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406834(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x40684d;\n    fcn.00403980();\n    uStack36 = 0x4068f5;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.004034e4();\n    iVar2 = fcn.00403790();\n    if (0 < iVar2) {\n        iVar3 = 1;\n        do {\n            cVar1 = *(in_EAX + -1 + iVar3);\n            if ((cVar1 + 0xbfU < 0x1a) || (cVar1 + 0x9fU < 0x1a)) {\n                fcn.004036cc();\n                fcn.00403798();\n            }\n            else {\n                fcn.0040680c(0x40690c, *param_2);\n                uStack40 = 0;\n                fcn.00403850();\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4068fc;\n    uStack36 = 0x4068ec;\n    fcn.00403508();\n    uStack36 = 0x4068f4;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 415
    },
    "00406b08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406b08(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x406b24;\n    fcn.00403980();\n    uStack40 = 0x406bb8;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040357c();\n    iVar1 = fcn.00403790();\n    iVar2 = fcn.00403790();\n    iVar4 = 1;\n    if (0 < iVar1) {\n        iVar5 = 1;\n        do {\n            iVar3 = fcn.004039e8();\n            *(iVar3 + -1 + iVar5) = *(in_EAX + -1 + iVar5) ^ *(iVar4 + -1);\n            iVar4 = iVar4 + 1;\n            if (iVar2 < iVar4) {\n                iVar4 = 1;\n            }\n            iVar5 = iVar5 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    fcn.00403538();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x406bbf;\n    uStack40 = 0x406baf;\n    fcn.004034e4();\n    uStack40 = 0x406bb7;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 411
    },
    "00406bd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406bd8(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    uint uStack544;\n    uint uStack540;\n    uint uStack536;\n    uchar *puStack532;\n    uint uStack528;\n    uchar auStack524 [4];\n    uint uStack520;\n    \n    puStack532 = &stack0xfffffdf4;\n    uStack520 = 0x100;\n    uStack528 = 0x406bf5;\n    fcn.00403c18();\n    uStack528 = 0;\n    uStack536 = 0;\n    uStack540 = 0x20019;\n    uStack544 = 0;\n    uStack548 = 0;\n    uStack552 = 0;\n    uStack556 = 0x406c74;\n    uVar2 = 0x80000002;\n    iVar1 = (***0x41b194)(0x80000002);\n    if (iVar1 == 0) {\n        iVar1 = (***0x41b398)(uVar2, 0x406cd0, 0, 0, &stack0xfffffdd8, &stack0xfffffdd4);\n        if (iVar1 == 0) {\n            fcn.00403d6c();\n        }\n        (***0x41b1fc)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "00406e6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406e6c(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack552;\n    uint uStack548;\n    uchar *puStack544;\n    uint var_214h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack544 = 0x406e86;\n    fcn.00404150();\n    puStack544 = 0x406e8e;\n    fcn.00404150();\n    uStack548 = 0x406f1f;\n    uStack552 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd8;\n    var_10h = 0xfe;\n    var_214h._0_2_ = 0;\n    puStack544 = &stack0xfffffffc;\n    fcn.00403d98(0, 0x20119, &fcn.00406e6c::var_14h);\n    (***0x41b1a4)();\n    uVar1 = fcn.00403d98(0, &fcn.00406e6c::var_ch, &fcn.00406e6c::var_214h, &fcn.00406e6c::var_10h);\n    (***0x41b398)(var_14h, uVar1);\n    fcn.00403d6c();\n    *in_FS_OFFSET = var_14h;\n    fcn.00403bf4(0x406f26);\n    return;\n}\n",
        "token_count": 370
    },
    "0040709c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040709c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x4070f9;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    fcn.0040297c();\n    fcn.00403d60();\n    fcn.00403c18();\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x407100;\n    uStack280 = 0x4070f8;\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 174
    },
    "0040717c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040717c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x407194;\n    fcn.00404150();\n    puStack24 = 0x40719c;\n    fcn.00404150();\n    puStack24 = 0x4071a4;\n    fcn.00404150();\n    uStack28 = 0x407217;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while( true ) {\n        iVar1 = fcn.004040bc();\n        if (iVar1 == 0) break;\n        fcn.004040bc();\n        fcn.00403da8();\n        fcn.00403f90();\n        fcn.00404020();\n    }\n    fcn.00403c18();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x40721e;\n    uStack28 = 0x407216;\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 295
    },
    "00407360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407360(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x407375;\n    var_8h = param_2;\n    fcn.00404150();\n    puStack24 = 0x40737d;\n    fcn.00403980();\n    uStack28 = 0x4073f4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    uVar1 = fcn.00403d98(0xc0000000, 3, 0, 2, 0, 0);\n    uVar1 = (***0x41b3c8)(uVar1);\n    uVar2 = fcn.00403790(&fcn.00407360::var_ch, 0);\n    uVar2 = fcn.004039e8(uVar2);\n    fcn.00404ee8(uVar1, uVar2);\n    (***0x41b1b4)();\n    *in_FS_OFFSET = uVar1;\n    fcn.004034e4(0x4073fb);\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 333
    },
    "00407400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407400(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint in_stack_ffffffd4;\n    uint *arg_8h_00;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x40741c;\n    fcn.00404150();\n    puStack28 = 0x407424;\n    fcn.00404150();\n    puStack28 = 0x40742c;\n    fcn.00404150();\n    uStack32 = 0x4074d8;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00403bdc();\n    bVar2 = true;\n    fcn.00403ec0();\n    if (!bVar2) {\n        bVar2 = true;\n        fcn.00403ec0();\n        if (!bVar2) {\n            bVar2 = true;\n            fcn.00403ec0();\n            if (!bVar2) {\n                iVar1 = fcn.004040bc();\n                if (iVar1 != 0) {\n                    fcn.00403da8();\n                    arg_8h_00 = &fcn.00407400::var_8h;\n                    fcn.00403da8();\n                    fcn.00403f44(arg_8h_00);\n                    in_stack_ffffffd4 = 0x4074a6;\n                    iVar1 = fcn.004040bc();\n                    if (0 < iVar1) {\n                        fcn.00403f44(arg_8h);\n                        in_stack_ffffffd4 = arg_8h;\n                    }\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x4074df;\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 465
    },
    "004076b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004076b4(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = 0x4076cc;\n    var_4h = param_2;\n    fcn.00404150();\n    puStack40 = 0x4076d4;\n    fcn.00404150();\n    uStack44 = 0x40775a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_10h = 0xffffffff;\n    var_ch = 4;\n    puStack40 = &stack0xfffffffc;\n    fcn.00403d98(0, 0x20019, &fcn.004076b4::var_14h);\n    (***0x41b1a4)();\n    uVar1 = fcn.00403d98(0, &fcn.004076b4::var_ch, &fcn.004076b4::var_18h, &fcn.004076b4::var_10h);\n    (***0x41b398)(var_14h, uVar1);\n    (***0x41b1fc)();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00403bf4(0x407761);\n    return;\n}\n",
        "token_count": 364
    },
    "00407a18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407a18(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00404804(0);\n    fcn.00403790();\n    while( true ) {\n        iVar1 = fcn.004079ac();\n        if (iVar1 < 1) break;\n        iVar1 = fcn.00404648();\n        fcn.00404804(iVar1 + 1);\n        fcn.00404648();\n        fcn.004039f0();\n    }\n    iVar1 = fcn.00404648();\n    fcn.00404804(iVar1 + 1);\n    iVar1 = fcn.00404648();\n    fcn.00403790(*param_1 + -4 + iVar1 * 4);\n    fcn.004039f0();\n    return;\n}\n",
        "token_count": 188
    },
    "00408180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "PEB access",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "access PEB ldr_data",
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d"
        ],
        "decompiled_code": "\nvoid fcn.00408180(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x408196;\n    fcn.00403980();\n    uStack20 = 0x408def;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00407a18();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403d88();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403d88();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403d88();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403538();\n    fcn.00403d88();\n    fcn.00403d88();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x408df6;\n    uStack20 = 0x408de6;\n    fcn.00404810();\n    uStack20 = 0x408dee;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 1657
    },
    "004099c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004099c0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint uStack640;\n    uint uStack636;\n    uchar *puStack632;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    \n    puStack632 = &stack0xfffffffc;\n    uVar4 = 1;\n    uStack636 = 0x409b45;\n    uStack640 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack640;\n    fcn.00404e60(*0x41ca58);\n    fcn.00403e14(&var_250h);\n    uVar1 = fcn.00403d98();\n    uVar1 = (***0x41b2d8)(uVar1);\n    do {\n        fcn.00403d6c();\n        fcn.00403ec0();\n        if (!uVar4) {\n            fcn.00403d6c();\n            fcn.00403ec0();\n            if (!uVar4) {\n                fcn.00403d6c(0x409b78, *0x41ca5c);\n                fcn.00403e78(0);\n                uVar2 = fcn.00403d98();\n                (***0x41b3e8)(uVar2);\n            }\n        }\n        iVar3 = (***0x41b198)(uVar1, &var_250h);\n        uVar4 = iVar3 == 0;\n    } while (!uVar4);\n    (***0x41b3ec)(uVar1);\n    fcn.004062fc();\n    uVar1 = fcn.00403d98();\n    (***0x41b320)(uVar1);\n    uVar1 = fcn.00403d98();\n    (***0x41b11c)();\n    *in_FS_OFFSET = uVar1;\n    fcn.00403bf4(0x409b4c);\n    return;\n}\n",
        "token_count": 492
    },
    "00409c28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00409c28(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint arg_8h_00;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 8;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_18h = 0x409c47;\n    fcn.00404150();\n    puVar1 = *0x41b3cc;\n    var_1ch = 0x409e88;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00409c28::var_20h;\n    var_24h = NULL;\n    var_28h = 0x409c75;\n    var_18h = &stack0xfffffffc;\n    fcn.00404804();\n    var_24h = 0x409c83;\n    fcn.00407228();\n    var_24h = &fcn.00409c28::var_1ch;\n    var_28h = 0x409ea0;\n    var_2ch = **0x41b1f0;\n    var_30h = 0x409eac;\n    fcn.00403850();\n    fcn.004074e8(var_30h);\n    fcn.0040357c();\n    while( true ) {\n        fcn.00403850(0x409ed4, *puVar1, 0x409ea0);\n        iVar2 = fcn.00403ad4();\n        if (iVar2 == 0) break;\n        fcn.004037dc(&fcn.00409c28::var_ch);\n        arg_8h_00 = *puVar1;\n        fcn.00403850(0x409ed4, arg_8h_00, 0x409ea0, var_24h);\n        fcn.004074e8(arg_8h_00);\n        fcn.00403ad4(&fcn.00409c28::var_10h);\n        fcn.004039f0();\n        arg_8h = &fcn.00409c28::var_14h;\n        fcn.004037dc();\n        fcn.004074e8(arg_8h);\n        var_30h = &fcn.00409c28::var_30h;\n        fcn.004037dc();\n        fcn.004074e8(var_30h);\n        fcn.004037dc();\n        fcn.004037dc();\n        fcn.00403ad4();\n        fcn.00403a30();\n        iVar2 = fcn.00403790();\n        if (0 < iVar2) {\n            fcn.004037dc();\n            iVar2 = fcn.00403790();\n            if (0 < iVar2) {\n                iVar2 = fcn.00404648();\n                fcn.00404804(iVar2 + 1);\n            }\n        }\n        fcn.00404648();\n        fcn.00403538();\n        fcn.00404648();\n        fcn.00403538();\n        fcn.00404648();\n        fcn.00403538();\n    }\n    *in_FS_OFFSET = 0x409ed4;\n    fcn.00403508(0x409e8f);\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 995
    },
    "0040a610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a610(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint auStack20 [2];\n    uchar auStack12 [8];\n    \n    uVar2 = 0;\n    auStack20[0] = param_2;\n    iVar1 = (**0x41ca64)(auStack20, 0, 0, 0, 0, 1, auStack12);\n    if (iVar1 == 0) {\n        fcn.00403538();\n    }\n    else {\n        fcn.004036dc();\n        fcn.00403b1c();\n        fcn.00404ed8(uVar2);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0040a6f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0040a6f0(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 10;\n    do {\n        var_10h = var_10h + -1;\n    } while (var_10h != 0);\n    var_ch = 0;\n    var_18h = 0x40a716;\n    var_14h = unaff_EBX;\n    fcn.00404150();\n    var_18h = 0x40a71e;\n    fcn.00404150();\n    var_18h = 0x40a726;\n    fcn.00404150();\n    var_1ch = 0x40a99b;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040a6f0::var_20h;\n    var_18h = &stack0xfffffffc;\n    fcn.004034e4();\n    (***0x41b1c4)();\n    fcn.0040709c();\n    fcn.00406fdc(var_34h);\n    fcn.00403e78(0x40a9b0, var_38h);\n    fcn.004078d8();\n    fcn.004062fc();\n    fcn.00403e78(var_38h, 0x40a9d4, var_40h);\n    fcn.004078d8();\n    uVar2 = fcn.00403d98();\n    arg_8h_00 = fcn.00403d98();\n    (***0x41b44c)();\n    fcn.0040377c();\n    fcn.00404b58();\n    fcn.00403d88();\n    cVar1 = fcn.0040776c();\n    if (cVar1 != '\\0') {\n        uVar3 = fcn.00403990(&fcn.0040a6f0::var_10h);\n        iVar4 = (***0x41b140)(uVar3);\n        if (iVar4 == 0) {\n            uVar3 = fcn.00403990(0xffffffff, &fcn.0040a6f0::var_14h, &fcn.0040a6f0::var_18h);\n            iVar4 = (***0x41b2d4)(var_10h, uVar3);\n            if (iVar4 == 0) {\n                while (iVar4 = (***0x41b384)(var_14h),  iVar4 == 100) {\n                    uVar3 = (***0x41b414)(var_14h, 2);\n                    (***0x41b1dc)(var_14h, 2, uVar3);\n                    fcn.0040a610();\n                    iVar4 = fcn.00403790();\n                    uVar3 = var_14h;\n                    if (iVar4 != 0) {\n                        (***0x41b1dc)(var_14h, 1);\n                        fcn.004036dc();\n                        fcn.0040377c(var_1ch, uVar3);\n                        (***0x41b1dc)(var_14h, 0, 0x40a8b4);\n                        fcn.004036dc();\n                        fcn.0040377c(0);\n                        fcn.0040525c(arg_8h_00, uVar2, 0xffffffff);\n                    }\n                }\n            }\n        }\n        (***0x41b46c)(var_14h);\n        (***0x41b20c)(var_10h);\n        fcn.00403d88();\n        uVar2 = fcn.00403d98();\n        (***0x41b3e8)(uVar2);\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00403508(0x40a9a2);\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403508();\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 1363
    },
    "0040a9e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a9e4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack704;\n    uint uStack700;\n    uchar *puStack696;\n    uint uStack692;\n    uint uStack688;\n    uint uStack684;\n    uint uStack680;\n    uint uStack676;\n    uint uStack672;\n    uint *puStack668;\n    uint uStack664;\n    uint uStack660;\n    uchar *puStack656;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_234h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_270h = 0;\n    var_268h = 0;\n    var_26ch = 0;\n    var_264h = 0;\n    puStack656 = 0x40aa2d;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00404150();\n    puStack656 = 0x40aa35;\n    fcn.00404150();\n    uStack660 = 0x40abd6;\n    uStack664 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd68;\n    puStack668 = 0x40aa4b;\n    puStack656 = &stack0xfffffffc;\n    fcn.00403bdc();\n    puStack668 = &fcn.0040a9e4::var_260h;\n    uStack672 = 0x40aa65;\n    fcn.00403e14();\n    uStack672 = 0x40aa70;\n    uStack672 = fcn.00403d98();\n    uStack676 = 0x40aa7a;\n    var_10h = (***0x41b2d8)();\n    do {\n        uStack676 = var_4h;\n        uStack680 = 0x40abf8;\n        uStack684 = 0x40aa9b;\n        fcn.00403d6c();\n        uStack684 = var_26ch;\n        uStack688 = 0x40abf8;\n        uStack692 = **0x41b3d8;\n        puStack696 = 0x40aabd;\n        fcn.00403e78();\n        puStack696 = 0x40aac8;\n        cVar1 = fcn.0040776c();\n        if (cVar1 != '\\0') {\n            uStack700 = 0x40ab78;\n            uStack704 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd40;\n            puStack696 = &stack0xfffffffc;\n            fcn.00403d6c(&fcn.0040a9e4::var_270h, *var_ch);\n            fcn.00403d6c(0x40abf8, var_4h, 0);\n            uVar3 = 0x40abf8;\n            fcn.00403e78(**0x41b3d8, 0x40abf8, 0);\n            fcn.0040a6f0(uVar3);\n            uVar3 = 0x40ac00;\n            fcn.00403e78(0x40ac00, var_270h);\n            *in_FS_OFFSET = uVar3;\n        }\n        iVar2 = (***0x41b198)(var_10h, &fcn.0040a9e4::var_260h);\n    } while (iVar2 != 0);\n    uStack676 = var_10h;\n    uStack680 = 0x40abab;\n    (***0x41b3ec)();\n    *in_FS_OFFSET = uStack676;\n    puStack668 = 0x40abdd;\n    uStack672 = 0x40abc8;\n    fcn.00403bf4();\n    uStack672 = 0x40abd5;\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 971
    },
    "0040b25c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b25c(void)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar4;\n    int32_t *piStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    var_4h = NULL;\n    var_ch = 0;\n    uStack80 = 0x40b3a9;\n    piStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack84;\n    fcn.0040b1a4(0);\n    iVar3 = 0;\n    fcn.00404804(1);\n    fcn.0040b224();\n    fcn.004049a0();\n    uVar1 = fcn.0040495c();\n    (**(**0x41ca78 + 0x1c))(*0x41ca78, uVar1);\n    piVar4 = var_4h;\n    (**(*var_4h + 0x1c))(var_4h, 0x40b3cc, 0);\n    while( true ) {\n        iVar2 = (**(*var_4h + 0xc))(var_4h, 1, &var_34h, &var_8h);\n        if (iVar2 != 0) break;\n        iVar3 = iVar3 + 1;\n        fcn.00404804(iVar3);\n        fcn.0040370c();\n        iVar2 = fcn.00403ad4();\n        if (iVar2 != 0) {\n            piVar4 = &var_ch;\n            fcn.00403ad4();\n            fcn.004039f0();\n        }\n        fcn.00403790();\n        uVar1 = fcn.00402530();\n        *(*in_EAX + -4 + iVar3 * 4) = uVar1;\n        fcn.00403790();\n        fcn.00404594();\n    }\n    *in_FS_OFFSET = piVar4;\n    fcn.0040495c(0x40b3b0);\n    fcn.004034e4();\n    fcn.0040495c();\n    return;\n}\n",
        "token_count": 556
    },
    "0040b47c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040b47c(void)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_28h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_ch = 0;\n    uStack64 = 0x40b613;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack68;\n    uVar2 = 0;\n    fcn.004034e4();\n    (***0x41b27c)(&var_4h, 0, 0, 1, 0xf0000000);\n    arg_8h = var_4h;\n    iVar1 = (***0x41b144)(var_4h, 0x8004, 0, 0, &var_8h);\n    if (iVar1 != 0) {\n        fcn.00403d24(0);\n        fcn.00403da8();\n        iVar1 = (***0x41b3f0)(var_8h);\n        if (iVar1 != 0) {\n            var_10h = 0x14;\n            fcn.00404804(0x14);\n            iVar1 = (***0x41b484)(var_8h, 2, var_ch, &var_10h, 0);\n            if (iVar1 != 0) {\n                (***0x41b3e0)(var_8h);\n                (***0x41b3b0)(var_4h, 0);\n                if (-1 < var_10h + -1) {\n                    var_14h = var_10h;\n                    iVar1 = 0;\n                    do {\n                        uVar2 = uVar2 + *(var_ch + iVar1);\n                        var_24h = *(var_ch + iVar1);\n                        var_20h._0_1_ = 0;\n                        fcn.0040802c(&var_1ch);\n                        fcn.00403798();\n                        iVar1 = iVar1 + 1;\n                        var_14h = var_14h + -1;\n                    } while (var_14h != 0);\n                }\n                arg_8h = &var_28h;\n                var_24h = uVar2;\n                var_20h._0_1_ = 0;\n                fcn.0040802c(arg_8h);\n                fcn.00403798();\n            }\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.004034e4(0x40b61a);\n    fcn.004034e4();\n    fcn.00403bdc();\n    fcn.00404810();\n    return;\n}\n",
        "token_count": 744
    },
    "0040b634": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040b634(void)\n\n{\n    uint16_t uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((in_EAX & 1) != 0);\n    }\n    uVar1 = in_EAX / *0x40b668 == iVar2;\n    if (uVar1 != 0) {\n        return CONCAT44(in_EAX, CONCAT31(iVar2 >> 8 & 0xffff00 | in_EAX / *0x40b668 < iVar2 | (uVar1 << 0xe) >> 8, 1));\n    }\n    return in_EAX << 0x20;\n}\n",
        "token_count": 176
    },
    "0040b804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b804(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uVar6;\n    uint *puVar7;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_44h = 0;\n    var_40h = 0;\n    var_ch = 0;\n    var_14h = 0;\n    puStack92 = 0x40b82e;\n    var_4h = in_EAX;\n    fcn.00404874();\n    puStack92 = 0x40b836;\n    fcn.00403980();\n    uStack96 = 0x40ba26;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack92 = &stack0xfffffffc;\n    fcn.004034e4();\n    var_10h = 0;\n    puVar7 = &fcn.0040b804::var_18h;\n    uVar6 = 1;\n    uVar5 = 0;\n    iVar1 = (***0x41b1a4)(0x80000001);\n    if (iVar1 == 0) {\n        var_1ch = 0x400;\n        uVar2 = fcn.00402530();\n        while( true ) {\n            iVar1 = (***0x41b3a4)(var_18h, var_10h, uVar2, &fcn.0040b804::var_1ch, 0, 0, 0, 0);\n            if (iVar1 == 0x103) break;\n            var_1ch = 0x400;\n            iVar1 = fcn.00404650();\n            if (-1 < iVar1) {\n                iVar1 = iVar1 + 1;\n                iVar4 = 0;\n                do {\n                    fcn.0040b47c();\n                    (***0x41b398)(var_18h, uVar2, 0, &fcn.0040b804::var_20h, 0, &fcn.0040b804::var_24h);\n                    fcn.00404804(var_24h);\n                    iVar3 = (***0x41b398)(var_18h, uVar2, 0, &fcn.0040b804::var_20h, var_ch, &fcn.0040b804::var_24h);\n                    if (iVar3 == 0) {\n                        var_28h = var_ch;\n                        var_2ch = var_24h;\n                        var_38h = *(var_4h + iVar4 * 4);\n                        fcn.00403d24();\n                        iVar3 = fcn.00403da8();\n                        var_3ch = (iVar3 + 1) * 2;\n                        iVar3 = (***0x41b338)(&fcn.0040b804::var_2ch, 0, &fcn.0040b804::var_3ch, 0, 0, 1, \n                                              &fcn.0040b804::var_34h);\n                        if (iVar3 != 0) {\n                            fcn.0040370c();\n                            fcn.0040b66c(&fcn.0040b804::var_44h, 0);\n                            fcn.00403798();\n                        }\n                    }\n                    iVar4 = iVar4 + 1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            fcn.00404f5c();\n            var_10h = var_10h + 1;\n        }\n    }\n    (***0x41b1fc)();\n    *in_FS_OFFSET = var_18h;\n    fcn.00403508(0x40ba2d, uVar5, uVar6, puVar7);\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00404810();\n    fcn.004034e4();\n    fcn.00404810();\n    return;\n}\n",
        "token_count": 1075
    },
    "0040ba38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ba38(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x40ba51;\n    fcn.00403980();\n    uStack24 = 0x40baac;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.004034e4();\n    fcn.0040b25c();\n    fcn.00403d98();\n    fcn.0040b804(param_2);\n    *in_FS_OFFSET = param_2;\n    uStack24 = 0x40bab3;\n    uStack28 = 0x40baa3;\n    fcn.00404810();\n    uStack28 = 0x40baab;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 237
    },
    "0040bc24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040bc24(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puVar2;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack48 = 0x40be02;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    fcn.0040357c();\n    fcn.0040bb90();\n    iVar1 = fcn.00403790();\n    if (iVar1 != 0) {\n        while (iVar1 = fcn.00403ad4(),  iVar1 != 0) {\n            fcn.00403ad4(&fcn.0040bc24::var_8h);\n            fcn.004039f0();\n            fcn.00403ad4();\n            fcn.00403a30();\n            fcn.00403ad4(&fcn.0040bc24::var_ch);\n            fcn.004039f0();\n            fcn.00403ad4();\n            fcn.00403790();\n            fcn.00403a30();\n            fcn.00403ad4(&fcn.0040bc24::var_10h);\n            fcn.004039f0();\n            fcn.00403ad4();\n            fcn.00403790();\n            fcn.00403a30();\n            puVar2 = &fcn.0040bc24::var_14h;\n            fcn.00403ad4();\n            fcn.004039f0();\n            fcn.00403ad4();\n            fcn.00403790();\n            fcn.00403a30();\n            iVar1 = fcn.00403790();\n            if ((iVar1 != 0) && (iVar1 = fcn.00403790(),  iVar1 != 0)) {\n                puVar2 = NULL;\n                fcn.0040525c(0, var_14h, var_10h);\n            }\n        }\n    }\n    *in_FS_OFFSET = puVar2;\n    *in_FS_OFFSET = iStack52;\n    puStack44 = 0x40be09;\n    uStack48 = 0x40be01;\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 619
    },
    "0040bebc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040bebc(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    uStack96 = 0x40c0de;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack100;\n    uVar1 = fcn.00403990();\n    uVar1 = fcn.00403990(uVar1);\n    uVar1 = fcn.00404ec0(uVar1);\n    pcVar2 = fcn.00404e98(uVar1);\n    fcn.00403d88(&var_30h);\n    uVar1 = fcn.00403d98();\n    (*pcVar2)(uVar1);\n    fcn.00403d88(&var_40h);\n    uVar1 = fcn.00403d98();\n    (*pcVar2)(uVar1);\n    uVar1 = fcn.00403990();\n    iVar3 = fcn.00404ec0();\n    if (iVar3 != 0) {\n        uVar4 = fcn.00403990();\n        pcVar2 = fcn.00404e98(iVar3, uVar4);\n        uVar4 = fcn.00403990();\n        pcVar5 = fcn.00404e98(iVar3, uVar4);\n        uVar4 = fcn.00403990();\n        var_4h = fcn.00404e98(iVar3, uVar4);\n        var_8h = 0;\n        iVar3 = (*pcVar2)(&var_30h, 0, &var_ch);\n        if (iVar3 == 0) {\n            iVar3 = (*pcVar5)(var_ch, 0x200, &var_8h, &var_10h);\n            if ((iVar3 == 0) && (-1 < var_8h + -1)) {\n                iVar7 = 0;\n                iVar3 = var_8h;\n                do {\n                    fcn.00404810();\n                    iVar6 = (*var_4h)(var_ch, &var_40h, *(var_10h + 0x14 + iVar7 * 0x38), \n                                      *(var_10h + 0x18 + iVar7 * 0x38), 0, 0, 0, &var_14h);\n                    if (iVar6 == 0) {\n                        fcn.0040370c();\n                        fcn.0040370c();\n                        fcn.0040370c();\n                        iVar6 = fcn.00403790();\n                        if (iVar6 != 0) {\n                            iVar6 = fcn.00403790();\n                            if (iVar6 != 0) {\n                                uVar1 = 0x40c0f4;\n                                fcn.0040525c(0x40c0f4, var_20h, var_1ch);\n                            }\n                        }\n                    }\n                    iVar7 = iVar7 + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00403bf4(0x40c0e5);\n    fcn.00403508();\n    fcn.00404280();\n    return;\n}\n",
        "token_count": 929
    },
    "0040c170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c170(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint auStack20 [2];\n    uchar auStack12 [8];\n    \n    uVar2 = 0;\n    auStack20[0] = param_2;\n    iVar1 = (***0x41b338)(auStack20, 0, 0, 0, 0, 1, auStack12);\n    if (iVar1 == 0) {\n        fcn.00403538();\n    }\n    else {\n        fcn.0040370c();\n        fcn.00403b1c();\n        (***0x41b2cc)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "0040c208": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0040c208(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_10c0h;\n    uint var_10bch;\n    uint var_10b8h;\n    uint var_10b4h;\n    uint var_10b0h;\n    uint var_10ach;\n    uint var_10a8h;\n    uint var_10a4h;\n    uint var_10a0h;\n    uint var_109ch;\n    uint var_1098h;\n    uint var_1094h;\n    uint var_1090h;\n    uint var_108ch;\n    uint var_1088h;\n    uint var_1084h;\n    uint var_1080h;\n    uint var_107ch;\n    uint var_1078h;\n    uint var_1074h;\n    uint var_1070h;\n    uint var_106ch;\n    uint var_1068h;\n    uint var_1064h;\n    uint var_1060h;\n    uint var_105ch;\n    uint var_1058h;\n    uint var_1054h;\n    uint var_1050h;\n    uint var_104ch;\n    uint var_1048h;\n    uint var_1044h;\n    uint var_1040h;\n    uint var_103ch;\n    uint var_c3ch;\n    uint var_83ch;\n    uint uStackY268;\n    uint uStackY264;\n    uint uStackY260;\n    uint uStackY256;\n    uint *puStackY252;\n    uint *puStackY248;\n    uint *puStackY244;\n    uint uStackY240;\n    uint uStackY236;\n    uint uStackY232;\n    uint uStackY228;\n    uint uStackY224;\n    uint uVar3;\n    uint uVar4;\n    uint *arg_10h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0x218;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_18h = 0x40c225;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_4h = in_EAX;\n    fcn.00404150();\n    var_18h = 0x40c23b;\n    fcn.004041a0();\n    var_1ch = 0x40c8bc;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040c208::var_20h;\n    var_18h = &stack0xfffffffc;\n    fcn.0040357c();\n    fcn.0040357c();\n    fcn.0040357c();\n    fcn.0040357c();\n    fcn.00403d98();\n    iVar2 = (***0x41b474)();\n    if (iVar2 == 0) {\n        while (iVar2 = (***0x41b248)(),  iVar2 == 0) {\n            fcn.00404804();\n            fcn.00403d6c();\n        }\n    }\n    (***0x41b1fc)();\n    iVar2 = fcn.00404648();\n    if (-1 < iVar2 + -1) {\n        iVar2 = 0;\n        do {\n            fcn.00403e78();\n            fcn.00403d98();\n            iVar1 = (***0x41b474)();\n            if (iVar1 == 0) {\n                while (iVar1 = (***0x41b248)(),  iVar1 == 0) {\n                    var_18h = 0x400;\n                    fcn.00403d6c();\n                    fcn.00403e78();\n                    fcn.00403d98();\n                    iVar1 = (***0x41b474)();\n                    if (iVar1 == 0) {\n                        uVar4 = 0x40c8d4;\n                        fcn.00403d6c();\n                        uVar3 = var_1064h;\n                        fcn.00403e78();\n                        fcn.004075c0(uVar3, uVar4);\n                        iVar1 = fcn.00403da8();\n                        if (1 < iVar1) {\n                            var_38h = 3;\n                            do {\n                                fcn.004037dc();\n                                fcn.00403d88();\n                                uVar3 = *(var_10h + iVar2 * 4);\n                                uVar4 = 0x40c8d4;\n                                fcn.00403d6c();\n                                fcn.00403e78();\n                                fcn.004075c0(uVar4, uVar3);\n                                iVar1 = fcn.00403da8();\n                                if (1 < iVar1) {\n                                    fcn.00403d88();\n                                    uVar4 = 0x40c8d4;\n                                    fcn.00403d6c();\n                                    uVar3 = var_1080h;\n                                    fcn.00403e78();\n                                    fcn.004075c0(uVar3, uVar4);\n                                    uVar4 = 0x40c8d4;\n                                    fcn.00403d6c();\n                                    uVar3 = var_1088h;\n                                    fcn.00403e78();\n                                    fcn.00403e14();\n                                    fcn.004075c0(uVar3, uVar4);\n                                    uVar4 = 0x40c8d4;\n                                    fcn.00403d6c();\n                                    uStackY224 = 0x40c60b;\n                                    uVar3 = var_1094h;\n                                    fcn.00403e78();\n                                    uStackY228 = 0x40c625;\n                                    fcn.00403e14();\n                                    uStackY224 = 0x40c636;\n                                    fcn.004075c0(uVar3, uVar4);\n                                    uStackY224 = var_4h;\n                                    uStackY228 = 0x40c8d4;\n                                    uStackY232 = *(var_10h + iVar2 * 4);\n                                    uStackY236 = 0x40c8d4;\n                                    uStackY240 = 0x40c65f;\n                                    fcn.00403d6c();\n                                    puStackY244 = 0x40c675;\n                                    fcn.00403e78();\n                                    puStackY248 = 0x40c68f;\n                                    fcn.00403e14();\n                                    puStackY244 = 0x40c6a0;\n                                    fcn.004076b4();\n                                    puStackY244 = &fcn.0040c208::var_18h;\n                                    puStackY248 = &fcn.0040c208::var_103ch;\n                                    puStackY252 = &fcn.0040c208::var_14h;\n                                    uStackY256 = 0;\n                                    uStackY260 = 0x40c6c7;\n                                    fcn.00403e14();\n                                    uStackY260 = 0x40c6d2;\n                                    uStackY260 = fcn.00403d98();\n                                    uStackY264 = var_ch;\n                                    uStackY268 = 0x40c6e0;\n                                    iVar1 = (***0x41b398)();\n                                    if (iVar1 == 0) {\n                                        fcn.00404f54();\n                                        fcn.0040c170();\n                                        fcn.00403ad4();\n                                        fcn.004039f0();\n                                        fcn.00403d88();\n                                    }\n                                    fcn.0040377c();\n                                    fcn.0040377c();\n                                    fcn.0040377c();\n                                    uVar4 = 0x40c960;\n                                    arg_10h = &fcn.0040c208::var_8h;\n                                    fcn.0040709c();\n                                    uVar3 = var_10c0h;\n                                    fcn.00403e78();\n                                    fcn.0040377c();\n                                    fcn.0040525c(uVar3, uVar4, arg_10h);\n                                }\n                                var_38h = var_38h + -1;\n                            } while (var_38h != 0);\n                        }\n                    }\n                    (***0x41b1fc)();\n                }\n            }\n            (***0x41b1fc)();\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    *in_FS_OFFSET = var_8h;\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00404280();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00404810();\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 2145
    },
    "0040ca24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0040ca24(void)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    bool bVar2;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar1 = 0x10;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_1ch = 0x40cd0c;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040ca24::var_20h;\n    var_24h = 0x40ca65;\n    var_14h = unaff_EDI;\n    var_10h = unaff_ESI;\n    fcn.004062fc();\n    var_24h = 0x40ca70;\n    fcn.00407228();\n    var_24h = 0x40ca7b;\n    fcn.00403d88();\n    var_24h = &fcn.0040ca24::var_24h;\n    var_28h = 0x40ca8f;\n    fcn.00403d88();\n    var_2ch = 0x40caa3;\n    fcn.00403d88();\n    var_28h = 0x40caaf;\n    fcn.00407400(var_24h);\n    var_28h = 0x40caba;\n    fcn.00403c3c();\n    while( true ) {\n        var_28h = 0x40cc95;\n        fcn.00403d88();\n        var_28h = 0x40cca0;\n        iVar1 = fcn.004040bc();\n        if (iVar1 == 0) break;\n        var_28h = &fcn.0040ca24::var_ch;\n        var_2ch = 0x40cacd;\n        fcn.00403d88();\n        var_2ch = var_30h;\n        var_30h = 0x40cadb;\n        fcn.00403d88();\n        var_2ch = 0x40cae7;\n        fcn.00407400(var_28h);\n        var_2ch = 0x40caf1;\n        fcn.00403d88();\n        var_2ch = 0x40cafc;\n        fcn.004040bc();\n        var_2ch = 0x40cb0e;\n        fcn.00403f90();\n        var_2ch = &fcn.0040ca24::var_10h;\n        var_30h = 0x40cb22;\n        fcn.00403d88();\n        var_30h = var_3ch;\n        var_34h = 0x40cb36;\n        fcn.00403d88();\n        var_30h = 0x40cb42;\n        fcn.00407400(var_2ch);\n        var_30h = &fcn.0040ca24::var_14h;\n        var_34h = 0x40cb56;\n        fcn.00403d88();\n        var_34h = var_44h;\n        var_38h = 0x40cb6a;\n        fcn.00403d88();\n        var_34h = 0x40cb76;\n        fcn.00407400(var_30h);\n        var_34h = &fcn.0040ca24::var_18h;\n        var_38h = 0x40cb8a;\n        fcn.00403d88();\n        var_38h = var_4ch;\n        var_3ch = 0x40cb9e;\n        fcn.00403d88();\n        var_38h = 0x40cbaa;\n        fcn.00407400(var_34h);\n        var_38h = &fcn.0040ca24::var_1ch;\n        var_3ch = 0x40cbb8;\n        fcn.00403d88();\n        var_3ch = var_54h;\n        var_40h = 0x40cbcc;\n        fcn.00403d88();\n        var_3ch = 0x40cbd8;\n        fcn.00407400(var_38h);\n        bVar2 = true;\n        var_3ch = 0x40cbe2;\n        fcn.00403ec0();\n        if (bVar2) {\n            var_3ch = &fcn.0040ca24::var_64h;\n            var_40h = 0x40cbf2;\n            fcn.00403d88();\n            var_44h = 0x40cc06;\n            fcn.00403d88();\n            var_40h = 0x40cc12;\n            fcn.00407400(var_3ch);\n            var_40h = 0x40cc1d;\n            fcn.0040377c();\n            var_40h = 0x40cc28;\n            fcn.004069a8();\n            var_40h = 0x40cc33;\n            fcn.00403d88();\n        }\n        var_40h = 0x40cc3e;\n        fcn.0040377c();\n        var_44h = 0x40cc4d;\n        fcn.0040377c();\n        var_44h = var_74h;\n        var_48h = 0;\n        var_4ch = var_10h;\n        var_50h = 0x40cd20;\n        var_24h = var_14h;\n        var_58h = 0x40cc6b;\n        fcn.00403e78();\n        var_58h = 0x40cc76;\n        fcn.0040377c();\n        var_58h = 0x40cc8b;\n        fcn.0040525c(var_24h, var_50h, var_4ch);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x40cd13;\n    var_20h = 0x40ccc2;\n    fcn.00403bf4();\n    var_20h = 0x40cccf;\n    fcn.00403508();\n    var_20h = 0x40ccdc;\n    fcn.00403bf4();\n    var_20h = 0x40cce9;\n    fcn.00403508();\n    var_20h = 0x40ccf6;\n    fcn.00403bf4();\n    var_20h = 0x40ccfe;\n    fcn.004034e4();\n    var_20h = 0x40cd0b;\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 1958
    },
    "0040cd68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cd68(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack44 = 0x40ce61;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x40cd90;\n    var_4h = param_2;\n    fcn.004034e4();\n    puStack52 = 0x40cd97;\n    uVar1 = fcn.00403790();\n    iVar2 = uVar1 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar1 & 1) != 0);\n    }\n    if (0 < iVar2) {\n        do {\n            uStack56 = 0x40ce15;\n            iStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            fcn.004039f0();\n            fcn.004037dc();\n            fcn.00403d88();\n            fcn.00407108();\n            fcn.004036cc();\n            fcn.00403798();\n            *in_FS_OFFSET = &fcn.0040cd68::var_14h;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = iStack48;\n    puStack40 = 0x40ce68;\n    uStack44 = 0x40ce50;\n    fcn.00403508();\n    uStack44 = 0x40ce58;\n    fcn.00403bdc();\n    uStack44 = 0x40ce60;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 536
    },
    "0040d5d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0040d5d4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint var_4ch;\n    uint *var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0xc;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_ch = 0;\n    var_18h = 0x40d5fa;\n    fcn.00403980();\n    var_18h = 0x40d602;\n    fcn.00403980();\n    var_18h = 0x40d60a;\n    fcn.00403980();\n    var_1ch = 0x40d882;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040d5d4::var_20h;\n    var_18h = &stack0xfffffffc;\n    while( true ) {\n        var_24h = 0x40d661;\n        iVar2 = fcn.00403ad4();\n        if (iVar2 == 0) break;\n        var_24h = 0x40d627;\n        iVar2 = fcn.00403ad4();\n        var_24h = 0x40d636;\n        iVar1 = fcn.00403ad4();\n        var_24h = (iVar2 - iVar1) + 0xf;\n        var_28h = 0x40d649;\n        fcn.00403ad4();\n        var_24h = 0x40d654;\n        fcn.00403a30();\n    }\n    iVar2 = -1;\n    do {\n        iVar3 = iVar2;\n        iVar2 = iVar3 + 1;\n        var_24h = 0x40d8c8;\n        var_28h = 0x40d678;\n        fcn.0040709c();\n        var_28h = var_1ch;\n        var_20h = 0x40d8d4;\n        var_30h = 0x40d68d;\n        fcn.00403e78();\n        var_30h = 0x40d698;\n        fcn.0040377c();\n        var_30h = 0x40d6a3;\n        iVar1 = fcn.00403ad4();\n    } while (iVar1 != 0);\n    if (iVar2 == 0) {\n        var_30h = 0x40d6b3;\n        fcn.004034e4();\n    }\n    else if (-1 < iVar3) {\n        do {\n            var_24h = &fcn.0040d5d4::var_20h;\n            var_28h = 0x40d8dc;\n            var_2ch = 0x40d6d9;\n            fcn.0040709c();\n            var_2ch = var_28h;\n            var_30h = 0x40d8d4;\n            var_34h = 0x40d6ee;\n            fcn.00403e78();\n            var_34h = var_24h;\n            var_38h = 0x40d8c8;\n            var_3ch = 0x40d701;\n            fcn.0040709c();\n            var_3ch = var_30h;\n            var_40h = 0x40d8d4;\n            var_44h = 0x40d716;\n            fcn.00403e78();\n            var_44h = var_2ch;\n            var_48h = 0x40d725;\n            fcn.00403d88();\n            var_40h = 0x40d72f;\n            fcn.00407400(var_3ch);\n            var_40h = 0x40d73a;\n            fcn.0040377c();\n            var_40h = &fcn.0040d5d4::var_3ch;\n            var_44h = 0x40d749;\n            fcn.00403d88();\n            var_44h = 0x40d75b;\n            fcn.00407400(var_40h);\n            var_44h = 0x40d766;\n            fcn.0040377c();\n            var_44h = var_38h;\n            var_48h = &fcn.0040d5d4::var_54h;\n            var_4ch = 0x40d779;\n            fcn.00403d88();\n            var_4ch = 0x40d78b;\n            fcn.00407400(var_48h);\n            var_4ch = 0x40d796;\n            fcn.0040377c();\n            var_4ch = var_50h;\n            var_50h = &fcn.0040d5d4::var_60h;\n            var_54h = 0x40d7a9;\n            fcn.00403d88();\n            var_54h = 0x40d7bb;\n            fcn.00407400(var_50h);\n            var_54h = 0x40d7c6;\n            fcn.0040377c();\n            var_50h = 0x40d7d2;\n            fcn.0040d3b4();\n            var_50h = 0x40d7dd;\n            fcn.00403d88();\n            var_50h = 0x40d7e8;\n            fcn.0040377c();\n            var_50h = var_44h;\n            var_20h = 0;\n            var_58h = 0x40d7fe;\n            fcn.0040525c(0, var_44h, var_4ch);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x40d889;\n    var_1ch = 0x40d820;\n    fcn.00403bf4();\n    var_1ch = 0x40d828;\n    fcn.004034e4();\n    var_1ch = 0x40d835;\n    fcn.00403bf4();\n    var_1ch = 0x40d842;\n    fcn.00403508();\n    var_1ch = 0x40d84a;\n    fcn.00403bdc();\n    var_1ch = 0x40d852;\n    fcn.004034e4();\n    var_1ch = 0x40d85f;\n    fcn.00403bf4();\n    var_1ch = 0x40d867;\n    fcn.004034e4();\n    var_1ch = 0x40d874;\n    fcn.00403bf4();\n    var_1ch = 0x40d881;\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 1892
    },
    "0040e318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e318(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00402cec();\n        param_2 = extraout_DL;\n    }\n    fcn.00402bcc();\n    *(in_EAX + 0x10) = 0;\n    *0x41caac = 0x4034b50;\n    *0x41cab0 = 0x2014b50;\n    *0x41cab4 = 0x6054b50;\n    if (param_2 != '\\0') {\n        fcn.00402d44();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 196
    },
    "0040e398": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e398(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint var_64h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ah;\n    uint var_36h;\n    uint var_32h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack120 = 0x40e3bc;\n    fcn.00403980();\n    puStack120 = 0x40e3c4;\n    fcn.00403980();\n    uStack124 = 0x40e546;\n    uStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStack120 = &stack0xfffffffc;\n    fcn.0040357c();\n    fcn.0040357c();\n    fcn.00403790();\n    fcn.00403790();\n    fcn.00403b1c();\n    fcn.00403b1c();\n    fcn.004039e8();\n    fcn.0040e308();\n    fcn.00403790();\n    fcn.004035d4();\n    fcn.00403850(0, 0, 0, *(in_EAX + 4));\n    fcn.004034e4();\n    fcn.004035d4();\n    uVar1 = 0;\n    fcn.00403850(0, 0, *(in_EAX + 8));\n    fcn.004034e4();\n    *(in_EAX + 0x10) = *(in_EAX + 0x10) + 1;\n    *in_FS_OFFSET = uVar1;\n    fcn.00403508(0x40e54d);\n    return;\n}\n",
        "token_count": 482
    },
    "0040e554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e554(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ah;\n    uint var_16h;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x40e5ea;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00403790();\n    fcn.00403790();\n    fcn.004035d4();\n    uVar1 = 0;\n    fcn.00403850(0, *(in_EAX + 8), *(in_EAX + 4));\n    *in_FS_OFFSET = uVar1;\n    fcn.004034e4(0x40e5f1);\n    return;\n}\n",
        "token_count": 215
    },
    "0040e6d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e6d4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    puStack20 = 0x40e6ed;\n    var_8h = param_2;\n    fcn.00403980();\n    puStack20 = 0x40e6f5;\n    fcn.00403980();\n    uStack24 = 0x40e78f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00403790();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00403790();\n        iVar1 = (uVar2 >> 0x1f) + *0x41cac0 + CARRY4(uVar2, *0x41cabc);\n        if (iVar1 == *0x41cac8) {\n            if (*0x41cac4 < uVar2 + *0x41cabc) goto code_r0x0040e774;\n        }\n        else if (*0x41cac8 < iVar1) goto code_r0x0040e774;\n        uVar2 = fcn.00403790();\n        bVar3 = CARRY4(uVar2, *0x41cabc);\n        *0x41cabc = uVar2 + *0x41cabc;\n        *0x41cac0 = (uVar2 >> 0x1f) + *0x41cac0 + bVar3;\n        fcn.0040e694();\n        fcn.0040e398();\n    }\ncode_r0x0040e774:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40e796;\n    uStack24 = 0x40e78e;\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 494
    },
    "0040e954": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040e954(uint param_1, uint param_2)\n\n{\n    code **ppcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    char *var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    char *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0x2f;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0x40e974;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00404150();\n    ppcVar1 = *0x41b1dc;\n    var_1ch = 0x40ed34;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040e954::var_20h;\n    var_24h = 0x40e990;\n    var_18h = &stack0xfffffffc;\n    fcn.00403bdc();\n    var_28h = 0x40eca8;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040e954::var_2ch;\n    var_24h = &stack0xfffffffc;\n    (***0x41b1c4)();\n    fcn.0040709c();\n    fcn.00406fdc(var_48h);\n    fcn.00403e78(0x40ed48, var_4ch);\n    fcn.004078d8();\n    fcn.004062fc();\n    var_44h = var_1ch;\n    fcn.00403e78(var_1ch, 0x40ed6c, var_54h);\n    fcn.004078d8();\n    uVar3 = fcn.00403d98(0xffffffff);\n    var_50h = fcn.00403d98(uVar3);\n    (***0x41b44c)();\n    fcn.0040377c();\n    fcn.00404b58();\n    fcn.00403d88();\n    cVar2 = fcn.0040776c();\n    if (cVar2 == '\\0') {\n        *in_FS_OFFSET = var_50h;\n    }\n    else {\n        uVar3 = fcn.00403990(&fcn.0040e954::var_ch);\n        iVar4 = (***0x41b140)(uVar3);\n        if (iVar4 == 0) {\n            uVar3 = fcn.00403990(0xffffffff, &fcn.0040e954::var_10h, &fcn.0040e954::var_14h);\n            iVar4 = (***0x41b2d4)(var_ch, uVar3);\n            if (iVar4 == 0) {\n                while (iVar4 = (***0x41b384)(var_10h),  iVar4 == 100) {\n                    (**ppcVar1)(var_10h, 0);\n                    fcn.004036dc();\n                    fcn.0040357c();\n                    iVar4 = fcn.00403790();\n                    if ((0 < iVar4) && (*var_24h == '.')) {\n                        fcn.0040357c();\n                    }\n                    (**ppcVar1)(var_10h, 1);\n                    fcn.004036dc();\n                    (**ppcVar1)(var_10h, 2);\n                    fcn.00402a5c();\n                    bVar5 = var_15ch == 0xffffffff;\n                    fcn.00402870();\n                    if (bVar5) {\n                        fcn.0040357c();\n                    }\n                    else {\n                        fcn.0040357c();\n                    }\n                    (**ppcVar1)(var_10h, 3);\n                    fcn.004036dc();\n                    (**ppcVar1)(var_10h, 4);\n                    fcn.004036dc();\n                    (**ppcVar1)(var_10h, 5);\n                    var_18h = 0x40eba4;\n                    fcn.004036dc();\n                    var_1ch = 0x40ebb5;\n                    fcn.00403d88();\n                    var_1ch = var_160h;\n                    var_20h = 0x40ed98;\n                    var_24h = 0x40ebce;\n                    fcn.00403d88();\n                    var_24h = var_164h;\n                    var_28h = 0x40ed98;\n                    var_2ch = 0x40ebe7;\n                    fcn.00403d88();\n                    var_2ch = var_168h;\n                    fcn.00403d88(0x40ed98);\n                    fcn.00403d88(0x40ed98, var_16ch);\n                    fcn.00403d88(0x40ed98, var_170h);\n                    var_44h = var_174h;\n                    fcn.00403d88(0x40ed98);\n                    var_50h = 0x40eda0;\n                    fcn.00403e78(0x40eda0, var_178h);\n                    fcn.00405194();\n                }\n            }\n        }\n        (***0x41b46c)(var_10h);\n        (***0x41b20c)(var_ch);\n        *in_FS_OFFSET = var_50h;\n        fcn.00403c18();\n        uVar3 = fcn.00403d98();\n        (***0x41b3e8)(uVar3);\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00403bf4(0x40ed3b);\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 1827
    },
    "0040eda8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040eda8(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    char **in_FS_OFFSET;\n    bool bVar5;\n    uint var_180h;\n    char *var_17ch;\n    uint var_178h;\n    uint var_174h;\n    char *var_170h;\n    char *var_16ch;\n    uchar *var_168h;\n    uint var_164h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    char *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    char *var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    char *var_2ch;\n    uint var_28h;\n    char *var_24h;\n    char *var_20h;\n    uchar *var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0x30;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0x40edc8;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00404150();\n    var_1ch = 0x40f276;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040eda8::var_20h;\n    var_24h = 0x40edde;\n    var_18h = &stack0xfffffffc;\n    fcn.00403bdc();\n    var_28h = 0x40f1d7;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040eda8::var_2ch;\n    var_24h = &stack0xfffffffc;\n    (***0x41b1c4)();\n    fcn.0040709c();\n    fcn.00406fdc(var_50h);\n    fcn.00403e78(0x40f288, var_54h);\n    fcn.004078d8();\n    fcn.004062fc();\n    var_44h = var_24h;\n    fcn.00403e78(var_24h, 0x40f2ac, var_5ch);\n    fcn.004078d8();\n    uVar2 = fcn.00403d98(0xffffffff);\n    var_50h = fcn.00403d98(uVar2);\n    (***0x41b44c)();\n    fcn.0040377c();\n    fcn.00404b58();\n    fcn.00403d88();\n    cVar1 = fcn.0040776c();\n    if (cVar1 == '\\0') {\n        *in_FS_OFFSET = var_50h;\n    }\n    else {\n        uVar2 = fcn.00403990(&fcn.0040eda8::var_ch);\n        iVar4 = (***0x41b140)(uVar2);\n        if (iVar4 == 0) {\n            uVar2 = fcn.00403990(0xffffffff, &fcn.0040eda8::var_10h, &fcn.0040eda8::var_14h);\n            iVar4 = (***0x41b2d4)(var_ch, uVar2);\n            if (iVar4 != 0) {\n                uVar2 = fcn.00403990(0xffffffff, &fcn.0040eda8::var_10h, &fcn.0040eda8::var_14h);\n                iVar4 = (***0x41b2d4)(var_ch, uVar2);\n            }\n            if (iVar4 == 0) {\n                while (iVar4 = (***0x41b384)(var_10h),  iVar4 == 100) {\n                    fcn.004034e4();\n                    fcn.004034e4();\n                    uVar2 = (***0x41b414)(var_10h, 2);\n                    (***0x41b1dc)(var_10h, 2, uVar2);\n                    fcn.0040a610();\n                    (***0x41b1dc)(var_10h, 3);\n                    fcn.004036dc();\n                    iVar4 = fcn.00403790();\n                    iVar3 = fcn.00403790();\n                    if (iVar3 < iVar4) {\n                        fcn.0040357c();\n                    }\n                    iVar4 = fcn.00403790();\n                    if (iVar4 != 0) {\n                        (***0x41b1dc)(var_10h, 0);\n                        fcn.004036dc();\n                        fcn.0040357c();\n                        iVar4 = fcn.00403790();\n                        if ((0 < iVar4) && (*var_2ch == '.')) {\n                            fcn.0040357c();\n                        }\n                        (***0x41b1dc)(var_10h, 4);\n                        fcn.004036dc();\n                        (***0x41b1dc)(var_10h, 5);\n                        fcn.00402a5c();\n                        bVar5 = var_164h == 0xffffffff;\n                        fcn.00402870();\n                        if (bVar5) {\n                            fcn.0040357c();\n                        }\n                        else {\n                            fcn.0040357c();\n                        }\n                        (***0x41b1dc)(var_10h, 6);\n                        fcn.004036dc();\n                        (***0x41b1dc)(var_10h, 1);\n                        var_18h = 0x40f0aa;\n                        fcn.004036dc();\n                        var_18h = 0x40f0b5;\n                        fcn.0040357c();\n                        var_18h = 0x40f0c2;\n                        iVar4 = fcn.00403ad4();\n                        if (iVar4 != 0) {\n                            var_18h = 0x40f0d3;\n                            fcn.0040357c();\n                        }\n                        var_18h = var_1ch;\n                        var_1ch = 0x40f0e4;\n                        fcn.00403d88();\n                        var_1ch = var_168h;\n                        var_20h = 0x40f2f0;\n                        var_24h = 0x40f0fd;\n                        fcn.00403d88();\n                        var_24h = var_16ch;\n                        var_28h = 0x40f2f0;\n                        var_2ch = 0x40f116;\n                        fcn.00403d88();\n                        var_2ch = var_170h;\n                        fcn.00403d88(0x40f2f0);\n                        fcn.00403d88(0x40f2f0, var_174h);\n                        fcn.00403d88(0x40f2f0, var_178h);\n                        var_44h = var_17ch;\n                        fcn.00403d88(0x40f2f0);\n                        var_50h = 0x40f2f8;\n                        fcn.00403e78(0x40f2f8, var_180h);\n                        fcn.00405194();\n                    }\n                }\n            }\n            (***0x41b46c)(var_10h);\n            (***0x41b20c)(var_ch);\n        }\n        *in_FS_OFFSET = var_50h;\n        fcn.00403c18();\n        uVar2 = fcn.00403d98();\n        (***0x41b3e8)(uVar2);\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00403bf4(0x40f27d);\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.004034e4();\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 2240
    },
    "0040f300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040f300(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    char **in_FS_OFFSET;\n    bool bVar4;\n    uint var_180h;\n    char *var_17ch;\n    uint var_178h;\n    uint var_174h;\n    char *var_170h;\n    char *var_16ch;\n    uchar *var_168h;\n    uint var_164h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    char *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    char *var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    char *var_2ch;\n    uint var_28h;\n    char *var_24h;\n    char *var_20h;\n    uchar *var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0x30;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x40f320;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00404150();\n    var_1ch = 0x40f736;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040f300::var_20h;\n    var_24h = 0x40f336;\n    var_18h = &stack0xfffffffc;\n    fcn.00403bdc();\n    var_28h = 0x40f697;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040f300::var_2ch;\n    var_24h = &stack0xfffffffc;\n    (***0x41b1c4)();\n    fcn.0040709c();\n    fcn.00406fdc(var_50h);\n    fcn.00403e78(0x40f748, var_54h);\n    fcn.004078d8();\n    fcn.004062fc();\n    var_44h = var_24h;\n    fcn.00403e78(var_24h, 0x40f76c, var_5ch);\n    fcn.004078d8();\n    uVar2 = fcn.00403d98(0xffffffff);\n    var_50h = fcn.00403d98(uVar2);\n    (***0x41b44c)();\n    fcn.0040377c();\n    fcn.00404b58();\n    fcn.00403d88();\n    cVar1 = fcn.0040776c();\n    if (cVar1 == '\\0') {\n        *in_FS_OFFSET = var_50h;\n    }\n    else {\n        uVar2 = fcn.00403990(&fcn.0040f300::var_ch);\n        iVar3 = (***0x41b140)(uVar2);\n        if (iVar3 == 0) {\n            uVar2 = fcn.00403990(0xffffffff, &fcn.0040f300::var_10h, &fcn.0040f300::var_14h);\n            iVar3 = (***0x41b2d4)(var_ch, uVar2);\n            if (iVar3 == 0) {\n                while (iVar3 = (***0x41b384)(var_10h),  iVar3 == 100) {\n                    fcn.004034e4();\n                    fcn.004034e4();\n                    (***0x41b1dc)(var_10h, 3);\n                    fcn.004036dc();\n                    iVar3 = fcn.00403790();\n                    if (iVar3 != 0) {\n                        (***0x41b1dc)(var_10h, 0);\n                        fcn.004036dc();\n                        fcn.0040357c();\n                        iVar3 = fcn.00403790();\n                        if ((0 < iVar3) && (*var_2ch == '.')) {\n                            fcn.0040357c();\n                        }\n                        (***0x41b1dc)(var_10h, 4);\n                        fcn.004036dc();\n                        (***0x41b1dc)(var_10h, 5);\n                        fcn.00402a5c();\n                        bVar4 = var_164h == 0xffffffff;\n                        fcn.00402870();\n                        if (bVar4) {\n                            fcn.0040357c();\n                        }\n                        else {\n                            fcn.0040357c();\n                        }\n                        (***0x41b1dc)(var_10h, 6);\n                        fcn.004036dc();\n                        (***0x41b1dc)(var_10h, 1);\n                        var_18h = 0x40f588;\n                        fcn.004036dc();\n                        var_18h = 0x40f593;\n                        fcn.0040357c();\n                        var_18h = var_1ch;\n                        var_1ch = 0x40f5a4;\n                        fcn.00403d88();\n                        var_1ch = var_168h;\n                        var_20h = 0x40f798;\n                        var_24h = 0x40f5bd;\n                        fcn.00403d88();\n                        var_24h = var_16ch;\n                        var_28h = 0x40f798;\n                        var_2ch = 0x40f5d6;\n                        fcn.00403d88();\n                        var_2ch = var_170h;\n                        fcn.00403d88(0x40f798);\n                        fcn.00403d88(0x40f798, var_174h);\n                        fcn.00403d88(0x40f798, var_178h);\n                        var_44h = var_17ch;\n                        fcn.00403d88(0x40f798);\n                        var_50h = 0x40f7a0;\n                        fcn.00403e78(0x40f7a0, var_180h);\n                        fcn.00405194();\n                    }\n                }\n            }\n        }\n        (***0x41b46c)(var_10h);\n        (***0x41b20c)(var_ch);\n        *in_FS_OFFSET = var_50h;\n        fcn.00403c18();\n        uVar2 = fcn.00403d98();\n        (***0x41b3e8)(uVar2);\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00403bf4(0x40f73d);\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.004034e4();\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 1985
    },
    "00410d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00410d88(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 9;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0x410da8;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00404150();\n    var_1ch = 0x410fe1;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00410d88::var_20h;\n    var_24h = 0x410dbe;\n    var_18h = &stack0xfffffffc;\n    fcn.004034e4();\n    var_28h = 0x410f66;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00410d88::var_2ch;\n    var_24h = &stack0xfffffffc;\n    fcn.00404ea8();\n    fcn.0040709c();\n    uVar1 = var_2ch;\n    fcn.00406fdc(var_2ch);\n    fcn.00403e78(0x410ff4, uVar1);\n    fcn.004078d8();\n    fcn.004062fc();\n    uVar1 = var_1ch;\n    var_44h = var_1ch;\n    fcn.00403e78(var_1ch, 0x411018, 0x410ff4);\n    fcn.004078d8();\n    uStack80 = fcn.00403d98();\n    uVar3 = fcn.00403d98();\n    fcn.00404e28();\n    fcn.0040377c();\n    fcn.00404b58();\n    fcn.00403d88();\n    cVar2 = fcn.0040776c();\n    if (cVar2 == '\\0') {\n        *in_FS_OFFSET = uVar3;\n    }\n    else {\n        uVar3 = fcn.00403990(&fcn.00410d88::var_ch);\n        iVar4 = (***0x41b140)(uVar3);\n        if (iVar4 == 0) {\n            uVar3 = fcn.00403990(0xffffffff, &fcn.00410d88::var_10h, &fcn.00410d88::var_14h);\n            iVar4 = (***0x41b2d4)(var_ch, uVar3);\n            if (iVar4 == 0) {\n                while (iVar4 = (***0x41b384)(var_10h),  iVar4 == 100) {\n                    (***0x41b1dc)(var_10h, 0, var_18h);\n                    fcn.004036dc();\n                    (***0x41b1dc)(var_10h, 1, 0x411024, uVar1);\n                    fcn.004036dc();\n                    uStack80 = 0xffffffff;\n                    fcn.00403850(0x411030);\n                }\n            }\n        }\n        (***0x41b46c)(var_10h);\n        (***0x41b20c)(var_ch);\n        *in_FS_OFFSET = uStack80;\n        fcn.00403d88();\n        var_44h = fcn.00403d98();\n        fcn.00404e38();\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00403508(0x410fe8);\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 1194
    },
    "00411034": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00411034(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 9;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0x411054;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00404150();\n    var_1ch = 0x411282;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00411034::var_20h;\n    var_24h = 0x41106a;\n    var_18h = &stack0xfffffffc;\n    fcn.00403bdc();\n    var_28h = 0x411212;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00411034::var_2ch;\n    var_24h = &stack0xfffffffc;\n    fcn.00404ea8();\n    fcn.0040709c();\n    uVar1 = var_2ch;\n    fcn.00406fdc(var_2ch);\n    fcn.00403e78(0x411294, uVar1);\n    fcn.004078d8();\n    fcn.004062fc();\n    uVar1 = var_1ch;\n    var_44h = var_1ch;\n    fcn.00403e78(var_1ch, 0x4112b8, 0x411294);\n    fcn.004078d8();\n    uStack80 = fcn.00403d98();\n    uVar3 = fcn.00403d98();\n    fcn.00404e28();\n    fcn.0040377c();\n    fcn.00404b58();\n    fcn.00403d88();\n    cVar2 = fcn.0040776c();\n    if (cVar2 == '\\0') {\n        *in_FS_OFFSET = uVar3;\n    }\n    else {\n        uVar3 = fcn.00403990(&fcn.00411034::var_ch);\n        iVar4 = (***0x41b140)(uVar3);\n        if (iVar4 == 0) {\n            uVar3 = fcn.00403990(0xffffffff, &fcn.00411034::var_10h, &fcn.00411034::var_14h);\n            iVar4 = (***0x41b2d4)(var_ch, uVar3);\n            if (iVar4 == 0) {\n                while (iVar4 = (***0x41b384)(var_10h),  iVar4 == 100) {\n                    (***0x41b1dc)(var_10h, 0, var_18h);\n                    fcn.00403cf4();\n                    (***0x41b1dc)(var_10h, 1, 0x4112c0, uVar1);\n                    fcn.00403cf4();\n                    uStack80 = 0xffffffff;\n                    fcn.00403e78(0x4112c8);\n                }\n            }\n        }\n        (***0x41b46c)(var_10h);\n        (***0x41b20c)(var_ch);\n        *in_FS_OFFSET = uStack80;\n        fcn.00403c18();\n        var_44h = fcn.00403d98();\n        fcn.00404e38();\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00403bf4(0x411289);\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 1175
    },
    "004112d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __fastcall fcn.004112d0(uint param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uchar *var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 10;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x4112f1;\n    var_18h = unaff_EDI;\n    var_10h = unaff_EBX;\n    var_8h = param_2;\n    fcn.00404150();\n    var_20h = 0x4115ab;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004112d0::var_24h;\n    var_28h = 0x411307;\n    var_1ch = &stack0xfffffffc;\n    fcn.00403bdc();\n    var_2ch = 0x411526;\n    var_30h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004112d0::var_30h;\n    var_28h = &stack0xfffffffc;\n    fcn.00404ea8();\n    fcn.0040709c();\n    uVar3 = var_30h;\n    fcn.00406fdc(var_30h);\n    fcn.00403e78(0x4115c0, uVar3);\n    fcn.004078d8();\n    fcn.004062fc();\n    puVar1 = var_1ch;\n    var_48h = var_1ch;\n    fcn.00403e78(var_1ch, 0x4115e4, 0x4115c0);\n    fcn.004078d8();\n    var_50h = fcn.00403d98(0xffffffff);\n    var_54h = fcn.00403d98();\n    fcn.00404e28();\n    fcn.0040377c();\n    fcn.00404b58();\n    fcn.00403d88();\n    cVar2 = fcn.0040776c();\n    if (cVar2 == '\\0') {\n        *in_FS_OFFSET = var_54h;\n    }\n    else {\n        uVar3 = fcn.00403990(&fcn.004112d0::var_ch);\n        iVar4 = (***0x41b140)(uVar3);\n        if (iVar4 == 0) {\n            uVar3 = fcn.00403990(0xffffffff, &fcn.004112d0::var_10h, &fcn.004112d0::var_14h);\n            iVar4 = (***0x41b2d4)(var_ch, uVar3);\n            if (iVar4 == 0) {\n                while (iVar4 = (***0x41b384)(var_10h),  iVar4 == 100) {\n                    uVar3 = (***0x41b414)(var_10h, 3);\n                    (***0x41b1dc)(var_10h, 3, uVar3);\n                    fcn.0040a610();\n                    fcn.00403d88(var_18h);\n                    (***0x41b1dc)(var_10h, 0, 0x4115ec, puVar1);\n                    fcn.00403cf4();\n                    (***0x41b1dc)(var_10h, 1, 0x4115ec, 0xffffffff);\n                    fcn.00403cf4();\n                    (***0x41b1dc)(var_10h, 2, 0x4115f8, var_50h);\n                    fcn.00403cf4();\n                    var_50h = var_54h;\n                    var_54h = 0x411600;\n                    fcn.00403e78();\n                    **0x41b1cc = **0x41b1cc + 1;\n                }\n            }\n        }\n        (***0x41b46c)(var_10h);\n        (***0x41b20c)(var_ch);\n        *in_FS_OFFSET = var_50h;\n        fcn.00403c18();\n        var_48h = fcn.00403d98();\n        fcn.00404e38();\n    }\n    *in_FS_OFFSET = var_48h;\n    fcn.00403bf4(0x4115b2);\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 1390
    },
    "004119ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004119ac(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack720;\n    uint uStack716;\n    uchar *puStack712;\n    uint uStack708;\n    uint uStack704;\n    uint uStack700;\n    uint uStack696;\n    uint uStack692;\n    uint uStack688;\n    uint *puStack684;\n    uint uStack680;\n    uint uStack676;\n    uchar *puStack672;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_238h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack672 = 0x411a07;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00404150();\n    puStack672 = 0x411a0f;\n    fcn.00404150();\n    puStack672 = 0x411a17;\n    fcn.00404150();\n    uStack676 = 0x411c11;\n    uStack680 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd58;\n    puStack684 = &fcn.004119ac::var_264h;\n    uStack688 = 0x411a3f;\n    puStack672 = &stack0xfffffffc;\n    fcn.00403e14();\n    uStack688 = 0x411a4a;\n    uStack688 = fcn.00403d98();\n    uStack692 = 0x411a50;\n    var_14h = fcn.00404e50();\n    do {\n        uStack692 = var_4h;\n        uStack696 = 0x411c38;\n        uStack700 = 0x411a71;\n        fcn.00403d6c();\n        uStack700 = 0;\n        uStack704 = 0x411c38;\n        uStack708 = **0x41b3bc;\n        puStack712 = 0x411a93;\n        fcn.00403e78();\n        puStack712 = 0x411a9e;\n        cVar1 = fcn.0040776c();\n        if (cVar1 != '\\0') {\n            uStack716 = 0x411b85;\n            uStack720 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd30;\n            puStack712 = &stack0xfffffffc;\n            fcn.00403d6c(0x411c38, var_4h);\n            fcn.00403e78(**0x41b3bc, 0x411c38, 0);\n            fcn.00410d88();\n            fcn.0040377c();\n            fcn.00403d6c(0x411c40, var_8h, 0x411c38, var_ch, 0);\n            fcn.00403e78(0x411c48);\n            fcn.0040377c();\n            fcn.0040e6d4();\n            *in_FS_OFFSET = 0;\n        }\n        uStack688 = var_14h;\n        iVar2 = fcn.00404e58();\n        uVar3 = var_14h;\n    } while (iVar2 != 0);\n    fcn.00404e48();\n    *in_FS_OFFSET = uVar3;\n    uVar3 = 0x411c18;\n    uStack688 = 0x411bcd;\n    fcn.00403bf4();\n    fcn.004034e4(uVar3);\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 937
    },
    "0041253c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0041253c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = var_44h;\n    iVar3 = 0xb;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x41255c;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00404150();\n    var_1ch = 0x412809;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041253c::var_20h;\n    var_24h = 0x412572;\n    var_18h = &stack0xfffffffc;\n    fcn.00403bdc();\n    var_28h = 0x41277f;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041253c::var_2ch;\n    var_24h = &stack0xfffffffc;\n    fcn.00404ea8();\n    fcn.0040709c();\n    fcn.00406fdc(var_38h);\n    fcn.00403e78(0x41281c, var_3ch);\n    fcn.004078d8();\n    fcn.004062fc();\n    var_44h = var_1ch;\n    fcn.00403e78(var_1ch, 0x412840, uVar2);\n    fcn.004078d8();\n    var_4ch = fcn.00403d98(0xffffffff);\n    var_50h = fcn.00403d98();\n    fcn.00404e28();\n    fcn.0040377c();\n    fcn.00404b58();\n    fcn.00403d88();\n    cVar1 = fcn.0040776c();\n    if (cVar1 == '\\0') {\n        *in_FS_OFFSET = var_50h;\n    }\n    else {\n        uVar2 = fcn.00403990(&fcn.0041253c::var_ch);\n        iVar3 = (***0x41b140)(uVar2);\n        if ((iVar3 == 0) &&\n           (iVar3 = (***0x41b2d4)(var_ch, 0x412844, 0xffffffff, &fcn.0041253c::var_10h, &fcn.0041253c::var_14h), \n           iVar3 == 0)) {\n            while (iVar3 = (***0x41b384)(var_10h),  iVar3 == 100) {\n                fcn.004034e4();\n                fcn.004034e4();\n                fcn.004034e4();\n                (***0x41b1dc)(var_10h, 0);\n                fcn.004036dc();\n                (***0x41b1dc)(var_10h, 1);\n                fcn.004036dc();\n                var_4ch = var_10h;\n                (***0x41b1dc)(var_10h, 2);\n                fcn.004036dc();\n                fcn.00403d88(0x412948, var_18h);\n                fcn.00403d88(0x412950, var_50h);\n                fcn.00403d88(0x41295c, 2);\n                var_50h = 0x412968;\n                fcn.00403e78();\n            }\n        }\n        (***0x41b46c)(var_10h);\n        (***0x41b20c)(var_ch);\n        *in_FS_OFFSET = var_4ch;\n        fcn.00403c18();\n        var_44h = fcn.00403d98();\n        fcn.00404e38();\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00403bf4(0x412810);\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 1345
    },
    "00412974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00412974(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = var_44h;\n    iVar3 = 0xb;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x412994;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00404150();\n    var_1ch = 0x412c41;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00412974::var_20h;\n    var_24h = 0x4129aa;\n    var_18h = &stack0xfffffffc;\n    fcn.00403bdc();\n    var_28h = 0x412bb7;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00412974::var_2ch;\n    var_24h = &stack0xfffffffc;\n    fcn.00404ea8();\n    fcn.0040709c();\n    fcn.00406fdc(var_38h);\n    fcn.00403e78(0x412c54, var_3ch);\n    fcn.004078d8();\n    fcn.004062fc();\n    var_44h = var_1ch;\n    fcn.00403e78(var_1ch, 0x412c78, uVar2);\n    fcn.004078d8();\n    var_4ch = fcn.00403d98(0xffffffff);\n    var_50h = fcn.00403d98();\n    fcn.00404e28();\n    fcn.0040377c();\n    fcn.00404b58();\n    fcn.00403d88();\n    cVar1 = fcn.0040776c();\n    if (cVar1 == '\\0') {\n        *in_FS_OFFSET = var_50h;\n    }\n    else {\n        uVar2 = fcn.00403990(&fcn.00412974::var_ch);\n        iVar3 = (***0x41b140)(uVar2);\n        if ((iVar3 == 0) &&\n           (iVar3 = (***0x41b2d4)(var_ch, 0x412c7c, 0xffffffff, &fcn.00412974::var_10h, &fcn.00412974::var_14h), \n           iVar3 == 0)) {\n            while (iVar3 = (***0x41b384)(var_10h),  iVar3 == 100) {\n                fcn.004034e4();\n                fcn.004034e4();\n                fcn.004034e4();\n                (***0x41b1dc)(var_10h, 0);\n                fcn.004036dc();\n                (***0x41b1dc)(var_10h, 1);\n                fcn.004036dc();\n                var_4ch = var_10h;\n                (***0x41b1dc)(var_10h, 2);\n                fcn.004036dc();\n                fcn.00403d88(0x412d40, var_18h);\n                fcn.00403d88(0x412d48, var_50h);\n                fcn.00403d88(0x412d54, 2);\n                var_50h = 0x412d60;\n                fcn.00403e78();\n            }\n        }\n        (***0x41b46c)(var_10h);\n        (***0x41b20c)(var_ch);\n        *in_FS_OFFSET = var_4ch;\n        fcn.00403c18();\n        var_44h = fcn.00403d98();\n        fcn.00404e38();\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00403bf4(0x412c48);\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 1347
    },
    "00413030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413030(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack720;\n    uint uStack716;\n    uchar *puStack712;\n    uint uStack708;\n    uint uStack704;\n    uint uStack700;\n    uint uStack696;\n    uint uStack692;\n    uint uStack688;\n    uint *puStack684;\n    uint uStack680;\n    uint uStack676;\n    uchar *puStack672;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_238h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack672 = 0x41308b;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00404150();\n    puStack672 = 0x413093;\n    fcn.00404150();\n    puStack672 = 0x41309b;\n    fcn.00404150();\n    uStack676 = 0x41328e;\n    uStack680 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd58;\n    puStack684 = &fcn.00413030::var_264h;\n    uStack688 = 0x4130c3;\n    puStack672 = &stack0xfffffffc;\n    fcn.00403e14();\n    uStack688 = 0x4130ce;\n    uStack688 = fcn.00403d98();\n    uStack692 = 0x4130d4;\n    var_14h = fcn.00404e50();\n    do {\n        uStack692 = var_4h;\n        uStack696 = 0x4132b8;\n        uStack700 = 0x4130f5;\n        fcn.00403d6c();\n        uStack700 = 0;\n        uStack704 = 0x4132b8;\n        uStack708 = **0x41b3bc;\n        puStack712 = 0x413117;\n        fcn.00403e78();\n        puStack712 = 0x413122;\n        cVar1 = fcn.0040776c();\n        if (cVar1 != '\\0') {\n            uStack716 = 0x413202;\n            uStack720 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd30;\n            puStack712 = &stack0xfffffffc;\n            fcn.00403d6c(0x4132b8, var_4h);\n            fcn.00403e78(0x4132c0, 0);\n            fcn.0041253c();\n            fcn.0040377c();\n            fcn.00403d6c(0x4132e4, var_8h, 0x4132b8, var_ch, 0);\n            fcn.00403e78(0x4132ec);\n            fcn.0040377c();\n            fcn.0040e6d4();\n            *in_FS_OFFSET = 0;\n        }\n        uStack688 = var_14h;\n        iVar2 = fcn.00404e58();\n        uVar3 = var_14h;\n    } while (iVar2 != 0);\n    fcn.00404e48();\n    *in_FS_OFFSET = uVar3;\n    uVar3 = 0x413295;\n    uStack688 = 0x41324a;\n    fcn.00403bf4();\n    fcn.004034e4(uVar3);\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 930
    },
    "00414808": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00414808(void)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack656;\n    uint uStack652;\n    uchar *puStack648;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack648 = 0x414853;\n    var_4h = in_EAX;\n    fcn.00404150();\n    uStack652 = 0x4149e5;\n    uStack656 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd70;\n    puStack648 = &stack0xfffffffc;\n    fcn.004062fc();\n    fcn.00403e14(&fcn.00414808::var_258h);\n    uVar2 = fcn.00403d98();\n    uVar2 = (***0x41b2d8)(uVar2);\n    do {\n        fcn.00403d6c(0x414a28, var_8h);\n        fcn.00403e78(0x414a30, 0x414a28, 0);\n        cVar1 = fcn.0040776c();\n        if (cVar1 != '\\0') {\n            fcn.00403d6c(0x414a28, var_4h);\n            fcn.00403e78(0x414a44, 0);\n            fcn.0040377c();\n            fcn.00403d6c(0x414a28, var_8h, 0);\n            fcn.00403e78(0x414a30, 0x414a28, 0);\n            fcn.0040e79c();\n        }\n        iVar3 = (***0x41b198)(uVar2, &fcn.00414808::var_258h);\n    } while (iVar3 != 0);\n    (***0x41b3ec)();\n    *in_FS_OFFSET = uVar2;\n    fcn.00403bf4(0x4149ec);\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 571
    },
    "00415ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415ca0(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_44h;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    \n    puStack84 = &stack0xfffffffc;\n    uStack88 = 0x415d2a;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack92;\n    uVar1 = fcn.00404ec0(0x415d50, 0x415d38);\n    pcVar2 = fcn.00404e98(uVar1);\n    fcn.004028e0();\n    var_40h = 0x40;\n    (*pcVar2)(&var_40h);\n    uVar1 = 0x100000;\n    fcn.004045cc(0x100000, 0);\n    fcn.0040709c();\n    fcn.0040377c();\n    *in_FS_OFFSET = uVar1;\n    fcn.00403bdc(0x415d31);\n    return;\n}\n",
        "token_count": 273
    },
    "00415d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00415d60(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack204;\n    uint uStack200;\n    uchar *puStack196;\n    uint var_b0h;\n    uint var_ach;\n    uint var_88h;\n    code *var_4h;\n    \n    puStack196 = &stack0xfffffffc;\n    uStack200 = 0x415e07;\n    uStack204 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff34;\n    uVar1 = fcn.00404ec0(0x415e2c, 0x415e18);\n    var_4h = fcn.00404e98(uVar1);\n    var_ach = 0xa8;\n    iVar3 = 0;\n    while( true ) {\n        iVar2 = (*var_4h)(0, iVar3, &fcn.00415d60::var_ach, 0);\n        if (iVar2 == 0) break;\n        iVar3 = iVar3 + 1;\n        fcn.00403748(*in_EAX);\n        fcn.00403850(0x415e40, 0);\n    }\n    *in_FS_OFFSET = uStack204;\n    puStack196 = 0x415e0e;\n    uStack200 = 0x415e06;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 336
    },
    "00416684": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416684(void)\n\n{\n    fcn.00404e80();\n    fcn.00403748();\n    return;\n}\n",
        "token_count": 32
    },
    "004166b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004166b4(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack332;\n    uint uStack328;\n    uchar *puStack324;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_28h;\n    \n    puStack324 = &stack0xfffffffc;\n    uStack328 = 0x416777;\n    uStack332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack332;\n    uVar3 = 0x28;\n    iVar1 = (***0x41b3f4)(0x28, &var_28h);\n    if (-1 < iVar1 + -1) {\n        puVar2 = &var_28h;\n        do {\n            (***0x41b2b0)(*puVar2, 0x59, &var_128h, 0x100);\n            uStack332 = *in_EAX;\n            fcn.00403748();\n            fcn.0040633c();\n            uVar3 = 0x416790;\n            fcn.00403850(0x416790, 0);\n            puVar2 = puVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack332 = 0x41677e;\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 350
    },
    "00416794": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416794(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    \n    puStack204 = &stack0xfffffffc;\n    uStack208 = 0x41686c;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack212;\n    (***0x41b304)(&var_ach);\n    fcn.0040709c(0x416880);\n    fcn.0040709c(0x416890, 0);\n    fcn.00403e78();\n    fcn.0040377c();\n    *in_FS_OFFSET = 0;\n    fcn.00403bf4(0x416873);\n    return;\n}\n",
        "token_count": 199
    },
    "00416dd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416dd4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x416ded;\n    fcn.00403980();\n    uStack36 = 0x416e6b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = fcn.00403790();\n    iVar2 = fcn.00403790();\n    if (param_1 <= iVar1) {\n        iVar1 = param_1;\n    }\n    iVar4 = 1;\n    if (0 < iVar1) {\n        iVar5 = 1;\n        do {\n            iVar3 = fcn.004039e8();\n            *(iVar3 + -1 + iVar5) = *(*in_EAX + -1 + iVar5) ^ *(param_2 + -1 + iVar4);\n            iVar4 = iVar4 + 1;\n            if (iVar2 < iVar4) {\n                iVar4 = 1;\n            }\n            iVar5 = iVar5 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x416e72;\n    uStack36 = 0x416e6a;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 407
    },
    "0041745c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041745c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x4174b9;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    fcn.0040297c();\n    fcn.00403d60();\n    fcn.00403c18();\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x4174c0;\n    uStack280 = 0x4174b8;\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 176
    },
    "0041757c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041757c(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x417593;\n    var_8h = param_2;\n    fcn.00403980();\n    uStack36 = 0x41761e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar1 = fcn.00404ec0(0x41763c, 0x417630);\n    pcVar2 = fcn.00404e98();\n    if (pcVar2 != NULL) {\n        var_ch = 0;\n        puVar3 = fcn.00402530();\n        var_ch = fcn.00402530();\n        *puVar3 = 1;\n        puVar3[1] = var_8h;\n        uVar4 = fcn.00403990(1, 0, puVar3, &fcn.0041757c::var_ch, 0);\n        (*pcVar2)(uVar4);\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.004034e4(0x417625);\n    return;\n}\n",
        "token_count": 344
    },
    "00417668": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "PEB access",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "access PEB ldr_data",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417668(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x417687;\n    fcn.00403980();\n    uStack40 = 0x4177e3;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.004034e4();\n    fcn.00404804(0x11);\n    _pe_dos_header = 0x99935097;\n    *0x4 = 0x2c89d95b;\n    *0x8 = 0x6df8e950;\n    *0xc = 0xdf4eff82;\n    *0x10 = 0xe8ead4ad;\n    *0x14 = 0xbb07f9ad;\n    *0x18 = 0xb746652e;\n    *0x1c = 0x7f612d05;\n    *0x20 = 0xd7520332;\n    *0x24 = 0x20278d52;\n    *0x28 = 0xfe2bf75e;\n    *0x2c = 0xba2aac6b;\n    *0x30 = 0xd1823480;\n    *0x34 = 0x5ef1f8a2;\n    *0x38 = 0x2ac162ac;\n    *0x3c = 0x6ea634c0;\n    *0x40 = 0xf10ecec6;\n    iVar2 = 0x11;\n    do {\n        iVar1 = fcn.0041757c();\n        if (iVar1 != 0) break;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (iVar1 == 0) {\n        fcn.004037dc();\n        fcn.00417d84(param_2);\n    }\n    else {\n        param_2 = 0x4177b7;\n        fcn.004174c8();\n    }\n    *in_FS_OFFSET = param_2;\n    uStack40 = 0x4177ea;\n    uStack44 = 0x4177cc;\n    fcn.004034e4();\n    uStack44 = 0x4177da;\n    fcn.00404810();\n    uStack44 = 0x4177e2;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 622
    },
    "00403338": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.00403338(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0x41b000;\n    *0x41b000 = 0;\n    puVar3 = *0x41c628;\n    puVar4 = 0x41c628;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 170
    },
    "00405424": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00405424(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00404648();\n    if (0 < iVar1) {\n        iVar1 = fcn.00404648();\n        if (-1 < iVar1 + -1) {\n            iVar2 = 0;\n            do {\n                fcn.00403850(0x405520, *(*0x41c664 + 4 + iVar2 * 0x18), 0x405510, *in_EAX);\n                fcn.00403850(0x405520, *(*0x41c664 + 8 + iVar2 * 0x18), 0x40552c, *in_EAX);\n                fcn.00403850(0x405520, *(*0x41c664 + 0xc + iVar2 * 0x18), 0x40553c, *in_EAX);\n                fcn.00403850(0x405520, *(*0x41c664 + 0x10 + iVar2 * 0x18), 0x40554c, *in_EAX);\n                fcn.00403850();\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "004063c8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004063c8(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x406539;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    fcn.004034e4();\n    iVar1 = fcn.00404648();\n    if ((0 < iVar1) && (var_4h = fcn.00404648(),  -1 < var_4h + -1)) {\n        do {\n            fcn.00406834(*in_EAX);\n            fcn.00403850(0x406550, 0);\n            fcn.00406834(*in_EAX);\n            fcn.00403850(0x406550, 0);\n            fcn.00406834(*in_EAX);\n            fcn.00403850(0x406550, 0);\n            fcn.00406834(*in_EAX);\n            fcn.00403850(0x406550, 0);\n            fcn.00406834(*in_EAX);\n            fcn.00403850(0x406550, 0);\n            fcn.00406834(*in_EAX);\n            uStack56 = 0x40655c;\n            fcn.00403850();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x406540;\n    uStack52 = 0x406538;\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 449
    },
    "00407af0": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.00407af0(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(in_FS_OFFSET + 0x30);\n}\n",
        "token_count": 34
    },
    "00416894": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00416894(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uchar auStack16 [2];\n    uint var_ah;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    _auStack16 = 5;\n    do {\n        var_4h = 0;\n        _auStack16 = _auStack16 + -1;\n    } while (_auStack16 != 0);\n    var_18h = 0x416967;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_1ch;\n    (***0x41b26c)(&var_10h);\n    fcn.0040709c();\n    uVar2 = var_18h;\n    fcn.0040709c(0x416978, var_18h);\n    uVar1 = var_1ch;\n    fcn.0040709c(0x416978);\n    fcn.0040709c(0x416980, &var_10h);\n    fcn.0040709c(0x416988, uVar2);\n    fcn.0040709c(0x416988, 0x416978);\n    fcn.00403e78();\n    fcn.0040377c();\n    *in_FS_OFFSET = uVar1;\n    fcn.00403bf4(0x41696e);\n    return;\n}\n",
        "token_count": 449
    },
    "00402a68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402a68(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 177
    },
    "00402c60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00402c60(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        in_EAX = *(iVar1 + -0x24);\n        if (*(iVar1 + -0x40) != 0) {\n            fcn.00404234();\n        }\n    } while (in_EAX != NULL);\n    return;\n}\n",
        "token_count": 95
    },
    "004031dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004031dc(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0x41c634;\n    puStack20 = &stack0xfffffffc;\n    if (*0x41c630 != 0) {\n        iVar1 = *(*0x41c630 + 4);\n        uStack24 = 0x403222;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x41c634 = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0040323c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040323c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x41c630 != NULL) {\n        iVar1 = **0x41c630;\n        iVar4 = 0;\n        iVar2 = (*0x41c630)[1];\n        uStack24 = 0x403282;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar1) {\n            do {\n                pcVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0x41c634 = iVar4;\n                if (pcVar3 != NULL) {\n                    (*pcVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "00403ad4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00403ad4(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    bool bVar7;\n    \n    if (in_EAX != NULL) {\n        if (param_2 == NULL) {\n            return 0;\n        }\n        iVar3 = *(in_EAX + -4) + -1;\n        if (-1 < iVar3) {\n            iVar1 = *(param_2 + -4) - iVar3;\n            bVar7 = iVar1 == 0;\n            pcVar5 = param_2;\n            if (!bVar7 && iVar3 <= *(param_2 + -4)) {\ncode_r0x00403af4:\n                do {\n                    if (iVar1 != 0) {\n                        iVar1 = iVar1 + -1;\n                        pcVar4 = pcVar5 + 1;\n                        bVar7 = *in_EAX == *pcVar5;\n                        pcVar5 = pcVar4;\n                        if (!bVar7) goto code_r0x00403af4;\n                    }\n                    iVar2 = iVar3;\n                    pcVar4 = in_EAX + 1;\n                    pcVar6 = pcVar5;\n                    if (!bVar7) goto code_r0x00403b08;\n                    do {\n                        if (iVar2 == 0) break;\n                        bVar7 = *pcVar4 == *pcVar6;\n                        iVar2 = iVar2 + -1;\n                        pcVar4 = pcVar4 + 1;\n                        pcVar6 = pcVar6 + 1;\n                    } while (bVar7);\n                } while (!bVar7);\n                in_EAX = pcVar5 + -param_2;\n                goto code_r0x00403b18;\n            }\n        }\ncode_r0x00403b08:\n        in_EAX = NULL;\n    }\ncode_r0x00403b18:\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 466
    },
    "00404668": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004025ec)\n\nvoid __fastcall fcn.00404668(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.004034e4();\n            }\n            else {\n                fcn.00403508();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00403bdc();\n            }\n            else {\n                fcn.00403bf4();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00404268();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00404280();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00404234();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.0040495c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x41c008 != NULL) {\n                    (**0x41c008)();\n                }\n                fcn.004025c0();\n                return;\n            }\n            do {\n                fcn.00404810();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "004048ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004048ec(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x404950;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.00404880();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0x41b028;\n    if (var_4h == *0x41b028) {\n        *0x41b028 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00405574": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405574(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.004034e4();\n    iVar1 = fcn.00404648();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00403850();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00405fa8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405fa8(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (in_EAX != 0) {\n        if ((param_2 != 0) && (*(in_EAX + -4) == *(param_2 + -4))) {\n            iVar2 = *(in_EAX + -4) + -1;\n            if (iVar2 < 0) {\n                return 0;\n            }\n            do {\n                while (cVar1 = *(iVar2 + param_2),  iVar3 = iVar2,  param_1 != cVar1) {\ncode_r0x00405fef:\n                    if (cVar1 != *(iVar3 + in_EAX)) {\n                        return 0;\n                    }\n                    iVar2 = iVar3 + -1;\n                    if (iVar2 < 0) {\n                        return 1;\n                    }\n                }\n                iVar3 = iVar2 + -1;\n                if (iVar3 < 0) {\n                    return 1;\n                }\n                cVar1 = *(iVar3 + param_2);\n                if (param_1 != cVar1) goto code_r0x00405fef;\n                iVar3 = iVar2 + -2;\n                if (iVar3 < 0) {\n                    return 1;\n                }\n                cVar1 = *(iVar3 + param_2);\n                if (param_1 != cVar1) goto code_r0x00405fef;\n                iVar3 = iVar2 + -3;\n                if (iVar3 < 0) {\n                    return 1;\n                }\n                cVar1 = *(iVar3 + param_2);\n                if (param_1 != cVar1) goto code_r0x00405fef;\n                iVar2 = iVar2 + -4;\n                if (iVar2 < 0) {\n                    return 1;\n                }\n            } while( true );\n        }\n        in_EAX = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 455
    },
    "0040627c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040627c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x40628e;\n    fcn.00403980();\n    uStack20 = 0x4062e2;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00406204();\n    fcn.0040680c();\n    while( true ) {\n        iVar1 = fcn.00403790();\n        if (7 < iVar1) break;\n        fcn.004037dc();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4062e9;\n    uStack20 = 0x4062e1;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 223
    },
    "00406560": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406560(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4065d7;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.004034e4();\n    iVar1 = fcn.00404648();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00406834(*in_EAX);\n            uStack32 = 0x4065ec;\n            fcn.00403850();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4065de;\n    uStack28 = 0x4065d6;\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 243
    },
    "004094e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004094e0(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    puStack44 = 0x4094fc;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00404150();\n    puStack44 = 0x409504;\n    fcn.00403980();\n    uStack48 = 0x409629;\n    puStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00407a18();\n    iVar1 = fcn.00404648();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00403ad4(&fcn.004094e0::var_10h);\n            fcn.004039f0();\n            puStack52 = &fcn.004094e0::var_14h;\n            iVar2 = fcn.00403ad4();\n            iVar3 = fcn.00403790(iVar2);\n            fcn.00403ad4(iVar3 - iVar2);\n            fcn.004039f0();\n            iVar2 = fcn.00403790();\n            if (1 < iVar2) {\n                fcn.00403d88(0x409664, var_4h);\n                puStack52 = NULL;\n                fcn.00403e78();\n                fcn.00407360();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack52;\n    puStack44 = 0x409630;\n    uStack48 = 0x4095fd;\n    fcn.00403bf4();\n    uStack48 = 0x40960a;\n    fcn.00403508();\n    uStack48 = 0x409618;\n    fcn.00404810();\n    uStack48 = 0x409620;\n    fcn.004034e4();\n    uStack48 = 0x409628;\n    fcn.00403bdc();\n    return;\n}\n",
        "token_count": 599
    },
    "0040de44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0040de44(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 6;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_10h = 0x40de5f;\n    fcn.00403980();\n    var_14h = 0x40dfde;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040de44::var_18h;\n    var_10h = &stack0xfffffffc;\n    while( true ) {\n        var_1ch = 0x40df6f;\n        iVar1 = fcn.00403ad4();\n        if (iVar1 == 0) break;\n        var_1ch = 0x40de7a;\n        fcn.004034e4();\n        var_1ch = &fcn.0040de44::var_ch;\n        var_20h = 0x40de89;\n        fcn.00403d88();\n        var_20h = 0x40de9b;\n        fcn.00407400(var_1ch);\n        var_20h = 0x40dea6;\n        fcn.0040377c();\n        var_20h = &fcn.0040de44::var_18h;\n        var_24h = 0x40deb5;\n        fcn.00403d88();\n        var_24h = 0x40dec7;\n        fcn.00407400(var_20h);\n        var_24h = 0x40ded2;\n        fcn.0040377c();\n        var_24h = var_14h;\n        var_28h = &fcn.0040de44::var_24h;\n        var_2ch = 0x40dee5;\n        fcn.00403d88();\n        var_2ch = 0x40def7;\n        fcn.00407400(var_28h);\n        var_2ch = 0x40df02;\n        fcn.0040377c();\n        var_2ch = var_20h;\n        var_30h = 0;\n        var_18h = &fcn.0040de44::var_30h;\n        fcn.00403d88();\n        fcn.00407400(var_18h);\n        fcn.0040377c();\n        fcn.0040525c(var_18h, var_30h, var_2ch);\n        fcn.00403ad4();\n        fcn.00403a30();\n    }\n    *in_FS_OFFSET = var_18h;\n    var_10h = 0x40dfe5;\n    var_14h = 0x40df91;\n    fcn.00403bf4();\n    var_14h = 0x40df99;\n    fcn.004034e4();\n    var_14h = 0x40dfa6;\n    fcn.00403bf4();\n    var_14h = 0x40dfae;\n    fcn.004034e4();\n    var_14h = 0x40dfbb;\n    fcn.00403bf4();\n    var_14h = 0x40dfc3;\n    fcn.004034e4();\n    var_14h = 0x40dfd0;\n    fcn.00403bf4();\n    var_14h = 0x40dfdd;\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 986
    },
    "0041006c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041006c(uint param_1, uint *param_2)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint *puStack68;\n    uint uStack64;\n    uint *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0x50;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puStack36 = 0x410094;\n    fcn.00404150();\n    puStack36 = 0x41009c;\n    fcn.00404150();\n    puStack36 = 0x4100a4;\n    fcn.00404150();\n    ppcVar1 = *0x41b198;\n    uStack40 = 0x4102aa;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack52 = 0x4100d2;\n    puStack48 = &fcn.0041006c::var_260h;\n    puStack36 = &stack0xfffffffc;\n    fcn.00403e14();\n    uStack52 = 0x4100dd;\n    uStack52 = fcn.00403d98();\n    uStack56 = 0x4100e7;\n    uStack56 = (***0x41b2d8)();\n    do {\n        puStack60 = 0x4102d0;\n        uStack64 = 0x410104;\n        fcn.00403d6c();\n        puStack68 = 0x41011a;\n        fcn.00403e78();\n        puStack68 = 0x41012b;\n        fcn.0040fe00();\n        puStack68 = 0x410139;\n        fcn.00403798();\n        uStack76 = 0x41013f;\n        uStack72 = uStack56;\n        puStack68 = &fcn.0041006c::var_260h;\n        iVar2 = (**ppcVar1)();\n    } while (iVar2 != 0);\n    puStack60 = 0x41014d;\n    (***0x41b3ec)();\n    puStack68 = 0x4102d8;\n    uStack72 = 0x4102ec;\n    uStack76 = 0x41016b;\n    puStack60 = &fcn.0041006c::var_260h;\n    fcn.00403e78();\n    uStack76 = 0x410176;\n    uStack76 = fcn.00403d98();\n    uStack80 = 0x410180;\n    uStack80 = (***0x41b2d8)();\n    do {\n        uStack84 = 0x4102d0;\n        uStack88 = 0x41019d;\n        fcn.00403d6c();\n        uStack88 = var_280h;\n        puStack92 = 0x4101b3;\n        fcn.00403e78();\n        puStack92 = 0x4101c4;\n        fcn.0040fe00();\n        puStack92 = 0x4101d2;\n        fcn.00403798();\n        uStack100 = 0x4101d8;\n        uStack96 = uStack80;\n        puStack92 = &fcn.0041006c::var_260h;\n        iVar2 = (**ppcVar1)();\n    } while (iVar2 != 0);\n    uStack84 = 0x4101e6;\n    (***0x41b3ec)();\n    uStack84 = 0x4101ee;\n    iVar2 = fcn.00403790();\n    if (1 < iVar2) {\n        uStack84 = 0;\n        uStack88 = 0x4102d0;\n        uStack96 = 0x4102f8;\n        uStack100 = 0x410211;\n        puStack92 = param_2;\n        fcn.00403e78();\n        uStack100 = 0x410222;\n        fcn.0040377c();\n        uStack100 = 0x410230;\n        fcn.0040e6d4();\n    }\n    *in_FS_OFFSET = uStack80;\n    uStack72 = 0x4102b1;\n    uStack76 = 0x410248;\n    fcn.00403bdc();\n    uStack76 = 0x410253;\n    fcn.004034e4();\n    uStack76 = 0x410263;\n    fcn.00403bf4();\n    uStack76 = 0x41026e;\n    fcn.004034e4();\n    uStack76 = 0x41027e;\n    fcn.00403bf4();\n    uStack76 = 0x410289;\n    fcn.004034e4();\n    uStack76 = 0x410294;\n    fcn.00403bdc();\n    uStack76 = 0x41029c;\n    fcn.004034e4();\n    uStack76 = 0x4102a9;\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 1340
    },
    "00414a90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00414a90(void)\n\n{\n    code **ppcVar1;\n    uint in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint *var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint uStackY108;\n    uint uStackY104;\n    uint *puStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uint *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uint uStackY72;\n    uint *puStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint *puStackY56;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0x51;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puStack32 = 0x414aae;\n    var_4h = in_EAX;\n    fcn.00404150();\n    ppcVar1 = *0x41b198;\n    uStack36 = 0x414cfc;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.004075c0(&fcn.00414a90::var_8h, 0);\n    puStackY56 = 0x414afb;\n    fcn.0040717c(&fcn.00414a90::var_25ch);\n    puStackY56 = 0x414b09;\n    fcn.00403c3c();\n    uStackY60 = 0x414b1d;\n    puStackY56 = &fcn.00414a90::var_258h;\n    fcn.00403e14();\n    uStackY60 = 0x414b28;\n    uStackY60 = fcn.00403d98();\n    uStackY64 = 0x414b32;\n    uVar2 = (***0x41b2d8)();\n    do {\n        uStackY64 = var_4h;\n        puStackY68 = 0x414d58;\n        uStackY72 = 0x414b4f;\n        fcn.00403d6c();\n        uStackY76 = 0x414b65;\n        fcn.00403e78();\n        uStackY76 = 0x414b76;\n        fcn.0040377c();\n        uStackY80 = var_8h;\n        uStackY84 = 0x414d58;\n        puStackY88 = 0x414b98;\n        fcn.00403d6c();\n        uStackY92 = 0x414bae;\n        fcn.00403e78();\n        puStackY88 = 0x414bba;\n        fcn.0040e79c();\n        uStackY96 = 0x414bc0;\n        uStackY92 = uVar2;\n        puStackY88 = &fcn.00414a90::var_258h;\n        iVar3 = (**ppcVar1)();\n    } while (iVar3 != 0);\n    puStackY68 = 0x414bd2;\n    uStackY64 = uVar2;\n    (***0x41b3ec)();\n    uStackY72 = 0x414be6;\n    puStackY68 = &fcn.00414a90::var_258h;\n    fcn.00403e14();\n    uStackY72 = 0x414bf1;\n    uStackY72 = fcn.00403d98();\n    uStackY76 = 0x414bfb;\n    uVar2 = (***0x41b2d8)();\n    do {\n        uStackY76 = var_4h;\n        uStackY80 = 0x414d9c;\n        uStackY84 = 0x414c18;\n        fcn.00403d6c();\n        puStackY88 = 0x414c2e;\n        fcn.00403e78();\n        puStackY88 = 0x414c3f;\n        fcn.0040377c();\n        puStackY88 = var_27ch;\n        uStackY92 = var_8h;\n        uStackY96 = 0x414d9c;\n        puStackY100 = 0x414c61;\n        fcn.00403d6c();\n        uStackY104 = 0x414c77;\n        fcn.00403e78();\n        puStackY100 = 0x414c83;\n        fcn.0040e79c();\n        uStackY108 = 0x414c89;\n        uStackY104 = uVar2;\n        puStackY100 = &fcn.00414a90::var_258h;\n        iVar3 = (**ppcVar1)();\n    } while (iVar3 != 0);\n    uStackY80 = 0x414c9b;\n    uStackY76 = uVar2;\n    (***0x41b3ec)();\n    *in_FS_OFFSET = uStackY76;\n    puStackY68 = 0x414d03;\n    uStackY72 = 0x414cb8;\n    fcn.00403bf4();\n    uStackY72 = 0x414cc3;\n    fcn.004034e4();\n    uStackY72 = 0x414cd3;\n    fcn.00403bf4();\n    uStackY72 = 0x414cde;\n    fcn.004034e4();\n    uStackY72 = 0x414cee;\n    fcn.00403bf4();\n    uStackY72 = 0x414cfb;\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 1413
    },
    "0041564c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041564c(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_478h;\n    uint var_474h;\n    uint var_470h;\n    uint var_46ch;\n    uint var_468h;\n    uint var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_458h;\n    uint var_454h;\n    uint var_450h;\n    uint var_44ch;\n    uint var_448h;\n    uint var_444h;\n    uint var_440h;\n    uint var_43ch;\n    uint var_438h;\n    uint var_434h;\n    uint var_430h;\n    uint var_42ch;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_414h;\n    uint var_410h;\n    uint var_40ch;\n    uint var_408h;\n    uint var_404h;\n    uint var_400h;\n    uint var_3fch;\n    uint var_3f8h;\n    uint var_3f4h;\n    uint var_3edh;\n    uint uStackY148;\n    uint *puStackY144;\n    uint uStackY140;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    iVar1 = 0x8f;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    uStack32 = 0x415b6e;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004034e4();\n    fcn.004069a8();\n    fcn.00403990();\n    fcn.00404e20();\n    while( true ) {\n        iVar1 = fcn.00404e18();\n        if (iVar1 != 0) break;\n        fcn.00403d88();\n        uVar3 = 0;\n        puVar2 = &fcn.0041564c::var_400h;\n        fcn.004069a8();\n        fcn.00403990();\n        fcn.00403cf4();\n        fcn.004069a8();\n        fcn.00403748();\n        fcn.00403798();\n        fcn.00403990();\n        fcn.00403cf4();\n        fcn.004075c0(puVar2, uVar3);\n        uVar3 = 0;\n        puVar2 = &fcn.0041564c::var_418h;\n        fcn.004069a8();\n        fcn.00403990();\n        fcn.00403cf4();\n        fcn.004069a8();\n        fcn.00403748();\n        fcn.00403798();\n        fcn.00403990();\n        fcn.00403cf4();\n        fcn.004075c0(puVar2, uVar3);\n        fcn.00403e78();\n        fcn.0040377c();\n    }\n    fcn.004069a8();\n    fcn.00403990();\n    fcn.00404e20();\n    while( true ) {\n        iVar1 = fcn.00404e18();\n        if (iVar1 != 0) break;\n        fcn.00403d88();\n        uVar3 = 0;\n        puVar2 = &fcn.0041564c::var_43ch;\n        fcn.004069a8();\n        fcn.00403990();\n        fcn.00403cf4();\n        fcn.004069a8();\n        fcn.00403748();\n        fcn.00403798();\n        fcn.00403990();\n        fcn.00403cf4();\n        fcn.004075c0(puVar2, uVar3);\n        uVar3 = 0;\n        puVar2 = &fcn.0041564c::var_454h;\n        uStackY140 = 0x415943;\n        fcn.004069a8();\n        uStackY140 = 0x41594e;\n        fcn.00403990();\n        uStackY140 = 0x41595b;\n        fcn.00403cf4();\n        uStackY140 = var_458h;\n        puStackY144 = 0x415972;\n        fcn.004069a8();\n        puStackY144 = &fcn.0041564c::var_464h;\n        uStackY148 = 0x41598b;\n        fcn.00403748();\n        puStackY144 = 0x415997;\n        fcn.00403798();\n        puStackY144 = 0x4159a2;\n        fcn.00403990();\n        puStackY144 = 0x4159af;\n        fcn.00403cf4();\n        uStackY140 = 0x4159c0;\n        fcn.004075c0(puVar2, uVar3);\n        uStackY140 = var_454h;\n        uStackY148 = 0x4159db;\n        fcn.00403e78();\n        uStackY148 = 0x4159e8;\n        fcn.0040377c();\n    }\n    puVar2 = &fcn.0041564c::var_46ch;\n    fcn.00403d88();\n    fcn.0040717c(puVar2);\n    fcn.0040377c();\n    puVar2 = &fcn.0041564c::var_474h;\n    fcn.00403d88();\n    fcn.0040717c(puVar2);\n    fcn.0040377c();\n    *in_FS_OFFSET = puVar2;\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    return;\n}\n",
        "token_count": 1497
    },
    "00415e44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.00415e44(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint uStack36;\n    uint *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *var_10h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 0xb;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    uStack24 = 0x415fd0;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = &fcn.00415e44::var_24h;\n    uStack36 = 0x415e6d;\n    fcn.00404ea0();\n    uStack36 = 0x415e77;\n    fcn.00403d88();\n    uStack36 = var_2ch;\n    var_24h = 0x415fe0;\n    var_28h = 0;\n    var_2ch = &fcn.00415e44::var_30h;\n    var_30h = 0x415e92;\n    fcn.004069a8();\n    var_30h = 0x415e9d;\n    fcn.00403d88();\n    fcn.004069a8();\n    fcn.00403d88();\n    var_30h = 0x415ec7;\n    fcn.004075c0(var_2ch, var_28h);\n    fcn.00403e78(0x416070);\n    fcn.0040377c();\n    fcn.004037dc();\n    fcn.00403d88();\n    fcn.0040709c(var_48h);\n    fcn.00403e78(0x416070, var_50h);\n    fcn.0040377c();\n    fcn.00415ca0(0x416094, *in_EAX);\n    fcn.00403850(0x4160a8, var_54h);\n    fcn.00415d60(0x4160b4, *in_EAX);\n    uVar2 = 0x4160a8;\n    fcn.00403850(0x4160a8, 0x4160b4);\n    *in_FS_OFFSET = uVar2;\n    fcn.00403508(0x415fd7);\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bdc();\n    fcn.004034e4();\n    fcn.00403bf4();\n    return;\n}\n",
        "token_count": 916
    },
    "0041698c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0041698c(void)\n\n{\n    uint uVar1;\n    uchar *puVar2;\n    uint uVar3;\n    uint *in_EAX;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar4 = 0xc;\n    do {\n        var_4h = 0;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_14h = 0x416c78;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.00406ce8(0x416c8c);\n    uVar3 = var_4h;\n    fcn.00403850(0x416ca4, var_4h);\n    uVar1 = *in_EAX;\n    fcn.00416684(0x416cb0, uVar1);\n    fcn.00403850(0x416cc8, var_8h);\n    fcn.00407b08(0x416cd8, *in_EAX);\n    fcn.00403850(0x416cf0, var_18h);\n    fcn.00403d88();\n    puVar2 = var_10h;\n    fcn.004066e4(var_10h);\n    fcn.00406bd8(0x416cf8, 0x416c8c);\n    fcn.00403e78(0x416d00, uVar3);\n    fcn.0040377c();\n    fcn.004037dc();\n    fcn.00403d88();\n    fcn.00406634(uVar1);\n    fcn.004065f0(0x416d2c, var_8h);\n    fcn.00403e78(0x416d00, 0x416d34, 0x416cc8);\n    fcn.0040377c();\n    fcn.004037dc();\n    fcn.00403d88();\n    fcn.00404f30(0, 0x416cd8);\n    fcn.0040709c();\n    fcn.00404f30(1, 0x416d50, 0x416cf0);\n    fcn.0040709c();\n    fcn.00403e78(0x416d00, puVar2);\n    fcn.0040377c();\n    fcn.004166b4(0x416d5c, *in_EAX);\n    fcn.00403850(0x416ca4, 0x416c8c);\n    fcn.00416894(0x416d70, *in_EAX);\n    fcn.00403850(0x416ca4, 0x416cf8);\n    fcn.00416794(0x416d84, *in_EAX);\n    fcn.00403850(0x416cc8, uVar3);\n    fcn.00415e44(*in_EAX);\n    fcn.00403850(0x416cc8, 0x416d00);\n    fcn.00404ee0(1);\n    fcn.00416290(*in_EAX);\n    fcn.00403850(0x416ca4, 0x416ca4, uVar1);\n    fcn.00404ee0(1);\n    fcn.00403850(0x416ca4, 0x416d94, *in_EAX);\n    fcn.00404ee0();\n    fcn.0041564c();\n    fcn.00403798();\n    *in_FS_OFFSET = 1;\n    fcn.00403508(0x416c7f);\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.004034e4();\n    fcn.00403bf4();\n    fcn.00403508();\n    fcn.00403bf4();\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 1380
    },
    "0041841c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.0041841c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint32_t var_88h;\n    uint var_68h;\n    uint var_58h;\n    uint uStackY80;\n    uint uStackY76;\n    uint uStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uint uStackY52;\n    uint var_2ch;\n    uint *var_28h;\n    uint *puStackY40;\n    uint uStack32;\n    uint uStack28;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0x18;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_14h = 0x41843a;\n    fcn.00403980();\n    uStack28 = 0x418666;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY40 = 0x418466;\n    var_14h = &stack0xfffffffc;\n    fcn.00417d84(&fcn.0041841c::var_8h);\n    puStackY40 = 0x418474;\n    fcn.00403d88();\n    puStackY40 = 0x418482;\n    fcn.004077c8();\n    puStackY40 = 0x418492;\n    fcn.004062fc();\n    puStackY40 = 0x4184a3;\n    fcn.00403e14();\n    puStackY40 = 0x4184ae;\n    fcn.00407360();\n    puStackY40 = 0x4184b6;\n    cVar1 = fcn.0040776c();\n    if (cVar1 == '\\0') {\n        puStackY40 = 0x4184ca;\n        fcn.004062fc();\n        puStackY40 = 0x4184db;\n        fcn.00403e14();\n        puStackY40 = 0x4184e6;\n        fcn.00407360();\n    }\n    puStackY40 = 0x4184f1;\n    fcn.00406724();\n    puStackY40 = 0x4184ff;\n    fcn.0040377c();\n    puStackY40 = 0x418510;\n    fcn.0040633c();\n    puStackY40 = 0x418520;\n    iVar2 = fcn.00403ad4();\n    if (iVar2 == 0) {\n        puStackY40 = 0x41859f;\n        fcn.004028e0();\n        var_a4h = 0x3c;\n        var_a0h = 0x1c0;\n        var_9ch = 0;\n        var_98h = 0;\n        puStackY40 = 0x4185cb;\n        var_94h = fcn.00403d98();\n        var_90h = 0;\n        puStackY40 = 0x4185e7;\n        fcn.00407854();\n        puStackY40 = 0x4185f2;\n        var_8ch = fcn.00403d98();\n        puStackY40 = &fcn.0041841c::var_a4h;\n        var_28h = 0x41860e;\n        var_88h = param_2 != '\\0';\n        (***0x41b150)();\n    }\n    else {\n        puStackY40 = 0x418533;\n        fcn.004028e0();\n        var_58h = 0x44;\n        puStackY40 = &fcn.0041841c::var_68h;\n        var_28h = &fcn.0041841c::var_58h;\n        var_2ch = 0x41855b;\n        fcn.00407854();\n        var_2ch = 0x418566;\n        var_2ch = fcn.00403d98();\n        uStackY52 = 0;\n        uStackY56 = 0x4000410;\n        uStackY60 = 0;\n        uStackY64 = 0;\n        uStackY68 = 0;\n        uStackY72 = 0;\n        uStackY76 = 0x41857e;\n        uStackY76 = fcn.00403d98();\n        uStackY80 = 0x418588;\n        (***0x41b420)();\n    }\n    *in_FS_OFFSET = uStackY76;\n    uStackY68 = 0x41866d;\n    uStackY72 = 0x41862b;\n    fcn.00403bf4();\n    uStackY72 = 0x41863b;\n    fcn.00403508();\n    uStackY72 = 0x41864b;\n    fcn.00403bf4();\n    uStackY72 = 0x418658;\n    fcn.00403bf4();\n    uStackY72 = 0x418665;\n    fcn.00403508();\n    return;\n}\n",
        "token_count": 1328
    }
}