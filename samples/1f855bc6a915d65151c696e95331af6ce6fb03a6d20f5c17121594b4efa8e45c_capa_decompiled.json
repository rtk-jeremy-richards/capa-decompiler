{
    "0040118b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040118b(int32_t *param_1, uint param_2)\n\n{\n    if (*param_1 == 0) {\n        fcn.00401027(param_2);\n    }\n    else {\n        fcn.0040106f();\n        fcn.00401119(param_2);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00401292": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401292(int32_t format, uint arg)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint s;\n    uint var_28h;\n    uint timer;\n    int32_t var_4h;\n    \n    if ((*0x423710 == '\\0') || (*0x41db5c != 0)) {\n        iVar5 = 0;\n        if ((*0x41d73c == 0) || (*0x41db5c != 0)) {\n            (*_sym.imp.MSVCRT.dll_time)(&timer);\n            puVar3 = (*_sym.imp.MSVCRT.dll_localtime)(&timer);\n            if (puVar3 == NULL) {\n                sub.MSVCRT.dll_strcpy(&var_28h, \"Date/Time not available\");\n            }\n            else {\n                (*_sym.imp.MSVCRT.dll_sprintf)\n                          (&var_28h, \"%04u.%02u.%02u %02u:%02u:%02u (%3s)\", puVar3[5] + 0x76c, puVar3[4] + 1, puVar3[3]\n                           , puVar3[2], puVar3[1], *puVar3, *(puVar3[6] * 4 + 0x41b08c));\n            }\n            pcVar2 = _sym.imp.MSVCRT.dll_fprintf;\n            if (format == 0) {\n                if (*0x41db5c != 0) {\n                    if (*0x4241e8 != '\\n') {\n                        (*_sym.imp.MSVCRT.dll_fprintf)(*0x41db5c, 0x4132a0);\n                    }\n                    (*pcVar2)(*0x41db5c, \"%s-------------End of Session------------------\\n\", &var_28h);\n                    *0x4241e4 = 0;\n                }\n            }\n            else {\n                (*_sym.imp.MSVCRT.dll_vsprintf)(&s, format, &arg);\n                var_4h = sub.MSVCRT.dll_strlen(&s);\n                if (s != '\\0') {\n                    puVar3 = &s;\n                    puVar1 = &s;\n                    do {\n                        puVar6 = puVar1 + 1;\n                        if (*puVar3 == '\\r') {\n                            if ((*puVar6 == '\\r') || (*puVar6 == '\\n')) {\ncode_r0x004013d5:\n                                iVar4 = var_4h - iVar5;\n                                puVar7 = puVar3;\n                                puVar8 = puVar6;\ncode_r0x004013f3:\n                                sub.MSVCRT.dll_memcpy(puVar7, puVar8, iVar4);\n                                iVar5 = iVar5 + -1;\n                                puVar3 = puVar3 + -1;\n                                puVar6 = puVar1;\n                            }\n                        }\n                        else if (*puVar3 == '\\n') {\n                            if (*puVar6 == '\\n') goto code_r0x004013d5;\n                            if (*puVar6 == '\\r') {\n                                iVar4 = (var_4h - iVar5) + -1;\n                                puVar8 = &s + iVar5 + 2;\n                                puVar7 = puVar6;\n                                goto code_r0x004013f3;\n                            }\n                        }\n                        iVar5 = iVar5 + 1;\n                        puVar3 = puVar3 + 1;\n                        puVar1 = puVar6;\n                    } while (*puVar3 != '\\0');\n                }\n                iVar5 = sub.MSVCRT.dll_strlen(&s);\n                pcVar2 = _sym.imp.MSVCRT.dll_fprintf;\n                *0x4241e8 = (&stack0xfffff7d3)[iVar5];\n                if (*0x41db5c == 0) {\n                    (*_sym.imp.MSVCRT.dll_printf)(0x41322c, &s);\n                }\n                else {\n                    if (*0x4241e4 == 0) {\n                        (*_sym.imp.MSVCRT.dll_fprintf)\n                                  (*0x41db5c, \"\\n%s------------Start of Session-----------------\\n\", &var_28h);\n                        *0x4241e4 = 1;\n                    }\n                    if (*0x41ebb1 != '\\0') {\n                        (*pcVar2)(*0x41db5c, \"%s: \", &var_28h);\n                    }\n                    (*pcVar2)(*0x41db5c, 0x41322c, &s);\n                }\n            }\n        }\n        else {\n            *0x42434c = 0;\n            *0x41cdd1 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 1084
    },
    "004015ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: s\n\nint32_t fcn.004015ae(void)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t *piVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    uint uVar10;\n    int32_t unaff_EBP;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    char *pcVar11;\n    uint uVar12;\n    char *s;\n    uint in_stack_fffff1a8;\n    uint var_66ch;\n    uint lpReOpenBuff;\n    uint var_134h;\n    uint var_130h;\n    uint var_124h;\n    uint var_98h;\n    uint var_80h;\n    uint var_74h;\n    uint var_68h;\n    uint var_5ch;\n    uint var_50h;\n    uint var_44h;\n    uint var_38h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint ptr;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch_2;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    *(unaff_EBP + -0x10) = &stack0xfffff194;\n    fcn.004011b2();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 6;\n    fcn.004014a2();\n    *0x41cb00 = 0x3b;\n    *0x424578 = 0;\n    *0x42529c = 0;\n    *0x41d734 = 0;\n    *0x424686 = 0;\n    *0x425290 = 0;\n    *0x41e27c = 0;\n    *0x42451d = 0;\n    *0x424684 = '\\0';\n    *0x424688 = 0;\n    *0x424689 = 0;\n    *0x424510 = 0;\n    *0x424350 = 0;\n    *0x41d020 = 0;\n    *0x42529d = 0;\n    *0x424680 = 0;\n    *0x424685 = 0;\n    *0x41d73c = 0;\n    sub.MSVCRT.dll_memset(0x41cc88, 0, 0x40);\n    sub.MSVCRT.dll_memset(0x41f5d0, 0, 0x4140);\n    sub.MSVCRT.dll_strcpy(0x41e288, *0x41caf0);\n    sub.MSVCRT.dll_strcpy(0x41eab0, *0x41caf4);\n    sub.MSVCRT.dll_strcpy(0x41d528, 0x413804);\n    *0x41e27c = 0;\n    *0x41f4c4 = 0;\n    *0x423924 = 0;\n    *0x41e59c = 0;\n    *0x41e280 = 4;\n    *0x41d949 = 0;\n    *0x41d738 = 0;\n    *0x41eaa9 = 0;\n    *0x42404d = 0;\n    *0x41ebb1 = 0;\n    *0x41d521 = 0;\n    *0x41cee0 = 0;\n    *0x42434c = 0;\n    *0x41cdd1 = 0;\n    *0x423710 = '\\0';\n    *0x41ccc9 = 0;\n    *0x41d018 = '\\0';\n    *0x41cee1 = '\\0';\n    *0x41f5cc = 0;\n    *0x41da51 = 0;\n    *0x41e069 = '\\0';\n    *0x41d844 = 0;\n    *0x41ebb2 = 0;\n    *0x41ccc8 = 0;\n    *0x41cedc = 0;\n    *0x41ccca = '\\x01';\n    *0x41eaaa = 1;\n    *0x41db5c = 0;\n    *0x41d740 = '\\0';\n    *0x423d30 = 0;\n    *0x41e070 = 0;\n    *0x41ebb8 = 0;\n    *0x41db60 = 0;\n    *0x41e178 = 0;\n    *0x41cf10 = 0;\n    *0x41ccd0 = 0;\n    *0x41d950 = 0;\n    *0x41da58 = '\\0';\n    *0x424e90 = 0;\n    *0x41d020 = 0;\n    *0x41cdd8 = 0;\n    *0x41d630 = '\\0';\n    *0x41e5a0 = 0;\n    *0x41dc68 = 0;\n    *0x423928 = 0;\n    *0x423e38 = 0;\n    *0x41d848 = '\\0';\n    *0x41e390 = 0;\n    *0x423718 = 0;\n    *0x424050 = 0;\n    *0x41f3c0 = 0;\n    *0x423820 = 0;\n    *0x41e9a8 = 0;\n    *0x41e498 = 0;\n    *0x41d420 = 0;\n    *0x41efc0 = 0;\n    if ((*0x424244 & 1) == 0) {\n        *0x424244 = *0x424244 | 1;\n        *(unaff_EBP + -4) = 8;\n        fcn.0040d476();\n        fcn.00412274(0x412af7);\n    }\n    *0x423d2c = 0x4241f0;\n    s = 0x1;\n    *(unaff_EBP + -4) = 6;\n    pcVar4 = _sym.imp.KERNEL32.dll_GetEnvironmentVariableA;\n    if ((((*(unaff_EBP + 8) < 3) &&\n         (iVar5 = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableA)(\"REQUEST_METHOD\", unaff_EBP + -0x1d, 1),  iVar5 != 0)\n         ) && (iVar5 = (*pcVar4)(\"GATEWAY_INTERFACE\", unaff_EBP + -0x1d, 1),  iVar5 != 0)) &&\n       (iVar5 = fcn.0040c2b0(unaff_EBP + 8, unaff_EBP + 0xc, unaff_EBP + -0x5c, unaff_EBP + -0x74, unaff_EBP + -0x80, \n                             unaff_EBP + -0x68, unaff_EBP + -0x50),  iVar5 != 0)) {\n        *0x423710 = '\\x01';\n        *0x41d73c = 1;\n    }\n    *0x41cee4 = 0;\n    *0x41cedc = 0;\n    *0x424687 = 0;\n    sub.MSVCRT.dll_strcpy(0x42403c, \"plain\");\n    if (*(unaff_EBP + 8) < 2) {\n        fcn.00405090(0);\n        goto code_r0x00401aff;\n    }\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    sub.MSVCRT.dll_memset(0x41f4c8, 0, 0x104);\n    pcVar11 = *(*(unaff_EBP + 0xc) + 4);\n    cVar1 = *pcVar11;\n    if (((cVar1 == '-') || (cVar1 == '/')) && (pcVar11[1] != '\\0')) {\n        uVar12 = 1;\n    }\n    else {\n        uVar12 = 2;\n    }\n    s = fcn.00405212(*(unaff_EBP + 8), *(unaff_EBP + 0xc), uVar12, 1);\n    if (((*0x41e27c == 0) && ((*0x41d73c != 0 || (fcn.00404933(*0x423710),  *0x41e27c == 0)))) && (s == NULL)) {\n        if (*0x41f4c8 == '\\0') {\ncode_r0x00401b5f:\n            pcVar11 = *(*(unaff_EBP + 0xc) + 4);\n            cVar1 = *pcVar11;\n            if ((cVar1 != '-') && (cVar1 != '/')) {\n                (*_sym.imp.MSVCRT.dll_strncpy)(0x41d740, pcVar11, 0x103);\n            }\n            *0x41d843 = 0;\n            *0x41d014 = fcn.0040a14a(0x424578);\n            sub.MSVCRT.dll_strcpy(0x41d950, 0x41cdd8);\n            sub.MSVCRT.dll_strcpy(0x41da58, 0x41cdd8);\n            iVar5 = (*_sym.imp.MSVCRT.dll_time)(0);\n            iVar7 = (*_sym.imp.MSVCRT.dll_clock)();\n            (*_sym.imp.MSVCRT.dll_srand)(iVar5 + iVar7);\n            if (*(unaff_EBP + -0x24) != 0) {\n                piVar3 = *(unaff_EBP + -0x18);\n                unaff_EDI = 0x401be3;\n                s = fcn.00405212();\n                *(unaff_EBP + -0x14) = 0;\n                iVar5 = *piVar3;\n                while (iVar5 != 0) {\n                    (*_sym.imp.MSVCRT.dll_free)();\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                    iVar5 = piVar3[*(unaff_EBP + -0x14)];\n                }\n                (*_sym.imp.MSVCRT.dll_free)();\n                if ((*0x41e27c != 0) || (s != NULL)) goto code_r0x00401ae2;\n            }\n            s = fcn.00405212();\n            if ((*0x41e27c == 0) && (s == NULL)) {\n                s = 0xc;\n                if ((*0x41d014 == 0xc) && ((*0x41da58 == '\\0' || ((*0x41d630 == '\\0' && (*0x41d848 == '\\0')))))) {\n                    fcn.00401292(\"Failed to open registry key for Blat\\n\", in_stack_fffff1a8);\n                }\n                if (*0x424684 == '\\0') {\n                    sub.MSVCRT.dll_strcpy();\n                }\n                if ((*0x41da58 == '\\0') || ((*0x41d630 == '\\0' && (*0x41d848 == '\\0')))) {\n                    fcn.00401292(\"To set the SMTP server\\'s name/address and your username/email address for that\\nserver machine do:\\nblat -install  server_name  your_email_address\\nor use \\'-server <server_name>\\' and \\'-f <your_email_address>\\'\\n\"\n                                 , in_stack_fffff1a8);\n                    pcVar11 = \"aborting, nothing sent\\n\";\n                    fcn.00401292(\"aborting, nothing sent\\n\", in_stack_fffff1a8);\n                    fcn.00401292(0, pcVar11);\n                    goto code_r0x00401ae8;\n                }\n                if ((*0x41d740 == '\\0') || (iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(),  iVar5 == 0)) {\ncode_r0x00401dce:\n                    fcn.0040151a(0x424154);\n                    fcn.0040151a(0x4241d8);\n                    fcn.0040151a(0x424184);\n                    fcn.004069c8(0x424154);\n                    fcn.004069c8(0x4241d8);\n                    fcn.004069c8(0x424184);\n                    fcn.00401156();\n                    fcn.00401156();\n                    fcn.00401156();\n                    fcn.0040109b();\n                    fcn.00401156();\n                    fcn.00401156();\n                    fcn.00401156();\n                    fcn.0040109b();\n                    *(unaff_EBP + -0x18) = 0;\n                    *(unaff_EBP + -0x14) = 0;\n                    iVar5 = fcn.00401156();\n                    if (iVar5 != 0) {\n                        do {\n                            iVar7 = fcn.0040d473();\n                            iVar5 = *(unaff_EBP + -0x14);\n                            if (*(iVar7 + iVar5) == '(') {\n                                while (iVar7 = fcn.0040d473(),  *(iVar7 + iVar5) != ')') {\n                                    iVar5 = iVar5 + 1;\n                                    *(unaff_EBP + -0x14) = iVar5;\n                                }\n                                *(unaff_EBP + -0x14) = iVar5 + 1;\n                            }\n                            iVar5 = fcn.0040d473();\n                            iVar7 = fcn.0040d473();\n                            uVar2 = *(iVar5 + *(unaff_EBP + -0x14));\n                            iVar5 = *(unaff_EBP + -0x18);\n                            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n                            *(iVar7 + iVar5) = uVar2;\n                            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                            uVar6 = fcn.00401156();\n                        } while (*(unaff_EBP + -0x14) < uVar6);\n                    }\n                    iVar5 = fcn.0040d473();\n                    *(iVar5 + *(unaff_EBP + -0x18)) = 0;\n                    iVar5 = fcn.0040d473();\n                    fcn.00401119();\n                    *(unaff_EBP + -0x18) = 0;\n                    *(unaff_EBP + -0x14) = 0;\n                    iVar7 = fcn.00401156();\n                    if (iVar7 != 0) {\n                        do {\n                            iVar8 = fcn.0040d473();\n                            iVar7 = *(unaff_EBP + -0x14);\n                            if (*(iVar8 + iVar7) == '(') {\n                                while (iVar8 = fcn.0040d473(),  *(iVar8 + iVar7) != ')') {\n                                    iVar7 = iVar7 + 1;\n                                    *(unaff_EBP + -0x14) = iVar7;\n                                }\n                                *(unaff_EBP + -0x14) = iVar7 + 1;\n                            }\n                            iVar7 = fcn.0040d473();\n                            iVar8 = fcn.0040d473();\n                            uVar2 = *(iVar7 + *(unaff_EBP + -0x14));\n                            iVar7 = *(unaff_EBP + -0x18);\n                            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n                            *(iVar8 + iVar7) = uVar2;\n                            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                            uVar6 = fcn.00401156();\n                        } while (*(unaff_EBP + -0x14) < uVar6);\n                    }\n                    iVar7 = fcn.0040d473();\n                    *(iVar7 + *(unaff_EBP + -0x18)) = 0;\n                    iVar7 = fcn.00401156();\n                    if (iVar7 != 0) {\n                        iVar5 = fcn.00401156();\n                        if (iVar5 != 0) {\n                            fcn.00401136();\n                        }\n                        iVar5 = fcn.0040d473();\n                        fcn.00401119();\n                    }\n                    *(unaff_EBP + -0x18) = 0;\n                    *(unaff_EBP + -0x14) = 0;\n                    iVar7 = fcn.00401156();\n                    if (iVar7 != 0) {\n                        do {\n                            iVar8 = fcn.0040d473();\n                            iVar7 = *(unaff_EBP + -0x14);\n                            if (*(iVar8 + iVar7) == '(') {\n                                while (iVar8 = fcn.0040d473(),  *(iVar8 + iVar7) != ')') {\n                                    iVar7 = iVar7 + 1;\n                                    *(unaff_EBP + -0x14) = iVar7;\n                                }\n                                *(unaff_EBP + -0x14) = iVar7 + 1;\n                            }\n                            iVar7 = fcn.0040d473();\n                            iVar8 = fcn.0040d473();\n                            uVar2 = *(iVar7 + *(unaff_EBP + -0x14));\n                            iVar7 = *(unaff_EBP + -0x18);\n                            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n                            *(iVar8 + iVar7) = uVar2;\n                            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                            uVar6 = fcn.00401156();\n                        } while (*(unaff_EBP + -0x14) < uVar6);\n                    }\n                    iVar7 = fcn.0040d473();\n                    *(iVar7 + *(unaff_EBP + -0x18)) = 0;\n                    iVar7 = fcn.00401156();\n                    if (iVar7 != 0) {\n                        iVar5 = fcn.00401156();\n                        if (iVar5 != 0) {\n                            fcn.00401136();\n                        }\n                        iVar5 = fcn.0040d473();\n                        fcn.00401119();\n                    }\n                    iVar7 = fcn.00401156();\n                    if ((iVar7 == 0) && (iVar7 = fcn.00401156(),  iVar7 == 0)) {\n                        s = \n                        \"No target email address or newsgroup was specified.  You must give an email\\naddress or usenet newsgroup to send messages to.  Use -to, -cc, or -bcc option\\nfor email, or -groups for usenet.\\nAborting, nobody to send messages to.\\n\"\n                        ;\n                    }\n                    else {\n                        *0x41d018 = '\\0';\n                        if ((*0x41d740 == '\\0') ||\n                           (iVar7 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(0x41d740, 0x413770),  iVar7 == 0)) {\n                            iVar7 = fcn.00401156();\n                            if (iVar7 == 0) {\n                                iVar7 = fcn.00401156();\n                                if (iVar7 == 0) {\n                                    *0x41d018 = '\\x01';\n                                    *(unaff_EBP + -0x18) = 0;\n                                    *(unaff_EBP + -0x14) = 0;\n                                    uVar12 = (*_sym.imp.KERNEL32.dll_GetStdHandle)\n                                                       (0xfffffff6, unaff_EBP + -0x14, 1, unaff_EBP + -0x18, 0);\n                                    pcVar4 = _sym.imp.KERNEL32.dll_ReadFile;\n                                    iVar7 = (*_sym.imp.KERNEL32.dll_ReadFile)(uVar12);\n                                    while (((iVar7 != 0 && (*(unaff_EBP + -0x18) != 0)) &&\n                                           (*(unaff_EBP + -0x14) != 0x1a))) {\n                                        fcn.00401136(*(unaff_EBP + -0x14));\n                                        *(unaff_EBP + -0x18) = 0;\n                                        *(unaff_EBP + -0x14) = 0;\n                                        uVar12 = (*_sym.imp.KERNEL32.dll_GetStdHandle)\n                                                           (0xfffffff6, unaff_EBP + -0x14, 1, unaff_EBP + -0x18, 0);\n                                        iVar7 = (*pcVar4)(uVar12);\n                                    }\n                                }\n                                else {\n                                    pcVar11 = fcn.0040d473();\n                                    *0x41d018 = '\\x01';\n                                    if (*0x41ccca == '\\0') {\n                                        fcn.00401119(pcVar11);\n                                    }\n                                    else {\n                                        *(unaff_EBP + -0x14) = 0;\n                                        cVar1 = *pcVar11;\n                                        while (cVar1 != '\\0') {\n                                            if (pcVar11[*(unaff_EBP + -0x14)] == 0x7c) {\n                                                fcn.00401119(0x413644);\n                                            }\n                                            else {\n                                                fcn.00401136(*(unaff_EBP + -0x14) & 0xffffff00 |\n                                                             pcVar11[*(unaff_EBP + -0x14)]);\n                                            }\n                                            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                                            cVar1 = pcVar11[*(unaff_EBP + -0x14)];\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                *0x41d018 = '\\x01';\n                                fcn.00401145(unaff_EBP + -0x5c);\n                            }\n                            sub.MSVCRT.dll_strcpy(0x41d740, *0x41b084);\n                        }\n                        if (*0x41d018 == '\\0') {\n                            iVar5 = fcn.004011ce();\n                            if (iVar5 == 0) {\n                                pcVar11 = \"error reading %s, aborting\\n\";\n                                fcn.00401292(\"error reading %s, aborting\\n\", 0x41d740);\n                                fcn.00401292(0, pcVar11);\n                                if (*0x41db5c != 0) {\n                                    (*_sym.imp.MSVCRT.dll_fclose)(*0x41db5c);\n                                }\n                                s = 0x3;\n                            }\n                            else {\n                                iVar5 = fcn.0040124c();\n                                if (iVar5 == 0) {\n                                    fcn.004011b8();\n                                    pcVar11 = \"Sorry, I can only mail messages from disk files...\\n\";\n                                    fcn.00401292(\"Sorry, I can only mail messages from disk files...\\n\", 0x41d740);\n                                    fcn.00401292(0, pcVar11);\n                                    if (*0x41db5c != 0) {\n                                        (*_sym.imp.MSVCRT.dll_fclose)(*0x41db5c);\n                                    }\n                                    s = 0x4;\n                                }\n                                else {\n                                    iVar5 = fcn.0040125b();\n                                    fcn.0040106f();\n                                    if (iVar5 == 0) {\n                                        iVar5 = 0x4132a0;\n                                        fcn.0040118b();\n                                        *(unaff_EBP + -0x18) = 1;\n                                    }\n                                    else {\n                                        fcn.0040109b(iVar5 + 1);\n                                        uVar12 = fcn.0040d473(iVar5, unaff_EBP + -0x28, 0);\n                                        uVar12 = fcn.00401266(uVar12);\n                                        *(unaff_EBP + -0x18) = uVar12;\n                                        fcn.00401170();\n                                        puVar9 = fcn.0040115a();\n                                        *puVar9 = 0;\n                                    }\n                                    fcn.004011b8();\n                                    if (*(unaff_EBP + -0x18) != 0) goto code_r0x004022b7;\n                                    fcn.00401292(\"error reading %s, aborting\\n\", 0x41d740);\n                                    s = 0x5;\n                                }\n                            }\n                            goto code_r0x00401afa;\n                        }\ncode_r0x004022b7:\n                        if (*0x41cee1 == '\\0') {\n                            s = 0x7;\n                        }\n                        else {\n                            s = 0x8;\n                        }\n                        fcn.00408953(0x4241cc, 0x41d738, 0x41cee4, s);\n                        uVar12 = fcn.00401156();\n                        iVar7 = fcn.004058ad(unaff_EBP + -0x38, uVar12);\n                        if ((iVar7 == 0) || (*(unaff_EBP + -0x38) != 0)) {\n                            if (*0x41e069 != '\\0') {\n                                *0x41eaaa = 1;\n                            }\n                            uVar10 = fcn.00408063(uVar12, unaff_EBP + -0x68, unaff_EBP + -0x50, unaff_EBP + -0x98, \n                                                  unaff_EBP + -0x66c, iVar7, *(unaff_EBP + -0x38));\n                            *(unaff_EBP + -0x18) = uVar10;\n                            uVar12 = fcn.00406177(uVar12, unaff_EBP + -0x68, unaff_EBP + -0x50, unaff_EBP + -0x98, \n                                                  unaff_EBP + -0x66c, iVar7, *(unaff_EBP + -0x38));\n                            if (*(unaff_EBP + -0x18) == 0) {\n                                *(unaff_EBP + -0x18) = uVar12;\n                            }\n                            fcn.0040583f();\n                            fcn.004014a2();\n                            if (*0x41d73c != 0) {\n                                fcn.00401062();\n                                iVar7 = 0;\n                                *(unaff_EBP + -4) = 10;\n                                if (0 < *(unaff_EBP + 8)) {\n                                    do {\n                                        (*_sym.imp.MSVCRT.dll_free)(*(*(unaff_EBP + 0xc) + iVar7 * 4));\n                                        iVar7 = iVar7 + 1;\n                                    } while (iVar7 < *(unaff_EBP + 8));\n                                }\n                                (*_sym.imp.MSVCRT.dll_free)(*(unaff_EBP + 0xc));\n                                iVar7 = fcn.0040d473();\n                                iVar8 = 0;\n                                if (iVar7 != 0) {\n                                    iVar8 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar7);\n                                }\n                                fcn.0040109b(iVar8 * 4 + 0x400);\n                                if (iVar8 == 0) {\n                                    pcVar11 = \"Success\";\n                                    if (*(unaff_EBP + -0x18) != 0) {\n                                        pcVar11 = \"Failure\";\n                                    }\n                                    uVar12 = fcn.0040d473(\"Expires: Thu, 01 Dec 1994 16:00:00 GMT\\r\\nPragma: no-cache\\r\\nContent-type: text/html\\r\\n\\r\\n<html><body>\\r\\nBlat sending message result = %d : %s\\r\\n</body></html>\\r\\n\"\n                                                          , *(unaff_EBP + -0x18), pcVar11);\n                                    (*_sym.imp.USER32.dll_wsprintfA)(uVar12);\n                                }\n                                else {\n                                    uVar12 = fcn.0040d473(\"Expires: Thu, 01 Dec 1994 16:00:00 GMT\\r\\nPragma: no-cache\\r\\nLocation: %s\\r\\n\\r\\n<html><body>\\r\\n<a href=\\\"%s\\\">Click here to go to %s</a>\\r\\n<META HTTP-EQUIV=\\\"REFRESH\\\" CONTENT=\\\"0; URL=%s\\\">\\r\\n</body></html>\\r\\n\"\n                                                          , iVar7, iVar7, iVar7, iVar7);\n                                    (*_sym.imp.USER32.dll_wsprintfA)(uVar12);\n                                }\n                                fcn.00401160();\n                                uVar12 = fcn.00401156();\n                                *(unaff_EBP + -0x24) = uVar12;\n                                uVar12 = fcn.0040d473(uVar12, unaff_EBP + -0x24, 0);\n                                uVar12 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff5, uVar12);\n                                (*_sym.imp.KERNEL32.dll_WriteFile)(uVar12);\n                                *(unaff_EBP + -4) = 6;\n                                fcn.00401054();\n                            }\n                            fcn.00401292(0, iVar5);\n                            if (*0x41db5c != 0) {\n                                (*_sym.imp.MSVCRT.dll_fclose)(*0x41db5c);\n                            }\n                            *0x41db5c = 0;\n                            s = sub.MSVCRT.dll_abs(*(unaff_EBP + -0x18));\n                            goto code_r0x00401aff;\n                        }\n                        s = \n                        \"Sum total size of all attachments exceeds 4G bytes.  This is too much to be\\nsending with SMTP or NNTP.  Please try sending through FTP instead.\\nAborting, too much data to send.\\n\"\n                        ;\n                    }\n                    fcn.00401292(s, iVar5);\n                    fcn.00401292(0, s);\n                    if (*0x41db5c != 0) {\n                        (*_sym.imp.MSVCRT.dll_fclose)(*0x41db5c);\n                    }\n                    s = 0xc;\n                }\n                else {\n                    sub.MSVCRT.dll_memset();\n                    *(unaff_EBP + -0x134) = 0x9c;\n                    pcVar4 = _sym.imp.KERNEL32.dll_GetVersionExA;\n                    iVar5 = (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n                    if (iVar5 == 0) {\n                        *(unaff_EBP + -0x134) = 0x94;\n                        (*pcVar4)();\n                    }\n                    if ((*(unaff_EBP + -0x124) == 2) && (4 < *(unaff_EBP + -0x130))) {\n                        uVar12 = 0;\n                        iVar5 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x41d740, 1, 1);\n                        if (iVar5 != -1) {\n                            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar5);\n                            goto code_r0x00401dce;\n                        }\n                        iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        if (iVar5 == 0) {\n                            fcn.00401292(\"%s does not exist\\n\", 0x41d740);\n                        }\n                        else {\n                            fcn.00401292(\"unknown error code %d when trying to open %s\\n\", iVar5);\n                        }\n                        fcn.00401292(0, uVar12);\n                    }\n                    else {\n                        iVar5 = (*_sym.imp.KERNEL32.dll_OpenFile)();\n                        if (iVar5 != -1) {\n                            (*_sym.imp.KERNEL32.dll__lclose)(iVar5);\n                            goto code_r0x00401dce;\n                        }\n                        pcVar11 = \"%s does not exist\\n\";\n                        fcn.00401292(\"%s does not exist\\n\", 0x41d740);\n                        fcn.00401292(0, pcVar11);\n                    }\ncode_r0x004019f7:\n                    if (*0x41db5c != 0) {\n                        (*_sym.imp.MSVCRT.dll_fclose)(*0x41db5c);\n                    }\n                    s = 0x2;\n                }\n            }\n            else {\n                fcn.00401292(0, in_stack_fffff1a8);\n                if (*0x41db5c != 0) {\n                    (*_sym.imp.MSVCRT.dll_fclose)();\n                }\n            }\n        }\n        else {\n            iVar5 = (*_sym.imp.MSVCRT.dll_malloc)(0x404);\n            *(unaff_EBP + -0x18) = iVar5;\n            if (iVar5 == 0) goto code_r0x00401b5f;\n            *(unaff_EBP + -0x28) = 0;\n            sub.MSVCRT.dll_memset(iVar5, 0, 0x404);\n            *0x41dc64 = (*_sym.imp.MSVCRT.dll_fopen)(0x41f4c8, 0x4137d4);\n            if (*0x41dc64 == 0) {\n                (*_sym.imp.MSVCRT.dll_free)(*(unaff_EBP + -0x18));\n                pcVar11 = \"Options file \\\"%s\\\" not found or could not be opened.\\n\";\n                fcn.00401292(\"Options file \\\"%s\\\" not found or could not be opened.\\n\", 0x41f4c8);\n                fcn.00401292(0, pcVar11);\n                goto code_r0x004019f7;\n            }\n            uVar6 = *(unaff_EBP + -0x28);\n            do {\n                if ((*(*0x41dc64 + 0xc) & 0x10) != 0) break;\n                iVar5 = (*_sym.imp.MSVCRT.dll_fgets)(unaff_EBP + -0xe6c, 0x800, *0x41dc64);\n                if (iVar5 != 0) {\n                    while( true ) {\n                        iVar5 = sub.MSVCRT.dll_strlen(unaff_EBP + -0xe6c);\n                        *(unaff_EBP + -0x14) = iVar5 + -1;\n                        pcVar11 = unaff_EBP + -0xe6c + iVar5 + -1;\n                        cVar1 = *pcVar11;\n                        if ((cVar1 != '\\n') && (cVar1 != '\\r')) break;\n                        *pcVar11 = '\\0';\n                    }\n                    uVar6 = fcn.0040a3e0(unaff_EBP + -0xe6c, *(unaff_EBP + -0x18), 0x100, uVar6, 0);\n                    *(unaff_EBP + -0x28) = uVar6;\n                }\n            } while (uVar6 < 0x100);\n            (*_sym.imp.MSVCRT.dll_fclose)(*0x41dc64);\n            *(unaff_EBP + -0x24) = uVar6;\n            if (uVar6 == 0) goto code_r0x00401b5f;\n            piVar3 = *(unaff_EBP + -0x18);\n            s = fcn.00405212(*(unaff_EBP + -0x28), piVar3, 0, 1);\n            if ((*0x41e27c == 0) && (s == NULL)) goto code_r0x00401b5f;\n            *(unaff_EBP + -0x14) = 0;\n            iVar5 = *piVar3;\n            while (iVar5 != 0) {\n                (*_sym.imp.MSVCRT.dll_free)(iVar5);\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                iVar5 = piVar3[*(unaff_EBP + -0x14)];\n            }\n            (*_sym.imp.MSVCRT.dll_free)(piVar3);\n            if (s != NULL) goto code_r0x00401ae2;\n        }\n    }\n    else {\ncode_r0x00401ae2:\n        fcn.00401292(0, unaff_EDI);\ncode_r0x00401ae8:\n        if (*0x41db5c != 0) {\n            (*_sym.imp.MSVCRT.dll_fclose)();\n        }\n    }\ncode_r0x00401afa:\n    fcn.004014a2();\ncode_r0x00401aff:\n    *(unaff_EBP + -4) = 5;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 4;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 3;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 2;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 1;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\n    fcn.004015a9();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return s;\n}\n",
        "token_count": 8398
    },
    "00403f9f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f9f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_EDI;\n    \n    arg_ch_00 = 0;\n    if (arg_14h == 0) {\n        return 0;\n    }\n    iVar2 = arg_10h + 1;\n    iVar1 = *(arg_ch + iVar2 * 4);\n    if (iVar1 != 0) {\n        iVar1 = sub.MSVCRT.dll_strcmp(iVar1, \"-delete\");\n        if (iVar1 == 0) {\n            if ((arg_8h != 0) && (arg_8h = arg_8h + -1,  arg_8h != 0)) {\n                puVar3 = arg_ch + (arg_10h + 2) * 4;\n                do {\n                    iVar1 = sub.MSVCRT.dll_strcmp(*puVar3, \"-hkcu\");\n                    if (iVar1 == 0) {\n                        arg_ch_00 = 1;\n                    }\n                    else {\n                        fcn.00409a85(*puVar3, arg_ch_00);\n                    }\n                    puVar3 = puVar3 + 1;\n                    arg_8h = arg_8h + -1;\n                } while (arg_8h != 0);\n            }\n            goto code_r0x00404072;\n        }\n        iVar1 = sub.MSVCRT.dll_strcmp(*(arg_ch + iVar2 * 4), 0x4140ac);\n        if (iVar1 == 0) {\n            if (arg_8h != 0) {\n                arg_8h = arg_8h + -1;\n            }\n            iVar2 = arg_10h + 2;\n            fcn.004098f7();\n        }\n        if (arg_8h != 0) {\n            puVar3 = arg_ch + iVar2 * 4;\n            do {\n                iVar1 = sub.MSVCRT.dll_strcmp(*puVar3, \"-hkcu\");\n                if (iVar1 != 0) {\n                    fcn.0040a371(*puVar3);\n                }\n                puVar3 = puVar3 + 1;\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n            goto code_r0x00404072;\n        }\n    }\n    fcn.0040a371(\"<all>\");\ncode_r0x00404072:\n    fcn.00401292(0, unaff_EDI);\n    if (*0x41db5c != 0) {\n        (*_sym.imp.MSVCRT.dll_fclose)(*0x41db5c);\n    }\n    *0x41e27c = 1;\n    return 0;\n}\n",
        "token_count": 650
    },
    "00404453": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00404453(uint src, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    char *pcVar4;\n    int32_t unaff_EBP;\n    uint unaff_EDI;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    fcn.0040f9d4(*(*(unaff_EBP + 8) + 4 + *(unaff_EBP + 0xc) * 4), unaff_EBP + -0x18, 1);\n    pcVar4 = fcn.0040d473();\n    *(unaff_EBP + 8) = pcVar4;\n    if (pcVar4 != NULL) {\n        if (*pcVar4 != '\\0') {\n            while (*0x41cedc != 0x40) {\n                iVar5 = 0;\n                if (0 < *0x41cedc) {\n                    do {\n                        if (*(unaff_EBP + 0x10) < *(iVar5 + 0x41cc88)) break;\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < *0x41cedc);\n                }\n                if (iVar5 == *0x41cedc) {\n                    *(*0x41cedc + 0x41cc88) = *(unaff_EBP + 0x10);\n                    iVar5 = *0x41cedc * 0x105;\n                    *0x41cedc = *0x41cedc + 1;\n                    sub.MSVCRT.dll_strcpy(iVar5 + 0x41f5d0, pcVar4);\n                }\n                else {\n                    sub.MSVCRT.dll_memcpy(iVar5 + 0x41cc89, iVar5 + 0x41cc88, 0x3f - iVar5);\n                    iVar1 = iVar5 * 0x105 + 0x41f5d0;\n                    sub.MSVCRT.dll_memcpy(iVar5 * 0x105 + 0x41f6d5, iVar1, (0x3f - iVar5) * 0x105);\n                    uVar3 = *(unaff_EBP + 8);\n                    *(iVar5 + 0x41cc88) = *(unaff_EBP + 0x10);\n                    sub.MSVCRT.dll_strcpy(iVar1, uVar3);\n                    pcVar4 = *(unaff_EBP + 8);\n                    *0x41cedc = *0x41cedc + 1;\n                }\n                iVar5 = sub.MSVCRT.dll_strlen(pcVar4);\n                *0x41e069 = 0;\n                cVar2 = pcVar4[iVar5 + 1];\n                *(unaff_EBP + 8) = pcVar4 + iVar5 + 1;\n                if (cVar2 == '\\0') goto code_r0x0040457c;\n                pcVar4 = *(unaff_EBP + 8);\n            }\n            fcn.00401292(\"Max of 64 files allowed!  Others are being ignored.\\n\", unaff_EDI);\n        }\ncode_r0x0040457c:\n        fcn.0040107e();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return 1;\n}\n",
        "token_count": 845
    },
    "00404933": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404933(int32_t arg_8h)\n\n{\n    uint s;\n    \n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, *0x41b27c, 0x41b050, \" w/GSS encryption\", \"Feb 25 2007\", \"12:06:19\");\n    if (*0x424360 == 0) {\n        if (arg_8h == 0) {\n            (*_sym.imp.MSVCRT.dll_printf)(0x416760, &s);\n        }\n        if (*0x41db5c != 0) {\n            fcn.00401292(0x41322c, &s);\n        }\n    }\n    *0x424360 = 1;\n    return;\n}\n",
        "token_count": 171
    },
    "00405090": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405090(int32_t arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    char **ppcVar4;\n    int32_t *piVar5;\n    char **ppcVar6;\n    uint var_400h;\n    \n    fcn.00404933(0);\n    if (arg_8h == 0) {\n        ppcVar4 = 0x41b294;\n        do {\n            pcVar2 = ppcVar4[-5];\n            if (((pcVar2 == NULL) && (ppcVar4[-3] == NULL)) &&\n               ((ppcVar4[-2] == NULL && ((ppcVar4[-1] == NULL && (*ppcVar4 == NULL)))))) {\n                return 1;\n            }\n            if (*ppcVar4 != NULL) {\n                if (pcVar2 == NULL) {\n                    pcVar2 = 0x41632f;\n                }\n                (*_sym.imp.MSVCRT.dll_sprintf)(&var_400h, \"%s%s\\n\", pcVar2, *ppcVar4);\n                fcn.00404f35(&var_400h);\n            }\n            ppcVar4 = ppcVar4 + 6;\n            pcVar2 = *ppcVar4;\n        } while (((pcVar2 == NULL) || (*pcVar2 != '-')) || (pcVar2[1] != '-'));\n    }\n    else if (arg_8h == 1) {\n        for (piVar5 = 0x41b280;\n            (((iVar3 = *piVar5,  iVar3 != 0 || (piVar5[2] != 0)) || (piVar5[3] != 0)) ||\n            ((piVar5[4] != 0 || (piVar5[5] != 0)))); piVar5 = piVar5 + 6) {\n            if (piVar5[5] != 0) {\n                if (iVar3 == 0) {\n                    iVar3 = 0x41632f;\n                }\n                (*_sym.imp.MSVCRT.dll_sprintf)(&var_400h, \"%s%s\\n\", iVar3, piVar5[5]);\n                fcn.00404f35(&var_400h);\n            }\n        }\n    }\n    else {\n        (*_sym.imp.MSVCRT.dll_printf)(\"Blat found fault with: %s\\n\\n\", *(arg_8h * 0x18 + 0x41b268));\n        for (piVar5 = arg_8h * 0x18 + 0x41b27c; *piVar5 == 0; piVar5 = piVar5 + 6) {\n            arg_8h = arg_8h + 1;\n        }\n        ppcVar4 = arg_8h * 0x18 + 0x41b27c;\n        if (*ppcVar4 != NULL) {\n            ppcVar6 = arg_8h * 0x18 + 0x41b280;\n            do {\n                cVar1 = **ppcVar4;\n                if (cVar1 == '\\0') {\n                    return 1;\n                }\n                if (cVar1 == '-') {\n                    return 1;\n                }\n                pcVar2 = ppcVar6[-6];\n                if (pcVar2 == NULL) {\n                    pcVar2 = 0x41632f;\n                }\n                (*_sym.imp.MSVCRT.dll_sprintf)(&var_400h, \"%s%s\\n\", pcVar2, *ppcVar4);\n                fcn.00404f35(&var_400h);\n                if ((*ppcVar6 != NULL) && (**ppcVar6 == '-')) {\n                    return 1;\n                }\n                ppcVar4 = ppcVar6 + 5;\n                ppcVar6 = ppcVar6 + 6;\n            } while (*ppcVar4 != NULL);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 890
    },
    "00405212": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall\nfcn.00405212(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5, uint param_6, \n            int32_t param_7)\n\n{\n    uint *puVar1;\n    char *pcVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    char **ppcVar9;\n    uint uVar10;\n    \n    iVar7 = 0;\n    if (0 < param_2) {\n        do {\n            pcVar2 = *(param_3 + iVar7 * 4);\n            if (*pcVar2 == '/') {\n                *pcVar2 = '-';\n            }\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < param_2);\n    }\n    if ((*0x41f4c4 != 0) && (*0x41b268 != 0)) {\n        piVar3 = 0x41b268;\n        piVar8 = 0x41b278;\n        do {\n            iVar7 = *piVar8;\n            if ((((iVar7 == 0x4041b9) || (iVar7 == 0x4041c9)) || (iVar7 == 0x4041dd)) || (iVar7 == 0x4041f9)) {\n                *piVar3 = 0x41632f;\n            }\n            piVar3 = piVar8 + 2;\n            piVar8 = piVar8 + 6;\n        } while (*piVar3 != 0);\n    }\n    fcn.0040107e();\n    iVar7 = param_4;\n    if (param_4 < param_2) {\ncode_r0x0040529c:\n        pcVar2 = *(param_3 + iVar7 * 4);\n        if (*pcVar2 != '\\0') {\n            if (*0x42434c != '\\0') {\n                (*_sym.imp.MSVCRT.dll_printf)(\"Checking option %s\\n\", pcVar2);\n            }\n            param_2 = 0;\n            piVar3 = 0x41b274;\n            do {\n                if (piVar3[-3] == 0) {\n                    if (((piVar3[-1] == 0) && (*piVar3 == 0)) && ((piVar3[1] == 0 && (piVar3[2] == 0))))\n                    goto code_r0x00405497;\n                }\n                else {\n                    iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(piVar3[-3], *(param_5 + iVar7 * 4));\n                    if (iVar4 == 0) goto code_r0x0040530a;\n                }\n                param_2 = param_2 + 1;\n                piVar3 = piVar3 + 6;\n            } while( true );\n        }\n        goto code_r0x004054b1;\n    }\ncode_r0x004054bc:\n    if ((*0x41db5c == 0) && (*0x41cdd1 != '\\0')) {\n        *0x423710 = 0;\n    }\n    iVar7 = 0;\ncode_r0x004054d6:\n    fcn.0040107e();\n    return iVar7;\ncode_r0x0040530a:\n    iVar5 = (*_sym.imp.MSVCRT.dll__strnicmp)(*(param_5 + iVar7 * 4), \"-install\", 8);\n    iVar4 = param_4;\n    if ((iVar5 != 0) && (iVar4 = iVar7 + 1,  iVar4 < param_4)) {\n        ppcVar9 = param_5 + iVar4 * 4;\n        do {\n            if (((iVar4 != iVar7 + 1) || (iVar5 = sub.MSVCRT.dll_strcmp(*(param_5 + iVar7 * 4), 0x4169a8),  iVar5 != 0))\n               || (iVar5 = sub.MSVCRT.dll_strcmp(*ppcVar9, \"-delete\"),  iVar5 != 0)) {\n                if ((**ppcVar9 == '-') && ((*ppcVar9)[1] != '\\0')) {\n                    piVar3 = 0x41b274;\n                    do {\n                        if (piVar3[-3] == 0) {\n                            if ((((piVar3[-1] == 0) && (*piVar3 == 0)) && (piVar3[1] == 0)) && (piVar3[2] == 0)) break;\n                        }\n                        else {\n                            iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(piVar3[-3], *ppcVar9);\n                            if (iVar5 == 0) goto code_r0x0040532d;\n                        }\n                        piVar3 = piVar3 + 6;\n                    } while( true );\n                }\n                if (**ppcVar9 == '\\0') break;\n            }\n            ppcVar9 = ppcVar9 + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < param_4);\n    }\ncode_r0x0040532d:\n    iVar5 = (iVar4 - iVar7) + -1;\n    iVar6 = param_2 * 0x18;\n    if (*(iVar6 + 0x41b274) == iVar5 || *(iVar6 + 0x41b274) < iVar5) {\n        if (*(iVar6 + 0x41b270) == param_7) {\n            iVar4 = (**(iVar6 + 0x41b278))(iVar5, param_5, iVar7, param_6);\n            if ((*0x41e27c != 0) || (iVar4 < 0)) {\n                fcn.0040107e();\n                return -iVar4;\n            }\n            fcn.00401119(\"    \");\n            uVar10 = *(param_5 + iVar7 * 4);\n            fcn.00401119(uVar10);\n            for (; **(param_5 + iVar7 * 4) = 0,  iVar4 != 0; iVar4 = iVar4 + -1) {\n                fcn.00401136(0x20);\n                iVar7 = iVar7 + 1;\n                uVar10 = *(param_5 + iVar7 * 4);\n                fcn.00401119();\n            }\n            fcn.00401119(0x413644, uVar10);\n        }\n        else {\n            iVar7 = iVar4 + -1;\n        }\n    }\n    else if (param_7 == 0) {\n        fcn.00401119(\"    \");\n        puVar1 = param_5 + iVar7 * 4;\n        fcn.00401119(*puVar1);\n        fcn.0040d473();\n        fcn.00401292(\"Blat saw and processed these options, and %s the last one...\\n%s\\n\\n\", \"found fault with\");\n        fcn.00401292(\"Not enough arguments supplied for option: %s\\n\", *puVar1);\n        iVar7 = fcn.00405090(param_1);\n        while (iVar7 == 0) {\n            param_1 = param_1 + 1;\n            iVar7 = fcn.00405090(param_1);\n        }\ncode_r0x0040554a:\n        iVar7 = 1;\n        goto code_r0x004054d6;\n    }\ncode_r0x00405497:\n    if ((*(param_2 * 0x18 + 0x41b268) == 0) && (param_7 == 0)) {\n        fcn.00401119(\"    \");\n        puVar1 = param_4 + iVar7 * 4;\n        fcn.00401119(*puVar1);\n        fcn.0040d473();\n        fcn.00401292(\"Blat saw and processed these options, and %s the last one...\\n%s\\n\\n\", \"was confused by\");\n        fcn.00401292(\"Do not understand argument: %s\\n\", *puVar1);\n        fcn.00405090(0);\n        goto code_r0x0040554a;\n    }\ncode_r0x004054b1:\n    iVar7 = iVar7 + 1;\n    if (param_2 <= iVar7) goto code_r0x004054bc;\n    goto code_r0x0040529c;\n}\n",
        "token_count": 1892
    },
    "0040580a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040580a(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x4243c8;\n    if (arg_8h != 0) {\n        do {\n            piVar1 = *piVar2;\n            if (piVar1 == NULL) break;\n            arg_8h = arg_8h + -1;\n            piVar2 = piVar1;\n        } while (arg_8h != 0);\n    }\n    *arg_ch = piVar2[1];\n    *arg_10h = piVar2[3];\n    *arg_14h = piVar2[2];\n    return;\n}\n",
        "token_count": 191
    },
    "00405a96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_448h\n\nint32_t __cdecl\nfcn.00405a96(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint32_t *puVar3;\n    code *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t unaff_EBP;\n    uint32_t uVar9;\n    uint *in_FS_OFFSET;\n    int32_t in_stack_fffffb9c;\n    char *pcVar10;\n    uint var_448h;\n    uint var_248h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401062();\n    fcn.004011b2();\n    *(unaff_EBP + -4) = 2;\n    fcn.0040580a(*(unaff_EBP + 0x24), unaff_EBP + -0x28, unaff_EBP + -0x44, unaff_EBP + -0x14);\n    uVar7 = *(unaff_EBP + -0x28);\n    uVar5 = fcn.004110c7(uVar7);\n    *(unaff_EBP + -0x24) = uVar5;\n    if (*(unaff_EBP + 0x14) == 0) {\n        iVar6 = fcn.0040115a();\n        if (*(iVar6 + -1) == '\\n') {\n            if (*(iVar6 + -3) != '\\n') goto code_r0x00405b22;\n        }\n        else {\n            fcn.00401119(0x413644);\ncode_r0x00405b22:\n            fcn.0040118b(0x413644);\n        }\n        iVar6 = *(unaff_EBP + -0x14);\n        if (iVar6 == 1) {\n            pcVar10 = \"Embedded binary file: %s\\n\";\n        }\n        else if (iVar6 == 2) {\n            pcVar10 = \"Attached binary file: %s\\n\";\n        }\n        else {\n            pcVar10 = \"Attached text file: %s\\n\";\n        }\n        fcn.00401292(pcVar10, uVar7);\n        piVar2 = *(unaff_EBP + 0x28);\n        if ((*0x41d844 == '\\0') && ((*(unaff_EBP + 0xc) != 0 || (*0x41e069 != '\\0')))) {\n            fcn.00401062();\n            *(unaff_EBP + -4) = 3;\n            fcn.0040a69a(*(unaff_EBP + -0x24), unaff_EBP + -0x40, 0x16, 1);\n            pcVar4 = _sym.imp.MSVCRT.dll_sprintf;\n            if (iVar6 == 1) {\n                fcn.00411102(unaff_EBP + -0x448, 0, 0, *(unaff_EBP + -0x24));\n                uVar7 = fcn.0040d473();\n                (*_sym.imp.MSVCRT.dll_sprintf)(unaff_EBP + -0x248, \"Content-ID: <%s>\\r\\n\", uVar7);\n                sub.MSVCRT.dll_strcat(unaff_EBP + -0x248, \"Content-Disposition: INLINE\\r\\n\");\n                sub.MSVCRT.dll_strcat(unaff_EBP + -0x248, \"Content-Transfer-Encoding: BASE64\\r\\n\");\n            }\n            else if (iVar6 == 2) {\n                fcn.00411102(unaff_EBP + -0x448, 0, 0, *(unaff_EBP + -0x24));\n                uVar7 = fcn.0040d473();\n                (*_sym.imp.MSVCRT.dll_sprintf)\n                          (unaff_EBP + -0x248, \"Content-Disposition: ATTACHMENT;\\r\\n filename=\\\"%s\\\"\\r\\n\", uVar7);\n                sub.MSVCRT.dll_strcat(unaff_EBP + -0x248, \"Content-Transfer-Encoding: BASE64\\r\\n\");\n            }\n            else {\n                pcVar10 = 0x41cee4;\n                if (iVar6 == 3) {\n                    if (*0x41cee4 == '\\0') {\n                        pcVar10 = \"US-ASCII\";\n                    }\n                    (*_sym.imp.MSVCRT.dll_sprintf)\n                              (unaff_EBP + -0x448, \"Content-Type: text/%s; charset=%s\\r\\n\", 0x42403c, pcVar10);\n                    uVar7 = fcn.0040d473();\n                    uVar7 = fcn.0040d473(uVar7);\n                    (*pcVar4)(unaff_EBP + -0x248, \n                              \"Content-Disposition: ATTACHMENT;\\r\\n filename=\\\"%s\\\"\\r\\nContent-Description: \\\"%s\\\"\\r\\n\"\n                              , uVar7);\n                }\n                else {\n                    if (*0x41cee4 == '\\0') {\n                        pcVar10 = \"US-ASCII\";\n                    }\n                    (*_sym.imp.MSVCRT.dll_sprintf)\n                              (unaff_EBP + -0x448, \"Content-Type: text/%s; charset=%s\\r\\n\", 0x42403c, pcVar10);\n                    in_stack_fffffb9c = unaff_EBP + -0x448;\n                    sub.MSVCRT.dll_strcat(in_stack_fffffb9c, \"Content-Disposition: INLINE\\r\\n\");\n                    uVar7 = fcn.0040d473();\n                    (*pcVar4)(unaff_EBP + -0x248, \"Content-Description: \\\"%s\\\"\\r\\n\", uVar7);\n                }\n            }\n            if ((*piVar2 == 1) && (*(unaff_EBP + -0x14) != 1)) {\n                fcn.00401119(\"--=_BlatBoundary-\");\n                fcn.004010e1(*(unaff_EBP + 0x10), 0x15);\n                fcn.00401119();\n                fcn.0040a673(*(unaff_EBP + 0x10));\n            }\n            fcn.00401119(\"--=_BlatBoundary-\");\n            fcn.00401119(*(unaff_EBP + 0x10));\n            fcn.00401119(unaff_EBP + -0x448);\n            fcn.00401119(unaff_EBP + -0x248);\n            *0x42529c = '\\x01';\n            *(unaff_EBP + -4) = 2;\n            fcn.00401054();\n            iVar6 = *(unaff_EBP + -0x14);\n        }\n        else if ((*0x42529d != '\\0') && (*0x42529c == '\\0')) {\n            fcn.00401119(\"--=_BlatBoundary-\");\n            fcn.00401119(*(unaff_EBP + 0x10));\n            *0x42529c = '\\x01';\n        }\n        *piVar2 = iVar6;\n        if (((*0x41eaaa != '\\0') && (uVar8 = fcn.00401156(),  2 < uVar8)) &&\n           (iVar6 = fcn.0040115a(),  *(iVar6 + -3) != '\\n')) {\n            fcn.00401119(0x413644);\n        }\n        fcn.00401145(unaff_EBP + -0x20);\n        uVar7 = *(unaff_EBP + -0x28);\n    }\n    iVar6 = fcn.004011ce(uVar7);\n    if (iVar6 == 0) {\n        fcn.00401292(\"error reading %s, aborting\\n\", uVar7);\n    }\n    else {\n        if ((*(unaff_EBP + 0x14) == 0) || (iVar6 = fcn.00405877(*(unaff_EBP + 0x14), 0, 0),  iVar6 != 0)) {\n            puVar3 = *(unaff_EBP + 0x18);\n            uVar9 = *(unaff_EBP + -0x44) - *(unaff_EBP + 0x14);\n            uVar8 = *puVar3;\n            if (uVar8 < uVar9) {\n                uVar9 = uVar8;\n            }\n            fcn.0040109b(uVar9 + 1);\n            fcn.00401170(uVar9);\n            uVar7 = fcn.0040d473(uVar9, unaff_EBP + -0x48, 0);\n            iVar6 = fcn.00401266(uVar7);\n            if (iVar6 != 0) {\n                fcn.004011b8();\n                if ((*(unaff_EBP + -0x14) == 2) || (*(unaff_EBP + -0x14) == 1)) {\n                    if ((*0x41d844 == '\\0') && ((*(unaff_EBP + 0xc) != 0 || (*0x41e069 != '\\0')))) {\n                        fcn.00410e90(unaff_EBP + -0x34, *(unaff_EBP + 8), 1, 1);\n                    }\n                    else {\n                        fcn.0040f7b7(unaff_EBP + -0x34, *(unaff_EBP + 8), *(unaff_EBP + -0x24), *(unaff_EBP + 0x1c), \n                                     *(unaff_EBP + 0x20));\n                    }\n                }\n                else {\n                    for (pcVar10 = fcn.0040d473(); (uVar9 != 0 && (cVar1 = *pcVar10,  cVar1 != '\\x1a'));\n                        pcVar10 = pcVar10 + 1) {\n                        if (cVar1 != '\\0') {\n                            fcn.00401136(cVar1);\n                        }\n                        uVar9 = uVar9 - 1;\n                    }\n                    iVar6 = fcn.0040d473();\n                    *puVar3 = pcVar10 - iVar6;\n                }\n                in_stack_fffffb9c = 0;\n                goto code_r0x00405f16;\n            }\n            uVar7 = *(unaff_EBP + -0x28);\n        }\n        fcn.00401292(\"error reading %s, aborting\\n\", uVar7);\n        fcn.004011b8();\n        in_stack_fffffb9c = 5;\n    }\ncode_r0x00405f16:\n    fcn.004015a9();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return in_stack_fffffb9c;\n}\n",
        "token_count": 2576
    },
    "00405f8b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405f8b(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_800h;\n    \n    pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n    if (arg_8h == 0) {\n        fcn.0040e96e(\"The NNTP server requires authentication,\\n and you did not provide a userid.\");\n        return 0xfffffffe;\n    }\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_800h, \"AUTHINFO USER %s\\r\\n\", arg_8h);\n    iVar2 = fcn.0040dd54(*0x425298, &var_800h);\n    if (iVar2 != 0) {\n        return 0xffffffff;\n    }\n    iVar2 = fcn.0040df94(0, &arg_8h);\n    if (iVar2 == 0x119) {\ncode_r0x0040604e:\n        uVar3 = 0;\n    }\n    else {\n        if (iVar2 == 0x17d) {\n            (*pcVar1)(&var_800h, \"AUTHINFO PASS %s\\r\\n\", arg_ch);\n            iVar2 = fcn.0040dd54(*0x425298, &var_800h);\n            if (iVar2 != 0) {\n                return 0xffffffff;\n            }\n            iVar2 = fcn.0040df94(0, &arg_8h);\n            if (iVar2 == 0x119) goto code_r0x0040604e;\n        }\n        fcn.0040e96e(\"The NNTP server did not accept Auth userid/pwd value.\");\n        uVar3 = 0xfffffffe;\n    }\n    return uVar3;\n}\n",
        "token_count": 407
    },
    "00406054": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406054(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char *unaff_ESI;\n    char *pcVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.0040dc51(0x41d848, 0x41e288, *0x41caf0, \"nntp\");\n    if (iVar1 != 0) {\n        return -1;\n    }\n    iVar1 = fcn.0040df94(0, &var_4h);\n    if (iVar1 == 0xc9) {\n        fcn.0040e96e(\"NNTP server does not allow posting\");\n        iVar1 = -1;\n    }\n    else {\n        if (iVar1 == 0x1e0) goto code_r0x004060f6;\n        if (iVar1 == 200) {\n            if (*unaff_ESI != '\\0') goto code_r0x004060f6;\n            do {\n                iVar1 = fcn.0040dd54(*0x425298, \"MODE READER\\r\\n\");\n                if (iVar1 != 0) goto code_r0x004060c1;\n                iVar1 = fcn.0040df94(0, &var_4h);\n                if (iVar1 == 0xc9) {\n                    pcVar2 = \"NNTP server does not allow posting\";\n                    goto code_r0x004060bb;\n                }\n                if (iVar1 != 0x1e0) {\n                    if (iVar1 == 200) {\n                        return 0;\n                    }\n                    goto code_r0x004060b6;\n                }\ncode_r0x004060f6:\n                iVar1 = fcn.00405f8b(unaff_ESI, arg_8h);\n            } while (iVar1 == 0);\n        }\n        else {\ncode_r0x004060b6:\n            pcVar2 = \"NNTP server error\";\ncode_r0x004060bb:\n            fcn.0040e96e(pcVar2);\ncode_r0x004060c1:\n            iVar1 = -1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 479
    },
    "00406177": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_a8h\n\nint32_t __cdecl\nfcn.00406177(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint32_t arg;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    uint unaff_EDI;\n    int32_t arg_00;\n    uint *in_FS_OFFSET;\n    bool bVar7;\n    uint uVar8;\n    uint var_ach;\n    uint var_a8h;\n    uint var_9ch;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_38h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    bVar7 = *0x41d848 == '\\0';\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x14) = 0;\n    if ((bVar7) || (iVar2 = fcn.00401156(),  uVar1 = *0x41f5cc,  iVar2 == 0)) {\n        iVar6 = 0;\n        uVar1 = *0x41f5cc;\n        goto code_r0x00406653;\n    }\n    bVar7 = *0x424e90 == '\\0';\n    iVar2 = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0x90) = unaff_EBP + -0x34;\n    *(unaff_EBP + -0x8c) = unaff_EBP + -0x9c;\n    *(unaff_EBP + -0x88) = unaff_EBP + -0xa8;\n    *(unaff_EBP + -0x84) = unaff_EBP + -0x44;\n    *(unaff_EBP + -0x7c) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x78) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x74) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x70) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x80) = 0;\n    *(unaff_EBP + -0x6c) = 0x41d020;\n    *(unaff_EBP + -0x68) = 0x41d848;\n    *(unaff_EBP + -0x58) = iVar2;\n    *(unaff_EBP + -0x4c) = 0;\n    *0x41f5cc = 1;\n    *0x41cee1 = 0;\n    *0x41d949 = 2;\n    if (bVar7) {\n        fcn.0040dc51(0x41d848, 0x41e288, *0x41caf0, \"nntp\");\n        fcn.0040dd08();\n    }\n    if (*0x424350 == 0) {\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\n    else {\n        *(unaff_EBP + -0x1c) = *0x424350;\n    }\n    fcn.0040584b(0, unaff_EBP + -0x1c);\n    uVar4 = *(unaff_EBP + 0x20);\n    if ((*0x42434d != '\\0') && (*(unaff_EBP + -0x1c) <= uVar4 && uVar4 != *(unaff_EBP + -0x1c))) {\n        fcn.00401292(\"Message is too big to send.  Please try a smaller message.\\n\", unaff_EDI);\n        fcn.0040e934();\n        fcn.0040dd08();\n        iVar6 = 0xe;\n        uVar1 = *0x41f5cc;\n        goto code_r0x00406653;\n    }\n    arg = uVar4 / *(unaff_EBP + -0x1c);\n    if (uVar4 % *(unaff_EBP + -0x1c) != 0) {\n        arg = arg + 1;\n    }\n    if (arg < 2) {\n        if ((1 < iVar2) || ((*0x41da51 != '\\0' && (iVar2 != 0)))) goto code_r0x00406436;\n        *0x42529c = 0;\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -0x60) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x50) = 0;\n        *(unaff_EBP + -0x54) = 0;\n        fcn.0040a9d8(unaff_EBP + -0x90);\n        iVar6 = fcn.0040ea4e(unaff_EBP + -0x34, *(unaff_EBP + 8), unaff_EBP + -0x44, 0, *(unaff_EBP + 0x14), 0, 0, 0);\n        if (iVar6 != 0) goto code_r0x00406653;\n        iVar6 = fcn.00405f47(unaff_EBP + -0x34, 0, *(unaff_EBP + 0x14), iVar2);\n        *(unaff_EBP + -0x14) = iVar6;\n        fcn.0040e9f7(unaff_EBP + -0x34, 0, *(unaff_EBP + 0x14));\n        if (iVar6 != 0) goto code_r0x00406653;\n        *0x41f5cc = uVar1;\n        uVar3 = fcn.0040deb4();\n        *(unaff_EBP + -0x18) = uVar3;\n        *(unaff_EBP + -0x10) = 1;\n        while ((iVar2 = *(unaff_EBP + -0x18),  *(unaff_EBP + -0x10) == iVar2 || *(unaff_EBP + -0x10) < iVar2 ||\n               (iVar2 == -1))) {\n            if (1 < iVar2) {\n                fcn.00401292(\"Try number %d of %d.\\n\", *(unaff_EBP + -0x10));\n            }\n            if (1 < *(unaff_EBP + -0x10)) {\n                (*_sym.imp.KERNEL32.dll_Sleep)(15000);\n            }\n            iVar2 = fcn.00406054(0x423d30);\n            *(unaff_EBP + -0x14) = iVar2;\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040611b(0x41e070, 0x423d30);\n                *(unaff_EBP + -0x14) = iVar2;\n                if (iVar2 != 0) goto code_r0x00406408;\n                uVar8 = 0xf0;\n                uVar3 = fcn.0040d473();\n                iVar2 = fcn.0040e9b8(uVar3, uVar8, 0);\n                *(unaff_EBP + -0x14) = iVar2;\n                if (iVar2 == 0) {\n                    fcn.0040e934();\n                    goto code_r0x0040640e;\n                }\n            }\n            else {\ncode_r0x00406408:\n                if (*(unaff_EBP + -0x14) == -2) {\ncode_r0x0040640e:\n                    *(unaff_EBP + -0x18) = 1;\n                    *(unaff_EBP + -0x10) = 2;\n                }\n            }\n            fcn.0040dd08();\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n        }\n    }\n    else {\n        fcn.00401292(\"Sending %u parts for this message.\\n\", arg);\ncode_r0x00406436:\n        if (*0x41da51 == '\\0') {\n            *0x41ccc9 = 0;\n            *0x41e069 = 0;\n            *0x41d844 = 1;\n        }\n        iVar2 = fcn.0040deb4();\n        *(unaff_EBP + -0x10) = 1;\n        while ((*(unaff_EBP + -0x10) == iVar2 || *(unaff_EBP + -0x10) < iVar2 || (iVar2 == -1))) {\n            iVar6 = fcn.00406054(0x423d30);\n            *(unaff_EBP + -0x14) = iVar6;\n            if ((iVar6 == 0) || (iVar6 == -2)) break;\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n        }\n        *(unaff_EBP + -0x48) = 0xffffffff;\n        *(unaff_EBP + -0x18) = 0;\n        if (0 < *(unaff_EBP + 0x1c)) {\n            do {\n                if (*(unaff_EBP + -0x14) != 0) break;\n                fcn.0040580a(*(unaff_EBP + -0x18), unaff_EBP + -0x38, unaff_EBP + -0x28, unaff_EBP + -0xac);\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x28) / *(unaff_EBP + -0x1c);\n                if (*(unaff_EBP + -0x28) % *(unaff_EBP + -0x1c) != 0) {\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n                }\n                fcn.0040106f();\n                iVar2 = 0;\n                *(unaff_EBP + -0x20) = 0;\n                *0x42529c = 0;\n                if (0 < *(unaff_EBP + -0x10)) {\n                    do {\n                        if (*(unaff_EBP + -0x14) != 0) break;\n                        uVar3 = *(unaff_EBP + -0x18);\n                        *(unaff_EBP + -0x60) = *(unaff_EBP + -0x10);\n                        *(unaff_EBP + -0x54) = *(unaff_EBP + -0x38);\n                        *(unaff_EBP + -0x50) = *(unaff_EBP + -0x28);\n                        iVar2 = iVar2 + 1;\n                        *(unaff_EBP + -100) = iVar2;\n                        *(unaff_EBP + -0x5c) = uVar3;\n                        fcn.0040a9d8(unaff_EBP + -0x90);\n                        iVar6 = fcn.0040ea4e(unaff_EBP + -0x34, *(unaff_EBP + 8), unaff_EBP + -0x44, 0, \n                                             *(unaff_EBP + 0x14), *(unaff_EBP + -0x20), iVar2, uVar3);\n                        uVar1 = *0x41f5cc;\n                        if (iVar6 != 0) goto code_r0x00406653;\n                        uVar4 = *(unaff_EBP + -0x28) - *(unaff_EBP + -0x20);\n                        *(unaff_EBP + 8) = 0;\n                        *(unaff_EBP + -0x24) = *(unaff_EBP + -0x1c);\n                        if (uVar4 < *(unaff_EBP + -0x1c)) {\n                            *(unaff_EBP + -0x24) = uVar4;\n                        }\n                        iVar6 = fcn.00405a96(unaff_EBP + -0x34, 0, *(unaff_EBP + 0x14), *(unaff_EBP + -0x20), \n                                             unaff_EBP + -0x24, iVar2, *(unaff_EBP + -0x10), uVar3, unaff_EBP + -0x48);\n                        *(unaff_EBP + -0x14) = iVar6;\n                        if (iVar2 == *(unaff_EBP + -0x10)) {\n                            fcn.0040e9f7(unaff_EBP + -0x34, 0, *(unaff_EBP + 0x14));\n                        }\n                        fcn.0040106f();\n                        uVar1 = *0x41f5cc;\n                        if (iVar6 != 0) goto code_r0x00406653;\n                        iVar6 = fcn.0040deb4();\n                        arg_00 = 1;\n                        while ((arg_00 <= iVar6 || (iVar6 == -1))) {\n                            if (1 < iVar6) {\n                                fcn.00401292(\"Try number %d of %d.\\n\", arg_00);\n                            }\n                            if (1 < arg_00) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(15000);\n                            }\n                            iVar5 = fcn.0040611b(0x41e070, 0x423d30);\n                            *(unaff_EBP + -0x14) = iVar5;\n                            if (iVar5 == 0) {\n                                uVar8 = 0xf0;\n                                uVar3 = fcn.0040d473();\n                                iVar5 = fcn.0040e9b8(uVar3, uVar8, 0);\n                                *(unaff_EBP + -0x14) = iVar5;\n                                bVar7 = iVar5 == 0;\n                            }\n                            else {\n                                bVar7 = iVar5 == -2;\n                            }\n                            if (bVar7) {\n                                iVar6 = 1;\n                                arg_00 = 2;\n                            }\n                            arg_00 = arg_00 + 1;\n                        }\n                        *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + *(unaff_EBP + -0x24);\n                    } while (iVar2 < *(unaff_EBP + -0x10));\n                }\n                *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n            } while (*(unaff_EBP + -0x18) < *(unaff_EBP + 0x1c));\n        }\n        fcn.0040e934();\n        fcn.0040dd08();\n    }\n    iVar6 = *(unaff_EBP + -0x14);\n    uVar1 = *0x41f5cc;\ncode_r0x00406653:\n    *0x41f5cc = uVar1;\n    *(unaff_EBP + -4) = 2;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 1;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar6;\n}\n",
        "token_count": 3782
    },
    "004066f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid __cdecl fcn.004066f4(uint arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    char *pcVar9;\n    int32_t unaff_EBP;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    char *pcVar12;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401062();\n    *(unaff_EBP + -4) = 1;\n    fcn.0040107e();\n    iVar6 = unaff_EBP + -0x30;\n    uVar4 = fcn.0040d473();\n    fcn.0040f9d4(uVar4, iVar6, 0);\n    pcVar5 = fcn.0040d473();\n    if (pcVar5 != NULL) {\n        cVar1 = *pcVar5;\n        *(unaff_EBP + -0x10) = 0;\n        pcVar3 = _sym.imp.MSVCRT.dll_strchr;\n        while (cVar1 != '\\0') {\n            *(unaff_EBP + -0x14) = 0;\n            uVar4 = sub.MSVCRT.dll_strlen(pcVar5);\n            *(unaff_EBP + -0x18) = uVar4;\n            iVar6 = (*pcVar3)(pcVar5, 0x3c);\n            if (iVar6 == 0) {\n                cVar1 = *pcVar5;\n                pcVar12 = pcVar5;\n                while (cVar1 == ' ') {\n                    pcVar12 = pcVar12 + 1;\n                    cVar1 = *pcVar12;\n                }\n                puVar8 = (*pcVar3)(pcVar12, 0x20);\n                if (puVar8 != NULL) {\n                    *puVar8 = 0;\n                }\n            }\n            else {\n                iVar6 = (*pcVar3)(iVar6 + 1, 0x3e);\n                if (iVar6 != 0) {\n                    puVar10 = iVar6 + 1;\n                    uVar7 = *(unaff_EBP + -0x18);\n                    *puVar10 = 0;\n                    if (puVar10 - pcVar5 < uVar7) {\n                        do {\n                            puVar11 = puVar10;\n                            puVar10 = puVar11 + 1;\n                        } while (*puVar10 == 0x20);\n                        if (*puVar10 == 0x5c) {\n                            puVar10 = puVar11 + 2;\n                        }\n                        if (*puVar10 == 0x22) {\n                            puVar10 = puVar10 + 1;\n                        }\n                        uVar7 = 0;\n                        while( true ) {\n                            uVar2 = *puVar10;\n                            uVar7 = uVar7 & 0xffffff00 | uVar2;\n                            if ((uVar2 == 0) || (uVar2 == 0x22)) break;\n                            if (uVar2 != 0x5c) {\n                                uVar7 = fcn.00401136(uVar7);\n                                *(unaff_EBP + -0x14) = 1;\n                            }\n                            puVar10 = puVar10 + 1;\n                        }\n                    }\n                }\n            }\n            iVar6 = *(unaff_EBP + -0x10);\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n            if (iVar6 != 0) {\n                fcn.00401119();\n            }\n            pcVar12 = pcVar5;\n            if ((*pcVar5 != '\\\"') && (pcVar9 = (*_sym.imp.MSVCRT.dll_strrchr)(pcVar5, 0x3c),  pcVar9 != NULL)) {\n                *pcVar9 = '\\0';\n                iVar6 = (*pcVar3)(pcVar5, 0x2c);\n                *pcVar9 = '<';\n                if (iVar6 != 0) {\n                    pcVar12 = 0x22;\n                    fcn.00401136(0x22);\n                    if (pcVar5 < pcVar9) {\n                        do {\n                        } while (pcVar9[-1] == ' ');\n                    }\n                    fcn.004010e1(pcVar5, pcVar9 - pcVar5);\n                    fcn.004010e1(0x416e48, 2);\n                }\n            }\n            fcn.00401119(pcVar12);\n            if (*(unaff_EBP + -0x14) != 0) {\n                fcn.00401136();\n            }\n            pcVar5 = pcVar5 + *(unaff_EBP + -0x18) + 1;\n            cVar1 = *pcVar5;\n        }\n        iVar6 = fcn.00401156();\n        if (iVar6 != 0) {\n            fcn.00401136();\n        }\n        if (*(unaff_EBP + -0x10) != 0) {\n            fcn.004066c6();\n        }\n        fcn.0040107e();\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1342
    },
    "004068e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.004068e2(uint s, uint arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint uVar5;\n    uchar *puVar6;\n    char *pcVar7;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    fcn.0040107e();\n    iVar3 = sub.MSVCRT.dll_strlen(*(unaff_EBP + 8));\n    if (iVar3 == 0) {\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00401054();\n    }\n    else {\n        fcn.0040f9d4(*(unaff_EBP + 8), unaff_EBP + -0x1c, 0);\n        pcVar4 = fcn.0040d473();\n        pcVar2 = _sym.imp.MSVCRT.dll_strchr;\n        if (pcVar4 != NULL) {\n            cVar1 = *pcVar4;\n            while (cVar1 != '\\0') {\n                uVar5 = sub.MSVCRT.dll_strlen(pcVar4);\n                *(unaff_EBP + -0x10) = uVar5;\n                iVar3 = (*pcVar2)(pcVar4, 0x3c);\n                if (iVar3 == 0) {\n                    cVar1 = *pcVar4;\n                    pcVar7 = pcVar4;\n                    while (cVar1 == ' ') {\n                        pcVar7 = pcVar7 + 1;\n                        cVar1 = *pcVar7;\n                    }\n                    var_1ch = 0x20;\n                }\n                else {\n                    pcVar7 = iVar3 + 1;\n                    var_1ch = 0x3e;\n                }\n                puVar6 = (*pcVar2)(pcVar7, var_1ch);\n                if (puVar6 != NULL) {\n                    *puVar6 = 0;\n                }\n                iVar3 = sub.MSVCRT.dll_strlen(pcVar7);\n                fcn.004010e1(pcVar7, iVar3 + 1);\n                pcVar4 = pcVar4 + *(unaff_EBP + -0x10) + 1;\n                cVar1 = *pcVar4;\n            }\n            fcn.00401136(0);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00401054();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 657
    },
    "004069c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004069c8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint src;\n    char *pcVar3;\n    int32_t iVar4;\n    char *arg_ch;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint arg_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.00401156();\n    if (iVar2 == 0) {\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00401054();\n    }\n    else {\n        arg_10h = 0;\n        arg_ch = unaff_EBP + -0x18;\n        src = fcn.0040d473();\n        fcn.0040f9d4(src, arg_ch, arg_10h);\n        pcVar3 = fcn.0040d473();\n        if (pcVar3 != NULL) {\n            fcn.0040106f();\n            cVar1 = *pcVar3;\n            while (cVar1 != '\\0') {\n                iVar2 = sub.MSVCRT.dll_strlen(pcVar3);\n                iVar4 = sub.MSVCRT.dll_strcmp(pcVar3, \"myself\");\n                arg_ch = pcVar3;\n                if (iVar4 == 0) {\n                    arg_ch = 0x41da58;\n                }\n                iVar4 = fcn.00401156();\n                if (iVar4 != 0) {\n                    fcn.00401136(0x2c);\n                }\n                sub.MSVCRT.dll_strlen(arg_ch);\n                fcn.004010e1();\n                pcVar3 = pcVar3 + iVar2 + 1;\n                cVar1 = *pcVar3;\n            }\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00401054(arg_ch);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 515
    },
    "00406aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: s1\n\nuint __cdecl fcn.00406aa0(uint arg_8h)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    char *pcVar8;\n    char cVar9;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint uVar10;\n    uint *in_FS_OFFSET;\n    uint s1;\n    uint var_2ch;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    if ((*(unaff_EBP + 8) != NULL) && (**(unaff_EBP + 8) == '\\0')) {\n        *(unaff_EBP + 8) = 0;\n    }\n    iVar5 = fcn.0040deb4();\n    *(unaff_EBP + -0x20) = iVar5;\n    *(unaff_EBP + -0x10) = 0;\n    pcVar3 = _sym.imp.MSVCRT.dll_sprintf;\n    if (0 < iVar5) {\n        *(unaff_EBP + -0x14) = iVar5;\n        iVar5 = extraout_ECX;\n        do {\n            uVar4 = *0x423710;\n            if (*(unaff_EBP + -0x10) != 0) {\n                if (*0x42434c != '\\0') {\n                    *0x423710 = 0;\n                    fcn.00401292(\"superDebug: ::say_hello() failed to connect, retry count remaining is %u\\n\", \n                                 *(unaff_EBP + -0x14));\n                }\n                *0x423710 = uVar4;\n                (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n            }\n            if (iVar5 == 0) {\n                iVar6 = fcn.0040dc51(0x41d630, 0x41eab0, *0x41caf4, \"smtp\");\n                *(unaff_EBP + -0x18) = iVar6;\n                if (iVar6 == 0) {\n                    iVar6 = fcn.0040df94(0, unaff_EBP + -0x1c);\n                    if (iVar6 == 0xdc) goto code_r0x00406b75;\n                    fcn.0040dd08();\n                }\n            }\n            else {\ncode_r0x00406b75:\n                iVar5 = *(unaff_EBP + 8);\n                if (iVar5 == 0) {\n                    iVar5 = 0x424e90;\n                }\n                (*pcVar3)(unaff_EBP + -0x82c, \"EHLO %s\", iVar5);\n                pcVar2 = _sym.imp.MSVCRT.dll_strrchr;\n                iVar5 = (*_sym.imp.MSVCRT.dll_strrchr)(0x41cdd8, 0x40);\n                if (iVar5 != 0) {\n                    sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, 0x416ed0);\n                    sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, iVar5 + 1);\n                    puVar7 = (*_sym.imp.MSVCRT.dll_strchr)(unaff_EBP + -0x82c, 0x3e);\n                    if (puVar7 != NULL) {\n                        *puVar7 = 0;\n                    }\n                }\n                sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, 0x413644);\n                iVar5 = fcn.0040dd54(*0x425298, unaff_EBP + -0x82c);\n                *(unaff_EBP + -0x18) = iVar5;\n                if (iVar5 == 0) {\n                    iVar5 = fcn.0040df94(unaff_EBP + -0x2c, unaff_EBP + -0x1c);\n                    if (iVar5 == 0xfa) {\n                        for (pcVar8 = fcn.0040d473(); *pcVar8 != '\\0'; pcVar8 = pcVar8 + iVar5 + 1) {\n                            (*_sym.imp.MSVCRT.dll__strlwr)(pcVar8);\n                            if ((pcVar8[3] == '-') || (pcVar8[3] == ' ')) {\n                                pcVar1 = pcVar8 + 4;\n                                iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"size \", 5);\n                                if (iVar5 == 0) {\n                                    iVar5 = (*_sym.imp.MSVCRT.dll_atol)(pcVar8 + 9);\n                                    if (0 < iVar5) {\n                                        *0x424514 = (iVar5 / 10) * 7;\n                                    }\n                                }\n                                else {\n                                    iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, 0x416ebc, 3);\n                                    if (iVar5 == 0) {\n                                        *0x41ebb2 = 1;\n                                    }\n                                    else {\n                                        iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"8bitmime\", 8);\n                                        if (iVar5 == 0) {\n                                            *0x41f5cc = 1;\n                                        }\n                                        else {\n                                            iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"binarymime\", 10);\n                                            if (iVar5 == 0) {\n                                                *0x41d949 = 1;\n                                            }\n                                            else {\n                                                iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"enhancedstatuscodes\", 0x13);\n                                                if (iVar5 == 0) {\n                                                    *0x42451c = 1;\n                                                }\n                                                else {\n                                                    iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"auth\", 4);\n                                                    if ((iVar5 == 0) && ((pcVar8[8] == ' ' || (pcVar8[8] == '=')))) {\n                                                        iVar5 = 9;\n                                                        do {\n                                                            pcVar1 = pcVar8 + iVar5;\n                                                            cVar9 = *pcVar1;\n                                                            iVar6 = iVar5;\n                                                            while (((*(unaff_EBP + 8) = iVar6,  cVar9 != '\\0' &&\n                                                                    (cVar9 != ',')) && (cVar9 != ' '))) {\n                                                                iVar6 = iVar6 + 1;\n                                                                cVar9 = pcVar8[iVar6];\n                                                            }\n                                                            iVar6 = iVar6 - iVar5;\n                                                            if (iVar6 == 5) {\n                                                                iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"plain\", 5);\n                                                                if (iVar5 == 0) {\n                                                                    *0x42451a = 1;\n                                                                }\n                                                                iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"login\", 5);\n                                                                if (iVar5 == 0) {\n                                                                    *0x42451b = 1;\n                                                                }\n                                                            }\n                                                            if ((iVar6 == 6) &&\n                                                               (iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"gssapi\", 6), \n                                                               iVar5 == 0)) {\n                                                                *0x42451d = 1;\n                                                            }\n                                                            if ((iVar6 == 8) &&\n                                                               (iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"cram-md5\", 8), \n                                                               iVar5 == 0)) {\n                                                                *0x424519 = 1;\n                                                            }\n                                                            for (iVar5 = *(unaff_EBP + 8);\n                                                                (pcVar8[iVar5] == ',' || (pcVar8[iVar5] == ' '));\n                                                                iVar5 = iVar5 + 1) {\n                                                            }\n                                                        } while (pcVar8[iVar5] != '\\0');\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            iVar5 = sub.MSVCRT.dll_strlen(pcVar8);\n                        }\n                        break;\n                    }\n                    iVar5 = *(unaff_EBP + 8);\n                    if (iVar5 == 0) {\n                        iVar5 = 0x424e90;\n                    }\n                    (*pcVar3)(unaff_EBP + -0x82c, \"HELO %s\", iVar5);\n                    iVar5 = (*pcVar2)(0x41cdd8, 0x40);\n                    if (iVar5 != 0) {\n                        sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, 0x416ed0);\n                        sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, iVar5 + 1);\n                        puVar7 = (*_sym.imp.MSVCRT.dll_strchr)(unaff_EBP + -0x82c, 0x3e);\n                        if (puVar7 != NULL) {\n                            *puVar7 = 0;\n                        }\n                    }\n                    sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, 0x413644);\n                    iVar5 = fcn.0040dd54(*0x425298, unaff_EBP + -0x82c);\n                    if ((iVar5 == 0) && (iVar5 = fcn.0040df94(0, unaff_EBP + -0x1c),  iVar5 == 0xfa)) {\n                        *0x42451b = 1;\n                        *0x42451d = 1;\n                        break;\n                    }\n                }\n                fcn.0040dd08();\n                iVar5 = 0;\n            }\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + -1;\n        } while (*(unaff_EBP + -0x10) < *(unaff_EBP + -0x20));\n    }\n    if (*(unaff_EBP + -0x10) == *(unaff_EBP + -0x20)) {\n        if (*(unaff_EBP + -0x18) == 0) {\n            fcn.0040e96e(\"SMTP server error\");\n        }\n        uVar10 = 0xffffffff;\n    }\n    else {\n        uVar10 = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar10;\n}\n",
        "token_count": 2428
    },
    "004071cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint fcn.004071cd(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code *pcVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint arg_20h;\n    int32_t iVar6;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar7;\n    uint *in_FS_OFFSET;\n    bool bVar8;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_1030h;\n    uint var_830h;\n    uint s1;\n    uint var_424h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_14h;\n    char *pcVar9;\n    uint uVar10;\n    uint var_ch;\n    uint var_4h;\n    uint var_10h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.004123b0();\n    bVar8 = *0x41d521 != '\\0';\n    *(unaff_EBP + -0x10) = &var_ch;\n    if (bVar8) goto code_r0x004075e7;\n    if (*0x41e59c != 0) {\n        if (*0x42451d != '\\0') {\n            bVar8 = *0x423d2c == 0;\n            *(unaff_EBP + -4) = 0;\n            if (bVar8) {\n                if ((*0x424574 & 1) == 0) {\n                    *0x424574 = *0x424574 | 1;\n                    *(unaff_EBP + -4) = 1;\n                    fcn.0040d476();\n                    fcn.00412274(0x412b8d);\n                    *(unaff_EBP + -4) = 0;\n                }\n                *0x423d2c = 0x424520;\n            }\n            bVar8 = *0x41efc0 == '\\0';\n            *(unaff_EBP + -0x830) = 0;\n            puVar7 = unaff_EBP + -0x82f;\n            for (iVar6 = 0xff; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = 0;\n            *(puVar7 + 2) = 0;\n            if (bVar8) {\n                (*_sym.imp.MSVCRT.dll_sprintf)(unaff_EBP + -0x830, \"smtp@%s\", 0x41d630);\n            }\n            else {\n                sub.MSVCRT.dll_strcpy(unaff_EBP + -0x830, 0x41efc0);\n            }\n            var_ch = 0x4066b1;\n            fcn.0040ccf1(0x4066b1, 0x40669a, 0x41e070, unaff_EBP + -0x830, *0x423924, *0x41e280);\n            iVar6 = fcn.004066f0();\n            if ((iVar6 != 1) && (iVar6 = fcn.00406f13(0x41d020),  iVar6 != 0)) {\n                uVar10 = 0xfffffffb;\n                goto code_r0x00407605;\n            }\n            goto code_r0x004075e7;\n        }\n        fcn.0040e96e(\"The SMTP server will not accept AUTH GSSAPI value.\");\ncode_r0x00407602:\n        uVar10 = 0xfffffffe;\n        goto code_r0x00407605;\n    }\n    pcVar9 = *(unaff_EBP + 8);\n    if (*pcVar9 == '\\0') goto code_r0x004075e7;\n    var_ch = unaff_EDI;\n    if (*0x424519 != '\\0') {\n        fcn.00401062();\n        *(unaff_EBP + -4) = 3;\n        fcn.00401062();\n        uVar10 = *0x425298;\n        *(unaff_EBP + -4) = 4;\n        iVar6 = fcn.0040dd54(uVar10, \"AUTH CRAM-MD5\\r\\n\");\n        if (iVar6 == 0) {\n            iVar6 = fcn.0040df94(unaff_EBP + -0x20, unaff_EBP + -0x14);\n            if (iVar6 != 0x14e) {\n                pcVar4 = \"The SMTP server claimed CRAM-MD5, but did not accept Auth CRAM-MD5 request.\\n\";\ncode_r0x0040741c:\n                fcn.00401292(pcVar4, var_ch);\n                *(unaff_EBP + -4) = 3;\n                fcn.00401054();\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.00401054();\n                goto code_r0x0040743a;\n            }\n            iVar6 = fcn.0040d473();\n            pcVar4 = iVar6 + 4;\n            fcn.00401119();\n            fcn.00406f1b(unaff_EBP + -0x2c, unaff_EBP + -0x430, pcVar4, var_ch, unaff_ESI, unaff_EBX, arg_20h);\n            iVar6 = fcn.0040dd54(*0x425298, unaff_EBP + -0x430);\n            if (iVar6 != 0) goto code_r0x00407384;\n            iVar6 = fcn.0040df94(0, unaff_EBP + -0x14);\n            if (iVar6 != 0xeb) goto code_r0x0040741c;\n            uVar10 = 0;\n        }\n        else {\ncode_r0x00407384:\n            uVar10 = 0xffffffff;\n        }\n        *(unaff_EBP + -4) = 3;\n        fcn.00401054();\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00401054();\n        goto code_r0x00407605;\n    }\ncode_r0x0040743a:\n    if (*0x42451a == '\\0') {\ncode_r0x004074f3:\n        iVar6 = fcn.0040dd54(*0x425298, \"AUTH LOGIN\\r\\n\");\n        if (iVar6 == 0) {\n            iVar6 = fcn.0040df94(0, unaff_EBP + -0x14);\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n            if (iVar6 == 0x14e) {\n                uVar10 = *(unaff_EBP + 8);\n                uVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar10, unaff_EBP + -0x1030, 0);\n                fcn.0041103c(*(unaff_EBP + 8), uVar5, uVar10, unaff_EBP + -0x1030);\n                pcVar3 = _sym.imp.KERNEL32.dll_lstrcatA;\n                (*_sym.imp.KERNEL32.dll_lstrcatA)(unaff_EBP + -0x1030, 0x413644);\n                iVar6 = fcn.0040dd54(*0x425298, unaff_EBP + -0x1030);\n                if (iVar6 != 0) goto code_r0x004075ce;\n                iVar6 = fcn.0040df94(0, unaff_EBP + -0x14);\n                if (iVar6 != 0xeb) {\n                    if (iVar6 == 0x14e) {\n                        uVar10 = *(unaff_EBP + 0xc);\n                        uVar5 = (*pcVar2)(uVar10, unaff_EBP + -0x1030, 0);\n                        fcn.0041103c(*(unaff_EBP + 0xc), uVar5, uVar10, unaff_EBP + -0x1030);\n                        (*pcVar3)(unaff_EBP + -0x1030, 0x413644);\n                        iVar6 = fcn.0040dd54(*0x425298, unaff_EBP + -0x1030);\n                        if (iVar6 != 0) goto code_r0x004075ce;\n                        iVar6 = fcn.0040df94(0, unaff_EBP + -0x14);\n                        if (iVar6 == 0xeb) goto code_r0x004075e7;\n                        pcVar9 = \"The SMTP server did not accept Auth LOGIN PASSWD value.\\n\";\n                    }\n                    else {\n                        pcVar9 = \"The SMTP server did not accept LOGIN name.\\n\";\n                    }\n                    fcn.00401292(pcVar9, var_ch);\n                    fcn.0040e934();\n                    goto code_r0x00407602;\n                }\n            }\n            else {\n                fcn.00401292(\"The SMTP server does not require AUTH LOGIN.\\nAre you sure server supports AUTH?\\n\", \n                             var_ch);\n            }\ncode_r0x004075e7:\n            uVar10 = 0;\n            goto code_r0x00407605;\n        }\n    }\n    else {\n        sub.MSVCRT.dll_strcpy(unaff_EBP + -0x430, \"AUTH PLAIN \");\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrcpyA;\n        pcVar4 = unaff_EBP + -0x424;\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(pcVar4, pcVar9);\n        cVar1 = *(unaff_EBP + -0x424);\n        while (cVar1 != '\\0') {\n            pcVar4 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n        }\n        pcVar4 = pcVar4 + 1;\n        (*pcVar2)(pcVar4, *(unaff_EBP + 0xc));\n        for (; *pcVar4 != '\\0'; pcVar4 = pcVar4 + 1) {\n        }\n        iVar6 = unaff_EBP + -0x425;\n        fcn.0041103c(iVar6, pcVar4 - iVar6, iVar6, 0);\n        sub.MSVCRT.dll_strcat(unaff_EBP + -0x430, 0x413644);\n        iVar6 = fcn.0040dd54(*0x425298, unaff_EBP + -0x430);\n        if (iVar6 == 0) {\n            iVar6 = fcn.0040df94(0, unaff_EBP + -0x14);\n            if (iVar6 == 0xeb) goto code_r0x004075e7;\n            fcn.00401292(\"The SMTP server did not accept Auth PLAIN value.\\nAre your login userid and password correct?\\n\"\n                         , var_ch);\n            goto code_r0x004074f3;\n        }\n    }\ncode_r0x004075ce:\n    uVar10 = 0xffffffff;\ncode_r0x00407605:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar10;\n}\n",
        "token_count": 2626
    },
    "00407614": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: s1\n\nuint __cdecl fcn.00407614(uint arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    bool bVar6;\n    char *s1;\n    uint var_2ch;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    iVar4 = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.00401062();\n    bVar6 = *0x41d521 == '\\0';\n    *(unaff_EBP + -4) = 1;\n    if (bVar6) {\n        fcn.004068e2(0x41da58, unaff_EBP + -0x20);\n        pcVar2 = fcn.0040d473();\n        if (pcVar2 == NULL) {\n            fcn.0040e96e(\"No email address was found for the sender name.\\nHave you set your mail address correctly?\");\n            uVar5 = 0xfffffffe;\n        }\n        else {\n            if (*pcVar2 == '<') {\n                s1 = \"MAIL FROM:%s\";\n            }\n            else {\n                s1 = \"MAIL FROM:<%s>\";\n            }\n            (*_sym.imp.MSVCRT.dll_sprintf)(unaff_EBP + -0x82c, s1, pcVar2);\n            if ((*0x41f5cc != '\\0') && (*0x41cee1 != '\\0')) {\n                sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, \" BODY=8BITMIME\");\n            }\n            fcn.0040107e();\n            sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, 0x413644);\n            iVar3 = fcn.0040dd54(*0x425298, unaff_EBP + -0x82c);\n            if (iVar3 == 0) {\n                iVar3 = fcn.0040df94(0, unaff_EBP + -0x14);\n                if (iVar3 == 0xfa) {\n                    fcn.004068e2(*(unaff_EBP + 8), unaff_EBP + -0x20);\n                    pcVar2 = fcn.0040d473();\n                    if (pcVar2 != NULL) {\n                        *(unaff_EBP + -0x10) = 0;\n                        cVar1 = *pcVar2;\n                        while (cVar1 != '\\0') {\n                            (*_sym.imp.MSVCRT.dll_sprintf)(unaff_EBP + -0x82c, \"RCPT TO:<%s>\", pcVar2);\n                            if ((*0x41eaa9 != 0) && (*0x41ebb2 != '\\0')) {\n                                sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, \" NOTIFY=\");\n                                if ((*0x41eaa9 & 1) == 0) {\n                                    if ((*0x41eaa9 & 2) != 0) {\n                                        sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, \"SUCCESS\");\n                                    }\n                                    if ((*0x41eaa9 & 4) != 0) {\n                                        if ((*0x41eaa9 & 2) != 0) {\n                                            sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, 0x417284);\n                                        }\n                                        sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, \"FAILURE\");\n                                    }\n                                    if ((*0x41eaa9 & 8) == 0) goto code_r0x00407827;\n                                    if ((*0x41eaa9 & 6) != 0) {\n                                        sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, 0x417284);\n                                    }\n                                    s1 = \"DELAY\";\n                                }\n                                else {\n                                    s1 = \"NEVER\";\n                                }\n                                sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, s1);\n                            }\ncode_r0x00407827:\n                            sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, 0x413644);\n                            fcn.0040dd54(*0x425298, unaff_EBP + -0x82c);\n                            iVar4 = iVar4 + 1;\n                            iVar3 = fcn.0040df94(unaff_EBP + -0x2c, unaff_EBP + -0x14);\n                            if ((iVar3 != 0xfa) && (iVar3 != 0xfb)) {\n                                fcn.00401292(\"The SMTP server does not like the name %s.\\nHave you set the \\'To:\\' field correctly, or do you need authorization (-u/-pw) ?\\n\"\n                                             , pcVar2);\n                                uVar5 = fcn.0040d473();\n                                fcn.00401292(\"The SMTP server response was -> %s\\n\", uVar5);\n                                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n                            }\n                            iVar3 = sub.MSVCRT.dll_strlen(pcVar2);\n                            pcVar2 = pcVar2 + iVar3 + 1;\n                            cVar1 = *pcVar2;\n                        }\n                        fcn.0040107e();\n                        if (*(unaff_EBP + -0x10) == iVar4) {\n                            fcn.0040e934();\n                        }\n                        else {\n                            iVar4 = fcn.0040dd54(*0x425298, \"DATA\\r\\n\");\n                            if (iVar4 == 0) {\n                                uVar5 = 0;\n                                iVar4 = fcn.0040df94(0, unaff_EBP + -0x14);\n                                if (iVar4 == 0x162) goto code_r0x004078ed;\n                                fcn.0040e96e(\"SMTP server error accepting message data\");\n                            }\n                        }\n                        uVar5 = 0xffffffff;\n                        goto code_r0x004078ed;\n                    }\n                    s1 = \"No email address was found for recipients.\\nHave you set the \\'To:\\' field correctly?\";\n                }\n                else {\n                    s1 = \"The SMTP server does not like the sender name.\\nHave you set your mail address correctly?\";\n                }\n                fcn.0040e96e(s1);\n                uVar5 = 0xfffffffe;\n            }\n            else {\n                uVar5 = 0xffffffff;\n            }\n        }\n    }\n    else {\n        uVar5 = 0;\n    }\ncode_r0x004078ed:\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 1616
    },
    "00407915": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_430h\n\nint32_t __cdecl fcn.00407915(uint arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar uVar7;\n    int32_t unaff_EBP;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    char *pcVar8;\n    uint in_stack_fffffbc8;\n    uint var_430h;\n    uint var_30h;\n    uint var_24h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    uVar7 = *0x423710;\n    if (*0x41d420 != '\\0') {\n        var_430h = *0x41caf8;\n        *0x423710 = 1;\n        in_stack_fffffbc8 = 0x41e498;\n        iVar3 = fcn.0040dc51(0x41d420, 0x41e498, *0x41caf8, \"pop3\");\n        if (iVar3 == 0) {\n            fcn.00401062();\n            *(unaff_EBP + -4) = 0;\n            var_430h = 0x40797b;\n            iVar3 = fcn.0040e32a(unaff_EBP + -0x30);\n            if (iVar3 == 0) {\n                if ((*0x41e9a8 != '\\0') || (*0x41e070 != '\\0')) {\n                    fcn.0040118b(\"USER \");\n                    if (*0x41e9a8 == '\\0') {\n                        var_430h = 0x41e070;\n                    }\n                    else {\n                        var_430h = 0x41e9a8;\n                    }\n                    fcn.00401119();\n                    in_stack_fffffbc8 = 0x413644;\n                    fcn.00401119();\n                    uVar4 = fcn.0040d473();\n                    iVar3 = fcn.0040dd54(*0x425298, uVar4);\n                    if ((iVar3 != 0) || (iVar3 = fcn.0040e32a(unaff_EBP + -0x30),  iVar3 != 0)) goto code_r0x00407ad3;\n                }\n                if ((*0x423820 != '\\0') || (*0x423d30 != '\\0')) {\n                    fcn.0040118b(\"PASS \");\n                    if (*0x423820 == '\\0') {\n                        uVar4 = 0x423d30;\n                    }\n                    else {\n                        uVar4 = 0x423820;\n                    }\n                    fcn.00401119(uVar4);\n                    in_stack_fffffbc8 = 0x413644;\n                    fcn.00401119();\n                    uVar4 = fcn.0040d473();\n                    iVar3 = fcn.0040dd54(*0x425298, uVar4);\n                    if ((iVar3 != 0) || (iVar3 = fcn.0040e32a(unaff_EBP + -0x30),  iVar3 != 0)) goto code_r0x00407ad3;\n                }\n                iVar3 = fcn.0040dd54(*0x425298, \"STAT\\r\\n\");\n                if ((iVar3 == 0) &&\n                   ((((iVar3 = fcn.0040e32a(unaff_EBP + -0x30),  iVar3 == 0 && (*0x41cee0 != '\\0')) &&\n                     (iVar3 = fcn.0040dd54(*0x425298, \"XTND XMIT\\r\\n\"),  iVar3 == 0)) &&\n                    (iVar3 = fcn.0040e32a(unaff_EBP + -0x30),  iVar3 == 0)))) {\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    *0x41d521 = 1;\n                    fcn.00401054();\n                    iVar3 = 0;\n                    goto code_r0x00408055;\n                }\n            }\ncode_r0x00407ad3:\n            fcn.0040e934();\n            fcn.0040dd08();\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00401054();\n        }\n    }\n    *0x423710 = uVar7;\n    if (*0x41f3c0 != '\\0') {\n        *(unaff_EBP + -0x14) = 0;\n        uVar4 = *0x41cafc;\n        *(unaff_EBP + -0xd) = uVar7;\n        *0x423710 = 1;\n        *(unaff_EBP + -0xe) = 0;\n        *(unaff_EBP + -0x15) = 0;\n        *(unaff_EBP + -0x16) = 0;\n        iVar3 = fcn.0040dc51(0x41f3c0, 0x424050, uVar4, \"imap\");\n        if (iVar3 == 0) {\n            fcn.00401062();\n            *(unaff_EBP + -4) = 1;\n            iVar3 = fcn.0040e55b(unaff_EBP + -0x24);\n            *(unaff_EBP + -0x14) = iVar3;\n            if (iVar3 < 0) {\n                fcn.0040dd08();\n                *0x423710 = uVar7;\n            }\n            else {\n                uVar4 = fcn.0040d473();\n                (*_sym.imp.MSVCRT.dll__strlwr)(uVar4);\n                uVar4 = fcn.0040d473(0x417508);\n                pcVar2 = _sym.imp.MSVCRT.dll_strstr;\n                iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(uVar4);\n                if (iVar3 == 0) {\ncode_r0x00407f7e:\n                    iVar3 = fcn.0040dd54(*0x425298, \"a097 SELECT \\\"INBOX\\\"\\r\\n\");\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.0040e732(0, \"a097\");\n                        *(unaff_EBP + -0x14) = iVar3;\n                        if (iVar3 < 0) goto code_r0x00407fa8;\n                    }\n                    if ((((*0x423718 == '\\0') && (*0x41e070 == '\\0')) && ((*0x41e390 == '\\0' && (*0x423d30 == '\\0'))))\n                       || (*(unaff_EBP + -0xe) == '\\0')) {\n                        iVar3 = fcn.0040dd54(*0x425298, \"a099 BYE\\r\\n\");\n                        if (iVar3 == 0) {\n                            pcVar8 = \"a099\";\n                            goto code_r0x0040801c;\n                        }\n                    }\n                    else {\n                        iVar3 = fcn.0040dd54(*0x425298, \"a098 LOGOUT\\r\\n\");\n                        if (iVar3 == 0) {\n                            pcVar8 = \"a098\";\ncode_r0x0040801c:\n                            uVar4 = fcn.0040e732(0, pcVar8);\n                            *(unaff_EBP + -0x14) = uVar4;\n                        }\n                    }\n                    fcn.0040dd08();\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    fcn.00401054();\n                    uVar7 = *(unaff_EBP + -0xd);\n                    goto code_r0x0040803c;\n                }\n                uVar4 = fcn.0040d473(\" capability\");\n                iVar3 = (*pcVar2)(uVar4);\n                if (iVar3 == 0) {\n                    iVar3 = fcn.0040dd54(*0x425298, \"a001 CAPABILITY\\r\\n\");\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.0040e732(unaff_EBP + -0x24, \"a001\");\n                        *(unaff_EBP + -0x14) = iVar3;\n                        if (iVar3 < 0) goto code_r0x00407fa8;\n                        uVar4 = fcn.0040d473();\n                        (*_sym.imp.MSVCRT.dll__strlwr)(uVar4);\n                        uVar4 = fcn.0040d473(\" capability\");\n                        iVar3 = (*pcVar2)(uVar4);\n                        if (iVar3 != 0) goto code_r0x00407c28;\n                    }\n                    goto code_r0x00407f7e;\n                }\ncode_r0x00407c28:\n                iVar5 = (*pcVar2)(iVar3, \" auth=\");\n                if (iVar5 == 0) {\n                    iVar3 = (*pcVar2)(iVar3, \"sasl\");\n                    if (iVar3 == 0) goto code_r0x00407f7e;\n                    iVar5 = (*pcVar2)(iVar3, \"login\");\n                    if (iVar5 == 0) {\n                        *(unaff_EBP + -0xe) = 1;\n                    }\n                    else {\n                        iVar5 = (*pcVar2)(iVar3, \"plain\");\n                        if (iVar5 == 0) {\n                            *(unaff_EBP + -0x15) = 1;\n                        }\n                        else {\n                            iVar3 = (*pcVar2)(iVar3, \"cram-md5\");\n                            if (iVar3 == 0) {\n                                *(unaff_EBP + -0x16) = 1;\n                            }\n                        }\n                    }\n                }\n                else {\n                    iVar5 = iVar5 + 6;\n                    puVar6 = (*_sym.imp.MSVCRT.dll_strchr)(iVar5, 0x20);\n                    pcVar1 = _sym.imp.MSVCRT.dll_strtok;\n                    if (puVar6 != NULL) {\n                        *puVar6 = 0;\n                        pcVar1 = _sym.imp.MSVCRT.dll_strtok;\n                    }\n                    while (iVar3 = (*pcVar1)(iVar5, 0x417284),  iVar3 != 0) {\n                        iVar5 = sub.MSVCRT.dll_strcmp(iVar3, \"login\");\n                        if (iVar5 == 0) {\n                            *(unaff_EBP + -0xe) = 1;\n                        }\n                        else {\n                            iVar5 = sub.MSVCRT.dll_strcmp(iVar3, \"plain\");\n                            if (iVar5 == 0) {\n                                *(unaff_EBP + -0x15) = 1;\n                            }\n                            else {\n                                iVar3 = sub.MSVCRT.dll_strcmp(iVar3, \"cram-md5\");\n                                if (iVar3 == 0) {\n                                    *(unaff_EBP + -0x16) = 1;\n                                }\n                            }\n                        }\n                        iVar5 = 0;\n                    }\n                }\n                if (((*0x423718 == '\\0') && (*0x41e070 == '\\0')) && ((*0x41e390 == '\\0' && (*0x423d30 == '\\0'))))\n                goto code_r0x00407f7e;\n                if (*(unaff_EBP + -0x16) != '\\0') {\n                    fcn.00401062();\n                    pcVar8 = \"a010 AUTHENTICATE \\\"CRAM-MD5\\\"\";\n                    *(unaff_EBP + -4) = 2;\n                    fcn.0040118b();\n                    iVar3 = fcn.0040e55b(unaff_EBP + -0x24);\n                    *(unaff_EBP + -0x14) = iVar3;\n                    if (iVar3 < 0) {\ncode_r0x00407dbd:\n                        fcn.0040dd08();\n                        *0x423710 = *(unaff_EBP + -0xd);\n                        *(unaff_EBP + -4) = 1;\n                        fcn.00401054();\n                        goto code_r0x00407b6d;\n                    }\n                    iVar3 = fcn.0040d473();\n                    iVar3 = iVar3 + 2;\n                    fcn.00401119();\n                    fcn.00406f1b(unaff_EBP + -0x30, unaff_EBP + -0x430, iVar3, pcVar8, unaff_EDI, in_stack_fffffbc8, \n                                 var_430h);\n                    iVar3 = fcn.0040dd54(*0x425298, unaff_EBP + -0x430);\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.0040e732(unaff_EBP + -0x24, \"a010\");\n                        *(unaff_EBP + -0x14) = iVar3;\n                        if (iVar3 < 0) goto code_r0x00407dbd;\n                        uVar4 = fcn.0040d473();\n                        (*_sym.imp.MSVCRT.dll__strlwr)(uVar4);\n                        uVar4 = fcn.0040d473(\"a010 ok\");\n                        (*pcVar2)(uVar4);\n                    }\n                    *(unaff_EBP + -4) = 1;\n                    fcn.00401054();\n                    goto code_r0x00407f7e;\n                }\n                if (*(unaff_EBP + -0x15) == '\\0') {\n                    if (*(unaff_EBP + -0xe) != '\\0') {\n                        fcn.0040118b(\"a030 LOGIN \\\"\");\n                        if (*0x423718 == '\\0') {\n                            uVar4 = 0x41e070;\n                        }\n                        else {\n                            uVar4 = 0x423718;\n                        }\n                        fcn.00401119(uVar4);\n                        fcn.00401119(0x417458);\n                        if (*0x41e390 == '\\0') {\n                            uVar4 = 0x423d30;\n                        }\n                        else {\n                            uVar4 = 0x41e390;\n                        }\n                        fcn.00401119(uVar4);\n                        fcn.00401119();\n                        uVar4 = fcn.0040d473();\n                        iVar3 = fcn.0040dd54(*0x425298, uVar4);\n                        if (iVar3 == 0) {\n                            iVar3 = fcn.0040e732(unaff_EBP + -0x24, \"a030\");\n                            *(unaff_EBP + -0x14) = iVar3;\n                            if (-1 < iVar3) {\n                                uVar4 = fcn.0040d473();\n                                (*_sym.imp.MSVCRT.dll__strlwr)(uVar4);\n                                pcVar8 = \"a030 ok\";\n                                goto code_r0x00407f71;\n                            }\n                            goto code_r0x00407fa8;\n                        }\n                    }\n                    goto code_r0x00407f7e;\n                }\n                fcn.0040118b(\"a020 AUTHENTICATE PLAIN\\r\\n\");\n                if (*0x423718 == '\\0') {\n                    uVar4 = 0x41e070;\n                }\n                else {\n                    uVar4 = 0x423718;\n                }\n                fcn.00401119(uVar4);\n                fcn.00401119(0x417480);\n                if (*0x41e390 == '\\0') {\n                    uVar4 = 0x423d30;\n                }\n                else {\n                    uVar4 = 0x41e390;\n                }\n                fcn.00401119(uVar4);\n                fcn.00401119();\n                uVar4 = fcn.0040d473();\n                iVar3 = fcn.0040dd54(*0x425298, uVar4);\n                if (iVar3 != 0) goto code_r0x00407f7e;\n                iVar3 = fcn.0040e732(unaff_EBP + -0x24, \"a020\");\n                *(unaff_EBP + -0x14) = iVar3;\n                if (-1 < iVar3) {\n                    uVar4 = fcn.0040d473();\n                    (*_sym.imp.MSVCRT.dll__strlwr)(uVar4);\n                    pcVar8 = \"a020 ok\";\ncode_r0x00407f71:\n                    uVar4 = fcn.0040d473(pcVar8);\n                    (*pcVar2)(uVar4);\n                    goto code_r0x00407f7e;\n                }\ncode_r0x00407fa8:\n                fcn.0040dd08();\n                *0x423710 = *(unaff_EBP + -0xd);\n            }\ncode_r0x00407b6d:\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00401054();\n            iVar3 = *(unaff_EBP + -0x14);\n            goto code_r0x00408055;\n        }\ncode_r0x0040803c:\n        iVar3 = *(unaff_EBP + -0x14);\n        *0x423710 = uVar7;\n        if (iVar3 < 0) goto code_r0x00408055;\n    }\n    iVar3 = fcn.00406aa0(*(unaff_EBP + 8));\ncode_r0x00408055:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar3;\n}\n",
        "token_count": 3884
    },
    "00408063": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_d8h\n// WARNING: Variable defined which should be unmapped: var_cch\n\nint32_t __cdecl\nfcn.00408063(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char *pcVar6;\n    int32_t unaff_EBP;\n    int32_t iVar7;\n    uint unaff_EDI;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    bool bVar9;\n    uint uVar10;\n    uint var_d8h;\n    uint var_cch;\n    uint var_c0h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_38h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    iVar7 = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    bVar9 = *0x41d630 == '\\0';\n    *(unaff_EBP + -4) = 4;\n    if ((bVar9) || (iVar1 = fcn.00401156(),  iVar1 == 0)) goto code_r0x00408632;\n    uVar5 = *(unaff_EBP + 0x14);\n    iVar1 = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0x70) = 0;\n    *0x424514 = 0;\n    *(unaff_EBP + -0xb4) = unaff_EBP + -0x44;\n    *(unaff_EBP + -0xb0) = unaff_EBP + -0xc0;\n    *(unaff_EBP + -0xac) = unaff_EBP + -0xcc;\n    *(unaff_EBP + -0xa8) = unaff_EBP + -0x68;\n    *(unaff_EBP + -0xa0) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0xa4) = 1;\n    *(unaff_EBP + -0x98) = uVar5;\n    *(unaff_EBP + -0x90) = 0x41d020;\n    *(unaff_EBP + -0x8c) = 0x41d630;\n    *(unaff_EBP + -0x7c) = iVar1;\n    *0x42451b = 0;\n    *0x42451a = 0;\n    *0x424518 = 0;\n    *0x41d949 = 0;\n    *0x41d521 = '\\0';\n    iVar7 = fcn.00407915(0x41d020);\n    *(unaff_EBP + -0x10) = iVar7;\n    if (iVar7 != 0) {\ncode_r0x0040817d:\n        iVar7 = *(unaff_EBP + -0x10);\n        goto code_r0x00408632;\n    }\n    if (*0x41d521 != '\\0') {\n        *(unaff_EBP + -0x70) = 1;\n        *0x424514 = 0;\n        *0x424350 = 0;\n        *0x42434d = '\\x01';\n    }\n    uVar2 = *0x424514;\n    uVar3 = *0x424350;\n    *(unaff_EBP + -0x1c) = 0xffffffff;\n    *(unaff_EBP + -0x28) = 1;\n    if (uVar2 == 0) {\n        if ((uVar3 != 0) && (*0x42434d == '\\0')) goto code_r0x004081ea;\n    }\n    else if ((uVar3 == 0) || ((*0x42434d != '\\0' || (uVar2 < uVar3)))) {\n        *(unaff_EBP + -0x1c) = uVar2;\n    }\n    else {\ncode_r0x004081ea:\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    fcn.0040584b(1, unaff_EBP + -0x1c);\n    uVar3 = *(unaff_EBP + 0x20);\n    if ((*0x42434d != '\\0') && (*(unaff_EBP + -0x1c) <= uVar3 && uVar3 != *(unaff_EBP + -0x1c))) {\n        fcn.00401292(\"Message is too big to send.  Please try a smaller message.\\n\", unaff_EDI);\n        fcn.0040e934();\n        fcn.0040dd08();\n        iVar7 = 0xe;\n        goto code_r0x00408632;\n    }\n    uVar2 = uVar3 / *(unaff_EBP + -0x1c);\n    if (uVar3 % *(unaff_EBP + -0x1c) != 0) {\n        uVar2 = uVar2 + 1;\n    }\n    if (uVar2 < 2) {\n        *(unaff_EBP + -0x88) = 0;\n        *(unaff_EBP + -0x84) = 0;\n        *(unaff_EBP + -0x80) = 0;\n        *(unaff_EBP + -0x7c) = 0;\n        *(unaff_EBP + -0x74) = 0;\n        *(unaff_EBP + -0x78) = 0;\n        *0x42529c = 0;\n        fcn.0040a9d8(unaff_EBP + -0xb4);\n        iVar7 = fcn.0040ea4e(unaff_EBP + -0x44, *(unaff_EBP + 8), unaff_EBP + -0x68, 1, uVar5, 0, 0, 0);\n        if (iVar7 != 0) goto code_r0x00408632;\n        uVar10 = fcn.00405f47(unaff_EBP + -0x44, 1, uVar5, iVar1);\n        *(unaff_EBP + -0x10) = uVar10;\n        fcn.0040e9f7(unaff_EBP + -0x44, 1, uVar5);\n        if (*(unaff_EBP + -0x10) != 0) goto code_r0x0040817d;\n        *(unaff_EBP + -0x18) = 0;\n        uVar5 = fcn.0040d473();\n        fcn.004068e2(uVar5, unaff_EBP + -0x58);\n        pcVar6 = fcn.0040d473();\n        if (pcVar6 != NULL) {\n            for (; *pcVar6 != '\\0'; pcVar6 = pcVar6 + iVar7 + 1) {\n                iVar7 = sub.MSVCRT.dll_strlen(pcVar6);\n                *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n            }\n        }\n        *(unaff_EBP + -0x14) = 0;\n        if (*(unaff_EBP + -0x18) < 1) goto code_r0x00408623;\n        iVar7 = *(unaff_EBP + -0x10);\n        iVar1 = *(unaff_EBP + -0x14);\n        do {\n            fcn.00401062();\n            *(unaff_EBP + -4) = 6;\n            if ((iVar1 != 0) && (*0x41d734 != 0)) {\n                fcn.00401292(\"*** Delay %u seconds...\\n\", *0x41d734);\n                (*_sym.imp.KERNEL32.dll_Sleep)(*0x41d734 * 1000);\n            }\n            fcn.0040106f();\n            if (*0x424510 < 1) {\n                fcn.00401145(0x42419c);\n            }\n            else {\n                pcVar6 = fcn.0040d473();\n                if (0 < iVar1) {\n                    iVar1 = *(unaff_EBP + -0x14);\n                    do {\n                        iVar8 = sub.MSVCRT.dll_strlen(pcVar6);\n                        iVar1 = iVar1 + -1;\n                        pcVar6 = pcVar6 + iVar8 + 1;\n                    } while (iVar1 != 0);\n                }\n                iVar1 = 0;\n                if (0 < *0x424510) {\n                    do {\n                        if (*pcVar6 == '\\0') break;\n                        if (iVar1 != 0) {\n                            fcn.00401136();\n                        }\n                        fcn.00401119(pcVar6);\n                        iVar8 = sub.MSVCRT.dll_strlen(pcVar6);\n                        iVar1 = iVar1 + 1;\n                        pcVar6 = pcVar6 + iVar8 + 1;\n                    } while (iVar1 < *0x424510);\n                }\n            }\n            iVar1 = fcn.0040deb4();\n            iVar8 = 1;\n            while ((iVar8 <= iVar1 || (iVar1 == -1))) {\n                if (1 < iVar1) {\n                    fcn.00401292(\"Try number %d of %d.\\n\", iVar8);\n                }\n                if (1 < iVar8) {\n                    (*_sym.imp.KERNEL32.dll_Sleep)(15000);\n                }\n                if (*(unaff_EBP + -0x28) == 0) {\n                    iVar7 = fcn.00406aa0(0x41d020);\n                }\n                if ((iVar7 == 0) && (iVar7 = fcn.004071cd(0x41e070, 0x423d30),  iVar7 == 0)) {\n                    uVar5 = fcn.0040d473();\n                    iVar7 = fcn.00407614(uVar5);\n                    if (iVar7 != 0) goto code_r0x004088b7;\n                    if (*0x41d521 == '\\0') {\n                        uVar10 = 0xfa;\n                        uVar5 = fcn.0040d473();\n                        iVar7 = fcn.0040e9b8(uVar5, uVar10, 0);\n                    }\n                    else {\n                        uVar5 = fcn.0040d473();\n                        iVar7 = fcn.0040e983(uVar5);\n                    }\n                    if (iVar7 == 0) {\n                        fcn.0040e934();\n                        goto code_r0x004088bc;\n                    }\n                }\n                else {\ncode_r0x004088b7:\n                    if (iVar7 == -2) {\ncode_r0x004088bc:\n                        iVar1 = 1;\n                        iVar8 = 2;\n                    }\n                }\n                fcn.0040dd08();\n                *(unaff_EBP + -0x28) = 0;\n                iVar8 = iVar8 + 1;\n            }\n            if (*0x424510 < 1) {\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x18);\n            }\n            else {\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + *0x424510;\n            }\n            *(unaff_EBP + -4) = 4;\n            fcn.00401054();\n            iVar1 = *(unaff_EBP + -0x14);\n        } while (iVar1 < *(unaff_EBP + -0x18));\n    }\n    else {\n        fcn.00401292(\"Sending %u parts for this message.\\n\", uVar2);\n        *(unaff_EBP + -0x6c) = 0xffffffff;\n        iVar7 = 0;\n        if (0 < iVar1) {\n            do {\n                fcn.0040580a(iVar7, unaff_EBP + -0x4c, unaff_EBP + -0x2c, unaff_EBP + -0x5c);\n                uVar3 = *(unaff_EBP + -0x2c) / *(unaff_EBP + -0x1c);\n                if (*(unaff_EBP + -0x2c) % *(unaff_EBP + -0x1c) != 0) {\n                    uVar3 = uVar3 + 1;\n                }\n                if (1 < uVar3) {\n                    *0x41eaaa = 1;\n                    *0x41ccc9 = 0;\n                    *0x41e069 = 0;\n                    *0x41d844 = 1;\n                    break;\n                }\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar1);\n        }\n        iVar7 = fcn.0040deb4();\n        iVar8 = 1;\n        while ((iVar8 <= iVar7 || (iVar7 == -1))) {\n            iVar4 = fcn.004071cd(0x41e070, 0x423d30);\n            *(unaff_EBP + -0x10) = iVar4;\n            if ((iVar4 == 0) || (iVar4 == -2)) break;\n            iVar8 = iVar8 + 1;\n        }\n        *(unaff_EBP + -0x24) = 0;\n        if (0 < iVar1) {\n            do {\n                if (*(unaff_EBP + -0x10) != 0) break;\n                if ((*(unaff_EBP + -0x24) != 0) && (*0x41d734 != 0)) {\n                    fcn.00401292(\"*** Delay %u seconds...\\n\", *0x41d734);\n                    (*_sym.imp.KERNEL32.dll_Sleep)(*0x41d734 * 1000);\n                }\n                fcn.0040580a(*(unaff_EBP + -0x24), unaff_EBP + -0x4c, unaff_EBP + -0x2c, unaff_EBP + -0x5c);\n                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x2c) / *(unaff_EBP + -0x1c);\n                if (*(unaff_EBP + -0x2c) % *(unaff_EBP + -0x1c) != 0) {\n                    *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 1;\n                }\n                fcn.0040106f();\n                iVar8 = 0;\n                iVar1 = 0;\n                *(unaff_EBP + -0x28) = 0;\n                *0x42529c = 0;\n                if (0 < *(unaff_EBP + -0x20)) {\ncode_r0x0040835e:\n                    if (*(unaff_EBP + -0x10) == 0) {\n                        uVar5 = *(unaff_EBP + -0x24);\n                        *(unaff_EBP + -0x84) = *(unaff_EBP + -0x20);\n                        *(unaff_EBP + -0x78) = *(unaff_EBP + -0x4c);\n                        *(unaff_EBP + -0x74) = *(unaff_EBP + -0x2c);\n                        iVar8 = iVar8 + 1;\n                        *(unaff_EBP + -0x88) = iVar8;\n                        *(unaff_EBP + -0x80) = uVar5;\n                        fcn.0040a9d8(unaff_EBP + -0xb4);\n                        iVar7 = fcn.0040ea4e(unaff_EBP + -0x44, *(unaff_EBP + 8), unaff_EBP + -0x68, 1, \n                                             *(unaff_EBP + 0x14), iVar1, iVar8, uVar5);\n                        if (iVar7 == 0) {\n                            *(unaff_EBP + 8) = 0;\n                            uVar3 = *(unaff_EBP + -0x2c) - iVar1;\n                            *(unaff_EBP + -0x48) = *(unaff_EBP + -0x1c);\n                            if (uVar3 < *(unaff_EBP + -0x1c)) {\n                                *(unaff_EBP + -0x48) = uVar3;\n                            }\n                            uVar5 = fcn.00405a96(unaff_EBP + -0x44, 1, *(unaff_EBP + 0x14), iVar1, unaff_EBP + -0x48, \n                                                 iVar8, *(unaff_EBP + -0x20), uVar5, unaff_EBP + -0x6c);\n                            *(unaff_EBP + -0x10) = uVar5;\n                            if (iVar8 == *(unaff_EBP + -0x20)) {\n                                fcn.0040e9f7(unaff_EBP + -0x44, 1, *(unaff_EBP + 0x14));\n                            }\n                            fcn.0040106f();\n                            if (*(unaff_EBP + -0x10) == 0) {\n                                *(unaff_EBP + -0x18) = 0;\n                                uVar5 = fcn.0040d473();\n                                fcn.004068e2(uVar5, unaff_EBP + -0x58);\n                                pcVar6 = fcn.0040d473();\n                                if (pcVar6 != NULL) {\n                                    fcn.00401062();\n                                    for (; *pcVar6 != '\\0'; pcVar6 = pcVar6 + iVar7 + 1) {\n                                        iVar7 = sub.MSVCRT.dll_strlen(pcVar6);\n                                        *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n                                    }\n                                    fcn.00401054();\n                                }\n                                *(unaff_EBP + -0x14) = 0;\n                                if (0 < *(unaff_EBP + -0x18)) {\ncode_r0x00408479:\n                                    fcn.00401062();\n                                    *(unaff_EBP + -4) = 5;\n                                    if ((*(unaff_EBP + -0x14) != 0) && (*0x41d734 != 0)) {\n                                        fcn.00401292(\"*** Delay %u seconds...\\n\", *0x41d734);\n                                        (*_sym.imp.KERNEL32.dll_Sleep)(*0x41d734 * 1000);\n                                    }\n                                    if (*0x424510 < 1) {\n                                        fcn.00401145(0x42419c);\n                                    }\n                                    else {\n                                        pcVar6 = fcn.0040d473();\n                                        if (0 < *(unaff_EBP + -0x14)) {\n                                            iVar7 = *(unaff_EBP + -0x14);\n                                            do {\n                                                iVar1 = sub.MSVCRT.dll_strlen(pcVar6);\n                                                iVar7 = iVar7 + -1;\n                                                pcVar6 = pcVar6 + iVar1 + 1;\n                                            } while (iVar7 != 0);\n                                        }\n                                        iVar7 = 0;\n                                        if (0 < *0x424510) {\n                                            do {\n                                                if (*pcVar6 == '\\0') break;\n                                                if (iVar7 != 0) {\n                                                    fcn.00401136();\n                                                }\n                                                fcn.00401119(pcVar6);\n                                                iVar1 = sub.MSVCRT.dll_strlen(pcVar6);\n                                                iVar7 = iVar7 + 1;\n                                                pcVar6 = pcVar6 + iVar1 + 1;\n                                            } while (iVar7 < *0x424510);\n                                        }\n                                    }\n                                    iVar7 = fcn.0040deb4();\n                                    iVar1 = 1;\n                                    do {\n                                        if ((iVar7 < iVar1) && (iVar7 != -1)) goto code_r0x004085c8;\n                                        if (1 < iVar7) {\n                                            fcn.00401292(\"Try number %d of %d.\\n\", iVar1);\n                                        }\n                                        if (1 < iVar1) {\n                                            (*_sym.imp.KERNEL32.dll_Sleep)(15000);\n                                        }\n                                        if (*(unaff_EBP + -0x10) == 0) {\n                                            uVar5 = fcn.0040d473();\n                                            iVar4 = fcn.00407614(uVar5);\n                                            *(unaff_EBP + -0x10) = iVar4;\n                                            if (iVar4 != 0) goto code_r0x004085b6;\n                                            if (1 < *(unaff_EBP + -0x20)) {\n                                                fcn.00401292(\"Sending part %u of %u\\n\", iVar8);\n                                            }\n                                            uVar10 = 0xfa;\n                                            uVar5 = fcn.0040d473();\n                                            iVar4 = fcn.0040e9b8(uVar5, uVar10, 0);\n                                            *(unaff_EBP + -0x10) = iVar4;\n                                            if (iVar4 == 0) goto code_r0x004085cc;\n                                        }\n                                        else {\ncode_r0x004085b6:\n                                            if (*(unaff_EBP + -0x10) == -2) goto code_r0x004085c2;\n                                        }\n                                        iVar1 = iVar1 + 1;\n                                    } while( true );\n                                }\n                                goto code_r0x004085fb;\n                            }\n                            goto code_r0x0040817d;\n                        }\n                        goto code_r0x00408632;\n                    }\n                }\ncode_r0x0040860a:\n                *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + 1;\n            } while (*(unaff_EBP + -0x24) < *(unaff_EBP + 0x1c));\n        }\n        fcn.0040e934();\n        fcn.0040dd08();\ncode_r0x00408623:\n        iVar7 = *(unaff_EBP + -0x10);\n    }\n    fcn.0040107e();\ncode_r0x00408632:\n    *(unaff_EBP + -4) = 3;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 2;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 1;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar7;\ncode_r0x004085c2:\n    iVar7 = 1;\n    iVar1 = 2;\ncode_r0x004085c8:\n    if (iVar7 < iVar1) {\ncode_r0x004085cc:\n        if (*0x424510 < 1) {\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x18);\n        }\n        else {\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + *0x424510;\n        }\n    }\n    *(unaff_EBP + -4) = 4;\n    fcn.00401054();\n    if (*(unaff_EBP + -0x18) <= *(unaff_EBP + -0x14)) goto code_r0x004085f8;\n    goto code_r0x00408479;\ncode_r0x004085f8:\n    iVar1 = *(unaff_EBP + -0x28);\ncode_r0x004085fb:\n    iVar1 = iVar1 + *(unaff_EBP + -0x48);\n    *(unaff_EBP + -0x28) = iVar1;\n    if (*(unaff_EBP + -0x20) <= iVar8) goto code_r0x0040860a;\n    goto code_r0x0040835e;\n}\n",
        "token_count": 5693
    },
    "00408902": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408902(int32_t *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2[2] == 0) {\n        fcn.0040107e();\n    }\n    else {\n        fcn.0040109b(param_2[1] + 1);\n        sub.MSVCRT.dll_memcpy(*param_1, *param_2, param_2[1]);\n        iVar1 = param_2[1];\n        param_1[1] = iVar1;\n        *(iVar1 + *param_1) = 0;\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00408953": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nvoid __cdecl fcn.00408953(uint arg_8h, uint arg_ch, uint dest, uint arg_14h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    char cVar3;\n    code *pcVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uint8_t *puVar8;\n    uint32_t *puVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint32_t *puVar15;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_48h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    if ((*(unaff_EBP + 0x14) != 8) && (*(unaff_EBP + 0x14) != 7)) goto code_r0x00409328;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    uVar6 = fcn.00401156();\n    if (uVar6 < 5) {\n        puVar15 = *(unaff_EBP + 0xc);\n        if (puVar15 == NULL) goto code_r0x00409328;\n        if ((*puVar15 == 0) || (uVar6 = fcn.00401156(),  (uVar6 & 1) != 0)) {\n            *puVar15 = 0;\n        }\n        else {\ncode_r0x00408d79:\n            *puVar15 = 2;\n        }\n    }\n    else {\n        piVar7 = fcn.0040d473();\n        if (((*piVar7 == -0x11) && (*(piVar7 + 1) == -0x45)) && (*(piVar7 + 2) == -0x41)) {\n            fcn.00401062();\n            *(unaff_EBP + -4) = 0;\n            fcn.00401119(piVar7 + 3);\n            puVar15 = *(unaff_EBP + 0xc);\n            if (puVar15 != NULL) {\n                *puVar15 = 0;\n            }\n            puVar8 = fcn.0040d473();\n            uVar5 = *puVar8;\n            do {\n                if (0x7f < uVar5) {\n                    if (*(unaff_EBP + 0x10) != 0) {\n                        sub.MSVCRT.dll_strcpy(*(unaff_EBP + 0x10), \"UTF-8\");\n                    }\n                    *(unaff_EBP + -0x24) = 1;\n                    if (*(unaff_EBP + 0x14) == 7) {\n                        fcn.00408941(unaff_EBP + -0x48);\n                        puVar8 = fcn.0040d473();\n                        fcn.0040106f();\n                        iVar11 = 0;\n                        if (*puVar8 != 0) goto code_r0x00408a34;\n                    }\n                    break;\n                }\n                puVar8 = puVar8 + 1;\n                uVar5 = *puVar8;\n            } while (uVar5 != 0);\n            goto code_r0x00408a83;\n        }\n        iVar11 = *piVar7;\n        if ((iVar11 == 0xfeff) && (uVar6 = fcn.00401156(),  (uVar6 & 3) == 0)) {\n            puVar15 = *(unaff_EBP + 0xc);\n            if (puVar15 != NULL) {\n                *puVar15 = 4;\n            }\n        }\n        else {\n            if ((iVar11 != -0x20000) || (uVar6 = fcn.00401156(),  (uVar6 & 3) != 0)) {\n                iVar1 = *piVar7;\n                if ((iVar1 == -0x101) && (uVar6 = fcn.00401156(),  (uVar6 & 1) == 0)) {\n                    puVar15 = *(unaff_EBP + 0xc);\n                    if (puVar15 != NULL) {\n                        *puVar15 = 2;\n                    }\n                }\n                else {\n                    if ((iVar1 != -2) || (uVar6 = fcn.00401156(),  (uVar6 & 1) != 0)) {\n                        puVar15 = *(unaff_EBP + 0xc);\n                        if (puVar15 == NULL) goto code_r0x00409328;\n                        if ((*puVar15 != 0) && (uVar6 = fcn.00401156(),  (uVar6 & 1) == 0)) goto code_r0x00408d79;\n                        *puVar15 = 0;\n                        goto code_r0x00408da3;\n                    }\n                    puVar15 = *(unaff_EBP + 0xc);\n                    if (puVar15 != NULL) {\n                        *puVar15 = 0x82;\n                    }\n                }\n                *(unaff_EBP + -0x1c) = 1;\n                goto code_r0x00408da3;\n            }\n            puVar15 = *(unaff_EBP + 0xc);\n            if (puVar15 != NULL) {\n                *puVar15 = 0x84;\n            }\n        }\n        *(unaff_EBP + -0x1c) = 1;\n    }\n    goto code_r0x00408da3;\ncode_r0x00408c4f:\n    fcn.00401136(0x2b);\n    fcn.00410e90(unaff_EBP + -0x30, unaff_EBP + -0x48, 0, 0);\n    fcn.00401136(0x2d);\n    if (*(unaff_EBP + 0x10) != 0) {\n        sub.MSVCRT.dll_strcpy(*(unaff_EBP + 0x10), \"UTF-7\");\n        *(unaff_EBP + 0x10) = 0;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\n    iVar11 = *(unaff_EBP + -0x20);\n    for (; *puVar8 != 0; puVar8 = puVar8 + 1) {\ncode_r0x00408a34:\n        fcn.00401062();\n        uVar5 = *puVar8;\n        *(unaff_EBP + -4) = 1;\n        pcVar4 = _sym.imp.MSVCRT.dll_strchr;\n        if (uVar5 == 0x2d) {\n            if (iVar11 != 0) {\n                fcn.00401136();\n            }\ncode_r0x00408a54:\n            fcn.00401136(*puVar8);\n        }\n        else {\n            if (uVar5 != 0x2b) {\n                if (((0x20 < uVar5) && (iVar11 = (*_sym.imp.MSVCRT.dll_strchr)(*0x41cbe0, uVar5),  iVar11 == 0)) &&\n                   ((iVar11 = (*pcVar4)(\"\\'(),-./:?\", *puVar8),  iVar11 == 0 &&\n                    (iVar11 = (*pcVar4)(\"!\\\"#$%&*;<=>@[]^_`{|}UTF-7\", *puVar8),  iVar11 == 0)))) {\n                    fcn.0040106f();\n                    *(unaff_EBP + -0x20) = 1;\ncode_r0x00408b08:\n                    do {\n                        pcVar4 = _sym.imp.MSVCRT.dll_strchr;\n                        uVar5 = *puVar8;\n                        if (0x7f < uVar5) {\n                            do {\n                                if ((0xef < uVar5) || (uVar5 < 0xc0)) {\n                                    *(unaff_EBP + -4) = 0;\n                                    fcn.00401054();\n                                    *(unaff_EBP + -4) = 0xffffffff;\n                                    fcn.00401054();\n                                    goto code_r0x00409328;\n                                }\n                                iVar11 = 2 - (uVar5 < 0xe0);\n                                uVar10 = 6U - iVar11 & 0xffff0000 | uVar5;\n                                uVar6 = (1 << (6U - iVar11 & 0x1f)) - 1U & uVar10;\n                                puVar8 = puVar8 + 1;\n                                *(unaff_EBP + -0x18) = uVar6;\n                                if (iVar11 != 0) {\n                                    do {\n                                        uVar10 = uVar10 & 0xffffff00 | *puVar8 & 0xffff003f;\n                                        uVar6 = uVar6 << 6 | uVar10;\n                                        puVar8 = puVar8 + 1;\n                                        iVar11 = iVar11 + -1;\n                                    } while (iVar11 != 0);\n                                    *(unaff_EBP + -0x18) = uVar6;\n                                }\n                                fcn.00401136(*(unaff_EBP + -0x17));\n                                fcn.00401136();\n                                uVar5 = *puVar8;\n                            } while (uVar5 < '\\0');\n                            do {\n                                uVar5 = *puVar8;\n                                if (uVar5 != 0x2b) {\n                                    if ((uVar5 != 0x2d) &&\n                                       (iVar11 = (*_sym.imp.MSVCRT.dll_strchr)(*0x41cbe0, uVar5, uVar6),  iVar11 == 0))\n                                    goto code_r0x00408b08;\n                                    iVar11 = fcn.00401156();\n                                    iVar12 = fcn.00401156();\n                                    if ((iVar11 * 8 + 5U) / 6 + 1 < (iVar12 * 8 + 0xdU) / 6) goto code_r0x00408b08;\n                                }\n                                fcn.00401136(0);\n                                uVar6 = *puVar8;\n                                fcn.00401136();\n                                puVar8 = puVar8 + 1;\n                            } while( true );\n                        }\n                        if ((((uVar5 < 0x21) || (iVar11 = (*_sym.imp.MSVCRT.dll_strchr)(*0x41cbe0, uVar5),  iVar11 != 0)\n                             ) || (iVar11 = (*pcVar4)(\"\\'(),-./:?\", *puVar8),  iVar11 != 0)) ||\n                           (iVar11 = (*pcVar4)(\"!\\\"#$%&*;<=>@[]^_`{|}UTF-7\", *puVar8),  iVar11 != 0))\n                        goto code_r0x00408c4f;\n                        fcn.00401136(0);\n                        fcn.00401136(*puVar8);\n                        puVar8 = puVar8 + 1;\n                    } while( true );\n                }\n                goto code_r0x00408a54;\n            }\n            fcn.00401119();\n        }\n        iVar11 = 0;\n        *(unaff_EBP + -4) = 0;\n        fcn.00401054();\n    }\n    if (iVar11 != 0) {\n        fcn.00401136();\n    }\ncode_r0x00408a83:\n    fcn.00408941(unaff_EBP + -0x48);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\ncode_r0x00408da3:\n    if ((puVar15 != NULL) && (*puVar15 != 0)) {\n        fcn.00401062();\n        *(unaff_EBP + -4) = 2;\n        fcn.0040106f();\n        puVar9 = fcn.0040d473();\n        uVar6 = *puVar15;\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) & 7;\n        uVar10 = fcn.00401156();\n        *(unaff_EBP + -0x18) = uVar10 / *(unaff_EBP + -0x20);\n        if (*(unaff_EBP + -0x1c) != 0) {\n            puVar9 = puVar9 + *(unaff_EBP + -0x20);\n            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -1;\n        }\n        if ((*(unaff_EBP + 0x14) == 7) && ((uVar6 == 2 || (uVar6 == 0x82)))) {\n            iVar11 = fcn.00401156();\n            iVar11 = iVar11 * 3;\n            fcn.0040109b(iVar11);\n            *(unaff_EBP + 0x14) = 0;\n            if (*(unaff_EBP + -0x18) != 0) {\n                do {\n                    fcn.00401062();\n                    uVar6 = *puVar15;\n                    uVar2 = *puVar9;\n                    uVar10 = uVar2;\n                    *(unaff_EBP + -4) = 3;\n                    *(unaff_EBP + -0x10) = uVar10;\n                    if (uVar6 == 0x82) {\n                        uVar10 = CONCAT11(uVar2, uVar2 >> 8);\n                        *(unaff_EBP + -0x10) = uVar10;\n                    }\n                    if (uVar10 == 0x2d) {\n                        if (*(unaff_EBP + 0x14) != 0) {\n                            fcn.00401136(0x2d);\ncode_r0x00408ed2:\n                            uVar10 = *(unaff_EBP + -0x10);\n                        }\ncode_r0x00408ed5:\n                        fcn.00401136(uVar10);\ncode_r0x00408ede:\n                        uVar6 = *puVar15;\n                        *(unaff_EBP + 0x14) = 0;\n                        puVar9 = puVar9 + (uVar6 & 7);\n                        *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -1;\n                    }\n                    else {\n                        if (uVar10 == 0x2b) {\n                            fcn.00401119(0x41759c);\n                            goto code_r0x00408ede;\n                        }\n                        if (uVar10 < 0x7f) {\n                            if (uVar10 < 0x21) goto code_r0x00408ed5;\n                            iVar12 = (*_sym.imp.MSVCRT.dll_strchr)(*0x41cbe0, uVar10);\n                            if (((iVar12 != 0) ||\n                                (iVar12 = (*_sym.imp.MSVCRT.dll_strchr)(\"\\'(),-./:?\", *(unaff_EBP + -0x10)), \n                                iVar12 != 0)) ||\n                               (iVar12 = (*_sym.imp.MSVCRT.dll_strchr)\n                                                   (\"!\\\"#$%&*;<=>@[]^_`{|}UTF-7\", *(unaff_EBP + -0x10)),  iVar12 != 0))\n                            goto code_r0x00408ed2;\n                        }\n                        fcn.0040106f();\n                        *(unaff_EBP + 0x14) = 1;\n                        *(unaff_EBP + -0x24) = 1;\ncode_r0x004090ba:\n                        if (*(unaff_EBP + -0x18) != 0) {\n                            uVar6 = *puVar15;\n                            uVar2 = *puVar9;\n                            uVar10 = uVar2;\n                            *(unaff_EBP + -0x10) = uVar10;\n                            if (uVar6 == 0x82) {\n                                uVar10 = CONCAT11(uVar2, uVar2 >> 8);\n                                *(unaff_EBP + -0x10) = uVar10;\n                            }\n                            if (uVar10 < 0x80) {\n                                if (((uVar10 < 0x21) ||\n                                    (iVar11 = (*_sym.imp.MSVCRT.dll_strchr)(*0x41cbe0, uVar10),  iVar11 != 0)) ||\n                                   ((iVar11 = (*_sym.imp.MSVCRT.dll_strchr)(\"\\'(),-./:?\", *(unaff_EBP + -0x10)), \n                                    iVar11 != 0 ||\n                                    (iVar11 = (*_sym.imp.MSVCRT.dll_strchr)\n                                                        (\"!\\\"#$%&*;<=>@[]^_`{|}UTF-7\", *(unaff_EBP + -0x10)), \n                                    iVar11 != 0)))) goto code_r0x004090c4;\n                                fcn.00401136(0);\n                                iVar11 = *(unaff_EBP + -0x10);\n                                fcn.00401136();\n                                puVar9 = puVar9 + (*puVar15 & 7);\n                                *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -1;\n                            }\n                            else {\n                                if (*(unaff_EBP + -0x18) == 0) goto code_r0x004090c4;\n                                do {\n                                    if (uVar10 < 0x80) break;\n                                    fcn.00401136(uVar10 >> 8);\n                                    iVar11 = *(unaff_EBP + -0x10);\n                                    fcn.00401136();\n                                    uVar6 = *puVar15;\n                                    puVar9 = puVar9 + (uVar6 & 7);\n                                    uVar2 = *puVar9;\n                                    uVar10 = uVar2;\n                                    *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -1;\n                                    *(unaff_EBP + -0x10) = uVar10;\n                                    if (uVar6 == 0x82) {\n                                        uVar10 = CONCAT11(uVar2, uVar2 >> 8);\n                                        *(unaff_EBP + -0x10) = uVar10;\n                                    }\n                                } while (*(unaff_EBP + -0x18) != 0);\n                                if (*(unaff_EBP + -0x18) == 0) goto code_r0x004090c4;\n                                do {\n                                    if (uVar10 == 0x2b) {\n                                        fcn.00401136(0);\n                                        fcn.00401136(*(unaff_EBP + -0x10));\n                                    }\n                                    else {\n                                        if ((uVar10 != 0x2d) &&\n                                           ((0x7f < uVar10 ||\n                                            ((iVar12 = (*_sym.imp.MSVCRT.dll_strchr)(*0x41cbe0, uVar10, iVar11), \n                                             iVar12 == 0 && (*(unaff_EBP + -0x10) != 0x2d)))))) break;\n                                        iVar12 = fcn.00401156();\n                                        iVar13 = fcn.00401156();\n                                        if ((iVar12 * 8 + 5U) / 6 + 1 < (iVar13 * 8 + 0x15U) / 6) break;\n                                        fcn.00401136(0);\n                                        fcn.00401136(*(unaff_EBP + -0x10));\n                                    }\n                                    uVar6 = *puVar15;\n                                    puVar9 = puVar9 + (uVar6 & 7);\n                                    uVar2 = *puVar9;\n                                    uVar10 = uVar2;\n                                    *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -1;\n                                    *(unaff_EBP + -0x10) = uVar10;\n                                    if (uVar6 == 0x82) {\n                                        uVar10 = CONCAT11(uVar2, uVar2 >> 8);\n                                        *(unaff_EBP + -0x10) = uVar10;\n                                    }\n                                } while (*(unaff_EBP + -0x18) != 0);\n                            }\n                            goto code_r0x004090ba;\n                        }\ncode_r0x004090c4:\n                        fcn.00401136(0x2b);\n                        fcn.00410e90(unaff_EBP + -0x30, unaff_EBP + -0x3c, 0, 0);\n                        iVar11 = 0x2d;\n                        fcn.00401136();\n                        if (*(unaff_EBP + 0x10) != 0) {\n                            sub.MSVCRT.dll_strcpy(*(unaff_EBP + 0x10), \"UTF-7\");\n                            *(unaff_EBP + 0x10) = 0;\n                        }\n                    }\n                    *(unaff_EBP + -4) = 2;\n                    fcn.00401054();\n                } while (*(unaff_EBP + -0x18) != 0);\n                if (*(unaff_EBP + 0x14) != 0) {\n                    iVar11 = 0x2d;\n                    fcn.00401136();\n                }\n            }\n        }\n        else {\n            if ((uVar6 == 4) || (uVar6 == 0x84)) {\n                iVar11 = fcn.00401156();\n                iVar11 = iVar11 * 6;\n            }\n            else {\n                iVar11 = fcn.00401156();\n                iVar11 = iVar11 * 3;\n            }\n            fcn.0040109b(iVar11);\n            iVar12 = *(unaff_EBP + -0x18);\n            while (iVar12 != 0) {\n                uVar6 = *puVar15;\n                if (uVar6 == 4) {\n                    uVar10 = *puVar9;\n                }\n                else if (uVar6 == 2) {\n                    uVar10 = *puVar9;\n                }\n                else if (uVar6 == 0x84) {\n                    uVar10 = *puVar9;\n                    uVar10 = (uVar10 & 0xff0000 | uVar10 >> 0x10) >> 8 | (uVar10 << 0x10 | uVar10 & 0xff00) << 8;\n                }\n                else {\n                    uVar10 = CONCAT11(*puVar9, *puVar9 >> 8);\n                }\n                *(unaff_EBP + -0x10) = uVar10;\n                if (uVar10 < 0x80) {\n                    iVar11 = unaff_EBP + -0x10;\n                    fcn.004010e1();\n                }\n                else {\n                    iVar11 = 1;\n                    *(unaff_EBP + 0x14) = 0xb;\n                    if (((uVar6 & 7) == 2) && ((uVar10 & 0xfffffc00) == 0xd800)) {\n                        uVar2 = *(puVar9 + 2);\n                        uVar14 = uVar2;\n                        if (uVar6 == 0x82) {\n                            uVar14 = CONCAT11(uVar2, uVar14 >> 8);\n                        }\n                        if ((uVar14 & 0xfffffc00) == 0xdc00) {\n                            uVar10 = ((uVar10 & 0x3ff) + 0x40) * 0x400 + (uVar14 & 0x3ff);\n                            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -1;\n                            *(unaff_EBP + -0x10) = uVar10;\n                            puVar9 = puVar9 + 2;\n                        }\n                    }\n                    *(unaff_EBP + -0x24) = 1;\n                    if (*(unaff_EBP + 0x10) != 0) {\n                        sub.MSVCRT.dll_strcpy(*(unaff_EBP + 0x10), \"UTF-8\");\n                        *(unaff_EBP + 0x10) = 0;\n                        uVar10 = *(unaff_EBP + -0x10);\n                    }\n                    do {\n                        if (uVar10 < 1 << (*(unaff_EBP + 0x14) & 0x1f)) break;\n                        *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) + 5;\n                        iVar11 = iVar11 + 1;\n                    } while (*(unaff_EBP + 0x14) < 0x1a);\n                    cVar3 = -iVar11;\n                    *(unaff_EBP + -0x20) = ('\\x01' << (iVar11 + 1U & 0x1f)) + -1 << (cVar3 + 7U & 0x1f);\n                    uVar5 = ('\\x01' << (cVar3 + 6U & 0x1f)) - 1;\n                    iVar12 = iVar11 * 6;\n                    while( true ) {\n                        *(unaff_EBP + 0x17) = uVar10 >> (iVar12 & 0x1f) & uVar5 | *(unaff_EBP + -0x20);\n                        fcn.004010e1();\n                        iVar11 = iVar11 + -1;\n                        iVar12 = iVar12 + -6;\n                        uVar5 = 0x3f;\n                        *(unaff_EBP + -0x20) = 0x80;\n                        if (iVar11 == 0) break;\n                        uVar10 = *(unaff_EBP + -0x10);\n                    }\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) & 0x3f | 0x80;\n                    iVar11 = unaff_EBP + -0x10;\n                    fcn.004010e1(iVar11, 1);\n                    puVar15 = *(unaff_EBP + 0xc);\n                }\n                puVar9 = puVar9 + (*puVar15 & 7);\n                piVar7 = unaff_EBP + -0x18;\n                *piVar7 = *piVar7 + -1;\n                iVar12 = *piVar7;\n            }\n        }\n        fcn.00408941(unaff_EBP + -0x3c, iVar11);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00401054();\n    }\n    if ((*(unaff_EBP + -0x24) != 0) && (puVar15 != NULL)) {\n        *puVar15 = 1;\n    }\ncode_r0x00409328:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 6098
    },
    "004098d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004098d5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((param_1 == 0) && (iVar1 = fcn.00409334(0x80000002),  iVar1 == 0)) {\n        return;\n    }\n    fcn.00409334(0x80000001);\n    return;\n}\n",
        "token_count": 84
    },
    "00409a85": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409a85(char *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t hKey;\n    uint uVar4;\n    uint lpSubKey;\n    uint phkResult;\n    \n    phkResult = 0;\n    hKey = -0x7ffffffe - (arg_ch != 0);\n    sub.MSVCRT.dll_strcpy(&lpSubKey, \"SOFTWARE\\\\Public Domain\\\\Blat\");\n    iVar2 = sub.MSVCRT.dll_strcmp(arg_8h, \"<default>\");\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, &lpSubKey, 0, 0xf003f, &phkResult);\n        if (iVar2 == 0) {\n            do {\n                arg_ch = 0x101;\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumValueA)(phkResult, 0, 0x424578, &arg_ch, 0, 0, 0, 0);\n                if ((iVar2 == 0x103) || (iVar2 != 0)) goto code_r0x00409b64;\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(phkResult, 0x424578);\n            } while (iVar2 == 0);\njoined_r0x00409c50:\n            if (*0x423710 == '\\0') {\n                (*_sym.imp.MSVCRT.dll_printf)(\"Error in deleting profile %s in the registry\\n\", arg_8h);\n            }\n            return 0xb;\n        }\n        if (*0x423710 == '\\0') {\n            (*_sym.imp.MSVCRT.dll_printf)(\"Error in finding blat default profile in the registry\\n\");\n        }\ncode_r0x00409cb0:\n        uVar4 = 10;\n    }\n    else {\n        iVar2 = sub.MSVCRT.dll_strcmp(arg_8h, \"<all>\");\n        if (iVar2 == 0) {\n            fcn.00409993(hKey, &lpSubKey);\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyExA;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, &lpSubKey, 0, 0xf003f, &phkResult);\n            if (iVar2 == 0) {\n                (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(phkResult, 0x41632f);\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                puVar3 = (*_sym.imp.MSVCRT.dll_strrchr)(&lpSubKey, 0x5c);\n                *puVar3 = 0;\n                iVar2 = (*pcVar1)(hKey, &lpSubKey, 0, 0xf003f, &phkResult);\n                if (iVar2 == 0) {\n                    (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(phkResult, 0x41632f);\ncode_r0x00409b64:\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                }\n            }\n        }\n        else if (*arg_8h != '\\0') {\n            sub.MSVCRT.dll_strcat(&lpSubKey, 0x417834);\n            sub.MSVCRT.dll_strcat(&lpSubKey, arg_8h);\n            iVar2 = fcn.00409993(hKey, &lpSubKey);\n            if (iVar2 != 0) goto joined_r0x00409c50;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, &lpSubKey, 0, 0xf003f, &phkResult);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(phkResult, 0x41632f);\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                if (iVar2 == 0) goto code_r0x00409b6d;\n            }\n            if (*0x423710 == '\\0') {\n                (*_sym.imp.MSVCRT.dll_printf)(\"Error in finding blat profile %s in the registry\\n\", arg_8h);\n            }\n            goto code_r0x00409cb0;\n        }\ncode_r0x00409b6d:\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 1033
    },
    "0040a16f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040a16f(uint param_1, uint param_2)\n\n{\n    fcn.00409cb8(param_1, param_2);\n    if (*0x41d630 != '\\0') {\n        fcn.00401292(\"%s: %s \\\"%s\\\" %s %s %s%s\\n\", \"SMTP\");\n    }\n    if (*0x41d848 != '\\0') {\n        fcn.00401292(\"%s: %s \\\"%s\\\" %s %s %s%s\\n\", \"NNTP\");\n    }\n    if (*0x41d420 != '\\0') {\n        fcn.00401292(\"%s: %s - - %s %s%s\\n\", \"POP3\");\n    }\n    if (*0x41f3c0 != '\\0') {\n        fcn.00401292(\"%s: %s - - %s %s%s\\n\", \"IMAP\");\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "0040a3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a3e0(char *arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    char *pcVar1;\n    bool bVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint var_10h;\n    uint32_t var_ch;\n    char *var_8h;\n    uint32_t var_4h;\n    \n    var_8h = arg_8h;\n    var_ch = arg_14h;\n    if (arg_14h < arg_10h) {\n        while( true ) {\n            cVar6 = *var_8h;\n            while (cVar6 == ' ') {\n                var_8h = var_8h + 1;\n                cVar6 = *var_8h;\n            }\n            cVar6 = *var_8h;\n            if ((((cVar6 == '\\0') || (cVar6 == '\\r')) || (cVar6 == '\\n')) || (cVar6 == *0x41cb00)) break;\n            bVar2 = false;\n            var_4h = 0;\ncode_r0x0040a43b:\n            cVar6 = var_8h[var_4h];\n            if (cVar6 == '\\\\') {\n                if (var_8h[var_4h + 1] == '\\\"') {\ncode_r0x0040a459:\n                    var_4h = var_4h + 1;\n                }\n                else {\n                    if (arg_18h != 0) goto code_r0x0040a45c;\n                    if (var_8h[var_4h + 1] == '\\0') {\n                        var_4h = var_4h + 1;\n                        goto code_r0x0040a4a4;\n                    }\n                    if (bVar2) goto code_r0x0040a459;\n                }\ncode_r0x0040a489:\n                var_4h = var_4h + 1;\n                if (var_8h[var_4h] == '\\0') goto code_r0x0040a4a4;\n                goto code_r0x0040a43b;\n            }\ncode_r0x0040a45c:\n            if (cVar6 == '\\\"') {\n                bVar2 = !bVar2;\n                goto code_r0x0040a489;\n            }\n            if (cVar6 == ' ') {\ncode_r0x0040a485:\n                if (!bVar2) goto code_r0x0040a4a4;\n                goto code_r0x0040a489;\n            }\n            if (cVar6 != *0x41cb00) {\n                if ((cVar6 == '\\r') || (cVar6 == '\\n')) goto code_r0x0040a485;\n                goto code_r0x0040a489;\n            }\n            if (bVar2) goto code_r0x0040a489;\n            for (pcVar3 = var_8h + var_4h; *pcVar3 != '\\0'; pcVar3 = pcVar3 + 1) {\n                *pcVar3 = '\\0';\n            }\ncode_r0x0040a4a4:\n            iVar4 = (*_sym.imp.MSVCRT.dll_malloc)(var_4h + 1);\n            uVar8 = 0;\n            if (iVar4 == 0) {\n                return var_ch;\n            }\n            bVar2 = false;\n            arg_8h = NULL;\n            if (var_4h != 0) {\n                do {\n                    pcVar3 = var_8h + uVar8;\n                    pcVar1 = iVar4 + arg_8h;\n                    *pcVar1 = *pcVar3;\n                    if (*pcVar3 == '\\\\') {\n                        if (pcVar3[1] == '\\\"') {\n                            *pcVar1 = var_8h[uVar8 + 1];\n                            uVar8 = uVar8 + 1;\n                            goto code_r0x0040a60c;\n                        }\n                        if (arg_18h != 0) goto code_r0x0040a5de;\n                        if (pcVar3[1] == '\\0') {\n                            arg_8h = arg_8h + 1;\n                            break;\n                        }\n                        if (!bVar2) goto code_r0x0040a5de;\n                        uVar9 = uVar8 + 1;\n                        cVar6 = var_8h[uVar9];\n                        if (cVar6 < 'o') {\n                            if (cVar6 == 'n') {\n                                *pcVar1 = '\\n';\n                                uVar8 = uVar9;\n                            }\n                            else {\n                                if ('/' < cVar6) {\n                                    if ('7' < cVar6) {\n                                        if (cVar6 == 'a') {\n                                            *pcVar1 = '\\a';\n                                            uVar8 = uVar9;\n                                        }\n                                        else if (cVar6 == 'b') {\n                                            *pcVar1 = '\\b';\n                                            uVar8 = uVar9;\n                                        }\n                                        else {\n                                            if (cVar6 != 'f') goto code_r0x0040a56b;\n                                            *pcVar1 = '\\f';\n                                            uVar8 = uVar9;\n                                        }\n                                        goto code_r0x0040a60c;\n                                    }\n                                    iVar7 = 0;\n                                    do {\n                                        cVar6 = var_8h[uVar9];\n                                        if ((cVar6 < '0') || ('7' < cVar6)) break;\n                                        iVar7 = cVar6 + -0x30 + iVar7 * 8;\n                                        uVar9 = uVar9 + 1;\n                                    } while (iVar7 < 0x20);\n                                    cVar6 = iVar7;\n                                    uVar9 = uVar9 - 1;\n                                }\ncode_r0x0040a56b:\n                                *pcVar1 = cVar6;\n                                uVar8 = uVar9;\n                            }\n                        }\n                        else if (cVar6 == 'r') {\n                            *pcVar1 = '\\r';\n                            uVar8 = uVar9;\n                        }\n                        else if (cVar6 == 't') {\n                            *pcVar1 = '\\t';\n                            uVar8 = uVar9;\n                        }\n                        else if (cVar6 == 'v') {\n                            *pcVar1 = '\\v';\n                            uVar8 = uVar9;\n                        }\n                        else {\n                            if (cVar6 != 'x') goto code_r0x0040a56b;\n                            iVar7 = 0;\n                            iVar10 = uVar8 + 2;\n                            do {\n                                iVar5 = (*_sym.imp.MSVCRT.dll_tolower)(var_8h[iVar10]);\n                                if ((iVar5 < 0x30) || (0x66 < iVar5)) break;\n                                if (iVar5 < 0x3a) {\n                                    iVar5 = iVar5 + -0x39;\n                                }\n                                else {\n                                    if (iVar5 < 0x61) break;\n                                    iVar5 = iVar5 + -0x57;\n                                }\n                                iVar7 = iVar7 * 0x10 + iVar5;\n                                iVar10 = iVar10 + 1;\n                            } while (iVar7 < 0x10);\n                            *pcVar1 = iVar7;\n                            uVar8 = iVar10 - 1;\n                        }\ncode_r0x0040a60c:\n                        arg_8h = arg_8h + 1;\n                    }\n                    else {\ncode_r0x0040a5de:\n                        cVar6 = *pcVar3;\n                        if (cVar6 != '\\\"') {\n                            if ((((cVar6 == ' ') || (cVar6 == *0x41cb00)) || ((cVar6 == '\\r' || (cVar6 == '\\n')))) &&\n                               (!bVar2)) break;\n                            goto code_r0x0040a60c;\n                        }\n                        bVar2 = !bVar2;\n                    }\n                    uVar8 = uVar8 + 1;\n                } while (uVar8 < var_4h);\n            }\n            var_8h = var_8h + var_4h;\n            *(iVar4 + arg_8h) = 0;\n            *(arg_ch + var_ch * 4) = iVar4;\n            var_ch = var_ch + 1;\n            if (arg_10h <= var_ch) {\n                return var_ch;\n            }\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 1933
    },
    "0040a69a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040a69a(uint dest, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint *in_FS_OFFSET;\n    uint var_44h;\n    uint var_38h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401062();\n    fcn.00401062();\n    *(unaff_EBP + -0xd) = *0x41f5cc;\n    uVar2 = *0x41d949;\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0xe) = uVar2;\n    iVar3 = sub.MSVCRT.dll_strlen(0x41cee4);\n    if (iVar3 == 0) {\n        sub.MSVCRT.dll_strlen(*0x41b088);\n    }\n    iVar3 = *(unaff_EBP + 8);\n    fcn.00401119(iVar3);\n    fcn.0040118b(0x41632f);\n    uVar4 = fcn.0040d473(1);\n    iVar5 = fcn.00411d97(uVar4);\n    pcVar1 = _sym.imp.MSVCRT.dll_strchr;\n    if (iVar5 == 0) {\n        *(unaff_EBP + -0x14) = iVar3;\n        iVar5 = iVar3;\n        while (iVar5 = (*pcVar1)(iVar5, 0x20),  iVar5 != 0) {\n            if ((*(unaff_EBP + 0x14) == 0) || ((iVar5 - iVar3) + *(unaff_EBP + 0x10) < 0x4b)) {\n                *(unaff_EBP + -0x14) = iVar5;\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                if (*(unaff_EBP + -0x14) != iVar3) {\n                    iVar5 = *(unaff_EBP + -0x14);\n                }\n                if (iVar5 == 0) break;\n                fcn.004010e1(iVar3, iVar5 - iVar3);\n                fcn.00401119(0x417cdc);\n                iVar3 = iVar5 + 1;\n                *(unaff_EBP + 0x10) = 1;\n                *(unaff_EBP + -0x14) = iVar3;\n                iVar5 = iVar3;\n            }\n        }\n        fcn.00401119(iVar3);\n    }\n    else {\n        fcn.00401062();\n        *(unaff_EBP + -4) = 3;\n        fcn.0040106f();\n        iVar3 = fcn.00401156();\n        uVar4 = fcn.0040d473(1);\n        iVar5 = fcn.00411e7e(uVar4);\n        *0x41f5cc = 0;\n        *0x41d949 = 0;\n        iVar3 = (-(iVar3 % 3 != 0) & 4) + (iVar3 / 3) * 4;\n        if (*0x424682 == 'q') {\n            iVar3 = iVar5 + 1;\n        }\n        else if (*0x424682 == 'b') {\n            iVar5 = iVar3 + 1;\n        }\n        *(unaff_EBP + -0x14) = iVar3 < iVar5;\n        fcn.00401119(0x417cf4);\n        uVar4 = *0x41b088;\n        if (*0x41cee4 != '\\0') {\n            uVar4 = 0x41cee4;\n        }\n        fcn.00401119(uVar4);\n        if (*(unaff_EBP + -0x14) == 0) {\n            fcn.00401119(0x417cec);\n            fcn.00411fd9(unaff_EBP + -0x44, unaff_EBP + -0x38, 1);\n        }\n        else {\n            fcn.00401119(0x417cf0);\n            fcn.00410e90(unaff_EBP + -0x44, unaff_EBP + -0x38, 0, 1);\n        }\n        fcn.00401145(unaff_EBP + -0x2c);\n        if (*(unaff_EBP + 0x14) != 0) {\n            while( true ) {\n                iVar6 = 0x49 - *(unaff_EBP + 0x10);\n                iVar3 = fcn.00401156();\n                iVar5 = fcn.00401156();\n                if (iVar3 + iVar5 <= iVar6) break;\n                iVar3 = fcn.00401156();\n                uVar7 = iVar6 - iVar3;\n                iVar3 = fcn.0040d473();\n                if (*(unaff_EBP + -0x14) == 0) {\n                    if (*(iVar3 + -2 + uVar7) == '=') {\n                        uVar7 = uVar7 - 2;\n                    }\n                    else if (*(iVar3 + -1 + uVar7) == '=') {\n                        uVar7 = uVar7 - 1;\n                    }\n                }\n                else {\n                    uVar7 = uVar7 & 0xfffffffc;\n                }\n                uVar4 = fcn.0040d473(uVar7);\n                fcn.004010e1(uVar4);\n                uVar4 = fcn.0040d473(iVar3 + uVar7);\n                sub.MSVCRT.dll_strcpy(uVar4);\n                fcn.00401160();\n                fcn.00401119(\"?=\\r\\n \");\n                fcn.00401145();\n                *(unaff_EBP + 0x10) = 1;\n            }\n        }\n        fcn.00401145(unaff_EBP + -0x38);\n        fcn.00401119(0x417ce0);\n        *0x41f5cc = *(unaff_EBP + -0xd);\n        *0x41d949 = *(unaff_EBP + -0xe);\n        *(unaff_EBP + -4) = 2;\n        fcn.00401054();\n    }\n    if (*(unaff_EBP + 0xc) == 0) {\n        uVar4 = fcn.0040d473();\n        sub.MSVCRT.dll_strcpy(*(unaff_EBP + 8), uVar4);\n    }\n    else {\n        fcn.0040106f();\n        iVar3 = fcn.00401156();\n        if (iVar3 != 0) {\n            fcn.00401145(unaff_EBP + -0x20);\n        }\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1708
    },
    "0040a9d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: lpSystemTime\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a9d8(uint arg_8h)\n\n{\n    ulong uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t unaff_EBP;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint var_384h;\n    uint lpTimeZoneInformation;\n    uint var_130h;\n    uint var_dch;\n    uint s1;\n    uint dest;\n    uint var_bch;\n    uint var_b0h;\n    uint var_a4h;\n    uint var_98h;\n    uint var_8ch;\n    uint var_80h;\n    uint var_74h;\n    uint var_68h;\n    uint lpSystemTimeAsFileTime;\n    uint var_58h;\n    uint var_54h;\n    uint var_48h;\n    uint var_3ch;\n    char *lpSystemTime;\n    uint arg_10h;\n    uint var_2ch;\n    uint var_28h;\n    char *pcVar9;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint uVar10;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.004123b0();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 8;\n    *0x42529d = 0;\n    iVar4 = fcn.00401156();\n    if (iVar4 != 0) {\n        if (*0x41d844 == '\\0') {\n            if (*0x41e069 == '\\0') {\n                *0x41ccc9 = '\\x01';\n            }\n        }\n        else {\n            *0x41e069 = '\\x01';\n        }\n        *0x41d844 = '\\0';\n    }\n    if (*0x41cee4 == '\\0') {\n        sub.MSVCRT.dll_strcpy();\n    }\n    else {\n        iVar4 = sub.MSVCRT.dll_strcmp();\n        if (iVar4 != 0) {\n            *0x41ccc9 = '\\x01';\n            *0x41d844 = '\\0';\n        }\n    }\n    fcn.0040a69a(0x41cf10, unaff_EBP + -0x8c, 6, 1);\n    fcn.0040a69a(0x41d950, unaff_EBP + -0xb0, 6, 1);\n    fcn.0040a69a(0x41da58, unaff_EBP + -0x74, 10, 1);\n    fcn.0040a69a(0x41ccd0, unaff_EBP + -0xbc, 8, 1);\n    fcn.0040a69a(0x41e178, unaff_EBP + -0x80, 10, 1);\n    fcn.0040a69a(0x423e38, unaff_EBP + -0x98, 0xe, 1);\n    pcVar3 = _sym.imp.MSVCRT.dll_sprintf;\n    if (*0x41db60 != '\\0') {\n        (*_sym.imp.MSVCRT.dll_sprintf)(unaff_EBP + -0x2384);\n        pcVar2 = _sym.imp.MSVCRT.dll_strchr;\n        iVar4 = (*_sym.imp.MSVCRT.dll_strchr)(unaff_EBP + -0x2383, 0x3c);\n        while (iVar4 != 0) {\n            sub.MSVCRT.dll_strcpy();\n            iVar4 = (*pcVar2)(unaff_EBP + -0x2383, 0x3c);\n        }\n        iVar4 = (*pcVar2)();\n        *(iVar4 + 1) = 0;\n        fcn.0040a69a(unaff_EBP + -0x2384, unaff_EBP + -0xa4, 0xd, 1);\n    }\n    iVar4 = *(unaff_EBP + 8);\n    if (*(iVar4 + 0x2c) < 2) {\n        *(unaff_EBP + -0x10) = 0;\n        pcVar2 = _sym.imp.MSVCRT.dll_rand;\n        do {\n            iVar5 = (*pcVar2)();\n            *(*(unaff_EBP + -0x10) + *(iVar4 + 0x20)) =\n                 \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"[iVar5 % 0x3e];\n            if (*(iVar4 + 0x34) == 0) {\n                iVar5 = (*pcVar2)();\n                *(*(unaff_EBP + -0x10) + *(iVar4 + 0x1c)) =\n                     \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"[iVar5 % 0x3e];\n            }\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n        } while (*(unaff_EBP + -0x10) < 0x15);\n        sub.MSVCRT.dll_strcpy();\n        *(*(iVar4 + 0x20) + 0x15) = 0x40;\n        sub.MSVCRT.dll_strcpy();\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)();\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetTimeZoneInformation)();\n        iVar5 = *(unaff_EBP + -0x130);\n        *(unaff_EBP + -0x10) = *(unaff_EBP + -0x184) % 0x3c;\n        if (iVar6 != 1) {\n            iVar5 = *(unaff_EBP + -0xdc);\n        }\n        *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + iVar5 % 0x3c;\n        iVar6 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = -iVar6;\n        iVar5 = -(*(unaff_EBP + -0x184) / 0x3c + iVar5 / 0x3c);\n        uVar7 = *(*(unaff_EBP + -0x36) * 4 + 0x41cb00);\n        uVar10 = *(*(unaff_EBP + -0x34) * 4 + 0x41b08c);\n        *(unaff_EBP + -0x3c) = iVar5;\n        (*pcVar3)(unaff_EBP + -0x2384, \"Date: %s, %.2d %s %.4d %.2d:%.2d:%.2d %+03d%02d\\r\\n\", uVar10, \n                  *(unaff_EBP + -0x32), uVar7, *(unaff_EBP + -0x38), *(unaff_EBP + -0x30), *(unaff_EBP + -0x2e), \n                  *(unaff_EBP + -0x2c), iVar5, -iVar6);\n        fcn.00401119(unaff_EBP + -0x2384);\n        uVar7 = fcn.0040d473();\n        (*pcVar3)(unaff_EBP + -0x2384, \"From: %s\\r\\n\", uVar7);\n        fcn.00401119();\n        iVar5 = fcn.00401156();\n        if (iVar5 != 0) {\n            uVar7 = fcn.0040d473(*(*(unaff_EBP + -0x34) * 4 + 0x41b08c), *(unaff_EBP + -0x32), \n                                 *(*(unaff_EBP + -0x36) * 4 + 0x41cb00), *(unaff_EBP + -0x38), *(unaff_EBP + -0x30), \n                                 *(unaff_EBP + -0x2e));\n            (*pcVar3)(unaff_EBP + -0x2384, \"%s%s, %.2d %s %.2d %.2d:%.2d:%.2d %+03d%02d\\r\\n\", uVar7);\n            fcn.00401119();\n        }\n        if (*0x424684 == '\\0') {\n            if (*0x41ccd0 != '\\0') {\n                fcn.0040d473();\n                (*pcVar3)();\n                fcn.00401119();\n            }\n            if (*0x41e178 != '\\0') goto code_r0x0040ae28;\n        }\n        else {\n            fcn.0040d473();\n            (*pcVar3)();\n            fcn.00401119();\n            if (*0x41e178 == '\\0') {\n                if (*0x41eaaa == '\\0') goto code_r0x0040ae51;\n                fcn.0040d473();\n            }\n            else {\ncode_r0x0040ae28:\n                fcn.0040d473();\n            }\n            (*pcVar3)();\n            fcn.00401119();\n        }\ncode_r0x0040ae51:\n        if (*(iVar4 + 0x10) == 0) {\n            iVar5 = fcn.00401156();\n            if ((iVar5 != 0) && (*0x41d848 != '\\0')) {\n                uVar10 = 1;\n                uVar7 = fcn.0040d473();\n                fcn.0040a69a(uVar7, unaff_EBP + -0x28, 0xc, uVar10);\n                fcn.00401119();\n                fcn.00401145();\n                fcn.00401119();\n                fcn.0040106f();\n            }\n        }\n        else {\n            iVar5 = fcn.00401156();\n            if (iVar5 == 0) {\n                iVar5 = fcn.00401156();\n                if ((iVar5 == 0) && (*0x424689 != '\\0')) {\n                    fcn.00401119();\n                }\n            }\n            else {\n                fcn.004066f4(0x424184);\n                uVar10 = 1;\n                uVar7 = fcn.0040d473();\n                fcn.0040a69a(uVar7, unaff_EBP + -0x28, 4, uVar10);\n                fcn.00401119();\n                fcn.00401145();\n                fcn.00401119();\n                fcn.0040106f();\n            }\n            iVar5 = fcn.00401156();\n            if (iVar5 != 0) {\n                uVar10 = 1;\n                uVar7 = fcn.0040d473();\n                fcn.0040a69a(uVar7, unaff_EBP + -0x28, 4, uVar10);\n                fcn.00401119();\n                fcn.00401145();\n                fcn.00401119();\n                fcn.0040106f();\n            }\n            if ((*(iVar4 + 0x44) != 0) && (iVar5 = fcn.00401156(),  iVar5 != 0)) {\n                uVar10 = 1;\n                uVar7 = fcn.0040d473();\n                fcn.0040a69a(uVar7, unaff_EBP + -0x28, 5, uVar10);\n                fcn.00401119();\n                fcn.00401145();\n                fcn.00401119();\n                fcn.0040106f();\n            }\n            if (*0x424686 != '\\0') {\n                (*pcVar3)();\n                fcn.00401119();\n            }\n            if (*0x424685 != '\\0') {\n                (*pcVar3)();\n                fcn.00401119();\n            }\n            if ((*0x424680 == '0') || (*0x424680 == '1')) {\n                fcn.00401119();\n            }\n            if (((*0x42467c == '0') || (*0x42467c == '1')) || (*0x42467c == '2')) {\n                fcn.00401119();\n            }\n        }\n        if (*0x423e38 != '\\0') {\n            fcn.0040d473();\n            (*pcVar3)();\n            fcn.00401119();\n        }\n        if (*0x41db60 != '\\0') {\n            fcn.0040d473();\n            (*pcVar3)();\n            fcn.00401119();\n        }\n        if (*0x423928 != '\\0') {\n            fcn.00401119();\n            fcn.00401119();\n        }\n        if (*0x41dc68 != '\\0') {\n            fcn.00401119();\n            fcn.00401119();\n        }\n        if (*0x41e5a0 != '\\0') {\n            fcn.00401119();\n            fcn.00401119();\n        }\n        if (*0x424683 < '\\x02') {\n            if (*0x424688 == '\\0') {\n                (*pcVar3)(unaff_EBP + -0x2384);\n                fcn.00401119();\n            }\n            else {\n                (*pcVar3)(unaff_EBP + -0x2384);\n                fcn.00401119();\n            }\n            if (*0x424683 == '\\0') {\n                fcn.00401119();\n            }\n            fcn.00401119();\n        }\n        fcn.0040d473();\n        fcn.00401119();\n        fcn.0040106f();\n        fcn.0040d473();\n    }\n    else {\n        fcn.0040106f();\n        fcn.0040d473();\n    }\n    fcn.00401119();\n    iVar5 = fcn.00410c74();\n    *(unaff_EBP + -0x10) = iVar5;\n    if (iVar5 == 0) {\n        *(unaff_EBP + -0x10) = *(iVar4 + 0x28);\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)();\n    uVar1 = rdtsc();\n    *(unaff_EBP + -0x3c) = uVar1;\n    uVar7 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(*(unaff_EBP + -0x3c), *(unaff_EBP + -0x10));\n    (*_sym.imp.MSVCRT.dll_sprintf)\n              (unaff_EBP + -0x2384, \"Message-ID: <%08lx$Blat.v%s$%08lx$%lx%lx@%s>\\r\\n\", *(unaff_EBP + -0x58), 0x41b050, \n               *(unaff_EBP + -0x5c), uVar7);\n    iVar4 = *(unaff_EBP + 8);\n    fcn.00401119(unaff_EBP + -0x2384);\n    if (*0x41ebb8 == '\\0') {\n        if (*0x424687 == '\\0') {\n            iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(0x41d740, 0x413770);\n            if (iVar5 == 0) {\n                fcn.00401119(\"Subject: Contents of console input\\r\\n\");\n                pcVar9 = \"Subject: Contents of console input\\r\\n\";\n            }\n            else {\n                uVar7 = fcn.00401000(0x41d740);\n                (*_sym.imp.MSVCRT.dll_sprintf)(unaff_EBP + -0x2384, \"Subject: Contents of file: %s\\r\\n\", uVar7);\n                fcn.00401119(unaff_EBP + -0x2384);\n                pcVar9 = unaff_EBP + -0x2384;\n            }\n            fcn.00401119(pcVar9);\n        }\n    }\n    else {\n        fcn.00401062();\n        fcn.00401062();\n        *(unaff_EBP + -4) = 10;\n        fcn.0040118b(0x41ebb8);\n        fcn.00401119(\"Subject: \");\n        fcn.00401062();\n        *(unaff_EBP + -4) = 0xb;\n        fcn.0040118b(0x41ebb8);\n        pcVar9 = \"Subject: \";\n        fcn.00401119(\"Subject: \");\n        if ((*(iVar4 + 0x3c) != NULL) && (**(iVar4 + 0x3c) != '\\0')) {\n            iVar5 = *(iVar4 + 0x38);\n            if (1 < iVar5) {\n                iVar8 = 0;\n                for (iVar6 = iVar5; iVar6 != 0; iVar6 = iVar6 / 10) {\n                    iVar8 = iVar8 + 1;\n                }\n                (*_sym.imp.MSVCRT.dll_sprintf)(unaff_EBP + -0x2384, \" %0*u of %u\", iVar8, *(iVar4 + 0x34) + 1, iVar5);\n                fcn.00401119(unaff_EBP + -0x2384);\n                fcn.00401119(unaff_EBP + -0x2384);\n            }\n            fcn.00401119(0x417f38);\n            uVar7 = fcn.00401000(*(iVar4 + 0x3c));\n            fcn.00401119(uVar7);\n            pcVar9 = 0x22;\n            fcn.00401136();\n            iVar5 = *(iVar4 + 0x30);\n            if (1 < iVar5) {\n                iVar8 = 0;\n                for (iVar6 = iVar5; iVar6 != 0; iVar6 = iVar6 / 10) {\n                    iVar8 = iVar8 + 1;\n                }\n                (*_sym.imp.MSVCRT.dll_sprintf)(unaff_EBP + -0x2384, \" [%0*u/%u]\", iVar8, *(iVar4 + 0x2c), iVar5);\n                pcVar9 = unaff_EBP + -0x2384;\n                fcn.00401119(pcVar9);\n            }\n        }\n        iVar5 = fcn.00401156(pcVar9);\n        if ((iVar5 == 0) || (*0x41d848 == '\\0')) {\n            iVar5 = unaff_EBP + -0x54;\n            uVar7 = fcn.0040d473();\n            fcn.0040a69a(uVar7, iVar5, 9, 1);\n            fcn.00401145(unaff_EBP + -0x54);\n            fcn.00401119(0x413644);\n            uVar7 = 1;\n        }\n        else {\n            iVar5 = unaff_EBP + -0x54;\n            uVar7 = fcn.0040d473();\n            fcn.0040a69a(uVar7, iVar5, 9, 0);\n            fcn.00401145(unaff_EBP + -0x54);\n            fcn.00401119(0x413644);\n            uVar7 = 0;\n        }\n        arg_10h = 9;\n        uVar10 = fcn.0040d473();\n        fcn.0040a69a(uVar10, unaff_EBP + -0x54, arg_10h, uVar7);\n        fcn.00401145(unaff_EBP + -0x54);\n        fcn.00401119(0x413644);\n        *(unaff_EBP + -4) = 10;\n        fcn.00401054();\n        *(unaff_EBP + -4) = 9;\n        fcn.00401054();\n        *(unaff_EBP + -4) = 8;\n        fcn.00401054();\n    }\n    sub.MSVCRT.dll_memcpy(unaff_EBP + -0xd8, *(iVar4 + 0x1c), 0x15);\n    sub.MSVCRT.dll_strcpy(unaff_EBP + -0xc3, 0x41747c);\n    if (*0x41ccc9 == '\\0') {\n        if (*0x41e069 == '\\0') {\n            if (*0x41cedc != 0) {\n                if ((*0x41d844 != '\\0') || (*(iVar4 + 0x10) == 0)) goto code_r0x0040b80f;\n                fcn.00401119(\"MIME-Version: 1.0\\r\\n\");\n                fcn.00401119(\"Content-Type:\");\n                goto code_r0x0040b615;\n            }\n            sub.MSVCRT.dll_strcpy(unaff_EBP + -900, \"text/\");\n            sub.MSVCRT.dll_strcat(unaff_EBP + -900, 0x42403c);\n            if (((*0x41d949 == '\\0') && (*0x41f5cc == '\\0')) || (*0x41cee1 == '\\0')) {\n                uVar7 = fcn.0040d473(0);\n                iVar5 = fcn.00411d97(uVar7);\n                if (iVar5 == 0) {\n                    lpSystemTime = \"Content-Transfer-Encoding: 7BIT\\r\\n\";\n                }\n                else {\n                    lpSystemTime = \"Content-Transfer-Encoding: 8BIT\\r\\n\";\n                }\n            }\n            else {\n                lpSystemTime = \"Content-Transfer-Encoding: 8BIT\\r\\n\";\n            }\ncode_r0x0040b799:\n            fcn.00401119(lpSystemTime);\n            if ((*0x41d018 == '\\0') && (iVar5 = sub.MSVCRT.dll_strcmp(0x42403c, \"plain\"),  iVar5 == 0)) {\n                uVar7 = fcn.004110c7(0x41d740);\n                fcn.00411102(unaff_EBP + -0x2384, unaff_EBP + -900, unaff_EBP + -900, uVar7);\n            }\n            (*_sym.imp.MSVCRT.dll_sprintf)\n                      (unaff_EBP + -0x2384, \"Content-Type: %s; charset=%s\\r\\n\", unaff_EBP + -900, 0x41cee4);\n            fcn.00401119(unaff_EBP + -0x2384);\n            goto code_r0x0040b80f;\n        }\n        fcn.00401119(\"MIME-Version: 1.0\\r\\n\");\n        fcn.00401119(\"Content-Type:\");\n        if (*0x41ccc8 == '\\0') {\n            if (*0x42404d == '\\0') {\n                fcn.00401156();\n                goto code_r0x0040b6c2;\n            }\n            fcn.00401119(\" multipart/related;\\r\\n\");\n            iVar5 = fcn.00401156();\n            if (iVar5 != 0) goto code_r0x0040b6c2;\n        }\n        else {\ncode_r0x0040b6c2:\n            fcn.00401119();\n        }\n        fcn.00401119(\" boundary=\\\"=_BlatBoundary-\");\n        fcn.00401119(unaff_EBP + -0xd8);\n    }\n    else {\n        if (((*(iVar4 + 0x34) != 0) && (*(iVar4 + 0x30) < 2)) && (iVar5 = fcn.00401156(),  iVar5 == 0))\n        goto code_r0x0040b80f;\n        lpSystemTime = \"MIME-Version: 1.0\\r\\n\";\n        fcn.00401119(\"MIME-Version: 1.0\\r\\n\");\n        if ((*0x41cedc == 0) && (iVar5 = fcn.00401156(),  iVar5 == 0)) {\n            sub.MSVCRT.dll_strcpy(unaff_EBP + -900, \"text/\");\n            sub.MSVCRT.dll_strcat(unaff_EBP + -900, 0x42403c);\n            goto code_r0x0040b799;\n        }\n        fcn.00401119(\"Content-Type:\");\n        if ((*0x41ccc8 == '\\0') && (*0x42404d != '\\0')) {\n            fcn.00401119(\" multipart/related;\\r\\n\");\n            iVar5 = fcn.00401156();\n            if (iVar5 != 0) goto code_r0x0040b615;\n        }\n        else {\ncode_r0x0040b615:\n            fcn.00401119();\n        }\n        fcn.00401119(\" boundary=\\\"=_BlatBoundary-\");\n        fcn.00401119(unaff_EBP + -0xd8);\n        if (*(iVar4 + 0x34) != 0) goto code_r0x0040b80f;\n    }\n    fcn.00401119(\"\\r\\nThis is a multi-part message in MIME format.\\r\\n\");\ncode_r0x0040b80f:\n    if (*(iVar4 + 0x30) < 2) {\n        fcn.0040106f();\n    }\n    else {\n        fcn.00401119(\"MIME-Version: 1.0\\r\\n\");\n        fcn.00401119(\"Content-Type:\");\n        fcn.00401119(\" message/partial;\\r\\n\");\n        (*_sym.imp.MSVCRT.dll_sprintf)\n                  (unaff_EBP + -0x2384, \"    id=\\\"%s\\\";\\r\\n    number=%u; total=%u;\\r\\n    boundary=\\\"=_BlatBoundary-%s\"\n                   , *(iVar4 + 0x20), *(iVar4 + 0x2c), *(iVar4 + 0x30), unaff_EBP + -0xd8);\n        fcn.00401119(unaff_EBP + -0x2384);\n    }\n    fcn.00401145(unaff_EBP + -0x1c);\n    iVar4 = fcn.00401156();\n    if (iVar4 != 0) {\n        uVar7 = fcn.0040d473();\n        fcn.00401119(uVar7);\n    }\n    if (*0x41eaaa != '\\0') {\n        fcn.00401119(0x413644);\n    }\n    fcn.0040106f();\n    uVar7 = fcn.0040d473();\n    fcn.00401119(uVar7);\n    uVar7 = fcn.0040d473(\"=_BlatBoundary-\");\n    iVar4 = (*_sym.imp.MSVCRT.dll_strstr)(uVar7);\n    if (iVar4 != 0) {\n        *0x42529d = 1;\n    }\n    *(unaff_EBP + -4) = 7;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 6;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 5;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 4;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 3;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 2;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 1;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 6417
    },
    "0040b9e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040b9e6(void)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    int32_t iVar3;\n    char *pcVar4;\n    \n    if (*in_EAX != '\\0') {\n        pcVar4 = in_EAX + 3;\n        do {\n            if (*in_EAX == '+') {\n                *in_EAX = ' ';\n            }\n            else if (*in_EAX == '%') {\n                cVar1 = fcn.0040b9c8();\n                cVar2 = fcn.0040b9c8();\n                *in_EAX = cVar1 + cVar2 * '\\x10';\n                iVar3 = sub.MSVCRT.dll_strlen(pcVar4);\n                (*_sym.imp.MSVCRT.dll_memmove)(pcVar4 + -2, pcVar4, iVar3 + 1);\n            }\n            in_EAX = in_EAX + 1;\n            pcVar4 = pcVar4 + 1;\n        } while (*in_EAX != '\\0');\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0040ba3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ba3e(uint8_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    \n    iVar1 = 0;\n    uVar2 = *param_1;\n    while (((uVar2 != 0x26 && (uVar2 != 0)) && (uVar2 != ((param_2 == 0) - 1U & 0x3d)))) {\n        iVar1 = iVar1 + 1;\n        uVar2 = param_1[iVar1];\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0040ba9e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ba9e(char *arg_8h, int32_t *arg_ch, int32_t *lpString2)\n\n{\n    char cVar1;\n    bool bVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t size;\n    \n    pcVar3 = _sym.imp.MSVCRT.dll_malloc;\n    bVar2 = false;\n    var_8h = 0;\n    uVar6 = **lpString2;\n    iVar7 = 1;\n    size = 0x10;\n    iVar4 = (*_sym.imp.MSVCRT.dll_malloc)(0xc);\n    *lpString2 = iVar4;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar6);\n    uVar5 = (*pcVar3)(iVar4 + 10);\n    **lpString2 = uVar5;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(**lpString2, uVar6);\n    uVar6 = (*pcVar3)(0x1a);\n    *(*lpString2 + 4) = uVar6;\n    *(*lpString2 + 8) = 0;\n    **(*lpString2 + 4) = 0;\n    cVar1 = *arg_8h;\n    if (cVar1 != '\\0') {\n        do {\n            if ((cVar1 == '\\n') || (cVar1 == '\\r')) break;\n            if (cVar1 == '\\\"') {\n                bVar2 = !bVar2;\n            }\n            else if ((cVar1 != ' ') || (bVar2)) {\n                if (size <= var_8h) {\n                    uVar6 = (*_sym.imp.MSVCRT.dll_realloc)(*(*lpString2 + iVar7 * 4), size + 0x2a);\n                    *(*lpString2 + iVar7 * 4) = uVar6;\n                    size = size + 0x20;\n                }\n                iVar4 = *(*lpString2 + iVar7 * 4);\n                *(iVar4 + var_8h) = cVar1;\n                var_8h = var_8h + 1;\n                *(iVar4 + var_8h) = 0;\n            }\n            else {\n                iVar4 = (*_sym.imp.MSVCRT.dll_realloc)(*lpString2, iVar7 * 4 + 0x40);\n                *lpString2 = iVar4;\n                iVar7 = iVar7 + 1;\n                size = 0x10;\n                uVar6 = (*pcVar3)(0x1a);\n                *(*lpString2 + iVar7 * 4) = uVar6;\n                *(*lpString2 + 4 + iVar7 * 4) = 0;\n                var_8h = 0;\n            }\n            arg_8h = arg_8h + 1;\n            cVar1 = *arg_8h;\n        } while (cVar1 != '\\0');\n        if (var_8h != 0) {\n            iVar7 = iVar7 + 1;\n        }\n    }\n    *arg_ch = iVar7;\n    return iVar7;\n}\n",
        "token_count": 730
    },
    "0040bc1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bc1f(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetEnvironmentVariableA;\n    if ((arg_8h != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableA)(arg_8h, 0, 0),  iVar2 != 0)) {\n        fcn.0040bbe3(iVar2);\n        uVar3 = fcn.0040d473(iVar2);\n        (*pcVar1)(arg_8h, uVar3);\n        return;\n    }\n    fcn.0040118b(0x41632f);\n    return;\n}\n",
        "token_count": 178
    },
    "0040bd4f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0040bd4f(uint arg_8h, uint lpString2, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint lpString1;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 0xc));\n    uVar2 = fcn.00401156();\n    *(unaff_EBP + -0x14) = uVar2;\n    uVar6 = 0;\n    fcn.0040106f();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    fcn.0040bbe3(iVar1 * 2 + 0x20);\n    uVar2 = fcn.0040d473();\n    *(unaff_EBP + -0x10) = uVar2;\n    iVar3 = fcn.0040d473();\n    iVar3 = iVar3 + (iVar1 + 7U & 0xfffffffc);\n    *(unaff_EBP + -0x18) = iVar3;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(iVar3, *(unaff_EBP + 0xc));\n    (*_sym.imp.KERNEL32.dll_lstrcatA)(iVar3, 0x418274);\n    iVar4 = *(unaff_EBP + -0x14);\n    *(*(unaff_EBP + -0x10) + 1 + iVar1) = 0;\n    if (iVar4 != 0) {\n        while( true ) {\n            iVar4 = fcn.0040d473(0);\n            iVar4 = fcn.0040ba3e(iVar4 + uVar6);\n            if (*(unaff_EBP + -0x14) <= uVar6 + iVar1) break;\n            iVar5 = fcn.0040d473(iVar1 + 1);\n            sub.MSVCRT.dll_memcpy(*(unaff_EBP + -0x10), iVar5 + uVar6);\n            iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(*(unaff_EBP + -0x10), *(unaff_EBP + -0x18));\n            if (iVar5 == 0) {\n                fcn.0040109b((iVar4 - iVar1) + 0xf);\n                iVar3 = fcn.0040d473((iVar4 - iVar1) + -1);\n                iVar3 = iVar3 + uVar6 + 1 + iVar1;\n                fcn.004010e1();\n                if (*(unaff_EBP + 0x10) != 0) {\n                    fcn.0040d473();\n                    fcn.0040b9e6();\n                    fcn.00401160();\n                }\n                break;\n            }\n            uVar6 = uVar6 + 1 + iVar4;\n            if (*(unaff_EBP + -0x14) <= uVar6) break;\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054(iVar3);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 830
    },
    "0040be8d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_b8h\n\nuint __cdecl fcn.0040be8d(uint arg_8h, uint lpString, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uchar *puVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint *in_FS_OFFSET;\n    uint var_b8h;\n    uint var_38h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint lpString1;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    *(unaff_EBP + -0x10) = 0;\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    fcn.0040106f();\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 0xc));\n    if (((0 < iVar1) && (iVar1 = fcn.0040b976(*(unaff_EBP + 0xc), unaff_EBP + -0x10),  iVar1 != 0)) &&\n       (iVar1 = *(unaff_EBP + -0x10),  iVar1 != 0)) {\n        fcn.004011b2();\n        *(unaff_EBP + -4) = 1;\n        iVar2 = fcn.004011ce(*(unaff_EBP + 0xc));\n        if (iVar2 != 0) {\n            *(unaff_EBP + -0x10) = 0;\n            fcn.0040109b(iVar1 + 10);\n            uVar3 = fcn.0040d473(iVar1, unaff_EBP + -0x10, 0);\n            fcn.00401266(uVar3);\n            iVar1 = fcn.0040d473();\n            *(iVar1 + *(unaff_EBP + -0x10)) = 0;\n            fcn.00401170(*(unaff_EBP + -0x10));\n            fcn.004011b8();\n        }\n        *(unaff_EBP + -4) = 0;\n        fcn.004015a9();\n    }\n    iVar1 = fcn.00401156();\n    if (iVar1 == 0) {\n        fcn.00401119(0x41632f);\n    }\n    iVar1 = fcn.00401156();\n    if (iVar1 == 0) {\n        fcn.00401062();\n        *(unaff_EBP + -4) = 2;\n        fcn.00401119(0x413770);\n        for (piVar7 = 0x41b26c;\n            ((piVar7[-1] != 0 || (piVar7[1] != 0)) || ((piVar7[2] != 0 || ((piVar7[3] != 0 || (piVar7[4] != 0))))));\n            piVar7 = piVar7 + 6) {\n            iVar1 = *piVar7;\n            if (iVar1 != 1) {\n                fcn.00401062();\n                *(unaff_EBP + -4) = 3;\n                if (iVar1 != 0) {\n                    fcn.0040bd4f(*(unaff_EBP + 8), iVar1, 1, unaff_EBP + -0x1c);\n                    iVar1 = fcn.00401156();\n                    if (iVar1 == 0) {\n                        (*_sym.imp.USER32.dll_wsprintfA)(unaff_EBP + -0xb8, \"Blat_%s\", *piVar7);\n                        fcn.0040bd4f(*(unaff_EBP + 8), unaff_EBP + -0xb8, 1, unaff_EBP + -0x1c);\n                    }\n                }\n                iVar1 = fcn.00401156();\n                if (iVar1 == 0) {\n                    if (piVar7[-1] != 0) {\n                        fcn.0040bd4f(*(unaff_EBP + 8), piVar7[-1] + 1, 1, unaff_EBP + -0x1c);\n                        iVar1 = fcn.00401156();\n                        if (iVar1 == 0) {\n                            (*_sym.imp.USER32.dll_wsprintfA)(unaff_EBP + -0xb8, \"Blat_%s\", piVar7[-1] + 1);\n                            fcn.0040bd4f(*(unaff_EBP + 8), unaff_EBP + -0xb8, 1, unaff_EBP + -0x1c);\n                        }\n                        goto code_r0x0040c07d;\n                    }\n                }\n                else {\ncode_r0x0040c07d:\n                    iVar1 = fcn.00401156();\n                    if (iVar1 != 0) {\n                        uVar4 = fcn.00401156();\n                        uVar8 = 0;\n                        if (uVar4 != 0) {\n                            do {\n                                iVar1 = fcn.0040d473();\n                                if (*(iVar1 + uVar8) == '\\\"') {\n                                    iVar1 = fcn.0040d473();\n                                    *(iVar1 + uVar8) = 0x27;\n                                }\n                                uVar8 = uVar8 + 1;\n                            } while (uVar8 < uVar4);\n                        }\n                        if (piVar7[2] == 0) {\n                            if ((((uVar4 != 0) && (pcVar5 = fcn.0040d473(),  *pcVar5 != 'N')) &&\n                                (pcVar5 = fcn.0040d473(),  *pcVar5 != 'n')) &&\n                               (pcVar5 = fcn.0040d473(),  *pcVar5 != '0')) {\n                                fcn.00401119(0x418284);\n                                iVar1 = piVar7[-1];\n                                goto code_r0x0040c13a;\n                            }\n                        }\n                        else {\n                            fcn.00401119(0x418284);\n                            fcn.00401119(piVar7[-1]);\n                            fcn.00401119(0x417f38);\n                            uVar3 = fcn.0040d473();\n                            fcn.00401119(uVar3);\n                            iVar1 = 0x418280;\ncode_r0x0040c13a:\n                            fcn.00401119(iVar1);\n                        }\n                        fcn.0040106f();\n                    }\n                }\n                *(unaff_EBP + -4) = 2;\n                fcn.00401054();\n            }\n        }\n        fcn.004066c6(unaff_EBP + -0x28);\n        *(unaff_EBP + -4) = 0;\n        fcn.00401054();\n    }\n    fcn.004066c6(unaff_EBP + -0x38);\n    fcn.00401119(0x41632f);\n    uVar4 = 0;\n    iVar1 = fcn.00401156();\n    *(unaff_EBP + -0x10) = iVar1;\n    if (iVar1 != 0) {\n        do {\n            iVar1 = fcn.0040d473(0);\n            iVar1 = fcn.0040ba3e(iVar1 + uVar4);\n            iVar2 = fcn.0040d473(1);\n            uVar8 = fcn.0040ba3e(iVar2 + uVar4);\n            if (uVar8 < 6) {\ncode_r0x0040c20e:\n                fcn.0040ba81(iVar1 + 0x10);\n                *(unaff_EBP + -4) = 4;\n                iVar2 = fcn.0040d473(iVar1);\n                uVar3 = fcn.0040d473(iVar2 + uVar4);\n                sub.MSVCRT.dll_memcpy(uVar3);\n                fcn.00401170(iVar1);\n                puVar6 = fcn.0040115a();\n                *puVar6 = 0;\n                fcn.0040d473();\n                fcn.0040b9e6();\n                uVar3 = fcn.0040d473();\n                fcn.00401119(uVar3);\n                fcn.00401119(0x413644);\n                *(unaff_EBP + -4) = 0;\n                fcn.00401054();\n            }\n            else {\n                iVar2 = fcn.0040d473(5);\n                sub.MSVCRT.dll_memcpy(unaff_EBP + -0x18, iVar2 + uVar4);\n                *(unaff_EBP + -0x13) = 0;\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(unaff_EBP + -0x18, \"Blat_\");\n                *(unaff_EBP + -0x2c) = iVar2 != 0;\n                if ((iVar2 != 0) != 0) goto code_r0x0040c20e;\n            }\n            uVar4 = uVar4 + 1 + iVar1;\n        } while (uVar4 < *(unaff_EBP + -0x10));\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return 1;\n}\n",
        "token_count": 2159
    },
    "0040c2b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_40h\n\nuint __cdecl\nfcn.0040c2b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    char *pcVar8;\n    int32_t unaff_EBP;\n    uint32_t uVar9;\n    uint *in_FS_OFFSET;\n    uint var_ach;\n    uint var_a0h;\n    uint var_94h;\n    uint var_88h;\n    uint var_7ch;\n    uint var_70h;\n    uint var_64h;\n    uint var_58h;\n    uint var_4ch;\n    uint var_40h;\n    uint var_34h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.004123b0();\n    fcn.00401062();\n    uVar9 = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 5;\n    fcn.0040106f();\n    fcn.0040106f();\n    fcn.0040106f();\n    fcn.0040bc1f(\"REQUEST_METHOD\", unaff_EBP + -0xa0);\n    fcn.0040118b(0x41632f);\n    uVar2 = fcn.0040d473(\"POST\");\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(uVar2);\n    if (iVar3 == 0) {\n        fcn.0040bc6a(unaff_EBP + -0x4c);\n    }\n    fcn.0040bc1f(\"QUERY_STRING\", unaff_EBP + -0x7c);\n    uVar2 = fcn.0040d473();\n    fcn.00401119(uVar2);\n    iVar3 = fcn.00401156();\n    if ((iVar3 != 0) && (iVar3 = fcn.00401156(),  iVar3 != 0)) {\n        fcn.00401136(0x26);\n    }\n    uVar2 = fcn.0040d473();\n    fcn.00401119(uVar2);\n    fcn.0040bc1f(\"PATH_TRANSLATED\", unaff_EBP + -0x94);\n    uVar2 = *(unaff_EBP + 0x10);\n    iVar3 = unaff_EBP + -0x18;\n    uVar4 = fcn.0040d473();\n    fcn.0040be8d(unaff_EBP + -0x40, uVar4, iVar3, uVar2);\n    fcn.0040bd4f(unaff_EBP + -0x40, \"BLAT_SUCCESS\", 1, *(unaff_EBP + 0x14));\n    fcn.0040bd4f(unaff_EBP + -0x40, \"BLAT_FAILURE\", 1, *(unaff_EBP + 0x18));\n    iVar3 = fcn.00401156();\n    *(unaff_EBP + -0x1c) = iVar3;\n    if (iVar3 != 0) {\n        do {\n            iVar3 = fcn.0040d473();\n            if (*(iVar3 + uVar9) == '%') {\n                fcn.00401062();\n                *(unaff_EBP + -4) = 6;\n                iVar3 = fcn.0040d473();\n                iVar3 = fcn.0040ba69(iVar3 + 1 + uVar9);\n                iVar5 = fcn.0040d473();\n                if (*(iVar5 + iVar3 + 1 + uVar9) == '\\0') {\n                    *(unaff_EBP + -4) = 5;\n                    fcn.00401054();\n                    break;\n                }\n                fcn.0040ba81(iVar3 + 0x10);\n                *(unaff_EBP + -4) = 7;\n                iVar5 = fcn.0040d473(iVar3);\n                uVar2 = fcn.0040d473(iVar5 + 1 + uVar9);\n                sub.MSVCRT.dll_memcpy(uVar2);\n                fcn.00401170(iVar3);\n                puVar6 = fcn.0040115a();\n                *puVar6 = 0;\n                iVar5 = unaff_EBP + -0x28;\n                uVar4 = 1;\n                uVar2 = fcn.0040d473();\n                fcn.0040bd4f(unaff_EBP + -0x40, uVar2, uVar4, iVar5);\n                iVar5 = fcn.00401156();\n                if (iVar5 == 0) {\n                    uVar9 = uVar9 + 1 + iVar3;\n                }\n                else {\n                    iVar5 = fcn.00401156();\n                    fcn.0040109b(iVar5 + 0x10 + *(unaff_EBP + -0x1c));\n                    iVar7 = fcn.0040d473(((*(unaff_EBP + -0x1c) - iVar3) - uVar9) + -1);\n                    iVar3 = fcn.0040d473(iVar7 + iVar3 + 2 + uVar9);\n                    (*_sym.imp.MSVCRT.dll_memmove)(iVar3 + iVar5 + uVar9);\n                    uVar2 = fcn.0040d473(iVar5);\n                    iVar3 = fcn.0040d473(uVar2);\n                    sub.MSVCRT.dll_memcpy(iVar3 + uVar9);\n                    uVar2 = fcn.0040d473();\n                    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar2);\n                    *(unaff_EBP + -0x1c) = uVar2;\n                    uVar9 = uVar9 + iVar5;\n                }\n                *(unaff_EBP + -4) = 6;\n                fcn.00401054();\n                *(unaff_EBP + -4) = 5;\n                fcn.00401054();\n            }\n            else {\n                uVar9 = uVar9 + 1;\n            }\n        } while (uVar9 < *(unaff_EBP + -0x1c));\n    }\n    uVar2 = *(unaff_EBP + 0xc);\n    uVar4 = *(unaff_EBP + 8);\n    arg_8h_00 = fcn.0040d473();\n    fcn.0040ba9e(arg_8h_00, uVar4, uVar2);\n    fcn.0040106f();\n    fcn.0040106f();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 8;\n    fcn.0040bc1f(\"REMOTE_ADDR\", unaff_EBP + -0xac);\n    fcn.00401062();\n    *(unaff_EBP + -4) = 9;\n    fcn.0040bc1f(\"SERVER_NAME\", unaff_EBP + -0x88);\n    fcn.00401062();\n    *(unaff_EBP + -4) = 10;\n    fcn.0040bc1f(\"HTTP_VIA\", unaff_EBP + -100);\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0xb;\n    fcn.0040bc1f(\"HTTP_FORWARDED\", unaff_EBP + -0x58);\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0xc;\n    fcn.0040bc1f(\"HTTP_X_FORWARDED_FOR\", unaff_EBP + -0x70);\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0xd;\n    fcn.0040bc1f(\"HTTP_USER_AGENT\", unaff_EBP + -0x28);\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0xe;\n    fcn.0040bc1f(\"HTTP_REFERER\", unaff_EBP + -0x34);\n    pcVar8 = fcn.0040d473();\n    pcVar1 = _sym.imp.USER32.dll_wsprintfA;\n    if (*pcVar8 != '\\0') {\n        uVar2 = fcn.0040d473();\n        (*pcVar1)(unaff_EBP + -0x20ac, \"X-Web-Browser: Send using %s\\r\\n\", uVar2);\n        fcn.00401119(unaff_EBP + -0x20ac);\n    }\n    pcVar8 = fcn.0040d473();\n    if (*pcVar8 != '\\0') {\n        uVar2 = fcn.0040d473();\n        (*pcVar1)(unaff_EBP + -0x20ac, \"X-Forwarded: %s\\r\\n\", uVar2);\n        fcn.00401119(unaff_EBP + -0x20ac);\n    }\n    pcVar8 = fcn.0040d473();\n    if (*pcVar8 != '\\0') {\n        uVar2 = fcn.0040d473();\n        (*pcVar1)(unaff_EBP + -0x20ac, \"X-X-Forwarded-For: %s\\r\\n\", uVar2);\n        fcn.00401119(unaff_EBP + -0x20ac);\n    }\n    pcVar8 = fcn.0040d473();\n    if (*pcVar8 != '\\0') {\n        uVar2 = fcn.0040d473();\n        (*pcVar1)(unaff_EBP + -0x20ac, \"X-Via: %s\\r\\n\", uVar2);\n        fcn.00401119(unaff_EBP + -0x20ac);\n    }\n    pcVar8 = fcn.0040d473();\n    if (*pcVar8 != '\\0') {\n        uVar2 = fcn.0040d473();\n        (*pcVar1)(unaff_EBP + -0x20ac, \"X-Referer: %s\\r\\n\", uVar2);\n        fcn.00401119(unaff_EBP + -0x20ac);\n    }\n    uVar2 = fcn.0040d473();\n    uVar2 = fcn.0040d473(uVar2);\n    (*pcVar1)(unaff_EBP + -0x20ac, \"Received: from %s by %s with HTTP; \", uVar2);\n    fcn.00401119(unaff_EBP + -0x20ac);\n    *(unaff_EBP + -4) = 0xd;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0xc;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0xb;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 10;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 9;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 8;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 5;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 4;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 3;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 2;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 1;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return 1;\n}\n",
        "token_count": 2891
    },
    "0040c88d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040c88d(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = sub.MSVCRT.dll_strlen(param_1);\n        (*_sym.imp.MSVCRT.dll_strncat)(param_1, param_2, 0x3ff - iVar1);\n        *(param_1 + 0x3ff) = 0;\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0040c953": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040c953(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    uint unaff_retaddr;\n    \n    fcn.0040c8be(\"An exception has occurred in GssSession.\");\n    *(param_1 + 0x1005) = unaff_retaddr;\n    *(param_1 + 0x1009) = param_2;\n    if (param_3 != 0) {\n        fcn.0040c87f();\n        fcn.0040c88d(param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 139
    },
    "0040c9c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.0040c9c2(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    while (((cVar1 = *(iVar3 + param_1),  cVar1 != '\\0' && ('/' < cVar1)) && (cVar1 < ':'))) {\n        iVar3 = iVar3 + 1;\n        iVar2 = cVar1 + -0x30 + iVar2 * 10;\n        if (2 < iVar3) {\n            return iVar2;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 149
    },
    "0040ca3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ca3b(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = param_1[0x14];\n    if (0 < iVar1) {\n        if (2 < iVar1) {\n            if (5 < iVar1) goto code_r0x0040ca93;\n            if (*0x41cdd1 != '\\0') {\n                fcn.00401292(\"Releasing GSS credentials\\n\", unaff_ESI);\n            }\n            (*param_1[0xb])(&var_4h, param_1 + 0x13, &var_ch);\n            (*param_1[5])(&var_4h, &var_ch);\n        }\n        if (*param_1 != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(*param_1);\n        }\n        *param_1 = 0;\n    }\ncode_r0x0040ca93:\n    param_1[0x14] = 0;\n    return;\n}\n",
        "token_count": 246
    },
    "0040ca9f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040ca9f(uint arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_strncat;\n    if (arg_10h == NULL) {\n        *0x424a8f = 0;\n        arg_10h = 0x424690;\n    }\n    var_4h = 0;\n    *arg_10h = 0;\n    bVar1 = true;\n    var_8h = in_ECX;\n    do {\n        (**(var_8h + 0x30))(&var_ch, arg_8h, 1, 0, &var_4h, &var_14h);\n        if (!bVar1) {\n            iVar3 = sub.MSVCRT.dll_strlen(arg_10h);\n            (*pcVar2)(arg_10h, 0x416e4c, 0x3ff - iVar3);\n        }\n        iVar3 = sub.MSVCRT.dll_strlen(arg_10h);\n        (*pcVar2)(arg_10h, var_10h, 0x3ff - iVar3);\n        bVar1 = false;\n    } while (var_4h != 0);\n    if (arg_ch != 0) {\n        iVar3 = sub.MSVCRT.dll_strlen(arg_10h);\n        (*pcVar2)(arg_10h, 0x41849c, 0x3ff - iVar3);\n        var_4h = 0;\n        bVar1 = true;\n        do {\n            (**(var_8h + 0x30))(&var_ch, arg_ch, 2, 0, &var_4h, &var_14h);\n            if (!bVar1) {\n                iVar3 = sub.MSVCRT.dll_strlen(arg_10h);\n                (*pcVar2)(arg_10h, 0x416e4c, 0x3ff - iVar3);\n            }\n            iVar3 = sub.MSVCRT.dll_strlen(arg_10h);\n            (*pcVar2)(arg_10h, var_10h, 0x3ff - iVar3);\n            bVar1 = false;\n        } while (var_4h != 0);\n    }\n    return arg_10h;\n}\n",
        "token_count": 580
    },
    "0040cbac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040cbac(uchar *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uchar *puVar3;\n    char *pcVar4;\n    uint var_ch;\n    uint src;\n    int32_t *var_4h;\n    \n    puVar3 = arg_8h;\n    if (arg_8h == NULL) {\n        *0x424e8f = 0;\n        puVar3 = 0x424a90;\n    }\n    *puVar3 = 0;\n    sub.MSVCRT.dll_strcpy(puVar3, 0x4185f0);\n    iVar2 = (**(in_ECX + 0x34))(&arg_8h, &var_4h);\n    if ((iVar2 == 0) && (*var_4h != 0)) {\n        iVar2 = (**(in_ECX + 0x38))(&arg_8h, var_4h[1], &var_ch);\n        if (iVar2 == 0) {\n            sub.MSVCRT.dll_strcpy(puVar3, src);\n            (**(in_ECX + 0x14))(&arg_8h, &var_ch);\n        }\n        (**(in_ECX + 0x3c))(&arg_8h, &var_4h);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcmpiA;\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(puVar3, \"{ 1 2 840 113554 1 2 2 }\");\n        if (iVar2 == 0) {\n            pcVar4 = \"Kerberos v5\";\n        }\n        else {\n            iVar2 = (*pcVar1)(puVar3, \"{ 1 2 840 113554 1 2 3 }\");\n            if (iVar2 == 0) {\n                pcVar4 = \"Kerberos5 v2\";\n            }\n            else {\n                iVar2 = (*pcVar1)(puVar3, \"{ 1 3 5 1 5 2 }\");\n                if (iVar2 == 0) {\n                    pcVar4 = \"Kerberos v5 (old)\";\n                }\n                else {\n                    iVar2 = (*pcVar1)(puVar3, \"{ 1 3 6 1 5 5 1 3 }\");\n                    if (iVar2 == 0) {\n                        pcVar4 = \"SPKM-3 (X.509)\";\n                    }\n                    else {\n                        iVar2 = (*pcVar1)(puVar3, \"{ 1 3 6 1 5 5 1 2 }\");\n                        if (iVar2 == 0) {\n                            pcVar4 = \"SPKM-2 (X.509)\";\n                        }\n                        else {\n                            iVar2 = (*pcVar1)(puVar3, \"{ 1 3 6 1 5 5 1 1 }\");\n                            if (iVar2 == 0) {\n                                pcVar4 = \"SPKM-1 (X.509)\";\n                            }\n                            else {\n                                iVar2 = (*pcVar1)(puVar3, \"{ 1 3 6 1 5 5 1 }\");\n                                if (iVar2 == 0) {\n                                    pcVar4 = \"SPKM (X.509)\";\n                                }\n                                else {\n                                    iVar2 = (*pcVar1)(puVar3, \"{ 1 3 6 1 5 5 2 }\");\n                                    if (iVar2 == 0) {\n                                        pcVar4 = \"SPNEGO pseudo-mechanism\";\n                                    }\n                                    else {\n                                        iVar2 = (*pcVar1)(puVar3, \"{ 1 3 6 1 5 5 9 }\");\n                                        if (iVar2 != 0) {\n                                            return puVar3;\n                                        }\n                                        pcVar4 = \"LIPKEY\";\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        sub.MSVCRT.dll_strcpy(puVar3, pcVar4);\n    }\n    return puVar3;\n}\n",
        "token_count": 912
    },
    "0040ccf1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: hostlong\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: netlong\n\nvoid __cdecl fcn.0040ccf1(code *arg_8h, code *arg_ch, int32_t s, uint *src, uint *arg_18h, uint *arg_1ch)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t extraout_ECX;\n    int32_t iVar3;\n    uchar *unaff_EBX;\n    uint *unaff_ESI;\n    char *pcVar4;\n    uint *unaff_EDI;\n    char *pcVar5;\n    uint *puVar6;\n    uchar auStackY27724 [8192];\n    uint uStackY19532;\n    uchar auStackY19528 [8188];\n    uint auStackY11340 [1539];\n    uint var_1439h;\n    uint var_42ch;\n    uint var_402h;\n    uint var_3eeh;\n    uint var_3e3h;\n    uint var_3d7h;\n    uint uStackY88;\n    uint *puStackY84;\n    uint uStackY80;\n    uint32_t *puStackY76;\n    uint *puStackY72;\n    uint uStackY68;\n    uint32_t uStackY64;\n    uint uStackY60;\n    char *var_2ch;\n    uint *var_28h;\n    char *var_24h;\n    char *var_20h;\n    char *var_1ch;\n    char *var_18h;\n    char *hostlong;\n    char *var_10h;\n    char *netlong;\n    char *var_8h;\n    uchar *var_4h;\n    \n    var_4h = 0x40ccfe;\n    fcn.004123b0();\n    if (s == 0) {\n        s = 0x41632f;\n    }\n    if (src == NULL) {\n        src = 0x41632f;\n    }\n    *(extraout_ECX + 0x40) = arg_1ch;\n    *(extraout_ECX + 0x44) = arg_18h;\n    netlong = unaff_EDI;\n    if (*(extraout_ECX + 0x50) == 2) {\n        var_10h = src;\n        hostlong = &stack0xffffb3b4;\n        var_18h = 0x40cd4f;\n        sub.MSVCRT.dll_strcpy();\n        var_18h = &stack0xffffb3b4;\n        var_1ch = 0x40cd5e;\n        var_4h = var_18h;\n        iVar3 = sub.MSVCRT.dll_strlen();\n        var_8h = iVar3 + 1;\n        var_10h = &fcn.0040ccf1::arg_18h;\n        hostlong = *(extraout_ECX + 8);\n        var_18h = &fcn.0040ccf1::var_8h;\n        var_1ch = &fcn.0040ccf1::arg_1ch;\n        var_20h = 0x40cd77;\n        iVar3 = (**(extraout_ECX + 0xc))();\n        if (iVar3 != 0) {\n            var_24h = &fcn.0040ccf1::var_42ch;\n            var_20h = \"Couldn\\'t get service name for [%s]\";\n            var_28h = 0x40cd8d;\n            (*_sym.imp.MSVCRT.dll_sprintf)();\ncode_r0x0040d404:\n            var_10h = 0x40d40b;\n            fcn.0040ca3b();\n            var_10h = &fcn.0040ccf1::var_42ch;\n            goto code_r0x0040d412;\n        }\n        if (*0x41cdd1 != '\\0') {\n            var_20h = &fcn.0040ccf1::var_2ch;\n            var_24h = &fcn.0040ccf1::var_8h;\n            var_28h = arg_18h;\n            var_2ch = &fcn.0040ccf1::arg_1ch;\n            (**(extraout_ECX + 0x10))();\n            uStackY60 = 0x40cdbc;\n            fcn.00401292(\"Using service name [%s]\\n\", var_4h);\n            uStackY60 = 0x40cdc9;\n            (**(extraout_ECX + 0x14))();\n        }\n        puVar1 = extraout_ECX + 0x4c;\n        *puVar1 = 0;\n        var_18h = 0x1;\n        if (*0x41cdd1 != '\\0') {\n            var_20h = \"Sending credentials\\n\";\n            var_24h = 0x40cdeb;\n            fcn.00401292(\"Sending credentials\\n\", var_1ch);\n        }\n        *(extraout_ECX + 0x50) = 3;\n        do {\n            var_20h = NULL;\n            var_24h = &fcn.0040ccf1::var_1ch;\n            var_28h = &fcn.0040ccf1::var_10h;\n            var_2ch = NULL;\n            uStackY60 = 0;\n            uStackY64 = -(*(extraout_ECX + 0x44) != 0) & 2;\n            uStackY68 = 0;\n            puStackY72 = arg_18h;\n            arg_1ch = NULL;\n            uStackY80 = 0;\n            puStackY84 = &fcn.0040ccf1::arg_1ch;\n            uStackY88 = 0x40ce24;\n            puStackY76 = puVar1;\n            src = (**(extraout_ECX + 0x18))();\n            if ((src != NULL) && (src != 0x1)) {\n                var_20h = 0x4188c0;\n                var_24h = 0x40d04e;\n                (*arg_ch)();\n                var_24h = NULL;\n                var_28h = 0x40d053;\n                (*arg_8h)();\n                var_20h = &fcn.0040ccf1::arg_18h;\n                var_24h = &fcn.0040ccf1::s;\n                var_28h = 0x40d060;\n                (**(extraout_ECX + 0x1c))();\n                var_8h = 0x40d067;\n                fcn.0040ca3b();\n                var_8h = \"Error exchanging credentials\";\n                goto code_r0x0040d06c;\n            }\n            if (var_18h != NULL) {\n                var_24h = &stack0xffffd3b4;\n                var_20h = \"AUTH GSSAPI\\r\\n\";\n                var_28h = 0x40ce4c;\n                (*_sym.imp.MSVCRT.dll_sprintf)();\n                var_28h = &stack0xffffd3b4;\n                var_2ch = 0x40ce56;\n                iVar3 = (*arg_ch)();\n                if (iVar3 != 0) {\n                    var_20h = &stack0xffffb3b4;\n                    var_24h = 0x40ce6b;\n                    (*arg_8h)();\n                    var_24h = &stack0xffffb3b4;\n                    var_28h = 0x40ce77;\n                    var_20h = fcn.0040c9c2();\n                    if (var_20h == 0x14e) goto code_r0x0040ce83;\n                    puVar2 = \"The mail server doesn\\'t require AUTH GSSAPI.  Are you sure the server supports AUTH?\";\n                    puVar6 = &fcn.0040ccf1::var_42ch;\n                    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar6 = *puVar2;\n                        puVar2 = puVar2 + 1;\n                        puVar6 = puVar6 + 1;\n                    }\n                    *puVar6 = *puVar2;\n                    puVar2 = &fcn.0040ccf1::var_3d7h;\n                    for (iVar3 = 0xea; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar2 = 0;\n                        puVar2 = puVar2 + 1;\n                    }\n                    *puVar2 = 0;\n                    *(puVar2 + 2) = 0;\n                    var_28h = &fcn.0040ccf1::var_42ch;\n                    var_24h = \" (Code %d)\";\n                    var_2ch = 0x40d103;\n                    iVar3 = sub.MSVCRT.dll_strlen();\n                    var_28h = &fcn.0040ccf1::var_42ch + iVar3;\ncode_r0x0040d10b:\n                    var_2ch = 0x40d112;\n                    (*_sym.imp.MSVCRT.dll_sprintf)();\n                    var_20h = &fcn.0040ccf1::arg_18h;\n                    var_24h = &fcn.0040ccf1::s;\n                    var_28h = 0x40d120;\n                    (**(extraout_ECX + 0x1c))();\n                    goto code_r0x0040d404;\n                }\ncode_r0x0040d097:\n                var_20h = &fcn.0040ccf1::arg_18h;\n                var_24h = &fcn.0040ccf1::s;\n                var_28h = 0x40d0a2;\n                (**(extraout_ECX + 0x1c))();\n                goto code_r0x0040d0a2;\n            }\ncode_r0x0040ce83:\n            if (var_10h == NULL) {\n                var_20h = &fcn.0040ccf1::var_10h;\n                var_24h = &fcn.0040ccf1::arg_1ch;\n                var_28h = 0x40cf5a;\n                (**(extraout_ECX + 0x14))();\n            }\n            else {\n                var_20h = NULL;\n                var_24h = &stack0xffffb3b4;\n                var_28h = var_10h;\n                var_2ch = netlong;\n                fcn.0041103c(netlong, var_10h, var_24h, 0);\n                var_20h = &fcn.0040ccf1::var_10h;\n                var_24h = &fcn.0040ccf1::arg_1ch;\n                var_28h = 0x40ceaf;\n                (**(extraout_ECX + 0x14))();\n                var_28h = &stack0xffffb3b4;\n                var_2ch = \"%s\\r\\n\";\n                (*_sym.imp.MSVCRT.dll_sprintf)();\n                uStackY60 = 0x40ced2;\n                iVar3 = (*arg_ch)();\n                if (iVar3 == 0) goto code_r0x0040d097;\n                var_24h = &stack0xffffb3b4;\n                var_20h = 0x41632f;\n                var_28h = 0x40ceee;\n                sub.MSVCRT.dll_strcpy();\n                var_28h = &stack0xffffb3b4;\n                var_2ch = 0x40cef8;\n                (*arg_8h)();\n                var_2ch = &stack0xffffb3b4;\n                var_20h = fcn.0040c9c2();\n                if (var_20h != 0x14e) {\n                    puVar2 = \"The mail server doesn\\'t accept the token.\";\n                    puVar6 = &fcn.0040ccf1::var_42ch;\n                    for (iVar3 = 10; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar6 = *puVar2;\n                        puVar2 = puVar2 + 1;\n                        puVar6 = puVar6 + 1;\n                    }\n                    *puVar6 = *puVar2;\n                    puVar2 = &fcn.0040ccf1::var_402h;\n                    for (iVar3 = 0xf5; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar2 = 0;\n                        puVar2 = puVar2 + 1;\n                    }\n                    *puVar2 = 0;\n                    var_28h = &fcn.0040ccf1::var_42ch;\n                    var_24h = \" (Code %d)\";\n                    var_2ch = 0x40cf42;\n                    iVar3 = sub.MSVCRT.dll_strlen();\n                    var_28h = &fcn.0040ccf1::var_42ch + iVar3;\n                    goto code_r0x0040d10b;\n                }\n            }\n            if (src == 0x1) {\n                var_20h = &stack0xffff93b4;\n                var_24h = &stack0xffffb3b8;\n                var_28h = 0x40cf73;\n                var_8h = fcn.00410e11(var_24h, var_20h);\n                var_4h = &stack0xffff93b4;\n            }\n            else {\n                var_24h = &stack0xffffd3b4;\n                var_20h = 0x413644;\n                var_28h = 0x40cf9b;\n                (*_sym.imp.MSVCRT.dll_sprintf)();\n                var_28h = &stack0xffffd3b4;\n                var_2ch = 0x40cfa5;\n                iVar3 = (*arg_ch)();\n                if (iVar3 == 0) goto code_r0x0040d097;\n            }\n            var_18h = NULL;\n        } while (src == 0x1);\n        var_20h = &fcn.0040ccf1::arg_18h;\n        var_24h = &fcn.0040ccf1::var_28h;\n        var_28h = 0x40cfc9;\n        (**(extraout_ECX + 0x1c))();\n        var_2ch = &stack0xffffb3b4;\n        var_28h = 0x41632f;\n        *(extraout_ECX + 0x50) = 4;\n        sub.MSVCRT.dll_strcpy();\n        (*arg_8h)();\n        var_28h = &stack0xffffb3b4;\n        var_2ch = 0x40cff7;\n        var_1ch = fcn.0040c9c2();\n        if (var_1ch != 0x14e) {\n            puVar2 = \"The mail server didn\\'t return the proper security flag/buffer size info.\";\n            puVar6 = &fcn.0040ccf1::var_42ch;\n            for (iVar3 = 0x12; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = *puVar2;\n                puVar2 = puVar2 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar6 = *puVar2;\n            puVar2 = &fcn.0040ccf1::var_3e3h;\n            for (iVar3 = 0xed; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar2 = 0;\n                puVar2 = puVar2 + 1;\n            }\n            *puVar2 = 0;\n            *(puVar2 + 2) = 0;\n            var_24h = &fcn.0040ccf1::var_42ch;\n            var_20h = \" (Code %d)\";\n            var_28h = 0x40d039;\n            iVar3 = sub.MSVCRT.dll_strlen();\n            var_24h = &fcn.0040ccf1::var_42ch + iVar3;\ncode_r0x0040d3fa:\n            var_28h = 0x40d401;\n            (*_sym.imp.MSVCRT.dll_sprintf)();\n            goto code_r0x0040d404;\n        }\n        var_1ch = &stack0xffff93b4;\n        var_20h = &stack0xffffb3b8;\n        var_24h = 0x40d138;\n        var_8h = fcn.00410e11(var_20h, var_1ch);\n        var_4h = &stack0xffff93b4;\n        var_1ch = &fcn.0040ccf1::var_24h;\n        var_20h = &fcn.0040ccf1::var_1ch;\n        var_24h = &fcn.0040ccf1::var_10h;\n        var_28h = &fcn.0040ccf1::var_8h;\n        var_2ch = *puVar1;\n        puVar2 = (**(extraout_ECX + 0x20))();\n        if (puVar2 == NULL) {\n            if (*0x41cdd1 != '\\0') {\n                var_8h = \"Credential exchange complete\\n\";\n                netlong = 0x40d18d;\n                fcn.00401292(\"Credential exchange complete\\n\", var_4h);\n            }\n            src = src & 0xffffff | *netlong << 0x18;\n            if ((*(extraout_ECX + 0x40) & *netlong) == 0) {\n                var_8h = &fcn.0040ccf1::var_10h;\n                netlong = &fcn.0040ccf1::arg_1ch;\n                var_10h = 0x40d1a9;\n                (**(extraout_ECX + 0x14))();\n                var_10h = 0x40d1b0;\n                fcn.0040ca3b();\n                var_10h = \"Server does not support required encryption level.\";\n                goto code_r0x0040d412;\n            }\n            *netlong = 0;\n            var_8h = *netlong;\n            netlong = 0x40d1c7;\n            sub.WSOCK32.dll_ntohl();\n            netlong = &fcn.0040ccf1::var_10h;\n            var_10h = &fcn.0040ccf1::arg_1ch;\n            hostlong = 0x40d1d5;\n            (**(extraout_ECX + 0x14))();\n            if (*0x41cdd1 != '\\0') {\n                var_10h = 0x41632f;\n                var_8h = \"GSSAUTH_P_PRIVACY\";\n                if ((src & 0x4000000) == 0) {\n                    var_8h = 0x41632f;\n                }\n                netlong = \"GSSAUTH_P_INTEGRITY \";\n                if ((src & 0x2000000) == 0) {\n                    netlong = 0x41632f;\n                }\n                if ((src & 0x1000000) != 0) {\n                    var_10h = \"GSSAUTH_P_NONE \";\n                }\n                hostlong = \"Server supports: %s%s%s\";\n                var_18h = 0x40d215;\n                fcn.00401292(\"Server supports: %s%s%s\", var_10h);\n                var_18h = hostlong;\n                var_1ch = \"\\nMaximum GSS token size is %ld after wrapping\\n\";\n                var_20h = 0x40d222;\n                fcn.00401292(\"\\nMaximum GSS token size is %ld after wrapping\\n\", hostlong);\n            }\n            if (*(extraout_ECX + 0x40) != 1) {\n                netlong = hostlong;\n                hostlong = *(extraout_ECX + 0x40) == 4;\n                var_10h = NULL;\n                var_1ch = &fcn.0040ccf1::arg_1ch;\n                var_18h = *puVar1;\n                var_20h = 0x40d248;\n                var_8h = extraout_ECX + 0x48;\n                src = (**(extraout_ECX + 0x28))();\n                if (src != NULL) {\n                    var_8h = 0x40d256;\n                    fcn.0040ca3b();\n                    var_8h = \"Error determining maxmimum pre-wrapped token size.\";\ncode_r0x0040d06c:\n                    netlong = arg_1ch;\n                    var_10h = src;\n                    goto code_r0x0040d072;\n                }\n                if (*0x41cdd1 != '\\0') {\n                    var_8h = *(extraout_ECX + 0x48);\n                    netlong = \"Maximum GSS token size is %u before wrapping\\n\";\n                    var_10h = 0x40d275;\n                    fcn.00401292(\"Maximum GSS token size is %u before wrapping\\n\", var_8h);\n                }\n            }\n            var_8h = hostlong;\n            netlong = 0x40d27f;\n            sub.WSOCK32.dll_htonl();\n            netlong = 0x4;\n            var_10h = &fcn.0040ccf1::hostlong;\n            hostlong = &stack0xffffb3b4;\n            var_18h = 0x40d294;\n            sub.MSVCRT.dll_memcpy();\n            uStackY19532._0_1_ = *(extraout_ECX + 0x40);\n            var_18h = s;\n            var_1ch = &stack0xffffb3b8;\n            var_20h = 0x40d2ac;\n            sub.MSVCRT.dll_strcpy();\n            var_20h = s;\n            var_24h = 0x40d2b4;\n            iVar3 = sub.MSVCRT.dll_strlen();\n            var_8h = iVar3 + 5;\n            var_4h = &stack0xffffb3b4;\n            netlong = &fcn.0040ccf1::var_10h;\n            var_10h = &fcn.0040ccf1::var_1ch;\n            hostlong = &fcn.0040ccf1::var_8h;\n            var_18h = NULL;\n            var_1ch = NULL;\n            var_20h = *puVar1;\n            var_24h = &fcn.0040ccf1::arg_1ch;\n            var_28h = 0x40d2df;\n            puVar2 = (**(extraout_ECX + 0x24))();\n            if (puVar2 != NULL) {\n                var_8h = 0x40d2ec;\n                fcn.0040ca3b();\n                var_8h = \"Error creating security level request.\";\n                netlong = arg_1ch;\n                var_10h = puVar2;\n                goto code_r0x0040d072;\n            }\n            var_8h = NULL;\n            hostlong = &stack0xffffb3b4;\n            var_18h = 0x40d30d;\n            netlong = hostlong;\n            fcn.0041103c(hostlong, var_10h, hostlong, 0);\n            var_8h = &fcn.0040ccf1::var_10h;\n            netlong = &fcn.0040ccf1::arg_1ch;\n            var_10h = 0x40d31b;\n            (**(extraout_ECX + 0x14))();\n            pcVar5 = \"PRIVACY\";\n            pcVar4 = \"INTEGRITY\";\n            if (*0x41cdd1 != '\\0') {\n                if (*(extraout_ECX + 0x40) == 1) {\n                    hostlong = \"NONE\";\n                }\n                else {\n                    hostlong = \"PRIVACY\";\n                    if (*(extraout_ECX + 0x40) != 4) {\n                        hostlong = \"INTEGRITY\";\n                    }\n                }\n                var_10h = s;\n                var_18h = \"Requesting GSSAUTH_P_%s protection as \\\"%s\\\"\\n\";\n                var_1ch = 0x40d354;\n                fcn.00401292(\"Requesting GSSAUTH_P_%s protection as \\\"%s\\\"\\n\", hostlong);\n            }\n            var_10h = &stack0xffffb3b4;\n            var_18h = &stack0xffffd3b4;\n            hostlong = \"%s\\r\\n\";\n            var_1ch = 0x40d370;\n            (*_sym.imp.MSVCRT.dll_sprintf)();\n            var_1ch = &stack0xffffd3b4;\n            var_20h = 0x40d37a;\n            iVar3 = (*arg_ch)();\n            if (iVar3 != 0) {\n                var_18h = &stack0xffffb3b4;\n                hostlong = 0x41632f;\n                var_1ch = 0x40d396;\n                sub.MSVCRT.dll_strcpy();\n                var_1ch = &stack0xffffb3b4;\n                var_20h = 0x40d3a0;\n                (*arg_8h)();\n                var_28h = &stack0xffffb3b4;\n                var_2ch = 0x40d3ac;\n                var_1ch = fcn.0040c9c2();\n                if (var_1ch == 0xeb) goto code_r0x0040d43e;\n                puVar2 = \"The mail server did not properly finalize the authentication.\";\n                puVar6 = &fcn.0040ccf1::var_42ch;\n                for (iVar3 = 0xf; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar6 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                *puVar6 = *puVar2;\n                puVar2 = &fcn.0040ccf1::var_3eeh;\n                for (iVar3 = 0xf0; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar2 = 0;\n                    puVar2 = puVar2 + 1;\n                }\n                *puVar2 = 0;\n                var_24h = &fcn.0040ccf1::var_42ch;\n                var_20h = \" (Code %d)\";\n                var_28h = 0x40d3f2;\n                iVar3 = sub.MSVCRT.dll_strlen();\n                var_24h = &fcn.0040ccf1::var_42ch + iVar3;\n                goto code_r0x0040d3fa;\n            }\ncode_r0x0040d0a2:\n            hostlong = 0x40d0a9;\n            fcn.0040ca3b();\n            hostlong = 0x40d0b4;\n            puVar2 = fcn.0040c993();\n            puVar6 = &fcn.0040ccf1::var_1439h;\n            for (iVar3 = 0x403; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = *puVar2;\n                puVar2 = puVar2 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            pcVar5 = puVar6 + 1;\n            pcVar4 = puVar2 + 1;\n            *puVar6 = *puVar2;\n            hostlong = 0x41a1dc;\n        }\n        else {\n            var_8h = 0x40d16c;\n            fcn.0040ca3b();\n            var_8h = \"Couldn\\'t unwrap security level data.\";\n            netlong = arg_1ch;\n            var_10h = puVar2;\ncode_r0x0040d072:\n            hostlong = 0x40d07d;\n            arg_1ch = netlong;\n            puVar2 = fcn.0040c953();\n            puVar6 = &fcn.0040ccf1::var_1439h;\n            for (iVar3 = 0x403; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = *puVar2;\n                puVar2 = puVar2 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            pcVar5 = puVar6 + 1;\n            pcVar4 = puVar2 + 1;\n            *puVar6 = *puVar2;\n            hostlong = 0x41a1ec;\n        }\n    }\n    else {\n        var_10h = 0x40cd36;\n        var_8h = unaff_ESI;\n        var_4h = unaff_EBX;\n        fcn.0040ca3b();\n        var_10h = \"Already authenticated.\";\ncode_r0x0040d412:\n        hostlong = 0x40d41d;\n        puVar2 = fcn.0040c8be();\n        puVar6 = &fcn.0040ccf1::var_1439h;\n        for (iVar3 = 0x403; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar6 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        pcVar5 = puVar6 + 1;\n        pcVar4 = puVar2 + 1;\n        *puVar6 = *puVar2;\n        hostlong = 0x41a1cc;\n    }\n    var_18h = &fcn.0040ccf1::var_1439h;\n    var_1ch = 0x40d43e;\n    sub.MSVCRT.dll__CxxThrowException();\ncode_r0x0040d43e:\n    *(extraout_ECX + 0x50) = 5;\n    if ((*0x41cdd1 != '\\0') && (*(extraout_ECX + 0x40) != 1)) {\n        var_1ch = pcVar5;\n        if (*(extraout_ECX + 0x40) != 4) {\n            var_1ch = pcVar4;\n        }\n        var_20h = \"From now on, everything is encrypted via GSSAUTH_P_%s.\\n\";\n        var_24h = 0x40d46a;\n        fcn.00401292(\"From now on, everything is encrypted via GSSAUTH_P_%s.\\n\", var_1ch);\n    }\n    return;\n}\n",
        "token_count": 7115
    },
    "0040d6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: hostlong\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0040d6c0(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint *puVar7;\n    uint *in_FS_OFFSET;\n    uint var_1045h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint hostlong;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.004123b0();\n    uVar6 = 0;\n    *(unaff_EBP + -0x2c) = 0;\n    if (*(extraout_ECX + 0x40) == 1) {\n        fcn.0040d6a7(*(unaff_EBP + 0xc));\n    }\n    else {\n        fcn.00401062();\n        iVar5 = *(extraout_ECX + 0x50);\n        *(unaff_EBP + -4) = 1;\n        if (iVar5 != 5) {\n            fcn.0040ca3b();\n            puVar2 = fcn.0040c8be(\"Not ready to communicate.  Need to authenticate first.\");\n            puVar7 = unaff_EBP + -0x1045;\n            for (iVar5 = 0x403; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = *puVar2;\n                puVar2 = puVar2 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = *puVar2;\n            var_10h = 0x41a1cc;\ncode_r0x0040d873:\n            sub.MSVCRT.dll__CxxThrowException(unaff_EBP + -0x1045, var_10h);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        fcn.0040106f();\n        iVar5 = fcn.00401156();\n        if (iVar5 != 0) {\n            do {\n                iVar5 = fcn.00401156();\n                uVar3 = iVar5 - uVar6;\n                if (*(extraout_ECX + 0x48) < iVar5 - uVar6) {\n                    uVar3 = *(extraout_ECX + 0x48);\n                }\n                *(unaff_EBP + -0x34) = uVar3;\n                iVar5 = fcn.0040d473();\n                *(unaff_EBP + -0x30) = iVar5 + uVar6;\n                uVar6 = uVar6 + uVar3;\n                iVar5 = (**(extraout_ECX + 0x24))\n                                  (unaff_EBP + -0x10, *(extraout_ECX + 0x4c), *(extraout_ECX + 0x40) == 4, 0, \n                                   unaff_EBP + -0x34, unaff_EBP + -0x38, unaff_EBP + -0x18);\n                if (iVar5 != 0) {\n                    fcn.0040ca3b();\n                    puVar2 = fcn.0040c953(iVar5, *(unaff_EBP + -0x10), \"Could not gss_wrap message.\");\n                    puVar7 = unaff_EBP + -0x1045;\n                    for (iVar5 = 0x403; iVar5 != 0; iVar5 = iVar5 + -1) {\n                        *puVar7 = *puVar2;\n                        puVar2 = puVar2 + 1;\n                        puVar7 = puVar7 + 1;\n                    }\n                    *puVar7 = *puVar2;\n                    var_10h = 0x41a1ec;\n                    goto code_r0x0040d873;\n                }\n                uVar4 = sub.WSOCK32.dll_htonl(*(unaff_EBP + -0x18));\n                *(unaff_EBP + -0x1c) = uVar4;\n                fcn.004010e1(unaff_EBP + -0x1c, 4);\n                fcn.004010e1(*(unaff_EBP + -0x14), *(unaff_EBP + -0x18));\n                (**(extraout_ECX + 0x14))(unaff_EBP + -0x10, unaff_EBP + -0x18);\n                if ((*0x41cdd1 != '\\0') && (uVar3 = fcn.00401156(),  uVar6 < uVar3)) {\n                    iVar5 = fcn.00401156();\n                    fcn.00401292(\"Message to be encrypted is being split into several tokens: %d bytes left\\n\", \n                                 iVar5 - uVar6);\n                }\n                uVar3 = fcn.00401156();\n            } while (uVar6 < uVar3);\n        }\n        fcn.0040d6a7(unaff_EBP + -0x28);\n        *(unaff_EBP + -0x2c) = 1;\n        *(unaff_EBP + -4) = 0;\n        fcn.00401054();\n    }\n    uVar4 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 1370
    },
    "0040db1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040db1a(int32_t param_1)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    \n    param_1 = param_1 + 0x804;\n    uVar1 = fcn.0040c8eb();\n    sub.MSVCRT.dll_strcpy(param_1, uVar1);\n    pcVar2 = fcn.0040da28();\n    if (*pcVar2 != '\\0') {\n        sub.MSVCRT.dll_strcat(param_1, 0x418cbc);\n        sub.MSVCRT.dll_strcat(param_1, pcVar2);\n    }\n    return param_1;\n}\n",
        "token_count": 150
    },
    "0040dd54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040dd54(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    uVar1 = sub.MSVCRT.dll_strlen(param_2);\n    iVar2 = fcn.00410c29(param_1, param_2, uVar1);\n    if (iVar2 != 0) {\n        if (iVar2 == 0xfb0) {\n            iVar2 = 0xfb0;\n            pcVar3 = \"Server has closed the connection\";\n        }\n        else {\n            pcVar3 = \"gensock_put_data\";\n        }\n        fcn.0040db5a(pcVar3, iVar2, 0x41632f);\n        return 0xffffffff;\n    }\n    if (*0x41cdd1 != '\\0') {\n        fcn.00401292(\">>>putline>>> %s\\n\", param_2);\n    }\n    return 0;\n}\n",
        "token_count": 214
    },
    "0040df94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_824h\n\nuint __cdecl fcn.0040df94(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t unaff_EBP;\n    char *pcVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uint uVar8;\n    uint var_824h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_dh;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + 8) != 0) {\n        fcn.0040106f();\n        fcn.0040118b(0x41632f);\n    }\n    uVar8 = 0x41632f;\n    fcn.0040118b(0x41632f);\n    pcVar6 = unaff_EBP + -0x824;\ncode_r0x0040dfe6:\n    *(unaff_EBP + -0x821) = 0;\n    *(unaff_EBP + -0xd) = 0x2e;\n    do {\n        iVar4 = fcn.00410c0d(*0x425298, 0, unaff_EBP + -0xd);\n        if (iVar4 != 0) {\n            fcn.0040db5a(\"gensock_getchar\", iVar4, 0x41632f);\n            uVar8 = 0xffffffff;\n            goto code_r0x0040e2ae;\n        }\n        cVar1 = *(unaff_EBP + -0xd);\n        if ((cVar1 != '\\0') && (pcVar6 != unaff_EBP + -0x25)) {\n            *pcVar6 = cVar1;\n            pcVar6 = pcVar6 + 1;\n        }\n    } while (cVar1 != '\\n');\n    *pcVar6 = '\\0';\n    iVar7 = 0;\n    if (*(unaff_EBP + 0xc) == 0) {\n        fcn.00401119(unaff_EBP + -0x824);\n        if (*0x41cdd1 != '\\0') {\n            fcn.00401292(\"<<<getline<<< %s\\n\", unaff_EBP + -0x824);\n        }\n    }\n    else {\n        if ((((((*(unaff_EBP + -0x824) < '0') || ('9' < *(unaff_EBP + -0x824))) || (*(unaff_EBP + -0x823) < '0')) ||\n             (('9' < *(unaff_EBP + -0x823) || (*(unaff_EBP + -0x822) < '0')))) ||\n            (('9' < *(unaff_EBP + -0x822) || (*(unaff_EBP + -0x821) != ' ')))) && (*(unaff_EBP + -0x821) != '-')) {\n            if (*0x41cdd1 != '\\0') {\n                fcn.00401292(\"Invalid server response received: %s\\n\", unaff_EBP + -0x824);\n            }\n            *(unaff_EBP + -0x821) = 0;\n        }\n        else {\n            fcn.00401119(unaff_EBP + -0x824);\n            if (*0x41cdd1 != '\\0') {\n                fcn.00401292(\"<<<getline<<< %s\\n\", unaff_EBP + -0x824);\n            }\n        }\n        if (*(unaff_EBP + -0x821) == ' ') goto code_r0x0040e0cf;\n    }\n    if (0 < *0x41cbdc << 2) {\n        do {\n            iVar4 = fcn.00410c0d(*0x425298, 1, unaff_EBP + -0xd);\n            if (iVar4 != 0xfad) break;\n            (*_sym.imp.KERNEL32.dll_Sleep)(0xfa);\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < *0x41cbdc * 4);\n    }\n    if (iVar4 != 0) goto code_r0x0040e0cf;\n    cVar1 = *(unaff_EBP + -0xd);\n    pcVar6 = unaff_EBP + -0x824;\n    if ((cVar1 != '\\r') && (cVar1 != '\\n')) {\n        *(unaff_EBP + -0x824) = cVar1;\n        pcVar6 = unaff_EBP + -0x823;\n    }\n    goto code_r0x0040dfe6;\ncode_r0x0040e0cf:\n    if (*(unaff_EBP + 8) != 0) {\n        iVar4 = fcn.0040d473();\n        if (iVar4 != 0) {\n            for (pcVar6 = fcn.0040d473(); cVar1 = *pcVar6,  cVar1 != '\\0'; pcVar6 = pcVar6 + 1) {\n                if (cVar1 != '\\r') {\n                    if (cVar1 == '\\n') {\n                        uVar8 = 0;\n                    }\n                    else {\n                        if (cVar1 != '\\t') {\n                            fcn.004010e1(pcVar6, 1);\n                            goto code_r0x0040e1d2;\n                        }\n                        uVar8 = 0x20;\n                    }\n                    fcn.00401136(uVar8);\n                }\ncode_r0x0040e1d2:\n            }\n            fcn.00401136(0);\n            uVar8 = 0;\n            fcn.00401136();\n        }\n    }\n    pcVar3 = _sym.imp.MSVCRT.dll_atoi;\n    if (*(unaff_EBP + 0xc) != 0) {\n        uVar8 = fcn.0040d473(uVar8);\n        iVar4 = (*pcVar3)(uVar8);\n        piVar2 = *(unaff_EBP + 0xc);\n        *piVar2 = iVar4;\n        uVar5 = fcn.00401156();\n        if (9 < uVar5) {\n            iVar4 = fcn.0040d473();\n            if (((('/' < *(iVar4 + 4)) && (*(iVar4 + 5) < ':')) && (*(iVar4 + 6) == '.')) &&\n               ((('/' < *(iVar4 + 7) && (*(iVar4 + 8) < ':')) &&\n                ((*(iVar4 + 9) == '.' && (('/' < *(iVar4 + 10) && (*(iVar4 + 0xb) < ':')))))))) {\n                iVar4 = fcn.0040d473(\"%u.%u.%u\", unaff_EBP + 8, unaff_EBP + -0x24, unaff_EBP + -0x20);\n                (*_sym.imp.MSVCRT.dll_sscanf)(iVar4 + 4);\n                *piVar2 = *(unaff_EBP + -0x20) + (*(unaff_EBP + -0x24) + *(unaff_EBP + 8) * 10) * 10;\n            }\n        }\n    }\n    uVar8 = (*pcVar3)(unaff_EBP + -0x824);\ncode_r0x0040e2ae:\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar8;\n}\n",
        "token_count": 1736
    },
    "0040e2cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.0040e2cb(uint dest)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0040df94(unaff_EBP + -0x1c, unaff_EBP + -0x10);\n    if (*(unaff_EBP + 8) != 0) {\n        uVar2 = fcn.0040d473();\n        sub.MSVCRT.dll_strcpy(*(unaff_EBP + 8), uVar2);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 253
    },
    "0040e32a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: s1\n\nint32_t __cdecl fcn.0040e32a(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    char *pcVar4;\n    uint *in_FS_OFFSET;\n    uint s1;\n    uint var_1ch;\n    uint var_dh;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + 8) != 0) {\n        fcn.0040106f();\n        fcn.0040118b(0x41632f);\n    }\n    fcn.0040118b(0x41632f);\n    pcVar4 = unaff_EBP + -0x81c;\n    *(unaff_EBP + -0x81c) = 0;\n    while( true ) {\n        *(unaff_EBP + -0xd) = 0x2e;\n        do {\n            iVar2 = fcn.00410c0d(*0x425298, 0, unaff_EBP + -0xd);\n            if (iVar2 != 0) {\n                fcn.0040db5a(\"gensock_getchar\", iVar2, 0x41632f);\n                iVar2 = -1;\n                goto code_r0x0040e53e;\n            }\n            cVar1 = *(unaff_EBP + -0xd);\n            if ((cVar1 != '\\0') && (pcVar4 != unaff_EBP + -0x1d)) {\n                *pcVar4 = cVar1;\n                pcVar4 = pcVar4 + 1;\n            }\n        } while (cVar1 != '\\n');\n        *pcVar4 = '\\0';\n        fcn.00401119(unaff_EBP + -0x81c);\n        if (*0x41cdd1 != '\\0') {\n            fcn.00401292(\"<<<getline<<< %s\\n\", unaff_EBP + -0x81c);\n        }\n        iVar3 = sub.MSVCRT.dll_memcmp(unaff_EBP + -0x81c, 0x4190c4, 3);\n        if (iVar3 == 0) break;\n        iVar3 = sub.MSVCRT.dll_memcmp(unaff_EBP + -0x81c, \"-ERR\", 4);\n        if (iVar3 == 0) break;\n        iVar3 = 0;\n        if (0 < *0x41cbdc << 2) {\n            do {\n                iVar2 = fcn.00410c0d(*0x425298, 1, unaff_EBP + -0xd);\n                if (iVar2 != 0xfad) break;\n                (*_sym.imp.KERNEL32.dll_Sleep)(0xfa);\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < *0x41cbdc * 4);\n        }\n        if (iVar2 != 0) break;\n        cVar1 = *(unaff_EBP + -0xd);\n        pcVar4 = unaff_EBP + -0x81c;\n        if ((cVar1 != '\\r') && (cVar1 != '\\n')) {\n            *(unaff_EBP + -0x81c) = cVar1;\n            pcVar4 = unaff_EBP + -0x81b;\n        }\n    }\n    if (*(unaff_EBP + 8) != 0) {\n        iVar2 = fcn.0040d473();\n        if (iVar2 != 0) {\n            for (pcVar4 = fcn.0040d473(); cVar1 = *pcVar4,  cVar1 != '\\0'; pcVar4 = pcVar4 + 1) {\n                if (cVar1 != '\\r') {\n                    if (cVar1 == '\\n') {\n                        s1 = 0;\n                    }\n                    else {\n                        if (cVar1 != '\\t') {\n                            fcn.004010e1(pcVar4, 1);\n                            goto code_r0x0040e4e7;\n                        }\n                        s1 = 0x20;\n                    }\n                    fcn.00401136(s1);\n                }\ncode_r0x0040e4e7:\n            }\n            fcn.00401136(0);\n            fcn.00401136(0);\n        }\n    }\n    iVar2 = sub.MSVCRT.dll_memcmp(unaff_EBP + -0x81c, 0x4190c4, 3);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = sub.MSVCRT.dll_memcmp(unaff_EBP + -0x81c, \"-ERR\", 4);\n        iVar2 = (iVar2 != 0) + 1;\n    }\ncode_r0x0040e53e:\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 1160
    },
    "0040e55b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_81ch\n\nuint32_t __cdecl fcn.0040e55b(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    char *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint var_81ch;\n    uint var_1ch;\n    uint var_dh;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + 8) != 0) {\n        fcn.0040106f();\n        fcn.0040118b(0x41632f);\n    }\n    fcn.0040118b(0x41632f);\n    pcVar3 = unaff_EBP + -0x81c;\n    *(unaff_EBP + -0x81c) = 0;\n    while( true ) {\n        *(unaff_EBP + -0xd) = 0;\n        do {\n            iVar2 = fcn.00410c0d(*0x425298, 0, unaff_EBP + -0xd);\n            if (iVar2 != 0) {\n                fcn.0040db5a(\"gensock_getchar\", iVar2, 0x41632f);\n                uVar5 = 0xffffffff;\n                goto code_r0x0040e715;\n            }\n            cVar1 = *(unaff_EBP + -0xd);\n            if ((cVar1 != '\\0') && (pcVar3 != unaff_EBP + -0x1d)) {\n                *pcVar3 = cVar1;\n                pcVar3 = pcVar3 + 1;\n            }\n        } while (cVar1 != '\\n');\n        *pcVar3 = '\\0';\n        fcn.00401119(unaff_EBP + -0x81c);\n        if (*0x41cdd1 != '\\0') {\n            fcn.00401292(\"<<<getline<<< %s\\n\", unaff_EBP + -0x81c);\n        }\n        if (*(unaff_EBP + -0x81c) != '\\0') break;\n        iVar4 = 0;\n        if (0 < *0x41cbdc << 2) {\n            do {\n                iVar2 = fcn.00410c0d(*0x425298, 1, unaff_EBP + -0xd);\n                if (iVar2 != 0xfad) break;\n                (*_sym.imp.KERNEL32.dll_Sleep)(0xfa);\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < *0x41cbdc * 4);\n        }\n        if (iVar2 != 0) break;\n        cVar1 = *(unaff_EBP + -0xd);\n        pcVar3 = unaff_EBP + -0x81c;\n        if (((cVar1 != '\\0') && (cVar1 != '\\r')) && (cVar1 != '\\n')) {\n            *(unaff_EBP + -0x81c) = cVar1;\n            pcVar3 = unaff_EBP + -0x81b;\n        }\n    }\n    if (*(unaff_EBP + 8) != 0) {\n        iVar2 = fcn.0040d473();\n        if (iVar2 != 0) {\n            for (pcVar3 = fcn.0040d473(); cVar1 = *pcVar3,  cVar1 != '\\0'; pcVar3 = pcVar3 + 1) {\n                if (cVar1 != '\\r') {\n                    if (cVar1 == '\\n') {\n                        var_81ch = 0;\n                    }\n                    else {\n                        if (cVar1 != '\\t') {\n                            fcn.004010e1(pcVar3, 1);\n                            goto code_r0x0040e6ee;\n                        }\n                        var_81ch = 0x20;\n                    }\n                    fcn.00401136(var_81ch);\n                }\ncode_r0x0040e6ee:\n            }\n            fcn.00401136(0);\n            fcn.00401136(0);\n        }\n    }\n    uVar5 = *(unaff_EBP + -0x81b) == ' ';\ncode_r0x0040e715:\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 1036
    },
    "0040e732": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: s1\n\nuint32_t __cdecl fcn.0040e732(uint arg_8h, uint s2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint s1;\n    uint var_1ch;\n    uint var_dh;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + 8) != 0) {\n        fcn.0040106f();\n        fcn.0040118b(0x41632f);\n    }\n    fcn.0040118b(0x41632f);\n    pcVar5 = unaff_EBP + -0x81c;\n    *(unaff_EBP + -0x81c) = 0;\n    while( true ) {\n        *(unaff_EBP + -0xd) = 0;\n        do {\n            iVar2 = fcn.00410c0d(*0x425298, 0, unaff_EBP + -0xd);\n            if (iVar2 != 0) {\n                fcn.0040db5a(\"gensock_getchar\", iVar2, 0x41632f);\n                uVar6 = 0xffffffff;\n                goto code_r0x0040e917;\n            }\n            cVar1 = *(unaff_EBP + -0xd);\n            if ((cVar1 != '\\0') && (pcVar5 != unaff_EBP + -0x1d)) {\n                *pcVar5 = cVar1;\n                pcVar5 = pcVar5 + 1;\n            }\n        } while (cVar1 != '\\n');\n        *pcVar5 = '\\0';\n        fcn.00401119(unaff_EBP + -0x81c);\n        if (*0x41cdd1 != '\\0') {\n            fcn.00401292(\"<<<getline<<< %s\\n\", unaff_EBP + -0x81c);\n        }\n        uVar3 = sub.MSVCRT.dll_strlen(*(unaff_EBP + 0xc));\n        iVar4 = sub.MSVCRT.dll_memcmp(unaff_EBP + -0x81c, *(unaff_EBP + 0xc), uVar3);\n        if (iVar4 == 0) break;\n        iVar4 = 0;\n        if (0 < *0x41cbdc << 2) {\n            do {\n                iVar2 = fcn.00410c0d(*0x425298, 1, unaff_EBP + -0xd);\n                if (iVar2 != 0xfad) break;\n                (*_sym.imp.KERNEL32.dll_Sleep)(0xfa);\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < *0x41cbdc * 4);\n        }\n        if (iVar2 != 0) break;\n        cVar1 = *(unaff_EBP + -0xd);\n        pcVar5 = unaff_EBP + -0x81c;\n        if (((cVar1 != '\\0') && (cVar1 != '\\r')) && (cVar1 != '\\n')) {\n            *(unaff_EBP + -0x81c) = cVar1;\n            pcVar5 = unaff_EBP + -0x81b;\n        }\n    }\n    if (*(unaff_EBP + 8) != 0) {\n        iVar2 = fcn.0040d473();\n        if (iVar2 != 0) {\n            for (pcVar5 = fcn.0040d473(); cVar1 = *pcVar5,  cVar1 != '\\0'; pcVar5 = pcVar5 + 1) {\n                if (cVar1 != '\\r') {\n                    if (cVar1 == '\\n') {\n                        s1 = 0;\n                    }\n                    else {\n                        if (cVar1 != '\\t') {\n                            fcn.004010e1(pcVar5, 1);\n                            goto code_r0x0040e8db;\n                        }\n                        s1 = 0x20;\n                    }\n                    fcn.00401136(s1);\n                }\ncode_r0x0040e8db:\n            }\n            fcn.00401136(0);\n            fcn.00401136(0);\n        }\n    }\n    uVar3 = sub.MSVCRT.dll_strlen(*(unaff_EBP + 0xc));\n    iVar2 = sub.MSVCRT.dll_memcmp(unaff_EBP + -0x81c, *(unaff_EBP + 0xc), uVar3);\n    uVar6 = iVar2 != 0;\ncode_r0x0040e917:\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar6;\n}\n",
        "token_count": 1135
    },
    "0040e9f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040e9f7(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x42529c != '\\0') && (*0x41d844 == '\\0')) {\n        iVar1 = fcn.0040115a();\n        if (*(iVar1 + -3) != '\\n') {\n            fcn.00401119(0x413644);\n        }\n        fcn.00401119(\"--=_BlatBoundary-\");\n        fcn.004010e1(param_1, 0x15);\n        fcn.00401119(\"--\\r\\n\");\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0040ea4e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: s1\n\nuint __cdecl\nfcn.0040ea4e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint uVar10;\n    char *s1;\n    char *pcVar11;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401062();\n    fcn.004011b2();\n    pcVar11 = 0x2000;\n    *(unaff_EBP + -4) = 2;\n    fcn.0040109b(0x2000);\n    if ((*(unaff_EBP + 0x1c) != 0) || (*(unaff_EBP + 0x24) != 0)) goto code_r0x0040f789;\n    uVar10 = *(unaff_EBP + 8);\n    if (*(unaff_EBP + 0x20) != 0) {\n        iVar3 = fcn.0040115a(0x4192c8, 3);\n        iVar3 = sub.MSVCRT.dll_memcmp(iVar3 + -3);\n        if (iVar3 != 0) {\n            fcn.00401119(0x413644);\n        }\n        uVar4 = fcn.0040d473();\n        fcn.00401119(uVar4);\n        iVar3 = fcn.00401156();\n        if (iVar3 != 0) {\n            uVar4 = fcn.0040d473(\"This is a multi-part message in MIME format.\");\n            iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(uVar4);\n            if (iVar3 == 0) {\n                *0x42529d = '\\0';\n            }\n        }\n    }\n    if (*0x41eaaa != '\\0') {\n        iVar3 = fcn.0040115a(0x4192c8, 3);\n        iVar3 = sub.MSVCRT.dll_memcmp(iVar3 + -3);\n        if (iVar3 != 0) {\n            fcn.00401119(0x413644);\n        }\n    }\n    if (*(unaff_EBP + 0xc) != 0) {\n        if (((*0x41f5cc == '\\0') || (*0x41cee1 == '\\0')) &&\n           (iVar3 = (*_sym.imp.MSVCRT.dll__stricmp)(0x41cee4, \"UTF-8\"),  iVar3 != 0)) {\n            *(unaff_EBP + -0x2c) = 7;\n        }\n        else {\n            *(unaff_EBP + -0x2c) = 8;\n        }\n        if (((*(unaff_EBP + 0x14) == 0) && (*0x41e069 == '\\0')) && (*0x41d844 == '\\0')) {\n            uVar4 = fcn.0040d473(0);\n            iVar3 = fcn.00411d97(uVar4);\n            if (iVar3 != 0) {\n                *0x41ccc9 = '\\x01';\n            }\n        }\n        if (*0x42529d != '\\0') {\n            iVar3 = fcn.00401156();\n            uVar4 = *0x41d738;\n            if (iVar3 != 0) {\n                *(unaff_EBP + -0x30) = 0;\n                *(unaff_EBP + -0x40) = 0;\n                *(unaff_EBP + -0x28) = uVar4;\n                *(unaff_EBP + -0x38) = 0;\n                fcn.00408953(0x4241b4, unaff_EBP + -0x28, unaff_EBP + -0x38, *(unaff_EBP + -0x2c));\n                if (*0x42404d == '\\0') {\n                    if (*0x41ccc8 != '\\0') goto code_r0x0040ec88;\n                }\n                else {\n                    if (*0x41ccc8 != '\\0') {\n                        fcn.00401119(\"--=_BlatBoundary-\");\n                        fcn.00401119(*(unaff_EBP + 0x18));\n                        fcn.00401119(\"Content-Type:\");\n                        fcn.00401119(\" multipart/related;\\r\\n\");\n                        fcn.00401119(\" type=\\\"multipart/alternative\\\";\\r\\n\");\n                        fcn.00401119(\" boundary=\\\"=_BlatBoundary-\");\n                        fcn.0040a649(*(unaff_EBP + 0x18));\n                        fcn.004010e1(*(unaff_EBP + 0x18), 0x15);\n                        fcn.00401119(\"\\\"\\r\\n\\r\\n\");\n                    }\ncode_r0x0040ec88:\n                    fcn.00401119(\"--=_BlatBoundary-\");\n                    fcn.00401119(*(unaff_EBP + 0x18));\n                    fcn.00401119(\"Content-Type:\");\n                    fcn.00401119(\" multipart/alternative;\\r\\n\");\n                    fcn.00401119(\" boundary=\\\"=_BlatBoundary-\");\n                    fcn.0040a649(*(unaff_EBP + 0x18));\n                    fcn.004010e1(*(unaff_EBP + 0x18), 0x15);\n                    pcVar11 = \"\\\"\\r\\n\\r\\n\";\n                    fcn.00401119();\n                }\n                fcn.00401119(\"--=_BlatBoundary-\", pcVar11);\n                pcVar11 = *(unaff_EBP + 0x18);\n                fcn.00401119(pcVar11);\n                uVar4 = fcn.0040d473(1);\n                iVar3 = fcn.00411d97(uVar4);\n                if (iVar3 == 0) {\n                    s1 = \"Content-Transfer-Encoding: 7BIT\\r\\n\";\n                }\n                else {\n                    *(unaff_EBP + -0x30) = 1;\n                    s1 = \"Content-Transfer-Encoding: quoted-printable\\r\\n\";\n                }\n                fcn.00401119(s1);\n                pcVar2 = _sym.imp.MSVCRT.dll_strchr;\n                if (*0x41ccca != '\\0') {\n                    fcn.0040106f();\n                    pcVar5 = fcn.0040d473();\n                    if (*pcVar5 != '\\0') {\n                        do {\n                            iVar3 = (*pcVar2)(pcVar5, 0x7c);\n                            *(unaff_EBP + 0x1c) = iVar3;\n                            if (iVar3 == 0) break;\n                            fcn.004010e1(pcVar5, iVar3 - pcVar5);\n                            s1 = 0x413644;\n                            pcVar11 = pcVar5;\n                            fcn.00401119(0x413644);\n                            pcVar5 = *(unaff_EBP + 0x1c) + 1;\n                        } while (*pcVar5 != '\\0');\n                        if (*pcVar5 != '\\0') {\n                            fcn.00401119();\n                            s1 = pcVar5;\n                        }\n                    }\n                    fcn.0040106f(s1);\n                    s1 = fcn.0040d473();\n                    fcn.00401119();\n                    fcn.0040106f();\n                }\n                if (*0x41eaaa != '\\0') {\n                    iVar3 = fcn.0040115a(0x413644, 2, s1);\n                    iVar3 = sub.MSVCRT.dll_memcmp(iVar3 + -2);\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.0040115a(0x4192c8, 3);\n                        iVar3 = sub.MSVCRT.dll_memcmp(iVar3 + -3);\n                        if (iVar3 == 0) goto code_r0x0040ee0e;\n                        pcVar5 = 0x413644;\n                    }\n                    else {\n                        pcVar5 = \"\\r\\n\\r\\n\";\n                    }\n                    fcn.00401119(pcVar5);\n                }\ncode_r0x0040ee0e:\n                fcn.0040106f();\n                pcVar5 = fcn.0040d473();\n                while( true ) {\n                    iVar3 = (*pcVar2)(pcVar5, 10);\n                    *(unaff_EBP + 0x1c) = iVar3;\n                    if (iVar3 == 0) break;\n                    if (*(unaff_EBP + 0x1c) - pcVar5 < 0x50) {\ncode_r0x0040ee55:\n                        fcn.004010e1(pcVar11, (*(unaff_EBP + 0x1c) - pcVar5) + 1);\n                        pcVar5 = *(unaff_EBP + 0x1c) + 1;\n                    }\n                    else {\n                        *(unaff_EBP + -0x40) = 1;\n                        pcVar11 = pcVar5 + 0x48;\n                        do {\n                            *(unaff_EBP + 0x1c) = pcVar11;\n                            if (pcVar11 <= pcVar5) {\n                                pcVar11 = pcVar5;\n                                uVar4 = (*pcVar2)(pcVar5, 10);\n                                *(unaff_EBP + 0x1c) = uVar4;\n                                goto code_r0x0040ee55;\n                            }\n                            pcVar11 = pcVar11 + -1;\n                        } while (*pcVar11 != ' ');\n                        fcn.004010e1(pcVar5, *(unaff_EBP + 0x1c) - pcVar5);\n                        pcVar11 = pcVar5;\n                        fcn.00401119(0x413644);\n                        pcVar5 = *(unaff_EBP + 0x1c);\n                    }\n                }\n                fcn.00401119(pcVar5);\n                fcn.0040106f();\n                uVar4 = fcn.0040d473();\n                fcn.00401119(uVar4);\n                fcn.0040106f();\n                fcn.00401119(\"Content-Type: text/plain;\");\n                if (*(unaff_EBP + -0x40) != 0) {\n                    fcn.00401119(\" format=flowed;\");\n                }\n                if (*(unaff_EBP + -0x38) == '\\0') {\n                    iVar3 = 0x41cee4;\n                }\n                else {\n                    iVar3 = unaff_EBP + -0x38;\n                }\n                uVar4 = fcn.0040d473(\" charset=%s\\r\\n\\r\\n\", iVar3);\n                (*_sym.imp.MSVCRT.dll_sprintf)(uVar4);\n                fcn.0040d473();\n                fcn.00401119();\n                *0x42529c = 1;\n                if (*(unaff_EBP + -0x30) == 0) {\n                    pcVar11 = fcn.0040d473();\n                    fcn.00401119(pcVar11);\n                }\n                else {\n                    pcVar11 = NULL;\n                    fcn.00411fd9(0x4241b4, uVar10, 0);\n                }\n            }\n            if (*0x41ccc9 == '\\0') {\n                if (*0x41e069 != '\\0') {\n                    fcn.00401119(\"--=_BlatBoundary-\");\n                    fcn.00401119(*(unaff_EBP + 0x18));\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(0x41d740, 0x413770);\n                    uVar4 = *0x41b084;\n                    if (iVar3 != 0) {\n                        uVar4 = fcn.00401000(0x41d740);\n                    }\n                    uVar4 = fcn.0040d473(uVar4);\n                    sub.MSVCRT.dll_strcpy(uVar4);\n                    arg_14h_00 = 1;\n                    arg_10h_00 = 0xb;\n                    uVar6 = 0;\n                    uVar4 = fcn.0040d473();\n                    fcn.0040a69a(uVar4, uVar6, arg_10h_00, arg_14h_00);\n                    fcn.00401160();\n                    fcn.00401119(\"Content-Type: application/octet-stream;\\r\\n name=\\\"\");\n                    uVar4 = fcn.0040d473();\n                    fcn.00401119(uVar4);\n                    fcn.00401119(\"\\\"\\r\\nContent-Disposition: ATTACHMENT;\\r\\n filename=\\\"\");\n                    uVar4 = fcn.0040d473();\n                    fcn.00401119(uVar4);\n                    pcVar11 = \"\\\"\\r\\nContent-Transfer-Encoding: BASE64\\r\\n\\r\\n\";\n                    goto code_r0x0040f200;\n                }\n                if (*0x41cedc != 0) {\n                    fcn.00401119(\"--=_BlatBoundary-\");\n                    pcVar11 = *(unaff_EBP + 0x18);\n                    fcn.00401119();\n                    if ((*0x41d844 == '\\0') && (*(unaff_EBP + 0x14) != 0)) {\n                        sub.MSVCRT.dll_strcpy(unaff_EBP + -0x244, \"text/\");\n                        sub.MSVCRT.dll_strcat(unaff_EBP + -0x244, 0x42403c);\n                        fcn.00401119(\"Content-description: \");\n                        fcn.00401119(\"Mail\");\n                        fcn.00401119(\" message body\\r\\n\");\n                        if ((*0x41f5cc == '\\0') || (*0x41cee1 == '\\0')) {\n                            pcVar11 = \"Content-Transfer-Encoding: 7BIT\\r\\n\";\n                        }\n                        else {\n                            pcVar11 = \"Content-Transfer-Encoding: 8BIT\\r\\n\";\n                        }\n                        goto code_r0x0040f18e;\n                    }\n                }\n            }\n            else if ((*0x41cedc != 0) || (iVar3 = fcn.00401156(),  iVar3 != 0)) {\n                sub.MSVCRT.dll_strcpy(unaff_EBP + -0x244, \"text/\");\n                sub.MSVCRT.dll_strcat(unaff_EBP + -0x244, 0x42403c);\n                iVar3 = fcn.00401156();\n                if ((iVar3 == 0) && ((*0x42404d != '\\0' && (*0x41ccc8 != '\\0')))) {\n                    fcn.00401119(\"--=_BlatBoundary-\");\n                    fcn.00401119(*(unaff_EBP + 0x18));\n                    fcn.00401119(\"Content-Type:\");\n                    fcn.00401119(\" multipart/related;\\r\\n\");\n                    fcn.00401119(\" boundary=\\\"=_BlatBoundary-\");\n                    fcn.0040a649(*(unaff_EBP + 0x18));\n                    fcn.004010e1(*(unaff_EBP + 0x18), 0x15);\n                    fcn.00401119(\"\\\"\\r\\n\\r\\n\");\n                }\n                fcn.00401119(\"--=_BlatBoundary-\");\n                fcn.00401119(*(unaff_EBP + 0x18));\n                pcVar11 = \"Content-Transfer-Encoding: quoted-printable\\r\\n\";\ncode_r0x0040f18e:\n                fcn.00401119(pcVar11);\n                if ((*0x41d018 == '\\0') && (iVar3 = sub.MSVCRT.dll_strcmp(0x42403c, \"plain\"),  iVar3 == 0)) {\n                    uVar4 = fcn.004110c7(0x41d740);\n                    iVar3 = unaff_EBP + -0x244;\n                    iVar7 = iVar3;\n                    uVar6 = fcn.0040d473();\n                    fcn.00411102(uVar6, iVar3, iVar7, uVar4);\n                }\n                uVar4 = fcn.0040d473(\"Content-Type: %s; charset=%s\\r\\n\\r\\n\", unaff_EBP + -0x244, 0x41cee4);\n                (*_sym.imp.MSVCRT.dll_sprintf)(uVar4);\n                pcVar11 = fcn.0040d473();\ncode_r0x0040f200:\n                fcn.00401119(pcVar11);\n                *0x42529c = 1;\n            }\n        }\n        fcn.0040106f(pcVar11);\n        iVar3 = fcn.00401156();\n        if (iVar3 != 0) {\n            iVar3 = sub.MSVCRT.dll_strcmp(0x42403c, \"html\");\n            if (iVar3 == 0) {\n                fcn.00401119(0x419160);\n                uVar4 = fcn.0040d473();\n                fcn.00401119(uVar4);\n                pcVar11 = \"</p>\";\n            }\n            else {\n                pcVar11 = fcn.0040d473();\n            }\n            fcn.00401119(pcVar11);\n            fcn.00401119(\"\\r\\n\\r\\n\");\n        }\n        uVar4 = *(unaff_EBP + 0xc);\n        fcn.0040d473(uVar4);\n        fcn.004010e1();\n        *(unaff_EBP + -0x28) = *0x41d738;\n        fcn.00408953(0x424190, unaff_EBP + -0x28, 0, *(unaff_EBP + -0x2c));\n        iVar3 = fcn.00401156();\n        if (iVar3 != 0) {\n            iVar3 = sub.MSVCRT.dll_strcmp(0x42403c, \"html\");\n            if (iVar3 == 0) {\n                fcn.00401119(\"<p>\\r\\n-- <br>\\r\\n\");\n                uVar6 = fcn.0040d473();\n                fcn.00401119(uVar6);\n                pcVar11 = \"</p>\";\n            }\n            else {\n                if (*0x41eaaa != '\\0') {\n                    iVar3 = fcn.0040115a(0x413644, 2);\n                    iVar3 = sub.MSVCRT.dll_memcmp(iVar3 + -2);\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.0040115a(0x4192c8, 3);\n                        iVar3 = sub.MSVCRT.dll_memcmp(iVar3 + -3);\n                        if (iVar3 == 0) goto code_r0x0040f351;\n                        s1 = 0x413644;\n                    }\n                    else {\n                        s1 = \"\\r\\n\\r\\n\";\n                    }\n                    fcn.00401119(s1);\n                }\ncode_r0x0040f351:\n                fcn.00401119(\"-- \\r\\n\");\n                pcVar11 = fcn.0040d473();\n            }\n            fcn.00401119(pcVar11);\n        }\n        iVar3 = fcn.00401156();\n        if (iVar3 != 0) {\n            iVar7 = fcn.0040d473();\n            iVar3 = fcn.00401156();\n            while (iVar8 = iVar3,  iVar8 != 0) {\n                iVar3 = iVar8 + -1;\n                if ((*(iVar3 + iVar7) == '\\\\') && (*(iVar8 + iVar7) == 'n')) {\n                    *(iVar3 + iVar7) = 0xd;\n                    *(iVar8 + iVar7) = 10;\n                }\n            }\n            iVar3 = sub.MSVCRT.dll_strcmp(0x42403c, \"html\");\n            if (iVar3 == 0) {\n                fcn.00401119(0x419160);\n                uVar6 = fcn.0040d473();\n                fcn.00401119(uVar6);\n                fcn.00401119(\"</p>\");\n            }\n            else {\n                if (*0x41eaaa != '\\0') {\n                    iVar3 = fcn.0040115a(0x413644, 2);\n                    iVar3 = sub.MSVCRT.dll_memcmp(iVar3 + -2);\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.0040115a(0x4192c8, 3);\n                        iVar3 = sub.MSVCRT.dll_memcmp(iVar3 + -3);\n                        if (iVar3 == 0) goto code_r0x0040f49e;\n                        pcVar11 = 0x413644;\n                    }\n                    else {\n                        pcVar11 = \"\\r\\n\\r\\n\";\n                    }\n                    fcn.00401119(pcVar11);\n                }\ncode_r0x0040f49e:\n                uVar6 = fcn.0040d473();\n                fcn.00401119(uVar6);\n            }\n        }\n        iVar3 = fcn.00401156();\n        if (iVar3 != 0) {\n            iVar3 = sub.MSVCRT.dll_strcmp(0x42403c, \"html\");\n            if (iVar3 == 0) {\n                fcn.00401119(0x419160);\n                uVar6 = fcn.0040d473();\n                fcn.00401119(uVar6);\n                pcVar11 = \"</p>\";\n            }\n            else {\n                if (*0x41eaaa != '\\0') {\n                    iVar3 = fcn.0040115a(0x413644, 2);\n                    iVar3 = sub.MSVCRT.dll_memcmp(iVar3 + -2);\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.0040115a(0x4192c8, 3);\n                        iVar3 = sub.MSVCRT.dll_memcmp(iVar3 + -3);\n                        if (iVar3 == 0) goto code_r0x0040f505;\n                        pcVar11 = 0x413644;\n                    }\n                    else {\n                        pcVar11 = \"\\r\\n\\r\\n\";\n                    }\n                    fcn.00401119(pcVar11);\n                }\ncode_r0x0040f505:\n                pcVar11 = fcn.0040d473();\n            }\n            fcn.00401119(pcVar11);\n        }\n        if (*0x41ccc9 == '\\0') {\n            if (*0x41e069 == '\\0') {\n                if ((*0x41cedc == 0) && (*0x41d844 != '\\0')) {\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(0x41d740, 0x413770);\n                    uVar6 = *0x41b084;\n                    if (iVar3 != 0) {\n                        uVar6 = fcn.00401000(0x41d740);\n                    }\n                    fcn.0040f7b7(unaff_EBP + -0x18, uVar10, uVar6, 1, 1);\n                }\n                else {\n                    fcn.00401145();\n                }\n            }\n            else {\n                fcn.00410e90(unaff_EBP + -0x18, uVar10, 1, 1);\n            }\n        }\n        else {\n            fcn.00411fd9(unaff_EBP + -0x18, uVar10, 0);\n        }\n        if (*0x41eaaa != '\\0') {\n            uVar10 = 3;\n            iVar3 = fcn.0040115a(0x4192c8, 3);\n            iVar3 = sub.MSVCRT.dll_memcmp(iVar3 + -3);\n            if (iVar3 != 0) {\n                fcn.00401119(uVar10, 0x413644);\n            }\n        }\n        iVar3 = fcn.00401156();\n        if ((iVar3 != 0) && ((*0x42404d != '\\0' || (*0x41ccc8 != '\\0')))) {\n            iVar3 = fcn.0040115a();\n            if (*(iVar3 + -3) != '\\n') {\n                uVar4 = 0x413644;\n                fcn.00401119();\n            }\n            fcn.00401119(\"--=_BlatBoundary-\", uVar4);\n            fcn.004010e1(*(unaff_EBP + 0x18), 0x15);\n            fcn.00401119(\"--\\r\\n\");\n            fcn.0040a673(*(unaff_EBP + 0x18));\n        }\n    }\n    uVar10 = fcn.0040d473(\"Sending %s to \", 0x41d740);\n    (*_sym.imp.MSVCRT.dll_sprintf)(uVar10);\n    fcn.00401160();\n    if (*(unaff_EBP + 0x14) == 0) {\n        iVar3 = fcn.00401156();\n        if (iVar3 == 0) goto code_r0x0040f705;\n        pcVar11 = fcn.0040d473();\ncode_r0x0040f70a:\n        fcn.00401119(pcVar11);\n    }\n    else {\n        iVar3 = fcn.00401156();\n        if (iVar3 == 0) {\ncode_r0x0040f705:\n            pcVar11 = \"<unspecified>\";\n            goto code_r0x0040f70a;\n        }\n        fcn.00401062();\n        iVar3 = unaff_EBP + -0x3c;\n        *(unaff_EBP + -4) = 3;\n        uVar10 = fcn.0040d473();\n        fcn.004068e2(uVar10, iVar3);\n        pcVar11 = fcn.0040d473();\n        if (pcVar11 != NULL) {\n            iVar3 = 0;\n            cVar1 = *pcVar11;\n            pcVar5 = pcVar11;\n            while (cVar1 != '\\0') {\n                if (iVar3 != 0) {\n                    fcn.00401119(0x416e4c);\n                }\n                fcn.00401119(pcVar5);\n                iVar7 = sub.MSVCRT.dll_strlen(pcVar5);\n                iVar3 = iVar3 + 1 + iVar7;\n                pcVar5 = pcVar11 + iVar3;\n                cVar1 = *pcVar5;\n            }\n            fcn.0040107e();\n        }\n        *(unaff_EBP + -4) = 2;\n        fcn.00401054();\n    }\n    uVar9 = fcn.00401156();\n    if (uVar9 < 0x3fc) {\n        uVar10 = fcn.0040d473();\n        fcn.00401292(0x416760, uVar10);\n    }\n    else {\n        fcn.0040d473();\n        fcn.00401292(\"%.*s...\\n\", 0x3fb);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x41ebb8);\n    if (iVar3 != 0) {\n        fcn.00401292(\"Subject: %s\\n\", 0x41ebb8);\n    }\n    iVar3 = (*pcVar2)(0x41da58);\n    if (iVar3 != 0) {\n        fcn.00401292(\"Login name is %s\\n\", 0x41da58);\n    }\ncode_r0x0040f789:\n    fcn.004015a9();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return 0;\n}\n",
        "token_count": 6377
    },
    "0040f7b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f7b7(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    uint16_t uVar4;\n    uint uVar5;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint var_5ch;\n    uint32_t var_4h;\n    \n    if (arg_14h < 2) {\n        fcn.00401119(\"begin 644 \");\n        uVar5 = fcn.00401000(arg_10h);\n        fcn.00401119(uVar5);\n        fcn.00401119(0x413644);\n    }\n    puVar6 = fcn.0040d473();\n    uVar7 = fcn.00401156();\n    var_4h = (uVar7 * 8 + 5) / 6;\n    uVar3 = (*0x41cbd8 << 2) / 3;\n    iVar8 = fcn.00401156();\n    fcn.0040109b(((uVar3 + -1 + var_4h) / uVar3) * 3 + 1 + iVar8 + var_4h);\n    puVar6[uVar7] = 0;\n    *0x4252a0 = (*0x41cbd8 << 2) / 3;\n    uVar9 = 0;\n    uVar10 = *0x41cbd8;\n    for (; 2 < uVar7; uVar7 = uVar7 - 3) {\n        if (*0x4252a0 < uVar9) {\n            *(&var_5ch + uVar9) = 0;\n            fcn.00401119(&var_5ch);\n            fcn.00401119(0x413644);\n            uVar9 = 0;\n            uVar10 = *0x41cbd8;\n        }\n        if (uVar9 == 0) {\n            uVar9 = uVar10;\n            if (uVar7 <= uVar10) {\n                uVar9 = uVar7;\n            }\n            var_5ch._0_1_ = (uVar9 - 1U & 0x3f) + 0x21;\n            uVar9 = 1;\n        }\n        uVar1 = puVar6[2];\n        uVar4 = CONCAT11(*puVar6, puVar6[1]);\n        *(&var_5ch + uVar9) = ((*puVar6 >> 2) - 1 & 0x3f) + 0x21;\n        *(&var_5ch + uVar9 + 1) = ((uVar4 >> 4) - 1U & 0x3f) + 0x21;\n        *(&var_5ch + uVar9 + 2) = ((CONCAT21(uVar4, uVar1) >> 6) - 1U & 0x3f) + 0x21;\n        *(&var_5ch + uVar9 + 3) = (uVar1 - 1 & 0x3f) + 0x21;\n        uVar9 = uVar9 + 4;\n        puVar6 = puVar6 + 3;\n    }\n    if (uVar7 != 0) {\n        uVar10 = uVar9;\n        if (*0x4252a0 < uVar9) {\n            *(&var_5ch + uVar9) = 0;\n            fcn.00401119(&var_5ch);\n            fcn.00401119(0x413644);\n            uVar10 = 0;\n        }\n        if (uVar10 == 0) {\n            var_5ch._0_1_ = (uVar7 - 1U & 0x3f) + 0x21;\n            uVar10 = 1;\n        }\n        uVar1 = *puVar6;\n        uVar2 = puVar6[1];\n        *(&var_5ch + uVar10) = ((uVar1 >> 2) - 1 & 0x3f) + 0x21;\n        *(&var_5ch + uVar10 + 1) = ((CONCAT11(uVar1, uVar2) >> 4) - 1U & 0x3f) + 0x21;\n        uVar9 = uVar10 + 2;\n        if (uVar7 == 2) {\n            *(&var_5ch + uVar10 + 2) = (uVar2 * '\\x04' - 1 & 0x3f) + 0x21;\n            uVar9 = uVar10 + 3;\n        }\n    }\n    if (uVar9 != 0) {\n        *(&var_5ch + uVar9) = 0;\n        fcn.00401119(&var_5ch);\n        fcn.00401119(0x413644);\n    }\n    if (arg_14h == arg_18h) {\n        fcn.00401119(\"`\\r\\nend\\r\\n\");\n    }\n    return;\n}\n",
        "token_count": 1200
    },
    "0040f9d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f9d4(uint src, uint arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    uint var_4h;\n    \n    fcn.0040106f();\n    fcn.00401119(0x41632f);\n    iVar3 = sub.MSVCRT.dll_strlen(src);\n    pcVar4 = (*_sym.imp.MSVCRT.dll_malloc)(iVar3 + 2);\n    if (pcVar4 != NULL) {\n        sub.MSVCRT.dll_strcpy(pcVar4, src);\n        (pcVar4 + iVar3)[1] = '\\0';\n        for (pcVar8 = pcVar4; (pcVar8 < pcVar4 + iVar3 && (cVar2 = *pcVar8,  cVar2 != '\\0'));\n            pcVar8 = pcVar8 + uVar9 + 1) {\n            do {\n                iVar5 = (*_sym.imp.MSVCRT.dll_strchr)(\" ,\\n\\t\\r\", cVar2);\n                if (iVar5 == 0) break;\n                pcVar8 = pcVar8 + 1;\n                cVar2 = *pcVar8;\n            } while (cVar2 != '\\0');\n            if (*pcVar8 == *0x41cb00) {\n                uVar6 = sub.MSVCRT.dll_strlen(pcVar8);\n                uVar9 = 0;\n                cVar2 = *pcVar8;\n                while (((cVar2 != '\\0' && (uVar9 < uVar6)) && (pcVar8[uVar9] != '\\n'))) {\n                    uVar9 = uVar9 + 1;\n                    cVar2 = pcVar8[uVar9];\n                }\n            }\n            else {\n                if (*pcVar8 == '\\0') break;\n                uVar6 = sub.MSVCRT.dll_strlen();\n                bVar1 = false;\n                uVar9 = 0;\n                if (*pcVar8 != '\\0') {\n                    do {\n                        if ((((uVar6 <= uVar9) || (cVar2 = pcVar8[uVar9],  cVar2 == '\\n')) || (cVar2 == '\\r')) ||\n                           (cVar2 == '\\t')) break;\n                        if ((arg_10h == 0) && (cVar2 == '\\\\')) {\n                            uVar9 = uVar9 + 1;\n                        }\n                        else if (cVar2 == '\\\"') {\n                            bVar1 = !bVar1;\n                        }\n                        else if ((cVar2 == ',') && (!bVar1)) break;\n                        uVar9 = uVar9 + 1;\n                    } while (pcVar8[uVar9] != '\\0');\n                    if (uVar9 != 0) {\n                        for (pcVar7 = pcVar8 + (uVar9 - 1); *pcVar7 == ' '; pcVar7 = pcVar7 + -1) {\n                            uVar9 = uVar9 - 1;\n                        }\n                    }\n                }\n                pcVar8[uVar9] = '\\0';\n                if (((arg_10h != 0) && (*pcVar8 == '\\\"')) && (pcVar8[uVar9 - 1] == '\\\"')) {\n                    pcVar8[uVar9 - 1] = '\\0';\n                    uVar9 = uVar9 - 2;\n                    pcVar8 = pcVar8 + 1;\n                }\n                fcn.004010e1(pcVar8, uVar9 + 1);\n            }\n        }\n        fcn.00401136(0);\n        (*_sym.imp.MSVCRT.dll_free)(pcVar4);\n    }\n    return;\n}\n",
        "token_count": 862
    },
    "0041026c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041026c(void)\n\n{\n    uchar uVar1;\n    int32_t arg;\n    uint uVar2;\n    uchar auStack400 [400];\n    \n    *0x4252a4 = 0;\n    arg = sub.WSOCK32.dll_WSAStartup(0x101, auStack400);\n    uVar1 = *0x423710;\n    if (*0x42434c != '\\0') {\n        *0x423710 = 0;\n        fcn.00410000();\n        fcn.00401292(\"superDebug: init_winsock(), WSAStartup() returned %i (%s)\\n\", arg);\n    }\n    if (arg == 0x2726) {\n        uVar2 = 0xfa5;\n    }\n    else if (arg == 0x2734) {\n        uVar2 = 0xfab;\n    }\n    else if (arg == 0x2753) {\n        uVar2 = 0xfa8;\n    }\n    else if (arg == 0x276b) {\n        uVar2 = 0xfa6;\n    }\n    else if (arg == 0x276c) {\n        uVar2 = 0xfa4;\n    }\n    else {\n        *0x4252a4 = 1;\n        uVar2 = 0;\n    }\n    *0x423710 = uVar1;\n    return uVar2;\n}\n",
        "token_count": 312
    },
    "0041031b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: s2\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0041031b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uchar *puVar8;\n    uint *extraout_ECX;\n    uint8_t uVar9;\n    int32_t unaff_EBP;\n    uint *puVar10;\n    uint *in_FS_OFFSET;\n    bool bVar11;\n    uint var_bh;\n    uint var_184h;\n    uint s;\n    uint var_40h;\n    char *pcVar12;\n    uint var_34h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    uint s2;\n    uint var_ch;\n    uint var_4h;\n    uint var_10h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.004123b0();\n    piVar1 = extraout_ECX + 10;\n    *piVar1 = 0;\n    extraout_ECX[0xb] = *extraout_ECX;\n    *piVar1 = *piVar1 + 1;\n    *(unaff_EBP + -0x10) = &var_ch;\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    puVar10 = extraout_ECX + 0x4b;\n    if (*(unaff_EBP + 8) == 0) {\n        *puVar10 = *0x41cbdc;\n    }\n    else {\n        *puVar10 = 0;\n    }\n    iVar2 = sub.WSOCK32.dll_select(0, piVar1, 0, 0, puVar10);\n    if (iVar2 == -1) {\n        iVar3 = sub.WSOCK32.dll_WSAGetLastError();\n        if ((iVar3 != 0x2734) || (*(unaff_EBP + 8) == 0)) {\n            (*_sym.imp.USER32.dll_wsprintfA)\n                      (unaff_EBP + -0x184, \"connection::get_buffer() unexpected error from select: %d\", iVar3);\n            fcn.0040fb5c(unaff_EBP + -0x184);\n            goto code_r0x004103a8;\n        }\n    }\n    else {\ncode_r0x004103a8:\n        if ((iVar2 != 0) || (*(unaff_EBP + 8) == 0)) {\n            uVar4 = *extraout_ECX;\n            iVar2 = sub.WSOCK32.dll_recv(uVar4, extraout_ECX[1], extraout_ECX[8], 0);\n            *(unaff_EBP + -0x1c) = iVar2;\n            if (iVar2 == 0) {\ncode_r0x004103fa:\n                uVar4 = 0xfb0;\n                goto code_r0x00410727;\n            }\n            puVar10 = extraout_ECX;\n            if (iVar2 == -1) {\n                iVar2 = sub.WSOCK32.dll_WSAGetLastError();\n                if (iVar2 == 0x2733) goto code_r0x004104ec;\n                if ((0x2741 < iVar2) && ((iVar2 < 0x2747 || (iVar2 == 0x2749)))) goto code_r0x004103fa;\n                (*_sym.imp.USER32.dll_wsprintfA)\n                          (unaff_EBP + -0x184, \"connection::get_buffer() unexpected error: %d\", iVar2);\n                fcn.0040fb5c(unaff_EBP + -0x184);\n                *(unaff_EBP + -0x1c) = 0;\n            }\n            else if (*0x42434c != '\\0') {\n                *(unaff_EBP + 0xb) = *0x423710;\n                *0x423710 = 0;\n                fcn.00401292(\"superDebug: Received %u bytes:\\n\", iVar2);\n                if (*0x42434c == '\\x02') {\n                    *(unaff_EBP + -0x14) = extraout_ECX[1];\n                    if (1000 < *(unaff_EBP + -0x1c)) {\n                        do {\n                            iVar3 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x3ea);\n                            sub.MSVCRT.dll_memcpy(iVar3, *(unaff_EBP + -0x14), 1000);\n                            *(iVar3 + 1000) = 0;\n                            iVar7 = (*_sym.imp.MSVCRT.dll_strrchr)(iVar3, 10);\n                            if (iVar7 == 0) {\n                                iVar7 = -1000;\n                                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1000;\n                            }\n                            else {\n                                puVar8 = iVar7 + 1;\n                                iVar7 = iVar3 - puVar8;\n                                *puVar8 = 0;\n                                *(unaff_EBP + -0x14) = puVar8 + (*(unaff_EBP + -0x14) - iVar3);\n                            }\n                            iVar2 = iVar2 + iVar7;\n                            fcn.00401292(0x41322c, iVar3);\n                            iVar7 = sub.MSVCRT.dll_strlen(iVar3);\n                            if (*(iVar7 + -1 + iVar3) != '\\n') {\n                                fcn.00401292(0x4132a0, uVar4);\n                            }\n                            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar3);\n                        } while (1000 < iVar2);\n                        puVar10 = *(unaff_EBP + -0x18);\n                    }\n                    if (iVar2 != 0) {\n                        iVar3 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(iVar2 + 2);\n                        *(unaff_EBP + -0x18) = iVar3;\n                        sub.MSVCRT.dll_memcpy(iVar3, *(unaff_EBP + -0x14), iVar2);\n                        uVar5 = *(unaff_EBP + -0x18);\n                        *(iVar3 + iVar2) = 0;\n                        fcn.00401292(0x41322c, uVar5);\n                        if ((iVar3 + iVar2)[-1] != '\\n') {\n                            fcn.00401292(0x4132a0, uVar4);\n                        }\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(unaff_EBP + -0x18));\n                    }\n                }\n                else {\n                    sub.MSVCRT.dll_memset(unaff_EBP + -0x84, 0x20, 0x42);\n                    iVar2 = 0;\n                    iVar3 = 0;\n                    if (0 < *(unaff_EBP + -0x1c)) {\n                        do {\n                            uVar9 = *(iVar3 + *(*(unaff_EBP + -0x18) + 4));\n                            if (iVar2 == 0x10) {\n                                iVar2 = iVar3 + -0x10;\n                                pcVar12 = \"superDebug: %05X %s\\r\\n\";\n                                *(unaff_EBP + -0x42) = 0;\n                                fcn.00401292(\"superDebug: %05X %s\\r\\n\", iVar2);\n                                sub.MSVCRT.dll_memset(unaff_EBP + -0x84, 0x20, 0x42, pcVar12, iVar2, unaff_EBP + -0x84);\n                                iVar2 = 0;\n                            }\n                            (*_sym.imp.MSVCRT.dll_sprintf)(unaff_EBP + -0x14, \" %02X\", uVar9);\n                            sub.MSVCRT.dll_memcpy(unaff_EBP + -0x84 + iVar2 * 3, unaff_EBP + -0x14, 3);\n                            if ((uVar9 < 0x20) || (0x7e < uVar9)) {\n                                uVar9 = 0x2e;\n                            }\n                            *(unaff_EBP + -0x52 + iVar2) = uVar9;\n                            iVar2 = iVar2 + 1;\n                            iVar3 = iVar3 + 1;\n                        } while (iVar3 < *(unaff_EBP + -0x1c));\n                    }\n                    *(unaff_EBP + -0x42) = 0;\n                    if (iVar2 == 0x10) {\n                        iVar3 = iVar3 + -1;\n                    }\n                    fcn.00401292(\"superDebug: %05X %s\\r\\n\", iVar3 - iVar3 % 0x10);\n                    puVar10 = *(unaff_EBP + -0x18);\n                }\n                *0x423710 = *(unaff_EBP + 0xb);\n            }\n            uVar4 = 0;\n            puVar10[5] = *(unaff_EBP + -0x1c);\n            puVar10[3] = 0;\n            fcn.00401062();\n            bVar11 = *0x423d2c != 0;\n            *(unaff_EBP + -4) = 0;\n            if (bVar11) {\n                *(unaff_EBP + -4) = 1;\n                iVar2 = fcn.0040fb4b();\n                if (iVar2 != 0) {\n                    uVar5 = fcn.0040ca25(puVar10[1], puVar10[5]);\n                    *(unaff_EBP + -4) = 2;\n                    uVar5 = fcn.0040d880(unaff_EBP + -0x34, uVar5);\n                    *(unaff_EBP + -4) = 3;\n                    fcn.00408941();\n                    *(unaff_EBP + -4) = 2;\n                    fcn.00401054();\n                    *(unaff_EBP + -4) = 1;\n                    fcn.00401054();\n                    uVar6 = fcn.00401156();\n                    uVar6 = fcn.0040d473(uVar6);\n                    sub.MSVCRT.dll_memcpy(puVar10[1], uVar6);\n                    uVar6 = fcn.00401156();\n                    puVar10[5] = uVar6;\n                    if (*0x42434c != '\\0') {\n                        fcn.00401292(\"superDebug: Decrypted\\n\", uVar5);\n                    }\n                }\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00401054();\n            goto code_r0x00410727;\n        }\n    }\ncode_r0x004104ec:\n    uVar4 = 0xfad;\ncode_r0x00410727:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 2566
    },
    "00410768": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h_2\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_42h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nuint fcn.00410768(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uint uVar7;\n    uint *extraout_ECX;\n    uint8_t uVar8;\n    int32_t unaff_EBP;\n    int32_t iVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint *in_FS_OFFSET;\n    bool bVar12;\n    uint buf;\n    uint var_ch;\n    uint var_284h;\n    uint var_184h;\n    uint s;\n    uint var_42h;\n    uint var_34h;\n    uint var_28h_2;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_28h;\n    uint uVar13;\n    uint var_ch_2;\n    uint var_4h;\n    uint var_10h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.004123b0();\n    *(unaff_EBP + -0x10) = &var_ch_2;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    fcn.00401062();\n    iVar9 = 0;\n    bVar12 = *0x423d2c != 0;\n    *(unaff_EBP + -4) = 0;\n    if (bVar12) {\n        *(unaff_EBP + -4) = 1;\n        iVar2 = fcn.0040fb4b();\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040ca25(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n            *(unaff_EBP + -4) = 2;\n            in_stack_ffffffdc = fcn.0040d6c0(unaff_EBP + -0x34, uVar3);\n            *(unaff_EBP + -4) = 3;\n            fcn.00408941();\n            *(unaff_EBP + -4) = 2;\n            fcn.00401054();\n            *(unaff_EBP + -4) = 1;\n            fcn.00401054();\n            uVar3 = fcn.0040d473();\n            *(unaff_EBP + 8) = uVar3;\n            uVar3 = fcn.00401156();\n            bVar12 = *0x42434c != '\\0';\n            *(unaff_EBP + 0xc) = uVar3;\n            if (bVar12) {\n                iVar2 = fcn.004066f0();\n                pcVar4 = \"PRIVACY\";\n                if (iVar2 != 4) {\n                    pcVar4 = \"INTEGRITY\";\n                }\n                fcn.00401292(\"superDebug: Encrypted via GSSAUTH_P_%s\\n\", pcVar4);\n            }\n        }\n    }\n    extraout_ECX[10] = 0;\n    extraout_ECX[0xb] = *extraout_ECX;\n    extraout_ECX[10] = extraout_ECX[10] + 1;\n    extraout_ECX[0x4b] = *0x41cbdc;\n    bVar12 = *0x42434c != '\\0';\n    *(unaff_EBP + -4) = 0;\n    puVar10 = extraout_ECX;\n    if (bVar12) {\n        iVar2 = *(unaff_EBP + 0xc);\n        *(unaff_EBP + -0x15) = *0x423710;\n        *0x423710 = 0;\n        fcn.00401292(\"superDebug: Attempting to send %u bytes:\\n\", iVar2);\n        if (*0x42434c == '\\x02') {\n            *(unaff_EBP + -0x14) = *(unaff_EBP + 8);\n            if (1000 < iVar2) {\n                do {\n                    iVar9 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x3ea);\n                    sub.MSVCRT.dll_memcpy(iVar9, *(unaff_EBP + -0x14), 1000);\n                    *(iVar9 + 1000) = 0;\n                    iVar5 = (*_sym.imp.MSVCRT.dll_strrchr)(iVar9, 10);\n                    if (iVar5 == 0) {\n                        iVar5 = -1000;\n                        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1000;\n                    }\n                    else {\n                        puVar6 = iVar5 + 1;\n                        iVar5 = iVar9 - puVar6;\n                        *puVar6 = 0;\n                        *(unaff_EBP + -0x14) = puVar6 + (*(unaff_EBP + -0x14) - iVar9);\n                    }\n                    iVar2 = iVar2 + iVar5;\n                    fcn.00401292(0x41322c, iVar9);\n                    iVar5 = sub.MSVCRT.dll_strlen(iVar9);\n                    if (*(iVar5 + -1 + iVar9) != '\\n') {\n                        fcn.00401292(0x4132a0, in_stack_ffffffdc);\n                    }\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar9);\n                } while (1000 < iVar2);\n                puVar10 = *(unaff_EBP + -0x1c);\n            }\n            if (iVar2 != 0) {\n                iVar9 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(iVar2 + 2);\n                *(unaff_EBP + -0x1c) = iVar9;\n                sub.MSVCRT.dll_memcpy(iVar9, *(unaff_EBP + -0x14), iVar2);\n                uVar3 = *(unaff_EBP + -0x1c);\n                *(iVar9 + iVar2) = 0;\n                fcn.00401292(0x41322c, uVar3);\n                if ((iVar9 + iVar2)[-1] != '\\n') {\n                    fcn.00401292(0x4132a0, in_stack_ffffffdc);\n                }\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(unaff_EBP + -0x1c));\n            }\n        }\n        else {\n            sub.MSVCRT.dll_memset(unaff_EBP + -0x84, 0x20, 0x42);\n            uVar11 = 0;\n            if (*(unaff_EBP + 0xc) != 0) {\n                do {\n                    uVar8 = *(uVar11 + *(unaff_EBP + 8));\n                    if (iVar9 == 0x10) {\n                        iVar9 = unaff_EBP + -0x84;\n                        pcVar4 = \"superDebug: %05X %s\\r\\n\";\n                        *(unaff_EBP + -0x42) = 0;\n                        fcn.00401292(\"superDebug: %05X %s\\r\\n\", uVar11 - 0x10);\n                        sub.MSVCRT.dll_memset(unaff_EBP + -0x84, 0x20, 0x42, pcVar4, uVar11 - 0x10, iVar9);\n                        iVar9 = 0;\n                    }\n                    (*_sym.imp.MSVCRT.dll_sprintf)(unaff_EBP + -0x14, \" %02X\", uVar8);\n                    sub.MSVCRT.dll_memcpy(unaff_EBP + -0x84 + iVar9 * 3, unaff_EBP + -0x14, 3);\n                    if ((uVar8 < 0x20) || (0x7e < uVar8)) {\n                        uVar8 = 0x2e;\n                    }\n                    *(unaff_EBP + -0x52 + iVar9) = uVar8;\n                    iVar9 = iVar9 + 1;\n                    uVar11 = uVar11 + 1;\n                } while (uVar11 < *(unaff_EBP + 0xc));\n            }\n            *(unaff_EBP + -0x42) = 0;\n            if (iVar9 == 0x10) {\n                uVar11 = uVar11 - 1;\n            }\n            fcn.00401292(\"superDebug: %05X %s\\r\\n\", uVar11 - (uVar11 & 0xf));\n            puVar10 = *(unaff_EBP + -0x1c);\n        }\n        *0x423710 = *(unaff_EBP + -0x15);\n    }\n    pcVar1 = _sym.imp.USER32.dll_wsprintfA;\n    uVar3 = 0;\n    if (*(unaff_EBP + 0xc) != 0) {\n        do {\n            uVar13 = 0;\n            iVar9 = sub.WSOCK32.dll_select();\n            if (iVar9 == -1) {\n                uVar7 = sub.WSOCK32.dll_WSAGetLastError();\n                (*pcVar1)(unaff_EBP + -0x184, \"connection::put_data() unexpected error from select: %d\", uVar7);\n                fcn.0040fb5c(unaff_EBP + -0x184);\n            }\n            iVar9 = puVar10[8];\n            if (*(unaff_EBP + 0xc) == iVar9 || *(unaff_EBP + 0xc) < iVar9) {\n                iVar9 = *(unaff_EBP + 0xc);\n            }\n            iVar9 = sub.WSOCK32.dll_send(*puVar10, *(unaff_EBP + 8), iVar9, 0, uVar13);\n            if (iVar9 == -1) {\n                iVar9 = sub.WSOCK32.dll_WSAGetLastError();\n                if (iVar9 < 0x2733) goto code_r0x00410b1c;\n                if (0x2734 < iVar9) goto code_r0x00410b0e;\n            }\n            else {\n                *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) - iVar9;\n                *(unaff_EBP + 8) = *(unaff_EBP + 8) + iVar9;\n                if (*(unaff_EBP + 0xc) == 0) break;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(1);\n        } while( true );\n    }\ncode_r0x00410b3f:\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\ncode_r0x00410b0e:\n    if (iVar9 == 0x2749) {\n        uVar3 = 0xfb0;\n    }\n    else {\ncode_r0x00410b1c:\n        (*pcVar1)(unaff_EBP + -0x284, \"connection::put_data() unexpected error from send(): %d\", iVar9);\n        fcn.0040fb5c(unaff_EBP + -0x284);\n        uVar3 = 0xfa2;\n    }\n    goto code_r0x00410b3f;\n}\n",
        "token_count": 2615
    },
    "00410cdc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410cdc(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        if (*param_1 == 0) {\n            return;\n        }\n        if (*param_1 == param_2) break;\n        param_1 = param_1[1];\n    }\n    iVar1 = param_1[1];\n    if (*param_1 != 0) {\n        fcn.0040ff6f(1);\n    }\n    *param_1 = *param_1[1];\n    param_1[1] = param_1[1][1];\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.00410bf1(1);\n    return;\n}\n",
        "token_count": 177
    },
    "00410d23": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00410d23(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        return 0xfaa;\n    }\n    iVar1 = fcn.0040ff51();\n    if (iVar1 == 0) {\n        fcn.00410cdc(param_1);\n        iVar1 = fcn.0040ffbc();\n        if (iVar1 < 1) {\n            fcn.0041030f();\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 128
    },
    "00410d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00410d60(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *unaff_EDI;\n    int32_t *unaff_retaddr;\n    \n    iVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x134);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0040fb71();\n    }\n    if (iVar1 != 0) {\n        iVar2 = fcn.0040ffbc();\n        if ((iVar2 < 1) && (iVar2 = fcn.0041026c(),  iVar2 != 0)) {\n            return iVar2;\n        }\n        fcn.0040ff8b(iVar1);\n        iVar2 = fcn.0040fbeb(unaff_retaddr, param_1);\n        if (iVar2 == 0) {\n            *unaff_retaddr = iVar1;\n            iVar2 = 0;\n        }\n        else {\n            fcn.00410d23(iVar1);\n            fcn.0040ff6f(1);\n            *unaff_EDI = 0;\n        }\n        return iVar2;\n    }\n    return 0xfa3;\n}\n",
        "token_count": 283
    },
    "00410e90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00410e90(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    unkuint3 Var2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    uint uVar10;\n    uint var_54h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    puVar3 = fcn.0040d473();\n    uVar4 = fcn.00401156();\n    uVar5 = (uVar4 * 8 + 5) / 6;\n    var_4h = uVar5;\n    iVar6 = fcn.00401156();\n    fcn.0040109b(iVar6 + var_4h + 1 + ((uVar5 + 0x47) / 0x48) * 2);\n    iVar7 = 0;\n    puVar3[uVar4] = 0;\n    var_ch._0_1_ = 0;\n    iVar6 = *0x41cbe0;\n    if (2 < uVar4) {\n        uVar10 = 3;\n        var_4h = (uVar4 - 3) / 3 + 1;\n        puVar9 = puVar3;\n        do {\n            if (iVar7 == 0x48) {\n                fcn.00401119(uVar10, &var_54h);\n                iVar7 = 0;\n                iVar6 = *0x41cbe0;\n                if (arg_10h != 0) {\n                    fcn.00401119();\n                    iVar6 = *0x41cbe0;\n                }\n            }\n            uVar4 = uVar4 - 3;\n            puVar3 = puVar9 + 3;\n            uVar1 = CONCAT11(*puVar9, puVar9[1]);\n            Var2 = CONCAT21(uVar1, puVar9[2]);\n            *(&var_54h + iVar7) = *((*puVar9 >> 2) + iVar6);\n            *(&var_54h + iVar7 + 1) = *((uVar1 >> 4 & 0x3f) + iVar6);\n            *(&var_54h + iVar7 + 2) = *((Var2 >> 6 & 0x3f) + iVar6);\n            *(&var_54h + iVar7 + 3) = *((Var2 & 0x3f) + iVar6);\n            iVar7 = iVar7 + 4;\n            var_4h = var_4h - 1;\n            puVar9 = puVar3;\n        } while (var_4h != 0);\n    }\n    if (uVar4 != 0) {\n        iVar8 = iVar7;\n        if (iVar7 == 0x48) {\n            fcn.00401119(&var_54h);\n            iVar8 = 0;\n            iVar6 = *0x41cbe0;\n            if (arg_10h != 0) {\n                fcn.00401119(0x413644);\n                iVar6 = *0x41cbe0;\n            }\n        }\n        uVar1 = CONCAT11(*puVar3, puVar3[1]);\n        *(&var_54h + iVar8) = *((*puVar3 >> 2) + iVar6);\n        *(&var_54h + iVar8 + 1) = *((uVar1 >> 4 & 0x3f) + iVar6);\n        iVar7 = iVar8 + 2;\n        if (uVar4 == 2) {\n            *(&var_54h + iVar8 + 2) = *(iVar6 + (uVar1 & 0xf) * 4);\n        }\n        else {\n            if (arg_14h == 0) goto code_r0x0041100f;\n            *(&var_54h + iVar8 + 2) = 0x3d;\n        }\n        iVar7 = iVar8 + 3;\n        if (arg_14h != 0) {\n            *(&var_54h + iVar8 + 3) = 0x3d;\n            iVar7 = iVar8 + 4;\n        }\n    }\ncode_r0x0041100f:\n    if (iVar7 != 0) {\n        *(&var_54h + iVar7) = 0;\n        fcn.00401119(&var_54h);\n        if (arg_10h != 0) {\n            fcn.00401119(0x413644);\n        }\n    }\n    return;\n}\n",
        "token_count": 1072
    },
    "00411102": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpSubKey\n\nvoid __cdecl fcn.00411102(uint arg_8h, uint dest, uint arg_10h, uint s)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    char *pcVar4;\n    int32_t *piVar5;\n    uint *in_FS_OFFSET;\n    uint arg_10h_00;\n    uint lpSubKey;\n    uint var_78h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint phkResult;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x18) = 1;\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_strrchr)(*(unaff_EBP + 0x14), 0x2e);\n    if (iVar2 != 0) {\n        sub.MSVCRT.dll_strcpy(unaff_EBP + -0x17c, iVar2);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000000, unaff_EBP + -0x17c, 0, 0x20019, unaff_EBP + -0x10);\n        if (iVar2 == 0) {\n            *(unaff_EBP + -0x1c) = 0x50;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                              (*(unaff_EBP + -0x10), \"Content Type\", 0, unaff_EBP + -0x18, unaff_EBP + -0x78, \n                               unaff_EBP + -0x1c);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x10));\n            pcVar4 = unaff_EBP + -0x78;\n            if (iVar2 == 0) goto code_r0x004111fe;\n        }\n    }\n    uVar3 = *0x41cbe4;\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcmpiA;\n    *(unaff_EBP + -0x14) = 0;\n    iVar2 = (*pcVar1)(unaff_EBP + -0x17c, uVar3);\n    if (iVar2 != 0) {\n        piVar5 = 0x41cbe4;\n        do {\n            if (*piVar5 == 0) {\n                pcVar4 = *(unaff_EBP + 0x10);\n                if ((pcVar4 == NULL) || (*pcVar4 == '\\0')) {\n                    pcVar4 = \"application/octet-stream\";\n                }\n                goto code_r0x004111fe;\n            }\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n            piVar5 = piVar5 + 2;\n            iVar2 = (*pcVar1)(unaff_EBP + -0x17c, *piVar5);\n        } while (iVar2 != 0);\n    }\n    pcVar4 = *(*(unaff_EBP + -0x14) * 8 + 0x41cbe8);\ncode_r0x004111fe:\n    arg_10h_00 = 7;\n    iVar2 = unaff_EBP + -0x28;\n    uVar3 = fcn.004110c7(*(unaff_EBP + 0x14));\n    fcn.0040a69a(uVar3, iVar2, arg_10h_00, 1);\n    uVar3 = fcn.0040d473();\n    (*_sym.imp.MSVCRT.dll_sprintf)(*(unaff_EBP + 8), \"Content-Type: %s;\\r\\n name=\\\"%s\\\"\\r\\n\", pcVar4, uVar3);\n    if (*(unaff_EBP + 0xc) != 0) {\n        sub.MSVCRT.dll_strcpy(*(unaff_EBP + 0xc), pcVar4);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1013
    },
    "00411d97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop",
            "parse credit card information"
        ],
        "decompiled_code": "\nuint fcn.00411d97(uint8_t *param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (param_2 != 0) {\n        do {\n            uVar1 = *param_1;\n            if (uVar1 == 0) {\n                return 0;\n            }\n            if (((uVar1 != 9) && (uVar1 != 0xd)) && (uVar1 != 10)) {\n                if (uVar1 < 0x20) {\n                    return 1;\n                }\n                if (0x7e < uVar1) {\n                    return 1;\n                }\n            }\n            param_1 = param_1 + 1;\n        } while( true );\n    }\n    uVar1 = *param_1;\n    iVar2 = 0;\n    do {\n        if (uVar1 == 0) {\n            return 0;\n        }\n        if ((uVar1 == 0xd) || (uVar1 == 10)) {\ncode_r0x00411e57:\n            if (0x7f < uVar1) {\n                if (*0x41f5cc == '\\0') {\n                    return 1;\n                }\n                if (*0x41cee1 == '\\0') {\n                    return 1;\n                }\n            }\n        }\n        else {\n            if (uVar1 != 0x20) {\n                if (*0x41d949 == '\\0') {\n                    if (uVar1 == 0x3d) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x3f) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x21) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x22) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x23) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x24) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x40) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x5b) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x5c) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x5d) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x5e) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x60) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x7b) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x7c) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x7d) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x7e) {\n                        return 1;\n                    }\n                    if (uVar1 == 0x7f) {\n                        return 1;\n                    }\n                    if (uVar1 < 0x20) {\n                        return 1;\n                    }\n                }\n                else if ((uVar1 == 0) || ((*0x41d949 < '\\x02' && (uVar1 == 0x3d)))) {\n                    return 1;\n                }\n                goto code_r0x00411e57;\n            }\n            uVar1 = param_1[iVar2 + 1];\n            if ((((uVar1 == 0) || (uVar1 == 0xd)) || (uVar1 == 10)) && (*0x41d949 < '\\x02')) {\n                return 1;\n            }\n        }\n        iVar2 = iVar2 + 1;\n        uVar1 = param_1[iVar2];\n    } while( true );\n}\n",
        "token_count": 852
    },
    "00411e7e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00411e7e(uint8_t *param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    iVar3 = 0;\n    if (param_2 == 0) {\n        iVar2 = 0;\n        uVar1 = *param_1;\n        while (uVar1 != 0) {\n            if (uVar1 != 0xd) {\n                if (uVar1 == 10) {\n                    iVar3 = iVar3 + 2;\n                }\n                else {\n                    if (uVar1 == 0x20) {\n                        uVar1 = param_1[iVar2 + 1];\n                        if ((((uVar1 != 0) && (uVar1 != 0xd)) && (uVar1 != 10)) || (*0x41d949 == '\\x02'))\n                        goto code_r0x00411f26;\n                    }\n                    else if (*0x41d949 == '\\0') {\n                        if ((((((uVar1 != 0x3d) && (uVar1 != 0x3f)) &&\n                              ((uVar1 != 0x21 && ((uVar1 != 0x22 && (uVar1 != 0x23)))))) && (uVar1 != 0x24)) &&\n                            (((((uVar1 != 0x40 && (uVar1 != 0x5b)) && (uVar1 != 0x5c)) &&\n                              ((uVar1 != 0x5d && (uVar1 != 0x5e)))) && (uVar1 != 0x60)))) &&\n                           (((uVar1 != 0x7b && (uVar1 != 0x7c)) &&\n                            ((uVar1 != 0x7d && (((uVar1 != 0x7e && (uVar1 != 0x7f)) && (0x1f < uVar1)))))))) {\n                            if (uVar1 < 0x80) goto code_r0x00411f26;\n                            if (*0x41f5cc != '\\0') {\n                                bVar4 = *0x41cee1 == '\\0';\n                                goto code_r0x00411fbe;\n                            }\n                        }\n                    }\n                    else if (uVar1 != 0) {\n                        if (*0x41d949 < '\\x02') {\n                            bVar4 = uVar1 == 0x3d;\ncode_r0x00411fbe:\n                            if (bVar4) goto code_r0x00411fc4;\n                        }\ncode_r0x00411f26:\n                        iVar3 = iVar3 + 1;\n                        goto code_r0x00411fc7;\n                    }\ncode_r0x00411fc4:\n                    iVar3 = iVar3 + 3;\n                }\n            }\ncode_r0x00411fc7:\n            iVar2 = iVar2 + 1;\n            uVar1 = param_1[iVar2];\n        }\n    }\n    else {\n        for (; uVar1 = *param_1,  uVar1 != 0; param_1 = param_1 + 1) {\n            if ((uVar1 == 0x5f) ||\n               (((((uVar1 < 0x61 || (0x7a < uVar1)) && ((uVar1 < 0x41 || (0x5a < uVar1)))) &&\n                 ((uVar1 < 0x30 || (0x39 < uVar1)))) &&\n                (((uVar1 != 0x20 && (((uVar1 != 0x21 && (uVar1 != 0x2a)) && (uVar1 != 0x2b)))) &&\n                 ((uVar1 != 0x2d && (uVar1 != 0x2f)))))))) {\n                iVar3 = iVar3 + 3;\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 894
    },
    "00411fd9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411fd9(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint8_t *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = fcn.0040d473();\n    var_8h = fcn.00401156();\n    pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n    var_4h = 0;\n    if (arg_10h == 0) {\n        if (var_8h != 0) {\n            do {\n                uVar2 = *var_ch;\n                var_ch = var_ch + 1;\n                var_10h = var_10h & 0xffffff00 | uVar2;\n                if (uVar2 != 0xd) {\n                    if (uVar2 != 10) {\n                        if (uVar2 == 0x20) {\n                            if (((1 < var_8h) && (*var_ch != 0xd)) && (*var_ch != 10)) {\n                                uVar3 = 0x20;\ncode_r0x004120f9:\n                                fcn.00401136(uVar3);\n                                goto code_r0x00412100;\n                            }\n                            uVar3 = 0x20;\n                            if (*0x41d949 == '\\x02') goto code_r0x004120f9;\ncode_r0x004121a9:\n                            (*pcVar1)(&arg_10h, \"=%02X\", uVar3);\n                            fcn.00401119(&arg_10h);\n                            var_4h = var_4h + 3;\n                        }\n                        else {\n                            uVar3 = var_10h;\n                            if (*0x41d949 == '\\0') {\n                                if ((((((uVar2 == 0x3d) || (uVar2 == 0x3f)) || (uVar2 == 0x21)) ||\n                                     (((uVar2 == 0x22 || (uVar2 == 0x23)) ||\n                                      ((uVar2 == 0x24 || ((uVar2 == 0x40 || (uVar2 == 0x5b)))))))) ||\n                                    ((uVar2 == 0x5c || (((uVar2 == 0x5d || (uVar2 == 0x5e)) || (uVar2 == 0x60)))))) ||\n                                   ((((uVar2 == 0x7b || (uVar2 == 0x7c)) ||\n                                     (((uVar2 == 0x7d || ((uVar2 == 0x7e || (uVar2 == 0x7f)))) || (uVar2 < 0x20)))) ||\n                                    ((0x7f < uVar2 && ((*0x41f5cc == '\\0' || (*0x41cee1 == '\\0')))))))) {\n                                    uVar3 = uVar2;\n                                    goto code_r0x004121a9;\n                                }\n                                goto code_r0x004120f9;\n                            }\n                            if ((uVar2 != 0) && (('\\x01' < *0x41d949 || (uVar2 != 0x3d)))) goto code_r0x004120f9;\n                            (*pcVar1)(&arg_10h, \"=%02X\", uVar2);\n                            fcn.00401119(&arg_10h);\n                            var_4h = var_4h + 3;\ncode_r0x00412100:\n                            var_4h = var_4h + 1;\n                        }\n                        if (var_4h < 0x48) goto code_r0x004121d8;\n                    }\n                    fcn.00401119();\n                    var_4h = 0;\n                }\ncode_r0x004121d8:\n                var_8h = var_8h - 1;\n            } while (var_8h != 0);\n            if (0x47 < var_4h) {\n                fcn.00401119(0x419a4c);\n            }\n        }\n    }\n    else {\n        for (; var_8h != 0; var_8h = var_8h - 1) {\n            uVar2 = *var_ch;\n            var_ch = var_ch + 1;\n            var_10h = var_10h & 0xffffff00 | uVar2;\n            if (uVar2 == 0x20) {\n                uVar3 = 0x5f;\ncode_r0x00412088:\n                fcn.00401136(uVar3);\n            }\n            else {\n                if (uVar2 == 0x5f) {\n                    uVar2 = 0x5f;\n                }\n                else {\n                    uVar3 = var_10h;\n                    if ((((((0x60 < uVar2) && (uVar2 < 0x7b)) || ((0x40 < uVar2 && (uVar2 < 0x5b)))) ||\n                         ((0x2f < uVar2 && (uVar2 < 0x3a)))) || (uVar2 == 0x21)) ||\n                       ((((uVar2 == 0x2a || (uVar2 == 0x2b)) || (uVar2 == 0x2d)) || (uVar2 == 0x2f))))\n                    goto code_r0x00412088;\n                }\n                (*pcVar1)(&arg_10h, \"=%02X\", uVar2);\n                fcn.00401119(&arg_10h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1279
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    uint *puVar1;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint *var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x419a60;\n    uStack16 = 0x412414;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_18h = &stack0xffffffc0;\n    var_4h = 0;\n    (*_sym.imp.MSVCRT.dll___set_app_type)(1);\n    *0x4252c4 = 0xffffffff;\n    *0x4252c8 = 0xffffffff;\n    puVar1 = (*_sym.imp.MSVCRT.dll___p__fmode)();\n    *puVar1 = *0x4252bc;\n    puVar1 = (*_sym.imp.MSVCRT.dll___p__commode)();\n    *puVar1 = *0x4252b8;\n    *0x4252c0 = *_sym.imp.MSVCRT.dll__adjust_fdiv;\n    fcn.00412413();\n    if (*0x41cc80 == 0) {\n        (*_sym.imp.MSVCRT.dll___setusermatherr)(0x412410);\n    }\n    fcn.004123fe();\n    sub.MSVCRT.dll__initterm(0x41b040, 0x41b044);\n    var_28h = *0x4252b4;\n    (*_sym.imp.MSVCRT.dll___getmainargs)(&var_1ch, &var_2ch, &var_20h, *0x4252b0, &var_28h);\n    sub.MSVCRT.dll__initterm(0x41b000, 0x41b03c);\n    puVar1 = (*_sym.imp.MSVCRT.dll___p___initenv)();\n    *puVar1 = var_20h;\n    var_24h = fcn.004015ae(var_1ch, var_2ch, var_20h);\n    (*_sym.imp.MSVCRT.dll_exit)(var_24h);\n    sub.MSVCRT.dll__XcptFilter(**var_14h, var_14h);\n    return;\n}\n",
        "token_count": 566
    },
    "004011b8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004011b8(int32_t *param_1)\n\n{\n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n        *param_1 = -1;\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "004011ce": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004011ce(int32_t *param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    \n    fcn.004011b8();\n    pcVar1 = _sym.imp.KERNEL32.dll_CreateFileA;\n    uVar4 = 0x8000000;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(param_2, 1, 3, 0, 3, 0x8000000, 0);\n    *param_1 = iVar2;\n    if (iVar2 == -1) {\n        uVar3 = 0x8000000;\n        iVar2 = (*pcVar1)(uVar4, 1, 0, 0, 3, 0x8000000, 0);\n        *param_1 = iVar2;\n        if (iVar2 == -1) {\n            uVar4 = 0x8000000;\n            iVar2 = (*pcVar1)(uVar3, 0x80000000, 3, 0, 3, 0x8000000, 0);\n            *param_1 = iVar2;\n            if (iVar2 == -1) {\n                iVar2 = (*pcVar1)(uVar4, 0x80000000, 0, 0, 3, 0x8000000, 0);\n                *param_1 = iVar2;\n            }\n        }\n    }\n    return *param_1 != -1;\n}\n",
        "token_count": 351
    },
    "00401266": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00401266(int32_t *param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    int32_t iVar1;\n    \n    if ((*param_1 != -1) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(*param_1, param_2, param_3, param_4, param_5),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "00405877": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00405877(int32_t *param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    if (*param_1 == -1) {\n        bVar2 = false;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(*param_1, param_2, param_3, param_4);\n        if (iVar1 == -1) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            bVar2 = iVar1 == 0;\n        }\n        else {\n            bVar2 = true;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 163
    },
    "004058ad": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004058ad(uint32_t *arg_8h, uint32_t lpFileName)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint s2;\n    uint dest;\n    int32_t hFindFile;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.004011b2();\n    *0x4243c8 = NULL;\n    puVar7 = NULL;\n    *arg_8h = lpFileName;\n    pcVar3 = _sym.imp.MSVCRT.dll_malloc;\n    var_ch = 0;\n    var_10h = 0;\n    var_4h = 0;\n    if (0 < *0x41cedc) {\n        lpFileName = 0x41f5d0;\n        do {\n            if (var_10h != 0) break;\n            sub.MSVCRT.dll_strcpy(&dest, lpFileName);\n            pcVar2 = _sym.imp.MSVCRT.dll_strrchr;\n            iVar4 = (*_sym.imp.MSVCRT.dll_strrchr)(&dest, 0x5c);\n            if ((iVar4 == 0) && (iVar4 = (*pcVar2)(&dest, 0x3a),  iVar4 == 0)) {\n                dest._0_1_ = 0;\n            }\n            else {\n                *(iVar4 + 1) = 0;\n            }\n            hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(lpFileName, 0x4243d0);\n            puVar8 = puVar7;\n            if (hFindFile != -1) {\n                do {\n                    puVar7 = puVar8;\n                    if (var_10h != 0) break;\n                    if ((*0x4243d0 & 0x10) == 0) {\n                        sub.MSVCRT.dll_strcpy(&s2, &dest);\n                        sub.MSVCRT.dll_strcat(&s2, 0x4243fc);\n                        iVar4 = fcn.004011ce(&s2);\n                        if (iVar4 != 0) {\n                            iVar4 = fcn.0040124c();\n                            if ((iVar4 != 0) && (*0x4243ec == 0)) {\n                                uVar1 = *arg_8h;\n                                uVar6 = *0x4243f0 + uVar1;\n                                *arg_8h = uVar6;\n                                if (uVar6 < uVar1) {\n                                    *arg_8h = 0;\n                                    var_10h = 1;\n                                }\n                                else {\n                                    if (*0x4243c8 == NULL) {\n                                        puVar7 = (*pcVar3)(0x10);\n                                        *0x4243c8 = puVar7;\n                                    }\n                                    else {\n                                        puVar7 = (*pcVar3)(0x10);\n                                        *puVar8 = puVar7;\n                                    }\n                                    *puVar7 = 0;\n                                    iVar4 = sub.MSVCRT.dll_strlen(&s2);\n                                    uVar5 = (*pcVar3)(iVar4 + 1);\n                                    puVar7[1] = uVar5;\n                                    sub.MSVCRT.dll_memcpy(uVar5, &s2, iVar4 + 1);\n                                    puVar7[2] = *(var_4h + 0x41cc88);\n                                    var_ch = var_ch + 1;\n                                    puVar7[3] = *0x4243f0;\n                                }\n                            }\n                            fcn.004011b8();\n                        }\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(hFindFile, 0x4243d0);\n                    puVar8 = puVar7;\n                } while (iVar4 != 0);\n            }\n            (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n            var_4h = var_4h + 1;\n            lpFileName = lpFileName + 0x105;\n        } while (var_4h < *0x41cedc);\n    }\n    fcn.004015a9();\n    return var_ch;\n}\n",
        "token_count": 984
    },
    "0040b976": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040b976(uint lpString2, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint lpFindFileData;\n    uint var_228h;\n    uint lpFileName;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpFileName, lpString2);\n    *arg_ch = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(&lpFileName, &lpFindFileData);\n    if (iVar1 != -1) {\n        *arg_ch = var_228h;\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 151
    },
    "0040fbeb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040fbeb(uint name, uint32_t endptr)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint32_t *puVar6;\n    int32_t iVar7;\n    uint arg;\n    int32_t *in_ECX;\n    uint var_80h;\n    ushort var_30h;\n    ushort var_2eh;\n    uint32_t var_2ch;\n    uint32_t *var_20h;\n    uint var_1ch;\n    uint argp;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint optlen;\n    uint32_t **var_4h;\n    \n    uVar2 = endptr;\n    optlen = 0;\n    argp = 1;\n    if ((in_ECX[1] == 0) || (in_ECX[2] == 0)) {\n        return 0xfa1;\n    }\n    iVar3 = fcn.0040fbc5(endptr);\n    if (iVar3 == 0) {\n        iVar3 = sub.WSOCK32.dll_getservbyname(uVar2, 0x41946c);\n        if (iVar3 == 0) {\n            iVar3 = sub.WSOCK32.dll_WSAGetLastError();\n            if (iVar3 == 0x2afc) {\n                return 0xfae;\n            }\n            if (iVar3 == 0x2afb) {\n                return 0xfae;\n            }\n            return iVar3 + -5000;\n        }\n        var_ch = CONCAT22(var_ch._2_2_, *(iVar3 + 8));\n    }\n    else {\n        uVar4 = (*_sym.imp.MSVCRT.dll_strtol)(uVar2, &endptr, 10);\n        if (endptr == uVar2) {\n            return 0xfae;\n        }\n        var_ch = sub.WSOCK32.dll_htons(uVar4);\n    }\n    var_14h = sub.WSOCK32.dll_inet_addr(name);\n    if (var_14h == -1) {\n        puVar5 = sub.WSOCK32.dll_gethostbyname(name);\n        if (puVar5 == NULL) {\n            if (*0x42434c != '\\0') {\n                endptr = endptr & 0xffffff | *0x423710 << 0x18;\n                *0x423710 = 0;\n                fcn.00401292(\"superDebug: Cannot resolve hostname <%s> to ip address.\\n\", name);\n                *0x423710 = endptr._3_1_;\n            }\n            return 0xfa7;\n        }\n        var_4h = puVar5[3];\n        var_2ch = **var_4h;\n        if (*0x42434c != '\\0') {\n            endptr = endptr & 0xffffff | *0x423710 << 0x18;\n            *0x423710 = 0;\n            fcn.00401292(\"superDebug: Hostname <%s> resolved to ip address %u.%u.%u.%u\\n\", name);\n            fcn.00401292(\"superDebug: Official hostname is %s\\n\", *puVar5);\n            *0x423710 = endptr._3_1_;\n        }\n    }\n    else {\n        var_20h = &var_14h;\n        var_4h = &var_20h;\n        var_1ch = 0;\n    }\n    puVar6 = *var_4h;\n    endptr = 0;\n    if (puVar6 != NULL) {\n        do {\n            uVar1 = *0x423710;\n            var_2ch = *puVar6;\n            if (*0x42434c != '\\0') {\n                *0x423710 = 0;\n                fcn.00401292(\"superDebug: Attempting to connect to ip address %u.%u.%u.%u\\n\", var_2ch & 0xff);\n            }\n            uVar4 = 2;\n            *0x423710 = uVar1;\n            iVar3 = sub.WSOCK32.dll_socket(2, 1, 0);\n            *in_ECX = iVar3;\n            if (iVar3 == -1) {\n                return 0xfa8;\n            }\n            var_2eh = var_ch;\n            var_30h = 2;\n            sub.WSOCK32.dll_setsockopt();\n            iVar7 = fcn.0040deb4();\n            if (iVar7 == 0) {\n                if (endptr != -1) goto code_r0x0040feba;\n            }\n            else {\n                while( true ) {\n                    iVar3 = *in_ECX;\n                    endptr = sub.WSOCK32.dll_connect(uVar4, &var_30h, 0x10, iVar3);\n                    uVar1 = *0x423710;\n                    if (endptr != -1) goto code_r0x0040feba;\n                    if (*0x42434c != '\\0') {\n                        *0x423710 = 0;\n                        arg = sub.WSOCK32.dll_WSAGetLastError(iVar7 + -1);\n                        fcn.00401292(\"superDebug: ::connect() returned error %d, retry count remaining is %u\\n\", arg);\n                    }\n                    iVar7 = iVar7 + -1;\n                    *0x423710 = uVar1;\n                    if (iVar7 == 0) break;\n                    (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n                }\n            }\n            uVar1 = *0x423710;\n            if (*0x42434c != '\\0') {\n                *0x423710 = 0;\n                uVar4 = sub.WSOCK32.dll_WSAGetLastError(iVar3);\n                fcn.00401292(\"superDebug: Connection returned error %d\\n\", uVar4);\n            }\n            var_4h = var_4h + 1;\n            puVar6 = *var_4h;\n            *0x423710 = uVar1;\n        } while (puVar6 != NULL);\n        iVar3 = sub.WSOCK32.dll_WSAGetLastError(iVar3);\n        if (iVar3 != 0x2733) {\n            if (iVar3 != 0x274c) {\n                if (iVar3 == 0x274d) {\n                    return 0xfb1;\n                }\n                (*_sym.imp.USER32.dll_wsprintfA)(&var_80h, \"unexpected error %d from winsock\", iVar3);\n                fcn.0040fb5c(&var_80h);\n            }\n            return 0xfaf;\n        }\n    }\ncode_r0x0040feba:\n    in_ECX[9] = *0x425290;\n    sub.WSOCK32.dll_ioctlsocket(*in_ECX, 0x8004667e, &argp);\n    in_ECX[10] = 0;\n    in_ECX[0xb] = *in_ECX;\n    in_ECX[10] = in_ECX[10] + 1;\n    in_ECX[0x4b] = *0x41cbdc;\n    in_ECX[0x4c] = 0;\n    var_10h = 0xfaf0;\n    optlen = 4;\n    sub.WSOCK32.dll_getsockopt(*in_ECX, 0xffff, 0x1001, &var_10h, &optlen);\n    if (var_10h < 0xfaf0) {\n        in_ECX[8] = var_10h;\n    }\n    return 0;\n}\n",
        "token_count": 1711
    },
    "00410c74": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00410c74(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.WSOCK32.dll_inet_addr(param_1);\n    if (iVar1 == -1) {\n        iVar1 = sub.WSOCK32.dll_gethostbyname(param_1);\n        if (iVar1 == 0) {\n            iVar2 = 0;\n            iVar1 = sub.WSOCK32.dll_WSAGetLastError();\n            if (iVar1 == 0x276d) {\n                iVar1 = fcn.0041026c();\n                if (iVar1 == 0) {\n                    iVar2 = fcn.00410c74(param_1);\n                    fcn.0041030f();\n                }\n            }\n            return iVar2;\n        }\n        iVar1 = (*_sym.imp.MSVCRT.dll_strchr)(param_1, 0x2e);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00410c74(iVar1 + 1);\n            if (iVar1 == 0) {\n                iVar1 = param_1;\n            }\n            return iVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 269
    },
    "0040ddb6": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ddb6(uint arg_8h, char *lpString)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint var_4h;\n    \n    pcVar6 = lpString;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    pcVar5 = lpString + iVar2;\n    lpString = (*_sym.imp.MSVCRT.dll_strstr)(lpString, \"\\r\\n\\r\\n\");\n    if (lpString == NULL) {\n        lpString = pcVar5;\n    }\n    cVar4 = '\\0';\n    iVar2 = 0;\n    do {\n        if (pcVar5 <= pcVar6) break;\n        cVar1 = *pcVar6;\n        if (cVar1 == '.') {\n            if (cVar4 == '\\n') {\n                iVar2 = fcn.00410c45(arg_8h, pcVar6, 1);\n            }\n            if (iVar2 != 0) goto code_r0x0040de6d;\ncode_r0x0040de5d:\n            iVar2 = fcn.00410c45(arg_8h, pcVar6, 1);\n        }\n        else {\n            if (cVar1 != '\\r') {\n                if (((cVar1 == '\\n') && (cVar4 != '\\r')) && (iVar2 = fcn.00410c45(arg_8h, 0x419028, 1),  iVar2 != 0)) {\n                    return iVar2;\n                }\n                goto code_r0x0040de5d;\n            }\n            if ((pcVar6 < lpString) && (iVar3 = sub.MSVCRT.dll_memcmp(pcVar6, 0x41902c, 3),  iVar3 == 0)) {\n                pcVar6 = pcVar6 + 2;\n            }\n            else if (cVar4 != '\\r') goto code_r0x0040de5d;\n        }\ncode_r0x0040de6d:\n        cVar4 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (iVar2 == 0);\n    if (iVar2 == 0) {\n        if (cVar4 == '\\n') {\n            uVar7 = 3;\n            pcVar6 = 0x41901c;\n        }\n        else {\n            uVar7 = 5;\n            pcVar6 = \"\\r\\n.\\r\\n\";\n        }\n        iVar2 = fcn.00410c45(arg_8h, pcVar6, uVar7);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00410c61(arg_8h);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 643
    },
    "00410e11": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410e11(char *arg_8h, char *arg_ch)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *pcVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    pcVar4 = arg_ch;\n    uVar3 = 0;\n    do {\n        cVar2 = *arg_8h;\n        if ((cVar2 == '\\0') || (cVar2 == '=')) goto code_r0x00410e83;\n        uVar1 = uVar3;\n        if ((cVar2 != '\\r') && (cVar2 != '\\n')) {\n            uVar1 = fcn.00410de6();\n            cVar2 = var_4h;\n            if (uVar1 == 0xff) {\n                if (var_4h != 0) {\n                    *pcVar4 = uVar3 << (cVar2 * '\\x02' & 0x1fU);\n                    pcVar4 = pcVar4 + 1;\n                }\ncode_r0x00410e83:\n                *pcVar4 = '\\0';\n                return pcVar4 - arg_ch;\n            }\n            if (var_4h != 0) {\n                *pcVar4 = (uVar1 >> (('\\x03' - cVar2) * '\\x02' & 0x1fU)) + (uVar3 << (cVar2 * '\\x02' & 0x1fU));\n                pcVar4 = pcVar4 + 1;\n            }\n            var_4h = var_4h + 1;\n            if (var_4h == 4) {\n                var_4h = 0;\n            }\n        }\n        arg_8h = arg_8h + 1;\n        uVar3 = uVar1;\n    } while( true );\n}\n",
        "token_count": 437
    },
    "00404f35": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_414h\n\nvoid fcn.00404f35(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint s2;\n    uint var_10h;\n    uint var_414h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    bVar3 = *0x41f4c4 != 0;\n    *(unaff_EBP + -0x10) = &stack0xfffffbec;\n    if (bVar3) {\n        iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(*(unaff_EBP + 8), \"GSSAPI\");\n        if (iVar1 != 0) goto code_r0x00405081;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(*(unaff_EBP + 8), \"GSSAPI\");\n    if (iVar1 != 0) {\n        if (*0x4243c0 == 0) {\n            bVar3 = *0x423d2c == 0;\n            *(unaff_EBP + -4) = 0;\n            if (bVar3) {\n                if ((*0x4243bc & 1) == 0) {\n                    *0x4243bc = *0x4243bc | 1;\n                    *(unaff_EBP + -4) = 1;\n                    fcn.0040d476();\n                    fcn.00412274(asm.str.0_hCBTCB_EB_14);\n                    *(unaff_EBP + -4) = 0;\n                }\n                *0x423d2c = 0x424368;\n            }\n            fcn.0040cbac(\"UNKNOWN\");\n            *0x4243c0 = 1;\n        }\n        iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(*(unaff_EBP + 8), \"%MECHTYPE%\");\n        if (iVar1 != 0) {\n            iVar2 = iVar1 - *(unaff_EBP + 8);\n            sub.MSVCRT.dll_memcpy(unaff_EBP + -0x414, *(unaff_EBP + 8), iVar2);\n            *(unaff_EBP + -0x414 + iVar2) = 0;\n            iVar2 = sub.MSVCRT.dll_strlen(\"%MECHTYPE%\");\n            (*_sym.imp.MSVCRT.dll_printf)(\"%s%s%s\", unaff_EBP + -0x414, \"UNKNOWN\", iVar2 + iVar1);\n            goto code_r0x00405081;\n        }\n    }\n    (*_sym.imp.MSVCRT.dll_printf)(0x41322c, *(unaff_EBP + 8));\ncode_r0x00405081:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 658
    },
    "0040ff6f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040ff6f(uint param_1, uint8_t param_2)\n\n{\n    fcn.0040fbae();\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 78
    },
    "00410bf1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00410bf1(uint param_1, uint8_t param_2)\n\n{\n    fcn.00410be3();\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 76
    },
    "00409334": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409334(uint hKey)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint uVar5;\n    char *pcVar6;\n    uint lpSubKey;\n    uint s;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.MSVCRT.dll_strcpy(&lpSubKey, \"SOFTWARE\\\\Public Domain\\\\Blat\");\n    if (*0x424578 != '\\0') {\n        sub.MSVCRT.dll_strcat(&lpSubKey, 0x417834);\n        sub.MSVCRT.dll_strcat(&lpSubKey, 0x424578);\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(hKey, &lpSubKey, 0, 0, 0, 0x20006, 0, &var_4h, &var_8h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegSetValueExA;\n    if (iVar2 != 0) {\n        if (*0x423710 == '\\0') {\n            if ((iVar2 == 0x3f5) || (iVar2 == 5)) {\n                pcVar6 = \"Write access to the registry was denied.\\n\";\n            }\n            else {\n                pcVar6 = \"Error in creating blat key in the registry\\n\";\n            }\n            (*_sym.imp.MSVCRT.dll_printf)(pcVar6);\n        }\n        return 10;\n    }\n    if (*0x41d630 == '\\0') {\ncode_r0x0040955e:\n        if (*0x41d848 != '\\0') {\n            iVar2 = sub.MSVCRT.dll_strcmp(0x41d848, 0x413770);\n            if (iVar2 == 0) {\n                *0x41d848 = '\\0';\n                *0x41e288 = 0;\n            }\n            iVar2 = sub.MSVCRT.dll_strlen(0x41d848);\n            iVar2 = (*pcVar1)(var_4h, \"NNTP server\", 0, 1, 0x41d848, iVar2 + 1);\n            if (iVar2 != 0) {\n                if (*0x423710 != '\\0') {\n                    return 0xb;\n                }\n                pcVar6 = \"Error in setting NNTP server value in the registry\\n\";\n                goto code_r0x0040983f;\n            }\n            iVar2 = sub.MSVCRT.dll_strlen(0x41e288);\n            iVar2 = (*pcVar1)(var_4h, \"NNTP Port\", 0, 1, 0x41e288, iVar2 + 1);\n            if (iVar2 != 0) goto code_r0x00409832;\n            iVar2 = sub.MSVCRT.dll_strlen(0x41d528);\n            iVar2 = (*pcVar1)(var_4h, 0x417668, 0, 1, 0x41d528, iVar2 + 1);\n            if (iVar2 != 0) goto code_r0x00409491;\n            uVar5 = 0;\n            puVar4 = &s;\n            uVar3 = sub.MSVCRT.dll_strlen(0x41e070);\n            fcn.0041103c(0x41e070, uVar3, puVar4, uVar5);\n            iVar2 = sub.MSVCRT.dll_strlen(&s);\n            (*pcVar1)(var_4h, \"Login\", 0, 1, &s, iVar2 + 1);\n            uVar5 = 0;\n            puVar4 = &s;\n            uVar3 = sub.MSVCRT.dll_strlen(0x423d30);\n            fcn.0041103c(0x423d30, uVar3, puVar4, uVar5);\n            iVar2 = sub.MSVCRT.dll_strlen(&s);\n            (*pcVar1)(var_4h, 0x41765c, 0, 1, &s, iVar2 + 1);\n            iVar2 = sub.MSVCRT.dll_strlen(0x41cdd8);\n            iVar2 = (*pcVar1)(var_4h, \"Sender\", 0, 1, 0x41cdd8, iVar2 + 1);\n            if (iVar2 != 0) goto code_r0x00409548;\n        }\n        if (*0x41d420 != '\\0') {\n            iVar2 = sub.MSVCRT.dll_strcmp(0x41d420, 0x413770);\n            if (iVar2 == 0) {\n                *0x41d420 = '\\0';\n                *0x41e498 = 0;\n            }\n            iVar2 = sub.MSVCRT.dll_strlen(0x41d420);\n            iVar2 = (*pcVar1)(var_4h, \"POP3 server\", 0, 1, 0x41d420, iVar2 + 1);\n            if (iVar2 != 0) {\n                if (*0x423710 != '\\0') {\n                    return 0xb;\n                }\n                pcVar6 = \"Error in setting POP3 server value in the registry\\n\";\n                goto code_r0x0040983f;\n            }\n            iVar2 = sub.MSVCRT.dll_strlen(0x41e498);\n            iVar2 = (*pcVar1)(var_4h, \"POP3 Port\", 0, 1, 0x41e498, iVar2 + 1);\n            if (iVar2 != 0) goto code_r0x00409832;\n            uVar5 = 0;\n            puVar4 = &s;\n            uVar3 = sub.MSVCRT.dll_strlen(0x41e9a8);\n            fcn.0041103c(0x41e9a8, uVar3, puVar4, uVar5);\n            iVar2 = sub.MSVCRT.dll_strlen(&s);\n            (*pcVar1)(var_4h, \"POP3 Login\", 0, 1, &s, iVar2 + 1);\n            uVar5 = 0;\n            puVar4 = &s;\n            uVar3 = sub.MSVCRT.dll_strlen(0x423820);\n            fcn.0041103c(0x423820, uVar3, puVar4, uVar5);\n            iVar2 = sub.MSVCRT.dll_strlen(&s);\n            (*pcVar1)(var_4h, \"POP3 Pwd\", 0, 1, &s, iVar2 + 1);\n        }\n        if (*0x41f3c0 == '\\0') {\n            return 0;\n        }\n        iVar2 = sub.MSVCRT.dll_strcmp(0x41f3c0, 0x413770);\n        if (iVar2 == 0) {\n            *0x41f3c0 = '\\0';\n            *0x424050 = 0;\n        }\n        iVar2 = sub.MSVCRT.dll_strlen(0x41f3c0);\n        iVar2 = (*pcVar1)(var_4h, \"IMAP server\", 0, 1, 0x41f3c0, iVar2 + 1);\n        if (iVar2 != 0) {\n            if (*0x423710 != '\\0') {\n                return 0xb;\n            }\n            pcVar6 = \"Error in setting IMAP server value in the registry\\n\";\n            goto code_r0x0040983f;\n        }\n        iVar2 = sub.MSVCRT.dll_strlen(0x424050);\n        iVar2 = (*pcVar1)(var_4h, \"IMAP Port\", 0, 1, 0x424050, iVar2 + 1);\n        if (iVar2 == 0) {\n            uVar5 = 0;\n            puVar4 = &s;\n            uVar3 = sub.MSVCRT.dll_strlen(0x423718);\n            fcn.0041103c(0x423718, uVar3, puVar4, uVar5);\n            iVar2 = sub.MSVCRT.dll_strlen(&s);\n            (*pcVar1)(var_4h, \"IMAP Login\", 0, 1, &s, iVar2 + 1);\n            uVar5 = 0;\n            puVar4 = &s;\n            uVar3 = sub.MSVCRT.dll_strlen(0x41e390);\n            fcn.0041103c(0x41e390, uVar3, puVar4, uVar5);\n            iVar2 = sub.MSVCRT.dll_strlen(&s);\n            (*pcVar1)(var_4h, \"IMAP Pwd\", 0, 1, &s, iVar2 + 1);\n            return 0;\n        }\n    }\n    else {\n        iVar2 = sub.MSVCRT.dll_strcmp(0x41d630, 0x413770);\n        if (iVar2 == 0) {\n            *0x41d630 = '\\0';\n            *0x41eab0 = 0;\n        }\n        iVar2 = sub.MSVCRT.dll_strlen(0x41d630);\n        iVar2 = (*pcVar1)(var_4h, \"SMTP server\", 0, 1, 0x41d630, iVar2 + 1);\n        if (iVar2 != 0) {\n            if (*0x423710 != '\\0') {\n                return 0xb;\n            }\n            pcVar6 = \"Error in setting SMTP server value in the registry\\n\";\n            goto code_r0x0040983f;\n        }\n        iVar2 = sub.MSVCRT.dll_strlen(0x41eab0);\n        iVar2 = (*pcVar1)(var_4h, \"SMTP Port\", 0, 1, 0x41eab0, iVar2 + 1);\n        if (iVar2 == 0) {\n            iVar2 = sub.MSVCRT.dll_strlen(0x41d528);\n            iVar2 = (*pcVar1)(var_4h, 0x417668, 0, 1, 0x41d528, iVar2 + 1);\n            if (iVar2 == 0) {\n                uVar5 = 0;\n                puVar4 = &s;\n                uVar3 = sub.MSVCRT.dll_strlen(0x41e070);\n                fcn.0041103c(0x41e070, uVar3, puVar4, uVar5);\n                iVar2 = sub.MSVCRT.dll_strlen(&s);\n                (*pcVar1)(var_4h, \"Login\", 0, 1, &s, iVar2 + 1);\n                uVar5 = 0;\n                puVar4 = &s;\n                uVar3 = sub.MSVCRT.dll_strlen(0x423d30);\n                fcn.0041103c(0x423d30, uVar3, puVar4, uVar5);\n                iVar2 = sub.MSVCRT.dll_strlen(&s);\n                (*pcVar1)(var_4h, 0x41765c, 0, 1, &s, iVar2 + 1);\n                iVar2 = sub.MSVCRT.dll_strlen(0x41cdd8);\n                iVar2 = (*pcVar1)(var_4h, \"Sender\", 0, 1, 0x41cdd8, iVar2 + 1);\n                if (iVar2 == 0) goto code_r0x0040955e;\ncode_r0x00409548:\n                if (*0x423710 != '\\0') {\n                    return 0xb;\n                }\n                pcVar6 = \"Error in setting sender address value in the registry\\n\";\n                goto code_r0x0040983f;\n            }\ncode_r0x00409491:\n            if (*0x423710 != '\\0') {\n                return 0xb;\n            }\n            pcVar6 = \"Error in setting number of try value in the registry\\n\";\n            goto code_r0x0040983f;\n        }\n    }\ncode_r0x00409832:\n    if (*0x423710 != '\\0') {\n        return 0xb;\n    }\n    pcVar6 = \"Error in setting port value in the registry\\n\";\ncode_r0x0040983f:\n    (*_sym.imp.MSVCRT.dll_printf)(pcVar6);\n    return 0xb;\n}\n",
        "token_count": 2755
    },
    "0040d880": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0040d880(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_1454h;\n    uint var_1051h;\n    uint var_44h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.004123b0();\n    *(unaff_EBP + -0x14) = 0;\n    if (*(extraout_ECX + 0x40) == 1) {\n        fcn.0040d6a7(*(unaff_EBP + 0xc));\n        goto code_r0x0040da15;\n    }\n    fcn.00401062();\n    iVar4 = *(extraout_ECX + 0x50);\n    *(unaff_EBP + -4) = 1;\n    if (iVar4 == 5) {\n        uVar2 = fcn.00401156();\n        if (uVar2 < 4) {\n            fcn.0040ca3b();\n            goto code_r0x0040d8d1;\n        }\n        puVar1 = fcn.0040d473();\n        uVar3 = sub.WSOCK32.dll_ntohl(*puVar1);\n        *(unaff_EBP + 0xc) = uVar3;\n        iVar4 = fcn.00401156();\n        iVar4 = iVar4 + -4;\n        if (*(unaff_EBP + 0xc) != iVar4) {\n            fcn.0040ca3b();\n            (*_sym.imp.MSVCRT.dll_sprintf)\n                      (unaff_EBP + -0x1454, \n                       \"Encrypted response size mismatch: the server claims the message is %d bytes, but actually sent %d bytes.\"\n                       , *(unaff_EBP + 0xc), iVar4);\n            goto code_r0x0040d8d1;\n        }\n        *(unaff_EBP + -0x24) = iVar4;\n        iVar4 = fcn.0040d473();\n        *(unaff_EBP + -0x20) = iVar4 + 4;\n        iVar4 = (**(extraout_ECX + 0x20))\n                          (unaff_EBP + -0x10, *(extraout_ECX + 0x4c), unaff_EBP + -0x24, unaff_EBP + -0x1c, \n                           unaff_EBP + -0x38, unaff_EBP + -0x34);\n        if (iVar4 != 0) {\n            fcn.0040ca3b();\n            puVar1 = fcn.0040c953(iVar4, *(unaff_EBP + -0x10), \"Could not gss_unwrap message.\");\n            puVar5 = unaff_EBP + -0x1051;\n            for (iVar4 = 0x403; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar5 = *puVar1;\n                puVar1 = puVar1 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = *puVar1;\n            var_10h = 0x41a1ec;\n            goto code_r0x0040d9c3;\n        }\n    }\n    else {\n        fcn.0040ca3b();\ncode_r0x0040d8d1:\n        puVar1 = fcn.0040c8be();\n        puVar5 = unaff_EBP + -0x1051;\n        for (iVar4 = 0x403; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = *puVar1;\n            puVar1 = puVar1 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        *puVar5 = *puVar1;\n        var_10h = 0x41a1cc;\ncode_r0x0040d9c3:\n        sub.MSVCRT.dll__CxxThrowException(unaff_EBP + -0x1051, var_10h);\n    }\n    uVar3 = fcn.0040ca25(*(unaff_EBP + -0x18), *(unaff_EBP + -0x1c));\n    *(unaff_EBP + -4) = 2;\n    fcn.00408941(uVar3);\n    *(unaff_EBP + -4) = 1;\n    fcn.00401054();\n    fcn.0040d6a7(unaff_EBP + -0x30);\n    *(unaff_EBP + -0x14) = 1;\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\ncode_r0x0040da15:\n    uVar3 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 1345
    },
    "0040fb4b": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040fb4b(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if ((*(param_1 + 0x50) != 5) || (uVar1 = 1,  *(param_1 + 0x40) == 1)) {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "00410de6": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint32_t fcn.00410de6(void)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    \n    if (in_AL == '=') {\n        return 0;\n    }\n    if (in_AL != '\\0') {\n        iVar1 = (*_sym.imp.MSVCRT.dll_strchr)(*0x41cbe0, in_AL);\n        if (iVar1 != 0) {\n            return iVar1 - *0x41cbe0;\n        }\n    }\n    return 0xff;\n}\n",
        "token_count": 113
    },
    "00411c15": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411c15(uint32_t *arg_8h, int32_t s2, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h != 0) {\n        uVar3 = *arg_8h & 0x3f;\n        uVar1 = *arg_8h + arg_10h;\n        uVar2 = 0x40 - uVar3;\n        *arg_8h = uVar1;\n        if (uVar1 < arg_10h) {\n            arg_8h[1] = arg_8h[1] + 1;\n        }\n        if ((uVar3 != 0) && (uVar2 <= arg_10h)) {\n            sub.MSVCRT.dll_memcpy(uVar3 + 0x18 + arg_8h, s2, uVar2);\n            fcn.00411287(arg_8h, arg_8h + 6);\n            arg_10h = arg_10h - uVar2;\n            s2 = s2 + uVar2;\n            uVar3 = 0;\n        }\n        if (0x3f < arg_10h) {\n            uVar1 = arg_10h >> 6;\n            do {\n                fcn.00411287(arg_8h, s2);\n                arg_10h = arg_10h - 0x40;\n                s2 = s2 + 0x40;\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n        }\n        if (arg_10h != 0) {\n            sub.MSVCRT.dll_memcpy(uVar3 + 0x18 + arg_8h, s2, arg_10h);\n        }\n    }\n    return;\n}\n",
        "token_count": 420
    },
    "00411cab": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00411cab(uint32_t *arg_8h, uchar *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = *arg_8h;\n    uVar2 = arg_8h[1] << 3;\n    var_8h = uVar1 << 3;\n    var_4h._0_3_ = uVar2 & 0xff | uVar1 >> 0x1d | (uVar2 >> 8 & 0xff) << 8;\n    iVar3 = 0x38;\n    var_4h._0_3_ = var_4h | (uVar2 >> 0x10) << 0x10;\n    var_4h = uVar2 & 0xff000000 | var_4h;\n    if (0x37 < (uVar1 & 0x3f)) {\n        iVar3 = 0x78;\n    }\n    fcn.00411c15(arg_8h, 0x41cc20, iVar3 - (uVar1 & 0x3f));\n    fcn.00411c15(arg_8h, &var_8h, 8);\n    *arg_ch = *(arg_8h + 2);\n    arg_ch[1] = arg_8h[2] >> 8;\n    arg_ch[2] = *(arg_8h + 10);\n    arg_ch[3] = *(arg_8h + 0xb);\n    arg_ch[4] = *(arg_8h + 3);\n    arg_ch[5] = arg_8h[3] >> 8;\n    arg_ch[6] = *(arg_8h + 0xe);\n    arg_ch[7] = *(arg_8h + 0xf);\n    arg_ch[8] = *(arg_8h + 4);\n    arg_ch[9] = arg_8h[4] >> 8;\n    arg_ch[10] = *(arg_8h + 0x12);\n    arg_ch[0xb] = *(arg_8h + 0x13);\n    arg_ch[0xc] = *(arg_8h + 5);\n    arg_ch[0xd] = arg_8h[5] >> 8;\n    arg_ch[0xe] = *(arg_8h + 0x16);\n    arg_ch[0xf] = *(arg_8h + 0x17);\n    return;\n}\n",
        "token_count": 592
    },
    "00411287": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411287(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar13 = *arg_ch;\n    iVar2 = arg_ch[1];\n    iVar3 = arg_ch[2];\n    iVar4 = arg_ch[3];\n    iVar5 = arg_ch[4];\n    iVar6 = arg_ch[5];\n    iVar14 = arg_ch[6];\n    iVar15 = arg_ch[7];\n    iVar7 = arg_ch[8];\n    iVar8 = arg_ch[9];\n    iVar9 = arg_ch[10];\n    iVar10 = arg_ch[0xb];\n    iVar11 = arg_ch[0xc];\n    iVar12 = arg_ch[0xd];\n    iVar16 = arg_ch[0xe];\n    iVar17 = arg_ch[0xf];\n    uVar19 = *(arg_8h + 0x14);\n    uVar21 = *(arg_8h + 0xc);\n    uVar20 = *(arg_8h + 0x10);\n    uVar1 = ((uVar19 ^ uVar20) & uVar21 ^ uVar19) + *(arg_8h + 8) + -0x28955b88 + iVar13;\n    uVar18 = (uVar1 >> 0x19 | uVar1 * 0x80) + uVar21;\n    uVar1 = uVar19 + 0xe8c7b756 + ((uVar20 ^ uVar21) & uVar18 ^ uVar20) + iVar2;\n    uVar19 = (uVar1 >> 0x14 | uVar1 * 0x1000) + uVar18;\n    uVar1 = uVar20 + 0x242070db + ((uVar21 ^ uVar18) & uVar19 ^ uVar21) + iVar3;\n    uVar21 = (uVar1 >> 0xf | uVar1 * 0x20000) + uVar19;\n    uVar1 = *(arg_8h + 0xc) + -0x3e423112 + ((uVar19 ^ uVar18) & uVar21 ^ uVar18) + iVar4;\n    uVar20 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar21;\n    uVar1 = uVar18 + 0xf57c0faf + ((uVar19 ^ uVar21) & uVar20 ^ uVar19) + iVar5;\n    uVar18 = (uVar1 >> 0x19 | uVar1 * 0x80) + uVar20;\n    uVar1 = uVar19 + 0x4787c62a + ((uVar21 ^ uVar20) & uVar18 ^ uVar21) + iVar6;\n    uVar19 = (uVar1 >> 0x14 | uVar1 * 0x1000) + uVar18;\n    uVar1 = uVar21 + 0xa8304613 + ((uVar20 ^ uVar18) & uVar19 ^ uVar20) + iVar14;\n    uVar21 = (uVar1 >> 0xf | uVar1 * 0x20000) + uVar19;\n    uVar1 = uVar20 + 0xfd469501 + ((uVar19 ^ uVar18) & uVar21 ^ uVar18) + iVar15;\n    uVar20 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar21;\n    uVar1 = uVar18 + 0x698098d8 + ((uVar19 ^ uVar21) & uVar20 ^ uVar19) + iVar7;\n    uVar18 = (uVar1 >> 0x19 | uVar1 * 0x80) + uVar20;\n    uVar1 = uVar19 + 0x8b44f7af + ((uVar21 ^ uVar20) & uVar18 ^ uVar21) + iVar8;\n    uVar22 = (uVar1 >> 0x14 | uVar1 * 0x1000) + uVar18;\n    uVar1 = (uVar21 - 0xa44f) + ((uVar20 ^ uVar18) & uVar22 ^ uVar20) + iVar9;\n    uVar19 = (uVar1 >> 0xf | uVar1 * 0x20000) + uVar22;\n    uVar1 = uVar20 + 0x895cd7be + ((uVar22 ^ uVar18) & uVar19 ^ uVar18) + iVar10;\n    uVar20 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar19;\n    uVar1 = uVar18 + 0x6b901122 + ((uVar22 ^ uVar19) & uVar20 ^ uVar22) + iVar11;\n    uVar21 = (uVar1 >> 0x19 | uVar1 * 0x80) + uVar20;\n    uVar1 = uVar22 + 0xfd987193 + ((uVar19 ^ uVar20) & uVar21 ^ uVar19) + iVar12;\n    uVar18 = (uVar1 >> 0x14 | uVar1 * 0x1000) + uVar21;\n    uVar1 = uVar19 + 0xa679438e + ((uVar20 ^ uVar21) & uVar18 ^ uVar20) + iVar16;\n    uVar22 = (uVar1 >> 0xf | uVar1 * 0x20000) + uVar18;\n    uVar1 = uVar20 + 0x49b40821 + ((uVar18 ^ uVar21) & uVar22 ^ uVar21) + iVar17;\n    uVar19 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar22;\n    uVar1 = uVar21 + 0xf61e2562 + ((uVar22 ^ uVar19) & uVar18 ^ uVar22) + iVar2;\n    uVar23 = (uVar1 >> 0x1b | uVar1 * 0x20) + uVar19;\n    uVar1 = uVar18 + 0xc040b340 + ((uVar19 ^ uVar23) & uVar22 ^ uVar19) + iVar14;\n    uVar21 = (uVar1 >> 0x17 | uVar1 * 0x200) + uVar23;\n    uVar1 = uVar22 + 0x265e5a51 + ((uVar21 ^ uVar23) & uVar19 ^ uVar23) + iVar10;\n    uVar20 = (uVar1 >> 0x12 | uVar1 * 0x4000) + uVar21;\n    uVar1 = uVar19 + 0xe9b6c7aa + ((uVar21 ^ uVar20) & uVar23 ^ uVar21) + iVar13;\n    uVar18 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar20;\n    uVar1 = uVar23 + 0xd62f105d + ((uVar20 ^ uVar18) & uVar21 ^ uVar20) + iVar6;\n    uVar19 = (uVar1 >> 0x1b | uVar1 * 0x20) + uVar18;\n    uVar1 = uVar21 + 0x2441453 + ((uVar18 ^ uVar19) & uVar20 ^ uVar18) + iVar9;\n    uVar22 = (uVar1 >> 0x17 | uVar1 * 0x200) + uVar19;\n    uVar1 = uVar20 + 0xd8a1e681 + ((uVar22 ^ uVar19) & uVar18 ^ uVar19) + iVar17;\n    uVar21 = (uVar1 >> 0x12 | uVar1 * 0x4000) + uVar22;\n    uVar1 = uVar18 + 0xe7d3fbc8 + ((uVar22 ^ uVar21) & uVar19 ^ uVar22) + iVar5;\n    uVar20 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar21;\n    uVar1 = uVar19 + 0x21e1cde6 + ((uVar21 ^ uVar20) & uVar22 ^ uVar21) + iVar8;\n    uVar18 = (uVar1 >> 0x1b | uVar1 * 0x20) + uVar20;\n    uVar1 = uVar22 + 0xc33707d6 + ((uVar20 ^ uVar18) & uVar21 ^ uVar20) + iVar16;\n    uVar19 = (uVar1 >> 0x17 | uVar1 * 0x200) + uVar18;\n    uVar1 = uVar21 + 0xf4d50d87 + ((uVar19 ^ uVar18) & uVar20 ^ uVar18) + iVar4;\n    uVar22 = (uVar1 >> 0x12 | uVar1 * 0x4000) + uVar19;\n    uVar1 = uVar20 + 0x455a14ed + ((uVar19 ^ uVar22) & uVar18 ^ uVar19) + iVar7;\n    uVar21 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar22;\n    uVar1 = uVar18 + 0xa9e3e905 + ((uVar22 ^ uVar21) & uVar19 ^ uVar22) + iVar12;\n    uVar20 = (uVar1 >> 0x1b | uVar1 * 0x20) + uVar21;\n    uVar1 = uVar19 + 0xfcefa3f8 + ((uVar21 ^ uVar20) & uVar22 ^ uVar21) + iVar3;\n    uVar18 = (uVar1 >> 0x17 | uVar1 * 0x200) + uVar20;\n    uVar1 = uVar22 + 0x676f02d9 + ((uVar18 ^ uVar20) & uVar21 ^ uVar20) + iVar15;\n    uVar22 = (uVar1 >> 0x12 | uVar1 * 0x4000) + uVar18;\n    uVar1 = uVar21 + 0x8d2a4c8a + ((uVar18 ^ uVar22) & uVar20 ^ uVar18) + iVar11;\n    uVar19 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar22;\n    uVar1 = (uVar20 - 0x5c6be) + (uVar18 ^ uVar22 ^ uVar19) + iVar6;\n    uVar21 = (uVar1 >> 0x1c | uVar1 * 0x10) + uVar19;\n    uVar1 = uVar18 + 0x8771f681 + (uVar22 ^ uVar19 ^ uVar21) + iVar7;\n    uVar20 = (uVar1 >> 0x15 | uVar1 * 0x800) + uVar21;\n    uVar1 = uVar22 + 0x6d9d6122 + (uVar20 ^ uVar19 ^ uVar21) + iVar10;\n    uVar18 = (uVar1 >> 0x10 | uVar1 * 0x10000) + uVar20;\n    uVar1 = uVar19 + 0xfde5380c + (uVar20 ^ uVar18 ^ uVar21) + iVar16;\n    uVar19 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar18;\n    uVar1 = uVar21 + 0xa4beea44 + (uVar20 ^ uVar18 ^ uVar19) + iVar2;\n    uVar21 = (uVar1 >> 0x1c | uVar1 * 0x10) + uVar19;\n    uVar1 = uVar20 + 0x4bdecfa9 + (uVar18 ^ uVar19 ^ uVar21) + iVar5;\n    uVar22 = (uVar1 >> 0x15 | uVar1 * 0x800) + uVar21;\n    uVar1 = uVar18 + 0xf6bb4b60 + (uVar22 ^ uVar19 ^ uVar21) + iVar15;\n    uVar20 = (uVar1 >> 0x10 | uVar1 * 0x10000) + uVar22;\n    uVar1 = uVar19 + 0xbebfbc70 + (uVar22 ^ uVar20 ^ uVar21) + iVar9;\n    uVar19 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar20;\n    uVar1 = uVar21 + 0x289b7ec6 + (uVar22 ^ uVar20 ^ uVar19) + iVar12;\n    uVar21 = (uVar1 >> 0x1c | uVar1 * 0x10) + uVar19;\n    uVar1 = uVar22 + 0xeaa127fa + (uVar20 ^ uVar19 ^ uVar21) + iVar13;\n    uVar18 = (uVar1 >> 0x15 | uVar1 * 0x800) + uVar21;\n    uVar1 = uVar20 + 0xd4ef3085 + (uVar18 ^ uVar19 ^ uVar21) + iVar4;\n    uVar20 = (uVar1 >> 0x10 | uVar1 * 0x10000) + uVar18;\n    uVar1 = uVar19 + 0x4881d05 + (uVar18 ^ uVar20 ^ uVar21) + iVar14;\n    uVar19 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar20;\n    uVar1 = uVar21 + 0xd9d4d039 + (uVar18 ^ uVar20 ^ uVar19) + iVar8;\n    uVar21 = (uVar1 >> 0x1c | uVar1 * 0x10) + uVar19;\n    uVar1 = uVar18 + 0xe6db99e5 + (uVar20 ^ uVar19 ^ uVar21) + iVar11;\n    uVar18 = (uVar1 >> 0x15 | uVar1 * 0x800) + uVar21;\n    uVar1 = uVar20 + 0x1fa27cf8 + (uVar18 ^ uVar19 ^ uVar21) + iVar17;\n    uVar22 = (uVar1 >> 0x10 | uVar1 * 0x10000) + uVar18;\n    uVar1 = uVar19 + 0xc4ac5665 + (uVar18 ^ uVar22 ^ uVar21) + iVar3;\n    uVar20 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar22;\n    uVar1 = uVar21 + 0xf4292244 + ((~uVar18 | uVar20) ^ uVar22) + iVar13;\n    uVar19 = (uVar1 >> 0x1a | uVar1 * 0x40) + uVar20;\n    uVar1 = uVar18 + 0x432aff97 + ((~uVar22 | uVar19) ^ uVar20) + iVar15;\n    uVar21 = (uVar1 >> 0x16 | uVar1 * 0x400) + uVar19;\n    uVar1 = uVar22 + 0xab9423a7 + ((~uVar20 | uVar21) ^ uVar19) + iVar16;\n    uVar18 = (uVar1 >> 0x11 | uVar1 * 0x8000) + uVar21;\n    uVar1 = uVar20 + 0xfc93a039 + ((~uVar19 | uVar18) ^ uVar21) + iVar6;\n    uVar22 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar18;\n    uVar1 = uVar19 + 0x655b59c3 + ((~uVar21 | uVar22) ^ uVar18) + iVar11;\n    uVar19 = (uVar1 >> 0x1a | uVar1 * 0x40) + uVar22;\n    uVar1 = uVar21 + 0x8f0ccc92 + ((~uVar18 | uVar19) ^ uVar22) + iVar4;\n    uVar21 = (uVar1 >> 0x16 | uVar1 * 0x400) + uVar19;\n    uVar1 = (uVar18 - 0x100b83) + ((~uVar22 | uVar21) ^ uVar19) + iVar9;\n    uVar20 = (uVar1 >> 0x11 | uVar1 * 0x8000) + uVar21;\n    uVar1 = uVar22 + 0x85845dd1 + ((~uVar19 | uVar20) ^ uVar21) + iVar2;\n    uVar22 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar20;\n    uVar1 = uVar19 + 0x6fa87e4f + ((~uVar21 | uVar22) ^ uVar20) + iVar7;\n    uVar19 = (uVar1 >> 0x1a | uVar1 * 0x40) + uVar22;\n    uVar1 = uVar21 + 0xfe2ce6e0 + ((~uVar20 | uVar19) ^ uVar22) + iVar17;\n    uVar21 = (uVar1 >> 0x16 | uVar1 * 0x400) + uVar19;\n    uVar1 = uVar20 + 0xa3014314 + ((~uVar22 | uVar21) ^ uVar19) + iVar14;\n    uVar18 = (uVar1 >> 0x11 | uVar1 * 0x8000) + uVar21;\n    uVar1 = uVar22 + 0x4e0811a1 + ((~uVar19 | uVar18) ^ uVar21) + iVar12;\n    uVar22 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar18;\n    uVar1 = uVar19 + 0xf7537e82 + ((~uVar21 | uVar22) ^ uVar18) + iVar5;\n    uVar19 = (uVar1 >> 0x1a | uVar1 * 0x40) + uVar22;\n    uVar1 = uVar21 + 0xbd3af235 + ((~uVar18 | uVar19) ^ uVar22) + iVar10;\n    uVar20 = (uVar1 >> 0x16 | uVar1 * 0x400) + uVar19;\n    uVar1 = uVar18 + 0x2ad7d2bb + ((~uVar22 | uVar20) ^ uVar19) + iVar3;\n    uVar21 = (uVar1 >> 0x11 | uVar1 * 0x8000) + uVar20;\n    uVar1 = uVar22 + 0xeb86d391 + ((~uVar19 | uVar21) ^ uVar20) + iVar8;\n    *(arg_8h + 0xc) = (uVar1 * 0x200000 | uVar1 >> 0xb) + *(arg_8h + 0xc) + uVar21;\n    *(arg_8h + 0x10) = *(arg_8h + 0x10) + uVar21;\n    *(arg_8h + 8) = *(arg_8h + 8) + uVar19;\n    *(arg_8h + 0x14) = *(arg_8h + 0x14) + uVar20;\n    return;\n}\n",
        "token_count": 4885
    },
    "0040b9c8": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t fcn.0040b9c8(void)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    \n    if (('/' < in_AL) && (in_AL < ':')) {\n        return in_AL + -0x30;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll_toupper)(in_AL);\n    return iVar1 + -0x37;\n}\n",
        "token_count": 88
    },
    "0040ba69": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nvoid fcn.0040ba69(char *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = 0;\n    cVar2 = *param_1;\n    while ((cVar2 != '%' && (cVar2 != '\\0'))) {\n        iVar1 = iVar1 + 1;\n        cVar2 = param_1[iVar1];\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "00401027": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401027(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_2);\n    param_1[1] = iVar1;\n    param_1[2] = iVar1 + 1;\n    uVar2 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(iVar1 + 1);\n    *param_1 = uVar2;\n    sub.MSVCRT.dll_strcpy(uVar2, unaff_retaddr);\n    return;\n}\n",
        "token_count": 146
    },
    "0040109b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040109b(int32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (param_1[2] <= param_2 && param_2 != param_1[2]) {\n        uVar1 = param_2 + 0x1fff & 0xffffe000;\n        param_1[2] = uVar1;\n        iVar2 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(uVar1);\n        if (*param_1 != 0) {\n            sub.MSVCRT.dll_memcpy(iVar2, *param_1, param_1[1] + 1);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*param_1);\n        }\n        *param_1 = iVar2;\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "004010e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004010e1(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    uint unaff_retaddr;\n    \n    param_3 = param_1[1] + param_3;\n    fcn.0040109b(param_3 + 1);\n    sub.MSVCRT.dll_memcpy(*param_1 + param_1[1], unaff_retaddr, param_2);\n    *(param_3 + *param_1) = 0;\n    param_1[1] = param_3;\n    return;\n}\n",
        "token_count": 131
    },
    "0040115a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040115a(int32_t *param_1)\n\n{\n    return param_1[1] + *param_1;\n}\n",
        "token_count": 37
    },
    "004045ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004045ee(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    *0x42404d = 1;\n    fcn.004043aa(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.00404453(arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 91
    },
    "004057de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004057de(int32_t *param_1)\n\n{\n    code *pcVar1;\n    \n    if (*param_1 != 0) {\n        fcn.004057de(*param_1);\n        pcVar1 = _sym.imp.MSVCRT.dll_free;\n        (*_sym.imp.MSVCRT.dll_free)(*(*param_1 + 4));\n        (*pcVar1)(*param_1);\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00405f47": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405f47(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t arg_24h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    arg_24h = 0;\n    if (0 < arg_14h) {\n        do {\n            var_8h = 0xffffffff;\n            iVar1 = fcn.00405a96(arg_8h, arg_ch, arg_10h, 0, &var_8h, 1, 1, arg_24h, &var_4h);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            arg_24h = arg_24h + 1;\n        } while (arg_24h < arg_14h);\n    }\n    return 0;\n}\n",
        "token_count": 215
    },
    "00406f1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "authenticate HMAC"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: dest\n\nvoid __cdecl\nfcn.00406f1b(uint arg_8h, uint s1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint dest;\n    uint var_16ch;\n    uint var_114h;\n    uint s;\n    uint var_8ch;\n    uint var_34h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401062();\n    *(unaff_EBP + -4) = 1;\n    iVar2 = fcn.00401156();\n    fcn.0040109b(iVar2 + 0x41);\n    uVar3 = fcn.0040d473();\n    uVar4 = fcn.0040d473();\n    fcn.00410e11(uVar4, uVar3);\n    fcn.00401160();\n    iVar2 = sub.MSVCRT.dll_strlen(0x423d30);\n    fcn.0040109b(iVar2 + 0x41);\n    pcVar5 = fcn.0040d473();\n    if (*pcVar5 == '\\\"') {\n        iVar6 = fcn.0040d473(0x22);\n        puVar7 = (*_sym.imp.MSVCRT.dll_strchr)(iVar6 + 1);\n        if (puVar7 != NULL) {\n            *puVar7 = 0;\n        }\n        iVar6 = fcn.0040d473();\n        uVar3 = fcn.0040d473(iVar6 + 1);\n        sub.MSVCRT.dll_strcpy(uVar3);\n    }\n    fcn.004010e1(0x423d30, iVar2);\n    uVar3 = 0x40;\n    for (; iVar2 % 0x40 != 0; iVar2 = iVar2 + 1) {\n        fcn.00401136(uVar3, 0);\n    }\n    if (0x40 < iVar2) {\n        fcn.0041125f(unaff_EBP + -0x16c);\n        uVar3 = fcn.0040d473();\n        fcn.00411c15(unaff_EBP + -0x16c, uVar3, iVar2);\n        fcn.00411cab(unaff_EBP + -0x16c, unaff_EBP + -0x34);\n        iVar2 = 0x10;\n        uVar3 = fcn.0040d473(unaff_EBP + -0x34, 0x10);\n        sub.MSVCRT.dll_memcpy(uVar3);\n    }\n    sub.MSVCRT.dll_memset(unaff_EBP + -0xd0, 0x36, 0x40);\n    sub.MSVCRT.dll_memset(unaff_EBP + -0x114, 0x5c, 0x40);\n    iVar6 = 0;\n    if (0 < iVar2) {\n        do {\n            iVar8 = fcn.0040d473();\n            puVar1 = unaff_EBP + -0xd0 + iVar6;\n            *puVar1 = *puVar1 ^ *(iVar8 + iVar6);\n            iVar8 = fcn.0040d473();\n            puVar1 = unaff_EBP + -0x114 + iVar6;\n            *puVar1 = *puVar1 ^ *(iVar8 + iVar6);\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < iVar2);\n    }\n    fcn.0041125f(unaff_EBP + -0x8c);\n    fcn.00411c15(unaff_EBP + -0x8c, unaff_EBP + -0xd0, 0x40);\n    uVar3 = fcn.00401156();\n    uVar4 = fcn.0040d473();\n    fcn.00411c15(unaff_EBP + -0x8c, uVar4, uVar3);\n    fcn.00411cab(unaff_EBP + -0x8c, unaff_EBP + -0x34);\n    fcn.0041125f(unaff_EBP + -0x8c);\n    fcn.00411c15(unaff_EBP + -0x8c, unaff_EBP + -0x114, 0x40);\n    fcn.00411c15(unaff_EBP + -0x8c, unaff_EBP + -0x34, 0x10);\n    fcn.00411cab(unaff_EBP + -0x8c, unaff_EBP + -0x34);\n    sub.MSVCRT.dll_strcpy(unaff_EBP + -0x96c, 0x41e070);\n    iVar2 = sub.MSVCRT.dll_strlen(unaff_EBP + -0x96c);\n    *(unaff_EBP + -0x96c + iVar2) = 0x20;\n    iVar2 = iVar2 + 1;\n    iVar6 = 0;\n    do {\n        (*_sym.imp.MSVCRT.dll_sprintf)(unaff_EBP + -0x96c + iVar2, \"%02x\", *(unaff_EBP + -0x34 + iVar6));\n        iVar2 = iVar2 + 2;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0x10);\n    fcn.0041103c(unaff_EBP + -0x96c, iVar2, *(unaff_EBP + 0xc), 0);\n    sub.MSVCRT.dll_strcat(*(unaff_EBP + 0xc), 0x413644);\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1451
    },
    "004098f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004098f7(void)\n\n{\n    uint unaff_ESI;\n    char *pcVar1;\n    char *pcVar2;\n    \n    fcn.00401292(\"BLAT PROFILE EDITOR\\n\", unaff_ESI);\n    fcn.00401292(\"To modify SMTP: blat -install SMTPHost Sender [Try [Port [Profile [Login name\\n\", unaff_ESI);\n    fcn.00401292(\"                     [Password]]]]]\\n\", unaff_ESI);\n    pcVar2 = \"            or: blat -installSMTP SMTPHost Sender [Try [Port [Profile\\n\";\n    fcn.00401292(\"            or: blat -installSMTP SMTPHost Sender [Try [Port [Profile\\n\", unaff_ESI);\n    pcVar1 = \"                     [Login name [Password]]]]]\\n\";\n    fcn.00401292(\"                     [Login name [Password]]]]]\\n\", pcVar2);\n    pcVar2 = \"To modify NNTP: blat -installNNTP NNTPHost Sender [Try [Port [Profile\\n\";\n    fcn.00401292(\"To modify NNTP: blat -installNNTP NNTPHost Sender [Try [Port [Profile\\n\", pcVar1);\n    pcVar1 = \"                     [Login name [Password]]]]]\\n\";\n    fcn.00401292(\"                     [Login name [Password]]]]]\\n\", pcVar2);\n    pcVar2 = \"To modify POP3: blat -installPOP3 POP3Host - - [Port [Profile\\n\";\n    fcn.00401292(\"To modify POP3: blat -installPOP3 POP3Host - - [Port [Profile\\n\", pcVar1);\n    pcVar1 = \"                     [Login name [Password]]]]\\n\";\n    fcn.00401292(\"                     [Login name [Password]]]]\\n\", pcVar2);\n    pcVar2 = \"To modify IMAP: blat -installIMAP IMAPHost - - [Port [Profile\\n\";\n    fcn.00401292(\"To modify IMAP: blat -installIMAP IMAPHost - - [Port [Profile\\n\", pcVar1);\n    pcVar1 = \"                     [Login name [Password]]]]\\n\";\n    fcn.00401292(\"                     [Login name [Password]]]]\\n\", pcVar2);\n    pcVar2 = \"To delete:      blat -profile -delete Profile\\n\";\n    fcn.00401292(\"To delete:      blat -profile -delete Profile\\n\", pcVar1);\n    pcVar1 = \"Profiles are listed as in the -install option:\\n\";\n    fcn.00401292(\"Profiles are listed as in the -install option:\\n\", pcVar2);\n    pcVar2 = \"Host Sender Try Port Profile login_name password\\n\";\n    fcn.00401292(\"Host Sender Try Port Profile login_name password\\n\", pcVar1);\n    fcn.00401292(0x4132a0, pcVar2);\n    return;\n}\n",
        "token_count": 651
    },
    "00409cb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409cb8(uint hKey, char *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_214h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t phkResult;\n    int32_t var_4h;\n    \n    phkResult = 0;\n    if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n        iVar2 = sub.MSVCRT.dll_strlen(\"SOFTWARE\\\\Public Domain\\\\Blat\");\n        uVar3 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(iVar2 + 1);\n        sub.MSVCRT.dll_strcpy(uVar3, \"SOFTWARE\\\\Public Domain\\\\Blat\");\n    }\n    else {\n        var_10h = sub.MSVCRT.dll_strlen(\"SOFTWARE\\\\Public Domain\\\\Blat\");\n        iVar2 = sub.MSVCRT.dll_strlen(arg_ch);\n        uVar3 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(var_10h + 2 + iVar2);\n        (*_sym.imp.MSVCRT.dll_sprintf)(uVar3, \"%s\\\\%s\", \"SOFTWARE\\\\Public Domain\\\\Blat\", arg_ch);\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, uVar3, 0, 0x20019, &phkResult);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uVar3);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExA;\n    if (iVar2 == 0) {\n        var_4h = 0x100;\n        (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(phkResult, \"Sender\", 0, &var_ch, 0x41cdd8, &var_4h);\n        var_4h = 0x100;\n        iVar2 = (*pcVar1)(phkResult, 0x417668, 0, &var_ch, 0x41d528, &var_4h);\n        if (iVar2 != 0) {\n            sub.MSVCRT.dll_strcpy(0x41d528, 0x413804);\n        }\n        var_4h = 0x203;\n        iVar2 = (*pcVar1)(phkResult, \"Login\", 0, &var_ch, &var_214h, &var_4h);\n        if ((var_4h == 0) || (iVar2 != 0)) {\n            *0x41e070 = 0;\n        }\n        else {\n            fcn.00410e11(&var_214h, 0x41e070);\n        }\n        var_4h = 0x203;\n        iVar2 = (*pcVar1)(phkResult, 0x41765c, 0, &var_ch, &var_214h, &var_4h);\n        if ((var_4h == 0) || (iVar2 != 0)) {\n            *0x423d30 = 0;\n        }\n        else {\n            fcn.00410e11(&var_214h, 0x423d30);\n        }\n        var_4h = 0x100;\n        iVar2 = (*pcVar1)(phkResult, \"SMTP server\", 0, &var_ch, 0x41d630, &var_4h);\n        if (iVar2 == 0) {\n            var_4h = 0x100;\n            iVar2 = (*pcVar1)(phkResult, \"SMTP Port\", 0, &var_ch, 0x41eab0, &var_4h);\n            if (iVar2 != 0) {\n                sub.MSVCRT.dll_strcpy(0x41eab0, *0x41caf4);\n            }\n        }\n        else {\n            *0x41d630 = '\\0';\n            *0x41eab0 = 0;\n        }\n        var_4h = 0x100;\n        iVar2 = (*pcVar1)(phkResult, \"NNTP server\", 0, &var_ch, 0x41d848, &var_4h);\n        if (iVar2 == 0) {\n            var_4h = 0x100;\n            iVar2 = (*pcVar1)(phkResult, \"NNTP Port\", 0, &var_ch, 0x41e288, &var_4h);\n            if (iVar2 != 0) {\n                sub.MSVCRT.dll_strcpy(0x41e288, *0x41caf0);\n            }\n        }\n        else {\n            *0x41d848 = '\\0';\n            *0x41e288 = 0;\n        }\n        var_4h = 0x100;\n        iVar2 = (*pcVar1)(phkResult, \"POP3 server\", 0, &var_ch, 0x41d420, &var_4h);\n        if (iVar2 == 0) {\n            var_4h = 0x100;\n            iVar2 = (*pcVar1)(phkResult, \"POP3 Port\", 0, &var_ch, 0x41e498, &var_4h);\n            if (iVar2 != 0) {\n                sub.MSVCRT.dll_strcpy(0x41e498, *0x41caf8);\n            }\n            var_4h = 0x203;\n            iVar2 = (*pcVar1)(phkResult, \"POP3 Login\", 0, &var_ch, &var_214h, &var_4h);\n            if ((var_4h == 0) || (iVar2 != 0)) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x41e9a8, 0x41e070);\n            }\n            else {\n                fcn.00410e11(&var_214h, 0x41e9a8);\n            }\n            var_4h = 0x203;\n            iVar2 = (*pcVar1)(phkResult, \"POP3 Pwd\", 0, &var_ch, &var_214h, &var_4h);\n            if ((var_4h == 0) || (iVar2 != 0)) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x423820, 0x423d30);\n            }\n            else {\n                fcn.00410e11(&var_214h, 0x423820);\n            }\n        }\n        else {\n            *0x41d420 = '\\0';\n            *0x41e498 = 0;\n        }\n        var_4h = 0x100;\n        iVar2 = (*pcVar1)(phkResult, \"IMAP server\", 0, &var_ch, 0x41f3c0, &var_4h);\n        if (iVar2 == 0) {\n            var_4h = 0x100;\n            iVar2 = (*pcVar1)(phkResult, \"IMAP Port\", 0, &var_ch, 0x424050, &var_4h);\n            if (iVar2 != 0) {\n                sub.MSVCRT.dll_strcpy(0x424050, *0x41cafc);\n            }\n            var_4h = 0x203;\n            iVar2 = (*pcVar1)(phkResult, \"IMAP Login\", 0, &var_ch, &var_214h, &var_4h);\n            if ((var_4h == 0) || (iVar2 != 0)) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x423718, 0x41e070);\n            }\n            else {\n                fcn.00410e11(&var_214h, 0x423718);\n            }\n            var_4h = 0x203;\n            iVar2 = (*pcVar1)(phkResult, \"IMAP Pwd\", 0, &var_ch, &var_214h, &var_4h);\n            if ((var_4h == 0) || (iVar2 != 0)) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x41e390, 0x423d30);\n            }\n            else {\n                fcn.00410e11(&var_214h, 0x41e390);\n            }\n        }\n        else {\n            *0x41f3c0 = '\\0';\n            *0x424050 = 0;\n        }\n        if (phkResult != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        }\n        uVar3 = 0xc;\n        if (*0x41cdd8 != '\\0') {\n            if (*0x41d630 != '\\0') {\n                uVar3 = 0;\n            }\n            if (*0x41d420 != '\\0') {\n                uVar3 = 0;\n            }\n            if (*0x41f3c0 != '\\0') {\n                uVar3 = 0;\n            }\n            if (*0x41d848 != '\\0') {\n                uVar3 = 0;\n            }\n        }\n    }\n    else if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n        uVar3 = 0xc;\n    }\n    else {\n        uVar3 = fcn.00409cb8(hKey, NULL);\n    }\n    return uVar3;\n}\n",
        "token_count": 2110
    },
    "0040a371": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a371(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg;\n    uint arg_00;\n    uint hKey;\n    \n    hKey = 0;\n    arg_00 = 0x80000001;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"SOFTWARE\\\\Public Domain\\\\Blat\", 0, 0x20019, &hKey);\n    if (iVar1 == 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        fcn.00401292(\"Profile(s) for current user --\\n\", arg_00);\n        arg = 0x80000001;\n        fcn.0040a290(0x80000001, arg_8h);\n        fcn.00401292(0x4132a0, arg);\n    }\n    fcn.00401292(\"Profile(s) for all users of this computer --\\n\", arg_00);\n    fcn.0040a290(0x80000002, arg_8h);\n    return;\n}\n",
        "token_count": 254
    },
    "0040bbe3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040bbe3(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] <= param_2 && param_2 != param_1[2]) {\n        param_1[2] = param_2;\n        iVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(param_2);\n        if (*param_1 != 0) {\n            sub.MSVCRT.dll_memcpy(iVar1, *param_1, param_1[1] + 1);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*param_1);\n        }\n        *param_1 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "0040bc6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040bc6a(uint arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    fcn.0040bc1f(\"CONTENT_LENGTH\", unaff_EBP + -0x1c);\n    uVar1 = fcn.0040d473();\n    uVar2 = (*_sym.imp.MSVCRT.dll_atol)(uVar1);\n    fcn.0040106f();\n    fcn.0040bbe3(uVar2 + 1);\n    do {\n        iVar3 = fcn.00401156();\n        iVar6 = 0x1000;\n        if (uVar2 - iVar3 < 0x1000) {\n            iVar6 = fcn.00401156();\n            iVar6 = uVar2 - iVar6;\n        }\n        *(unaff_EBP + -0x10) = iVar6;\n        if (iVar6 != 0) {\n            uVar1 = fcn.0040115a(iVar6, unaff_EBP + -0x10, 0);\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6, uVar1);\n            iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(uVar1);\n            if (iVar3 == 0) {\n                *(unaff_EBP + -0x10) = 0;\n            }\n        }\n        fcn.00401156();\n        fcn.00401170();\n        if (*(unaff_EBP + -0x10) != iVar6) break;\n        uVar4 = fcn.00401156();\n    } while (uVar4 < uVar2);\n    puVar5 = fcn.0040115a();\n    *(unaff_EBP + -4) = 0xffffffff;\n    *puVar5 = 0;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 572
    },
    "0040c9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040c9f0(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    param_1[1] = param_3;\n    param_1[2] = param_3 + 1;\n    iVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(param_3 + 1);\n    *param_1 = iVar1;\n    sub.MSVCRT.dll_memcpy(iVar1, param_2, param_3);\n    *(*param_1 + param_1[1]) = 0;\n    return;\n}\n",
        "token_count": 144
    },
    "0040da28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_68h\n\nint32_t fcn.0040da28(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_68h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    iVar1 = *(extraout_ECX + 0x800);\n    *(unaff_EBP + -0x10) = &stack0xffffff98;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    if (iVar1 == 0) {\n        if ((*(extraout_ECX + 0x1005) == 0) && (*(extraout_ECX + 0x1009) == 0)) {\n            sub.MSVCRT.dll_strcpy(extraout_ECX + 0x400, 0x41632f);\n            *(extraout_ECX + 0x800) = 1;\n        }\n        else {\n            *(unaff_EBP + -4) = 0;\n            fcn.0040d476();\n            uVar2 = *(extraout_ECX + 0x1009);\n            arg_8h = *(extraout_ECX + 0x1005);\n            *(unaff_EBP + -4) = 1;\n            uVar2 = fcn.0040ca9f(arg_8h, uVar2, 0);\n            (*_sym.imp.MSVCRT.dll_strncpy)(extraout_ECX + 0x400, uVar2, 0x3ff);\n            *(extraout_ECX + 0x7ff) = 0;\n            *(unaff_EBP + -4) = 0;\n            fcn.0040ca9a();\n            *(extraout_ECX + 0x800) = 1;\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX + 0x400;\n}\n",
        "token_count": 487
    },
    "0040db5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040db5a(uint param_1, uint param_2, uint param_3)\n\n{\n    uint unaff_retaddr;\n    char *format;\n    \n    // switch table (17 cases) at 0x40dc0d\n    switch(param_2) {\n    case 0xfa1:\n        format = \"Error: Malloc failed (possibly out of memory).\\n\";\n        break;\n    case 0xfa2:\n        format = \"Error: Error sending data.\\n\";\n        break;\n    case 0xfa3:\n        format = \"Error: Error initializing gensock.dll.\\n\";\n        break;\n    case 0xfa4:\n        format = \"Error: Version not supported.\\n\";\n        break;\n    case 0xfa5:\n        format = \"Error: The winsock version specified by gensock is not supported by this winsock.dll.\\n\";\n        break;\n    case 0xfa6:\n        format = \"Error: Network not ready.\\n\";\n        break;\n    case 0xfa7:\n        fcn.00401292(\"Error: Can\\'t resolve hostname (%s).\\n\", param_3);\n        return;\n    case 0xfa8:\n        format = \"Error: Can\\'t create a socket (too many simultaneous links?)\\n\";\n        break;\n    case 0xfa9:\n        format = \"Error: Error reading socket.\\n\";\n        break;\n    case 0xfaa:\n        format = \"Error: Not a socket.\\n\";\n        break;\n    case 0xfab:\n        format = \"Error: Busy.\\n\";\n        break;\n    case 0xfac:\n        format = \"Error: Error closing socket.\\n\";\n        break;\n    case 0xfad:\n        format = \"Error: Wait a bit (possible timeout).\\n\";\n        break;\n    case 0xfae:\n        format = \"Error: Can\\'t resolve service.\\n\";\n        break;\n    case 0xfaf:\n        format = \"Error: Can\\'t connect to server (timed out if winsock.dll error 10060)\\n\";\n        break;\n    case 0xfb0:\n        format = \"Error: Connection to server was dropped.\\n\";\n        break;\n    case 0xfb1:\n        format = \"Error: Server refused connection.\\n\";\n        break;\n    default:\n        fcn.00401292(\"error %d in function \\'%s\\'\\n\", param_2);\n        return;\n    }\n    fcn.00401292(format, unaff_retaddr);\n    return;\n}\n",
        "token_count": 548
    },
    "0040dc51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040dc51(uint s, char *arg_ch, char *arg_10h, char *arg_14h)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *pcVar4;\n    \n    *0x425290 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(s, 0x3a);\n    if (puVar1 != NULL) {\n        *puVar1 = 0;\n        sub.MSVCRT.dll_strcpy(arg_ch, puVar1 + 1);\n    }\n    if (*arg_ch != '\\0') {\n        arg_14h = arg_ch;\n    }\n    iVar2 = fcn.00410d60(s, arg_14h, 0x425298);\n    if (iVar2 == 0) {\ncode_r0x0040dcce:\n        if (*0x424e90 == '\\0') {\n            iVar2 = fcn.0040ffe6(0x424e90, 0x400);\n            if (iVar2 != 0) {\n                pcVar4 = \"gensock_gethostname\";\n                goto code_r0x0040dcf4;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        if (iVar2 == 0xfae) {\n            if (*arg_ch == '\\0') {\n                arg_ch = arg_10h;\n            }\n            iVar2 = fcn.00410d60(s, arg_ch, 0x425298);\n            if (iVar2 == 0) goto code_r0x0040dcce;\n        }\n        pcVar4 = \"gensock_connect\";\ncode_r0x0040dcf4:\n        fcn.0040db5a(pcVar4, iVar2, s);\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 431
    },
    "0040dd08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040dd08(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x425298 != 0) {\n        iVar1 = fcn.00410d23(*0x425298);\n        *0x425298 = 0;\n        if (iVar1 != 0) {\n            fcn.0040db5a(\"gensock_close\", iVar1, 0x41632f);\n            return 0xffffffff;\n        }\n        if (*0x425294 != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(*0x425294);\n            *0x425294 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 150
    },
    "0040deb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040deb4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_4h = 0;\n    iVar2 = sub.MSVCRT.dll_strlen(0x41d528);\n    if (0 < iVar2) {\n        do {\n            cVar1 = (*_sym.imp.MSVCRT.dll_toupper)(*(iVar3 + 0x41d528));\n            *(iVar3 + 0x41d528) = cVar1;\n            iVar3 = iVar3 + 1;\n            iVar2 = sub.MSVCRT.dll_strlen(0x41d528);\n        } while (iVar3 < iVar2);\n    }\n    iVar2 = sub.MSVCRT.dll_strcmp(0x41d528, \"ONCE\");\n    if (iVar2 == 0) {\n        var_4h = 1;\n    }\n    iVar2 = sub.MSVCRT.dll_strcmp(0x41d528, \"TWICE\");\n    if (iVar2 == 0) {\n        var_4h = 2;\n    }\n    iVar2 = sub.MSVCRT.dll_strcmp(0x41d528, \"THRICE\");\n    if (iVar2 == 0) {\n        var_4h = 3;\n    }\n    iVar2 = sub.MSVCRT.dll_strcmp(0x41d528, \"INFINITE\");\n    if (iVar2 == 0) {\n        var_4h = -1;\n    }\n    iVar2 = sub.MSVCRT.dll_strcmp(0x41d528, 0x41903c);\n    if (iVar2 == 0) {\n        var_4h = -1;\n    }\n    if (var_4h == 0) {\n        iVar2 = (*_sym.imp.MSVCRT.dll_sscanf)(0x41d528, 0x419038, &var_4h);\n        if (iVar2 == 0) {\n            var_4h = 1;\n        }\n        if (var_4h == 0) {\n            return 1;\n        }\n    }\n    if (var_4h < -1) {\n        return 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 508
    },
    "0040ff51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ff51(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.WSOCK32.dll_closesocket(*param_1);\n    return (-(iVar1 != -1) & 0xfffff054) + 0xfac;\n}\n",
        "token_count": 70
    },
    "0040ffe6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040ffe6(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.WSOCK32.dll_gethostname(param_1, param_2);\n    if (iVar1 != 0) {\n        return iVar1 + -5000;\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "00410000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.00410000(void)\n\n{\n    uint in_EAX;\n    \n    // switch table (102 cases) at 0x410142\n    switch(in_EAX) {\n    case 10000:\n        return \"WSABASEERR\";\n    default:\n        return 0x419470;\n    case 0x2714:\n        return \"WSAEINTR\";\n    case 0x2719:\n        return \"WSAEBADF\";\n    case 0x271d:\n        return \"WSAEACCES\";\n    case 0x271e:\n        return \"WSAEFAULT\";\n    case 0x2726:\n        return \"WSAEINVAL\";\n    case 0x2728:\n        return \"WSAEMFILE\";\n    case 0x2733:\n        return \"WSAEWOULDBLOCK\";\n    case 0x2734:\n        return \"WSAEINPROGRESS\";\n    case 0x2735:\n        return \"WSAEALREADY\";\n    case 0x2736:\n        return \"WSAENOTSOCK\";\n    case 0x2737:\n        return \"WSAEDESTADDRREQ\";\n    case 0x2738:\n        return \"WSAEMSGSIZE\";\n    case 0x2739:\n        return \"WSAEPROTOTYPE\";\n    case 0x273a:\n        return \"WSAENOPROTOOPT\";\n    case 0x273b:\n        return \"WSAEPROTONOSUPPORT\";\n    case 0x273c:\n        return \"WSAESOCKTNOSUPPORT\";\n    case 0x273d:\n        return \"WSAEOPNOTSUPP\";\n    case 0x273e:\n        return \"WSAEPFNOSUPPORT\";\n    case 0x273f:\n        return \"WSAEAFNOSUPPORT\";\n    case 0x2740:\n        return \"WSAEADDRINUSE\";\n    case 0x2741:\n        return \"WSAEADDRNOTAVAIL\";\n    case 0x2742:\n        return \"WSAENETDOWN\";\n    case 0x2743:\n        return \"WSAENETUNREACH\";\n    case 0x2744:\n        return \"WSAENETRESET\";\n    case 0x2745:\n        return \"WSAECONNABORTED\";\n    case 0x2746:\n        return \"WSAECONNRESET\";\n    case 0x2747:\n        return \"WSAENOBUFS\";\n    case 0x2748:\n        return \"WSAEISCONN\";\n    case 0x2749:\n        return \"WSAENOTCONN\";\n    case 0x274a:\n        return \"WSAESHUTDOWN\";\n    case 0x274b:\n        return \"WSAETOOMANYREFS\";\n    case 0x274c:\n        return \"WSAETIMEDOUT\";\n    case 0x274d:\n        return \"WSAECONNREFUSED\";\n    case 0x274e:\n        return \"WSAELOOP\";\n    case 0x274f:\n        return \"WSAENAMETOOLONG\";\n    case 0x2750:\n        return \"WSAEHOSTDOWN\";\n    case 0x2751:\n        return \"WSAEHOSTUNREACH\";\n    case 0x2752:\n        return \"WSAENOTEMPTY\";\n    case 0x2753:\n        return \"WSAEPROCLIM\";\n    case 0x2754:\n        return \"WSAEUSERS\";\n    case 0x2755:\n        return \"WSAEDQUOT\";\n    case 0x2756:\n        return \"WSAESTALE\";\n    case 0x2757:\n        return \"WSAEREMOTE\";\n    case 0x276b:\n        return \"WSASYSNOTREADY\";\n    case 0x276c:\n        return \"WSAVERNOTSUPPORTED\";\n    case 0x276d:\n        return \"WSANOTINITIALISED\";\n    case 0x2775:\n        return \"WSAEDISCON\";\n    }\n}\n",
        "token_count": 869
    },
    "00410b5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00410b5e(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    while( true ) {\n        if (param_3 == 0) {\n            return 0;\n        }\n        iVar2 = *(param_1 + 0x10);\n        if (iVar2 + param_3 < *(param_1 + 0x20)) break;\n        iVar1 = *(param_1 + 0x20) - iVar2;\n        uVar3 = param_2;\n        sub.MSVCRT.dll_memcpy(*(param_1 + 8) + iVar2, param_2, iVar1);\n        iVar2 = fcn.00410768(uVar3, *(param_1 + 0x20), *(param_1 + 8));\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        *(param_1 + 0x10) = 0;\n        param_3 = param_3 - iVar1;\n    }\n    sub.MSVCRT.dll_memcpy(*(param_1 + 8) + *(param_1 + 0x10), param_2, param_3);\n    *(param_1 + 0x10) = *(param_1 + 0x10) + param_3;\n    return 0;\n}\n",
        "token_count": 316
    },
    "0041103c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0041103c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401062();\n    iVar1 = *(unaff_EBP + 0xc);\n    puVar2 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 1;\n    *puVar2 = 0;\n    if (iVar1 != 0) {\n        fcn.004010e1(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n        fcn.00410e90(unaff_EBP + -0x24, unaff_EBP + -0x18, *(unaff_EBP + 0x14), 1);\n        uVar3 = fcn.0040d473();\n        sub.MSVCRT.dll_strcpy(puVar2, uVar3);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00401054();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 401
    },
    "00409993": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409993(uint hKey, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lpSubKey_00;\n    uint var_14h;\n    uint var_ch;\n    uint phkResult;\n    int32_t dwIndex;\n    \n    phkResult = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, lpSubKey, 0, 0xf003f, &phkResult);\n    dwIndex = 0;\n    if (iVar1 == 0) {\n        while( true ) {\n            var_ch = 0x101;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExA)(phkResult, dwIndex, 0x424578, &var_ch, 0, 0, 0, &var_14h);\n            dwIndex = dwIndex + 1;\n            if (iVar1 == 0x103) break;\n            if (iVar1 != 0) goto code_r0x00409a57;\n            iVar1 = sub.MSVCRT.dll_strlen(lpSubKey);\n            iVar2 = sub.MSVCRT.dll_strlen(0x424578);\n            lpSubKey_00 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(iVar1 + 2 + iVar2);\n            (*_sym.imp.MSVCRT.dll_sprintf)(lpSubKey_00, \"%s\\\\%s\", lpSubKey, 0x424578);\n            iVar1 = fcn.00409993(hKey, lpSubKey_00);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(lpSubKey_00);\n            if (iVar1 != 0) goto code_r0x00409a57;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(phkResult, 0x424578);\n            if (iVar1 != 0) {\n                if (*0x423710 == '\\0') {\n                    (*_sym.imp.MSVCRT.dll_printf)(\"Error in deleting profile %s in the registry\\n\", lpSubKey);\n                }\n                return 0xb;\n            }\n            dwIndex = dwIndex + -1;\n        }\n        iVar1 = 0;\n    }\ncode_r0x00409a57:\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    return iVar1;\n}\n",
        "token_count": 539
    },
    "0040fb71": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040fb71(uint *param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[1] = 0;\n    uVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0xfaf0);\n    param_1[1] = uVar1;\n    uVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0xfaf0);\n    param_1[8] = 0xfaf0;\n    param_1[2] = uVar1;\n    param_1[7] = 0;\n    return param_1;\n}\n",
        "token_count": 194
    },
    "0041125f": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data with MD5"
        ],
        "decompiled_code": "\nvoid fcn.0041125f(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0x67452301;\n    param_1[3] = 0xefcdab89;\n    param_1[4] = 0x98badcfe;\n    param_1[5] = 0x10325476;\n    return;\n}\n",
        "token_count": 101
    },
    "0040a290": {
        "rules": [
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a290(uint hKey, uint s1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg = hKey;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, \"SOFTWARE\\\\Public Domain\\\\Blat\", 0, 0x20019, &var_4h);\n    if (iVar1 == 0) {\n        *0x423710 = 0;\n        *0x424578 = 0;\n        iVar1 = sub.MSVCRT.dll_strcmp(s1, \"<default>\");\n        if ((iVar1 == 0) || (iVar1 = sub.MSVCRT.dll_strcmp(s1, \"<all>\"),  iVar1 == 0)) {\n            fcn.0040a16f(hKey, 0x41632f);\n        }\n        iVar1 = 0;\n        while( true ) {\n            var_8h = 0x101;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExA)(var_4h, iVar1, 0x424578, &var_8h, 0, 0, 0, &var_10h);\n            iVar1 = iVar1 + 1;\n            if (iVar2 != 0) break;\n            iVar2 = sub.MSVCRT.dll_strcmp(s1, 0x424578);\n            if ((iVar2 == 0) || (iVar2 = sub.MSVCRT.dll_strcmp(s1, \"<all>\"),  iVar2 == 0)) {\n                fcn.0040a16f(hKey, 0x424578);\n            }\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n        return;\n    }\n    fcn.00401292(\"Failed to open registry key for Blat using default.\\n\", arg);\n    return;\n}\n",
        "token_count": 453
    },
    "00401000": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00401000(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    // [00] -r-x section size 73728 named .text\n    for (; cVar1 = *param_1,  cVar1 != '\\0'; param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1)) {\n        if ((cVar1 == ':') || (cVar1 == '\\\\')) {\n            pcVar2 = param_1 + 1;\n        }\n    }\n    return pcVar2;\n}\n",
        "token_count": 137
    },
    "0040151a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040151a(uint arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char cVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    pcVar2 = fcn.0040d473();\n    if (pcVar2 != NULL) {\n        cVar1 = *pcVar2;\n        cVar3 = '\\0';\n        if (cVar1 != '\\0') {\n            do {\n                if ((cVar1 != ' ') || ((cVar3 != '\\0' && (cVar3 != ' ')))) {\n                    *(unaff_EBP + -0x10) = cVar1;\n                    fcn.00401136();\n                    cVar3 = cVar1;\n                }\n                pcVar2 = pcVar2 + 1;\n                cVar1 = *pcVar2;\n            } while (cVar1 != '\\0');\n            if (cVar3 == ' ') {\n                fcn.0040117f();\n            }\n        }\n        fcn.0040106f();\n        fcn.00401145(unaff_EBP + -0x1c);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 377
    },
    "0040611b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040611b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    while( true ) {\n        iVar1 = fcn.0040dd54(*0x425298, \"POST\\r\\n\");\n        if (iVar1 != 0) {\n            return -1;\n        }\n        iVar1 = fcn.0040df94(0, &var_4h);\n        if (iVar1 != 0x1e0) break;\n        iVar1 = fcn.00405f8b(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    if (iVar1 != 0x154) {\n        fcn.0040e96e(\"NNTP server error\");\n        return -1;\n    }\n    return 0;\n}\n",
        "token_count": 198
    },
    "00406f13": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00406f13(void)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    char *pcVar8;\n    char cVar9;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint uVar10;\n    uint *in_FS_OFFSET;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    fcn.00401062();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    if ((*(unaff_EBP + 8) != NULL) && (**(unaff_EBP + 8) == '\\0')) {\n        *(unaff_EBP + 8) = 0;\n    }\n    iVar5 = fcn.0040deb4();\n    *(unaff_EBP + -0x20) = iVar5;\n    *(unaff_EBP + -0x10) = 0;\n    pcVar3 = _sym.imp.MSVCRT.dll_sprintf;\n    if (0 < iVar5) {\n        *(unaff_EBP + -0x14) = iVar5;\n        iVar5 = extraout_ECX;\n        do {\n            uVar4 = *0x423710;\n            if (*(unaff_EBP + -0x10) != 0) {\n                if (*0x42434c != '\\0') {\n                    *0x423710 = 0;\n                    fcn.00401292(\"superDebug: ::say_hello() failed to connect, retry count remaining is %u\\n\", \n                                 *(unaff_EBP + -0x14));\n                }\n                *0x423710 = uVar4;\n                (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n            }\n            if (iVar5 == 0) {\n                iVar6 = fcn.0040dc51(0x41d630, 0x41eab0, *0x41caf4, \"smtp\");\n                *(unaff_EBP + -0x18) = iVar6;\n                if (iVar6 == 0) {\n                    iVar6 = fcn.0040df94(0, unaff_EBP + -0x1c);\n                    if (iVar6 == 0xdc) goto code_r0x00406b75;\n                    fcn.0040dd08();\n                }\n            }\n            else {\ncode_r0x00406b75:\n                iVar5 = *(unaff_EBP + 8);\n                if (iVar5 == 0) {\n                    iVar5 = 0x424e90;\n                }\n                (*pcVar3)(unaff_EBP + -0x82c, \"EHLO %s\", iVar5);\n                pcVar2 = _sym.imp.MSVCRT.dll_strrchr;\n                iVar5 = (*_sym.imp.MSVCRT.dll_strrchr)(0x41cdd8, 0x40);\n                if (iVar5 != 0) {\n                    sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, 0x416ed0);\n                    sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, iVar5 + 1);\n                    puVar7 = (*_sym.imp.MSVCRT.dll_strchr)(unaff_EBP + -0x82c, 0x3e);\n                    if (puVar7 != NULL) {\n                        *puVar7 = 0;\n                    }\n                }\n                sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, 0x413644);\n                iVar5 = fcn.0040dd54(*0x425298, unaff_EBP + -0x82c);\n                *(unaff_EBP + -0x18) = iVar5;\n                if (iVar5 == 0) {\n                    iVar5 = fcn.0040df94(unaff_EBP + -0x2c, unaff_EBP + -0x1c);\n                    if (iVar5 == 0xfa) {\n                        for (pcVar8 = fcn.0040d473(); *pcVar8 != '\\0'; pcVar8 = pcVar8 + iVar5 + 1) {\n                            (*_sym.imp.MSVCRT.dll__strlwr)(pcVar8);\n                            if ((pcVar8[3] == '-') || (pcVar8[3] == ' ')) {\n                                pcVar1 = pcVar8 + 4;\n                                iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"size \", 5);\n                                if (iVar5 == 0) {\n                                    iVar5 = (*_sym.imp.MSVCRT.dll_atol)(pcVar8 + 9);\n                                    if (0 < iVar5) {\n                                        *0x424514 = (iVar5 / 10) * 7;\n                                    }\n                                }\n                                else {\n                                    iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, 0x416ebc, 3);\n                                    if (iVar5 == 0) {\n                                        *0x41ebb2 = 1;\n                                    }\n                                    else {\n                                        iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"8bitmime\", 8);\n                                        if (iVar5 == 0) {\n                                            *0x41f5cc = 1;\n                                        }\n                                        else {\n                                            iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"binarymime\", 10);\n                                            if (iVar5 == 0) {\n                                                *0x41d949 = 1;\n                                            }\n                                            else {\n                                                iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"enhancedstatuscodes\", 0x13);\n                                                if (iVar5 == 0) {\n                                                    *0x42451c = 1;\n                                                }\n                                                else {\n                                                    iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"auth\", 4);\n                                                    if ((iVar5 == 0) && ((pcVar8[8] == ' ' || (pcVar8[8] == '=')))) {\n                                                        iVar5 = 9;\n                                                        do {\n                                                            pcVar1 = pcVar8 + iVar5;\n                                                            cVar9 = *pcVar1;\n                                                            iVar6 = iVar5;\n                                                            while (((*(unaff_EBP + 8) = iVar6,  cVar9 != '\\0' &&\n                                                                    (cVar9 != ',')) && (cVar9 != ' '))) {\n                                                                iVar6 = iVar6 + 1;\n                                                                cVar9 = pcVar8[iVar6];\n                                                            }\n                                                            iVar6 = iVar6 - iVar5;\n                                                            if (iVar6 == 5) {\n                                                                iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"plain\", 5);\n                                                                if (iVar5 == 0) {\n                                                                    *0x42451a = 1;\n                                                                }\n                                                                iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"login\", 5);\n                                                                if (iVar5 == 0) {\n                                                                    *0x42451b = 1;\n                                                                }\n                                                            }\n                                                            if ((iVar6 == 6) &&\n                                                               (iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"gssapi\", 6), \n                                                               iVar5 == 0)) {\n                                                                *0x42451d = 1;\n                                                            }\n                                                            if ((iVar6 == 8) &&\n                                                               (iVar5 = sub.MSVCRT.dll_memcmp(pcVar1, \"cram-md5\", 8), \n                                                               iVar5 == 0)) {\n                                                                *0x424519 = 1;\n                                                            }\n                                                            for (iVar5 = *(unaff_EBP + 8);\n                                                                (pcVar8[iVar5] == ',' || (pcVar8[iVar5] == ' '));\n                                                                iVar5 = iVar5 + 1) {\n                                                            }\n                                                        } while (pcVar8[iVar5] != '\\0');\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            iVar5 = sub.MSVCRT.dll_strlen(pcVar8);\n                        }\n                        break;\n                    }\n                    iVar5 = *(unaff_EBP + 8);\n                    if (iVar5 == 0) {\n                        iVar5 = 0x424e90;\n                    }\n                    (*pcVar3)(unaff_EBP + -0x82c, \"HELO %s\", iVar5);\n                    iVar5 = (*pcVar2)(0x41cdd8, 0x40);\n                    if (iVar5 != 0) {\n                        sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, 0x416ed0);\n                        sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, iVar5 + 1);\n                        puVar7 = (*_sym.imp.MSVCRT.dll_strchr)(unaff_EBP + -0x82c, 0x3e);\n                        if (puVar7 != NULL) {\n                            *puVar7 = 0;\n                        }\n                    }\n                    sub.MSVCRT.dll_strcat(unaff_EBP + -0x82c, 0x413644);\n                    iVar5 = fcn.0040dd54(*0x425298, unaff_EBP + -0x82c);\n                    if ((iVar5 == 0) && (iVar5 = fcn.0040df94(0, unaff_EBP + -0x1c),  iVar5 == 0xfa)) {\n                        *0x42451b = 1;\n                        *0x42451d = 1;\n                        break;\n                    }\n                }\n                fcn.0040dd08();\n                iVar5 = 0;\n            }\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + -1;\n        } while (*(unaff_EBP + -0x10) < *(unaff_EBP + -0x20));\n    }\n    if (*(unaff_EBP + -0x10) == *(unaff_EBP + -0x20)) {\n        if (*(unaff_EBP + -0x18) == 0) {\n            fcn.0040e96e(\"SMTP server error\");\n        }\n        uVar10 = 0xffffffff;\n    }\n    else {\n        uVar10 = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401054();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar10;\n}\n",
        "token_count": 2349
    },
    "0040a649": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040a649(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        if (*(param_1 + 0x14) == \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"[iVar1]) break;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x3e);\n    *(param_1 + 0x14) = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"[(iVar1 + 1) % 0x3e];\n    return;\n}\n",
        "token_count": 122
    },
    "0040a673": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040a673(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        if (*(param_1 + 0x14) == \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"[iVar1]) break;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x3e);\n    iVar1 = iVar1 + -1;\n    if (iVar1 < 0) {\n        iVar1 = 0x3d;\n    }\n    *(param_1 + 0x14) = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"[iVar1];\n    return;\n}\n",
        "token_count": 143
    },
    "0040fbc5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040fbc5(char *param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        if (*param_1 == '\\0') {\n            return 1;\n        }\n        iVar1 = (*_sym.imp.MSVCRT.dll_isdigit)(*param_1);\n        if (iVar1 == 0) break;\n        param_1 = param_1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 100
    },
    "0040ffbc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ffbc(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *0x425290;\n    iVar3 = 0;\n    iVar2 = *param_1;\n    while (iVar2 != 0) {\n        iVar2 = fcn.0040fb6d();\n        if (iVar2 == iVar1) {\n            iVar3 = iVar3 + 1;\n        }\n        param_1 = param_1[1];\n        iVar2 = *param_1;\n    }\n    return iVar3;\n}\n",
        "token_count": 143
    },
    "0040125b": {
        "rules": [
            "get file size"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040125b(uint *param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_GetFileSize)(*param_1, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040d476": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nint32_t * fcn.0040d476(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t *extraout_ECX;\n    int32_t *piVar5;\n    char *pcVar6;\n    uint *puVar7;\n    uint var_100dh;\n    uint uStack140;\n    uint *puStack136;\n    int32_t iStack132;\n    char *pcStack128;\n    int32_t *piStack124;\n    char *pcStack120;\n    int32_t *piStack116;\n    char *pcStack112;\n    int32_t *piStack108;\n    char *pcStack104;\n    int32_t *piStack100;\n    char *pcStack96;\n    int32_t *piStack92;\n    char *pcStack88;\n    int32_t *piStack84;\n    char *pcStack80;\n    int32_t *piStack76;\n    char *pcStack72;\n    int32_t *piStack68;\n    char *pcStack64;\n    int32_t *piStack60;\n    char *pcStack56;\n    int32_t *piStack52;\n    char *pcStack48;\n    int32_t *piStack44;\n    char *pcStack40;\n    int32_t *piStack36;\n    char *pcStack32;\n    int32_t *piStack28;\n    char *pcStack24;\n    char *pcStack20;\n    \n    fcn.004123b0();\n    extraout_ECX[0x14] = 0;\n    pcStack20 = \"gssapi32\";\n    extraout_ECX[0x10] = 1;\n    extraout_ECX[0x12] = 0x1448;\n    pcStack24 = 0x40d4a4;\n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    *extraout_ECX = iVar2;\n    if (iVar2 == 0) {\n        pcStack24 = 0x40d4b1;\n        fcn.0040ca3b();\n        pcStack24 = 0x40d4bc;\n        puVar3 = fcn.0040c8ee();\n        puVar7 = &fcn.0040d476::var_100dh;\n        for (iVar2 = 0x403; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar7 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        piVar5 = puVar3 + 1;\n        *puVar7 = *puVar3;\n        pcStack24 = 0x41a294;\n    }\n    else {\n        extraout_ECX[0x14] = 1;\n        pcVar6 = \"gss_import_name\";\n        pcStack24 = \"gss_import_name\";\n        piStack28 = extraout_ECX + 3;\n        pcStack32 = 0x40d4e8;\n        iVar2 = fcn.0040c9a4();\n        if (iVar2 != 0) {\n            pcVar6 = \"gss_display_name\";\n            pcStack32 = \"gss_display_name\";\n            piStack36 = extraout_ECX + 4;\n            pcStack40 = 0x40d528;\n            iVar2 = fcn.0040c9a4();\n            if (iVar2 != 0) {\n                pcVar6 = \"gss_init_sec_context\";\n                pcStack40 = \"gss_init_sec_context\";\n                piStack44 = extraout_ECX + 6;\n                pcStack48 = 0x40d53d;\n                iVar2 = fcn.0040c9a4();\n                if (iVar2 != 0) {\n                    pcVar6 = \"gss_release_name\";\n                    pcStack48 = \"gss_release_name\";\n                    piStack52 = extraout_ECX + 7;\n                    pcStack56 = 0x40d552;\n                    iVar2 = fcn.0040c9a4();\n                    if (iVar2 != 0) {\n                        pcVar6 = \"gss_unwrap\";\n                        pcStack56 = \"gss_unwrap\";\n                        piStack60 = extraout_ECX + 8;\n                        pcStack64 = 0x40d567;\n                        iVar2 = fcn.0040c9a4();\n                        if (iVar2 != 0) {\n                            pcVar6 = \"gss_wrap\";\n                            pcStack64 = \"gss_wrap\";\n                            piStack68 = extraout_ECX + 9;\n                            pcStack72 = 0x40d57c;\n                            iVar2 = fcn.0040c9a4();\n                            if (iVar2 != 0) {\n                                pcVar6 = \"gss_wrap_size_limit\";\n                                pcStack72 = \"gss_wrap_size_limit\";\n                                piStack76 = extraout_ECX + 10;\n                                pcStack80 = 0x40d595;\n                                iVar2 = fcn.0040c9a4();\n                                if (iVar2 != 0) {\n                                    pcVar6 = \"gss_delete_sec_context\";\n                                    pcStack80 = \"gss_delete_sec_context\";\n                                    piStack84 = extraout_ECX + 0xb;\n                                    pcStack88 = 0x40d5ae;\n                                    iVar2 = fcn.0040c9a4();\n                                    if (iVar2 != 0) {\n                                        pcVar6 = \"gss_display_status\";\n                                        pcStack88 = \"gss_display_status\";\n                                        piStack92 = extraout_ECX + 0xc;\n                                        pcStack96 = 0x40d5c7;\n                                        iVar2 = fcn.0040c9a4();\n                                        if (iVar2 != 0) {\n                                            pcVar6 = \"gss_indicate_mechs\";\n                                            pcStack96 = \"gss_indicate_mechs\";\n                                            piStack100 = extraout_ECX + 0xd;\n                                            pcStack104 = 0x40d5e0;\n                                            iVar2 = fcn.0040c9a4();\n                                            if (iVar2 != 0) {\n                                                pcVar6 = \"gss_oid_to_str\";\n                                                pcStack104 = \"gss_oid_to_str\";\n                                                piStack108 = extraout_ECX + 0xe;\n                                                pcStack112 = 0x40d5f9;\n                                                iVar2 = fcn.0040c9a4();\n                                                if (iVar2 != 0) {\n                                                    pcVar6 = \"gss_release_buffer\";\n                                                    pcStack112 = \"gss_release_buffer\";\n                                                    piStack116 = extraout_ECX + 5;\n                                                    pcStack120 = 0x40d612;\n                                                    iVar2 = fcn.0040c9a4();\n                                                    if (iVar2 != 0) {\n                                                        pcVar6 = \"gss_release_oid_set\";\n                                                        pcStack120 = \"gss_release_oid_set\";\n                                                        piStack124 = extraout_ECX + 0xf;\n                                                        pcStack128 = 0x40d62b;\n                                                        iVar2 = fcn.0040c9a4();\n                                                        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                                                        if (iVar2 != 0) {\n                                                            pcStack128 = \"GSS_C_NT_HOSTBASED_SERVICE\";\n                                                            iStack132 = *extraout_ECX;\n                                                            puStack136 = 0x40d645;\n                                                            iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n                                                            extraout_ECX[1] = iVar2;\n                                                            if (iVar2 == 0) {\n                                                                pcStack128 = \"gss_nt_service_name\";\n                                                                iStack132 = *extraout_ECX;\n                                                                puStack136 = 0x40d656;\n                                                                iVar2 = (*pcVar1)();\n                                                                extraout_ECX[1] = iVar2;\n                                                            }\n                                                            piVar4 = extraout_ECX[1];\n                                                            piVar5 = extraout_ECX;\n                                                            if (piVar4 != NULL) goto code_r0x0040d694;\n                                                            pcStack128 = 0x40d667;\n                                                            fcn.0040ca3b();\n                                                            pcStack128 = \"gss_nt_service_name\";\n                                                            iStack132 = 0x40d673;\n                                                            puVar3 = fcn.0040c929();\n                                                            puVar7 = &fcn.0040d476::var_100dh;\n                                                            for (iVar2 = 0x403; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                                                *puVar7 = *puVar3;\n                                                                puVar3 = puVar3 + 1;\n                                                                puVar7 = puVar7 + 1;\n                                                            }\n                                                            piVar5 = puVar3 + 1;\n                                                            *puVar7 = *puVar3;\n                                                            iStack132 = 0x41a274;\n                                                            goto code_r0x0040d688;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        pcStack128 = 0x40d4f3;\n        fcn.0040ca3b();\n        iStack132 = 0x40d4ff;\n        pcStack128 = pcVar6;\n        puVar3 = fcn.0040c8ff();\n        puVar7 = &fcn.0040d476::var_100dh;\n        for (iVar2 = 0x403; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar7 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        piVar5 = puVar3 + 1;\n        *puVar7 = *puVar3;\n        iStack132 = 0x41a284;\n    }\ncode_r0x0040d688:\n    puStack136 = &fcn.0040d476::var_100dh;\n    uStack140 = 0x40d694;\n    piVar4 = sub.MSVCRT.dll__CxxThrowException();\ncode_r0x0040d694:\n    piVar5[2] = *piVar4;\n    piVar5[0x14] = 2;\n    return piVar5;\n}\n",
        "token_count": 2264
    }
}